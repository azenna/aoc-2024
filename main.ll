; ModuleID = 'app'
source_filename = "builtins-host"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-musl"

%str.RocStr = type { ptr, i64, i64 }
%fmt.FormatOptions = type { { i64, i8, [7 x i8] }, { i64, i8, [7 x i8] }, i2, i8, [6 x i8] }
%list.RocList = type { ptr, i64, i64 }
%str.FromUtf8Result = type { i64, %str.RocStr, i1, i8, [6 x i8] }
%"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))" = type { ptr }
%"io.fixed_buffer_stream.FixedBufferStream([]u8)" = type { { ptr, i64 }, i64 }

@0 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 -4, [1 x i8] undef }, align 4
@1 = private unnamed_addr constant { i64, i16, [6 x i8] } { i64 undef, i16 21, [6 x i8] undef }, align 8
@sort.fluxsort__anon_13238 = internal unnamed_addr constant [51 x i8] c"Out of memory while trying to allocate for sorting\00", align 1
@2 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 1, [1 x i8] undef }, align 4
@3 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 2, [1 x i8] undef }, align 4
@4 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 3, [1 x i8] undef }, align 4
@fmt.digits2__anon_13915 = internal unnamed_addr constant [201 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\00", align 1
@5 = private unnamed_addr constant %str.RocStr { ptr null, i64 0, i64 -9223372036854775808 }, align 8
@6 = private unnamed_addr constant %fmt.FormatOptions { { i64, i8, [7 x i8] } { i64 undef, i8 0, [7 x i8] undef }, { i64, i8, [7 x i8] } { i64 undef, i8 0, [7 x i8] undef }, i2 -2, i8 32, [6 x i8] undef }, align 8
@_str_literal_13132936432349333104 = private unnamed_addr constant [121 x i8] c"\00\00\00\00\00\00\00\00Unexpected problem while turning a List U8 (that was originally a Str) back into a Str. This should never happen!", align 8
@_str_literal_5235305213309790423 = private unnamed_addr constant [35 x i8] c"\00\00\00\00\00\00\00\00ErrorKind::PermissionDenied", align 8
@_str_literal_3867905241449124926 = private unnamed_addr constant [39 x i8] c"\00\00\00\00\00\00\00\00Program exited with error:\0A    ", align 8
@_str_literal_3894810976106795109 = private unnamed_addr constant [177 x i8] c"\00\00\00\00\00\00\00\00\0A\0ATip: If you do not want to exit on this error, use `Task.mapErr` to handle the error.\0ADocs for `Task.mapErr`: <https://www.roc-lang.org/packages/basic-cli/Task#mapErr>", align 8
@_str_literal_5625337945828202030 = private unnamed_addr constant [42 x i8] c"\00\00\00\00\00\00\00\00Integer multiplication overflowed!", align 8
@_str_literal_5104587640597849084 = private unnamed_addr constant [54 x i8] c"\00\00\00\00\00\00\00\00Expected a digit from 0-9 but input was empty.", align 8
@_str_literal_17866228036559237274 = private unnamed_addr constant [39 x i8] c"\00\00\00\00\00\00\00\00 elements. Unable to grow more.", align 8
@_str_literal_14773762520492002118 = private unnamed_addr constant [81 x i8] c"\00\00\00\00\00\00\00\00a Lambda Set is empty. Most likely there is a type error in your program.", align 8

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #0

; Function Attrs: noreturn nounwind uwtable
define private fastcc void @panic.panic_help(ptr nocapture nonnull readonly align 1 %0, i64 %1) unnamed_addr #1 {
  %3 = alloca %str.RocStr, align 8
  call fastcc void @str.RocStr.init(ptr noalias %3, ptr nonnull readonly align 1 %0, i64 %1)
  call void @roc_panic(ptr nonnull readonly align 8 %3, i32 0)
  unreachable
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i128, i1 } @llvm.smul.with.overflow.i128(i128, i128) #3

; Function Attrs: nounwind uwtable
define private fastcc void @str.RocStr.init(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 1 %1, i64 %2) unnamed_addr #4 {
  %const = bitcast i64 -9223372036854775808 to i64
  %4 = alloca %str.RocStr, align 8
  %5 = icmp ugt i64 %2, 23
  br i1 %5, label %str.RocStr.allocate.exit, label %str.RocStr.allocate.exit.thread

str.RocStr.allocate.exit.thread:                  ; preds = %3
  %6 = shl nuw nsw i64 %2, 56
  %.sroa.3.23.insert.shift = or i64 %6, %const
  br label %str.RocStr.asU8ptrMut.exit

str.RocStr.allocate.exit:                         ; preds = %3
  %7 = tail call i64 @llvm.umax.i64(i64 %2, i64 64)
  %8 = add nuw i64 %7, 8
  %9 = tail call ptr @roc_alloc(i64 %8, i32 8), !noalias !3
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %const, ptr %9, align 8, !noalias !3
  %11 = icmp slt i64 %7, 0
  %spec.select = select i1 %11, ptr %4, ptr %10
  br label %str.RocStr.asU8ptrMut.exit

str.RocStr.asU8ptrMut.exit:                       ; preds = %str.RocStr.allocate.exit, %str.RocStr.allocate.exit.thread
  %.sink7 = phi ptr [ %10, %str.RocStr.allocate.exit ], [ null, %str.RocStr.allocate.exit.thread ]
  %.sink = phi i64 [ %2, %str.RocStr.allocate.exit ], [ 0, %str.RocStr.allocate.exit.thread ]
  %.sroa.3.23.insert.shift.sink = phi i64 [ %7, %str.RocStr.allocate.exit ], [ %.sroa.3.23.insert.shift, %str.RocStr.allocate.exit.thread ]
  %common.ret.op.i = phi ptr [ %spec.select, %str.RocStr.allocate.exit ], [ %4, %str.RocStr.allocate.exit.thread ]
  store ptr %.sink7, ptr %4, align 8
  %12 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %.sink, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %4, i64 16
  store i64 %.sroa.3.23.insert.shift.sink, ptr %13, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %common.ret.op.i, ptr nonnull align 1 %1, i64 %2, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.uadd.sat.i64(i64, i64) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #3

; Function Attrs: nounwind uwtable
define private fastcc void @sort.fluxsort(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i1 %4, ptr nonnull readonly align 1 %5, i64 %6, i32 %7, ptr nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = alloca [96 x i8], align 8
  %11 = alloca [96 x i8], align 8
  %12 = alloca [96 x i8], align 8
  %13 = alloca [96 x i8], align 8
  %14 = alloca [96 x i8], align 8
  %15 = alloca [96 x i8], align 8
  %16 = alloca [96 x i8], align 8
  %17 = alloca [96 x i8], align 8
  %18 = alloca [96 x i8], align 8
  %19 = alloca [96 x i8], align 8
  %20 = alloca [96 x i8], align 8
  %21 = alloca [96 x i8], align 8
  %22 = alloca [96 x i8], align 8
  %23 = alloca [96 x i8], align 8
  %24 = alloca [96 x i8], align 8
  %25 = alloca [96 x i8], align 8
  %26 = alloca [96 x i8], align 8
  %27 = alloca [96 x i8], align 8
  %28 = alloca [96 x i8], align 8
  %29 = alloca [96 x i8], align 8
  %30 = alloca [96 x i8], align 8
  %31 = alloca [96 x i8], align 8
  %32 = alloca [96 x i8], align 8
  %33 = alloca [96 x i8], align 8
  %34 = alloca [96 x i8], align 8
  %35 = alloca [96 x i8], align 8
  %36 = alloca [96 x i8], align 8
  %37 = alloca [96 x i8], align 8
  %38 = alloca [96 x i8], align 8
  %39 = alloca [96 x i8], align 8
  %40 = alloca [96 x i8], align 8
  %41 = alloca [96 x i8], align 8
  %42 = alloca [96 x i8], align 8
  %43 = alloca [96 x i8], align 8
  %44 = alloca [96 x i8], align 8
  %45 = alloca [96 x i8], align 8
  %46 = alloca [96 x i8], align 8
  %47 = alloca [96 x i8], align 8
  %48 = alloca [96 x i8], align 8
  %49 = alloca [96 x i8], align 8
  %50 = alloca [96 x i8], align 8
  %51 = alloca [96 x i8], align 8
  %52 = alloca [96 x i8], align 8
  %53 = alloca [96 x i8], align 8
  %54 = alloca [96 x i8], align 8
  %55 = alloca [96 x i8], align 8
  %56 = alloca [96 x i8], align 8
  %57 = alloca [96 x i8], align 8
  %58 = icmp ult i64 %1, 132
  br i1 %58, label %59, label %87

sort.quadsort.exit:                               ; preds = %sort.flux_analyze__anon_13922.exit.i, %sort.flux_analyze__anon_13921.exit.i
  ret void

59:                                               ; preds = %9
  %60 = icmp ult i64 %6, 97
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  br i1 %4, label %70, label %71

62:                                               ; preds = %59
  %63 = shl nuw nsw i64 %1, 3
  %64 = tail call ptr @roc_alloc(i64 %63, i32 8)
  %.not.i = icmp eq ptr %64, null
  br i1 %.not.i, label %72, label %.preheader13.i

.preheader13.i:                                   ; preds = %62
  %.not18.i = icmp eq i64 %1, 0
  br i1 %.not18.i, label %._crit_edge.i, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %.preheader13.i
  %65 = add i64 %1, -1
  %xtraiter2633 = and i64 %1, 3
  %66 = icmp ult i64 %65, 3
  br i1 %66, label %._crit_edge.i.loopexit.unr-lcssa, label %.lr.ph.i.preheader.new

.lr.ph.i.preheader.new:                           ; preds = %.lr.ph.i.preheader
  %unroll_iter2636 = and i64 %1, -4
  %67 = shl i64 %6, 1
  %68 = shl i64 %6, 2
  %69 = mul i64 %6, 3
  br label %.lr.ph.i

70:                                               ; preds = %61
  tail call fastcc void @sort.quadsort_direct__anon_13917(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  ret void

71:                                               ; preds = %61
  tail call fastcc void @sort.quadsort_direct__anon_13918(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 1 %8)
  ret void

72:                                               ; preds = %62
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13238, i64 50)
  unreachable

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader.new
  %lsr.iv2772 = phi ptr [ %uglygep2773, %.lr.ph.i ], [ %0, %.lr.ph.i.preheader.new ]
  %.0714.i = phi i64 [ 0, %.lr.ph.i.preheader.new ], [ %73, %.lr.ph.i ]
  %sunkaddr = mul i64 %.0714.i, 8
  %sunkaddr3506 = getelementptr i8, ptr %64, i64 %sunkaddr
  store ptr %lsr.iv2772, ptr %sunkaddr3506, align 8
  %uglygep2775 = getelementptr i8, ptr %lsr.iv2772, i64 %6
  %sunkaddr3507 = mul i64 %.0714.i, 8
  %sunkaddr3508 = getelementptr i8, ptr %64, i64 %sunkaddr3507
  %sunkaddr3509 = getelementptr i8, ptr %sunkaddr3508, i64 8
  store ptr %uglygep2775, ptr %sunkaddr3509, align 8
  %uglygep2774 = getelementptr i8, ptr %lsr.iv2772, i64 %67
  %sunkaddr3510 = mul i64 %.0714.i, 8
  %sunkaddr3511 = getelementptr i8, ptr %64, i64 %sunkaddr3510
  %sunkaddr3512 = getelementptr i8, ptr %sunkaddr3511, i64 16
  store ptr %uglygep2774, ptr %sunkaddr3512, align 8
  %uglygep2776 = getelementptr i8, ptr %lsr.iv2772, i64 %69
  %sunkaddr3513 = mul i64 %.0714.i, 8
  %sunkaddr3514 = getelementptr i8, ptr %64, i64 %sunkaddr3513
  %sunkaddr3515 = getelementptr i8, ptr %sunkaddr3514, i64 24
  store ptr %uglygep2776, ptr %sunkaddr3515, align 8
  %73 = add nuw i64 %.0714.i, 4
  %uglygep2773 = getelementptr i8, ptr %lsr.iv2772, i64 %68
  %niter2637.ncmp.3 = icmp eq i64 %unroll_iter2636, %73
  br i1 %niter2637.ncmp.3, label %._crit_edge.i.loopexit.unr-lcssa, label %.lr.ph.i

._crit_edge.i.loopexit.unr-lcssa:                 ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %.0714.i.unr = phi i64 [ 0, %.lr.ph.i.preheader ], [ %73, %.lr.ph.i ]
  %lcmp.mod2635.not = icmp eq i64 %xtraiter2633, 0
  br i1 %lcmp.mod2635.not, label %._crit_edge.i, label %.lr.ph.i.epil.preheader

.lr.ph.i.epil.preheader:                          ; preds = %._crit_edge.i.loopexit.unr-lcssa
  %74 = mul i64 %.0714.i.unr, %6
  %uglygep2759 = getelementptr i8, ptr %0, i64 %74
  %75 = shl i64 %.0714.i.unr, 3
  %uglygep2762 = getelementptr i8, ptr %64, i64 %75
  br label %.lr.ph.i.epil

.lr.ph.i.epil:                                    ; preds = %.lr.ph.i.epil, %.lr.ph.i.epil.preheader
  %lsr.iv2760 = phi ptr [ %uglygep2759, %.lr.ph.i.epil.preheader ], [ %uglygep2761, %.lr.ph.i.epil ]
  %epil.iter2634 = phi i64 [ %epil.iter2634.next, %.lr.ph.i.epil ], [ 0, %.lr.ph.i.epil.preheader ]
  %76 = shl nuw nsw i64 %epil.iter2634, 3
  %uglygep2763 = getelementptr i8, ptr %uglygep2762, i64 %76
  store ptr %lsr.iv2760, ptr %uglygep2763, align 8
  %epil.iter2634.next = add i64 %epil.iter2634, 1
  %uglygep2761 = getelementptr i8, ptr %lsr.iv2760, i64 %6
  %epil.iter2634.cmp.not = icmp eq i64 %xtraiter2633, %epil.iter2634.next
  br i1 %epil.iter2634.cmp.not, label %._crit_edge.i, label %.lr.ph.i.epil, !llvm.loop !8

._crit_edge.i:                                    ; preds = %.lr.ph.i.epil, %._crit_edge.i.loopexit.unr-lcssa, %.preheader13.i
  br i1 %4, label %81, label %82

77:                                               ; preds = %82, %81
  %78 = mul nuw i64 %6, %1
  %79 = tail call ptr @roc_alloc(i64 %78, i32 %7)
  %.not12.i = icmp eq ptr %79, null
  br i1 %.not12.i, label %83, label %.preheader.i

.preheader.i:                                     ; preds = %77
  %80 = icmp eq i64 %1, 0
  br i1 %80, label %._crit_edge17.i, label %.lr.ph16.i.preheader

.lr.ph16.i.preheader:                             ; preds = %.preheader.i
  br label %.lr.ph16.i

81:                                               ; preds = %._crit_edge.i
  tail call fastcc void @sort.quadsort_direct__anon_13919(ptr nonnull align 1 %64, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %77

82:                                               ; preds = %._crit_edge.i
  tail call fastcc void @sort.quadsort_direct__anon_13920(ptr nonnull align 1 %64, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %77

83:                                               ; preds = %77
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13238, i64 50)
  unreachable

.lr.ph16.i:                                       ; preds = %.lr.ph16.i, %.lr.ph16.i.preheader
  %lsr.iv = phi ptr [ %79, %.lr.ph16.i.preheader ], [ %uglygep2758, %.lr.ph16.i ]
  %.015.i = phi i64 [ %86, %.lr.ph16.i ], [ 0, %.lr.ph16.i.preheader ]
  %84 = shl i64 %.015.i, 3
  %uglygep2757 = getelementptr i8, ptr %64, i64 %84
  %85 = load ptr, ptr %uglygep2757, align 8
  tail call void %8(ptr nonnull align 1 %lsr.iv, ptr align 1 %85) #18
  %86 = add nuw i64 %.015.i, 1
  %uglygep2758 = getelementptr i8, ptr %lsr.iv, i64 %6
  %exitcond20.not.i = icmp eq i64 %1, %86
  br i1 %exitcond20.not.i, label %._crit_edge17.i, label %.lr.ph16.i

._crit_edge17.i:                                  ; preds = %.lr.ph16.i, %.preheader.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %79, i64 %78, i1 false)
  tail call void @roc_dealloc(ptr nonnull align 1 %79, i32 %7)
  tail call void @roc_dealloc(ptr nonnull align 1 %64, i32 8)
  ret void

87:                                               ; preds = %9
  %88 = icmp ult i64 %6, 97
  br i1 %88, label %89, label %92

89:                                               ; preds = %87
  %90 = mul nuw i64 %6, %1
  %91 = tail call ptr @roc_alloc(i64 %90, i32 %7)
  br i1 %4, label %100, label %939

92:                                               ; preds = %87
  %93 = shl nuw i64 %1, 3
  %94 = tail call ptr @roc_alloc(i64 %93, i32 8)
  %.not = icmp eq ptr %94, null
  br i1 %.not, label %1775, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %92
  %95 = add i64 %1, -1
  %xtraiter = and i64 %1, 3
  %96 = icmp ult i64 %95, 3
  br i1 %96, label %._crit_edge.unr-lcssa, label %.lr.ph.preheader.new

.lr.ph.preheader.new:                             ; preds = %.lr.ph.preheader
  %unroll_iter = and i64 %1, -4
  %97 = shl i64 %6, 1
  %98 = shl i64 %6, 2
  %99 = mul i64 %6, 3
  br label %.lr.ph

100:                                              ; preds = %89
  %101 = icmp eq ptr %91, null
  br i1 %101, label %938, label %102

102:                                              ; preds = %100
  %103 = lshr i64 %1, 1
  %104 = lshr i64 %1, 2
  %105 = sub nuw nsw i64 %103, %104
  %106 = sub nuw i64 %1, %103
  %107 = lshr i64 %106, 1
  %108 = sub nuw i64 %106, %107
  %109 = mul nuw i64 %104, %6
  %110 = getelementptr inbounds i8, ptr %0, i64 %109
  %111 = mul nuw i64 %103, %6
  %112 = getelementptr inbounds i8, ptr %0, i64 %111
  %113 = add nuw i64 %107, %103
  %114 = mul nuw i64 %113, %6
  %115 = getelementptr inbounds i8, ptr %0, i64 %114
  %116 = icmp ult i64 %104, %105
  br i1 %116, label %119, label %117

117:                                              ; preds = %119, %102
  %.0236.i.i = phi i64 [ %123, %119 ], [ 0, %102 ]
  %.0212.i.i = phi ptr [ %120, %119 ], [ %110, %102 ]
  %118 = icmp ult i64 %104, %107
  br i1 %118, label %126, label %124

119:                                              ; preds = %102
  %120 = getelementptr inbounds i8, ptr %110, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #18
  %121 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %110, ptr nonnull align 1 %120) #18
  %122 = icmp eq i8 %121, 1
  %123 = zext i1 %122 to i64
  br label %117

124:                                              ; preds = %126, %117
  %.0243.i.i = phi i64 [ %130, %126 ], [ 0, %117 ]
  %.0216.i.i = phi ptr [ %127, %126 ], [ %112, %117 ]
  %125 = icmp ult i64 %104, %108
  br i1 %125, label %134, label %131

126:                                              ; preds = %117
  %127 = getelementptr inbounds i8, ptr %112, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #18
  %128 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %112, ptr nonnull align 1 %127) #18
  %129 = icmp eq i8 %128, 1
  %130 = zext i1 %129 to i64
  br label %124

131:                                              ; preds = %134, %124
  %.0250.i.i = phi i64 [ %138, %134 ], [ 0, %124 ]
  %.0221.i.i = phi ptr [ %135, %134 ], [ %115, %124 ]
  %132 = icmp ugt i64 %1, 132
  br i1 %132, label %.lr.ph.i.i, label %.lr.ph507.preheader.i.i

.lr.ph.i.i:                                       ; preds = %131
  %133 = mul i64 %6, 96
  br label %139

134:                                              ; preds = %124
  %135 = getelementptr inbounds i8, ptr %115, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #18
  %136 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %115, ptr nonnull align 1 %135) #18
  %137 = icmp eq i8 %136, 1
  %138 = zext i1 %137 to i64
  br label %131

139:                                              ; preds = %.critedge.i.i, %.lr.ph.i.i
  %.0484.i.i = phi ptr [ %0, %.lr.ph.i.i ], [ %.2.i.i, %.critedge.i.i ]
  %.1213483.i.i = phi ptr [ %.0212.i.i, %.lr.ph.i.i ], [ %.3215.i.i, %.critedge.i.i ]
  %.1217482.i.i = phi ptr [ %.0216.i.i, %.lr.ph.i.i ], [ %.3219.i.i, %.critedge.i.i ]
  %.1222481.i.i = phi ptr [ %.0221.i.i, %.lr.ph.i.i ], [ %.3224.i.i, %.critedge.i.i ]
  %.0226480.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %164, %.critedge.i.i ]
  %.0227479.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %170, %.critedge.i.i ]
  %.0228478.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %176, %.critedge.i.i ]
  %.0229477.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %182, %.critedge.i.i ]
  %.0230476.i.i = phi i64 [ 0, %.lr.ph.i.i ], [ %.1231.i.i, %.critedge.i.i ]
  %.1237475.i.i = phi i64 [ %.0236.i.i, %.lr.ph.i.i ], [ %.2238.i.i, %.critedge.i.i ]
  %.1244474.i.i = phi i64 [ %.0243.i.i, %.lr.ph.i.i ], [ %.2245.i.i, %.critedge.i.i ]
  %.1251473.i.i = phi i64 [ %.0250.i.i, %.lr.ph.i.i ], [ %.2252.i.i, %.critedge.i.i ]
  %.0256472.i.i = phi i64 [ %1, %.lr.ph.i.i ], [ %184, %.critedge.i.i ]
  tail call void %5(ptr align 1 %3, i64 128) #18
  %uglygep2783 = getelementptr i8, ptr %.0484.i.i, i64 %6
  %uglygep2789 = getelementptr i8, ptr %.1213483.i.i, i64 %6
  %uglygep2795 = getelementptr i8, ptr %.1217482.i.i, i64 %6
  %uglygep2801 = getelementptr i8, ptr %.1222481.i.i, i64 %6
  br label %141

._crit_edge.i.i:                                  ; preds = %.critedge.i.i
  %140 = icmp ugt i64 %184, 7
  br i1 %140, label %.lr.ph507.preheader.i.i, label %._crit_edge508.i.i

141:                                              ; preds = %141, %139
  %lsr.iv2803 = phi i64 [ %lsr.iv.next2804, %141 ], [ 32, %139 ]
  %lsr.iv2777 = phi i64 [ %lsr.iv.next, %141 ], [ 0, %139 ]
  %.0259467.i.i = phi i8 [ 0, %139 ], [ %145, %141 ]
  %.0260466.i.i = phi i8 [ 0, %139 ], [ %149, %141 ]
  %.0261465.i.i = phi i8 [ 0, %139 ], [ %153, %141 ]
  %.0262464.i.i = phi i8 [ 0, %139 ], [ %157, %141 ]
  %uglygep2778 = getelementptr i8, ptr %.0484.i.i, i64 %lsr.iv2777
  %uglygep2785 = getelementptr i8, ptr %.1213483.i.i, i64 %lsr.iv2777
  %uglygep2791 = getelementptr i8, ptr %.1217482.i.i, i64 %lsr.iv2777
  %uglygep2797 = getelementptr i8, ptr %.1222481.i.i, i64 %lsr.iv2777
  %uglygep2784 = getelementptr i8, ptr %uglygep2783, i64 %lsr.iv2777
  %142 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2778, ptr align 1 %uglygep2784) #18
  %143 = icmp eq i8 %142, 1
  %144 = zext i1 %143 to i8
  %145 = add nuw i8 %.0259467.i.i, %144
  %uglygep2790 = getelementptr i8, ptr %uglygep2789, i64 %lsr.iv2777
  %146 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2785, ptr align 1 %uglygep2790) #18
  %147 = icmp eq i8 %146, 1
  %148 = zext i1 %147 to i8
  %149 = add nuw i8 %.0260466.i.i, %148
  %uglygep2796 = getelementptr i8, ptr %uglygep2795, i64 %lsr.iv2777
  %150 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2791, ptr align 1 %uglygep2796) #18
  %151 = icmp eq i8 %150, 1
  %152 = zext i1 %151 to i8
  %153 = add nuw i8 %.0261465.i.i, %152
  %uglygep2802 = getelementptr i8, ptr %uglygep2801, i64 %lsr.iv2777
  %154 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2797, ptr align 1 %uglygep2802) #18
  %155 = icmp eq i8 %154, 1
  %156 = zext i1 %155 to i8
  %157 = add nuw i8 %.0262464.i.i, %156
  %lsr.iv.next = add i64 %lsr.iv2777, %6
  %lsr.iv.next2804 = add nsw i64 %lsr.iv2803, -1
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next2804, 0
  br i1 %exitcond.not.i.i, label %158, label %141

158:                                              ; preds = %141
  %159 = zext i8 %145 to i64
  %160 = add nuw i64 %.0230476.i.i, %159
  %161 = and i8 %145, -33
  %162 = icmp eq i8 %161, 0
  %163 = zext i1 %162 to i32
  %164 = add nuw i32 %.0226480.i.i, %163
  %165 = zext i8 %149 to i64
  %166 = add nuw i64 %.1237475.i.i, %165
  %167 = and i8 %149, -33
  %168 = icmp eq i8 %167, 0
  %169 = zext i1 %168 to i32
  %170 = add nuw i32 %.0227479.i.i, %169
  %171 = zext i8 %153 to i64
  %172 = add nuw i64 %.1244474.i.i, %171
  %173 = and i8 %153, -33
  %174 = icmp eq i8 %173, 0
  %175 = zext i1 %174 to i32
  %176 = add nuw i32 %.0228478.i.i, %175
  %177 = zext i8 %157 to i64
  %178 = add nuw i64 %.1251473.i.i, %177
  %179 = and i8 %157, -33
  %180 = icmp eq i8 %179, 0
  %181 = zext i1 %180 to i32
  %182 = add nuw i32 %.0229477.i.i, %181
  %183 = icmp ugt i64 %.0256472.i.i, 516
  %uglygep2779 = getelementptr i8, ptr %.0484.i.i, i64 %lsr.iv.next
  %uglygep2786 = getelementptr i8, ptr %.1213483.i.i, i64 %lsr.iv.next
  %uglygep2792 = getelementptr i8, ptr %.1217482.i.i, i64 %lsr.iv.next
  %uglygep2798 = getelementptr i8, ptr %.1222481.i.i, i64 %lsr.iv.next
  br i1 %183, label %186, label %.critedge.i.i

.critedge.i.i:                                    ; preds = %201, %186, %158
  %.1257.i.i = phi i64 [ %206, %201 ], [ %.0256472.i.i, %158 ], [ %.0256472.i.i, %186 ]
  %.2252.i.i = phi i64 [ %205, %201 ], [ %178, %158 ], [ %178, %186 ]
  %.2245.i.i = phi i64 [ %204, %201 ], [ %172, %158 ], [ %172, %186 ]
  %.2238.i.i = phi i64 [ %203, %201 ], [ %166, %158 ], [ %166, %186 ]
  %.1231.i.i = phi i64 [ %202, %201 ], [ %160, %158 ], [ %160, %186 ]
  %.3224.i.i = phi ptr [ %uglygep2800, %201 ], [ %uglygep2798, %158 ], [ %uglygep2798, %186 ]
  %.3219.i.i = phi ptr [ %uglygep2794, %201 ], [ %uglygep2792, %158 ], [ %uglygep2792, %186 ]
  %.3215.i.i = phi ptr [ %uglygep2788, %201 ], [ %uglygep2786, %158 ], [ %uglygep2786, %186 ]
  %.2.i.i = phi ptr [ %uglygep2782, %201 ], [ %uglygep2779, %158 ], [ %uglygep2779, %186 ]
  %184 = add i64 %.1257.i.i, -128
  %185 = icmp ugt i64 %184, 132
  br i1 %185, label %139, label %._crit_edge.i.i

186:                                              ; preds = %158
  %187 = and i8 %157, -33
  %188 = icmp eq i8 %187, 0
  %189 = and i8 %153, -33
  %190 = icmp eq i8 %189, 0
  %191 = and i8 %149, -33
  %192 = icmp eq i8 %191, 0
  %193 = and i8 %145, -33
  %194 = icmp eq i8 %193, 0
  %.neg.i.i = sext i1 %188 to i8
  %195 = zext i1 %190 to i8
  %196 = zext i1 %192 to i8
  %197 = zext i1 %194 to i8
  %198 = add nuw nsw i8 %196, %197
  %199 = add nuw nsw i8 %198, %195
  %200 = icmp eq i8 %199, %.neg.i.i
  br i1 %200, label %201, label %.critedge.i.i

201:                                              ; preds = %186
  %202 = add nuw i64 %160, 48
  %uglygep2781 = getelementptr i8, ptr %.0484.i.i, i64 %133
  %uglygep2782 = getelementptr i8, ptr %uglygep2781, i64 %lsr.iv.next
  %203 = add nuw i64 %166, 48
  %uglygep2787 = getelementptr i8, ptr %.1213483.i.i, i64 %133
  %uglygep2788 = getelementptr i8, ptr %uglygep2787, i64 %lsr.iv.next
  %204 = add nuw i64 %172, 48
  %uglygep2793 = getelementptr i8, ptr %.1217482.i.i, i64 %133
  %uglygep2794 = getelementptr i8, ptr %uglygep2793, i64 %lsr.iv.next
  %205 = add nuw i64 %178, 48
  %uglygep2799 = getelementptr i8, ptr %.1222481.i.i, i64 %133
  %uglygep2800 = getelementptr i8, ptr %uglygep2799, i64 %lsr.iv.next
  %206 = add i64 %.0256472.i.i, -384
  br label %.critedge.i.i

.lr.ph507.preheader.i.i:                          ; preds = %._crit_edge.i.i, %131
  %.0.lcssa.i.i306 = phi ptr [ %.2.i.i, %._crit_edge.i.i ], [ %0, %131 ]
  %.1213.lcssa.i.i305 = phi ptr [ %.3215.i.i, %._crit_edge.i.i ], [ %.0212.i.i, %131 ]
  %.1217.lcssa.i.i304 = phi ptr [ %.3219.i.i, %._crit_edge.i.i ], [ %.0216.i.i, %131 ]
  %.1222.lcssa.i.i303 = phi ptr [ %.3224.i.i, %._crit_edge.i.i ], [ %.0221.i.i, %131 ]
  %.0226.lcssa.i.i302 = phi i32 [ %164, %._crit_edge.i.i ], [ 0, %131 ]
  %.0227.lcssa.i.i300 = phi i32 [ %170, %._crit_edge.i.i ], [ 0, %131 ]
  %.0228.lcssa.i.i298 = phi i32 [ %176, %._crit_edge.i.i ], [ 0, %131 ]
  %.0229.lcssa.i.i296 = phi i32 [ %182, %._crit_edge.i.i ], [ 0, %131 ]
  %.0230.lcssa.i.i294 = phi i64 [ %.1231.i.i, %._crit_edge.i.i ], [ 0, %131 ]
  %.1237.lcssa.i.i293 = phi i64 [ %.2238.i.i, %._crit_edge.i.i ], [ %.0236.i.i, %131 ]
  %.1244.lcssa.i.i292 = phi i64 [ %.2245.i.i, %._crit_edge.i.i ], [ %.0243.i.i, %131 ]
  %.1251.lcssa.i.i291 = phi i64 [ %.2252.i.i, %._crit_edge.i.i ], [ %.0250.i.i, %131 ]
  %.0256.lcssa.i.i290 = phi i64 [ %184, %._crit_edge.i.i ], [ 132, %131 ]
  %207 = and i64 %.0256.lcssa.i.i290, 252
  %208 = add nsw i64 %207, -4
  tail call void %5(ptr align 1 %3, i64 %208) #18
  br label %.lr.ph507.i.i

.lr.ph507.i.i:                                    ; preds = %.lr.ph507.i.i, %.lr.ph507.preheader.i.i
  %.3505.i.i = phi ptr [ %209, %.lr.ph507.i.i ], [ %.0.lcssa.i.i306, %.lr.ph507.preheader.i.i ]
  %.4504.i.i = phi ptr [ %214, %.lr.ph507.i.i ], [ %.1213.lcssa.i.i305, %.lr.ph507.preheader.i.i ]
  %.4220503.i.i = phi ptr [ %219, %.lr.ph507.i.i ], [ %.1217.lcssa.i.i304, %.lr.ph507.preheader.i.i ]
  %.4225502.i.i = phi ptr [ %224, %.lr.ph507.i.i ], [ %.1222.lcssa.i.i303, %.lr.ph507.preheader.i.i ]
  %.2232501.i.i = phi i64 [ %213, %.lr.ph507.i.i ], [ %.0230.lcssa.i.i294, %.lr.ph507.preheader.i.i ]
  %.3239500.i.i = phi i64 [ %218, %.lr.ph507.i.i ], [ %.1237.lcssa.i.i293, %.lr.ph507.preheader.i.i ]
  %.3246499.i.i = phi i64 [ %223, %.lr.ph507.i.i ], [ %.1244.lcssa.i.i292, %.lr.ph507.preheader.i.i ]
  %.3253498.i.i = phi i64 [ %228, %.lr.ph507.i.i ], [ %.1251.lcssa.i.i291, %.lr.ph507.preheader.i.i ]
  %.2258497.i.i = phi i64 [ %229, %.lr.ph507.i.i ], [ %.0256.lcssa.i.i290, %.lr.ph507.preheader.i.i ]
  %209 = getelementptr inbounds i8, ptr %.3505.i.i, i64 %6
  %210 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3505.i.i, ptr align 1 %209) #18
  %211 = icmp eq i8 %210, 1
  %212 = zext i1 %211 to i64
  %213 = add nuw i64 %.2232501.i.i, %212
  %214 = getelementptr inbounds i8, ptr %.4504.i.i, i64 %6
  %215 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4504.i.i, ptr align 1 %214) #18
  %216 = icmp eq i8 %215, 1
  %217 = zext i1 %216 to i64
  %218 = add nuw i64 %.3239500.i.i, %217
  %219 = getelementptr inbounds i8, ptr %.4220503.i.i, i64 %6
  %220 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4220503.i.i, ptr align 1 %219) #18
  %221 = icmp eq i8 %220, 1
  %222 = zext i1 %221 to i64
  %223 = add nuw i64 %.3246499.i.i, %222
  %224 = getelementptr inbounds i8, ptr %.4225502.i.i, i64 %6
  %225 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4225502.i.i, ptr align 1 %224) #18
  %226 = icmp eq i8 %225, 1
  %227 = zext i1 %226 to i64
  %228 = add nuw i64 %.3253498.i.i, %227
  %229 = add i64 %.2258497.i.i, -4
  %230 = icmp ugt i64 %229, 7
  br i1 %230, label %.lr.ph507.i.i, label %._crit_edge508.i.i

._crit_edge508.i.i:                               ; preds = %.lr.ph507.i.i, %._crit_edge.i.i
  %.0226.lcssa.i.i301 = phi i32 [ %164, %._crit_edge.i.i ], [ %.0226.lcssa.i.i302, %.lr.ph507.i.i ]
  %.0227.lcssa.i.i299 = phi i32 [ %170, %._crit_edge.i.i ], [ %.0227.lcssa.i.i300, %.lr.ph507.i.i ]
  %.0228.lcssa.i.i297 = phi i32 [ %176, %._crit_edge.i.i ], [ %.0228.lcssa.i.i298, %.lr.ph507.i.i ]
  %.0229.lcssa.i.i295 = phi i32 [ %182, %._crit_edge.i.i ], [ %.0229.lcssa.i.i296, %.lr.ph507.i.i ]
  %.3253.lcssa.i.i = phi i64 [ %.2252.i.i, %._crit_edge.i.i ], [ %228, %.lr.ph507.i.i ]
  %.3246.lcssa.i.i = phi i64 [ %.2245.i.i, %._crit_edge.i.i ], [ %223, %.lr.ph507.i.i ]
  %.3239.lcssa.i.i = phi i64 [ %.2238.i.i, %._crit_edge.i.i ], [ %218, %.lr.ph507.i.i ]
  %.2232.lcssa.i.i = phi i64 [ %.1231.i.i, %._crit_edge.i.i ], [ %213, %.lr.ph507.i.i ]
  %.4225.lcssa.i.i = phi ptr [ %.3224.i.i, %._crit_edge.i.i ], [ %224, %.lr.ph507.i.i ]
  %.4220.lcssa.i.i = phi ptr [ %.3219.i.i, %._crit_edge.i.i ], [ %219, %.lr.ph507.i.i ]
  %.4.lcssa.i.i = phi ptr [ %.3215.i.i, %._crit_edge.i.i ], [ %214, %.lr.ph507.i.i ]
  %.3.lcssa.i.i = phi ptr [ %.2.i.i, %._crit_edge.i.i ], [ %209, %.lr.ph507.i.i ]
  %231 = add i64 %.3239.lcssa.i.i, %.3246.lcssa.i.i
  %232 = add i64 %231, %.2232.lcssa.i.i
  %233 = sub i64 0, %.3253.lcssa.i.i
  %234 = icmp eq i64 %232, %233
  br i1 %234, label %243, label %.critedge2.i.i

.critedge2.i.i:                                   ; preds = %249, %246, %243, %._crit_edge508.i.i
  %235 = sub nuw i64 %104, %.2232.lcssa.i.i
  %236 = icmp eq i64 %235, 1
  %237 = sub nuw i64 %105, %.3239.lcssa.i.i
  %238 = icmp eq i64 %237, 1
  %239 = sub nuw i64 %107, %.3246.lcssa.i.i
  %240 = icmp eq i64 %239, 1
  %241 = sub nuw i64 %108, %.3253.lcssa.i.i
  %242 = icmp eq i64 %241, 1
  %..i.i = select i1 %236, i1 true, i1 %238
  %.5.i.i = select i1 %..i.i, i1 true, i1 %240
  %.6.i.i = select i1 %.5.i.i, i1 true, i1 %242
  br i1 %.6.i.i, label %267, label %252

243:                                              ; preds = %._crit_edge508.i.i
  %244 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #18
  %245 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i, ptr align 1 %244) #18
  %.not289.i.i = icmp eq i8 %245, 1
  br i1 %.not289.i.i, label %.critedge2.i.i, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #18
  %248 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i, ptr align 1 %247) #18
  %.not290.i.i = icmp eq i8 %248, 1
  br i1 %.not290.i.i, label %.critedge2.i.i, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #18
  %251 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4220.lcssa.i.i, ptr align 1 %250) #18
  %.not291.i.i = icmp eq i8 %251, 1
  br i1 %.not291.i.i, label %.critedge2.i.i, label %sort.flux_analyze__anon_13921.exit.i

252:                                              ; preds = %sort.quad_reversal.exit423.i.i, %.thread444.thread.i.i, %.thread444.thread.thread.i.i, %.critedge2.i.i
  %.4254.i.i = phi i64 [ 0, %sort.quad_reversal.exit423.i.i ], [ %.5255441450457.i.i, %.thread444.thread.i.i ], [ %.3253.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %.4247.i.i = phi i64 [ %.6249.i.i, %sort.quad_reversal.exit423.i.i ], [ %.6249.i.i, %.thread444.thread.i.i ], [ %.3246.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %.4240.i.i = phi i64 [ %.6242458.i.i, %sort.quad_reversal.exit423.i.i ], [ %.6242458.i.i, %.thread444.thread.i.i ], [ %.3239.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %.3233.i.i = phi i64 [ %.5235451456.i.i, %sort.quad_reversal.exit423.i.i ], [ %.5235451456.i.i, %.thread444.thread.i.i ], [ %.2232.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %253 = lshr i64 %1, 9
  %254 = zext i32 %.0226.lcssa.i.i301 to i64
  %255 = icmp ult i64 %253, %254
  %256 = zext i1 %255 to i4
  %257 = zext i32 %.0227.lcssa.i.i299 to i64
  %258 = icmp ult i64 %253, %257
  %259 = zext i1 %258 to i4
  %260 = zext i32 %.0228.lcssa.i.i297 to i64
  %261 = icmp ult i64 %253, %260
  %262 = zext i1 %261 to i4
  %263 = zext i32 %.0229.lcssa.i.i295 to i64
  %264 = icmp ult i64 %253, %263
  %265 = zext i1 %264 to i4
  %266 = icmp ugt i64 %1, 1048579
  br i1 %266, label %759, label %751

267:                                              ; preds = %.critedge2.i.i
  %268 = icmp eq i64 %241, 1
  %269 = icmp eq i64 %239, 1
  %270 = icmp eq i64 %237, 1
  %271 = icmp eq i64 %235, 1
  tail call void %5(ptr align 1 %3, i64 3) #18
  %.7.i.i = select i1 %271, i1 %270, i1 false
  %272 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %273 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i, ptr align 1 %272) #18
  %274 = icmp eq i8 %273, 1
  %275 = and i1 %.7.i.i, %274
  %276 = zext i1 %275 to i3
  %.8.i.i = select i1 %270, i1 %269, i1 false
  %277 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %278 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i, ptr align 1 %277) #18
  %279 = icmp eq i8 %278, 1
  %280 = and i1 %.8.i.i, %279
  %.9.i.i = select i1 %269, i1 %268, i1 false
  %281 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %282 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4220.lcssa.i.i, ptr align 1 %281) #18
  %283 = icmp eq i8 %282, 1
  %284 = and i1 %.9.i.i, %283
  %285 = select i1 %280, i3 2, i3 0
  %286 = or i3 %285, %276
  %287 = select i1 %284, i3 -4, i3 0
  %288 = or i3 %286, %287
  %289 = zext i3 %288 to i32
  switch i32 %289, label %294 [
    i32 0, label %290
    i32 1, label %295
    i32 2, label %332
    i32 3, label %370
    i32 4, label %407
    i32 5, label %445
    i32 6, label %518
    i32 7, label %556
  ]

290:                                              ; preds = %sort.quad_reversal.exit363.i.i, %sort.quad_reversal.exit327.i.i, %sort.quad_reversal.exit303.i.i, %267
  %.5255.i.i = phi i64 [ 0, %sort.quad_reversal.exit363.i.i ], [ 0, %sort.quad_reversal.exit327.i.i ], [ %.3253.lcssa.i.i, %sort.quad_reversal.exit303.i.i ], [ %.3253.lcssa.i.i, %267 ]
  %.5248.i.i = phi i64 [ 0, %sort.quad_reversal.exit363.i.i ], [ 0, %sort.quad_reversal.exit327.i.i ], [ 0, %sort.quad_reversal.exit303.i.i ], [ %.3246.lcssa.i.i, %267 ]
  %.5241.i.i = phi i64 [ 0, %sort.quad_reversal.exit363.i.i ], [ %.3239.lcssa.i.i, %sort.quad_reversal.exit327.i.i ], [ 0, %sort.quad_reversal.exit303.i.i ], [ %.3239.lcssa.i.i, %267 ]
  %291 = icmp eq i64 %235, 1
  %292 = icmp ne i64 %.2232.lcssa.i.i, 0
  %293 = and i1 %292, %291
  br i1 %293, label %597, label %593

294:                                              ; preds = %267
  unreachable

295:                                              ; preds = %267
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %296 = ptrtoint ptr %.4.lcssa.i.i to i64
  %297 = ptrtoint ptr %0 to i64
  %298 = sub nuw i64 %296, %297
  %299 = shl nuw i64 %6, 1
  %300 = or i64 %298, %299
  %301 = and i64 %300, -4294967296
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %308

303:                                              ; preds = %295
  %304 = trunc i64 %299 to i32
  %305 = trunc i64 %298 to i32
  %306 = udiv i32 %305, %304
  %307 = zext i32 %306 to i64
  br label %310

308:                                              ; preds = %295
  %309 = udiv i64 %298, %299
  br label %310

310:                                              ; preds = %308, %303
  %311 = phi i64 [ %307, %303 ], [ %309, %308 ]
  %312 = mul nuw i64 %311, %6
  %313 = getelementptr inbounds i8, ptr %0, i64 %312
  %314 = sub i64 0, %312
  %315 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %314
  %316 = and i64 %311, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %320, label %._crit_edge.i.i.i

._crit_edge.i.i.i:                                ; preds = %310
  %.pre.i.i.i = sub i64 0, %6
  br label %318

318:                                              ; preds = %320, %._crit_edge.i.i.i
  %.pre-phi.i.i.i = phi i64 [ %.pre.i.i.i, %._crit_edge.i.i.i ], [ %321, %320 ]
  %.027.i.i.i = phi ptr [ %315, %._crit_edge.i.i.i ], [ %323, %320 ]
  %.025.i.i.i = phi ptr [ %313, %._crit_edge.i.i.i ], [ %322, %320 ]
  %.0.i.i.i = phi i64 [ %311, %._crit_edge.i.i.i ], [ %324, %320 ]
  %319 = lshr i64 %.0.i.i.i, 1
  br label %325

320:                                              ; preds = %310
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %313) #18
  call void %8(ptr nonnull align 1 %313, ptr nonnull align 1 %315) #18
  %321 = sub i64 0, %6
  %322 = getelementptr inbounds i8, ptr %313, i64 %321
  call void %8(ptr nonnull align 1 %315, ptr nonnull align 1 %10) #18
  %323 = getelementptr inbounds i8, ptr %315, i64 %6
  %324 = add i64 %311, -1
  br label %318

325:                                              ; preds = %327, %318
  %.029.i.i.i = phi ptr [ %.4.lcssa.i.i, %318 ], [ %330, %327 ]
  %.128.i.i.i = phi ptr [ %.027.i.i.i, %318 ], [ %328, %327 ]
  %.126.i.i.i = phi ptr [ %.025.i.i.i, %318 ], [ %329, %327 ]
  %.024.i.i.i = phi ptr [ %0, %318 ], [ %331, %327 ]
  %.1.i.i.i = phi i64 [ %319, %318 ], [ %math, %327 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i.i.i) #18
  call void %8(ptr align 1 %.024.i.i.i, ptr align 1 %.029.i.i.i) #18
  call void %8(ptr align 1 %.029.i.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i.i.i) #18
  call void %8(ptr align 1 %.126.i.i.i, ptr align 1 %.128.i.i.i) #18
  call void %8(ptr align 1 %.128.i.i.i, ptr nonnull align 1 %10) #18
  %326 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i.i.i, i64 1)
  %math = extractvalue { i64, i1 } %326, 0
  %ov = extractvalue { i64, i1 } %326, 1
  br i1 %ov, label %sort.quad_reversal.exit.i.i, label %327

327:                                              ; preds = %325
  %328 = getelementptr inbounds i8, ptr %.128.i.i.i, i64 %6
  %329 = getelementptr inbounds i8, ptr %.126.i.i.i, i64 %.pre-phi.i.i.i
  %330 = getelementptr inbounds i8, ptr %.029.i.i.i, i64 %.pre-phi.i.i.i
  %331 = getelementptr inbounds i8, ptr %.024.i.i.i, i64 %6
  br label %325

sort.quad_reversal.exit.i.i:                      ; preds = %325
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.i.i

332:                                              ; preds = %267
  %333 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %334 = ptrtoint ptr %.4220.lcssa.i.i to i64
  %335 = ptrtoint ptr %333 to i64
  %336 = sub nuw i64 %334, %335
  %337 = shl nuw i64 %6, 1
  %338 = or i64 %336, %337
  %339 = and i64 %338, -4294967296
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %346

341:                                              ; preds = %332
  %342 = trunc i64 %337 to i32
  %343 = trunc i64 %336 to i32
  %344 = udiv i32 %343, %342
  %345 = zext i32 %344 to i64
  br label %348

346:                                              ; preds = %332
  %347 = udiv i64 %336, %337
  br label %348

348:                                              ; preds = %346, %341
  %349 = phi i64 [ %345, %341 ], [ %347, %346 ]
  %350 = mul nuw i64 %349, %6
  %351 = getelementptr inbounds i8, ptr %333, i64 %350
  %352 = sub i64 0, %350
  %353 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %352
  %354 = and i64 %349, 1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %358, label %._crit_edge.i293.i.i

._crit_edge.i293.i.i:                             ; preds = %348
  %.pre.i292.i.i = sub i64 0, %6
  br label %356

356:                                              ; preds = %358, %._crit_edge.i293.i.i
  %.pre-phi.i294.i.i = phi i64 [ %.pre.i292.i.i, %._crit_edge.i293.i.i ], [ %359, %358 ]
  %.027.i295.i.i = phi ptr [ %353, %._crit_edge.i293.i.i ], [ %361, %358 ]
  %.025.i296.i.i = phi ptr [ %351, %._crit_edge.i293.i.i ], [ %360, %358 ]
  %.0.i297.i.i = phi i64 [ %349, %._crit_edge.i293.i.i ], [ %362, %358 ]
  %357 = lshr i64 %.0.i297.i.i, 1
  br label %363

358:                                              ; preds = %348
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %351) #18
  call void %8(ptr nonnull align 1 %351, ptr nonnull align 1 %353) #18
  %359 = sub i64 0, %6
  %360 = getelementptr inbounds i8, ptr %351, i64 %359
  call void %8(ptr nonnull align 1 %353, ptr nonnull align 1 %10) #18
  %361 = getelementptr inbounds i8, ptr %353, i64 %6
  %362 = add i64 %349, -1
  br label %356

363:                                              ; preds = %365, %356
  %.029.i298.i.i = phi ptr [ %.4220.lcssa.i.i, %356 ], [ %368, %365 ]
  %.128.i299.i.i = phi ptr [ %.027.i295.i.i, %356 ], [ %366, %365 ]
  %.126.i300.i.i = phi ptr [ %.025.i296.i.i, %356 ], [ %367, %365 ]
  %.024.i301.i.i = phi ptr [ %333, %356 ], [ %369, %365 ]
  %.1.i302.i.i = phi i64 [ %357, %356 ], [ %math3533, %365 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i301.i.i) #18
  call void %8(ptr align 1 %.024.i301.i.i, ptr align 1 %.029.i298.i.i) #18
  call void %8(ptr align 1 %.029.i298.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i300.i.i) #18
  call void %8(ptr align 1 %.126.i300.i.i, ptr align 1 %.128.i299.i.i) #18
  call void %8(ptr align 1 %.128.i299.i.i, ptr nonnull align 1 %10) #18
  %364 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i302.i.i, i64 1)
  %math3533 = extractvalue { i64, i1 } %364, 0
  %ov3534 = extractvalue { i64, i1 } %364, 1
  br i1 %ov3534, label %sort.quad_reversal.exit303.i.i, label %365

365:                                              ; preds = %363
  %366 = getelementptr inbounds i8, ptr %.128.i299.i.i, i64 %6
  %367 = getelementptr inbounds i8, ptr %.126.i300.i.i, i64 %.pre-phi.i294.i.i
  %368 = getelementptr inbounds i8, ptr %.029.i298.i.i, i64 %.pre-phi.i294.i.i
  %369 = getelementptr inbounds i8, ptr %.024.i301.i.i, i64 %6
  br label %363

sort.quad_reversal.exit303.i.i:                   ; preds = %363
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %290

370:                                              ; preds = %267
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %371 = ptrtoint ptr %.4220.lcssa.i.i to i64
  %372 = ptrtoint ptr %0 to i64
  %373 = sub nuw i64 %371, %372
  %374 = shl nuw i64 %6, 1
  %375 = or i64 %373, %374
  %376 = and i64 %375, -4294967296
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %378, label %383

378:                                              ; preds = %370
  %379 = trunc i64 %374 to i32
  %380 = trunc i64 %373 to i32
  %381 = udiv i32 %380, %379
  %382 = zext i32 %381 to i64
  br label %385

383:                                              ; preds = %370
  %384 = udiv i64 %373, %374
  br label %385

385:                                              ; preds = %383, %378
  %386 = phi i64 [ %382, %378 ], [ %384, %383 ]
  %387 = mul nuw i64 %386, %6
  %388 = getelementptr inbounds i8, ptr %0, i64 %387
  %389 = sub i64 0, %387
  %390 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %389
  %391 = and i64 %386, 1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %395, label %._crit_edge.i305.i.i

._crit_edge.i305.i.i:                             ; preds = %385
  %.pre.i304.i.i = sub i64 0, %6
  br label %393

393:                                              ; preds = %395, %._crit_edge.i305.i.i
  %.pre-phi.i306.i.i = phi i64 [ %.pre.i304.i.i, %._crit_edge.i305.i.i ], [ %396, %395 ]
  %.027.i307.i.i = phi ptr [ %390, %._crit_edge.i305.i.i ], [ %398, %395 ]
  %.025.i308.i.i = phi ptr [ %388, %._crit_edge.i305.i.i ], [ %397, %395 ]
  %.0.i309.i.i = phi i64 [ %386, %._crit_edge.i305.i.i ], [ %399, %395 ]
  %394 = lshr i64 %.0.i309.i.i, 1
  br label %400

395:                                              ; preds = %385
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %388) #18
  call void %8(ptr nonnull align 1 %388, ptr nonnull align 1 %390) #18
  %396 = sub i64 0, %6
  %397 = getelementptr inbounds i8, ptr %388, i64 %396
  call void %8(ptr nonnull align 1 %390, ptr nonnull align 1 %10) #18
  %398 = getelementptr inbounds i8, ptr %390, i64 %6
  %399 = add i64 %386, -1
  br label %393

400:                                              ; preds = %402, %393
  %.029.i310.i.i = phi ptr [ %.4220.lcssa.i.i, %393 ], [ %405, %402 ]
  %.128.i311.i.i = phi ptr [ %.027.i307.i.i, %393 ], [ %403, %402 ]
  %.126.i312.i.i = phi ptr [ %.025.i308.i.i, %393 ], [ %404, %402 ]
  %.024.i313.i.i = phi ptr [ %0, %393 ], [ %406, %402 ]
  %.1.i314.i.i = phi i64 [ %394, %393 ], [ %math3544, %402 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i313.i.i) #18
  call void %8(ptr align 1 %.024.i313.i.i, ptr align 1 %.029.i310.i.i) #18
  call void %8(ptr align 1 %.029.i310.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i312.i.i) #18
  call void %8(ptr align 1 %.126.i312.i.i, ptr align 1 %.128.i311.i.i) #18
  call void %8(ptr align 1 %.128.i311.i.i, ptr nonnull align 1 %10) #18
  %401 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i314.i.i, i64 1)
  %math3544 = extractvalue { i64, i1 } %401, 0
  %ov3545 = extractvalue { i64, i1 } %401, 1
  br i1 %ov3545, label %sort.quad_reversal.exit315.i.i, label %402

402:                                              ; preds = %400
  %403 = getelementptr inbounds i8, ptr %.128.i311.i.i, i64 %6
  %404 = getelementptr inbounds i8, ptr %.126.i312.i.i, i64 %.pre-phi.i306.i.i
  %405 = getelementptr inbounds i8, ptr %.029.i310.i.i, i64 %.pre-phi.i306.i.i
  %406 = getelementptr inbounds i8, ptr %.024.i313.i.i, i64 %6
  br label %400

sort.quad_reversal.exit315.i.i:                   ; preds = %400
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.thread.i.i

407:                                              ; preds = %267
  %408 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %409 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %410 = ptrtoint ptr %408 to i64
  %411 = sub nuw i64 %409, %410
  %412 = shl nuw i64 %6, 1
  %413 = or i64 %411, %412
  %414 = and i64 %413, -4294967296
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %416, label %421

416:                                              ; preds = %407
  %417 = trunc i64 %412 to i32
  %418 = trunc i64 %411 to i32
  %419 = udiv i32 %418, %417
  %420 = zext i32 %419 to i64
  br label %423

421:                                              ; preds = %407
  %422 = udiv i64 %411, %412
  br label %423

423:                                              ; preds = %421, %416
  %424 = phi i64 [ %420, %416 ], [ %422, %421 ]
  %425 = mul nuw i64 %424, %6
  %426 = getelementptr inbounds i8, ptr %408, i64 %425
  %427 = sub i64 0, %425
  %428 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %427
  %429 = and i64 %424, 1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %433, label %._crit_edge.i317.i.i

._crit_edge.i317.i.i:                             ; preds = %423
  %.pre.i316.i.i = sub i64 0, %6
  br label %431

431:                                              ; preds = %433, %._crit_edge.i317.i.i
  %.pre-phi.i318.i.i = phi i64 [ %.pre.i316.i.i, %._crit_edge.i317.i.i ], [ %434, %433 ]
  %.027.i319.i.i = phi ptr [ %428, %._crit_edge.i317.i.i ], [ %436, %433 ]
  %.025.i320.i.i = phi ptr [ %426, %._crit_edge.i317.i.i ], [ %435, %433 ]
  %.0.i321.i.i = phi i64 [ %424, %._crit_edge.i317.i.i ], [ %437, %433 ]
  %432 = lshr i64 %.0.i321.i.i, 1
  br label %438

433:                                              ; preds = %423
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %426) #18
  call void %8(ptr nonnull align 1 %426, ptr nonnull align 1 %428) #18
  %434 = sub i64 0, %6
  %435 = getelementptr inbounds i8, ptr %426, i64 %434
  call void %8(ptr nonnull align 1 %428, ptr nonnull align 1 %10) #18
  %436 = getelementptr inbounds i8, ptr %428, i64 %6
  %437 = add i64 %424, -1
  br label %431

438:                                              ; preds = %440, %431
  %.029.i322.i.i = phi ptr [ %.4225.lcssa.i.i, %431 ], [ %443, %440 ]
  %.128.i323.i.i = phi ptr [ %.027.i319.i.i, %431 ], [ %441, %440 ]
  %.126.i324.i.i = phi ptr [ %.025.i320.i.i, %431 ], [ %442, %440 ]
  %.024.i325.i.i = phi ptr [ %408, %431 ], [ %444, %440 ]
  %.1.i326.i.i = phi i64 [ %432, %431 ], [ %math3555, %440 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i325.i.i) #18
  call void %8(ptr align 1 %.024.i325.i.i, ptr align 1 %.029.i322.i.i) #18
  call void %8(ptr align 1 %.029.i322.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i324.i.i) #18
  call void %8(ptr align 1 %.126.i324.i.i, ptr align 1 %.128.i323.i.i) #18
  call void %8(ptr align 1 %.128.i323.i.i, ptr nonnull align 1 %10) #18
  %439 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i326.i.i, i64 1)
  %math3555 = extractvalue { i64, i1 } %439, 0
  %ov3556 = extractvalue { i64, i1 } %439, 1
  br i1 %ov3556, label %sort.quad_reversal.exit327.i.i, label %440

440:                                              ; preds = %438
  %441 = getelementptr inbounds i8, ptr %.128.i323.i.i, i64 %6
  %442 = getelementptr inbounds i8, ptr %.126.i324.i.i, i64 %.pre-phi.i318.i.i
  %443 = getelementptr inbounds i8, ptr %.029.i322.i.i, i64 %.pre-phi.i318.i.i
  %444 = getelementptr inbounds i8, ptr %.024.i325.i.i, i64 %6
  br label %438

sort.quad_reversal.exit327.i.i:                   ; preds = %438
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %290

445:                                              ; preds = %267
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %446 = ptrtoint ptr %.4.lcssa.i.i to i64
  %447 = ptrtoint ptr %0 to i64
  %448 = sub nuw i64 %446, %447
  %449 = shl nuw i64 %6, 1
  %450 = or i64 %448, %449
  %451 = and i64 %450, -4294967296
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %453, label %458

453:                                              ; preds = %445
  %454 = trunc i64 %449 to i32
  %455 = trunc i64 %448 to i32
  %456 = udiv i32 %455, %454
  %457 = zext i32 %456 to i64
  br label %460

458:                                              ; preds = %445
  %459 = udiv i64 %448, %449
  br label %460

460:                                              ; preds = %458, %453
  %461 = phi i64 [ %457, %453 ], [ %459, %458 ]
  %462 = mul nuw i64 %461, %6
  %463 = getelementptr inbounds i8, ptr %0, i64 %462
  %464 = sub i64 0, %462
  %465 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %464
  %466 = and i64 %461, 1
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %470, label %._crit_edge.i329.i.i

._crit_edge.i329.i.i:                             ; preds = %460
  %.pre.i328.i.i = sub i64 0, %6
  br label %468

468:                                              ; preds = %470, %._crit_edge.i329.i.i
  %.pre-phi.i330.i.i = phi i64 [ %.pre.i328.i.i, %._crit_edge.i329.i.i ], [ %471, %470 ]
  %.027.i331.i.i = phi ptr [ %465, %._crit_edge.i329.i.i ], [ %473, %470 ]
  %.025.i332.i.i = phi ptr [ %463, %._crit_edge.i329.i.i ], [ %472, %470 ]
  %.0.i333.i.i = phi i64 [ %461, %._crit_edge.i329.i.i ], [ %474, %470 ]
  %469 = lshr i64 %.0.i333.i.i, 1
  br label %475

470:                                              ; preds = %460
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %463) #18
  call void %8(ptr nonnull align 1 %463, ptr nonnull align 1 %465) #18
  %471 = sub i64 0, %6
  %472 = getelementptr inbounds i8, ptr %463, i64 %471
  call void %8(ptr nonnull align 1 %465, ptr nonnull align 1 %10) #18
  %473 = getelementptr inbounds i8, ptr %465, i64 %6
  %474 = add i64 %461, -1
  br label %468

475:                                              ; preds = %477, %468
  %.029.i334.i.i = phi ptr [ %.4.lcssa.i.i, %468 ], [ %480, %477 ]
  %.128.i335.i.i = phi ptr [ %.027.i331.i.i, %468 ], [ %478, %477 ]
  %.126.i336.i.i = phi ptr [ %.025.i332.i.i, %468 ], [ %479, %477 ]
  %.024.i337.i.i = phi ptr [ %0, %468 ], [ %481, %477 ]
  %.1.i338.i.i = phi i64 [ %469, %468 ], [ %math3566, %477 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i337.i.i) #18
  call void %8(ptr align 1 %.024.i337.i.i, ptr align 1 %.029.i334.i.i) #18
  call void %8(ptr align 1 %.029.i334.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i336.i.i) #18
  call void %8(ptr align 1 %.126.i336.i.i, ptr align 1 %.128.i335.i.i) #18
  call void %8(ptr align 1 %.128.i335.i.i, ptr nonnull align 1 %10) #18
  %476 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i338.i.i, i64 1)
  %math3566 = extractvalue { i64, i1 } %476, 0
  %ov3567 = extractvalue { i64, i1 } %476, 1
  br i1 %ov3567, label %sort.quad_reversal.exit339.i.i, label %477

477:                                              ; preds = %475
  %478 = getelementptr inbounds i8, ptr %.128.i335.i.i, i64 %6
  %479 = getelementptr inbounds i8, ptr %.126.i336.i.i, i64 %.pre-phi.i330.i.i
  %480 = getelementptr inbounds i8, ptr %.029.i334.i.i, i64 %.pre-phi.i330.i.i
  %481 = getelementptr inbounds i8, ptr %.024.i337.i.i, i64 %6
  br label %475

sort.quad_reversal.exit339.i.i:                   ; preds = %475
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  %482 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %483 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %484 = ptrtoint ptr %482 to i64
  %485 = sub nuw i64 %483, %484
  %486 = or i64 %485, %449
  %487 = and i64 %486, -4294967296
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %494

489:                                              ; preds = %sort.quad_reversal.exit339.i.i
  %490 = trunc i64 %449 to i32
  %491 = trunc i64 %485 to i32
  %492 = udiv i32 %491, %490
  %493 = zext i32 %492 to i64
  br label %496

494:                                              ; preds = %sort.quad_reversal.exit339.i.i
  %495 = udiv i64 %485, %449
  br label %496

496:                                              ; preds = %494, %489
  %497 = phi i64 [ %493, %489 ], [ %495, %494 ]
  %498 = mul nuw i64 %497, %6
  %499 = getelementptr inbounds i8, ptr %482, i64 %498
  %500 = sub i64 0, %498
  %501 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %500
  %502 = and i64 %497, 1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %506, label %._crit_edge.i341.i.i

._crit_edge.i341.i.i:                             ; preds = %496
  %.pre.i340.i.i = sub i64 0, %6
  br label %504

504:                                              ; preds = %506, %._crit_edge.i341.i.i
  %.pre-phi.i342.i.i = phi i64 [ %.pre.i340.i.i, %._crit_edge.i341.i.i ], [ %507, %506 ]
  %.027.i343.i.i = phi ptr [ %501, %._crit_edge.i341.i.i ], [ %509, %506 ]
  %.025.i344.i.i = phi ptr [ %499, %._crit_edge.i341.i.i ], [ %508, %506 ]
  %.0.i345.i.i = phi i64 [ %497, %._crit_edge.i341.i.i ], [ %510, %506 ]
  %505 = lshr i64 %.0.i345.i.i, 1
  br label %511

506:                                              ; preds = %496
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %499) #18
  call void %8(ptr nonnull align 1 %499, ptr nonnull align 1 %501) #18
  %507 = sub i64 0, %6
  %508 = getelementptr inbounds i8, ptr %499, i64 %507
  call void %8(ptr nonnull align 1 %501, ptr nonnull align 1 %10) #18
  %509 = getelementptr inbounds i8, ptr %501, i64 %6
  %510 = add i64 %497, -1
  br label %504

511:                                              ; preds = %513, %504
  %.029.i346.i.i = phi ptr [ %.4225.lcssa.i.i, %504 ], [ %516, %513 ]
  %.128.i347.i.i = phi ptr [ %.027.i343.i.i, %504 ], [ %514, %513 ]
  %.126.i348.i.i = phi ptr [ %.025.i344.i.i, %504 ], [ %515, %513 ]
  %.024.i349.i.i = phi ptr [ %482, %504 ], [ %517, %513 ]
  %.1.i350.i.i = phi i64 [ %505, %504 ], [ %math3577, %513 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i349.i.i) #18
  call void %8(ptr align 1 %.024.i349.i.i, ptr align 1 %.029.i346.i.i) #18
  call void %8(ptr align 1 %.029.i346.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i348.i.i) #18
  call void %8(ptr align 1 %.126.i348.i.i, ptr align 1 %.128.i347.i.i) #18
  call void %8(ptr align 1 %.128.i347.i.i, ptr nonnull align 1 %10) #18
  %512 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i350.i.i, i64 1)
  %math3577 = extractvalue { i64, i1 } %512, 0
  %ov3578 = extractvalue { i64, i1 } %512, 1
  br i1 %ov3578, label %.thread444.thread.thread.i.i, label %513

513:                                              ; preds = %511
  %514 = getelementptr inbounds i8, ptr %.128.i347.i.i, i64 %6
  %515 = getelementptr inbounds i8, ptr %.126.i348.i.i, i64 %.pre-phi.i342.i.i
  %516 = getelementptr inbounds i8, ptr %.029.i346.i.i, i64 %.pre-phi.i342.i.i
  %517 = getelementptr inbounds i8, ptr %.024.i349.i.i, i64 %6
  br label %511

.thread444.thread.thread.i.i:                     ; preds = %511
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %252

518:                                              ; preds = %267
  %519 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %520 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %521 = ptrtoint ptr %519 to i64
  %522 = sub nuw i64 %520, %521
  %523 = shl nuw i64 %6, 1
  %524 = or i64 %522, %523
  %525 = and i64 %524, -4294967296
  %526 = icmp eq i64 %525, 0
  br i1 %526, label %527, label %532

527:                                              ; preds = %518
  %528 = trunc i64 %523 to i32
  %529 = trunc i64 %522 to i32
  %530 = udiv i32 %529, %528
  %531 = zext i32 %530 to i64
  br label %534

532:                                              ; preds = %518
  %533 = udiv i64 %522, %523
  br label %534

534:                                              ; preds = %532, %527
  %535 = phi i64 [ %531, %527 ], [ %533, %532 ]
  %536 = mul nuw i64 %535, %6
  %537 = getelementptr inbounds i8, ptr %519, i64 %536
  %538 = sub i64 0, %536
  %539 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %538
  %540 = and i64 %535, 1
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %544, label %._crit_edge.i353.i.i

._crit_edge.i353.i.i:                             ; preds = %534
  %.pre.i352.i.i = sub i64 0, %6
  br label %542

542:                                              ; preds = %544, %._crit_edge.i353.i.i
  %.pre-phi.i354.i.i = phi i64 [ %.pre.i352.i.i, %._crit_edge.i353.i.i ], [ %545, %544 ]
  %.027.i355.i.i = phi ptr [ %539, %._crit_edge.i353.i.i ], [ %547, %544 ]
  %.025.i356.i.i = phi ptr [ %537, %._crit_edge.i353.i.i ], [ %546, %544 ]
  %.0.i357.i.i = phi i64 [ %535, %._crit_edge.i353.i.i ], [ %548, %544 ]
  %543 = lshr i64 %.0.i357.i.i, 1
  br label %549

544:                                              ; preds = %534
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %537) #18
  call void %8(ptr nonnull align 1 %537, ptr nonnull align 1 %539) #18
  %545 = sub i64 0, %6
  %546 = getelementptr inbounds i8, ptr %537, i64 %545
  call void %8(ptr nonnull align 1 %539, ptr nonnull align 1 %10) #18
  %547 = getelementptr inbounds i8, ptr %539, i64 %6
  %548 = add i64 %535, -1
  br label %542

549:                                              ; preds = %551, %542
  %.029.i358.i.i = phi ptr [ %.4225.lcssa.i.i, %542 ], [ %554, %551 ]
  %.128.i359.i.i = phi ptr [ %.027.i355.i.i, %542 ], [ %552, %551 ]
  %.126.i360.i.i = phi ptr [ %.025.i356.i.i, %542 ], [ %553, %551 ]
  %.024.i361.i.i = phi ptr [ %519, %542 ], [ %555, %551 ]
  %.1.i362.i.i = phi i64 [ %543, %542 ], [ %math3588, %551 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i361.i.i) #18
  call void %8(ptr align 1 %.024.i361.i.i, ptr align 1 %.029.i358.i.i) #18
  call void %8(ptr align 1 %.029.i358.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i360.i.i) #18
  call void %8(ptr align 1 %.126.i360.i.i, ptr align 1 %.128.i359.i.i) #18
  call void %8(ptr align 1 %.128.i359.i.i, ptr nonnull align 1 %10) #18
  %550 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i362.i.i, i64 1)
  %math3588 = extractvalue { i64, i1 } %550, 0
  %ov3589 = extractvalue { i64, i1 } %550, 1
  br i1 %ov3589, label %sort.quad_reversal.exit363.i.i, label %551

551:                                              ; preds = %549
  %552 = getelementptr inbounds i8, ptr %.128.i359.i.i, i64 %6
  %553 = getelementptr inbounds i8, ptr %.126.i360.i.i, i64 %.pre-phi.i354.i.i
  %554 = getelementptr inbounds i8, ptr %.029.i358.i.i, i64 %.pre-phi.i354.i.i
  %555 = getelementptr inbounds i8, ptr %.024.i361.i.i, i64 %6
  br label %549

sort.quad_reversal.exit363.i.i:                   ; preds = %549
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %290

556:                                              ; preds = %267
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %557 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %558 = ptrtoint ptr %0 to i64
  %559 = sub nuw i64 %557, %558
  %560 = shl nuw i64 %6, 1
  %561 = or i64 %559, %560
  %562 = and i64 %561, -4294967296
  %563 = icmp eq i64 %562, 0
  br i1 %563, label %564, label %569

564:                                              ; preds = %556
  %565 = trunc i64 %560 to i32
  %566 = trunc i64 %559 to i32
  %567 = udiv i32 %566, %565
  %568 = zext i32 %567 to i64
  br label %571

569:                                              ; preds = %556
  %570 = udiv i64 %559, %560
  br label %571

571:                                              ; preds = %569, %564
  %572 = phi i64 [ %568, %564 ], [ %570, %569 ]
  %573 = mul nuw i64 %572, %6
  %574 = getelementptr inbounds i8, ptr %0, i64 %573
  %575 = sub i64 0, %573
  %576 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %575
  %577 = and i64 %572, 1
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %581, label %._crit_edge.i365.i.i

._crit_edge.i365.i.i:                             ; preds = %571
  %.pre.i364.i.i = sub i64 0, %6
  br label %579

579:                                              ; preds = %581, %._crit_edge.i365.i.i
  %.pre-phi.i366.i.i = phi i64 [ %.pre.i364.i.i, %._crit_edge.i365.i.i ], [ %582, %581 ]
  %.027.i367.i.i = phi ptr [ %576, %._crit_edge.i365.i.i ], [ %584, %581 ]
  %.025.i368.i.i = phi ptr [ %574, %._crit_edge.i365.i.i ], [ %583, %581 ]
  %.0.i369.i.i = phi i64 [ %572, %._crit_edge.i365.i.i ], [ %585, %581 ]
  %580 = lshr i64 %.0.i369.i.i, 1
  br label %586

581:                                              ; preds = %571
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %574) #18
  call void %8(ptr nonnull align 1 %574, ptr nonnull align 1 %576) #18
  %582 = sub i64 0, %6
  %583 = getelementptr inbounds i8, ptr %574, i64 %582
  call void %8(ptr nonnull align 1 %576, ptr nonnull align 1 %10) #18
  %584 = getelementptr inbounds i8, ptr %576, i64 %6
  %585 = add i64 %572, -1
  br label %579

586:                                              ; preds = %588, %579
  %.029.i370.i.i = phi ptr [ %.4225.lcssa.i.i, %579 ], [ %591, %588 ]
  %.128.i371.i.i = phi ptr [ %.027.i367.i.i, %579 ], [ %589, %588 ]
  %.126.i372.i.i = phi ptr [ %.025.i368.i.i, %579 ], [ %590, %588 ]
  %.024.i373.i.i = phi ptr [ %0, %579 ], [ %592, %588 ]
  %.1.i374.i.i = phi i64 [ %580, %579 ], [ %math3599, %588 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i373.i.i) #18
  call void %8(ptr align 1 %.024.i373.i.i, ptr align 1 %.029.i370.i.i) #18
  call void %8(ptr align 1 %.029.i370.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i372.i.i) #18
  call void %8(ptr align 1 %.126.i372.i.i, ptr align 1 %.128.i371.i.i) #18
  call void %8(ptr align 1 %.128.i371.i.i, ptr nonnull align 1 %10) #18
  %587 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i374.i.i, i64 1)
  %math3599 = extractvalue { i64, i1 } %587, 0
  %ov3600 = extractvalue { i64, i1 } %587, 1
  br i1 %ov3600, label %sort.quad_reversal.exit375.i.i, label %588

588:                                              ; preds = %586
  %589 = getelementptr inbounds i8, ptr %.128.i371.i.i, i64 %6
  %590 = getelementptr inbounds i8, ptr %.126.i372.i.i, i64 %.pre-phi.i366.i.i
  %591 = getelementptr inbounds i8, ptr %.029.i370.i.i, i64 %.pre-phi.i366.i.i
  %592 = getelementptr inbounds i8, ptr %.024.i373.i.i, i64 %6
  br label %586

sort.quad_reversal.exit375.i.i:                   ; preds = %586
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %sort.flux_analyze__anon_13921.exit.i

593:                                              ; preds = %sort.quad_reversal.exit387.i.i, %290
  %.5235.i.i = phi i64 [ 0, %sort.quad_reversal.exit387.i.i ], [ %.2232.lcssa.i.i, %290 ]
  %594 = icmp eq i64 %237, 1
  %595 = icmp ne i64 %.5241.i.i, 0
  %596 = and i1 %594, %595
  br i1 %596, label %637, label %.thread444.i.i

597:                                              ; preds = %290
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %598 = ptrtoint ptr %.3.lcssa.i.i to i64
  %599 = ptrtoint ptr %0 to i64
  %600 = sub nuw i64 %598, %599
  %601 = shl nuw i64 %6, 1
  %602 = or i64 %600, %601
  %603 = and i64 %602, -4294967296
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %610

605:                                              ; preds = %597
  %606 = trunc i64 %601 to i32
  %607 = trunc i64 %600 to i32
  %608 = udiv i32 %607, %606
  %609 = zext i32 %608 to i64
  br label %612

610:                                              ; preds = %597
  %611 = udiv i64 %600, %601
  br label %612

612:                                              ; preds = %610, %605
  %613 = phi i64 [ %609, %605 ], [ %611, %610 ]
  %614 = mul nuw i64 %613, %6
  %615 = getelementptr inbounds i8, ptr %0, i64 %614
  %616 = sub i64 0, %614
  %617 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %616
  %618 = and i64 %613, 1
  %619 = icmp eq i64 %618, 0
  br i1 %619, label %622, label %._crit_edge.i377.i.i

._crit_edge.i377.i.i:                             ; preds = %612
  %.pre.i376.i.i = sub i64 0, %6
  br label %620

620:                                              ; preds = %622, %._crit_edge.i377.i.i
  %.pre-phi.i378.i.i = phi i64 [ %.pre.i376.i.i, %._crit_edge.i377.i.i ], [ %623, %622 ]
  %.027.i379.i.i = phi ptr [ %617, %._crit_edge.i377.i.i ], [ %625, %622 ]
  %.025.i380.i.i = phi ptr [ %615, %._crit_edge.i377.i.i ], [ %624, %622 ]
  %.0.i381.i.i = phi i64 [ %613, %._crit_edge.i377.i.i ], [ %626, %622 ]
  %621 = lshr i64 %.0.i381.i.i, 1
  br label %627

622:                                              ; preds = %612
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %615) #18
  call void %8(ptr nonnull align 1 %615, ptr nonnull align 1 %617) #18
  %623 = sub i64 0, %6
  %624 = getelementptr inbounds i8, ptr %615, i64 %623
  call void %8(ptr nonnull align 1 %617, ptr nonnull align 1 %10) #18
  %625 = getelementptr inbounds i8, ptr %617, i64 %6
  %626 = add i64 %613, -1
  br label %620

627:                                              ; preds = %629, %620
  %.029.i382.i.i = phi ptr [ %.3.lcssa.i.i, %620 ], [ %632, %629 ]
  %.128.i383.i.i = phi ptr [ %.027.i379.i.i, %620 ], [ %630, %629 ]
  %.126.i384.i.i = phi ptr [ %.025.i380.i.i, %620 ], [ %631, %629 ]
  %.024.i385.i.i = phi ptr [ %0, %620 ], [ %633, %629 ]
  %.1.i386.i.i = phi i64 [ %621, %620 ], [ %math3610, %629 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i385.i.i) #18
  call void %8(ptr align 1 %.024.i385.i.i, ptr align 1 %.029.i382.i.i) #18
  call void %8(ptr align 1 %.029.i382.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i384.i.i) #18
  call void %8(ptr align 1 %.126.i384.i.i, ptr align 1 %.128.i383.i.i) #18
  call void %8(ptr align 1 %.128.i383.i.i, ptr nonnull align 1 %10) #18
  %628 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i386.i.i, i64 1)
  %math3610 = extractvalue { i64, i1 } %628, 0
  %ov3611 = extractvalue { i64, i1 } %628, 1
  br i1 %ov3611, label %sort.quad_reversal.exit387.i.i, label %629

629:                                              ; preds = %627
  %630 = getelementptr inbounds i8, ptr %.128.i383.i.i, i64 %6
  %631 = getelementptr inbounds i8, ptr %.126.i384.i.i, i64 %.pre-phi.i378.i.i
  %632 = getelementptr inbounds i8, ptr %.029.i382.i.i, i64 %.pre-phi.i378.i.i
  %633 = getelementptr inbounds i8, ptr %.024.i385.i.i, i64 %6
  br label %627

sort.quad_reversal.exit387.i.i:                   ; preds = %627
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %593

.thread444.i.i:                                   ; preds = %sort.quad_reversal.exit399.i.i, %593, %sort.quad_reversal.exit.i.i
  %.5235451.i.i = phi i64 [ %.5235.i.i, %sort.quad_reversal.exit399.i.i ], [ %.5235.i.i, %593 ], [ 0, %sort.quad_reversal.exit.i.i ]
  %.5255441450.i.i = phi i64 [ %.5255.i.i, %sort.quad_reversal.exit399.i.i ], [ %.5255.i.i, %593 ], [ %.3253.lcssa.i.i, %sort.quad_reversal.exit.i.i ]
  %.5248442449.i.i = phi i64 [ %.5248.i.i, %sort.quad_reversal.exit399.i.i ], [ %.5248.i.i, %593 ], [ %.3246.lcssa.i.i, %sort.quad_reversal.exit.i.i ]
  %.6242.i.i = phi i64 [ 0, %sort.quad_reversal.exit399.i.i ], [ %.5241.i.i, %593 ], [ 0, %sort.quad_reversal.exit.i.i ]
  %634 = icmp eq i64 %239, 1
  %635 = icmp ne i64 %.5248442449.i.i, 0
  %636 = and i1 %634, %635
  br i1 %636, label %677, label %.thread444.thread.i.i

637:                                              ; preds = %593
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %638 = ptrtoint ptr %.4.lcssa.i.i to i64
  %639 = ptrtoint ptr %272 to i64
  %640 = sub nuw i64 %638, %639
  %641 = shl nuw i64 %6, 1
  %642 = or i64 %640, %641
  %643 = and i64 %642, -4294967296
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %645, label %650

645:                                              ; preds = %637
  %646 = trunc i64 %641 to i32
  %647 = trunc i64 %640 to i32
  %648 = udiv i32 %647, %646
  %649 = zext i32 %648 to i64
  br label %652

650:                                              ; preds = %637
  %651 = udiv i64 %640, %641
  br label %652

652:                                              ; preds = %650, %645
  %653 = phi i64 [ %649, %645 ], [ %651, %650 ]
  %654 = mul nuw i64 %653, %6
  %655 = getelementptr inbounds i8, ptr %272, i64 %654
  %656 = sub i64 0, %654
  %657 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %656
  %658 = and i64 %653, 1
  %659 = icmp eq i64 %658, 0
  br i1 %659, label %662, label %._crit_edge.i389.i.i

._crit_edge.i389.i.i:                             ; preds = %652
  %.pre.i388.i.i = sub i64 0, %6
  br label %660

660:                                              ; preds = %662, %._crit_edge.i389.i.i
  %.pre-phi.i390.i.i = phi i64 [ %.pre.i388.i.i, %._crit_edge.i389.i.i ], [ %663, %662 ]
  %.027.i391.i.i = phi ptr [ %657, %._crit_edge.i389.i.i ], [ %665, %662 ]
  %.025.i392.i.i = phi ptr [ %655, %._crit_edge.i389.i.i ], [ %664, %662 ]
  %.0.i393.i.i = phi i64 [ %653, %._crit_edge.i389.i.i ], [ %666, %662 ]
  %661 = lshr i64 %.0.i393.i.i, 1
  br label %667

662:                                              ; preds = %652
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %655) #18
  call void %8(ptr nonnull align 1 %655, ptr nonnull align 1 %657) #18
  %663 = sub i64 0, %6
  %664 = getelementptr inbounds i8, ptr %655, i64 %663
  call void %8(ptr nonnull align 1 %657, ptr nonnull align 1 %10) #18
  %665 = getelementptr inbounds i8, ptr %657, i64 %6
  %666 = add i64 %653, -1
  br label %660

667:                                              ; preds = %669, %660
  %.029.i394.i.i = phi ptr [ %.4.lcssa.i.i, %660 ], [ %672, %669 ]
  %.128.i395.i.i = phi ptr [ %.027.i391.i.i, %660 ], [ %670, %669 ]
  %.126.i396.i.i = phi ptr [ %.025.i392.i.i, %660 ], [ %671, %669 ]
  %.024.i397.i.i = phi ptr [ %272, %660 ], [ %673, %669 ]
  %.1.i398.i.i = phi i64 [ %661, %660 ], [ %math3621, %669 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i397.i.i) #18
  call void %8(ptr align 1 %.024.i397.i.i, ptr align 1 %.029.i394.i.i) #18
  call void %8(ptr align 1 %.029.i394.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i396.i.i) #18
  call void %8(ptr align 1 %.126.i396.i.i, ptr align 1 %.128.i395.i.i) #18
  call void %8(ptr align 1 %.128.i395.i.i, ptr nonnull align 1 %10) #18
  %668 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i398.i.i, i64 1)
  %math3621 = extractvalue { i64, i1 } %668, 0
  %ov3622 = extractvalue { i64, i1 } %668, 1
  br i1 %ov3622, label %sort.quad_reversal.exit399.i.i, label %669

669:                                              ; preds = %667
  %670 = getelementptr inbounds i8, ptr %.128.i395.i.i, i64 %6
  %671 = getelementptr inbounds i8, ptr %.126.i396.i.i, i64 %.pre-phi.i390.i.i
  %672 = getelementptr inbounds i8, ptr %.029.i394.i.i, i64 %.pre-phi.i390.i.i
  %673 = getelementptr inbounds i8, ptr %.024.i397.i.i, i64 %6
  br label %667

sort.quad_reversal.exit399.i.i:                   ; preds = %667
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.i.i

.thread444.thread.i.i:                            ; preds = %sort.quad_reversal.exit411.i.i, %.thread444.i.i, %sort.quad_reversal.exit315.i.i
  %.6242458.i.i = phi i64 [ %.6242.i.i, %sort.quad_reversal.exit411.i.i ], [ %.6242.i.i, %.thread444.i.i ], [ 0, %sort.quad_reversal.exit315.i.i ]
  %.5255441450457.i.i = phi i64 [ %.5255441450.i.i, %sort.quad_reversal.exit411.i.i ], [ %.5255441450.i.i, %.thread444.i.i ], [ %.3253.lcssa.i.i, %sort.quad_reversal.exit315.i.i ]
  %.5235451456.i.i = phi i64 [ %.5235451.i.i, %sort.quad_reversal.exit411.i.i ], [ %.5235451.i.i, %.thread444.i.i ], [ 0, %sort.quad_reversal.exit315.i.i ]
  %.6249.i.i = phi i64 [ 0, %sort.quad_reversal.exit411.i.i ], [ %.5248442449.i.i, %.thread444.i.i ], [ 0, %sort.quad_reversal.exit315.i.i ]
  %674 = icmp eq i64 %241, 1
  %675 = icmp ne i64 %.5255441450457.i.i, 0
  %676 = and i1 %674, %675
  br i1 %676, label %714, label %252

677:                                              ; preds = %.thread444.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %678 = ptrtoint ptr %.4220.lcssa.i.i to i64
  %679 = ptrtoint ptr %277 to i64
  %680 = sub nuw i64 %678, %679
  %681 = shl nuw i64 %6, 1
  %682 = or i64 %680, %681
  %683 = and i64 %682, -4294967296
  %684 = icmp eq i64 %683, 0
  br i1 %684, label %685, label %690

685:                                              ; preds = %677
  %686 = trunc i64 %681 to i32
  %687 = trunc i64 %680 to i32
  %688 = udiv i32 %687, %686
  %689 = zext i32 %688 to i64
  br label %692

690:                                              ; preds = %677
  %691 = udiv i64 %680, %681
  br label %692

692:                                              ; preds = %690, %685
  %693 = phi i64 [ %689, %685 ], [ %691, %690 ]
  %694 = mul nuw i64 %693, %6
  %695 = getelementptr inbounds i8, ptr %277, i64 %694
  %696 = sub i64 0, %694
  %697 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %696
  %698 = and i64 %693, 1
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %702, label %._crit_edge.i401.i.i

._crit_edge.i401.i.i:                             ; preds = %692
  %.pre.i400.i.i = sub i64 0, %6
  br label %700

700:                                              ; preds = %702, %._crit_edge.i401.i.i
  %.pre-phi.i402.i.i = phi i64 [ %.pre.i400.i.i, %._crit_edge.i401.i.i ], [ %703, %702 ]
  %.027.i403.i.i = phi ptr [ %697, %._crit_edge.i401.i.i ], [ %705, %702 ]
  %.025.i404.i.i = phi ptr [ %695, %._crit_edge.i401.i.i ], [ %704, %702 ]
  %.0.i405.i.i = phi i64 [ %693, %._crit_edge.i401.i.i ], [ %706, %702 ]
  %701 = lshr i64 %.0.i405.i.i, 1
  br label %707

702:                                              ; preds = %692
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %695) #18
  call void %8(ptr nonnull align 1 %695, ptr nonnull align 1 %697) #18
  %703 = sub i64 0, %6
  %704 = getelementptr inbounds i8, ptr %695, i64 %703
  call void %8(ptr nonnull align 1 %697, ptr nonnull align 1 %10) #18
  %705 = getelementptr inbounds i8, ptr %697, i64 %6
  %706 = add i64 %693, -1
  br label %700

707:                                              ; preds = %709, %700
  %.029.i406.i.i = phi ptr [ %.4220.lcssa.i.i, %700 ], [ %712, %709 ]
  %.128.i407.i.i = phi ptr [ %.027.i403.i.i, %700 ], [ %710, %709 ]
  %.126.i408.i.i = phi ptr [ %.025.i404.i.i, %700 ], [ %711, %709 ]
  %.024.i409.i.i = phi ptr [ %277, %700 ], [ %713, %709 ]
  %.1.i410.i.i = phi i64 [ %701, %700 ], [ %math3632, %709 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i409.i.i) #18
  call void %8(ptr align 1 %.024.i409.i.i, ptr align 1 %.029.i406.i.i) #18
  call void %8(ptr align 1 %.029.i406.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i408.i.i) #18
  call void %8(ptr align 1 %.126.i408.i.i, ptr align 1 %.128.i407.i.i) #18
  call void %8(ptr align 1 %.128.i407.i.i, ptr nonnull align 1 %10) #18
  %708 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i410.i.i, i64 1)
  %math3632 = extractvalue { i64, i1 } %708, 0
  %ov3633 = extractvalue { i64, i1 } %708, 1
  br i1 %ov3633, label %sort.quad_reversal.exit411.i.i, label %709

709:                                              ; preds = %707
  %710 = getelementptr inbounds i8, ptr %.128.i407.i.i, i64 %6
  %711 = getelementptr inbounds i8, ptr %.126.i408.i.i, i64 %.pre-phi.i402.i.i
  %712 = getelementptr inbounds i8, ptr %.029.i406.i.i, i64 %.pre-phi.i402.i.i
  %713 = getelementptr inbounds i8, ptr %.024.i409.i.i, i64 %6
  br label %707

sort.quad_reversal.exit411.i.i:                   ; preds = %707
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.thread.i.i

714:                                              ; preds = %.thread444.thread.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %715 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %716 = ptrtoint ptr %281 to i64
  %717 = sub nuw i64 %715, %716
  %718 = shl nuw i64 %6, 1
  %719 = or i64 %717, %718
  %720 = and i64 %719, -4294967296
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %722, label %727

722:                                              ; preds = %714
  %723 = trunc i64 %718 to i32
  %724 = trunc i64 %717 to i32
  %725 = udiv i32 %724, %723
  %726 = zext i32 %725 to i64
  br label %729

727:                                              ; preds = %714
  %728 = udiv i64 %717, %718
  br label %729

729:                                              ; preds = %727, %722
  %730 = phi i64 [ %726, %722 ], [ %728, %727 ]
  %731 = mul nuw i64 %730, %6
  %732 = getelementptr inbounds i8, ptr %281, i64 %731
  %733 = sub i64 0, %731
  %734 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %733
  %735 = and i64 %730, 1
  %736 = icmp eq i64 %735, 0
  br i1 %736, label %739, label %._crit_edge.i413.i.i

._crit_edge.i413.i.i:                             ; preds = %729
  %.pre.i412.i.i = sub i64 0, %6
  br label %737

737:                                              ; preds = %739, %._crit_edge.i413.i.i
  %.pre-phi.i414.i.i = phi i64 [ %.pre.i412.i.i, %._crit_edge.i413.i.i ], [ %740, %739 ]
  %.027.i415.i.i = phi ptr [ %734, %._crit_edge.i413.i.i ], [ %742, %739 ]
  %.025.i416.i.i = phi ptr [ %732, %._crit_edge.i413.i.i ], [ %741, %739 ]
  %.0.i417.i.i = phi i64 [ %730, %._crit_edge.i413.i.i ], [ %743, %739 ]
  %738 = lshr i64 %.0.i417.i.i, 1
  br label %744

739:                                              ; preds = %729
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %732) #18
  call void %8(ptr nonnull align 1 %732, ptr nonnull align 1 %734) #18
  %740 = sub i64 0, %6
  %741 = getelementptr inbounds i8, ptr %732, i64 %740
  call void %8(ptr nonnull align 1 %734, ptr nonnull align 1 %10) #18
  %742 = getelementptr inbounds i8, ptr %734, i64 %6
  %743 = add i64 %730, -1
  br label %737

744:                                              ; preds = %746, %737
  %.029.i418.i.i = phi ptr [ %.4225.lcssa.i.i, %737 ], [ %749, %746 ]
  %.128.i419.i.i = phi ptr [ %.027.i415.i.i, %737 ], [ %747, %746 ]
  %.126.i420.i.i = phi ptr [ %.025.i416.i.i, %737 ], [ %748, %746 ]
  %.024.i421.i.i = phi ptr [ %281, %737 ], [ %750, %746 ]
  %.1.i422.i.i = phi i64 [ %738, %737 ], [ %math3643, %746 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i421.i.i) #18
  call void %8(ptr align 1 %.024.i421.i.i, ptr align 1 %.029.i418.i.i) #18
  call void %8(ptr align 1 %.029.i418.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i420.i.i) #18
  call void %8(ptr align 1 %.126.i420.i.i, ptr align 1 %.128.i419.i.i) #18
  call void %8(ptr align 1 %.128.i419.i.i, ptr nonnull align 1 %10) #18
  %745 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i422.i.i, i64 1)
  %math3643 = extractvalue { i64, i1 } %745, 0
  %ov3644 = extractvalue { i64, i1 } %745, 1
  br i1 %ov3644, label %sort.quad_reversal.exit423.i.i, label %746

746:                                              ; preds = %744
  %747 = getelementptr inbounds i8, ptr %.128.i419.i.i, i64 %6
  %748 = getelementptr inbounds i8, ptr %.126.i420.i.i, i64 %.pre-phi.i414.i.i
  %749 = getelementptr inbounds i8, ptr %.029.i418.i.i, i64 %.pre-phi.i414.i.i
  %750 = getelementptr inbounds i8, ptr %.024.i421.i.i, i64 %6
  br label %744

sort.quad_reversal.exit423.i.i:                   ; preds = %744
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %252

751:                                              ; preds = %759, %252
  %.0267.i.i = phi i4 [ 1, %759 ], [ %265, %252 ]
  %.0266.i.i = phi i4 [ 1, %759 ], [ %262, %252 ]
  %.0265.i.i = phi i4 [ 1, %759 ], [ %259, %252 ]
  %.0264.i.i = phi i4 [ 1, %759 ], [ %256, %252 ]
  %752 = shl nuw nsw i4 %.0265.i.i, 1
  %753 = shl nuw nsw i4 %.0266.i.i, 2
  %754 = or i4 %752, %753
  %755 = shl nuw i4 %.0267.i.i, 3
  %756 = or i4 %754, %755
  %757 = or i4 %756, %.0264.i.i
  %758 = zext i4 %757 to i32
  switch i32 %758, label %764 [
    i32 0, label %765
    i32 1, label %767
    i32 2, label %779
    i32 3, label %792
    i32 4, label %811
    i32 8, label %824
    i32 9, label %834
    i32 12, label %854
    i32 5, label %872
    i32 6, label %872
    i32 7, label %872
    i32 10, label %872
    i32 11, label %872
    i32 13, label %872
    i32 14, label %872
    i32 15, label %872
  ]

759:                                              ; preds = %252
  br label %751

sort.quadsort_swap__anon_14508.exit428.i.i:       ; preds = %920, %918, %917, %910, %909, %870, %868, %867, %sort.quadsort_swap__anon_14508.exit431.i.i, %852, %850, %849, %sort.quadsort_swap__anon_14508.exit429.i.i, %832, %830, %829, %824, %sort.quadsort_swap__anon_14508.exit427.i.i, %sort.quadsort_swap__anon_14508.exit426.i.i, %sort.quadsort_swap__anon_14508.exit424.i.i, %sort.quadsort_swap__anon_14508.exit.i.i
  %760 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  call void %5(ptr align 1 %3, i64 1) #18
  %761 = call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i, ptr align 1 %760) #18
  %.not271.i.i = icmp eq i8 %761, 1
  %762 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  call void %5(ptr align 1 %3, i64 1) #18
  %763 = call i8 %2(ptr align 1 %3, ptr align 1 %.4220.lcssa.i.i, ptr align 1 %762) #18
  br i1 %.not271.i.i, label %925, label %923

764:                                              ; preds = %751
  unreachable

765:                                              ; preds = %751
  %766 = getelementptr inbounds i8, ptr %91, i64 %90
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %766, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.flux_analyze__anon_13921.exit.i

767:                                              ; preds = %751
  %.not288.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not288.i.i, label %sort.quadsort_swap__anon_14508.exit.i.i, label %772

sort.quadsort_swap__anon_14508.exit.i.i:          ; preds = %777, %775, %774, %767
  %768 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %769 = add nuw i64 %105, %106
  %770 = mul nuw i64 %769, %6
  %771 = getelementptr inbounds i8, ptr %91, i64 %770
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %768, ptr nonnull align 1 %91, ptr nonnull align 1 %768, ptr nonnull align 1 %771, i64 %769, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

772:                                              ; preds = %767
  %773 = icmp ult i64 %1, 384
  br i1 %773, label %774, label %775

774:                                              ; preds = %772
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit.i.i

775:                                              ; preds = %772
  %776 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %104, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %776, label %777, label %sort.quadsort_swap__anon_14508.exit.i.i

777:                                              ; preds = %775
  %778 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, i64 %778, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit.i.i

779:                                              ; preds = %751
  %780 = getelementptr inbounds i8, ptr %91, i64 %109
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %780, i64 %104, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  %.not287.i.i = icmp eq i64 %.4240.i.i, 0
  br i1 %.not287.i.i, label %sort.quadsort_swap__anon_14508.exit424.i.i, label %784

sort.quadsort_swap__anon_14508.exit424.i.i:       ; preds = %790, %788, %787, %779
  %781 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %782 = mul nuw i64 %106, %6
  %783 = getelementptr inbounds i8, ptr %91, i64 %782
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %781, ptr nonnull align 1 %91, ptr nonnull align 1 %781, ptr nonnull align 1 %783, i64 %106, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

784:                                              ; preds = %779
  %785 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %786 = icmp ult i64 %105, 96
  br i1 %786, label %787, label %788

787:                                              ; preds = %784
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %785, i64 %105, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit424.i.i

788:                                              ; preds = %784
  %789 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %785, i64 %105, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %789, label %790, label %sort.quadsort_swap__anon_14508.exit424.i.i

790:                                              ; preds = %788
  %791 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %785, i64 %105, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %785, i64 %105, ptr nonnull align 1 %91, i64 %1, i64 %791, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit424.i.i

792:                                              ; preds = %751
  %.not285.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not285.i.i, label %sort.quadsort_swap__anon_14508.exit425.i.i, label %793

sort.quadsort_swap__anon_14508.exit425.i.i:       ; preds = %798, %796, %795, %792
  %.not286.i.i = icmp eq i64 %.4240.i.i, 0
  br i1 %.not286.i.i, label %sort.quadsort_swap__anon_14508.exit426.i.i, label %803

793:                                              ; preds = %792
  %794 = icmp ult i64 %1, 384
  br i1 %794, label %795, label %796

795:                                              ; preds = %793
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit425.i.i

796:                                              ; preds = %793
  %797 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %104, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %797, label %798, label %sort.quadsort_swap__anon_14508.exit425.i.i

798:                                              ; preds = %796
  %799 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, i64 %799, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit425.i.i

sort.quadsort_swap__anon_14508.exit426.i.i:       ; preds = %809, %807, %806, %sort.quadsort_swap__anon_14508.exit425.i.i
  %800 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %801 = mul nuw i64 %106, %6
  %802 = getelementptr inbounds i8, ptr %91, i64 %801
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %800, ptr nonnull align 1 %91, ptr nonnull align 1 %800, ptr nonnull align 1 %802, i64 %106, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

803:                                              ; preds = %sort.quadsort_swap__anon_14508.exit425.i.i
  %804 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %805 = icmp ult i64 %105, 96
  br i1 %805, label %806, label %807

806:                                              ; preds = %803
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %804, i64 %105, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit426.i.i

807:                                              ; preds = %803
  %808 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %804, i64 %105, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %808, label %809, label %sort.quadsort_swap__anon_14508.exit426.i.i

809:                                              ; preds = %807
  %810 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %804, i64 %105, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %804, i64 %105, ptr nonnull align 1 %91, i64 %1, i64 %810, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit426.i.i

811:                                              ; preds = %751
  %812 = getelementptr inbounds i8, ptr %91, i64 %111
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %812, i64 %103, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  %.not284.i.i = icmp eq i64 %.4247.i.i, 0
  br i1 %.not284.i.i, label %sort.quadsort_swap__anon_14508.exit427.i.i, label %816

sort.quadsort_swap__anon_14508.exit427.i.i:       ; preds = %822, %820, %819, %811
  %813 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %814 = mul nuw i64 %108, %6
  %815 = getelementptr inbounds i8, ptr %91, i64 %814
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %813, ptr nonnull align 1 %91, ptr nonnull align 1 %813, ptr nonnull align 1 %815, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

816:                                              ; preds = %811
  %817 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %818 = icmp ult i64 %106, 192
  br i1 %818, label %819, label %820

819:                                              ; preds = %816
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %817, i64 %107, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit427.i.i

820:                                              ; preds = %816
  %821 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %817, i64 %107, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %821, label %822, label %sort.quadsort_swap__anon_14508.exit427.i.i

822:                                              ; preds = %820
  %823 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %817, i64 %107, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %817, i64 %107, ptr nonnull align 1 %91, i64 %1, i64 %823, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit427.i.i

824:                                              ; preds = %751
  %825 = getelementptr inbounds i8, ptr %91, i64 %114
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %825, i64 %113, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  %.not283.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not283.i.i, label %sort.quadsort_swap__anon_14508.exit428.i.i, label %826

826:                                              ; preds = %824
  %827 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %828 = icmp ult i64 %108, 96
  br i1 %828, label %829, label %830

829:                                              ; preds = %826
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %827, i64 %108, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

830:                                              ; preds = %826
  %831 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %827, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %831, label %832, label %sort.quadsort_swap__anon_14508.exit428.i.i

832:                                              ; preds = %830
  %833 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %827, i64 %108, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %827, i64 %108, ptr nonnull align 1 %91, i64 %1, i64 %833, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

834:                                              ; preds = %751
  %.not281.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not281.i.i, label %sort.quadsort_swap__anon_14508.exit429.i.i, label %839

sort.quadsort_swap__anon_14508.exit429.i.i:       ; preds = %844, %842, %841, %834
  %835 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %836 = add nuw i64 %107, %105
  %837 = mul nuw i64 %836, %6
  %838 = getelementptr inbounds i8, ptr %91, i64 %837
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %835, ptr nonnull align 1 %91, ptr nonnull align 1 %835, ptr nonnull align 1 %838, i64 %836, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  %.not282.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not282.i.i, label %sort.quadsort_swap__anon_14508.exit428.i.i, label %846

839:                                              ; preds = %834
  %840 = icmp ult i64 %1, 384
  br i1 %840, label %841, label %842

841:                                              ; preds = %839
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit429.i.i

842:                                              ; preds = %839
  %843 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %104, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %843, label %844, label %sort.quadsort_swap__anon_14508.exit429.i.i

844:                                              ; preds = %842
  %845 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, i64 %845, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit429.i.i

846:                                              ; preds = %sort.quadsort_swap__anon_14508.exit429.i.i
  %847 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %848 = icmp ult i64 %108, 96
  br i1 %848, label %849, label %850

849:                                              ; preds = %846
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %847, i64 %108, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

850:                                              ; preds = %846
  %851 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %847, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %851, label %852, label %sort.quadsort_swap__anon_14508.exit428.i.i

852:                                              ; preds = %850
  %853 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %847, i64 %108, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %847, i64 %108, ptr nonnull align 1 %91, i64 %1, i64 %853, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

854:                                              ; preds = %751
  %855 = getelementptr inbounds i8, ptr %91, i64 %111
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %855, i64 %103, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  %.not279.i.i = icmp eq i64 %.4247.i.i, 0
  br i1 %.not279.i.i, label %sort.quadsort_swap__anon_14508.exit431.i.i, label %856

sort.quadsort_swap__anon_14508.exit431.i.i:       ; preds = %862, %860, %859, %854
  %.not280.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not280.i.i, label %sort.quadsort_swap__anon_14508.exit428.i.i, label %864

856:                                              ; preds = %854
  %857 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %858 = icmp ult i64 %106, 192
  br i1 %858, label %859, label %860

859:                                              ; preds = %856
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %857, i64 %107, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit431.i.i

860:                                              ; preds = %856
  %861 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %857, i64 %107, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %861, label %862, label %sort.quadsort_swap__anon_14508.exit431.i.i

862:                                              ; preds = %860
  %863 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %857, i64 %107, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %857, i64 %107, ptr nonnull align 1 %91, i64 %1, i64 %863, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit431.i.i

864:                                              ; preds = %sort.quadsort_swap__anon_14508.exit431.i.i
  %865 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %866 = icmp ult i64 %108, 96
  br i1 %866, label %867, label %868

867:                                              ; preds = %864
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %865, i64 %108, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

868:                                              ; preds = %864
  %869 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %865, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %869, label %870, label %sort.quadsort_swap__anon_14508.exit428.i.i

870:                                              ; preds = %868
  %871 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %865, i64 %108, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %865, i64 %108, ptr nonnull align 1 %91, i64 %1, i64 %871, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

872:                                              ; preds = %751, %751, %751, %751, %751, %751, %751, %751
  %.not.i.i = icmp eq i4 %.0264.i.i, 0
  br i1 %.not.i.i, label %874, label %873

sort.quadsort_swap__anon_14508.exit433.i.i:       ; preds = %881, %879, %878, %874, %873
  %.not268.i.i = icmp eq i4 %.0265.i.i, 0
  br i1 %.not268.i.i, label %884, label %883

873:                                              ; preds = %872
  %.not278.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not278.i.i, label %sort.quadsort_swap__anon_14508.exit433.i.i, label %876

874:                                              ; preds = %872
  %875 = getelementptr inbounds i8, ptr %91, i64 %109
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %875, i64 %104, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit433.i.i

876:                                              ; preds = %873
  %877 = icmp ult i64 %1, 384
  br i1 %877, label %878, label %879

878:                                              ; preds = %876
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit433.i.i

879:                                              ; preds = %876
  %880 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %104, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %880, label %881, label %sort.quadsort_swap__anon_14508.exit433.i.i

881:                                              ; preds = %879
  %882 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %104, ptr nonnull align 1 %91, i64 %1, i64 %882, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit433.i.i

sort.quadsort_swap__anon_14508.exit434.i.i:       ; preds = %894, %892, %891, %884, %883
  %.not269.i.i = icmp eq i4 %.0266.i.i, 0
  br i1 %.not269.i.i, label %897, label %896

883:                                              ; preds = %sort.quadsort_swap__anon_14508.exit433.i.i
  %.not277.i.i = icmp eq i64 %.4240.i.i, 0
  br i1 %.not277.i.i, label %sort.quadsort_swap__anon_14508.exit434.i.i, label %888

884:                                              ; preds = %sort.quadsort_swap__anon_14508.exit433.i.i
  %885 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %886 = mul nuw i64 %105, %6
  %887 = getelementptr inbounds i8, ptr %91, i64 %886
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %885, ptr nonnull align 1 %91, ptr nonnull align 1 %885, ptr nonnull align 1 %887, i64 %105, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit434.i.i

888:                                              ; preds = %883
  %889 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %890 = icmp ult i64 %105, 96
  br i1 %890, label %891, label %892

891:                                              ; preds = %888
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %889, i64 %105, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit434.i.i

892:                                              ; preds = %888
  %893 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %889, i64 %105, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %893, label %894, label %sort.quadsort_swap__anon_14508.exit434.i.i

894:                                              ; preds = %892
  %895 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %889, i64 %105, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %889, i64 %105, ptr nonnull align 1 %91, i64 %1, i64 %895, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit434.i.i

sort.quadsort_swap__anon_14508.exit435.i.i:       ; preds = %907, %905, %904, %897, %896
  %.not270.i.i = icmp eq i4 %.0267.i.i, 0
  br i1 %.not270.i.i, label %910, label %909

896:                                              ; preds = %sort.quadsort_swap__anon_14508.exit434.i.i
  %.not276.i.i = icmp eq i64 %.4247.i.i, 0
  br i1 %.not276.i.i, label %sort.quadsort_swap__anon_14508.exit435.i.i, label %901

897:                                              ; preds = %sort.quadsort_swap__anon_14508.exit434.i.i
  %898 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %899 = mul nuw i64 %107, %6
  %900 = getelementptr inbounds i8, ptr %91, i64 %899
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %898, ptr nonnull align 1 %91, ptr nonnull align 1 %898, ptr nonnull align 1 %900, i64 %107, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit435.i.i

901:                                              ; preds = %896
  %902 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %903 = icmp ult i64 %106, 192
  br i1 %903, label %904, label %905

904:                                              ; preds = %901
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %902, i64 %107, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit435.i.i

905:                                              ; preds = %901
  %906 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %902, i64 %107, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %906, label %907, label %sort.quadsort_swap__anon_14508.exit435.i.i

907:                                              ; preds = %905
  %908 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %902, i64 %107, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %902, i64 %107, ptr nonnull align 1 %91, i64 %1, i64 %908, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit435.i.i

909:                                              ; preds = %sort.quadsort_swap__anon_14508.exit435.i.i
  %.not275.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not275.i.i, label %sort.quadsort_swap__anon_14508.exit428.i.i, label %914

910:                                              ; preds = %sort.quadsort_swap__anon_14508.exit435.i.i
  %911 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %912 = mul nuw i64 %108, %6
  %913 = getelementptr inbounds i8, ptr %91, i64 %912
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %911, ptr nonnull align 1 %91, ptr nonnull align 1 %911, ptr nonnull align 1 %913, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

914:                                              ; preds = %909
  %915 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %916 = icmp ult i64 %108, 96
  br i1 %916, label %917, label %918

917:                                              ; preds = %914
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %915, i64 %108, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

918:                                              ; preds = %914
  %919 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %915, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br i1 %919, label %920, label %sort.quadsort_swap__anon_14508.exit428.i.i

920:                                              ; preds = %918
  %921 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %915, i64 %108, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %915, i64 %108, ptr nonnull align 1 %91, i64 %1, i64 %921, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14508.exit428.i.i

922:                                              ; preds = %936, %934, %933, %931
  call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %0, ptr nonnull align 1 %91, i64 %103, i64 %106, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %sort.flux_analyze__anon_13921.exit.i

923:                                              ; preds = %sort.quadsort_swap__anon_14508.exit428.i.i
  %924 = icmp eq i8 %763, 1
  br i1 %924, label %931, label %928

925:                                              ; preds = %sort.quadsort_swap__anon_14508.exit428.i.i
  %926 = icmp eq i8 %763, 1
  %927 = getelementptr inbounds i8, ptr %91, i64 %111
  br i1 %926, label %936, label %934

928:                                              ; preds = %923
  %929 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  call void %5(ptr align 1 %3, i64 1) #18
  %930 = call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i, ptr align 1 %929) #18
  %.not274.i.i = icmp eq i8 %930, 1
  br i1 %.not274.i.i, label %933, label %sort.flux_analyze__anon_13921.exit.i

931:                                              ; preds = %923
  %932 = getelementptr inbounds i8, ptr %91, i64 %111
  call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %932, ptr nonnull align 1 %112, i64 %107, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %111, i1 false)
  br label %922

933:                                              ; preds = %928
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %90, i1 false)
  br label %922

934:                                              ; preds = %925
  %935 = mul nuw i64 %106, %6
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %927, ptr nonnull align 1 %112, i64 %935, i1 false)
  call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %104, i64 %105, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %922

936:                                              ; preds = %925
  %937 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %927, ptr nonnull align 1 %937, i64 %107, i64 %108, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %104, i64 %105, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  br label %922

sort.flux_analyze__anon_13921.exit.i:             ; preds = %928, %922, %765, %sort.quad_reversal.exit375.i.i, %249
  call void @roc_dealloc(ptr nonnull align 1 %91, i32 %7)
  br label %sort.quadsort.exit

938:                                              ; preds = %100
  tail call fastcc void @sort.quadsort_direct__anon_13917(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %5)
  ret void

939:                                              ; preds = %89
  %940 = icmp eq ptr %91, null
  br i1 %940, label %1774, label %941

941:                                              ; preds = %939
  %942 = lshr i64 %1, 1
  %943 = lshr i64 %1, 2
  %944 = sub nuw nsw i64 %942, %943
  %945 = sub nuw i64 %1, %942
  %946 = lshr i64 %945, 1
  %947 = sub nuw i64 %945, %946
  %948 = mul nuw i64 %943, %6
  %949 = getelementptr inbounds i8, ptr %0, i64 %948
  %950 = mul nuw i64 %942, %6
  %951 = getelementptr inbounds i8, ptr %0, i64 %950
  %952 = add nuw i64 %946, %942
  %953 = mul nuw i64 %952, %6
  %954 = getelementptr inbounds i8, ptr %0, i64 %953
  %955 = icmp ult i64 %943, %944
  br i1 %955, label %958, label %956

956:                                              ; preds = %958, %941
  %.0234.i.i = phi i64 [ %962, %958 ], [ 0, %941 ]
  %.0210.i.i = phi ptr [ %959, %958 ], [ %949, %941 ]
  %957 = icmp ult i64 %943, %946
  br i1 %957, label %965, label %963

958:                                              ; preds = %941
  %959 = getelementptr inbounds i8, ptr %949, i64 %6
  %960 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %949, ptr nonnull align 1 %959) #18
  %961 = icmp eq i8 %960, 1
  %962 = zext i1 %961 to i64
  br label %956

963:                                              ; preds = %965, %956
  %.0241.i.i = phi i64 [ %969, %965 ], [ 0, %956 ]
  %.0214.i.i = phi ptr [ %966, %965 ], [ %951, %956 ]
  %964 = icmp ult i64 %943, %947
  br i1 %964, label %973, label %970

965:                                              ; preds = %956
  %966 = getelementptr inbounds i8, ptr %951, i64 %6
  %967 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %951, ptr nonnull align 1 %966) #18
  %968 = icmp eq i8 %967, 1
  %969 = zext i1 %968 to i64
  br label %963

970:                                              ; preds = %973, %963
  %.0248.i.i = phi i64 [ %977, %973 ], [ 0, %963 ]
  %.0219.i.i = phi ptr [ %974, %973 ], [ %954, %963 ]
  %971 = icmp ugt i64 %1, 132
  br i1 %971, label %.preheader461.lr.ph.i.i, label %.lr.ph.i.i24.preheader

.preheader461.lr.ph.i.i:                          ; preds = %970
  %972 = mul i64 %6, 96
  br label %.preheader461.i.i

973:                                              ; preds = %963
  %974 = getelementptr inbounds i8, ptr %954, i64 %6
  %975 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %954, ptr nonnull align 1 %974) #18
  %976 = icmp eq i8 %975, 1
  %977 = zext i1 %976 to i64
  br label %970

.preheader461.i.i:                                ; preds = %.critedge.i.i22, %.preheader461.lr.ph.i.i
  %.0483.i.i = phi ptr [ %0, %.preheader461.lr.ph.i.i ], [ %.2.i.i21, %.critedge.i.i22 ]
  %.1211482.i.i = phi ptr [ %.0210.i.i, %.preheader461.lr.ph.i.i ], [ %.3213.i.i, %.critedge.i.i22 ]
  %.1215481.i.i = phi ptr [ %.0214.i.i, %.preheader461.lr.ph.i.i ], [ %.3217.i.i, %.critedge.i.i22 ]
  %.1220480.i.i = phi ptr [ %.0219.i.i, %.preheader461.lr.ph.i.i ], [ %.3222.i.i, %.critedge.i.i22 ]
  %.0224479.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %1002, %.critedge.i.i22 ]
  %.0225478.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %1008, %.critedge.i.i22 ]
  %.0226477.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %1014, %.critedge.i.i22 ]
  %.0227476.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %1020, %.critedge.i.i22 ]
  %.0228475.i.i = phi i64 [ 0, %.preheader461.lr.ph.i.i ], [ %.1229.i.i, %.critedge.i.i22 ]
  %.1235474.i.i = phi i64 [ %.0234.i.i, %.preheader461.lr.ph.i.i ], [ %.2236.i.i, %.critedge.i.i22 ]
  %.1242473.i.i = phi i64 [ %.0241.i.i, %.preheader461.lr.ph.i.i ], [ %.2243.i.i, %.critedge.i.i22 ]
  %.1249472.i.i = phi i64 [ %.0248.i.i, %.preheader461.lr.ph.i.i ], [ %.2250.i.i, %.critedge.i.i22 ]
  %.0254471.i.i = phi i64 [ %1, %.preheader461.lr.ph.i.i ], [ %1022, %.critedge.i.i22 ]
  %uglygep2812 = getelementptr i8, ptr %.0483.i.i, i64 %6
  %uglygep2818 = getelementptr i8, ptr %.1211482.i.i, i64 %6
  %uglygep2824 = getelementptr i8, ptr %.1215481.i.i, i64 %6
  %uglygep2830 = getelementptr i8, ptr %.1220480.i.i, i64 %6
  br label %979

.preheader.i.i:                                   ; preds = %.critedge.i.i22
  %978 = icmp ugt i64 %1022, 7
  br i1 %978, label %.lr.ph.i.i24.preheader, label %._crit_edge.i.i27

.lr.ph.i.i24.preheader:                           ; preds = %.preheader.i.i, %970
  %.0.lcssa.i.i19530 = phi ptr [ %.2.i.i21, %.preheader.i.i ], [ %0, %970 ]
  %.1211.lcssa.i.i529 = phi ptr [ %.3213.i.i, %.preheader.i.i ], [ %.0210.i.i, %970 ]
  %.1215.lcssa.i.i528 = phi ptr [ %.3217.i.i, %.preheader.i.i ], [ %.0214.i.i, %970 ]
  %.1220.lcssa.i.i527 = phi ptr [ %.3222.i.i, %.preheader.i.i ], [ %.0219.i.i, %970 ]
  %.0224.lcssa.i.i526 = phi i32 [ %1002, %.preheader.i.i ], [ 0, %970 ]
  %.0225.lcssa.i.i524 = phi i32 [ %1008, %.preheader.i.i ], [ 0, %970 ]
  %.0226.lcssa.i.i18522 = phi i32 [ %1014, %.preheader.i.i ], [ 0, %970 ]
  %.0227.lcssa.i.i17520 = phi i32 [ %1020, %.preheader.i.i ], [ 0, %970 ]
  %.0228.lcssa.i.i16518 = phi i64 [ %.1229.i.i, %.preheader.i.i ], [ 0, %970 ]
  %.1235.lcssa.i.i517 = phi i64 [ %.2236.i.i, %.preheader.i.i ], [ %.0234.i.i, %970 ]
  %.1242.lcssa.i.i516 = phi i64 [ %.2243.i.i, %.preheader.i.i ], [ %.0241.i.i, %970 ]
  %.1249.lcssa.i.i515 = phi i64 [ %.2250.i.i, %.preheader.i.i ], [ %.0248.i.i, %970 ]
  %.0254.lcssa.i.i514 = phi i64 [ %1022, %.preheader.i.i ], [ 132, %970 ]
  br label %.lr.ph.i.i24

979:                                              ; preds = %979, %.preheader461.i.i
  %lsr.iv2832 = phi i64 [ %lsr.iv.next2833, %979 ], [ 32, %.preheader461.i.i ]
  %lsr.iv2805 = phi i64 [ %lsr.iv.next2806, %979 ], [ 0, %.preheader461.i.i ]
  %.0257466.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %983, %979 ]
  %.0258465.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %987, %979 ]
  %.0259464.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %991, %979 ]
  %.0260463.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %995, %979 ]
  %uglygep2807 = getelementptr i8, ptr %.0483.i.i, i64 %lsr.iv2805
  %uglygep2814 = getelementptr i8, ptr %.1211482.i.i, i64 %lsr.iv2805
  %uglygep2820 = getelementptr i8, ptr %.1215481.i.i, i64 %lsr.iv2805
  %uglygep2826 = getelementptr i8, ptr %.1220480.i.i, i64 %lsr.iv2805
  %uglygep2813 = getelementptr i8, ptr %uglygep2812, i64 %lsr.iv2805
  %980 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2807, ptr align 1 %uglygep2813) #18
  %981 = icmp eq i8 %980, 1
  %982 = zext i1 %981 to i8
  %983 = add nuw i8 %.0257466.i.i, %982
  %uglygep2819 = getelementptr i8, ptr %uglygep2818, i64 %lsr.iv2805
  %984 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2814, ptr align 1 %uglygep2819) #18
  %985 = icmp eq i8 %984, 1
  %986 = zext i1 %985 to i8
  %987 = add nuw i8 %.0258465.i.i, %986
  %uglygep2825 = getelementptr i8, ptr %uglygep2824, i64 %lsr.iv2805
  %988 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2820, ptr align 1 %uglygep2825) #18
  %989 = icmp eq i8 %988, 1
  %990 = zext i1 %989 to i8
  %991 = add nuw i8 %.0259464.i.i, %990
  %uglygep2831 = getelementptr i8, ptr %uglygep2830, i64 %lsr.iv2805
  %992 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2826, ptr align 1 %uglygep2831) #18
  %993 = icmp eq i8 %992, 1
  %994 = zext i1 %993 to i8
  %995 = add nuw i8 %.0260463.i.i, %994
  %lsr.iv.next2806 = add i64 %lsr.iv2805, %6
  %lsr.iv.next2833 = add nsw i64 %lsr.iv2832, -1
  %exitcond.not.i.i20 = icmp eq i64 %lsr.iv.next2833, 0
  br i1 %exitcond.not.i.i20, label %996, label %979

996:                                              ; preds = %979
  %997 = zext i8 %983 to i64
  %998 = add nuw i64 %.0228475.i.i, %997
  %999 = and i8 %983, -33
  %1000 = icmp eq i8 %999, 0
  %1001 = zext i1 %1000 to i32
  %1002 = add nuw i32 %.0224479.i.i, %1001
  %1003 = zext i8 %987 to i64
  %1004 = add nuw i64 %.1235474.i.i, %1003
  %1005 = and i8 %987, -33
  %1006 = icmp eq i8 %1005, 0
  %1007 = zext i1 %1006 to i32
  %1008 = add nuw i32 %.0225478.i.i, %1007
  %1009 = zext i8 %991 to i64
  %1010 = add nuw i64 %.1242473.i.i, %1009
  %1011 = and i8 %991, -33
  %1012 = icmp eq i8 %1011, 0
  %1013 = zext i1 %1012 to i32
  %1014 = add nuw i32 %.0226477.i.i, %1013
  %1015 = zext i8 %995 to i64
  %1016 = add nuw i64 %.1249472.i.i, %1015
  %1017 = and i8 %995, -33
  %1018 = icmp eq i8 %1017, 0
  %1019 = zext i1 %1018 to i32
  %1020 = add nuw i32 %.0227476.i.i, %1019
  %1021 = icmp ugt i64 %.0254471.i.i, 516
  %uglygep2808 = getelementptr i8, ptr %.0483.i.i, i64 %lsr.iv.next2806
  %uglygep2815 = getelementptr i8, ptr %.1211482.i.i, i64 %lsr.iv.next2806
  %uglygep2821 = getelementptr i8, ptr %.1215481.i.i, i64 %lsr.iv.next2806
  %uglygep2827 = getelementptr i8, ptr %.1220480.i.i, i64 %lsr.iv.next2806
  br i1 %1021, label %1024, label %.critedge.i.i22

.critedge.i.i22:                                  ; preds = %1039, %1024, %996
  %.1255.i.i = phi i64 [ %1044, %1039 ], [ %.0254471.i.i, %996 ], [ %.0254471.i.i, %1024 ]
  %.2250.i.i = phi i64 [ %1043, %1039 ], [ %1016, %996 ], [ %1016, %1024 ]
  %.2243.i.i = phi i64 [ %1042, %1039 ], [ %1010, %996 ], [ %1010, %1024 ]
  %.2236.i.i = phi i64 [ %1041, %1039 ], [ %1004, %996 ], [ %1004, %1024 ]
  %.1229.i.i = phi i64 [ %1040, %1039 ], [ %998, %996 ], [ %998, %1024 ]
  %.3222.i.i = phi ptr [ %uglygep2829, %1039 ], [ %uglygep2827, %996 ], [ %uglygep2827, %1024 ]
  %.3217.i.i = phi ptr [ %uglygep2823, %1039 ], [ %uglygep2821, %996 ], [ %uglygep2821, %1024 ]
  %.3213.i.i = phi ptr [ %uglygep2817, %1039 ], [ %uglygep2815, %996 ], [ %uglygep2815, %1024 ]
  %.2.i.i21 = phi ptr [ %uglygep2811, %1039 ], [ %uglygep2808, %996 ], [ %uglygep2808, %1024 ]
  %1022 = add i64 %.1255.i.i, -128
  %1023 = icmp ugt i64 %1022, 132
  br i1 %1023, label %.preheader461.i.i, label %.preheader.i.i

1024:                                             ; preds = %996
  %1025 = and i8 %995, -33
  %1026 = icmp eq i8 %1025, 0
  %1027 = and i8 %991, -33
  %1028 = icmp eq i8 %1027, 0
  %1029 = and i8 %987, -33
  %1030 = icmp eq i8 %1029, 0
  %1031 = and i8 %983, -33
  %1032 = icmp eq i8 %1031, 0
  %.neg.i.i23 = sext i1 %1026 to i8
  %1033 = zext i1 %1028 to i8
  %1034 = zext i1 %1030 to i8
  %1035 = zext i1 %1032 to i8
  %1036 = add nuw nsw i8 %1034, %1035
  %1037 = add nuw nsw i8 %1036, %1033
  %1038 = icmp eq i8 %1037, %.neg.i.i23
  br i1 %1038, label %1039, label %.critedge.i.i22

1039:                                             ; preds = %1024
  %1040 = add nuw i64 %998, 48
  %uglygep2810 = getelementptr i8, ptr %.0483.i.i, i64 %972
  %uglygep2811 = getelementptr i8, ptr %uglygep2810, i64 %lsr.iv.next2806
  %1041 = add nuw i64 %1004, 48
  %uglygep2816 = getelementptr i8, ptr %.1211482.i.i, i64 %972
  %uglygep2817 = getelementptr i8, ptr %uglygep2816, i64 %lsr.iv.next2806
  %1042 = add nuw i64 %1010, 48
  %uglygep2822 = getelementptr i8, ptr %.1215481.i.i, i64 %972
  %uglygep2823 = getelementptr i8, ptr %uglygep2822, i64 %lsr.iv.next2806
  %1043 = add nuw i64 %1016, 48
  %uglygep2828 = getelementptr i8, ptr %.1220480.i.i, i64 %972
  %uglygep2829 = getelementptr i8, ptr %uglygep2828, i64 %lsr.iv.next2806
  %1044 = add i64 %.0254471.i.i, -384
  br label %.critedge.i.i22

.lr.ph.i.i24:                                     ; preds = %.lr.ph.i.i24, %.lr.ph.i.i24.preheader
  %.3504.i.i = phi ptr [ %1045, %.lr.ph.i.i24 ], [ %.0.lcssa.i.i19530, %.lr.ph.i.i24.preheader ]
  %.4503.i.i = phi ptr [ %1050, %.lr.ph.i.i24 ], [ %.1211.lcssa.i.i529, %.lr.ph.i.i24.preheader ]
  %.4218502.i.i = phi ptr [ %1055, %.lr.ph.i.i24 ], [ %.1215.lcssa.i.i528, %.lr.ph.i.i24.preheader ]
  %.4223501.i.i = phi ptr [ %1060, %.lr.ph.i.i24 ], [ %.1220.lcssa.i.i527, %.lr.ph.i.i24.preheader ]
  %.2230500.i.i = phi i64 [ %1049, %.lr.ph.i.i24 ], [ %.0228.lcssa.i.i16518, %.lr.ph.i.i24.preheader ]
  %.3237499.i.i = phi i64 [ %1054, %.lr.ph.i.i24 ], [ %.1235.lcssa.i.i517, %.lr.ph.i.i24.preheader ]
  %.3244498.i.i = phi i64 [ %1059, %.lr.ph.i.i24 ], [ %.1242.lcssa.i.i516, %.lr.ph.i.i24.preheader ]
  %.3251497.i.i = phi i64 [ %1064, %.lr.ph.i.i24 ], [ %.1249.lcssa.i.i515, %.lr.ph.i.i24.preheader ]
  %.2256496.i.i = phi i64 [ %1065, %.lr.ph.i.i24 ], [ %.0254.lcssa.i.i514, %.lr.ph.i.i24.preheader ]
  %1045 = getelementptr inbounds i8, ptr %.3504.i.i, i64 %6
  %1046 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3504.i.i, ptr align 1 %1045) #18
  %1047 = icmp eq i8 %1046, 1
  %1048 = zext i1 %1047 to i64
  %1049 = add nuw i64 %.2230500.i.i, %1048
  %1050 = getelementptr inbounds i8, ptr %.4503.i.i, i64 %6
  %1051 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4503.i.i, ptr align 1 %1050) #18
  %1052 = icmp eq i8 %1051, 1
  %1053 = zext i1 %1052 to i64
  %1054 = add nuw i64 %.3237499.i.i, %1053
  %1055 = getelementptr inbounds i8, ptr %.4218502.i.i, i64 %6
  %1056 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4218502.i.i, ptr align 1 %1055) #18
  %1057 = icmp eq i8 %1056, 1
  %1058 = zext i1 %1057 to i64
  %1059 = add nuw i64 %.3244498.i.i, %1058
  %1060 = getelementptr inbounds i8, ptr %.4223501.i.i, i64 %6
  %1061 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4223501.i.i, ptr align 1 %1060) #18
  %1062 = icmp eq i8 %1061, 1
  %1063 = zext i1 %1062 to i64
  %1064 = add nuw i64 %.3251497.i.i, %1063
  %1065 = add i64 %.2256496.i.i, -4
  %1066 = icmp ugt i64 %1065, 7
  br i1 %1066, label %.lr.ph.i.i24, label %._crit_edge.i.i27

._crit_edge.i.i27:                                ; preds = %.lr.ph.i.i24, %.preheader.i.i
  %.0224.lcssa.i.i525 = phi i32 [ %1002, %.preheader.i.i ], [ %.0224.lcssa.i.i526, %.lr.ph.i.i24 ]
  %.0225.lcssa.i.i523 = phi i32 [ %1008, %.preheader.i.i ], [ %.0225.lcssa.i.i524, %.lr.ph.i.i24 ]
  %.0226.lcssa.i.i18521 = phi i32 [ %1014, %.preheader.i.i ], [ %.0226.lcssa.i.i18522, %.lr.ph.i.i24 ]
  %.0227.lcssa.i.i17519 = phi i32 [ %1020, %.preheader.i.i ], [ %.0227.lcssa.i.i17520, %.lr.ph.i.i24 ]
  %.3251.lcssa.i.i = phi i64 [ %.2250.i.i, %.preheader.i.i ], [ %1064, %.lr.ph.i.i24 ]
  %.3244.lcssa.i.i = phi i64 [ %.2243.i.i, %.preheader.i.i ], [ %1059, %.lr.ph.i.i24 ]
  %.3237.lcssa.i.i = phi i64 [ %.2236.i.i, %.preheader.i.i ], [ %1054, %.lr.ph.i.i24 ]
  %.2230.lcssa.i.i = phi i64 [ %.1229.i.i, %.preheader.i.i ], [ %1049, %.lr.ph.i.i24 ]
  %.4223.lcssa.i.i = phi ptr [ %.3222.i.i, %.preheader.i.i ], [ %1060, %.lr.ph.i.i24 ]
  %.4218.lcssa.i.i = phi ptr [ %.3217.i.i, %.preheader.i.i ], [ %1055, %.lr.ph.i.i24 ]
  %.4.lcssa.i.i25 = phi ptr [ %.3213.i.i, %.preheader.i.i ], [ %1050, %.lr.ph.i.i24 ]
  %.3.lcssa.i.i26 = phi ptr [ %.2.i.i21, %.preheader.i.i ], [ %1045, %.lr.ph.i.i24 ]
  %1067 = add i64 %.3237.lcssa.i.i, %.3244.lcssa.i.i
  %1068 = add i64 %1067, %.2230.lcssa.i.i
  %1069 = sub i64 0, %.3251.lcssa.i.i
  %1070 = icmp eq i64 %1068, %1069
  br i1 %1070, label %1079, label %.critedge2.i.i31

.critedge2.i.i31:                                 ; preds = %1085, %1082, %1079, %._crit_edge.i.i27
  %1071 = sub nuw i64 %943, %.2230.lcssa.i.i
  %1072 = icmp eq i64 %1071, 1
  %1073 = sub nuw i64 %944, %.3237.lcssa.i.i
  %1074 = icmp eq i64 %1073, 1
  %1075 = sub nuw i64 %946, %.3244.lcssa.i.i
  %1076 = icmp eq i64 %1075, 1
  %1077 = sub nuw i64 %947, %.3251.lcssa.i.i
  %1078 = icmp eq i64 %1077, 1
  %..i.i28 = select i1 %1072, i1 true, i1 %1074
  %.5.i.i29 = select i1 %..i.i28, i1 true, i1 %1076
  %.6.i.i30 = select i1 %.5.i.i29, i1 true, i1 %1078
  br i1 %.6.i.i30, label %1103, label %1088

1079:                                             ; preds = %._crit_edge.i.i27
  %1080 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1081 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i26, ptr align 1 %1080) #18
  %.not287.i.i32 = icmp eq i8 %1081, 1
  br i1 %.not287.i.i32, label %.critedge2.i.i31, label %1082

1082:                                             ; preds = %1079
  %1083 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1084 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i25, ptr align 1 %1083) #18
  %.not288.i.i33 = icmp eq i8 %1084, 1
  br i1 %.not288.i.i33, label %.critedge2.i.i31, label %1085

1085:                                             ; preds = %1082
  %1086 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1087 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4218.lcssa.i.i, ptr align 1 %1086) #18
  %.not289.i.i34 = icmp eq i8 %1087, 1
  br i1 %.not289.i.i34, label %.critedge2.i.i31, label %sort.flux_analyze__anon_13922.exit.i

1088:                                             ; preds = %sort.quad_reversal.exit421.i.i, %.thread442.thread.i.i, %.thread442.thread.thread.i.i, %.critedge2.i.i31
  %.4252.i.i = phi i64 [ 0, %sort.quad_reversal.exit421.i.i ], [ %.5253439448455.i.i, %.thread442.thread.i.i ], [ %.3251.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %.4245.i.i = phi i64 [ %.6247.i.i, %sort.quad_reversal.exit421.i.i ], [ %.6247.i.i, %.thread442.thread.i.i ], [ %.3244.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %.4238.i.i = phi i64 [ %.6240456.i.i, %sort.quad_reversal.exit421.i.i ], [ %.6240456.i.i, %.thread442.thread.i.i ], [ %.3237.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %.3231.i.i = phi i64 [ %.5233449454.i.i, %sort.quad_reversal.exit421.i.i ], [ %.5233449454.i.i, %.thread442.thread.i.i ], [ %.2230.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %1089 = lshr i64 %1, 9
  %1090 = zext i32 %.0224.lcssa.i.i525 to i64
  %1091 = icmp ult i64 %1089, %1090
  %1092 = zext i1 %1091 to i4
  %1093 = zext i32 %.0225.lcssa.i.i523 to i64
  %1094 = icmp ult i64 %1089, %1093
  %1095 = zext i1 %1094 to i4
  %1096 = zext i32 %.0226.lcssa.i.i18521 to i64
  %1097 = icmp ult i64 %1089, %1096
  %1098 = zext i1 %1097 to i4
  %1099 = zext i32 %.0227.lcssa.i.i17519 to i64
  %1100 = icmp ult i64 %1089, %1099
  %1101 = zext i1 %1100 to i4
  %1102 = icmp ugt i64 %1, 1048579
  br i1 %1102, label %1595, label %1587

1103:                                             ; preds = %.critedge2.i.i31
  %1104 = icmp eq i64 %1077, 1
  %1105 = icmp eq i64 %1075, 1
  %1106 = icmp eq i64 %1073, 1
  %1107 = icmp eq i64 %1071, 1
  %.7.i.i35 = select i1 %1107, i1 %1106, i1 false
  %1108 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1109 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i26, ptr align 1 %1108) #18
  %1110 = icmp eq i8 %1109, 1
  %1111 = and i1 %.7.i.i35, %1110
  %1112 = zext i1 %1111 to i3
  %.8.i.i36 = select i1 %1106, i1 %1105, i1 false
  %1113 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1114 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i25, ptr align 1 %1113) #18
  %1115 = icmp eq i8 %1114, 1
  %1116 = and i1 %.8.i.i36, %1115
  %.9.i.i37 = select i1 %1105, i1 %1104, i1 false
  %1117 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1118 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4218.lcssa.i.i, ptr align 1 %1117) #18
  %1119 = icmp eq i8 %1118, 1
  %1120 = and i1 %.9.i.i37, %1119
  %1121 = select i1 %1116, i3 2, i3 0
  %1122 = or i3 %1121, %1112
  %1123 = select i1 %1120, i3 -4, i3 0
  %1124 = or i3 %1122, %1123
  %1125 = zext i3 %1124 to i32
  switch i32 %1125, label %1130 [
    i32 0, label %1126
    i32 1, label %1131
    i32 2, label %1168
    i32 3, label %1206
    i32 4, label %1243
    i32 5, label %1281
    i32 6, label %1354
    i32 7, label %1392
  ]

1126:                                             ; preds = %sort.quad_reversal.exit361.i.i, %sort.quad_reversal.exit325.i.i, %sort.quad_reversal.exit301.i.i, %1103
  %.5253.i.i = phi i64 [ 0, %sort.quad_reversal.exit361.i.i ], [ 0, %sort.quad_reversal.exit325.i.i ], [ %.3251.lcssa.i.i, %sort.quad_reversal.exit301.i.i ], [ %.3251.lcssa.i.i, %1103 ]
  %.5246.i.i = phi i64 [ 0, %sort.quad_reversal.exit361.i.i ], [ 0, %sort.quad_reversal.exit325.i.i ], [ 0, %sort.quad_reversal.exit301.i.i ], [ %.3244.lcssa.i.i, %1103 ]
  %.5239.i.i = phi i64 [ 0, %sort.quad_reversal.exit361.i.i ], [ %.3237.lcssa.i.i, %sort.quad_reversal.exit325.i.i ], [ 0, %sort.quad_reversal.exit301.i.i ], [ %.3237.lcssa.i.i, %1103 ]
  %1127 = icmp eq i64 %1071, 1
  %1128 = icmp ne i64 %.2230.lcssa.i.i, 0
  %1129 = and i1 %1128, %1127
  br i1 %1129, label %1433, label %1429

1130:                                             ; preds = %1103
  unreachable

1131:                                             ; preds = %1103
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1132 = ptrtoint ptr %.4.lcssa.i.i25 to i64
  %1133 = ptrtoint ptr %0 to i64
  %1134 = sub nuw i64 %1132, %1133
  %1135 = shl nuw i64 %6, 1
  %1136 = or i64 %1134, %1135
  %1137 = and i64 %1136, -4294967296
  %1138 = icmp eq i64 %1137, 0
  br i1 %1138, label %1139, label %1144

1139:                                             ; preds = %1131
  %1140 = trunc i64 %1135 to i32
  %1141 = trunc i64 %1134 to i32
  %1142 = udiv i32 %1141, %1140
  %1143 = zext i32 %1142 to i64
  br label %1146

1144:                                             ; preds = %1131
  %1145 = udiv i64 %1134, %1135
  br label %1146

1146:                                             ; preds = %1144, %1139
  %1147 = phi i64 [ %1143, %1139 ], [ %1145, %1144 ]
  %1148 = mul nuw i64 %1147, %6
  %1149 = getelementptr inbounds i8, ptr %0, i64 %1148
  %1150 = sub i64 0, %1148
  %1151 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %1150
  %1152 = and i64 %1147, 1
  %1153 = icmp eq i64 %1152, 0
  br i1 %1153, label %1156, label %._crit_edge.i.i.i39

._crit_edge.i.i.i39:                              ; preds = %1146
  %.pre.i.i.i38 = sub i64 0, %6
  br label %1154

1154:                                             ; preds = %1156, %._crit_edge.i.i.i39
  %.pre-phi.i.i.i40 = phi i64 [ %.pre.i.i.i38, %._crit_edge.i.i.i39 ], [ %1157, %1156 ]
  %.027.i.i.i41 = phi ptr [ %1151, %._crit_edge.i.i.i39 ], [ %1159, %1156 ]
  %.025.i.i.i42 = phi ptr [ %1149, %._crit_edge.i.i.i39 ], [ %1158, %1156 ]
  %.0.i.i.i43 = phi i64 [ %1147, %._crit_edge.i.i.i39 ], [ %1160, %1156 ]
  %1155 = lshr i64 %.0.i.i.i43, 1
  br label %1161

1156:                                             ; preds = %1146
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1149) #18
  call void %8(ptr nonnull align 1 %1149, ptr nonnull align 1 %1151) #18
  %1157 = sub i64 0, %6
  %1158 = getelementptr inbounds i8, ptr %1149, i64 %1157
  call void %8(ptr nonnull align 1 %1151, ptr nonnull align 1 %10) #18
  %1159 = getelementptr inbounds i8, ptr %1151, i64 %6
  %1160 = add i64 %1147, -1
  br label %1154

1161:                                             ; preds = %1163, %1154
  %.029.i.i.i44 = phi ptr [ %.4.lcssa.i.i25, %1154 ], [ %1166, %1163 ]
  %.128.i.i.i45 = phi ptr [ %.027.i.i.i41, %1154 ], [ %1164, %1163 ]
  %.126.i.i.i46 = phi ptr [ %.025.i.i.i42, %1154 ], [ %1165, %1163 ]
  %.024.i.i.i47 = phi ptr [ %0, %1154 ], [ %1167, %1163 ]
  %.1.i.i.i48 = phi i64 [ %1155, %1154 ], [ %math3662, %1163 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i.i.i47) #18
  call void %8(ptr align 1 %.024.i.i.i47, ptr align 1 %.029.i.i.i44) #18
  call void %8(ptr align 1 %.029.i.i.i44, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i.i.i46) #18
  call void %8(ptr align 1 %.126.i.i.i46, ptr align 1 %.128.i.i.i45) #18
  call void %8(ptr align 1 %.128.i.i.i45, ptr nonnull align 1 %10) #18
  %1162 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i.i.i48, i64 1)
  %math3662 = extractvalue { i64, i1 } %1162, 0
  %ov3663 = extractvalue { i64, i1 } %1162, 1
  br i1 %ov3663, label %sort.quad_reversal.exit.i.i49, label %1163

1163:                                             ; preds = %1161
  %1164 = getelementptr inbounds i8, ptr %.128.i.i.i45, i64 %6
  %1165 = getelementptr inbounds i8, ptr %.126.i.i.i46, i64 %.pre-phi.i.i.i40
  %1166 = getelementptr inbounds i8, ptr %.029.i.i.i44, i64 %.pre-phi.i.i.i40
  %1167 = getelementptr inbounds i8, ptr %.024.i.i.i47, i64 %6
  br label %1161

sort.quad_reversal.exit.i.i49:                    ; preds = %1161
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.i.i

1168:                                             ; preds = %1103
  %1169 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1170 = ptrtoint ptr %.4218.lcssa.i.i to i64
  %1171 = ptrtoint ptr %1169 to i64
  %1172 = sub nuw i64 %1170, %1171
  %1173 = shl nuw i64 %6, 1
  %1174 = or i64 %1172, %1173
  %1175 = and i64 %1174, -4294967296
  %1176 = icmp eq i64 %1175, 0
  br i1 %1176, label %1177, label %1182

1177:                                             ; preds = %1168
  %1178 = trunc i64 %1173 to i32
  %1179 = trunc i64 %1172 to i32
  %1180 = udiv i32 %1179, %1178
  %1181 = zext i32 %1180 to i64
  br label %1184

1182:                                             ; preds = %1168
  %1183 = udiv i64 %1172, %1173
  br label %1184

1184:                                             ; preds = %1182, %1177
  %1185 = phi i64 [ %1181, %1177 ], [ %1183, %1182 ]
  %1186 = mul nuw i64 %1185, %6
  %1187 = getelementptr inbounds i8, ptr %1169, i64 %1186
  %1188 = sub i64 0, %1186
  %1189 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %1188
  %1190 = and i64 %1185, 1
  %1191 = icmp eq i64 %1190, 0
  br i1 %1191, label %1194, label %._crit_edge.i291.i.i

._crit_edge.i291.i.i:                             ; preds = %1184
  %.pre.i290.i.i = sub i64 0, %6
  br label %1192

1192:                                             ; preds = %1194, %._crit_edge.i291.i.i
  %.pre-phi.i292.i.i = phi i64 [ %.pre.i290.i.i, %._crit_edge.i291.i.i ], [ %1195, %1194 ]
  %.027.i293.i.i = phi ptr [ %1189, %._crit_edge.i291.i.i ], [ %1197, %1194 ]
  %.025.i294.i.i = phi ptr [ %1187, %._crit_edge.i291.i.i ], [ %1196, %1194 ]
  %.0.i295.i.i = phi i64 [ %1185, %._crit_edge.i291.i.i ], [ %1198, %1194 ]
  %1193 = lshr i64 %.0.i295.i.i, 1
  br label %1199

1194:                                             ; preds = %1184
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1187) #18
  call void %8(ptr nonnull align 1 %1187, ptr nonnull align 1 %1189) #18
  %1195 = sub i64 0, %6
  %1196 = getelementptr inbounds i8, ptr %1187, i64 %1195
  call void %8(ptr nonnull align 1 %1189, ptr nonnull align 1 %10) #18
  %1197 = getelementptr inbounds i8, ptr %1189, i64 %6
  %1198 = add i64 %1185, -1
  br label %1192

1199:                                             ; preds = %1201, %1192
  %.029.i296.i.i = phi ptr [ %.4218.lcssa.i.i, %1192 ], [ %1204, %1201 ]
  %.128.i297.i.i = phi ptr [ %.027.i293.i.i, %1192 ], [ %1202, %1201 ]
  %.126.i298.i.i = phi ptr [ %.025.i294.i.i, %1192 ], [ %1203, %1201 ]
  %.024.i299.i.i = phi ptr [ %1169, %1192 ], [ %1205, %1201 ]
  %.1.i300.i.i = phi i64 [ %1193, %1192 ], [ %math3683, %1201 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i299.i.i) #18
  call void %8(ptr align 1 %.024.i299.i.i, ptr align 1 %.029.i296.i.i) #18
  call void %8(ptr align 1 %.029.i296.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i298.i.i) #18
  call void %8(ptr align 1 %.126.i298.i.i, ptr align 1 %.128.i297.i.i) #18
  call void %8(ptr align 1 %.128.i297.i.i, ptr nonnull align 1 %10) #18
  %1200 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i300.i.i, i64 1)
  %math3683 = extractvalue { i64, i1 } %1200, 0
  %ov3684 = extractvalue { i64, i1 } %1200, 1
  br i1 %ov3684, label %sort.quad_reversal.exit301.i.i, label %1201

1201:                                             ; preds = %1199
  %1202 = getelementptr inbounds i8, ptr %.128.i297.i.i, i64 %6
  %1203 = getelementptr inbounds i8, ptr %.126.i298.i.i, i64 %.pre-phi.i292.i.i
  %1204 = getelementptr inbounds i8, ptr %.029.i296.i.i, i64 %.pre-phi.i292.i.i
  %1205 = getelementptr inbounds i8, ptr %.024.i299.i.i, i64 %6
  br label %1199

sort.quad_reversal.exit301.i.i:                   ; preds = %1199
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %1126

1206:                                             ; preds = %1103
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1207 = ptrtoint ptr %.4218.lcssa.i.i to i64
  %1208 = ptrtoint ptr %0 to i64
  %1209 = sub nuw i64 %1207, %1208
  %1210 = shl nuw i64 %6, 1
  %1211 = or i64 %1209, %1210
  %1212 = and i64 %1211, -4294967296
  %1213 = icmp eq i64 %1212, 0
  br i1 %1213, label %1214, label %1219

1214:                                             ; preds = %1206
  %1215 = trunc i64 %1210 to i32
  %1216 = trunc i64 %1209 to i32
  %1217 = udiv i32 %1216, %1215
  %1218 = zext i32 %1217 to i64
  br label %1221

1219:                                             ; preds = %1206
  %1220 = udiv i64 %1209, %1210
  br label %1221

1221:                                             ; preds = %1219, %1214
  %1222 = phi i64 [ %1218, %1214 ], [ %1220, %1219 ]
  %1223 = mul nuw i64 %1222, %6
  %1224 = getelementptr inbounds i8, ptr %0, i64 %1223
  %1225 = sub i64 0, %1223
  %1226 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %1225
  %1227 = and i64 %1222, 1
  %1228 = icmp eq i64 %1227, 0
  br i1 %1228, label %1231, label %._crit_edge.i303.i.i

._crit_edge.i303.i.i:                             ; preds = %1221
  %.pre.i302.i.i = sub i64 0, %6
  br label %1229

1229:                                             ; preds = %1231, %._crit_edge.i303.i.i
  %.pre-phi.i304.i.i = phi i64 [ %.pre.i302.i.i, %._crit_edge.i303.i.i ], [ %1232, %1231 ]
  %.027.i305.i.i = phi ptr [ %1226, %._crit_edge.i303.i.i ], [ %1234, %1231 ]
  %.025.i306.i.i = phi ptr [ %1224, %._crit_edge.i303.i.i ], [ %1233, %1231 ]
  %.0.i307.i.i = phi i64 [ %1222, %._crit_edge.i303.i.i ], [ %1235, %1231 ]
  %1230 = lshr i64 %.0.i307.i.i, 1
  br label %1236

1231:                                             ; preds = %1221
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1224) #18
  call void %8(ptr nonnull align 1 %1224, ptr nonnull align 1 %1226) #18
  %1232 = sub i64 0, %6
  %1233 = getelementptr inbounds i8, ptr %1224, i64 %1232
  call void %8(ptr nonnull align 1 %1226, ptr nonnull align 1 %10) #18
  %1234 = getelementptr inbounds i8, ptr %1226, i64 %6
  %1235 = add i64 %1222, -1
  br label %1229

1236:                                             ; preds = %1238, %1229
  %.029.i308.i.i = phi ptr [ %.4218.lcssa.i.i, %1229 ], [ %1241, %1238 ]
  %.128.i309.i.i = phi ptr [ %.027.i305.i.i, %1229 ], [ %1239, %1238 ]
  %.126.i310.i.i = phi ptr [ %.025.i306.i.i, %1229 ], [ %1240, %1238 ]
  %.024.i311.i.i = phi ptr [ %0, %1229 ], [ %1242, %1238 ]
  %.1.i312.i.i = phi i64 [ %1230, %1229 ], [ %math3704, %1238 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i311.i.i) #18
  call void %8(ptr align 1 %.024.i311.i.i, ptr align 1 %.029.i308.i.i) #18
  call void %8(ptr align 1 %.029.i308.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i310.i.i) #18
  call void %8(ptr align 1 %.126.i310.i.i, ptr align 1 %.128.i309.i.i) #18
  call void %8(ptr align 1 %.128.i309.i.i, ptr nonnull align 1 %10) #18
  %1237 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i312.i.i, i64 1)
  %math3704 = extractvalue { i64, i1 } %1237, 0
  %ov3705 = extractvalue { i64, i1 } %1237, 1
  br i1 %ov3705, label %sort.quad_reversal.exit313.i.i, label %1238

1238:                                             ; preds = %1236
  %1239 = getelementptr inbounds i8, ptr %.128.i309.i.i, i64 %6
  %1240 = getelementptr inbounds i8, ptr %.126.i310.i.i, i64 %.pre-phi.i304.i.i
  %1241 = getelementptr inbounds i8, ptr %.029.i308.i.i, i64 %.pre-phi.i304.i.i
  %1242 = getelementptr inbounds i8, ptr %.024.i311.i.i, i64 %6
  br label %1236

sort.quad_reversal.exit313.i.i:                   ; preds = %1236
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.thread.i.i

1243:                                             ; preds = %1103
  %1244 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1245 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1246 = ptrtoint ptr %1244 to i64
  %1247 = sub nuw i64 %1245, %1246
  %1248 = shl nuw i64 %6, 1
  %1249 = or i64 %1247, %1248
  %1250 = and i64 %1249, -4294967296
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %1252, label %1257

1252:                                             ; preds = %1243
  %1253 = trunc i64 %1248 to i32
  %1254 = trunc i64 %1247 to i32
  %1255 = udiv i32 %1254, %1253
  %1256 = zext i32 %1255 to i64
  br label %1259

1257:                                             ; preds = %1243
  %1258 = udiv i64 %1247, %1248
  br label %1259

1259:                                             ; preds = %1257, %1252
  %1260 = phi i64 [ %1256, %1252 ], [ %1258, %1257 ]
  %1261 = mul nuw i64 %1260, %6
  %1262 = getelementptr inbounds i8, ptr %1244, i64 %1261
  %1263 = sub i64 0, %1261
  %1264 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1263
  %1265 = and i64 %1260, 1
  %1266 = icmp eq i64 %1265, 0
  br i1 %1266, label %1269, label %._crit_edge.i315.i.i

._crit_edge.i315.i.i:                             ; preds = %1259
  %.pre.i314.i.i = sub i64 0, %6
  br label %1267

1267:                                             ; preds = %1269, %._crit_edge.i315.i.i
  %.pre-phi.i316.i.i = phi i64 [ %.pre.i314.i.i, %._crit_edge.i315.i.i ], [ %1270, %1269 ]
  %.027.i317.i.i = phi ptr [ %1264, %._crit_edge.i315.i.i ], [ %1272, %1269 ]
  %.025.i318.i.i = phi ptr [ %1262, %._crit_edge.i315.i.i ], [ %1271, %1269 ]
  %.0.i319.i.i = phi i64 [ %1260, %._crit_edge.i315.i.i ], [ %1273, %1269 ]
  %1268 = lshr i64 %.0.i319.i.i, 1
  br label %1274

1269:                                             ; preds = %1259
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1262) #18
  call void %8(ptr nonnull align 1 %1262, ptr nonnull align 1 %1264) #18
  %1270 = sub i64 0, %6
  %1271 = getelementptr inbounds i8, ptr %1262, i64 %1270
  call void %8(ptr nonnull align 1 %1264, ptr nonnull align 1 %10) #18
  %1272 = getelementptr inbounds i8, ptr %1264, i64 %6
  %1273 = add i64 %1260, -1
  br label %1267

1274:                                             ; preds = %1276, %1267
  %.029.i320.i.i = phi ptr [ %.4223.lcssa.i.i, %1267 ], [ %1279, %1276 ]
  %.128.i321.i.i = phi ptr [ %.027.i317.i.i, %1267 ], [ %1277, %1276 ]
  %.126.i322.i.i = phi ptr [ %.025.i318.i.i, %1267 ], [ %1278, %1276 ]
  %.024.i323.i.i = phi ptr [ %1244, %1267 ], [ %1280, %1276 ]
  %.1.i324.i.i = phi i64 [ %1268, %1267 ], [ %math3725, %1276 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i323.i.i) #18
  call void %8(ptr align 1 %.024.i323.i.i, ptr align 1 %.029.i320.i.i) #18
  call void %8(ptr align 1 %.029.i320.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i322.i.i) #18
  call void %8(ptr align 1 %.126.i322.i.i, ptr align 1 %.128.i321.i.i) #18
  call void %8(ptr align 1 %.128.i321.i.i, ptr nonnull align 1 %10) #18
  %1275 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i324.i.i, i64 1)
  %math3725 = extractvalue { i64, i1 } %1275, 0
  %ov3726 = extractvalue { i64, i1 } %1275, 1
  br i1 %ov3726, label %sort.quad_reversal.exit325.i.i, label %1276

1276:                                             ; preds = %1274
  %1277 = getelementptr inbounds i8, ptr %.128.i321.i.i, i64 %6
  %1278 = getelementptr inbounds i8, ptr %.126.i322.i.i, i64 %.pre-phi.i316.i.i
  %1279 = getelementptr inbounds i8, ptr %.029.i320.i.i, i64 %.pre-phi.i316.i.i
  %1280 = getelementptr inbounds i8, ptr %.024.i323.i.i, i64 %6
  br label %1274

sort.quad_reversal.exit325.i.i:                   ; preds = %1274
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %1126

1281:                                             ; preds = %1103
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1282 = ptrtoint ptr %.4.lcssa.i.i25 to i64
  %1283 = ptrtoint ptr %0 to i64
  %1284 = sub nuw i64 %1282, %1283
  %1285 = shl nuw i64 %6, 1
  %1286 = or i64 %1284, %1285
  %1287 = and i64 %1286, -4294967296
  %1288 = icmp eq i64 %1287, 0
  br i1 %1288, label %1289, label %1294

1289:                                             ; preds = %1281
  %1290 = trunc i64 %1285 to i32
  %1291 = trunc i64 %1284 to i32
  %1292 = udiv i32 %1291, %1290
  %1293 = zext i32 %1292 to i64
  br label %1296

1294:                                             ; preds = %1281
  %1295 = udiv i64 %1284, %1285
  br label %1296

1296:                                             ; preds = %1294, %1289
  %1297 = phi i64 [ %1293, %1289 ], [ %1295, %1294 ]
  %1298 = mul nuw i64 %1297, %6
  %1299 = getelementptr inbounds i8, ptr %0, i64 %1298
  %1300 = sub i64 0, %1298
  %1301 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %1300
  %1302 = and i64 %1297, 1
  %1303 = icmp eq i64 %1302, 0
  br i1 %1303, label %1306, label %._crit_edge.i327.i.i

._crit_edge.i327.i.i:                             ; preds = %1296
  %.pre.i326.i.i = sub i64 0, %6
  br label %1304

1304:                                             ; preds = %1306, %._crit_edge.i327.i.i
  %.pre-phi.i328.i.i = phi i64 [ %.pre.i326.i.i, %._crit_edge.i327.i.i ], [ %1307, %1306 ]
  %.027.i329.i.i = phi ptr [ %1301, %._crit_edge.i327.i.i ], [ %1309, %1306 ]
  %.025.i330.i.i = phi ptr [ %1299, %._crit_edge.i327.i.i ], [ %1308, %1306 ]
  %.0.i331.i.i = phi i64 [ %1297, %._crit_edge.i327.i.i ], [ %1310, %1306 ]
  %1305 = lshr i64 %.0.i331.i.i, 1
  br label %1311

1306:                                             ; preds = %1296
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1299) #18
  call void %8(ptr nonnull align 1 %1299, ptr nonnull align 1 %1301) #18
  %1307 = sub i64 0, %6
  %1308 = getelementptr inbounds i8, ptr %1299, i64 %1307
  call void %8(ptr nonnull align 1 %1301, ptr nonnull align 1 %10) #18
  %1309 = getelementptr inbounds i8, ptr %1301, i64 %6
  %1310 = add i64 %1297, -1
  br label %1304

1311:                                             ; preds = %1313, %1304
  %.029.i332.i.i = phi ptr [ %.4.lcssa.i.i25, %1304 ], [ %1316, %1313 ]
  %.128.i333.i.i = phi ptr [ %.027.i329.i.i, %1304 ], [ %1314, %1313 ]
  %.126.i334.i.i = phi ptr [ %.025.i330.i.i, %1304 ], [ %1315, %1313 ]
  %.024.i335.i.i = phi ptr [ %0, %1304 ], [ %1317, %1313 ]
  %.1.i336.i.i = phi i64 [ %1305, %1304 ], [ %math3746, %1313 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i335.i.i) #18
  call void %8(ptr align 1 %.024.i335.i.i, ptr align 1 %.029.i332.i.i) #18
  call void %8(ptr align 1 %.029.i332.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i334.i.i) #18
  call void %8(ptr align 1 %.126.i334.i.i, ptr align 1 %.128.i333.i.i) #18
  call void %8(ptr align 1 %.128.i333.i.i, ptr nonnull align 1 %10) #18
  %1312 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i336.i.i, i64 1)
  %math3746 = extractvalue { i64, i1 } %1312, 0
  %ov3747 = extractvalue { i64, i1 } %1312, 1
  br i1 %ov3747, label %sort.quad_reversal.exit337.i.i, label %1313

1313:                                             ; preds = %1311
  %1314 = getelementptr inbounds i8, ptr %.128.i333.i.i, i64 %6
  %1315 = getelementptr inbounds i8, ptr %.126.i334.i.i, i64 %.pre-phi.i328.i.i
  %1316 = getelementptr inbounds i8, ptr %.029.i332.i.i, i64 %.pre-phi.i328.i.i
  %1317 = getelementptr inbounds i8, ptr %.024.i335.i.i, i64 %6
  br label %1311

sort.quad_reversal.exit337.i.i:                   ; preds = %1311
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  %1318 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1319 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1320 = ptrtoint ptr %1318 to i64
  %1321 = sub nuw i64 %1319, %1320
  %1322 = or i64 %1321, %1285
  %1323 = and i64 %1322, -4294967296
  %1324 = icmp eq i64 %1323, 0
  br i1 %1324, label %1325, label %1330

1325:                                             ; preds = %sort.quad_reversal.exit337.i.i
  %1326 = trunc i64 %1285 to i32
  %1327 = trunc i64 %1321 to i32
  %1328 = udiv i32 %1327, %1326
  %1329 = zext i32 %1328 to i64
  br label %1332

1330:                                             ; preds = %sort.quad_reversal.exit337.i.i
  %1331 = udiv i64 %1321, %1285
  br label %1332

1332:                                             ; preds = %1330, %1325
  %1333 = phi i64 [ %1329, %1325 ], [ %1331, %1330 ]
  %1334 = mul nuw i64 %1333, %6
  %1335 = getelementptr inbounds i8, ptr %1318, i64 %1334
  %1336 = sub i64 0, %1334
  %1337 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1336
  %1338 = and i64 %1333, 1
  %1339 = icmp eq i64 %1338, 0
  br i1 %1339, label %1342, label %._crit_edge.i339.i.i

._crit_edge.i339.i.i:                             ; preds = %1332
  %.pre.i338.i.i = sub i64 0, %6
  br label %1340

1340:                                             ; preds = %1342, %._crit_edge.i339.i.i
  %.pre-phi.i340.i.i = phi i64 [ %.pre.i338.i.i, %._crit_edge.i339.i.i ], [ %1343, %1342 ]
  %.027.i341.i.i = phi ptr [ %1337, %._crit_edge.i339.i.i ], [ %1345, %1342 ]
  %.025.i342.i.i = phi ptr [ %1335, %._crit_edge.i339.i.i ], [ %1344, %1342 ]
  %.0.i343.i.i = phi i64 [ %1333, %._crit_edge.i339.i.i ], [ %1346, %1342 ]
  %1341 = lshr i64 %.0.i343.i.i, 1
  br label %1347

1342:                                             ; preds = %1332
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1335) #18
  call void %8(ptr nonnull align 1 %1335, ptr nonnull align 1 %1337) #18
  %1343 = sub i64 0, %6
  %1344 = getelementptr inbounds i8, ptr %1335, i64 %1343
  call void %8(ptr nonnull align 1 %1337, ptr nonnull align 1 %10) #18
  %1345 = getelementptr inbounds i8, ptr %1337, i64 %6
  %1346 = add i64 %1333, -1
  br label %1340

1347:                                             ; preds = %1349, %1340
  %.029.i344.i.i = phi ptr [ %.4223.lcssa.i.i, %1340 ], [ %1352, %1349 ]
  %.128.i345.i.i = phi ptr [ %.027.i341.i.i, %1340 ], [ %1350, %1349 ]
  %.126.i346.i.i = phi ptr [ %.025.i342.i.i, %1340 ], [ %1351, %1349 ]
  %.024.i347.i.i = phi ptr [ %1318, %1340 ], [ %1353, %1349 ]
  %.1.i348.i.i = phi i64 [ %1341, %1340 ], [ %math3767, %1349 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i347.i.i) #18
  call void %8(ptr align 1 %.024.i347.i.i, ptr align 1 %.029.i344.i.i) #18
  call void %8(ptr align 1 %.029.i344.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i346.i.i) #18
  call void %8(ptr align 1 %.126.i346.i.i, ptr align 1 %.128.i345.i.i) #18
  call void %8(ptr align 1 %.128.i345.i.i, ptr nonnull align 1 %10) #18
  %1348 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i348.i.i, i64 1)
  %math3767 = extractvalue { i64, i1 } %1348, 0
  %ov3768 = extractvalue { i64, i1 } %1348, 1
  br i1 %ov3768, label %.thread442.thread.thread.i.i, label %1349

1349:                                             ; preds = %1347
  %1350 = getelementptr inbounds i8, ptr %.128.i345.i.i, i64 %6
  %1351 = getelementptr inbounds i8, ptr %.126.i346.i.i, i64 %.pre-phi.i340.i.i
  %1352 = getelementptr inbounds i8, ptr %.029.i344.i.i, i64 %.pre-phi.i340.i.i
  %1353 = getelementptr inbounds i8, ptr %.024.i347.i.i, i64 %6
  br label %1347

.thread442.thread.thread.i.i:                     ; preds = %1347
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %1088

1354:                                             ; preds = %1103
  %1355 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1356 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1357 = ptrtoint ptr %1355 to i64
  %1358 = sub nuw i64 %1356, %1357
  %1359 = shl nuw i64 %6, 1
  %1360 = or i64 %1358, %1359
  %1361 = and i64 %1360, -4294967296
  %1362 = icmp eq i64 %1361, 0
  br i1 %1362, label %1363, label %1368

1363:                                             ; preds = %1354
  %1364 = trunc i64 %1359 to i32
  %1365 = trunc i64 %1358 to i32
  %1366 = udiv i32 %1365, %1364
  %1367 = zext i32 %1366 to i64
  br label %1370

1368:                                             ; preds = %1354
  %1369 = udiv i64 %1358, %1359
  br label %1370

1370:                                             ; preds = %1368, %1363
  %1371 = phi i64 [ %1367, %1363 ], [ %1369, %1368 ]
  %1372 = mul nuw i64 %1371, %6
  %1373 = getelementptr inbounds i8, ptr %1355, i64 %1372
  %1374 = sub i64 0, %1372
  %1375 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1374
  %1376 = and i64 %1371, 1
  %1377 = icmp eq i64 %1376, 0
  br i1 %1377, label %1380, label %._crit_edge.i351.i.i

._crit_edge.i351.i.i:                             ; preds = %1370
  %.pre.i350.i.i = sub i64 0, %6
  br label %1378

1378:                                             ; preds = %1380, %._crit_edge.i351.i.i
  %.pre-phi.i352.i.i = phi i64 [ %.pre.i350.i.i, %._crit_edge.i351.i.i ], [ %1381, %1380 ]
  %.027.i353.i.i = phi ptr [ %1375, %._crit_edge.i351.i.i ], [ %1383, %1380 ]
  %.025.i354.i.i = phi ptr [ %1373, %._crit_edge.i351.i.i ], [ %1382, %1380 ]
  %.0.i355.i.i = phi i64 [ %1371, %._crit_edge.i351.i.i ], [ %1384, %1380 ]
  %1379 = lshr i64 %.0.i355.i.i, 1
  br label %1385

1380:                                             ; preds = %1370
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1373) #18
  call void %8(ptr nonnull align 1 %1373, ptr nonnull align 1 %1375) #18
  %1381 = sub i64 0, %6
  %1382 = getelementptr inbounds i8, ptr %1373, i64 %1381
  call void %8(ptr nonnull align 1 %1375, ptr nonnull align 1 %10) #18
  %1383 = getelementptr inbounds i8, ptr %1375, i64 %6
  %1384 = add i64 %1371, -1
  br label %1378

1385:                                             ; preds = %1387, %1378
  %.029.i356.i.i = phi ptr [ %.4223.lcssa.i.i, %1378 ], [ %1390, %1387 ]
  %.128.i357.i.i = phi ptr [ %.027.i353.i.i, %1378 ], [ %1388, %1387 ]
  %.126.i358.i.i = phi ptr [ %.025.i354.i.i, %1378 ], [ %1389, %1387 ]
  %.024.i359.i.i = phi ptr [ %1355, %1378 ], [ %1391, %1387 ]
  %.1.i360.i.i = phi i64 [ %1379, %1378 ], [ %math3788, %1387 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i359.i.i) #18
  call void %8(ptr align 1 %.024.i359.i.i, ptr align 1 %.029.i356.i.i) #18
  call void %8(ptr align 1 %.029.i356.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i358.i.i) #18
  call void %8(ptr align 1 %.126.i358.i.i, ptr align 1 %.128.i357.i.i) #18
  call void %8(ptr align 1 %.128.i357.i.i, ptr nonnull align 1 %10) #18
  %1386 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i360.i.i, i64 1)
  %math3788 = extractvalue { i64, i1 } %1386, 0
  %ov3789 = extractvalue { i64, i1 } %1386, 1
  br i1 %ov3789, label %sort.quad_reversal.exit361.i.i, label %1387

1387:                                             ; preds = %1385
  %1388 = getelementptr inbounds i8, ptr %.128.i357.i.i, i64 %6
  %1389 = getelementptr inbounds i8, ptr %.126.i358.i.i, i64 %.pre-phi.i352.i.i
  %1390 = getelementptr inbounds i8, ptr %.029.i356.i.i, i64 %.pre-phi.i352.i.i
  %1391 = getelementptr inbounds i8, ptr %.024.i359.i.i, i64 %6
  br label %1385

sort.quad_reversal.exit361.i.i:                   ; preds = %1385
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %1126

1392:                                             ; preds = %1103
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1393 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1394 = ptrtoint ptr %0 to i64
  %1395 = sub nuw i64 %1393, %1394
  %1396 = shl nuw i64 %6, 1
  %1397 = or i64 %1395, %1396
  %1398 = and i64 %1397, -4294967296
  %1399 = icmp eq i64 %1398, 0
  br i1 %1399, label %1400, label %1405

1400:                                             ; preds = %1392
  %1401 = trunc i64 %1396 to i32
  %1402 = trunc i64 %1395 to i32
  %1403 = udiv i32 %1402, %1401
  %1404 = zext i32 %1403 to i64
  br label %1407

1405:                                             ; preds = %1392
  %1406 = udiv i64 %1395, %1396
  br label %1407

1407:                                             ; preds = %1405, %1400
  %1408 = phi i64 [ %1404, %1400 ], [ %1406, %1405 ]
  %1409 = mul nuw i64 %1408, %6
  %1410 = getelementptr inbounds i8, ptr %0, i64 %1409
  %1411 = sub i64 0, %1409
  %1412 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1411
  %1413 = and i64 %1408, 1
  %1414 = icmp eq i64 %1413, 0
  br i1 %1414, label %1417, label %._crit_edge.i363.i.i

._crit_edge.i363.i.i:                             ; preds = %1407
  %.pre.i362.i.i = sub i64 0, %6
  br label %1415

1415:                                             ; preds = %1417, %._crit_edge.i363.i.i
  %.pre-phi.i364.i.i = phi i64 [ %.pre.i362.i.i, %._crit_edge.i363.i.i ], [ %1418, %1417 ]
  %.027.i365.i.i = phi ptr [ %1412, %._crit_edge.i363.i.i ], [ %1420, %1417 ]
  %.025.i366.i.i = phi ptr [ %1410, %._crit_edge.i363.i.i ], [ %1419, %1417 ]
  %.0.i367.i.i = phi i64 [ %1408, %._crit_edge.i363.i.i ], [ %1421, %1417 ]
  %1416 = lshr i64 %.0.i367.i.i, 1
  br label %1422

1417:                                             ; preds = %1407
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1410) #18
  call void %8(ptr nonnull align 1 %1410, ptr nonnull align 1 %1412) #18
  %1418 = sub i64 0, %6
  %1419 = getelementptr inbounds i8, ptr %1410, i64 %1418
  call void %8(ptr nonnull align 1 %1412, ptr nonnull align 1 %10) #18
  %1420 = getelementptr inbounds i8, ptr %1412, i64 %6
  %1421 = add i64 %1408, -1
  br label %1415

1422:                                             ; preds = %1424, %1415
  %.029.i368.i.i = phi ptr [ %.4223.lcssa.i.i, %1415 ], [ %1427, %1424 ]
  %.128.i369.i.i = phi ptr [ %.027.i365.i.i, %1415 ], [ %1425, %1424 ]
  %.126.i370.i.i = phi ptr [ %.025.i366.i.i, %1415 ], [ %1426, %1424 ]
  %.024.i371.i.i = phi ptr [ %0, %1415 ], [ %1428, %1424 ]
  %.1.i372.i.i = phi i64 [ %1416, %1415 ], [ %math3809, %1424 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i371.i.i) #18
  call void %8(ptr align 1 %.024.i371.i.i, ptr align 1 %.029.i368.i.i) #18
  call void %8(ptr align 1 %.029.i368.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i370.i.i) #18
  call void %8(ptr align 1 %.126.i370.i.i, ptr align 1 %.128.i369.i.i) #18
  call void %8(ptr align 1 %.128.i369.i.i, ptr nonnull align 1 %10) #18
  %1423 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i372.i.i, i64 1)
  %math3809 = extractvalue { i64, i1 } %1423, 0
  %ov3810 = extractvalue { i64, i1 } %1423, 1
  br i1 %ov3810, label %sort.quad_reversal.exit373.i.i, label %1424

1424:                                             ; preds = %1422
  %1425 = getelementptr inbounds i8, ptr %.128.i369.i.i, i64 %6
  %1426 = getelementptr inbounds i8, ptr %.126.i370.i.i, i64 %.pre-phi.i364.i.i
  %1427 = getelementptr inbounds i8, ptr %.029.i368.i.i, i64 %.pre-phi.i364.i.i
  %1428 = getelementptr inbounds i8, ptr %.024.i371.i.i, i64 %6
  br label %1422

sort.quad_reversal.exit373.i.i:                   ; preds = %1422
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %sort.flux_analyze__anon_13922.exit.i

1429:                                             ; preds = %sort.quad_reversal.exit385.i.i, %1126
  %.5233.i.i = phi i64 [ 0, %sort.quad_reversal.exit385.i.i ], [ %.2230.lcssa.i.i, %1126 ]
  %1430 = icmp eq i64 %1073, 1
  %1431 = icmp ne i64 %.5239.i.i, 0
  %1432 = and i1 %1430, %1431
  br i1 %1432, label %1473, label %.thread442.i.i

1433:                                             ; preds = %1126
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1434 = ptrtoint ptr %.3.lcssa.i.i26 to i64
  %1435 = ptrtoint ptr %0 to i64
  %1436 = sub nuw i64 %1434, %1435
  %1437 = shl nuw i64 %6, 1
  %1438 = or i64 %1436, %1437
  %1439 = and i64 %1438, -4294967296
  %1440 = icmp eq i64 %1439, 0
  br i1 %1440, label %1441, label %1446

1441:                                             ; preds = %1433
  %1442 = trunc i64 %1437 to i32
  %1443 = trunc i64 %1436 to i32
  %1444 = udiv i32 %1443, %1442
  %1445 = zext i32 %1444 to i64
  br label %1448

1446:                                             ; preds = %1433
  %1447 = udiv i64 %1436, %1437
  br label %1448

1448:                                             ; preds = %1446, %1441
  %1449 = phi i64 [ %1445, %1441 ], [ %1447, %1446 ]
  %1450 = mul nuw i64 %1449, %6
  %1451 = getelementptr inbounds i8, ptr %0, i64 %1450
  %1452 = sub i64 0, %1450
  %1453 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %1452
  %1454 = and i64 %1449, 1
  %1455 = icmp eq i64 %1454, 0
  br i1 %1455, label %1458, label %._crit_edge.i375.i.i

._crit_edge.i375.i.i:                             ; preds = %1448
  %.pre.i374.i.i = sub i64 0, %6
  br label %1456

1456:                                             ; preds = %1458, %._crit_edge.i375.i.i
  %.pre-phi.i376.i.i = phi i64 [ %.pre.i374.i.i, %._crit_edge.i375.i.i ], [ %1459, %1458 ]
  %.027.i377.i.i = phi ptr [ %1453, %._crit_edge.i375.i.i ], [ %1461, %1458 ]
  %.025.i378.i.i = phi ptr [ %1451, %._crit_edge.i375.i.i ], [ %1460, %1458 ]
  %.0.i379.i.i = phi i64 [ %1449, %._crit_edge.i375.i.i ], [ %1462, %1458 ]
  %1457 = lshr i64 %.0.i379.i.i, 1
  br label %1463

1458:                                             ; preds = %1448
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1451) #18
  call void %8(ptr nonnull align 1 %1451, ptr nonnull align 1 %1453) #18
  %1459 = sub i64 0, %6
  %1460 = getelementptr inbounds i8, ptr %1451, i64 %1459
  call void %8(ptr nonnull align 1 %1453, ptr nonnull align 1 %10) #18
  %1461 = getelementptr inbounds i8, ptr %1453, i64 %6
  %1462 = add i64 %1449, -1
  br label %1456

1463:                                             ; preds = %1465, %1456
  %.029.i380.i.i = phi ptr [ %.3.lcssa.i.i26, %1456 ], [ %1468, %1465 ]
  %.128.i381.i.i = phi ptr [ %.027.i377.i.i, %1456 ], [ %1466, %1465 ]
  %.126.i382.i.i = phi ptr [ %.025.i378.i.i, %1456 ], [ %1467, %1465 ]
  %.024.i383.i.i = phi ptr [ %0, %1456 ], [ %1469, %1465 ]
  %.1.i384.i.i = phi i64 [ %1457, %1456 ], [ %math3830, %1465 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i383.i.i) #18
  call void %8(ptr align 1 %.024.i383.i.i, ptr align 1 %.029.i380.i.i) #18
  call void %8(ptr align 1 %.029.i380.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i382.i.i) #18
  call void %8(ptr align 1 %.126.i382.i.i, ptr align 1 %.128.i381.i.i) #18
  call void %8(ptr align 1 %.128.i381.i.i, ptr nonnull align 1 %10) #18
  %1464 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i384.i.i, i64 1)
  %math3830 = extractvalue { i64, i1 } %1464, 0
  %ov3831 = extractvalue { i64, i1 } %1464, 1
  br i1 %ov3831, label %sort.quad_reversal.exit385.i.i, label %1465

1465:                                             ; preds = %1463
  %1466 = getelementptr inbounds i8, ptr %.128.i381.i.i, i64 %6
  %1467 = getelementptr inbounds i8, ptr %.126.i382.i.i, i64 %.pre-phi.i376.i.i
  %1468 = getelementptr inbounds i8, ptr %.029.i380.i.i, i64 %.pre-phi.i376.i.i
  %1469 = getelementptr inbounds i8, ptr %.024.i383.i.i, i64 %6
  br label %1463

sort.quad_reversal.exit385.i.i:                   ; preds = %1463
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %1429

.thread442.i.i:                                   ; preds = %sort.quad_reversal.exit397.i.i, %1429, %sort.quad_reversal.exit.i.i49
  %.5233449.i.i = phi i64 [ %.5233.i.i, %sort.quad_reversal.exit397.i.i ], [ %.5233.i.i, %1429 ], [ 0, %sort.quad_reversal.exit.i.i49 ]
  %.5253439448.i.i = phi i64 [ %.5253.i.i, %sort.quad_reversal.exit397.i.i ], [ %.5253.i.i, %1429 ], [ %.3251.lcssa.i.i, %sort.quad_reversal.exit.i.i49 ]
  %.5246440447.i.i = phi i64 [ %.5246.i.i, %sort.quad_reversal.exit397.i.i ], [ %.5246.i.i, %1429 ], [ %.3244.lcssa.i.i, %sort.quad_reversal.exit.i.i49 ]
  %.6240.i.i = phi i64 [ 0, %sort.quad_reversal.exit397.i.i ], [ %.5239.i.i, %1429 ], [ 0, %sort.quad_reversal.exit.i.i49 ]
  %1470 = icmp eq i64 %1075, 1
  %1471 = icmp ne i64 %.5246440447.i.i, 0
  %1472 = and i1 %1470, %1471
  br i1 %1472, label %1513, label %.thread442.thread.i.i

1473:                                             ; preds = %1429
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1474 = ptrtoint ptr %.4.lcssa.i.i25 to i64
  %1475 = ptrtoint ptr %1108 to i64
  %1476 = sub nuw i64 %1474, %1475
  %1477 = shl nuw i64 %6, 1
  %1478 = or i64 %1476, %1477
  %1479 = and i64 %1478, -4294967296
  %1480 = icmp eq i64 %1479, 0
  br i1 %1480, label %1481, label %1486

1481:                                             ; preds = %1473
  %1482 = trunc i64 %1477 to i32
  %1483 = trunc i64 %1476 to i32
  %1484 = udiv i32 %1483, %1482
  %1485 = zext i32 %1484 to i64
  br label %1488

1486:                                             ; preds = %1473
  %1487 = udiv i64 %1476, %1477
  br label %1488

1488:                                             ; preds = %1486, %1481
  %1489 = phi i64 [ %1485, %1481 ], [ %1487, %1486 ]
  %1490 = mul nuw i64 %1489, %6
  %1491 = getelementptr inbounds i8, ptr %1108, i64 %1490
  %1492 = sub i64 0, %1490
  %1493 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %1492
  %1494 = and i64 %1489, 1
  %1495 = icmp eq i64 %1494, 0
  br i1 %1495, label %1498, label %._crit_edge.i387.i.i

._crit_edge.i387.i.i:                             ; preds = %1488
  %.pre.i386.i.i = sub i64 0, %6
  br label %1496

1496:                                             ; preds = %1498, %._crit_edge.i387.i.i
  %.pre-phi.i388.i.i = phi i64 [ %.pre.i386.i.i, %._crit_edge.i387.i.i ], [ %1499, %1498 ]
  %.027.i389.i.i = phi ptr [ %1493, %._crit_edge.i387.i.i ], [ %1501, %1498 ]
  %.025.i390.i.i = phi ptr [ %1491, %._crit_edge.i387.i.i ], [ %1500, %1498 ]
  %.0.i391.i.i = phi i64 [ %1489, %._crit_edge.i387.i.i ], [ %1502, %1498 ]
  %1497 = lshr i64 %.0.i391.i.i, 1
  br label %1503

1498:                                             ; preds = %1488
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1491) #18
  call void %8(ptr nonnull align 1 %1491, ptr nonnull align 1 %1493) #18
  %1499 = sub i64 0, %6
  %1500 = getelementptr inbounds i8, ptr %1491, i64 %1499
  call void %8(ptr nonnull align 1 %1493, ptr nonnull align 1 %10) #18
  %1501 = getelementptr inbounds i8, ptr %1493, i64 %6
  %1502 = add i64 %1489, -1
  br label %1496

1503:                                             ; preds = %1505, %1496
  %.029.i392.i.i = phi ptr [ %.4.lcssa.i.i25, %1496 ], [ %1508, %1505 ]
  %.128.i393.i.i = phi ptr [ %.027.i389.i.i, %1496 ], [ %1506, %1505 ]
  %.126.i394.i.i = phi ptr [ %.025.i390.i.i, %1496 ], [ %1507, %1505 ]
  %.024.i395.i.i = phi ptr [ %1108, %1496 ], [ %1509, %1505 ]
  %.1.i396.i.i = phi i64 [ %1497, %1496 ], [ %math3851, %1505 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i395.i.i) #18
  call void %8(ptr align 1 %.024.i395.i.i, ptr align 1 %.029.i392.i.i) #18
  call void %8(ptr align 1 %.029.i392.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i394.i.i) #18
  call void %8(ptr align 1 %.126.i394.i.i, ptr align 1 %.128.i393.i.i) #18
  call void %8(ptr align 1 %.128.i393.i.i, ptr nonnull align 1 %10) #18
  %1504 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i396.i.i, i64 1)
  %math3851 = extractvalue { i64, i1 } %1504, 0
  %ov3852 = extractvalue { i64, i1 } %1504, 1
  br i1 %ov3852, label %sort.quad_reversal.exit397.i.i, label %1505

1505:                                             ; preds = %1503
  %1506 = getelementptr inbounds i8, ptr %.128.i393.i.i, i64 %6
  %1507 = getelementptr inbounds i8, ptr %.126.i394.i.i, i64 %.pre-phi.i388.i.i
  %1508 = getelementptr inbounds i8, ptr %.029.i392.i.i, i64 %.pre-phi.i388.i.i
  %1509 = getelementptr inbounds i8, ptr %.024.i395.i.i, i64 %6
  br label %1503

sort.quad_reversal.exit397.i.i:                   ; preds = %1503
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.i.i

.thread442.thread.i.i:                            ; preds = %sort.quad_reversal.exit409.i.i, %.thread442.i.i, %sort.quad_reversal.exit313.i.i
  %.6240456.i.i = phi i64 [ %.6240.i.i, %sort.quad_reversal.exit409.i.i ], [ %.6240.i.i, %.thread442.i.i ], [ 0, %sort.quad_reversal.exit313.i.i ]
  %.5253439448455.i.i = phi i64 [ %.5253439448.i.i, %sort.quad_reversal.exit409.i.i ], [ %.5253439448.i.i, %.thread442.i.i ], [ %.3251.lcssa.i.i, %sort.quad_reversal.exit313.i.i ]
  %.5233449454.i.i = phi i64 [ %.5233449.i.i, %sort.quad_reversal.exit409.i.i ], [ %.5233449.i.i, %.thread442.i.i ], [ 0, %sort.quad_reversal.exit313.i.i ]
  %.6247.i.i = phi i64 [ 0, %sort.quad_reversal.exit409.i.i ], [ %.5246440447.i.i, %.thread442.i.i ], [ 0, %sort.quad_reversal.exit313.i.i ]
  %1510 = icmp eq i64 %1077, 1
  %1511 = icmp ne i64 %.5253439448455.i.i, 0
  %1512 = and i1 %1510, %1511
  br i1 %1512, label %1550, label %1088

1513:                                             ; preds = %.thread442.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1514 = ptrtoint ptr %.4218.lcssa.i.i to i64
  %1515 = ptrtoint ptr %1113 to i64
  %1516 = sub nuw i64 %1514, %1515
  %1517 = shl nuw i64 %6, 1
  %1518 = or i64 %1516, %1517
  %1519 = and i64 %1518, -4294967296
  %1520 = icmp eq i64 %1519, 0
  br i1 %1520, label %1521, label %1526

1521:                                             ; preds = %1513
  %1522 = trunc i64 %1517 to i32
  %1523 = trunc i64 %1516 to i32
  %1524 = udiv i32 %1523, %1522
  %1525 = zext i32 %1524 to i64
  br label %1528

1526:                                             ; preds = %1513
  %1527 = udiv i64 %1516, %1517
  br label %1528

1528:                                             ; preds = %1526, %1521
  %1529 = phi i64 [ %1525, %1521 ], [ %1527, %1526 ]
  %1530 = mul nuw i64 %1529, %6
  %1531 = getelementptr inbounds i8, ptr %1113, i64 %1530
  %1532 = sub i64 0, %1530
  %1533 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %1532
  %1534 = and i64 %1529, 1
  %1535 = icmp eq i64 %1534, 0
  br i1 %1535, label %1538, label %._crit_edge.i399.i.i

._crit_edge.i399.i.i:                             ; preds = %1528
  %.pre.i398.i.i = sub i64 0, %6
  br label %1536

1536:                                             ; preds = %1538, %._crit_edge.i399.i.i
  %.pre-phi.i400.i.i = phi i64 [ %.pre.i398.i.i, %._crit_edge.i399.i.i ], [ %1539, %1538 ]
  %.027.i401.i.i = phi ptr [ %1533, %._crit_edge.i399.i.i ], [ %1541, %1538 ]
  %.025.i402.i.i = phi ptr [ %1531, %._crit_edge.i399.i.i ], [ %1540, %1538 ]
  %.0.i403.i.i = phi i64 [ %1529, %._crit_edge.i399.i.i ], [ %1542, %1538 ]
  %1537 = lshr i64 %.0.i403.i.i, 1
  br label %1543

1538:                                             ; preds = %1528
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1531) #18
  call void %8(ptr nonnull align 1 %1531, ptr nonnull align 1 %1533) #18
  %1539 = sub i64 0, %6
  %1540 = getelementptr inbounds i8, ptr %1531, i64 %1539
  call void %8(ptr nonnull align 1 %1533, ptr nonnull align 1 %10) #18
  %1541 = getelementptr inbounds i8, ptr %1533, i64 %6
  %1542 = add i64 %1529, -1
  br label %1536

1543:                                             ; preds = %1545, %1536
  %.029.i404.i.i = phi ptr [ %.4218.lcssa.i.i, %1536 ], [ %1548, %1545 ]
  %.128.i405.i.i = phi ptr [ %.027.i401.i.i, %1536 ], [ %1546, %1545 ]
  %.126.i406.i.i = phi ptr [ %.025.i402.i.i, %1536 ], [ %1547, %1545 ]
  %.024.i407.i.i = phi ptr [ %1113, %1536 ], [ %1549, %1545 ]
  %.1.i408.i.i = phi i64 [ %1537, %1536 ], [ %math3872, %1545 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i407.i.i) #18
  call void %8(ptr align 1 %.024.i407.i.i, ptr align 1 %.029.i404.i.i) #18
  call void %8(ptr align 1 %.029.i404.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i406.i.i) #18
  call void %8(ptr align 1 %.126.i406.i.i, ptr align 1 %.128.i405.i.i) #18
  call void %8(ptr align 1 %.128.i405.i.i, ptr nonnull align 1 %10) #18
  %1544 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i408.i.i, i64 1)
  %math3872 = extractvalue { i64, i1 } %1544, 0
  %ov3873 = extractvalue { i64, i1 } %1544, 1
  br i1 %ov3873, label %sort.quad_reversal.exit409.i.i, label %1545

1545:                                             ; preds = %1543
  %1546 = getelementptr inbounds i8, ptr %.128.i405.i.i, i64 %6
  %1547 = getelementptr inbounds i8, ptr %.126.i406.i.i, i64 %.pre-phi.i400.i.i
  %1548 = getelementptr inbounds i8, ptr %.029.i404.i.i, i64 %.pre-phi.i400.i.i
  %1549 = getelementptr inbounds i8, ptr %.024.i407.i.i, i64 %6
  br label %1543

sort.quad_reversal.exit409.i.i:                   ; preds = %1543
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.thread.i.i

1550:                                             ; preds = %.thread442.thread.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1551 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1552 = ptrtoint ptr %1117 to i64
  %1553 = sub nuw i64 %1551, %1552
  %1554 = shl nuw i64 %6, 1
  %1555 = or i64 %1553, %1554
  %1556 = and i64 %1555, -4294967296
  %1557 = icmp eq i64 %1556, 0
  br i1 %1557, label %1558, label %1563

1558:                                             ; preds = %1550
  %1559 = trunc i64 %1554 to i32
  %1560 = trunc i64 %1553 to i32
  %1561 = udiv i32 %1560, %1559
  %1562 = zext i32 %1561 to i64
  br label %1565

1563:                                             ; preds = %1550
  %1564 = udiv i64 %1553, %1554
  br label %1565

1565:                                             ; preds = %1563, %1558
  %1566 = phi i64 [ %1562, %1558 ], [ %1564, %1563 ]
  %1567 = mul nuw i64 %1566, %6
  %1568 = getelementptr inbounds i8, ptr %1117, i64 %1567
  %1569 = sub i64 0, %1567
  %1570 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1569
  %1571 = and i64 %1566, 1
  %1572 = icmp eq i64 %1571, 0
  br i1 %1572, label %1575, label %._crit_edge.i411.i.i

._crit_edge.i411.i.i:                             ; preds = %1565
  %.pre.i410.i.i = sub i64 0, %6
  br label %1573

1573:                                             ; preds = %1575, %._crit_edge.i411.i.i
  %.pre-phi.i412.i.i = phi i64 [ %.pre.i410.i.i, %._crit_edge.i411.i.i ], [ %1576, %1575 ]
  %.027.i413.i.i = phi ptr [ %1570, %._crit_edge.i411.i.i ], [ %1578, %1575 ]
  %.025.i414.i.i = phi ptr [ %1568, %._crit_edge.i411.i.i ], [ %1577, %1575 ]
  %.0.i415.i.i = phi i64 [ %1566, %._crit_edge.i411.i.i ], [ %1579, %1575 ]
  %1574 = lshr i64 %.0.i415.i.i, 1
  br label %1580

1575:                                             ; preds = %1565
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1568) #18
  call void %8(ptr nonnull align 1 %1568, ptr nonnull align 1 %1570) #18
  %1576 = sub i64 0, %6
  %1577 = getelementptr inbounds i8, ptr %1568, i64 %1576
  call void %8(ptr nonnull align 1 %1570, ptr nonnull align 1 %10) #18
  %1578 = getelementptr inbounds i8, ptr %1570, i64 %6
  %1579 = add i64 %1566, -1
  br label %1573

1580:                                             ; preds = %1582, %1573
  %.029.i416.i.i = phi ptr [ %.4223.lcssa.i.i, %1573 ], [ %1585, %1582 ]
  %.128.i417.i.i = phi ptr [ %.027.i413.i.i, %1573 ], [ %1583, %1582 ]
  %.126.i418.i.i = phi ptr [ %.025.i414.i.i, %1573 ], [ %1584, %1582 ]
  %.024.i419.i.i = phi ptr [ %1117, %1573 ], [ %1586, %1582 ]
  %.1.i420.i.i = phi i64 [ %1574, %1573 ], [ %math3893, %1582 ]
  call void %8(ptr nonnull align 1 %11, ptr align 1 %.024.i419.i.i) #18
  call void %8(ptr align 1 %.024.i419.i.i, ptr align 1 %.029.i416.i.i) #18
  call void %8(ptr align 1 %.029.i416.i.i, ptr nonnull align 1 %11) #18
  call void %8(ptr nonnull align 1 %10, ptr align 1 %.126.i418.i.i) #18
  call void %8(ptr align 1 %.126.i418.i.i, ptr align 1 %.128.i417.i.i) #18
  call void %8(ptr align 1 %.128.i417.i.i, ptr nonnull align 1 %10) #18
  %1581 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i420.i.i, i64 1)
  %math3893 = extractvalue { i64, i1 } %1581, 0
  %ov3894 = extractvalue { i64, i1 } %1581, 1
  br i1 %ov3894, label %sort.quad_reversal.exit421.i.i, label %1582

1582:                                             ; preds = %1580
  %1583 = getelementptr inbounds i8, ptr %.128.i417.i.i, i64 %6
  %1584 = getelementptr inbounds i8, ptr %.126.i418.i.i, i64 %.pre-phi.i412.i.i
  %1585 = getelementptr inbounds i8, ptr %.029.i416.i.i, i64 %.pre-phi.i412.i.i
  %1586 = getelementptr inbounds i8, ptr %.024.i419.i.i, i64 %6
  br label %1580

sort.quad_reversal.exit421.i.i:                   ; preds = %1580
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %1088

1587:                                             ; preds = %1595, %1088
  %.0265.i.i50 = phi i4 [ 1, %1595 ], [ %1101, %1088 ]
  %.0264.i.i51 = phi i4 [ 1, %1595 ], [ %1098, %1088 ]
  %.0263.i.i = phi i4 [ 1, %1595 ], [ %1095, %1088 ]
  %.0262.i.i = phi i4 [ 1, %1595 ], [ %1092, %1088 ]
  %1588 = shl nuw nsw i4 %.0263.i.i, 1
  %1589 = shl nuw nsw i4 %.0264.i.i51, 2
  %1590 = or i4 %1588, %1589
  %1591 = shl nuw i4 %.0265.i.i50, 3
  %1592 = or i4 %1590, %1591
  %1593 = or i4 %1592, %.0262.i.i
  %1594 = zext i4 %1593 to i32
  switch i32 %1594, label %1600 [
    i32 0, label %1601
    i32 1, label %1603
    i32 2, label %1615
    i32 3, label %1628
    i32 4, label %1647
    i32 8, label %1660
    i32 9, label %1670
    i32 12, label %1690
    i32 5, label %1708
    i32 6, label %1708
    i32 7, label %1708
    i32 10, label %1708
    i32 11, label %1708
    i32 13, label %1708
    i32 14, label %1708
    i32 15, label %1708
  ]

1595:                                             ; preds = %1088
  br label %1587

sort.quadsort_swap__anon_14511.exit426.i.i:       ; preds = %1756, %1754, %1753, %1746, %1745, %1706, %1704, %1703, %sort.quadsort_swap__anon_14511.exit429.i.i, %1688, %1686, %1685, %sort.quadsort_swap__anon_14511.exit427.i.i, %1668, %1666, %1665, %1660, %sort.quadsort_swap__anon_14511.exit425.i.i, %sort.quadsort_swap__anon_14511.exit424.i.i, %sort.quadsort_swap__anon_14511.exit422.i.i, %sort.quadsort_swap__anon_14511.exit.i.i
  %1596 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1597 = call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i26, ptr align 1 %1596) #18
  %.not269.i.i52 = icmp eq i8 %1597, 1
  %1598 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1599 = call i8 %2(ptr align 1 %3, ptr align 1 %.4218.lcssa.i.i, ptr align 1 %1598) #18
  br i1 %.not269.i.i52, label %1761, label %1759

1600:                                             ; preds = %1587
  unreachable

1601:                                             ; preds = %1587
  %1602 = getelementptr inbounds i8, ptr %91, i64 %90
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %1602, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.flux_analyze__anon_13922.exit.i

1603:                                             ; preds = %1587
  %.not286.i.i54 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not286.i.i54, label %sort.quadsort_swap__anon_14511.exit.i.i, label %1608

sort.quadsort_swap__anon_14511.exit.i.i:          ; preds = %1613, %1611, %1610, %1603
  %1604 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1605 = add nuw i64 %944, %945
  %1606 = mul nuw i64 %1605, %6
  %1607 = getelementptr inbounds i8, ptr %91, i64 %1606
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1604, ptr nonnull align 1 %91, ptr nonnull align 1 %1604, ptr nonnull align 1 %1607, i64 %1605, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1608:                                             ; preds = %1603
  %1609 = icmp ult i64 %1, 384
  br i1 %1609, label %1610, label %1611

1610:                                             ; preds = %1608
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit.i.i

1611:                                             ; preds = %1608
  %1612 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %943, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1612, label %1613, label %sort.quadsort_swap__anon_14511.exit.i.i

1613:                                             ; preds = %1611
  %1614 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, i64 %1614, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit.i.i

1615:                                             ; preds = %1587
  %1616 = getelementptr inbounds i8, ptr %91, i64 %948
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %1616, i64 %943, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  %.not285.i.i55 = icmp eq i64 %.4238.i.i, 0
  br i1 %.not285.i.i55, label %sort.quadsort_swap__anon_14511.exit422.i.i, label %1620

sort.quadsort_swap__anon_14511.exit422.i.i:       ; preds = %1626, %1624, %1623, %1615
  %1617 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1618 = mul nuw i64 %945, %6
  %1619 = getelementptr inbounds i8, ptr %91, i64 %1618
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1617, ptr nonnull align 1 %91, ptr nonnull align 1 %1617, ptr nonnull align 1 %1619, i64 %945, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1620:                                             ; preds = %1615
  %1621 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1622 = icmp ult i64 %944, 96
  br i1 %1622, label %1623, label %1624

1623:                                             ; preds = %1620
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1621, i64 %944, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit422.i.i

1624:                                             ; preds = %1620
  %1625 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1621, i64 %944, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1625, label %1626, label %sort.quadsort_swap__anon_14511.exit422.i.i

1626:                                             ; preds = %1624
  %1627 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1621, i64 %944, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1621, i64 %944, ptr nonnull align 1 %91, i64 %1, i64 %1627, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit422.i.i

1628:                                             ; preds = %1587
  %.not283.i.i56 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not283.i.i56, label %sort.quadsort_swap__anon_14511.exit423.i.i, label %1629

sort.quadsort_swap__anon_14511.exit423.i.i:       ; preds = %1634, %1632, %1631, %1628
  %.not284.i.i57 = icmp eq i64 %.4238.i.i, 0
  br i1 %.not284.i.i57, label %sort.quadsort_swap__anon_14511.exit424.i.i, label %1639

1629:                                             ; preds = %1628
  %1630 = icmp ult i64 %1, 384
  br i1 %1630, label %1631, label %1632

1631:                                             ; preds = %1629
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit423.i.i

1632:                                             ; preds = %1629
  %1633 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %943, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1633, label %1634, label %sort.quadsort_swap__anon_14511.exit423.i.i

1634:                                             ; preds = %1632
  %1635 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, i64 %1635, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit423.i.i

sort.quadsort_swap__anon_14511.exit424.i.i:       ; preds = %1645, %1643, %1642, %sort.quadsort_swap__anon_14511.exit423.i.i
  %1636 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1637 = mul nuw i64 %945, %6
  %1638 = getelementptr inbounds i8, ptr %91, i64 %1637
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1636, ptr nonnull align 1 %91, ptr nonnull align 1 %1636, ptr nonnull align 1 %1638, i64 %945, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1639:                                             ; preds = %sort.quadsort_swap__anon_14511.exit423.i.i
  %1640 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1641 = icmp ult i64 %944, 96
  br i1 %1641, label %1642, label %1643

1642:                                             ; preds = %1639
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1640, i64 %944, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit424.i.i

1643:                                             ; preds = %1639
  %1644 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1640, i64 %944, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1644, label %1645, label %sort.quadsort_swap__anon_14511.exit424.i.i

1645:                                             ; preds = %1643
  %1646 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1640, i64 %944, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1640, i64 %944, ptr nonnull align 1 %91, i64 %1, i64 %1646, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit424.i.i

1647:                                             ; preds = %1587
  %1648 = getelementptr inbounds i8, ptr %91, i64 %950
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %1648, i64 %942, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  %.not282.i.i58 = icmp eq i64 %.4245.i.i, 0
  br i1 %.not282.i.i58, label %sort.quadsort_swap__anon_14511.exit425.i.i, label %1652

sort.quadsort_swap__anon_14511.exit425.i.i:       ; preds = %1658, %1656, %1655, %1647
  %1649 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1650 = mul nuw i64 %947, %6
  %1651 = getelementptr inbounds i8, ptr %91, i64 %1650
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1649, ptr nonnull align 1 %91, ptr nonnull align 1 %1649, ptr nonnull align 1 %1651, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1652:                                             ; preds = %1647
  %1653 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1654 = icmp ult i64 %945, 192
  br i1 %1654, label %1655, label %1656

1655:                                             ; preds = %1652
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1653, i64 %946, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit425.i.i

1656:                                             ; preds = %1652
  %1657 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1653, i64 %946, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1657, label %1658, label %sort.quadsort_swap__anon_14511.exit425.i.i

1658:                                             ; preds = %1656
  %1659 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1653, i64 %946, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1653, i64 %946, ptr nonnull align 1 %91, i64 %1, i64 %1659, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit425.i.i

1660:                                             ; preds = %1587
  %1661 = getelementptr inbounds i8, ptr %91, i64 %953
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %1661, i64 %952, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  %.not281.i.i59 = icmp eq i64 %.4252.i.i, 0
  br i1 %.not281.i.i59, label %sort.quadsort_swap__anon_14511.exit426.i.i, label %1662

1662:                                             ; preds = %1660
  %1663 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1664 = icmp ult i64 %947, 96
  br i1 %1664, label %1665, label %1666

1665:                                             ; preds = %1662
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1663, i64 %947, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1666:                                             ; preds = %1662
  %1667 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1663, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1667, label %1668, label %sort.quadsort_swap__anon_14511.exit426.i.i

1668:                                             ; preds = %1666
  %1669 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1663, i64 %947, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1663, i64 %947, ptr nonnull align 1 %91, i64 %1, i64 %1669, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1670:                                             ; preds = %1587
  %.not279.i.i60 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not279.i.i60, label %sort.quadsort_swap__anon_14511.exit427.i.i, label %1675

sort.quadsort_swap__anon_14511.exit427.i.i:       ; preds = %1680, %1678, %1677, %1670
  %1671 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1672 = add nuw i64 %946, %944
  %1673 = mul nuw i64 %1672, %6
  %1674 = getelementptr inbounds i8, ptr %91, i64 %1673
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1671, ptr nonnull align 1 %91, ptr nonnull align 1 %1671, ptr nonnull align 1 %1674, i64 %1672, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  %.not280.i.i61 = icmp eq i64 %.4252.i.i, 0
  br i1 %.not280.i.i61, label %sort.quadsort_swap__anon_14511.exit426.i.i, label %1682

1675:                                             ; preds = %1670
  %1676 = icmp ult i64 %1, 384
  br i1 %1676, label %1677, label %1678

1677:                                             ; preds = %1675
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit427.i.i

1678:                                             ; preds = %1675
  %1679 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %943, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1679, label %1680, label %sort.quadsort_swap__anon_14511.exit427.i.i

1680:                                             ; preds = %1678
  %1681 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, i64 %1681, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit427.i.i

1682:                                             ; preds = %sort.quadsort_swap__anon_14511.exit427.i.i
  %1683 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1684 = icmp ult i64 %947, 96
  br i1 %1684, label %1685, label %1686

1685:                                             ; preds = %1682
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1683, i64 %947, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1686:                                             ; preds = %1682
  %1687 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1683, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1687, label %1688, label %sort.quadsort_swap__anon_14511.exit426.i.i

1688:                                             ; preds = %1686
  %1689 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1683, i64 %947, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1683, i64 %947, ptr nonnull align 1 %91, i64 %1, i64 %1689, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1690:                                             ; preds = %1587
  %1691 = getelementptr inbounds i8, ptr %91, i64 %950
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %1691, i64 %942, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  %.not277.i.i62 = icmp eq i64 %.4245.i.i, 0
  br i1 %.not277.i.i62, label %sort.quadsort_swap__anon_14511.exit429.i.i, label %1692

sort.quadsort_swap__anon_14511.exit429.i.i:       ; preds = %1698, %1696, %1695, %1690
  %.not278.i.i63 = icmp eq i64 %.4252.i.i, 0
  br i1 %.not278.i.i63, label %sort.quadsort_swap__anon_14511.exit426.i.i, label %1700

1692:                                             ; preds = %1690
  %1693 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1694 = icmp ult i64 %945, 192
  br i1 %1694, label %1695, label %1696

1695:                                             ; preds = %1692
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1693, i64 %946, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit429.i.i

1696:                                             ; preds = %1692
  %1697 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1693, i64 %946, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1697, label %1698, label %sort.quadsort_swap__anon_14511.exit429.i.i

1698:                                             ; preds = %1696
  %1699 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1693, i64 %946, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1693, i64 %946, ptr nonnull align 1 %91, i64 %1, i64 %1699, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit429.i.i

1700:                                             ; preds = %sort.quadsort_swap__anon_14511.exit429.i.i
  %1701 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1702 = icmp ult i64 %947, 96
  br i1 %1702, label %1703, label %1704

1703:                                             ; preds = %1700
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1701, i64 %947, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1704:                                             ; preds = %1700
  %1705 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1701, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1705, label %1706, label %sort.quadsort_swap__anon_14511.exit426.i.i

1706:                                             ; preds = %1704
  %1707 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1701, i64 %947, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1701, i64 %947, ptr nonnull align 1 %91, i64 %1, i64 %1707, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1708:                                             ; preds = %1587, %1587, %1587, %1587, %1587, %1587, %1587, %1587
  %.not.i.i64 = icmp eq i4 %.0262.i.i, 0
  br i1 %.not.i.i64, label %1710, label %1709

sort.quadsort_swap__anon_14511.exit431.i.i:       ; preds = %1717, %1715, %1714, %1710, %1709
  %.not266.i.i = icmp eq i4 %.0263.i.i, 0
  br i1 %.not266.i.i, label %1720, label %1719

1709:                                             ; preds = %1708
  %.not276.i.i65 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not276.i.i65, label %sort.quadsort_swap__anon_14511.exit431.i.i, label %1712

1710:                                             ; preds = %1708
  %1711 = getelementptr inbounds i8, ptr %91, i64 %948
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %91, ptr nonnull align 1 %0, ptr nonnull align 1 %1711, i64 %943, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit431.i.i

1712:                                             ; preds = %1709
  %1713 = icmp ult i64 %1, 384
  br i1 %1713, label %1714, label %1715

1714:                                             ; preds = %1712
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit431.i.i

1715:                                             ; preds = %1712
  %1716 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %943, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1716, label %1717, label %sort.quadsort_swap__anon_14511.exit431.i.i

1717:                                             ; preds = %1715
  %1718 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %943, ptr nonnull align 1 %91, i64 %1, i64 %1718, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit431.i.i

sort.quadsort_swap__anon_14511.exit432.i.i:       ; preds = %1730, %1728, %1727, %1720, %1719
  %.not267.i.i = icmp eq i4 %.0264.i.i51, 0
  br i1 %.not267.i.i, label %1733, label %1732

1719:                                             ; preds = %sort.quadsort_swap__anon_14511.exit431.i.i
  %.not275.i.i66 = icmp eq i64 %.4238.i.i, 0
  br i1 %.not275.i.i66, label %sort.quadsort_swap__anon_14511.exit432.i.i, label %1724

1720:                                             ; preds = %sort.quadsort_swap__anon_14511.exit431.i.i
  %1721 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1722 = mul nuw i64 %944, %6
  %1723 = getelementptr inbounds i8, ptr %91, i64 %1722
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1721, ptr nonnull align 1 %91, ptr nonnull align 1 %1721, ptr nonnull align 1 %1723, i64 %944, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit432.i.i

1724:                                             ; preds = %1719
  %1725 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1726 = icmp ult i64 %944, 96
  br i1 %1726, label %1727, label %1728

1727:                                             ; preds = %1724
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1725, i64 %944, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit432.i.i

1728:                                             ; preds = %1724
  %1729 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1725, i64 %944, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1729, label %1730, label %sort.quadsort_swap__anon_14511.exit432.i.i

1730:                                             ; preds = %1728
  %1731 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1725, i64 %944, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1725, i64 %944, ptr nonnull align 1 %91, i64 %1, i64 %1731, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit432.i.i

sort.quadsort_swap__anon_14511.exit433.i.i:       ; preds = %1743, %1741, %1740, %1733, %1732
  %.not268.i.i67 = icmp eq i4 %.0265.i.i50, 0
  br i1 %.not268.i.i67, label %1746, label %1745

1732:                                             ; preds = %sort.quadsort_swap__anon_14511.exit432.i.i
  %.not274.i.i68 = icmp eq i64 %.4245.i.i, 0
  br i1 %.not274.i.i68, label %sort.quadsort_swap__anon_14511.exit433.i.i, label %1737

1733:                                             ; preds = %sort.quadsort_swap__anon_14511.exit432.i.i
  %1734 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1735 = mul nuw i64 %946, %6
  %1736 = getelementptr inbounds i8, ptr %91, i64 %1735
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1734, ptr nonnull align 1 %91, ptr nonnull align 1 %1734, ptr nonnull align 1 %1736, i64 %946, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit433.i.i

1737:                                             ; preds = %1732
  %1738 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1739 = icmp ult i64 %945, 192
  br i1 %1739, label %1740, label %1741

1740:                                             ; preds = %1737
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1738, i64 %946, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit433.i.i

1741:                                             ; preds = %1737
  %1742 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1738, i64 %946, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1742, label %1743, label %sort.quadsort_swap__anon_14511.exit433.i.i

1743:                                             ; preds = %1741
  %1744 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1738, i64 %946, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1738, i64 %946, ptr nonnull align 1 %91, i64 %1, i64 %1744, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit433.i.i

1745:                                             ; preds = %sort.quadsort_swap__anon_14511.exit433.i.i
  %.not273.i.i = icmp eq i64 %.4252.i.i, 0
  br i1 %.not273.i.i, label %sort.quadsort_swap__anon_14511.exit426.i.i, label %1750

1746:                                             ; preds = %sort.quadsort_swap__anon_14511.exit433.i.i
  %1747 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1748 = mul nuw i64 %947, %6
  %1749 = getelementptr inbounds i8, ptr %91, i64 %1748
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %1747, ptr nonnull align 1 %91, ptr nonnull align 1 %1747, ptr nonnull align 1 %1749, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1750:                                             ; preds = %1745
  %1751 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1752 = icmp ult i64 %947, 96
  br i1 %1752, label %1753, label %1754

1753:                                             ; preds = %1750
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %1751, i64 %947, ptr nonnull align 1 %91, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1754:                                             ; preds = %1750
  %1755 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %1751, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br i1 %1755, label %1756, label %sort.quadsort_swap__anon_14511.exit426.i.i

1756:                                             ; preds = %1754
  %1757 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %1751, i64 %947, ptr nonnull align 1 %91, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %1751, i64 %947, ptr nonnull align 1 %91, i64 %1, i64 %1757, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit426.i.i

1758:                                             ; preds = %1772, %1770, %1769, %1767
  call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %0, ptr nonnull align 1 %91, i64 %942, i64 %945, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %sort.flux_analyze__anon_13922.exit.i

1759:                                             ; preds = %sort.quadsort_swap__anon_14511.exit426.i.i
  %1760 = icmp eq i8 %1599, 1
  br i1 %1760, label %1767, label %1764

1761:                                             ; preds = %sort.quadsort_swap__anon_14511.exit426.i.i
  %1762 = icmp eq i8 %1599, 1
  %1763 = getelementptr inbounds i8, ptr %91, i64 %950
  br i1 %1762, label %1772, label %1770

1764:                                             ; preds = %1759
  %1765 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1766 = call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i25, ptr align 1 %1765) #18
  %.not272.i.i69 = icmp eq i8 %1766, 1
  br i1 %.not272.i.i69, label %1769, label %sort.flux_analyze__anon_13922.exit.i

1767:                                             ; preds = %1759
  %1768 = getelementptr inbounds i8, ptr %91, i64 %950
  call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %1768, ptr nonnull align 1 %951, i64 %946, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %950, i1 false)
  br label %1758

1769:                                             ; preds = %1764
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %90, i1 false)
  br label %1758

1770:                                             ; preds = %1761
  %1771 = mul nuw i64 %945, %6
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1763, ptr nonnull align 1 %951, i64 %1771, i1 false)
  call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %943, i64 %944, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %1758

1772:                                             ; preds = %1761
  %1773 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %1763, ptr nonnull align 1 %1773, i64 %946, i64 %947, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %91, ptr nonnull align 1 %0, i64 %943, i64 %944, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 1 %8)
  br label %1758

sort.flux_analyze__anon_13922.exit.i:             ; preds = %1764, %1758, %1601, %sort.quad_reversal.exit373.i.i, %1085
  call void @roc_dealloc(ptr nonnull align 1 %91, i32 %7)
  br label %sort.quadsort.exit

1774:                                             ; preds = %939
  tail call fastcc void @sort.quadsort_direct__anon_13918(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 1 %8)
  ret void

1775:                                             ; preds = %92
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13238, i64 50)
  unreachable

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader.new
  %lsr.iv3454 = phi ptr [ %uglygep3455, %.lr.ph ], [ %0, %.lr.ph.preheader.new ]
  %.07401 = phi i64 [ 0, %.lr.ph.preheader.new ], [ %1776, %.lr.ph ]
  %sunkaddr3914 = mul i64 %.07401, 8
  %sunkaddr3915 = getelementptr i8, ptr %94, i64 %sunkaddr3914
  store ptr %lsr.iv3454, ptr %sunkaddr3915, align 8
  %uglygep3457 = getelementptr i8, ptr %lsr.iv3454, i64 %6
  %sunkaddr3916 = mul i64 %.07401, 8
  %sunkaddr3917 = getelementptr i8, ptr %94, i64 %sunkaddr3916
  %sunkaddr3918 = getelementptr i8, ptr %sunkaddr3917, i64 8
  store ptr %uglygep3457, ptr %sunkaddr3918, align 8
  %uglygep3456 = getelementptr i8, ptr %lsr.iv3454, i64 %97
  %sunkaddr3919 = mul i64 %.07401, 8
  %sunkaddr3920 = getelementptr i8, ptr %94, i64 %sunkaddr3919
  %sunkaddr3921 = getelementptr i8, ptr %sunkaddr3920, i64 16
  store ptr %uglygep3456, ptr %sunkaddr3921, align 8
  %uglygep3458 = getelementptr i8, ptr %lsr.iv3454, i64 %99
  %sunkaddr3922 = mul i64 %.07401, 8
  %sunkaddr3923 = getelementptr i8, ptr %94, i64 %sunkaddr3922
  %sunkaddr3924 = getelementptr i8, ptr %sunkaddr3923, i64 24
  store ptr %uglygep3458, ptr %sunkaddr3924, align 8
  %1776 = add nuw i64 %.07401, 4
  %uglygep3455 = getelementptr i8, ptr %lsr.iv3454, i64 %98
  %niter.ncmp.3 = icmp eq i64 %unroll_iter, %1776
  br i1 %niter.ncmp.3, label %._crit_edge.unr-lcssa, label %.lr.ph

._crit_edge.unr-lcssa:                            ; preds = %.lr.ph, %.lr.ph.preheader
  %.07401.unr = phi i64 [ 0, %.lr.ph.preheader ], [ %1776, %.lr.ph ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %._crit_edge, label %.lr.ph.epil.preheader

.lr.ph.epil.preheader:                            ; preds = %._crit_edge.unr-lcssa
  %1777 = mul i64 %.07401.unr, %6
  %uglygep3441 = getelementptr i8, ptr %0, i64 %1777
  %1778 = shl i64 %.07401.unr, 3
  %uglygep3444 = getelementptr i8, ptr %94, i64 %1778
  br label %.lr.ph.epil

.lr.ph.epil:                                      ; preds = %.lr.ph.epil, %.lr.ph.epil.preheader
  %lsr.iv3442 = phi ptr [ %uglygep3441, %.lr.ph.epil.preheader ], [ %uglygep3443, %.lr.ph.epil ]
  %epil.iter = phi i64 [ %epil.iter.next, %.lr.ph.epil ], [ 0, %.lr.ph.epil.preheader ]
  %1779 = shl nuw nsw i64 %epil.iter, 3
  %uglygep3445 = getelementptr i8, ptr %uglygep3444, i64 %1779
  store ptr %lsr.iv3442, ptr %uglygep3445, align 8
  %epil.iter.next = add i64 %epil.iter, 1
  %uglygep3443 = getelementptr i8, ptr %lsr.iv3442, i64 %6
  %epil.iter.cmp.not = icmp eq i64 %xtraiter, %epil.iter.next
  br i1 %epil.iter.cmp.not, label %._crit_edge, label %.lr.ph.epil, !llvm.loop !10

._crit_edge:                                      ; preds = %.lr.ph.epil, %._crit_edge.unr-lcssa
  %1780 = tail call ptr @roc_alloc(i64 %93, i32 8)
  br i1 %4, label %1783, label %2929

sort.fluxsort_direct__anon_13236.exit:            ; preds = %4072, %sort.flux_analyze__anon_13924.exit.i, %2928, %sort.flux_analyze__anon_13923.exit.i
  %1781 = mul nuw i64 %6, %1
  %1782 = tail call ptr @roc_alloc(i64 %1781, i32 %7)
  %.not13 = icmp eq ptr %1782, null
  br i1 %.not13, label %4073, label %.lr.ph403.preheader

.lr.ph403.preheader:                              ; preds = %sort.fluxsort_direct__anon_13236.exit
  br label %.lr.ph403

1783:                                             ; preds = %._crit_edge
  %1784 = icmp eq ptr %1780, null
  br i1 %1784, label %2928, label %1785

1785:                                             ; preds = %1783
  %1786 = lshr i64 %1, 1
  %1787 = lshr i64 %1, 2
  %1788 = sub nuw nsw i64 %1786, %1787
  %1789 = sub nuw i64 %1, %1786
  %1790 = lshr i64 %1789, 1
  %1791 = sub nuw i64 %1789, %1790
  %1792 = shl nuw i64 %1787, 3
  %1793 = getelementptr inbounds i8, ptr %94, i64 %1792
  %1794 = shl nuw i64 %1786, 3
  %1795 = getelementptr inbounds i8, ptr %94, i64 %1794
  %1796 = add nuw i64 %1790, %1786
  %1797 = shl nuw i64 %1796, 3
  %1798 = getelementptr inbounds i8, ptr %94, i64 %1797
  %1799 = icmp ult i64 %1787, %1788
  br i1 %1799, label %1802, label %1800

1800:                                             ; preds = %1802, %1785
  %.0236.i.i71 = phi i64 [ %1808, %1802 ], [ 0, %1785 ]
  %.0212.i.i72 = phi ptr [ %1803, %1802 ], [ %1793, %1785 ]
  %1801 = icmp ult i64 %1787, %1790
  br i1 %1801, label %1811, label %1809

1802:                                             ; preds = %1785
  %1803 = getelementptr inbounds i8, ptr %1793, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %1804 = load ptr, ptr %1793, align 8
  %1805 = load ptr, ptr %1803, align 8
  %1806 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1804, ptr align 1 %1805) #18
  %1807 = icmp eq i8 %1806, 1
  %1808 = zext i1 %1807 to i64
  br label %1800

1809:                                             ; preds = %1811, %1800
  %.0243.i.i73 = phi i64 [ %1817, %1811 ], [ 0, %1800 ]
  %.0216.i.i74 = phi ptr [ %1812, %1811 ], [ %1795, %1800 ]
  %1810 = icmp ult i64 %1787, %1791
  br i1 %1810, label %1820, label %1818

1811:                                             ; preds = %1800
  %1812 = getelementptr inbounds i8, ptr %1795, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %1813 = load ptr, ptr %1795, align 8
  %1814 = load ptr, ptr %1812, align 8
  %1815 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1813, ptr align 1 %1814) #18
  %1816 = icmp eq i8 %1815, 1
  %1817 = zext i1 %1816 to i64
  br label %1809

1818:                                             ; preds = %1820, %1809
  %.0250.i.i75 = phi i64 [ %1826, %1820 ], [ 0, %1809 ]
  %.0221.i.i76 = phi ptr [ %1821, %1820 ], [ %1798, %1809 ]
  %1819 = icmp ugt i64 %1, 132
  br i1 %1819, label %.lr.ph.i.i77.preheader, label %._crit_edge.i.i91

.lr.ph.i.i77.preheader:                           ; preds = %1818
  br label %.lr.ph.i.i77

1820:                                             ; preds = %1809
  %1821 = getelementptr inbounds i8, ptr %1798, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %1822 = load ptr, ptr %1798, align 8
  %1823 = load ptr, ptr %1821, align 8
  %1824 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1822, ptr align 1 %1823) #18
  %1825 = icmp eq i8 %1824, 1
  %1826 = zext i1 %1825 to i64
  br label %1818

.lr.ph.i.i77:                                     ; preds = %.critedge.i.i102, %.lr.ph.i.i77.preheader
  %.0111.i.i = phi ptr [ %.2.i.i101, %.critedge.i.i102 ], [ %94, %.lr.ph.i.i77.preheader ]
  %.1213110.i.i = phi ptr [ %.3215.i.i100, %.critedge.i.i102 ], [ %.0212.i.i72, %.lr.ph.i.i77.preheader ]
  %.1217109.i.i = phi ptr [ %.3219.i.i99, %.critedge.i.i102 ], [ %.0216.i.i74, %.lr.ph.i.i77.preheader ]
  %.1222108.i.i = phi ptr [ %.3224.i.i98, %.critedge.i.i102 ], [ %.0221.i.i76, %.lr.ph.i.i77.preheader ]
  %.0226107.i.i = phi i32 [ %1859, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0227106.i.i = phi i32 [ %1865, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0228105.i.i = phi i32 [ %1871, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0229104.i.i = phi i32 [ %1877, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0230103.i.i = phi i64 [ %.1231.i.i97, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.1237102.i.i = phi i64 [ %.2238.i.i96, %.critedge.i.i102 ], [ %.0236.i.i71, %.lr.ph.i.i77.preheader ]
  %.1244101.i.i = phi i64 [ %.2245.i.i95, %.critedge.i.i102 ], [ %.0243.i.i73, %.lr.ph.i.i77.preheader ]
  %.1251100.i.i = phi i64 [ %.2252.i.i94, %.critedge.i.i102 ], [ %.0250.i.i75, %.lr.ph.i.i77.preheader ]
  %.025699.i.i = phi i64 [ %1879, %.critedge.i.i102 ], [ %1, %.lr.ph.i.i77.preheader ]
  tail call void %5(ptr align 1 %3, i64 128) #18
  br label %1828

._crit_edge.i.i91:                                ; preds = %.critedge.i.i102, %1818
  %.0256.lcssa.i.i78 = phi i64 [ %1, %1818 ], [ %1879, %.critedge.i.i102 ]
  %.1251.lcssa.i.i79 = phi i64 [ %.0250.i.i75, %1818 ], [ %.2252.i.i94, %.critedge.i.i102 ]
  %.1244.lcssa.i.i80 = phi i64 [ %.0243.i.i73, %1818 ], [ %.2245.i.i95, %.critedge.i.i102 ]
  %.1237.lcssa.i.i81 = phi i64 [ %.0236.i.i71, %1818 ], [ %.2238.i.i96, %.critedge.i.i102 ]
  %.0230.lcssa.i.i82 = phi i64 [ 0, %1818 ], [ %.1231.i.i97, %.critedge.i.i102 ]
  %.0229.lcssa.i.i83 = phi i32 [ 0, %1818 ], [ %1877, %.critedge.i.i102 ]
  %.0228.lcssa.i.i84 = phi i32 [ 0, %1818 ], [ %1871, %.critedge.i.i102 ]
  %.0227.lcssa.i.i85 = phi i32 [ 0, %1818 ], [ %1865, %.critedge.i.i102 ]
  %.0226.lcssa.i.i86 = phi i32 [ 0, %1818 ], [ %1859, %.critedge.i.i102 ]
  %.1222.lcssa.i.i87 = phi ptr [ %.0221.i.i76, %1818 ], [ %.3224.i.i98, %.critedge.i.i102 ]
  %.1217.lcssa.i.i88 = phi ptr [ %.0216.i.i74, %1818 ], [ %.3219.i.i99, %.critedge.i.i102 ]
  %.1213.lcssa.i.i89 = phi ptr [ %.0212.i.i72, %1818 ], [ %.3215.i.i100, %.critedge.i.i102 ]
  %.0.lcssa.i.i90 = phi ptr [ %94, %1818 ], [ %.2.i.i101, %.critedge.i.i102 ]
  %1827 = icmp ugt i64 %.0256.lcssa.i.i78, 7
  br i1 %1827, label %.lr.ph134.preheader.i.i, label %._crit_edge135.i.i

1828:                                             ; preds = %1828, %.lr.ph.i.i77
  %lsr.iv3113 = phi i64 [ %lsr.iv.next3114, %1828 ], [ 0, %.lr.ph.i.i77 ]
  %.025994.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1834, %1828 ]
  %.026093.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1840, %1828 ]
  %.026192.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1846, %1828 ]
  %.026291.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1852, %1828 ]
  %uglygep3117 = getelementptr i8, ptr %.0111.i.i, i64 %lsr.iv3113
  %uglygep3123 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv3113
  %uglygep3129 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv3113
  %uglygep3135 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv3113
  %uglygep3118 = getelementptr i8, ptr %uglygep3117, i64 8
  %1829 = load ptr, ptr %uglygep3117, align 8
  %1830 = load ptr, ptr %uglygep3118, align 8
  %1831 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1829, ptr align 1 %1830) #18
  %1832 = icmp eq i8 %1831, 1
  %1833 = zext i1 %1832 to i8
  %1834 = add nuw i8 %.025994.i.i, %1833
  %uglygep3124 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv3113
  %uglygep3125 = getelementptr i8, ptr %uglygep3124, i64 8
  %1835 = load ptr, ptr %uglygep3123, align 8
  %1836 = load ptr, ptr %uglygep3125, align 8
  %1837 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1835, ptr align 1 %1836) #18
  %1838 = icmp eq i8 %1837, 1
  %1839 = zext i1 %1838 to i8
  %1840 = add nuw i8 %.026093.i.i, %1839
  %uglygep3130 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv3113
  %uglygep3131 = getelementptr i8, ptr %uglygep3130, i64 8
  %1841 = load ptr, ptr %uglygep3129, align 8
  %1842 = load ptr, ptr %uglygep3131, align 8
  %1843 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1841, ptr align 1 %1842) #18
  %1844 = icmp eq i8 %1843, 1
  %1845 = zext i1 %1844 to i8
  %1846 = add nuw i8 %.026192.i.i, %1845
  %uglygep3136 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv3113
  %uglygep3137 = getelementptr i8, ptr %uglygep3136, i64 8
  %1847 = load ptr, ptr %uglygep3135, align 8
  %1848 = load ptr, ptr %uglygep3137, align 8
  %1849 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1847, ptr align 1 %1848) #18
  %1850 = icmp eq i8 %1849, 1
  %1851 = zext i1 %1850 to i8
  %1852 = add nuw i8 %.026291.i.i, %1851
  %lsr.iv.next3114 = add nuw nsw i64 %lsr.iv3113, 8
  %exitcond.not.i.i92 = icmp eq i64 %lsr.iv.next3114, 256
  br i1 %exitcond.not.i.i92, label %1853, label %1828

1853:                                             ; preds = %1828
  %1854 = zext i8 %1834 to i64
  %1855 = add nuw i64 %.0230103.i.i, %1854
  %1856 = and i8 %1834, -33
  %1857 = icmp eq i8 %1856, 0
  %1858 = zext i1 %1857 to i32
  %1859 = add nuw i32 %.0226107.i.i, %1858
  %1860 = zext i8 %1840 to i64
  %1861 = add nuw i64 %.1237102.i.i, %1860
  %1862 = and i8 %1840, -33
  %1863 = icmp eq i8 %1862, 0
  %1864 = zext i1 %1863 to i32
  %1865 = add nuw i32 %.0227106.i.i, %1864
  %1866 = zext i8 %1846 to i64
  %1867 = add nuw i64 %.1244101.i.i, %1866
  %1868 = and i8 %1846, -33
  %1869 = icmp eq i8 %1868, 0
  %1870 = zext i1 %1869 to i32
  %1871 = add nuw i32 %.0228105.i.i, %1870
  %1872 = zext i8 %1852 to i64
  %1873 = add nuw i64 %.1251100.i.i, %1872
  %1874 = and i8 %1852, -33
  %1875 = icmp eq i8 %1874, 0
  %1876 = zext i1 %1875 to i32
  %1877 = add nuw i32 %.0229104.i.i, %1876
  %1878 = icmp ugt i64 %.025699.i.i, 516
  %uglygep3119 = getelementptr i8, ptr %.0111.i.i, i64 %lsr.iv.next3114
  %uglygep3126 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv.next3114
  %uglygep3132 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv.next3114
  %uglygep3138 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv.next3114
  br i1 %1878, label %1881, label %.critedge.i.i102

.critedge.i.i102:                                 ; preds = %1896, %1881, %1853
  %.1257.i.i93 = phi i64 [ %1901, %1896 ], [ %.025699.i.i, %1853 ], [ %.025699.i.i, %1881 ]
  %.2252.i.i94 = phi i64 [ %1900, %1896 ], [ %1873, %1853 ], [ %1873, %1881 ]
  %.2245.i.i95 = phi i64 [ %1899, %1896 ], [ %1867, %1853 ], [ %1867, %1881 ]
  %.2238.i.i96 = phi i64 [ %1898, %1896 ], [ %1861, %1853 ], [ %1861, %1881 ]
  %.1231.i.i97 = phi i64 [ %1897, %1896 ], [ %1855, %1853 ], [ %1855, %1881 ]
  %.3224.i.i98 = phi ptr [ %uglygep3134, %1896 ], [ %uglygep3138, %1853 ], [ %uglygep3138, %1881 ]
  %.3219.i.i99 = phi ptr [ %uglygep3128, %1896 ], [ %uglygep3132, %1853 ], [ %uglygep3132, %1881 ]
  %.3215.i.i100 = phi ptr [ %uglygep3122, %1896 ], [ %uglygep3126, %1853 ], [ %uglygep3126, %1881 ]
  %.2.i.i101 = phi ptr [ %uglygep3116, %1896 ], [ %uglygep3119, %1853 ], [ %uglygep3119, %1881 ]
  %1879 = add i64 %.1257.i.i93, -128
  %1880 = icmp ugt i64 %1879, 132
  br i1 %1880, label %.lr.ph.i.i77, label %._crit_edge.i.i91

1881:                                             ; preds = %1853
  %1882 = and i8 %1852, -33
  %1883 = icmp eq i8 %1882, 0
  %1884 = and i8 %1846, -33
  %1885 = icmp eq i8 %1884, 0
  %1886 = and i8 %1840, -33
  %1887 = icmp eq i8 %1886, 0
  %1888 = and i8 %1834, -33
  %1889 = icmp eq i8 %1888, 0
  %.neg.i.i103 = sext i1 %1883 to i8
  %1890 = zext i1 %1885 to i8
  %1891 = zext i1 %1887 to i8
  %1892 = zext i1 %1889 to i8
  %1893 = add nuw nsw i8 %1891, %1892
  %1894 = add nuw nsw i8 %1893, %1890
  %1895 = icmp eq i8 %1894, %.neg.i.i103
  br i1 %1895, label %1896, label %.critedge.i.i102

1896:                                             ; preds = %1881
  %1897 = add nuw i64 %1855, 48
  %uglygep3115 = getelementptr i8, ptr %.0111.i.i, i64 %lsr.iv.next3114
  %uglygep3116 = getelementptr i8, ptr %uglygep3115, i64 768
  %1898 = add nuw i64 %1861, 48
  %uglygep3121 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv.next3114
  %uglygep3122 = getelementptr i8, ptr %uglygep3121, i64 768
  %1899 = add nuw i64 %1867, 48
  %uglygep3127 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv.next3114
  %uglygep3128 = getelementptr i8, ptr %uglygep3127, i64 768
  %1900 = add nuw i64 %1873, 48
  %uglygep3133 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv.next3114
  %uglygep3134 = getelementptr i8, ptr %uglygep3133, i64 768
  %1901 = add i64 %.025699.i.i, -384
  br label %.critedge.i.i102

.lr.ph134.preheader.i.i:                          ; preds = %._crit_edge.i.i91
  %1902 = and i64 %.0256.lcssa.i.i78, 252
  %1903 = add nsw i64 %1902, -4
  tail call void %5(ptr align 1 %3, i64 %1903) #18
  br label %.lr.ph134.i.i

.lr.ph134.i.i:                                    ; preds = %.lr.ph134.i.i, %.lr.ph134.preheader.i.i
  %.3132.i.i = phi ptr [ %1904, %.lr.ph134.i.i ], [ %.0.lcssa.i.i90, %.lr.ph134.preheader.i.i ]
  %.4131.i.i = phi ptr [ %1911, %.lr.ph134.i.i ], [ %.1213.lcssa.i.i89, %.lr.ph134.preheader.i.i ]
  %.4220130.i.i = phi ptr [ %1918, %.lr.ph134.i.i ], [ %.1217.lcssa.i.i88, %.lr.ph134.preheader.i.i ]
  %.4225129.i.i = phi ptr [ %1925, %.lr.ph134.i.i ], [ %.1222.lcssa.i.i87, %.lr.ph134.preheader.i.i ]
  %.2232128.i.i = phi i64 [ %1910, %.lr.ph134.i.i ], [ %.0230.lcssa.i.i82, %.lr.ph134.preheader.i.i ]
  %.3239127.i.i = phi i64 [ %1917, %.lr.ph134.i.i ], [ %.1237.lcssa.i.i81, %.lr.ph134.preheader.i.i ]
  %.3246126.i.i = phi i64 [ %1924, %.lr.ph134.i.i ], [ %.1244.lcssa.i.i80, %.lr.ph134.preheader.i.i ]
  %.3253125.i.i = phi i64 [ %1931, %.lr.ph134.i.i ], [ %.1251.lcssa.i.i79, %.lr.ph134.preheader.i.i ]
  %.2258124.i.i = phi i64 [ %1932, %.lr.ph134.i.i ], [ %.0256.lcssa.i.i78, %.lr.ph134.preheader.i.i ]
  %1904 = getelementptr inbounds i8, ptr %.3132.i.i, i64 8
  %1905 = load ptr, ptr %.3132.i.i, align 8
  %1906 = load ptr, ptr %1904, align 8
  %1907 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1905, ptr align 1 %1906) #18
  %1908 = icmp eq i8 %1907, 1
  %1909 = zext i1 %1908 to i64
  %1910 = add nuw i64 %.2232128.i.i, %1909
  %1911 = getelementptr inbounds i8, ptr %.4131.i.i, i64 8
  %1912 = load ptr, ptr %.4131.i.i, align 8
  %1913 = load ptr, ptr %1911, align 8
  %1914 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1912, ptr align 1 %1913) #18
  %1915 = icmp eq i8 %1914, 1
  %1916 = zext i1 %1915 to i64
  %1917 = add nuw i64 %.3239127.i.i, %1916
  %1918 = getelementptr inbounds i8, ptr %.4220130.i.i, i64 8
  %1919 = load ptr, ptr %.4220130.i.i, align 8
  %1920 = load ptr, ptr %1918, align 8
  %1921 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1919, ptr align 1 %1920) #18
  %1922 = icmp eq i8 %1921, 1
  %1923 = zext i1 %1922 to i64
  %1924 = add nuw i64 %.3246126.i.i, %1923
  %1925 = getelementptr inbounds i8, ptr %.4225129.i.i, i64 8
  %1926 = load ptr, ptr %.4225129.i.i, align 8
  %1927 = load ptr, ptr %1925, align 8
  %1928 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1926, ptr align 1 %1927) #18
  %1929 = icmp eq i8 %1928, 1
  %1930 = zext i1 %1929 to i64
  %1931 = add nuw i64 %.3253125.i.i, %1930
  %1932 = add i64 %.2258124.i.i, -4
  %1933 = icmp ugt i64 %1932, 7
  br i1 %1933, label %.lr.ph134.i.i, label %._crit_edge135.i.i

._crit_edge135.i.i:                               ; preds = %.lr.ph134.i.i, %._crit_edge.i.i91
  %.3253.lcssa.i.i104 = phi i64 [ %.1251.lcssa.i.i79, %._crit_edge.i.i91 ], [ %1931, %.lr.ph134.i.i ]
  %.3246.lcssa.i.i105 = phi i64 [ %.1244.lcssa.i.i80, %._crit_edge.i.i91 ], [ %1924, %.lr.ph134.i.i ]
  %.3239.lcssa.i.i106 = phi i64 [ %.1237.lcssa.i.i81, %._crit_edge.i.i91 ], [ %1917, %.lr.ph134.i.i ]
  %.2232.lcssa.i.i107 = phi i64 [ %.0230.lcssa.i.i82, %._crit_edge.i.i91 ], [ %1910, %.lr.ph134.i.i ]
  %.4225.lcssa.i.i108 = phi ptr [ %.1222.lcssa.i.i87, %._crit_edge.i.i91 ], [ %1925, %.lr.ph134.i.i ]
  %.4220.lcssa.i.i109 = phi ptr [ %.1217.lcssa.i.i88, %._crit_edge.i.i91 ], [ %1918, %.lr.ph134.i.i ]
  %.4.lcssa.i.i110 = phi ptr [ %.1213.lcssa.i.i89, %._crit_edge.i.i91 ], [ %1911, %.lr.ph134.i.i ]
  %.3.lcssa.i.i111 = phi ptr [ %.0.lcssa.i.i90, %._crit_edge.i.i91 ], [ %1904, %.lr.ph134.i.i ]
  %1934 = add i64 %.3239.lcssa.i.i106, %.3246.lcssa.i.i105
  %1935 = add i64 %1934, %.2232.lcssa.i.i107
  %1936 = sub i64 0, %.3253.lcssa.i.i104
  %1937 = icmp eq i64 %1935, %1936
  br i1 %1937, label %1946, label %.critedge2.i.i115

.critedge2.i.i115:                                ; preds = %1956, %1951, %1946, %._crit_edge135.i.i
  %1938 = sub nuw i64 %1787, %.2232.lcssa.i.i107
  %1939 = icmp eq i64 %1938, 1
  %1940 = sub nuw i64 %1788, %.3239.lcssa.i.i106
  %1941 = icmp eq i64 %1940, 1
  %1942 = sub nuw i64 %1790, %.3246.lcssa.i.i105
  %1943 = icmp eq i64 %1942, 1
  %1944 = sub nuw i64 %1791, %.3253.lcssa.i.i104
  %1945 = icmp eq i64 %1944, 1
  %..i.i112 = select i1 %1939, i1 true, i1 %1941
  %.5.i.i113 = select i1 %..i.i112, i1 true, i1 %1943
  %.6.i.i114 = select i1 %.5.i.i113, i1 true, i1 %1945
  br i1 %.6.i.i114, label %1975, label %sort.quad_reversal.exit401.i.i

1946:                                             ; preds = %._crit_edge135.i.i
  %1947 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %1948 = load ptr, ptr %.3.lcssa.i.i111, align 8
  %1949 = load ptr, ptr %1947, align 8
  %1950 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1948, ptr align 1 %1949) #18
  %.not289.i.i116 = icmp eq i8 %1950, 1
  br i1 %.not289.i.i116, label %.critedge2.i.i115, label %1951

1951:                                             ; preds = %1946
  %1952 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %1953 = load ptr, ptr %.4.lcssa.i.i110, align 8
  %1954 = load ptr, ptr %1952, align 8
  %1955 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1953, ptr align 1 %1954) #18
  %.not290.i.i117 = icmp eq i8 %1955, 1
  br i1 %.not290.i.i117, label %.critedge2.i.i115, label %1956

1956:                                             ; preds = %1951
  %1957 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %1958 = load ptr, ptr %.4220.lcssa.i.i109, align 8
  %1959 = load ptr, ptr %1957, align 8
  %1960 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1958, ptr align 1 %1959) #18
  %.not291.i.i118 = icmp eq i8 %1960, 1
  br i1 %.not291.i.i118, label %.critedge2.i.i115, label %sort.flux_analyze__anon_13923.exit.i

sort.quad_reversal.exit401.i.i:                   ; preds = %.lr.ph215.i.i, %.lr.ph215.i.i.prol.loopexit, %middle.block2364, %._crit_edge.i392.i.i, %sort.quad_reversal.exit391.i.i, %.lr.ph167.i.i, %.lr.ph167.i.i.prol.loopexit, %middle.block1796, %._crit_edge.i332.i.i, %.critedge2.i.i115
  %.4254.i.i119 = phi i64 [ %.5255637279.i.i, %sort.quad_reversal.exit391.i.i ], [ %.3253.lcssa.i.i104, %.critedge2.i.i115 ], [ 0, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ 0, %middle.block2364 ], [ 0, %middle.block1796 ], [ 0, %.lr.ph215.i.i.prol.loopexit ], [ 0, %.lr.ph167.i.i.prol.loopexit ], [ 0, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %.4247.i.i120 = phi i64 [ %.6249.i.i145, %sort.quad_reversal.exit391.i.i ], [ %.3246.lcssa.i.i105, %.critedge2.i.i115 ], [ %.6249.i.i145, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ %.6249.i.i145, %middle.block2364 ], [ 0, %middle.block1796 ], [ %.6249.i.i145, %.lr.ph215.i.i.prol.loopexit ], [ 0, %.lr.ph167.i.i.prol.loopexit ], [ %.6249.i.i145, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %.4240.i.i121 = phi i64 [ %.624280.i.i, %sort.quad_reversal.exit391.i.i ], [ %.3239.lcssa.i.i106, %.critedge2.i.i115 ], [ %.624280.i.i, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ %.624280.i.i, %middle.block2364 ], [ 0, %middle.block1796 ], [ %.624280.i.i, %.lr.ph215.i.i.prol.loopexit ], [ 0, %.lr.ph167.i.i.prol.loopexit ], [ %.624280.i.i, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %.3233.i.i122 = phi i64 [ %.52357378.i.i, %sort.quad_reversal.exit391.i.i ], [ %.2232.lcssa.i.i107, %.critedge2.i.i115 ], [ %.52357378.i.i, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ %.52357378.i.i, %middle.block2364 ], [ 0, %middle.block1796 ], [ %.52357378.i.i, %.lr.ph215.i.i.prol.loopexit ], [ 0, %.lr.ph167.i.i.prol.loopexit ], [ %.52357378.i.i, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %1961 = lshr i64 %1, 9
  %1962 = zext i32 %.0226.lcssa.i.i86 to i64
  %1963 = icmp ult i64 %1961, %1962
  %1964 = zext i1 %1963 to i4
  %1965 = zext i32 %.0227.lcssa.i.i85 to i64
  %1966 = icmp ult i64 %1961, %1965
  %1967 = zext i1 %1966 to i4
  %1968 = zext i32 %.0228.lcssa.i.i84 to i64
  %1969 = icmp ult i64 %1961, %1968
  %1970 = zext i1 %1969 to i4
  %1971 = zext i32 %.0229.lcssa.i.i83 to i64
  %1972 = icmp ult i64 %1961, %1971
  %1973 = zext i1 %1972 to i4
  %1974 = icmp ugt i64 %1, 1048579
  br i1 %1974, label %2743, label %2735

1975:                                             ; preds = %.critedge2.i.i115
  %1976 = icmp eq i64 %1944, 1
  %1977 = icmp eq i64 %1942, 1
  %1978 = icmp eq i64 %1940, 1
  %1979 = icmp eq i64 %1938, 1
  tail call void %5(ptr align 1 %3, i64 3) #18
  %.7.i.i123 = select i1 %1979, i1 %1978, i1 false
  %1980 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %1981 = load ptr, ptr %.3.lcssa.i.i111, align 8
  %1982 = load ptr, ptr %1980, align 8
  %1983 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1981, ptr align 1 %1982) #18
  %1984 = icmp eq i8 %1983, 1
  %1985 = and i1 %.7.i.i123, %1984
  %1986 = zext i1 %1985 to i3
  %.8.i.i124 = select i1 %1978, i1 %1977, i1 false
  %1987 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %1988 = load ptr, ptr %.4.lcssa.i.i110, align 8
  %1989 = load ptr, ptr %1987, align 8
  %1990 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1988, ptr align 1 %1989) #18
  %1991 = icmp eq i8 %1990, 1
  %1992 = and i1 %.8.i.i124, %1991
  %.9.i.i125 = select i1 %1977, i1 %1976, i1 false
  %1993 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %1994 = load ptr, ptr %.4220.lcssa.i.i109, align 8
  %1995 = load ptr, ptr %1993, align 8
  %1996 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1994, ptr align 1 %1995) #18
  %1997 = icmp eq i8 %1996, 1
  %1998 = and i1 %.9.i.i125, %1997
  %1999 = select i1 %1992, i3 2, i3 0
  %2000 = or i3 %1999, %1986
  %2001 = select i1 %1998, i3 -4, i3 0
  %2002 = or i3 %2000, %2001
  %2003 = zext i3 %2002 to i32
  switch i32 %2003, label %2007 [
    i32 0, label %sort.quad_reversal.exit301.i.i129
    i32 1, label %2008
    i32 2, label %2067
    i32 3, label %2128
    i32 4, label %2187
    i32 5, label %2248
    i32 6, label %2367
    i32 7, label %2428
  ]

sort.quad_reversal.exit301.i.i129:                ; preds = %.lr.ph155.i.i, %.lr.ph155.i.i.prol.loopexit, %middle.block1654, %._crit_edge.i342.i.i, %.lr.ph173.i.i, %.lr.ph173.i.i.prol.loopexit, %middle.block1867, %._crit_edge.i312.i.i, %.lr.ph185.i.i, %.lr.ph185.i.i.prol.loopexit, %middle.block2009, %._crit_edge.i292.i.i, %1975
  %.5255.i.i126 = phi i64 [ %.3253.lcssa.i.i104, %1975 ], [ %.3253.lcssa.i.i104, %._crit_edge.i292.i.i ], [ 0, %._crit_edge.i312.i.i ], [ 0, %._crit_edge.i342.i.i ], [ %.3253.lcssa.i.i104, %middle.block2009 ], [ 0, %middle.block1867 ], [ 0, %middle.block1654 ], [ %.3253.lcssa.i.i104, %.lr.ph185.i.i.prol.loopexit ], [ 0, %.lr.ph173.i.i.prol.loopexit ], [ 0, %.lr.ph155.i.i.prol.loopexit ], [ %.3253.lcssa.i.i104, %.lr.ph185.i.i ], [ 0, %.lr.ph173.i.i ], [ 0, %.lr.ph155.i.i ]
  %.5248.i.i127 = phi i64 [ %.3246.lcssa.i.i105, %1975 ], [ 0, %._crit_edge.i292.i.i ], [ 0, %._crit_edge.i312.i.i ], [ 0, %._crit_edge.i342.i.i ], [ 0, %middle.block2009 ], [ 0, %middle.block1867 ], [ 0, %middle.block1654 ], [ 0, %.lr.ph185.i.i.prol.loopexit ], [ 0, %.lr.ph173.i.i.prol.loopexit ], [ 0, %.lr.ph155.i.i.prol.loopexit ], [ 0, %.lr.ph185.i.i ], [ 0, %.lr.ph173.i.i ], [ 0, %.lr.ph155.i.i ]
  %.5241.i.i128 = phi i64 [ %.3239.lcssa.i.i106, %1975 ], [ 0, %._crit_edge.i292.i.i ], [ %.3239.lcssa.i.i106, %._crit_edge.i312.i.i ], [ 0, %._crit_edge.i342.i.i ], [ 0, %middle.block2009 ], [ %.3239.lcssa.i.i106, %middle.block1867 ], [ 0, %middle.block1654 ], [ 0, %.lr.ph185.i.i.prol.loopexit ], [ %.3239.lcssa.i.i106, %.lr.ph173.i.i.prol.loopexit ], [ 0, %.lr.ph155.i.i.prol.loopexit ], [ 0, %.lr.ph185.i.i ], [ %.3239.lcssa.i.i106, %.lr.ph173.i.i ], [ 0, %.lr.ph155.i.i ]
  %2004 = icmp eq i64 %1938, 1
  %2005 = icmp ne i64 %.2232.lcssa.i.i107, 0
  %2006 = and i1 %2005, %2004
  br i1 %2006, label %2490, label %sort.quad_reversal.exit371.i.i

2007:                                             ; preds = %1975
  unreachable

2008:                                             ; preds = %1975
  %2009 = ptrtoint ptr %.4.lcssa.i.i110 to i64
  %2010 = ptrtoint ptr %94 to i64
  %2011 = sub nuw i64 %2009, %2010
  %2012 = lshr i64 %2011, 4
  %2013 = shl nuw nsw i64 %2012, 3
  %2014 = getelementptr inbounds i8, ptr %94, i64 %2013
  %2015 = sub nsw i64 0, %2013
  %2016 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 %2015
  %2017 = and i64 %2011, 16
  %2018 = icmp eq i64 %2017, 0
  br i1 %2018, label %2050, label %._crit_edge.i.i.i133

._crit_edge.i.i.i133:                             ; preds = %2050, %2008
  %.027.i.i.i130 = phi ptr [ %2054, %2050 ], [ %2016, %2008 ]
  %.025.i.i.i131 = phi ptr [ %2053, %2050 ], [ %2014, %2008 ]
  %.0.i.i.i132 = phi i64 [ %2055, %2050 ], [ %2012, %2008 ]
  %2019 = load i64, ptr %94, align 8
  %2020 = load i64, ptr %.4.lcssa.i.i110, align 8
  store i64 %2020, ptr %94, align 8
  store i64 %2019, ptr %.4.lcssa.i.i110, align 8
  %2021 = load i64, ptr %.025.i.i.i131, align 8
  %2022 = load i64, ptr %.027.i.i.i130, align 8
  store i64 %2022, ptr %.025.i.i.i131, align 8
  store i64 %2021, ptr %.027.i.i.i130, align 8
  %2023 = icmp ult i64 %.0.i.i.i132, 2
  br i1 %2023, label %sort.quad_reversal.exit381.i.i, label %.lr.ph191.preheader.i.i

.lr.ph191.preheader.i.i:                          ; preds = %._crit_edge.i.i.i133
  %2024 = lshr i64 %.0.i.i.i132, 1
  %min.iters.check2082 = icmp ult i64 %.0.i.i.i132, 80
  br i1 %min.iters.check2082, label %.lr.ph191.i.i.preheader, label %vector.scevcheck2041

vector.scevcheck2041:                             ; preds = %.lr.ph191.preheader.i.i
  %const3477 = bitcast i64 2305843009213693951 to i64
  %2025 = add nsw i64 %2024, -1
  %uglygep2042 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -8
  %mul.result2044.neg = mul i64 %2025, -8
  %2026 = getelementptr i8, ptr %uglygep2042, i64 %mul.result2044.neg
  %2027 = icmp ugt ptr %2026, %uglygep2042
  %uglygep2046 = getelementptr i8, ptr %.025.i.i.i131, i64 -8
  %mul.result2048.neg = mul i64 %2025, -8
  %mul.overflow2049 = icmp ugt i64 %2025, %const3477
  %2028 = getelementptr i8, ptr %uglygep2046, i64 %mul.result2048.neg
  %2029 = icmp ugt ptr %2028, %uglygep2046
  %2030 = or i1 %2029, %mul.overflow2049
  %2031 = or i1 %2027, %2030
  br i1 %2031, label %.lr.ph191.i.i.preheader, label %vector.memcheck2050

vector.memcheck2050:                              ; preds = %vector.scevcheck2041
  %uglygep2051 = getelementptr i8, ptr %94, i64 8
  %2032 = shl i64 %2024, 3
  %2033 = add i64 %2032, 8
  %uglygep2052 = getelementptr i8, ptr %94, i64 %2033
  %uglygep2053 = getelementptr i8, ptr %.027.i.i.i130, i64 8
  %uglygep2054 = getelementptr i8, ptr %.027.i.i.i130, i64 %2033
  %2034 = mul i64 %2024, -8
  %uglygep2055 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2034
  %uglygep2056 = getelementptr i8, ptr %.025.i.i.i131, i64 %2034
  %bound02057 = icmp ult ptr %uglygep2051, %uglygep2054
  %bound12058 = icmp ult ptr %uglygep2053, %uglygep2052
  %found.conflict2059 = and i1 %bound02057, %bound12058
  %bound02060 = icmp ult ptr %uglygep2051, %.4.lcssa.i.i110
  %bound12061 = icmp ult ptr %uglygep2055, %uglygep2052
  %found.conflict2062 = and i1 %bound02060, %bound12061
  %conflict.rdx2063 = or i1 %found.conflict2059, %found.conflict2062
  %bound02064 = icmp ult ptr %uglygep2051, %.025.i.i.i131
  %bound12065 = icmp ult ptr %uglygep2056, %uglygep2052
  %found.conflict2066 = and i1 %bound02064, %bound12065
  %conflict.rdx2067 = or i1 %conflict.rdx2063, %found.conflict2066
  %bound02068 = icmp ult ptr %uglygep2053, %.4.lcssa.i.i110
  %bound12069 = icmp ult ptr %uglygep2055, %uglygep2054
  %found.conflict2070 = and i1 %bound02068, %bound12069
  %conflict.rdx2071 = or i1 %conflict.rdx2067, %found.conflict2070
  %bound02072 = icmp ult ptr %uglygep2053, %.025.i.i.i131
  %bound12073 = icmp ult ptr %uglygep2056, %uglygep2054
  %found.conflict2074 = and i1 %bound02072, %bound12073
  %conflict.rdx2075 = or i1 %conflict.rdx2071, %found.conflict2074
  %bound02076 = icmp ult ptr %uglygep2055, %.025.i.i.i131
  %bound12077 = icmp ult ptr %uglygep2056, %.4.lcssa.i.i110
  %found.conflict2078 = and i1 %bound02076, %bound12077
  %conflict.rdx2079 = or i1 %conflict.rdx2075, %found.conflict2078
  br i1 %conflict.rdx2079, label %.lr.ph191.i.i.preheader, label %vector.ph2083

vector.ph2083:                                    ; preds = %vector.memcheck2050
  %const3501 = bitcast i64 9223372036854775806 to i64
  %n.vec2085 = and i64 %2024, %const3501
  %ind.end2086 = and i64 %2024, 1
  %2035 = shl i64 %n.vec2085, 3
  %ind.end2088 = getelementptr i8, ptr %94, i64 %2035
  %2036 = mul i64 %n.vec2085, -8
  %ind.end2090 = getelementptr i8, ptr %.025.i.i.i131, i64 %2036
  %2037 = shl i64 %n.vec2085, 3
  %ind.end2092 = getelementptr i8, ptr %.027.i.i.i130, i64 %2037
  %2038 = mul i64 %n.vec2085, -8
  %ind.end2094 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2038
  br label %vector.body2097

vector.body2097:                                  ; preds = %vector.body2097, %vector.ph2083
  %lsr.iv2947 = phi i64 [ %lsr.iv.next2948, %vector.body2097 ], [ -16, %vector.ph2083 ]
  %index2098 = phi i64 [ 0, %vector.ph2083 ], [ %index.next2111, %vector.body2097 ]
  %sunkaddr3933 = mul i64 %index2098, 8
  %sunkaddr3934 = getelementptr i8, ptr %94, i64 %sunkaddr3933
  %sunkaddr3935 = getelementptr i8, ptr %sunkaddr3934, i64 8
  %wide.load2103 = load <2 x i64>, ptr %sunkaddr3935, align 8, !alias.scope !11, !noalias !14
  %uglygep2949 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %lsr.iv2947
  %wide.load2104 = load <2 x i64>, ptr %uglygep2949, align 8, !alias.scope !18, !noalias !19
  %reverse2105 = shufflevector <2 x i64> %wide.load2104, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2105, ptr %sunkaddr3935, align 8, !alias.scope !11, !noalias !14
  %reverse2106 = shufflevector <2 x i64> %wide.load2103, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2106, ptr %uglygep2949, align 8, !alias.scope !18, !noalias !19
  %uglygep2950 = getelementptr i8, ptr %.025.i.i.i131, i64 %lsr.iv2947
  %wide.load2107 = load <2 x i64>, ptr %uglygep2950, align 8, !alias.scope !19
  %reverse2108 = shufflevector <2 x i64> %wide.load2107, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr3936 = mul i64 %index2098, 8
  %sunkaddr3937 = getelementptr i8, ptr %.027.i.i.i130, i64 %sunkaddr3936
  %sunkaddr3938 = getelementptr i8, ptr %sunkaddr3937, i64 8
  %wide.load2109 = load <2 x i64>, ptr %sunkaddr3938, align 8, !alias.scope !20, !noalias !21
  %reverse2110 = shufflevector <2 x i64> %wide.load2109, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2110, ptr %uglygep2950, align 8, !alias.scope !19
  store <2 x i64> %reverse2108, ptr %sunkaddr3938, align 8, !alias.scope !20, !noalias !21
  %index.next2111 = add nuw i64 %index2098, 2
  %lsr.iv.next2948 = add i64 %lsr.iv2947, -16
  %2039 = icmp eq i64 %n.vec2085, %index.next2111
  br i1 %2039, label %middle.block2080, label %vector.body2097, !llvm.loop !22

middle.block2080:                                 ; preds = %vector.body2097
  %cmp.n2096 = icmp eq i64 %2024, %n.vec2085
  br i1 %cmp.n2096, label %sort.quad_reversal.exit381.i.i, label %.lr.ph191.i.i.preheader

.lr.ph191.i.i.preheader:                          ; preds = %middle.block2080, %vector.memcheck2050, %vector.scevcheck2041, %.lr.ph191.preheader.i.i
  %.1.i190.i.i.ph = phi i64 [ %2024, %vector.memcheck2050 ], [ %2024, %vector.scevcheck2041 ], [ %2024, %.lr.ph191.preheader.i.i ], [ %ind.end2086, %middle.block2080 ]
  %.024.i189.i.i.ph = phi ptr [ %94, %vector.memcheck2050 ], [ %94, %vector.scevcheck2041 ], [ %94, %.lr.ph191.preheader.i.i ], [ %ind.end2088, %middle.block2080 ]
  %.126.i188.i.i.ph = phi ptr [ %.025.i.i.i131, %vector.memcheck2050 ], [ %.025.i.i.i131, %vector.scevcheck2041 ], [ %.025.i.i.i131, %.lr.ph191.preheader.i.i ], [ %ind.end2090, %middle.block2080 ]
  %.128.i187.i.i.ph = phi ptr [ %.027.i.i.i130, %vector.memcheck2050 ], [ %.027.i.i.i130, %vector.scevcheck2041 ], [ %.027.i.i.i130, %.lr.ph191.preheader.i.i ], [ %ind.end2092, %middle.block2080 ]
  %.029.i186.i.i.ph = phi ptr [ %.4.lcssa.i.i110, %vector.memcheck2050 ], [ %.4.lcssa.i.i110, %vector.scevcheck2041 ], [ %.4.lcssa.i.i110, %.lr.ph191.preheader.i.i ], [ %ind.end2094, %middle.block2080 ]
  %xtraiter2623 = and i64 %.1.i190.i.i.ph, 1
  %lcmp.mod2624.not = icmp eq i64 %xtraiter2623, 0
  br i1 %lcmp.mod2624.not, label %.lr.ph191.i.i.prol.loopexit, label %.lr.ph191.i.i.prol

.lr.ph191.i.i.prol:                               ; preds = %.lr.ph191.i.i.preheader
  %2040 = getelementptr inbounds i8, ptr %.128.i187.i.i.ph, i64 8
  %2041 = getelementptr inbounds i8, ptr %.126.i188.i.i.ph, i64 -8
  %2042 = getelementptr inbounds i8, ptr %.029.i186.i.i.ph, i64 -8
  %2043 = getelementptr inbounds i8, ptr %.024.i189.i.i.ph, i64 8
  %2044 = add nsw i64 %.1.i190.i.i.ph, -1
  %2045 = load i64, ptr %2043, align 8
  %2046 = load i64, ptr %2042, align 8
  store i64 %2046, ptr %2043, align 8
  store i64 %2045, ptr %2042, align 8
  %2047 = load i64, ptr %2041, align 8
  %2048 = load i64, ptr %2040, align 8
  store i64 %2048, ptr %2041, align 8
  store i64 %2047, ptr %2040, align 8
  br label %.lr.ph191.i.i.prol.loopexit

.lr.ph191.i.i.prol.loopexit:                      ; preds = %.lr.ph191.i.i.prol, %.lr.ph191.i.i.preheader
  %.1.i190.i.i.unr = phi i64 [ %.1.i190.i.i.ph, %.lr.ph191.i.i.preheader ], [ %2044, %.lr.ph191.i.i.prol ]
  %.024.i189.i.i.unr = phi ptr [ %.024.i189.i.i.ph, %.lr.ph191.i.i.preheader ], [ %2043, %.lr.ph191.i.i.prol ]
  %.126.i188.i.i.unr = phi ptr [ %.126.i188.i.i.ph, %.lr.ph191.i.i.preheader ], [ %2041, %.lr.ph191.i.i.prol ]
  %.128.i187.i.i.unr = phi ptr [ %.128.i187.i.i.ph, %.lr.ph191.i.i.preheader ], [ %2040, %.lr.ph191.i.i.prol ]
  %.029.i186.i.i.unr = phi ptr [ %.029.i186.i.i.ph, %.lr.ph191.i.i.preheader ], [ %2042, %.lr.ph191.i.i.prol ]
  %2049 = icmp eq i64 %.1.i190.i.i.ph, 1
  br i1 %2049, label %sort.quad_reversal.exit381.i.i, label %.lr.ph191.i.i.preheader2727

.lr.ph191.i.i.preheader2727:                      ; preds = %.lr.ph191.i.i.prol.loopexit
  br label %.lr.ph191.i.i

2050:                                             ; preds = %2008
  %2051 = load i64, ptr %2014, align 8
  %2052 = load i64, ptr %2016, align 8
  store i64 %2052, ptr %2014, align 8
  %2053 = getelementptr inbounds i8, ptr %2014, i64 -8
  store i64 %2051, ptr %2016, align 8
  %2054 = getelementptr inbounds i8, ptr %2016, i64 8
  %2055 = add nsw i64 %2012, -1
  br label %._crit_edge.i.i.i133

.lr.ph191.i.i:                                    ; preds = %.lr.ph191.i.i, %.lr.ph191.i.i.preheader2727
  %lsr.iv2935 = phi i64 [ -1, %.lr.ph191.i.i.preheader2727 ], [ %lsr.iv.next2936, %.lr.ph191.i.i ]
  %lsr.iv2929 = phi i64 [ 0, %.lr.ph191.i.i.preheader2727 ], [ %lsr.iv.next2930, %.lr.ph191.i.i ]
  %2056 = shl i64 %lsr.iv2935, 3
  %uglygep2939 = getelementptr i8, ptr %.126.i188.i.i.unr, i64 %2056
  %uglygep2946 = getelementptr i8, ptr %.029.i186.i.i.unr, i64 %2056
  %sunkaddr3939 = mul i64 %lsr.iv2929, 8
  %sunkaddr3940 = getelementptr i8, ptr %.024.i189.i.i.unr, i64 %sunkaddr3939
  %sunkaddr3941 = getelementptr i8, ptr %sunkaddr3940, i64 8
  %2057 = load i64, ptr %sunkaddr3941, align 8
  %2058 = load i64, ptr %uglygep2946, align 8
  store i64 %2058, ptr %sunkaddr3941, align 8
  store i64 %2057, ptr %uglygep2946, align 8
  %2059 = load i64, ptr %uglygep2939, align 8
  %sunkaddr3942 = mul i64 %lsr.iv2929, 8
  %sunkaddr3943 = getelementptr i8, ptr %.128.i187.i.i.unr, i64 %sunkaddr3942
  %sunkaddr3944 = getelementptr i8, ptr %sunkaddr3943, i64 8
  %2060 = load i64, ptr %sunkaddr3944, align 8
  store i64 %2060, ptr %uglygep2939, align 8
  store i64 %2059, ptr %sunkaddr3944, align 8
  %2061 = shl i64 %lsr.iv2935, 3
  %uglygep2937 = getelementptr i8, ptr %.126.i188.i.i.unr, i64 %2061
  %uglygep2938 = getelementptr i8, ptr %uglygep2937, i64 -8
  %uglygep2944 = getelementptr i8, ptr %.029.i186.i.i.unr, i64 %2061
  %uglygep2945 = getelementptr i8, ptr %uglygep2944, i64 -8
  %sunkaddr3945 = mul i64 %lsr.iv2929, 8
  %sunkaddr3946 = getelementptr i8, ptr %.024.i189.i.i.unr, i64 %sunkaddr3945
  %sunkaddr3947 = getelementptr i8, ptr %sunkaddr3946, i64 16
  %2062 = load i64, ptr %sunkaddr3947, align 8
  %2063 = load i64, ptr %uglygep2945, align 8
  store i64 %2063, ptr %sunkaddr3947, align 8
  store i64 %2062, ptr %uglygep2945, align 8
  %2064 = load i64, ptr %uglygep2938, align 8
  %sunkaddr3948 = mul i64 %lsr.iv2929, 8
  %sunkaddr3949 = getelementptr i8, ptr %.128.i187.i.i.unr, i64 %sunkaddr3948
  %sunkaddr3950 = getelementptr i8, ptr %sunkaddr3949, i64 16
  %2065 = load i64, ptr %sunkaddr3950, align 8
  store i64 %2065, ptr %uglygep2938, align 8
  store i64 %2064, ptr %sunkaddr3950, align 8
  %lsr.iv.next2930 = add i64 %lsr.iv2929, 2
  %lsr.iv.next2936 = add i64 %lsr.iv2935, -2
  %2066 = icmp eq i64 %.1.i190.i.i.unr, %lsr.iv.next2930
  br i1 %2066, label %sort.quad_reversal.exit381.i.i, label %.lr.ph191.i.i, !llvm.loop !25

2067:                                             ; preds = %1975
  %2068 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 1
  %2069 = ptrtoint ptr %.4220.lcssa.i.i109 to i64
  %2070 = ptrtoint ptr %2068 to i64
  %2071 = sub nuw i64 %2069, %2070
  %2072 = lshr i64 %2071, 4
  %2073 = shl nuw nsw i64 %2072, 3
  %2074 = getelementptr inbounds i8, ptr %2068, i64 %2073
  %2075 = sub nsw i64 0, %2073
  %2076 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 %2075
  %2077 = and i64 %2071, 16
  %2078 = icmp eq i64 %2077, 0
  br i1 %2078, label %2111, label %._crit_edge.i292.i.i

._crit_edge.i292.i.i:                             ; preds = %2111, %2067
  %.027.i293.i.i134 = phi ptr [ %2115, %2111 ], [ %2076, %2067 ]
  %.025.i294.i.i135 = phi ptr [ %2114, %2111 ], [ %2074, %2067 ]
  %.0.i295.i.i136 = phi i64 [ %2116, %2111 ], [ %2072, %2067 ]
  %2079 = load i64, ptr %2068, align 8
  %2080 = load i64, ptr %.4220.lcssa.i.i109, align 8
  store i64 %2080, ptr %2068, align 8
  store i64 %2079, ptr %.4220.lcssa.i.i109, align 8
  %2081 = load i64, ptr %.025.i294.i.i135, align 8
  %2082 = load i64, ptr %.027.i293.i.i134, align 8
  store i64 %2082, ptr %.025.i294.i.i135, align 8
  store i64 %2081, ptr %.027.i293.i.i134, align 8
  %2083 = icmp ult i64 %.0.i295.i.i136, 2
  br i1 %2083, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph185.preheader.i.i

.lr.ph185.preheader.i.i:                          ; preds = %._crit_edge.i292.i.i
  %2084 = lshr i64 %.0.i295.i.i136, 1
  %min.iters.check2011 = icmp ult i64 %.0.i295.i.i136, 80
  br i1 %min.iters.check2011, label %.lr.ph185.i.i.preheader, label %vector.scevcheck1970

vector.scevcheck1970:                             ; preds = %.lr.ph185.preheader.i.i
  %const3476 = bitcast i64 2305843009213693951 to i64
  %2085 = add nsw i64 %2084, -1
  %uglygep1971 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -8
  %mul.result1973.neg = mul i64 %2085, -8
  %2086 = getelementptr i8, ptr %uglygep1971, i64 %mul.result1973.neg
  %2087 = icmp ugt ptr %2086, %uglygep1971
  %uglygep1975 = getelementptr i8, ptr %.025.i294.i.i135, i64 -8
  %mul.result1977.neg = mul i64 %2085, -8
  %mul.overflow1978 = icmp ugt i64 %2085, %const3476
  %2088 = getelementptr i8, ptr %uglygep1975, i64 %mul.result1977.neg
  %2089 = icmp ugt ptr %2088, %uglygep1975
  %2090 = or i1 %2089, %mul.overflow1978
  %2091 = or i1 %2087, %2090
  br i1 %2091, label %.lr.ph185.i.i.preheader, label %vector.memcheck1979

vector.memcheck1979:                              ; preds = %vector.scevcheck1970
  %uglygep1980 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 9
  %2092 = shl i64 %2084, 3
  %2093 = add i64 %2092, 9
  %uglygep1981 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2093
  %uglygep1982 = getelementptr i8, ptr %.027.i293.i.i134, i64 8
  %2094 = add i64 %2092, 8
  %uglygep1983 = getelementptr i8, ptr %.027.i293.i.i134, i64 %2094
  %2095 = mul i64 %2084, -8
  %uglygep1984 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2095
  %uglygep1985 = getelementptr i8, ptr %.025.i294.i.i135, i64 %2095
  %bound01986 = icmp ult ptr %uglygep1980, %uglygep1983
  %bound11987 = icmp ult ptr %uglygep1982, %uglygep1981
  %found.conflict1988 = and i1 %bound01986, %bound11987
  %bound01989 = icmp ult ptr %uglygep1980, %.4220.lcssa.i.i109
  %bound11990 = icmp ult ptr %uglygep1984, %uglygep1981
  %found.conflict1991 = and i1 %bound01989, %bound11990
  %conflict.rdx1992 = or i1 %found.conflict1988, %found.conflict1991
  %bound01993 = icmp ult ptr %uglygep1980, %.025.i294.i.i135
  %bound11994 = icmp ult ptr %uglygep1985, %uglygep1981
  %found.conflict1995 = and i1 %bound01993, %bound11994
  %conflict.rdx1996 = or i1 %conflict.rdx1992, %found.conflict1995
  %bound01997 = icmp ult ptr %uglygep1982, %.4220.lcssa.i.i109
  %bound11998 = icmp ult ptr %uglygep1984, %uglygep1983
  %found.conflict1999 = and i1 %bound01997, %bound11998
  %conflict.rdx2000 = or i1 %conflict.rdx1996, %found.conflict1999
  %bound02001 = icmp ult ptr %uglygep1982, %.025.i294.i.i135
  %bound12002 = icmp ult ptr %uglygep1985, %uglygep1983
  %found.conflict2003 = and i1 %bound02001, %bound12002
  %conflict.rdx2004 = or i1 %conflict.rdx2000, %found.conflict2003
  %bound02005 = icmp ult ptr %uglygep1984, %.025.i294.i.i135
  %bound12006 = icmp ult ptr %uglygep1985, %.4220.lcssa.i.i109
  %found.conflict2007 = and i1 %bound02005, %bound12006
  %conflict.rdx2008 = or i1 %conflict.rdx2004, %found.conflict2007
  br i1 %conflict.rdx2008, label %.lr.ph185.i.i.preheader, label %vector.ph2012

vector.ph2012:                                    ; preds = %vector.memcheck1979
  %const3500 = bitcast i64 9223372036854775806 to i64
  %n.vec2014 = and i64 %2084, %const3500
  %ind.end2015 = and i64 %2084, 1
  %2096 = shl i64 %n.vec2014, 3
  %ind.end2017 = getelementptr i8, ptr %2068, i64 %2096
  %2097 = mul i64 %n.vec2014, -8
  %ind.end2019 = getelementptr i8, ptr %.025.i294.i.i135, i64 %2097
  %2098 = shl i64 %n.vec2014, 3
  %ind.end2021 = getelementptr i8, ptr %.027.i293.i.i134, i64 %2098
  %2099 = mul i64 %n.vec2014, -8
  %ind.end2023 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2099
  br label %vector.body2026

vector.body2026:                                  ; preds = %vector.body2026, %vector.ph2012
  %lsr.iv2970 = phi i64 [ %lsr.iv.next2971, %vector.body2026 ], [ -16, %vector.ph2012 ]
  %index2027 = phi i64 [ 0, %vector.ph2012 ], [ %index.next2040, %vector.body2026 ]
  %sunkaddr3951 = mul i64 %index2027, 8
  %sunkaddr3952 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %sunkaddr3951
  %sunkaddr3953 = getelementptr i8, ptr %sunkaddr3952, i64 9
  %wide.load2032 = load <2 x i64>, ptr %sunkaddr3953, align 8, !alias.scope !26, !noalias !29
  %uglygep2972 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %lsr.iv2970
  %wide.load2033 = load <2 x i64>, ptr %uglygep2972, align 8, !alias.scope !33, !noalias !34
  %reverse2034 = shufflevector <2 x i64> %wide.load2033, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2034, ptr %sunkaddr3953, align 8, !alias.scope !26, !noalias !29
  %reverse2035 = shufflevector <2 x i64> %wide.load2032, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2035, ptr %uglygep2972, align 8, !alias.scope !33, !noalias !34
  %uglygep2973 = getelementptr i8, ptr %.025.i294.i.i135, i64 %lsr.iv2970
  %wide.load2036 = load <2 x i64>, ptr %uglygep2973, align 8, !alias.scope !34
  %reverse2037 = shufflevector <2 x i64> %wide.load2036, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr3954 = mul i64 %index2027, 8
  %sunkaddr3955 = getelementptr i8, ptr %.027.i293.i.i134, i64 %sunkaddr3954
  %sunkaddr3956 = getelementptr i8, ptr %sunkaddr3955, i64 8
  %wide.load2038 = load <2 x i64>, ptr %sunkaddr3956, align 8, !alias.scope !35, !noalias !36
  %reverse2039 = shufflevector <2 x i64> %wide.load2038, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2039, ptr %uglygep2973, align 8, !alias.scope !34
  store <2 x i64> %reverse2037, ptr %sunkaddr3956, align 8, !alias.scope !35, !noalias !36
  %index.next2040 = add nuw i64 %index2027, 2
  %lsr.iv.next2971 = add i64 %lsr.iv2970, -16
  %2100 = icmp eq i64 %n.vec2014, %index.next2040
  br i1 %2100, label %middle.block2009, label %vector.body2026, !llvm.loop !37

middle.block2009:                                 ; preds = %vector.body2026
  %cmp.n2025 = icmp eq i64 %2084, %n.vec2014
  br i1 %cmp.n2025, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph185.i.i.preheader

.lr.ph185.i.i.preheader:                          ; preds = %middle.block2009, %vector.memcheck1979, %vector.scevcheck1970, %.lr.ph185.preheader.i.i
  %.1.i300184.i.i.ph = phi i64 [ %2084, %vector.memcheck1979 ], [ %2084, %vector.scevcheck1970 ], [ %2084, %.lr.ph185.preheader.i.i ], [ %ind.end2015, %middle.block2009 ]
  %.024.i299183.i.i.ph = phi ptr [ %2068, %vector.memcheck1979 ], [ %2068, %vector.scevcheck1970 ], [ %2068, %.lr.ph185.preheader.i.i ], [ %ind.end2017, %middle.block2009 ]
  %.126.i298182.i.i.ph = phi ptr [ %.025.i294.i.i135, %vector.memcheck1979 ], [ %.025.i294.i.i135, %vector.scevcheck1970 ], [ %.025.i294.i.i135, %.lr.ph185.preheader.i.i ], [ %ind.end2019, %middle.block2009 ]
  %.128.i297181.i.i.ph = phi ptr [ %.027.i293.i.i134, %vector.memcheck1979 ], [ %.027.i293.i.i134, %vector.scevcheck1970 ], [ %.027.i293.i.i134, %.lr.ph185.preheader.i.i ], [ %ind.end2021, %middle.block2009 ]
  %.029.i296180.i.i.ph = phi ptr [ %.4220.lcssa.i.i109, %vector.memcheck1979 ], [ %.4220.lcssa.i.i109, %vector.scevcheck1970 ], [ %.4220.lcssa.i.i109, %.lr.ph185.preheader.i.i ], [ %ind.end2023, %middle.block2009 ]
  %xtraiter2621 = and i64 %.1.i300184.i.i.ph, 1
  %lcmp.mod2622.not = icmp eq i64 %xtraiter2621, 0
  br i1 %lcmp.mod2622.not, label %.lr.ph185.i.i.prol.loopexit, label %.lr.ph185.i.i.prol

.lr.ph185.i.i.prol:                               ; preds = %.lr.ph185.i.i.preheader
  %2101 = getelementptr inbounds i8, ptr %.128.i297181.i.i.ph, i64 8
  %2102 = getelementptr inbounds i8, ptr %.126.i298182.i.i.ph, i64 -8
  %2103 = getelementptr inbounds i8, ptr %.029.i296180.i.i.ph, i64 -8
  %2104 = getelementptr inbounds i8, ptr %.024.i299183.i.i.ph, i64 8
  %2105 = add nsw i64 %.1.i300184.i.i.ph, -1
  %2106 = load i64, ptr %2104, align 8
  %2107 = load i64, ptr %2103, align 8
  store i64 %2107, ptr %2104, align 8
  store i64 %2106, ptr %2103, align 8
  %2108 = load i64, ptr %2102, align 8
  %2109 = load i64, ptr %2101, align 8
  store i64 %2109, ptr %2102, align 8
  store i64 %2108, ptr %2101, align 8
  br label %.lr.ph185.i.i.prol.loopexit

.lr.ph185.i.i.prol.loopexit:                      ; preds = %.lr.ph185.i.i.prol, %.lr.ph185.i.i.preheader
  %.1.i300184.i.i.unr = phi i64 [ %.1.i300184.i.i.ph, %.lr.ph185.i.i.preheader ], [ %2105, %.lr.ph185.i.i.prol ]
  %.024.i299183.i.i.unr = phi ptr [ %.024.i299183.i.i.ph, %.lr.ph185.i.i.preheader ], [ %2104, %.lr.ph185.i.i.prol ]
  %.126.i298182.i.i.unr = phi ptr [ %.126.i298182.i.i.ph, %.lr.ph185.i.i.preheader ], [ %2102, %.lr.ph185.i.i.prol ]
  %.128.i297181.i.i.unr = phi ptr [ %.128.i297181.i.i.ph, %.lr.ph185.i.i.preheader ], [ %2101, %.lr.ph185.i.i.prol ]
  %.029.i296180.i.i.unr = phi ptr [ %.029.i296180.i.i.ph, %.lr.ph185.i.i.preheader ], [ %2103, %.lr.ph185.i.i.prol ]
  %2110 = icmp eq i64 %.1.i300184.i.i.ph, 1
  br i1 %2110, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph185.i.i.preheader2729

.lr.ph185.i.i.preheader2729:                      ; preds = %.lr.ph185.i.i.prol.loopexit
  br label %.lr.ph185.i.i

2111:                                             ; preds = %2067
  %2112 = load i64, ptr %2074, align 8
  %2113 = load i64, ptr %2076, align 8
  store i64 %2113, ptr %2074, align 8
  %2114 = getelementptr inbounds i8, ptr %2074, i64 -8
  store i64 %2112, ptr %2076, align 8
  %2115 = getelementptr inbounds i8, ptr %2076, i64 8
  %2116 = add nsw i64 %2072, -1
  br label %._crit_edge.i292.i.i

.lr.ph185.i.i:                                    ; preds = %.lr.ph185.i.i, %.lr.ph185.i.i.preheader2729
  %lsr.iv2958 = phi i64 [ -1, %.lr.ph185.i.i.preheader2729 ], [ %lsr.iv.next2959, %.lr.ph185.i.i ]
  %lsr.iv2952 = phi i64 [ 0, %.lr.ph185.i.i.preheader2729 ], [ %lsr.iv.next2953, %.lr.ph185.i.i ]
  %2117 = shl i64 %lsr.iv2958, 3
  %uglygep2962 = getelementptr i8, ptr %.126.i298182.i.i.unr, i64 %2117
  %uglygep2969 = getelementptr i8, ptr %.029.i296180.i.i.unr, i64 %2117
  %sunkaddr3957 = mul i64 %lsr.iv2952, 8
  %sunkaddr3958 = getelementptr i8, ptr %.024.i299183.i.i.unr, i64 %sunkaddr3957
  %sunkaddr3959 = getelementptr i8, ptr %sunkaddr3958, i64 8
  %2118 = load i64, ptr %sunkaddr3959, align 8
  %2119 = load i64, ptr %uglygep2969, align 8
  store i64 %2119, ptr %sunkaddr3959, align 8
  store i64 %2118, ptr %uglygep2969, align 8
  %2120 = load i64, ptr %uglygep2962, align 8
  %sunkaddr3960 = mul i64 %lsr.iv2952, 8
  %sunkaddr3961 = getelementptr i8, ptr %.128.i297181.i.i.unr, i64 %sunkaddr3960
  %sunkaddr3962 = getelementptr i8, ptr %sunkaddr3961, i64 8
  %2121 = load i64, ptr %sunkaddr3962, align 8
  store i64 %2121, ptr %uglygep2962, align 8
  store i64 %2120, ptr %sunkaddr3962, align 8
  %2122 = shl i64 %lsr.iv2958, 3
  %uglygep2960 = getelementptr i8, ptr %.126.i298182.i.i.unr, i64 %2122
  %uglygep2961 = getelementptr i8, ptr %uglygep2960, i64 -8
  %uglygep2967 = getelementptr i8, ptr %.029.i296180.i.i.unr, i64 %2122
  %uglygep2968 = getelementptr i8, ptr %uglygep2967, i64 -8
  %sunkaddr3963 = mul i64 %lsr.iv2952, 8
  %sunkaddr3964 = getelementptr i8, ptr %.024.i299183.i.i.unr, i64 %sunkaddr3963
  %sunkaddr3965 = getelementptr i8, ptr %sunkaddr3964, i64 16
  %2123 = load i64, ptr %sunkaddr3965, align 8
  %2124 = load i64, ptr %uglygep2968, align 8
  store i64 %2124, ptr %sunkaddr3965, align 8
  store i64 %2123, ptr %uglygep2968, align 8
  %2125 = load i64, ptr %uglygep2961, align 8
  %sunkaddr3966 = mul i64 %lsr.iv2952, 8
  %sunkaddr3967 = getelementptr i8, ptr %.128.i297181.i.i.unr, i64 %sunkaddr3966
  %sunkaddr3968 = getelementptr i8, ptr %sunkaddr3967, i64 16
  %2126 = load i64, ptr %sunkaddr3968, align 8
  store i64 %2126, ptr %uglygep2961, align 8
  store i64 %2125, ptr %sunkaddr3968, align 8
  %lsr.iv.next2953 = add i64 %lsr.iv2952, 2
  %lsr.iv.next2959 = add i64 %lsr.iv2958, -2
  %2127 = icmp eq i64 %.1.i300184.i.i.unr, %lsr.iv.next2953
  br i1 %2127, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph185.i.i, !llvm.loop !38

2128:                                             ; preds = %1975
  %2129 = ptrtoint ptr %.4220.lcssa.i.i109 to i64
  %2130 = ptrtoint ptr %94 to i64
  %2131 = sub nuw i64 %2129, %2130
  %2132 = lshr i64 %2131, 4
  %2133 = shl nuw nsw i64 %2132, 3
  %2134 = getelementptr inbounds i8, ptr %94, i64 %2133
  %2135 = sub nsw i64 0, %2133
  %2136 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 %2135
  %2137 = and i64 %2131, 16
  %2138 = icmp eq i64 %2137, 0
  br i1 %2138, label %2170, label %._crit_edge.i302.i.i

._crit_edge.i302.i.i:                             ; preds = %2170, %2128
  %.027.i303.i.i = phi ptr [ %2174, %2170 ], [ %2136, %2128 ]
  %.025.i304.i.i = phi ptr [ %2173, %2170 ], [ %2134, %2128 ]
  %.0.i305.i.i = phi i64 [ %2175, %2170 ], [ %2132, %2128 ]
  %2139 = load i64, ptr %94, align 8
  %2140 = load i64, ptr %.4220.lcssa.i.i109, align 8
  store i64 %2140, ptr %94, align 8
  store i64 %2139, ptr %.4220.lcssa.i.i109, align 8
  %2141 = load i64, ptr %.025.i304.i.i, align 8
  %2142 = load i64, ptr %.027.i303.i.i, align 8
  store i64 %2142, ptr %.025.i304.i.i, align 8
  store i64 %2141, ptr %.027.i303.i.i, align 8
  %2143 = icmp ult i64 %.0.i305.i.i, 2
  br i1 %2143, label %sort.quad_reversal.exit391.i.i, label %.lr.ph179.preheader.i.i

.lr.ph179.preheader.i.i:                          ; preds = %._crit_edge.i302.i.i
  %2144 = lshr i64 %.0.i305.i.i, 1
  %min.iters.check1940 = icmp ult i64 %.0.i305.i.i, 80
  br i1 %min.iters.check1940, label %.lr.ph179.i.i.preheader, label %vector.scevcheck1899

vector.scevcheck1899:                             ; preds = %.lr.ph179.preheader.i.i
  %const3475 = bitcast i64 2305843009213693951 to i64
  %2145 = add nsw i64 %2144, -1
  %uglygep1900 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -8
  %mul.result1902.neg = mul i64 %2145, -8
  %2146 = getelementptr i8, ptr %uglygep1900, i64 %mul.result1902.neg
  %2147 = icmp ugt ptr %2146, %uglygep1900
  %uglygep1904 = getelementptr i8, ptr %.025.i304.i.i, i64 -8
  %mul.result1906.neg = mul i64 %2145, -8
  %mul.overflow1907 = icmp ugt i64 %2145, %const3475
  %2148 = getelementptr i8, ptr %uglygep1904, i64 %mul.result1906.neg
  %2149 = icmp ugt ptr %2148, %uglygep1904
  %2150 = or i1 %2149, %mul.overflow1907
  %2151 = or i1 %2147, %2150
  br i1 %2151, label %.lr.ph179.i.i.preheader, label %vector.memcheck1908

vector.memcheck1908:                              ; preds = %vector.scevcheck1899
  %uglygep1909 = getelementptr i8, ptr %94, i64 8
  %2152 = shl i64 %2144, 3
  %2153 = add i64 %2152, 8
  %uglygep1910 = getelementptr i8, ptr %94, i64 %2153
  %uglygep1911 = getelementptr i8, ptr %.027.i303.i.i, i64 8
  %uglygep1912 = getelementptr i8, ptr %.027.i303.i.i, i64 %2153
  %2154 = mul i64 %2144, -8
  %uglygep1913 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2154
  %uglygep1914 = getelementptr i8, ptr %.025.i304.i.i, i64 %2154
  %bound01915 = icmp ult ptr %uglygep1909, %uglygep1912
  %bound11916 = icmp ult ptr %uglygep1911, %uglygep1910
  %found.conflict1917 = and i1 %bound01915, %bound11916
  %bound01918 = icmp ult ptr %uglygep1909, %.4220.lcssa.i.i109
  %bound11919 = icmp ult ptr %uglygep1913, %uglygep1910
  %found.conflict1920 = and i1 %bound01918, %bound11919
  %conflict.rdx1921 = or i1 %found.conflict1917, %found.conflict1920
  %bound01922 = icmp ult ptr %uglygep1909, %.025.i304.i.i
  %bound11923 = icmp ult ptr %uglygep1914, %uglygep1910
  %found.conflict1924 = and i1 %bound01922, %bound11923
  %conflict.rdx1925 = or i1 %conflict.rdx1921, %found.conflict1924
  %bound01926 = icmp ult ptr %uglygep1911, %.4220.lcssa.i.i109
  %bound11927 = icmp ult ptr %uglygep1913, %uglygep1912
  %found.conflict1928 = and i1 %bound01926, %bound11927
  %conflict.rdx1929 = or i1 %conflict.rdx1925, %found.conflict1928
  %bound01930 = icmp ult ptr %uglygep1911, %.025.i304.i.i
  %bound11931 = icmp ult ptr %uglygep1914, %uglygep1912
  %found.conflict1932 = and i1 %bound01930, %bound11931
  %conflict.rdx1933 = or i1 %conflict.rdx1929, %found.conflict1932
  %bound01934 = icmp ult ptr %uglygep1913, %.025.i304.i.i
  %bound11935 = icmp ult ptr %uglygep1914, %.4220.lcssa.i.i109
  %found.conflict1936 = and i1 %bound01934, %bound11935
  %conflict.rdx1937 = or i1 %conflict.rdx1933, %found.conflict1936
  br i1 %conflict.rdx1937, label %.lr.ph179.i.i.preheader, label %vector.ph1941

vector.ph1941:                                    ; preds = %vector.memcheck1908
  %const3499 = bitcast i64 9223372036854775806 to i64
  %n.vec1943 = and i64 %2144, %const3499
  %ind.end1944 = and i64 %2144, 1
  %2155 = shl i64 %n.vec1943, 3
  %ind.end1946 = getelementptr i8, ptr %94, i64 %2155
  %2156 = mul i64 %n.vec1943, -8
  %ind.end1948 = getelementptr i8, ptr %.025.i304.i.i, i64 %2156
  %2157 = shl i64 %n.vec1943, 3
  %ind.end1950 = getelementptr i8, ptr %.027.i303.i.i, i64 %2157
  %2158 = mul i64 %n.vec1943, -8
  %ind.end1952 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2158
  br label %vector.body1955

vector.body1955:                                  ; preds = %vector.body1955, %vector.ph1941
  %lsr.iv2993 = phi i64 [ %lsr.iv.next2994, %vector.body1955 ], [ -16, %vector.ph1941 ]
  %index1956 = phi i64 [ 0, %vector.ph1941 ], [ %index.next1969, %vector.body1955 ]
  %sunkaddr3969 = mul i64 %index1956, 8
  %sunkaddr3970 = getelementptr i8, ptr %94, i64 %sunkaddr3969
  %sunkaddr3971 = getelementptr i8, ptr %sunkaddr3970, i64 8
  %wide.load1961 = load <2 x i64>, ptr %sunkaddr3971, align 8, !alias.scope !39, !noalias !42
  %uglygep2995 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %lsr.iv2993
  %wide.load1962 = load <2 x i64>, ptr %uglygep2995, align 8, !alias.scope !46, !noalias !47
  %reverse1963 = shufflevector <2 x i64> %wide.load1962, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1963, ptr %sunkaddr3971, align 8, !alias.scope !39, !noalias !42
  %reverse1964 = shufflevector <2 x i64> %wide.load1961, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1964, ptr %uglygep2995, align 8, !alias.scope !46, !noalias !47
  %uglygep2996 = getelementptr i8, ptr %.025.i304.i.i, i64 %lsr.iv2993
  %wide.load1965 = load <2 x i64>, ptr %uglygep2996, align 8, !alias.scope !47
  %reverse1966 = shufflevector <2 x i64> %wide.load1965, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr3972 = mul i64 %index1956, 8
  %sunkaddr3973 = getelementptr i8, ptr %.027.i303.i.i, i64 %sunkaddr3972
  %sunkaddr3974 = getelementptr i8, ptr %sunkaddr3973, i64 8
  %wide.load1967 = load <2 x i64>, ptr %sunkaddr3974, align 8, !alias.scope !48, !noalias !49
  %reverse1968 = shufflevector <2 x i64> %wide.load1967, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1968, ptr %uglygep2996, align 8, !alias.scope !47
  store <2 x i64> %reverse1966, ptr %sunkaddr3974, align 8, !alias.scope !48, !noalias !49
  %index.next1969 = add nuw i64 %index1956, 2
  %lsr.iv.next2994 = add i64 %lsr.iv2993, -16
  %2159 = icmp eq i64 %n.vec1943, %index.next1969
  br i1 %2159, label %middle.block1938, label %vector.body1955, !llvm.loop !50

middle.block1938:                                 ; preds = %vector.body1955
  %cmp.n1954 = icmp eq i64 %2144, %n.vec1943
  br i1 %cmp.n1954, label %sort.quad_reversal.exit391.i.i, label %.lr.ph179.i.i.preheader

.lr.ph179.i.i.preheader:                          ; preds = %middle.block1938, %vector.memcheck1908, %vector.scevcheck1899, %.lr.ph179.preheader.i.i
  %.1.i310178.i.i.ph = phi i64 [ %2144, %vector.memcheck1908 ], [ %2144, %vector.scevcheck1899 ], [ %2144, %.lr.ph179.preheader.i.i ], [ %ind.end1944, %middle.block1938 ]
  %.024.i309177.i.i.ph = phi ptr [ %94, %vector.memcheck1908 ], [ %94, %vector.scevcheck1899 ], [ %94, %.lr.ph179.preheader.i.i ], [ %ind.end1946, %middle.block1938 ]
  %.126.i308176.i.i.ph = phi ptr [ %.025.i304.i.i, %vector.memcheck1908 ], [ %.025.i304.i.i, %vector.scevcheck1899 ], [ %.025.i304.i.i, %.lr.ph179.preheader.i.i ], [ %ind.end1948, %middle.block1938 ]
  %.128.i307175.i.i.ph = phi ptr [ %.027.i303.i.i, %vector.memcheck1908 ], [ %.027.i303.i.i, %vector.scevcheck1899 ], [ %.027.i303.i.i, %.lr.ph179.preheader.i.i ], [ %ind.end1950, %middle.block1938 ]
  %.029.i306174.i.i.ph = phi ptr [ %.4220.lcssa.i.i109, %vector.memcheck1908 ], [ %.4220.lcssa.i.i109, %vector.scevcheck1899 ], [ %.4220.lcssa.i.i109, %.lr.ph179.preheader.i.i ], [ %ind.end1952, %middle.block1938 ]
  %xtraiter2619 = and i64 %.1.i310178.i.i.ph, 1
  %lcmp.mod2620.not = icmp eq i64 %xtraiter2619, 0
  br i1 %lcmp.mod2620.not, label %.lr.ph179.i.i.prol.loopexit, label %.lr.ph179.i.i.prol

.lr.ph179.i.i.prol:                               ; preds = %.lr.ph179.i.i.preheader
  %2160 = getelementptr inbounds i8, ptr %.128.i307175.i.i.ph, i64 8
  %2161 = getelementptr inbounds i8, ptr %.126.i308176.i.i.ph, i64 -8
  %2162 = getelementptr inbounds i8, ptr %.029.i306174.i.i.ph, i64 -8
  %2163 = getelementptr inbounds i8, ptr %.024.i309177.i.i.ph, i64 8
  %2164 = add nsw i64 %.1.i310178.i.i.ph, -1
  %2165 = load i64, ptr %2163, align 8
  %2166 = load i64, ptr %2162, align 8
  store i64 %2166, ptr %2163, align 8
  store i64 %2165, ptr %2162, align 8
  %2167 = load i64, ptr %2161, align 8
  %2168 = load i64, ptr %2160, align 8
  store i64 %2168, ptr %2161, align 8
  store i64 %2167, ptr %2160, align 8
  br label %.lr.ph179.i.i.prol.loopexit

.lr.ph179.i.i.prol.loopexit:                      ; preds = %.lr.ph179.i.i.prol, %.lr.ph179.i.i.preheader
  %.1.i310178.i.i.unr = phi i64 [ %.1.i310178.i.i.ph, %.lr.ph179.i.i.preheader ], [ %2164, %.lr.ph179.i.i.prol ]
  %.024.i309177.i.i.unr = phi ptr [ %.024.i309177.i.i.ph, %.lr.ph179.i.i.preheader ], [ %2163, %.lr.ph179.i.i.prol ]
  %.126.i308176.i.i.unr = phi ptr [ %.126.i308176.i.i.ph, %.lr.ph179.i.i.preheader ], [ %2161, %.lr.ph179.i.i.prol ]
  %.128.i307175.i.i.unr = phi ptr [ %.128.i307175.i.i.ph, %.lr.ph179.i.i.preheader ], [ %2160, %.lr.ph179.i.i.prol ]
  %.029.i306174.i.i.unr = phi ptr [ %.029.i306174.i.i.ph, %.lr.ph179.i.i.preheader ], [ %2162, %.lr.ph179.i.i.prol ]
  %2169 = icmp eq i64 %.1.i310178.i.i.ph, 1
  br i1 %2169, label %sort.quad_reversal.exit391.i.i, label %.lr.ph179.i.i.preheader2730

.lr.ph179.i.i.preheader2730:                      ; preds = %.lr.ph179.i.i.prol.loopexit
  br label %.lr.ph179.i.i

2170:                                             ; preds = %2128
  %2171 = load i64, ptr %2134, align 8
  %2172 = load i64, ptr %2136, align 8
  store i64 %2172, ptr %2134, align 8
  %2173 = getelementptr inbounds i8, ptr %2134, i64 -8
  store i64 %2171, ptr %2136, align 8
  %2174 = getelementptr inbounds i8, ptr %2136, i64 8
  %2175 = add nsw i64 %2132, -1
  br label %._crit_edge.i302.i.i

.lr.ph179.i.i:                                    ; preds = %.lr.ph179.i.i, %.lr.ph179.i.i.preheader2730
  %lsr.iv2981 = phi i64 [ -1, %.lr.ph179.i.i.preheader2730 ], [ %lsr.iv.next2982, %.lr.ph179.i.i ]
  %lsr.iv2975 = phi i64 [ 0, %.lr.ph179.i.i.preheader2730 ], [ %lsr.iv.next2976, %.lr.ph179.i.i ]
  %2176 = shl i64 %lsr.iv2981, 3
  %uglygep2985 = getelementptr i8, ptr %.126.i308176.i.i.unr, i64 %2176
  %uglygep2992 = getelementptr i8, ptr %.029.i306174.i.i.unr, i64 %2176
  %sunkaddr3975 = mul i64 %lsr.iv2975, 8
  %sunkaddr3976 = getelementptr i8, ptr %.024.i309177.i.i.unr, i64 %sunkaddr3975
  %sunkaddr3977 = getelementptr i8, ptr %sunkaddr3976, i64 8
  %2177 = load i64, ptr %sunkaddr3977, align 8
  %2178 = load i64, ptr %uglygep2992, align 8
  store i64 %2178, ptr %sunkaddr3977, align 8
  store i64 %2177, ptr %uglygep2992, align 8
  %2179 = load i64, ptr %uglygep2985, align 8
  %sunkaddr3978 = mul i64 %lsr.iv2975, 8
  %sunkaddr3979 = getelementptr i8, ptr %.128.i307175.i.i.unr, i64 %sunkaddr3978
  %sunkaddr3980 = getelementptr i8, ptr %sunkaddr3979, i64 8
  %2180 = load i64, ptr %sunkaddr3980, align 8
  store i64 %2180, ptr %uglygep2985, align 8
  store i64 %2179, ptr %sunkaddr3980, align 8
  %2181 = shl i64 %lsr.iv2981, 3
  %uglygep2983 = getelementptr i8, ptr %.126.i308176.i.i.unr, i64 %2181
  %uglygep2984 = getelementptr i8, ptr %uglygep2983, i64 -8
  %uglygep2990 = getelementptr i8, ptr %.029.i306174.i.i.unr, i64 %2181
  %uglygep2991 = getelementptr i8, ptr %uglygep2990, i64 -8
  %sunkaddr3981 = mul i64 %lsr.iv2975, 8
  %sunkaddr3982 = getelementptr i8, ptr %.024.i309177.i.i.unr, i64 %sunkaddr3981
  %sunkaddr3983 = getelementptr i8, ptr %sunkaddr3982, i64 16
  %2182 = load i64, ptr %sunkaddr3983, align 8
  %2183 = load i64, ptr %uglygep2991, align 8
  store i64 %2183, ptr %sunkaddr3983, align 8
  store i64 %2182, ptr %uglygep2991, align 8
  %2184 = load i64, ptr %uglygep2984, align 8
  %sunkaddr3984 = mul i64 %lsr.iv2975, 8
  %sunkaddr3985 = getelementptr i8, ptr %.128.i307175.i.i.unr, i64 %sunkaddr3984
  %sunkaddr3986 = getelementptr i8, ptr %sunkaddr3985, i64 16
  %2185 = load i64, ptr %sunkaddr3986, align 8
  store i64 %2185, ptr %uglygep2984, align 8
  store i64 %2184, ptr %sunkaddr3986, align 8
  %lsr.iv.next2976 = add i64 %lsr.iv2975, 2
  %lsr.iv.next2982 = add i64 %lsr.iv2981, -2
  %2186 = icmp eq i64 %.1.i310178.i.i.unr, %lsr.iv.next2976
  br i1 %2186, label %sort.quad_reversal.exit391.i.i, label %.lr.ph179.i.i, !llvm.loop !51

2187:                                             ; preds = %1975
  %2188 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 1
  %2189 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %2190 = ptrtoint ptr %2188 to i64
  %2191 = sub nuw i64 %2189, %2190
  %2192 = lshr i64 %2191, 4
  %2193 = shl nuw nsw i64 %2192, 3
  %2194 = getelementptr inbounds i8, ptr %2188, i64 %2193
  %2195 = sub nsw i64 0, %2193
  %2196 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %2195
  %2197 = and i64 %2191, 16
  %2198 = icmp eq i64 %2197, 0
  br i1 %2198, label %2231, label %._crit_edge.i312.i.i

._crit_edge.i312.i.i:                             ; preds = %2231, %2187
  %.027.i313.i.i = phi ptr [ %2235, %2231 ], [ %2196, %2187 ]
  %.025.i314.i.i = phi ptr [ %2234, %2231 ], [ %2194, %2187 ]
  %.0.i315.i.i = phi i64 [ %2236, %2231 ], [ %2192, %2187 ]
  %2199 = load i64, ptr %2188, align 8
  %2200 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %2200, ptr %2188, align 8
  store i64 %2199, ptr %.4225.lcssa.i.i108, align 8
  %2201 = load i64, ptr %.025.i314.i.i, align 8
  %2202 = load i64, ptr %.027.i313.i.i, align 8
  store i64 %2202, ptr %.025.i314.i.i, align 8
  store i64 %2201, ptr %.027.i313.i.i, align 8
  %2203 = icmp ult i64 %.0.i315.i.i, 2
  br i1 %2203, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph173.preheader.i.i

.lr.ph173.preheader.i.i:                          ; preds = %._crit_edge.i312.i.i
  %2204 = lshr i64 %.0.i315.i.i, 1
  %min.iters.check1869 = icmp ult i64 %.0.i315.i.i, 80
  br i1 %min.iters.check1869, label %.lr.ph173.i.i.preheader, label %vector.scevcheck1828

vector.scevcheck1828:                             ; preds = %.lr.ph173.preheader.i.i
  %const3474 = bitcast i64 2305843009213693951 to i64
  %2205 = add nsw i64 %2204, -1
  %uglygep1829 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1831.neg = mul i64 %2205, -8
  %2206 = getelementptr i8, ptr %uglygep1829, i64 %mul.result1831.neg
  %2207 = icmp ugt ptr %2206, %uglygep1829
  %uglygep1833 = getelementptr i8, ptr %.025.i314.i.i, i64 -8
  %mul.result1835.neg = mul i64 %2205, -8
  %mul.overflow1836 = icmp ugt i64 %2205, %const3474
  %2208 = getelementptr i8, ptr %uglygep1833, i64 %mul.result1835.neg
  %2209 = icmp ugt ptr %2208, %uglygep1833
  %2210 = or i1 %2209, %mul.overflow1836
  %2211 = or i1 %2207, %2210
  br i1 %2211, label %.lr.ph173.i.i.preheader, label %vector.memcheck1837

vector.memcheck1837:                              ; preds = %vector.scevcheck1828
  %uglygep1838 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 9
  %2212 = shl i64 %2204, 3
  %2213 = add i64 %2212, 9
  %uglygep1839 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2213
  %uglygep1840 = getelementptr i8, ptr %.027.i313.i.i, i64 8
  %2214 = add i64 %2212, 8
  %uglygep1841 = getelementptr i8, ptr %.027.i313.i.i, i64 %2214
  %2215 = mul i64 %2204, -8
  %uglygep1842 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2215
  %uglygep1843 = getelementptr i8, ptr %.025.i314.i.i, i64 %2215
  %bound01844 = icmp ult ptr %uglygep1838, %uglygep1841
  %bound11845 = icmp ult ptr %uglygep1840, %uglygep1839
  %found.conflict1846 = and i1 %bound01844, %bound11845
  %bound01847 = icmp ult ptr %uglygep1838, %.4225.lcssa.i.i108
  %bound11848 = icmp ult ptr %uglygep1842, %uglygep1839
  %found.conflict1849 = and i1 %bound01847, %bound11848
  %conflict.rdx1850 = or i1 %found.conflict1846, %found.conflict1849
  %bound01851 = icmp ult ptr %uglygep1838, %.025.i314.i.i
  %bound11852 = icmp ult ptr %uglygep1843, %uglygep1839
  %found.conflict1853 = and i1 %bound01851, %bound11852
  %conflict.rdx1854 = or i1 %conflict.rdx1850, %found.conflict1853
  %bound01855 = icmp ult ptr %uglygep1840, %.4225.lcssa.i.i108
  %bound11856 = icmp ult ptr %uglygep1842, %uglygep1841
  %found.conflict1857 = and i1 %bound01855, %bound11856
  %conflict.rdx1858 = or i1 %conflict.rdx1854, %found.conflict1857
  %bound01859 = icmp ult ptr %uglygep1840, %.025.i314.i.i
  %bound11860 = icmp ult ptr %uglygep1843, %uglygep1841
  %found.conflict1861 = and i1 %bound01859, %bound11860
  %conflict.rdx1862 = or i1 %conflict.rdx1858, %found.conflict1861
  %bound01863 = icmp ult ptr %uglygep1842, %.025.i314.i.i
  %bound11864 = icmp ult ptr %uglygep1843, %.4225.lcssa.i.i108
  %found.conflict1865 = and i1 %bound01863, %bound11864
  %conflict.rdx1866 = or i1 %conflict.rdx1862, %found.conflict1865
  br i1 %conflict.rdx1866, label %.lr.ph173.i.i.preheader, label %vector.ph1870

vector.ph1870:                                    ; preds = %vector.memcheck1837
  %const3498 = bitcast i64 9223372036854775806 to i64
  %n.vec1872 = and i64 %2204, %const3498
  %ind.end1873 = and i64 %2204, 1
  %2216 = shl i64 %n.vec1872, 3
  %ind.end1875 = getelementptr i8, ptr %2188, i64 %2216
  %2217 = mul i64 %n.vec1872, -8
  %ind.end1877 = getelementptr i8, ptr %.025.i314.i.i, i64 %2217
  %2218 = shl i64 %n.vec1872, 3
  %ind.end1879 = getelementptr i8, ptr %.027.i313.i.i, i64 %2218
  %2219 = mul i64 %n.vec1872, -8
  %ind.end1881 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2219
  br label %vector.body1884

vector.body1884:                                  ; preds = %vector.body1884, %vector.ph1870
  %lsr.iv3016 = phi i64 [ %lsr.iv.next3017, %vector.body1884 ], [ -16, %vector.ph1870 ]
  %index1885 = phi i64 [ 0, %vector.ph1870 ], [ %index.next1898, %vector.body1884 ]
  %sunkaddr3987 = mul i64 %index1885, 8
  %sunkaddr3988 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %sunkaddr3987
  %sunkaddr3989 = getelementptr i8, ptr %sunkaddr3988, i64 9
  %wide.load1890 = load <2 x i64>, ptr %sunkaddr3989, align 8, !alias.scope !52, !noalias !55
  %uglygep3018 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %lsr.iv3016
  %wide.load1891 = load <2 x i64>, ptr %uglygep3018, align 8, !alias.scope !59, !noalias !60
  %reverse1892 = shufflevector <2 x i64> %wide.load1891, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1892, ptr %sunkaddr3989, align 8, !alias.scope !52, !noalias !55
  %reverse1893 = shufflevector <2 x i64> %wide.load1890, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1893, ptr %uglygep3018, align 8, !alias.scope !59, !noalias !60
  %uglygep3019 = getelementptr i8, ptr %.025.i314.i.i, i64 %lsr.iv3016
  %wide.load1894 = load <2 x i64>, ptr %uglygep3019, align 8, !alias.scope !60
  %reverse1895 = shufflevector <2 x i64> %wide.load1894, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr3990 = mul i64 %index1885, 8
  %sunkaddr3991 = getelementptr i8, ptr %.027.i313.i.i, i64 %sunkaddr3990
  %sunkaddr3992 = getelementptr i8, ptr %sunkaddr3991, i64 8
  %wide.load1896 = load <2 x i64>, ptr %sunkaddr3992, align 8, !alias.scope !61, !noalias !62
  %reverse1897 = shufflevector <2 x i64> %wide.load1896, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1897, ptr %uglygep3019, align 8, !alias.scope !60
  store <2 x i64> %reverse1895, ptr %sunkaddr3992, align 8, !alias.scope !61, !noalias !62
  %index.next1898 = add nuw i64 %index1885, 2
  %lsr.iv.next3017 = add i64 %lsr.iv3016, -16
  %2220 = icmp eq i64 %n.vec1872, %index.next1898
  br i1 %2220, label %middle.block1867, label %vector.body1884, !llvm.loop !63

middle.block1867:                                 ; preds = %vector.body1884
  %cmp.n1883 = icmp eq i64 %2204, %n.vec1872
  br i1 %cmp.n1883, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph173.i.i.preheader

.lr.ph173.i.i.preheader:                          ; preds = %middle.block1867, %vector.memcheck1837, %vector.scevcheck1828, %.lr.ph173.preheader.i.i
  %.1.i320172.i.i.ph = phi i64 [ %2204, %vector.memcheck1837 ], [ %2204, %vector.scevcheck1828 ], [ %2204, %.lr.ph173.preheader.i.i ], [ %ind.end1873, %middle.block1867 ]
  %.024.i319171.i.i.ph = phi ptr [ %2188, %vector.memcheck1837 ], [ %2188, %vector.scevcheck1828 ], [ %2188, %.lr.ph173.preheader.i.i ], [ %ind.end1875, %middle.block1867 ]
  %.126.i318170.i.i.ph = phi ptr [ %.025.i314.i.i, %vector.memcheck1837 ], [ %.025.i314.i.i, %vector.scevcheck1828 ], [ %.025.i314.i.i, %.lr.ph173.preheader.i.i ], [ %ind.end1877, %middle.block1867 ]
  %.128.i317169.i.i.ph = phi ptr [ %.027.i313.i.i, %vector.memcheck1837 ], [ %.027.i313.i.i, %vector.scevcheck1828 ], [ %.027.i313.i.i, %.lr.ph173.preheader.i.i ], [ %ind.end1879, %middle.block1867 ]
  %.029.i316168.i.i.ph = phi ptr [ %.4225.lcssa.i.i108, %vector.memcheck1837 ], [ %.4225.lcssa.i.i108, %vector.scevcheck1828 ], [ %.4225.lcssa.i.i108, %.lr.ph173.preheader.i.i ], [ %ind.end1881, %middle.block1867 ]
  %xtraiter2617 = and i64 %.1.i320172.i.i.ph, 1
  %lcmp.mod2618.not = icmp eq i64 %xtraiter2617, 0
  br i1 %lcmp.mod2618.not, label %.lr.ph173.i.i.prol.loopexit, label %.lr.ph173.i.i.prol

.lr.ph173.i.i.prol:                               ; preds = %.lr.ph173.i.i.preheader
  %2221 = getelementptr inbounds i8, ptr %.128.i317169.i.i.ph, i64 8
  %2222 = getelementptr inbounds i8, ptr %.126.i318170.i.i.ph, i64 -8
  %2223 = getelementptr inbounds i8, ptr %.029.i316168.i.i.ph, i64 -8
  %2224 = getelementptr inbounds i8, ptr %.024.i319171.i.i.ph, i64 8
  %2225 = add nsw i64 %.1.i320172.i.i.ph, -1
  %2226 = load i64, ptr %2224, align 8
  %2227 = load i64, ptr %2223, align 8
  store i64 %2227, ptr %2224, align 8
  store i64 %2226, ptr %2223, align 8
  %2228 = load i64, ptr %2222, align 8
  %2229 = load i64, ptr %2221, align 8
  store i64 %2229, ptr %2222, align 8
  store i64 %2228, ptr %2221, align 8
  br label %.lr.ph173.i.i.prol.loopexit

.lr.ph173.i.i.prol.loopexit:                      ; preds = %.lr.ph173.i.i.prol, %.lr.ph173.i.i.preheader
  %.1.i320172.i.i.unr = phi i64 [ %.1.i320172.i.i.ph, %.lr.ph173.i.i.preheader ], [ %2225, %.lr.ph173.i.i.prol ]
  %.024.i319171.i.i.unr = phi ptr [ %.024.i319171.i.i.ph, %.lr.ph173.i.i.preheader ], [ %2224, %.lr.ph173.i.i.prol ]
  %.126.i318170.i.i.unr = phi ptr [ %.126.i318170.i.i.ph, %.lr.ph173.i.i.preheader ], [ %2222, %.lr.ph173.i.i.prol ]
  %.128.i317169.i.i.unr = phi ptr [ %.128.i317169.i.i.ph, %.lr.ph173.i.i.preheader ], [ %2221, %.lr.ph173.i.i.prol ]
  %.029.i316168.i.i.unr = phi ptr [ %.029.i316168.i.i.ph, %.lr.ph173.i.i.preheader ], [ %2223, %.lr.ph173.i.i.prol ]
  %2230 = icmp eq i64 %.1.i320172.i.i.ph, 1
  br i1 %2230, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph173.i.i.preheader2732

.lr.ph173.i.i.preheader2732:                      ; preds = %.lr.ph173.i.i.prol.loopexit
  br label %.lr.ph173.i.i

2231:                                             ; preds = %2187
  %2232 = load i64, ptr %2194, align 8
  %2233 = load i64, ptr %2196, align 8
  store i64 %2233, ptr %2194, align 8
  %2234 = getelementptr inbounds i8, ptr %2194, i64 -8
  store i64 %2232, ptr %2196, align 8
  %2235 = getelementptr inbounds i8, ptr %2196, i64 8
  %2236 = add nsw i64 %2192, -1
  br label %._crit_edge.i312.i.i

.lr.ph173.i.i:                                    ; preds = %.lr.ph173.i.i, %.lr.ph173.i.i.preheader2732
  %lsr.iv3004 = phi i64 [ -1, %.lr.ph173.i.i.preheader2732 ], [ %lsr.iv.next3005, %.lr.ph173.i.i ]
  %lsr.iv2998 = phi i64 [ 0, %.lr.ph173.i.i.preheader2732 ], [ %lsr.iv.next2999, %.lr.ph173.i.i ]
  %2237 = shl i64 %lsr.iv3004, 3
  %uglygep3008 = getelementptr i8, ptr %.126.i318170.i.i.unr, i64 %2237
  %uglygep3015 = getelementptr i8, ptr %.029.i316168.i.i.unr, i64 %2237
  %sunkaddr3993 = mul i64 %lsr.iv2998, 8
  %sunkaddr3994 = getelementptr i8, ptr %.024.i319171.i.i.unr, i64 %sunkaddr3993
  %sunkaddr3995 = getelementptr i8, ptr %sunkaddr3994, i64 8
  %2238 = load i64, ptr %sunkaddr3995, align 8
  %2239 = load i64, ptr %uglygep3015, align 8
  store i64 %2239, ptr %sunkaddr3995, align 8
  store i64 %2238, ptr %uglygep3015, align 8
  %2240 = load i64, ptr %uglygep3008, align 8
  %sunkaddr3996 = mul i64 %lsr.iv2998, 8
  %sunkaddr3997 = getelementptr i8, ptr %.128.i317169.i.i.unr, i64 %sunkaddr3996
  %sunkaddr3998 = getelementptr i8, ptr %sunkaddr3997, i64 8
  %2241 = load i64, ptr %sunkaddr3998, align 8
  store i64 %2241, ptr %uglygep3008, align 8
  store i64 %2240, ptr %sunkaddr3998, align 8
  %2242 = shl i64 %lsr.iv3004, 3
  %uglygep3006 = getelementptr i8, ptr %.126.i318170.i.i.unr, i64 %2242
  %uglygep3007 = getelementptr i8, ptr %uglygep3006, i64 -8
  %uglygep3013 = getelementptr i8, ptr %.029.i316168.i.i.unr, i64 %2242
  %uglygep3014 = getelementptr i8, ptr %uglygep3013, i64 -8
  %sunkaddr3999 = mul i64 %lsr.iv2998, 8
  %sunkaddr4000 = getelementptr i8, ptr %.024.i319171.i.i.unr, i64 %sunkaddr3999
  %sunkaddr4001 = getelementptr i8, ptr %sunkaddr4000, i64 16
  %2243 = load i64, ptr %sunkaddr4001, align 8
  %2244 = load i64, ptr %uglygep3014, align 8
  store i64 %2244, ptr %sunkaddr4001, align 8
  store i64 %2243, ptr %uglygep3014, align 8
  %2245 = load i64, ptr %uglygep3007, align 8
  %sunkaddr4002 = mul i64 %lsr.iv2998, 8
  %sunkaddr4003 = getelementptr i8, ptr %.128.i317169.i.i.unr, i64 %sunkaddr4002
  %sunkaddr4004 = getelementptr i8, ptr %sunkaddr4003, i64 16
  %2246 = load i64, ptr %sunkaddr4004, align 8
  store i64 %2246, ptr %uglygep3007, align 8
  store i64 %2245, ptr %sunkaddr4004, align 8
  %lsr.iv.next2999 = add i64 %lsr.iv2998, 2
  %lsr.iv.next3005 = add i64 %lsr.iv3004, -2
  %2247 = icmp eq i64 %.1.i320172.i.i.unr, %lsr.iv.next2999
  br i1 %2247, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph173.i.i, !llvm.loop !64

2248:                                             ; preds = %1975
  %2249 = ptrtoint ptr %.4.lcssa.i.i110 to i64
  %2250 = ptrtoint ptr %94 to i64
  %2251 = sub nuw i64 %2249, %2250
  %2252 = lshr i64 %2251, 4
  %2253 = shl nuw nsw i64 %2252, 3
  %2254 = getelementptr inbounds i8, ptr %94, i64 %2253
  %2255 = sub nsw i64 0, %2253
  %2256 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 %2255
  %2257 = and i64 %2251, 16
  %2258 = icmp eq i64 %2257, 0
  br i1 %2258, label %2290, label %._crit_edge.i322.i.i

._crit_edge.i322.i.i:                             ; preds = %2290, %2248
  %.027.i323.i.i = phi ptr [ %2294, %2290 ], [ %2256, %2248 ]
  %.025.i324.i.i = phi ptr [ %2293, %2290 ], [ %2254, %2248 ]
  %.0.i325.i.i = phi i64 [ %2295, %2290 ], [ %2252, %2248 ]
  %2259 = load i64, ptr %94, align 8
  %2260 = load i64, ptr %.4.lcssa.i.i110, align 8
  store i64 %2260, ptr %94, align 8
  store i64 %2259, ptr %.4.lcssa.i.i110, align 8
  %2261 = load i64, ptr %.025.i324.i.i, align 8
  %2262 = load i64, ptr %.027.i323.i.i, align 8
  store i64 %2262, ptr %.025.i324.i.i, align 8
  store i64 %2261, ptr %.027.i323.i.i, align 8
  %2263 = icmp ult i64 %.0.i325.i.i, 2
  br i1 %2263, label %sort.quad_reversal.exit331.i.i, label %.lr.ph161.preheader.i.i

.lr.ph161.preheader.i.i:                          ; preds = %._crit_edge.i322.i.i
  %2264 = lshr i64 %.0.i325.i.i, 1
  %min.iters.check1727 = icmp ult i64 %.0.i325.i.i, 80
  br i1 %min.iters.check1727, label %.lr.ph161.i.i.preheader, label %vector.scevcheck1686

vector.scevcheck1686:                             ; preds = %.lr.ph161.preheader.i.i
  %const3472 = bitcast i64 2305843009213693951 to i64
  %2265 = add nsw i64 %2264, -1
  %uglygep1687 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -8
  %mul.result1689.neg = mul i64 %2265, -8
  %2266 = getelementptr i8, ptr %uglygep1687, i64 %mul.result1689.neg
  %2267 = icmp ugt ptr %2266, %uglygep1687
  %uglygep1691 = getelementptr i8, ptr %.025.i324.i.i, i64 -8
  %mul.result1693.neg = mul i64 %2265, -8
  %mul.overflow1694 = icmp ugt i64 %2265, %const3472
  %2268 = getelementptr i8, ptr %uglygep1691, i64 %mul.result1693.neg
  %2269 = icmp ugt ptr %2268, %uglygep1691
  %2270 = or i1 %2269, %mul.overflow1694
  %2271 = or i1 %2267, %2270
  br i1 %2271, label %.lr.ph161.i.i.preheader, label %vector.memcheck1695

vector.memcheck1695:                              ; preds = %vector.scevcheck1686
  %uglygep1696 = getelementptr i8, ptr %94, i64 8
  %2272 = shl i64 %2264, 3
  %2273 = add i64 %2272, 8
  %uglygep1697 = getelementptr i8, ptr %94, i64 %2273
  %uglygep1698 = getelementptr i8, ptr %.027.i323.i.i, i64 8
  %uglygep1699 = getelementptr i8, ptr %.027.i323.i.i, i64 %2273
  %2274 = mul i64 %2264, -8
  %uglygep1700 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2274
  %uglygep1701 = getelementptr i8, ptr %.025.i324.i.i, i64 %2274
  %bound01702 = icmp ult ptr %uglygep1696, %uglygep1699
  %bound11703 = icmp ult ptr %uglygep1698, %uglygep1697
  %found.conflict1704 = and i1 %bound01702, %bound11703
  %bound01705 = icmp ult ptr %uglygep1696, %.4.lcssa.i.i110
  %bound11706 = icmp ult ptr %uglygep1700, %uglygep1697
  %found.conflict1707 = and i1 %bound01705, %bound11706
  %conflict.rdx1708 = or i1 %found.conflict1704, %found.conflict1707
  %bound01709 = icmp ult ptr %uglygep1696, %.025.i324.i.i
  %bound11710 = icmp ult ptr %uglygep1701, %uglygep1697
  %found.conflict1711 = and i1 %bound01709, %bound11710
  %conflict.rdx1712 = or i1 %conflict.rdx1708, %found.conflict1711
  %bound01713 = icmp ult ptr %uglygep1698, %.4.lcssa.i.i110
  %bound11714 = icmp ult ptr %uglygep1700, %uglygep1699
  %found.conflict1715 = and i1 %bound01713, %bound11714
  %conflict.rdx1716 = or i1 %conflict.rdx1712, %found.conflict1715
  %bound01717 = icmp ult ptr %uglygep1698, %.025.i324.i.i
  %bound11718 = icmp ult ptr %uglygep1701, %uglygep1699
  %found.conflict1719 = and i1 %bound01717, %bound11718
  %conflict.rdx1720 = or i1 %conflict.rdx1716, %found.conflict1719
  %bound01721 = icmp ult ptr %uglygep1700, %.025.i324.i.i
  %bound11722 = icmp ult ptr %uglygep1701, %.4.lcssa.i.i110
  %found.conflict1723 = and i1 %bound01721, %bound11722
  %conflict.rdx1724 = or i1 %conflict.rdx1720, %found.conflict1723
  br i1 %conflict.rdx1724, label %.lr.ph161.i.i.preheader, label %vector.ph1728

vector.ph1728:                                    ; preds = %vector.memcheck1695
  %const3496 = bitcast i64 9223372036854775806 to i64
  %n.vec1730 = and i64 %2264, %const3496
  %ind.end1731 = and i64 %2264, 1
  %2275 = shl i64 %n.vec1730, 3
  %ind.end1733 = getelementptr i8, ptr %94, i64 %2275
  %2276 = mul i64 %n.vec1730, -8
  %ind.end1735 = getelementptr i8, ptr %.025.i324.i.i, i64 %2276
  %2277 = shl i64 %n.vec1730, 3
  %ind.end1737 = getelementptr i8, ptr %.027.i323.i.i, i64 %2277
  %2278 = mul i64 %n.vec1730, -8
  %ind.end1739 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2278
  br label %vector.body1742

vector.body1742:                                  ; preds = %vector.body1742, %vector.ph1728
  %lsr.iv3062 = phi i64 [ %lsr.iv.next3063, %vector.body1742 ], [ -16, %vector.ph1728 ]
  %index1743 = phi i64 [ 0, %vector.ph1728 ], [ %index.next1756, %vector.body1742 ]
  %sunkaddr4005 = mul i64 %index1743, 8
  %sunkaddr4006 = getelementptr i8, ptr %94, i64 %sunkaddr4005
  %sunkaddr4007 = getelementptr i8, ptr %sunkaddr4006, i64 8
  %wide.load1748 = load <2 x i64>, ptr %sunkaddr4007, align 8, !alias.scope !65, !noalias !68
  %uglygep3064 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %lsr.iv3062
  %wide.load1749 = load <2 x i64>, ptr %uglygep3064, align 8, !alias.scope !72, !noalias !73
  %reverse1750 = shufflevector <2 x i64> %wide.load1749, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1750, ptr %sunkaddr4007, align 8, !alias.scope !65, !noalias !68
  %reverse1751 = shufflevector <2 x i64> %wide.load1748, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1751, ptr %uglygep3064, align 8, !alias.scope !72, !noalias !73
  %uglygep3065 = getelementptr i8, ptr %.025.i324.i.i, i64 %lsr.iv3062
  %wide.load1752 = load <2 x i64>, ptr %uglygep3065, align 8, !alias.scope !73
  %reverse1753 = shufflevector <2 x i64> %wide.load1752, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4008 = mul i64 %index1743, 8
  %sunkaddr4009 = getelementptr i8, ptr %.027.i323.i.i, i64 %sunkaddr4008
  %sunkaddr4010 = getelementptr i8, ptr %sunkaddr4009, i64 8
  %wide.load1754 = load <2 x i64>, ptr %sunkaddr4010, align 8, !alias.scope !74, !noalias !75
  %reverse1755 = shufflevector <2 x i64> %wide.load1754, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1755, ptr %uglygep3065, align 8, !alias.scope !73
  store <2 x i64> %reverse1753, ptr %sunkaddr4010, align 8, !alias.scope !74, !noalias !75
  %index.next1756 = add nuw i64 %index1743, 2
  %lsr.iv.next3063 = add i64 %lsr.iv3062, -16
  %2279 = icmp eq i64 %n.vec1730, %index.next1756
  br i1 %2279, label %middle.block1725, label %vector.body1742, !llvm.loop !76

middle.block1725:                                 ; preds = %vector.body1742
  %cmp.n1741 = icmp eq i64 %2264, %n.vec1730
  br i1 %cmp.n1741, label %sort.quad_reversal.exit331.i.i, label %.lr.ph161.i.i.preheader

.lr.ph161.i.i.preheader:                          ; preds = %middle.block1725, %vector.memcheck1695, %vector.scevcheck1686, %.lr.ph161.preheader.i.i
  %.1.i330160.i.i.ph = phi i64 [ %2264, %vector.memcheck1695 ], [ %2264, %vector.scevcheck1686 ], [ %2264, %.lr.ph161.preheader.i.i ], [ %ind.end1731, %middle.block1725 ]
  %.024.i329159.i.i.ph = phi ptr [ %94, %vector.memcheck1695 ], [ %94, %vector.scevcheck1686 ], [ %94, %.lr.ph161.preheader.i.i ], [ %ind.end1733, %middle.block1725 ]
  %.126.i328158.i.i.ph = phi ptr [ %.025.i324.i.i, %vector.memcheck1695 ], [ %.025.i324.i.i, %vector.scevcheck1686 ], [ %.025.i324.i.i, %.lr.ph161.preheader.i.i ], [ %ind.end1735, %middle.block1725 ]
  %.128.i327157.i.i.ph = phi ptr [ %.027.i323.i.i, %vector.memcheck1695 ], [ %.027.i323.i.i, %vector.scevcheck1686 ], [ %.027.i323.i.i, %.lr.ph161.preheader.i.i ], [ %ind.end1737, %middle.block1725 ]
  %.029.i326156.i.i.ph = phi ptr [ %.4.lcssa.i.i110, %vector.memcheck1695 ], [ %.4.lcssa.i.i110, %vector.scevcheck1686 ], [ %.4.lcssa.i.i110, %.lr.ph161.preheader.i.i ], [ %ind.end1739, %middle.block1725 ]
  %xtraiter2613 = and i64 %.1.i330160.i.i.ph, 1
  %lcmp.mod2614.not = icmp eq i64 %xtraiter2613, 0
  br i1 %lcmp.mod2614.not, label %.lr.ph161.i.i.prol.loopexit, label %.lr.ph161.i.i.prol

.lr.ph161.i.i.prol:                               ; preds = %.lr.ph161.i.i.preheader
  %2280 = getelementptr inbounds i8, ptr %.128.i327157.i.i.ph, i64 8
  %2281 = getelementptr inbounds i8, ptr %.126.i328158.i.i.ph, i64 -8
  %2282 = getelementptr inbounds i8, ptr %.029.i326156.i.i.ph, i64 -8
  %2283 = getelementptr inbounds i8, ptr %.024.i329159.i.i.ph, i64 8
  %2284 = add nsw i64 %.1.i330160.i.i.ph, -1
  %2285 = load i64, ptr %2283, align 8
  %2286 = load i64, ptr %2282, align 8
  store i64 %2286, ptr %2283, align 8
  store i64 %2285, ptr %2282, align 8
  %2287 = load i64, ptr %2281, align 8
  %2288 = load i64, ptr %2280, align 8
  store i64 %2288, ptr %2281, align 8
  store i64 %2287, ptr %2280, align 8
  br label %.lr.ph161.i.i.prol.loopexit

.lr.ph161.i.i.prol.loopexit:                      ; preds = %.lr.ph161.i.i.prol, %.lr.ph161.i.i.preheader
  %.1.i330160.i.i.unr = phi i64 [ %.1.i330160.i.i.ph, %.lr.ph161.i.i.preheader ], [ %2284, %.lr.ph161.i.i.prol ]
  %.024.i329159.i.i.unr = phi ptr [ %.024.i329159.i.i.ph, %.lr.ph161.i.i.preheader ], [ %2283, %.lr.ph161.i.i.prol ]
  %.126.i328158.i.i.unr = phi ptr [ %.126.i328158.i.i.ph, %.lr.ph161.i.i.preheader ], [ %2281, %.lr.ph161.i.i.prol ]
  %.128.i327157.i.i.unr = phi ptr [ %.128.i327157.i.i.ph, %.lr.ph161.i.i.preheader ], [ %2280, %.lr.ph161.i.i.prol ]
  %.029.i326156.i.i.unr = phi ptr [ %.029.i326156.i.i.ph, %.lr.ph161.i.i.preheader ], [ %2282, %.lr.ph161.i.i.prol ]
  %2289 = icmp eq i64 %.1.i330160.i.i.ph, 1
  br i1 %2289, label %sort.quad_reversal.exit331.i.i, label %.lr.ph161.i.i.preheader2736

.lr.ph161.i.i.preheader2736:                      ; preds = %.lr.ph161.i.i.prol.loopexit
  br label %.lr.ph161.i.i

2290:                                             ; preds = %2248
  %2291 = load i64, ptr %2254, align 8
  %2292 = load i64, ptr %2256, align 8
  store i64 %2292, ptr %2254, align 8
  %2293 = getelementptr inbounds i8, ptr %2254, i64 -8
  store i64 %2291, ptr %2256, align 8
  %2294 = getelementptr inbounds i8, ptr %2256, i64 8
  %2295 = add nsw i64 %2252, -1
  br label %._crit_edge.i322.i.i

.lr.ph161.i.i:                                    ; preds = %.lr.ph161.i.i, %.lr.ph161.i.i.preheader2736
  %lsr.iv3050 = phi i64 [ -1, %.lr.ph161.i.i.preheader2736 ], [ %lsr.iv.next3051, %.lr.ph161.i.i ]
  %lsr.iv3044 = phi i64 [ 0, %.lr.ph161.i.i.preheader2736 ], [ %lsr.iv.next3045, %.lr.ph161.i.i ]
  %2296 = shl i64 %lsr.iv3050, 3
  %uglygep3054 = getelementptr i8, ptr %.126.i328158.i.i.unr, i64 %2296
  %uglygep3061 = getelementptr i8, ptr %.029.i326156.i.i.unr, i64 %2296
  %sunkaddr4011 = mul i64 %lsr.iv3044, 8
  %sunkaddr4012 = getelementptr i8, ptr %.024.i329159.i.i.unr, i64 %sunkaddr4011
  %sunkaddr4013 = getelementptr i8, ptr %sunkaddr4012, i64 8
  %2297 = load i64, ptr %sunkaddr4013, align 8
  %2298 = load i64, ptr %uglygep3061, align 8
  store i64 %2298, ptr %sunkaddr4013, align 8
  store i64 %2297, ptr %uglygep3061, align 8
  %2299 = load i64, ptr %uglygep3054, align 8
  %sunkaddr4014 = mul i64 %lsr.iv3044, 8
  %sunkaddr4015 = getelementptr i8, ptr %.128.i327157.i.i.unr, i64 %sunkaddr4014
  %sunkaddr4016 = getelementptr i8, ptr %sunkaddr4015, i64 8
  %2300 = load i64, ptr %sunkaddr4016, align 8
  store i64 %2300, ptr %uglygep3054, align 8
  store i64 %2299, ptr %sunkaddr4016, align 8
  %2301 = shl i64 %lsr.iv3050, 3
  %uglygep3052 = getelementptr i8, ptr %.126.i328158.i.i.unr, i64 %2301
  %uglygep3053 = getelementptr i8, ptr %uglygep3052, i64 -8
  %uglygep3059 = getelementptr i8, ptr %.029.i326156.i.i.unr, i64 %2301
  %uglygep3060 = getelementptr i8, ptr %uglygep3059, i64 -8
  %sunkaddr4017 = mul i64 %lsr.iv3044, 8
  %sunkaddr4018 = getelementptr i8, ptr %.024.i329159.i.i.unr, i64 %sunkaddr4017
  %sunkaddr4019 = getelementptr i8, ptr %sunkaddr4018, i64 16
  %2302 = load i64, ptr %sunkaddr4019, align 8
  %2303 = load i64, ptr %uglygep3060, align 8
  store i64 %2303, ptr %sunkaddr4019, align 8
  store i64 %2302, ptr %uglygep3060, align 8
  %2304 = load i64, ptr %uglygep3053, align 8
  %sunkaddr4020 = mul i64 %lsr.iv3044, 8
  %sunkaddr4021 = getelementptr i8, ptr %.128.i327157.i.i.unr, i64 %sunkaddr4020
  %sunkaddr4022 = getelementptr i8, ptr %sunkaddr4021, i64 16
  %2305 = load i64, ptr %sunkaddr4022, align 8
  store i64 %2305, ptr %uglygep3053, align 8
  store i64 %2304, ptr %sunkaddr4022, align 8
  %lsr.iv.next3045 = add i64 %lsr.iv3044, 2
  %lsr.iv.next3051 = add i64 %lsr.iv3050, -2
  %2306 = icmp eq i64 %.1.i330160.i.i.unr, %lsr.iv.next3045
  br i1 %2306, label %sort.quad_reversal.exit331.i.i, label %.lr.ph161.i.i, !llvm.loop !77

sort.quad_reversal.exit331.i.i:                   ; preds = %.lr.ph161.i.i, %.lr.ph161.i.i.prol.loopexit, %middle.block1725, %._crit_edge.i322.i.i
  %2307 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 1
  %2308 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %2309 = ptrtoint ptr %2307 to i64
  %2310 = sub nuw i64 %2308, %2309
  %2311 = lshr i64 %2310, 4
  %2312 = shl nuw nsw i64 %2311, 3
  %2313 = getelementptr inbounds i8, ptr %2307, i64 %2312
  %2314 = sub nsw i64 0, %2312
  %2315 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %2314
  %2316 = and i64 %2310, 16
  %2317 = icmp eq i64 %2316, 0
  br i1 %2317, label %2350, label %._crit_edge.i332.i.i

._crit_edge.i332.i.i:                             ; preds = %2350, %sort.quad_reversal.exit331.i.i
  %.027.i333.i.i = phi ptr [ %2354, %2350 ], [ %2315, %sort.quad_reversal.exit331.i.i ]
  %.025.i334.i.i = phi ptr [ %2353, %2350 ], [ %2313, %sort.quad_reversal.exit331.i.i ]
  %.0.i335.i.i = phi i64 [ %2355, %2350 ], [ %2311, %sort.quad_reversal.exit331.i.i ]
  %2318 = load i64, ptr %2307, align 8
  %2319 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %2319, ptr %2307, align 8
  store i64 %2318, ptr %.4225.lcssa.i.i108, align 8
  %2320 = load i64, ptr %.025.i334.i.i, align 8
  %2321 = load i64, ptr %.027.i333.i.i, align 8
  store i64 %2321, ptr %.025.i334.i.i, align 8
  store i64 %2320, ptr %.027.i333.i.i, align 8
  %2322 = icmp ult i64 %.0.i335.i.i, 2
  br i1 %2322, label %sort.quad_reversal.exit401.i.i, label %.lr.ph167.preheader.i.i

.lr.ph167.preheader.i.i:                          ; preds = %._crit_edge.i332.i.i
  %2323 = lshr i64 %.0.i335.i.i, 1
  %min.iters.check1798 = icmp ult i64 %.0.i335.i.i, 80
  br i1 %min.iters.check1798, label %.lr.ph167.i.i.preheader, label %vector.scevcheck1757

vector.scevcheck1757:                             ; preds = %.lr.ph167.preheader.i.i
  %const3473 = bitcast i64 2305843009213693951 to i64
  %2324 = add nsw i64 %2323, -1
  %uglygep1758 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1760.neg = mul i64 %2324, -8
  %2325 = getelementptr i8, ptr %uglygep1758, i64 %mul.result1760.neg
  %2326 = icmp ugt ptr %2325, %uglygep1758
  %uglygep1762 = getelementptr i8, ptr %.025.i334.i.i, i64 -8
  %mul.result1764.neg = mul i64 %2324, -8
  %mul.overflow1765 = icmp ugt i64 %2324, %const3473
  %2327 = getelementptr i8, ptr %uglygep1762, i64 %mul.result1764.neg
  %2328 = icmp ugt ptr %2327, %uglygep1762
  %2329 = or i1 %2328, %mul.overflow1765
  %2330 = or i1 %2326, %2329
  br i1 %2330, label %.lr.ph167.i.i.preheader, label %vector.memcheck1766

vector.memcheck1766:                              ; preds = %vector.scevcheck1757
  %uglygep1767 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 9
  %2331 = shl i64 %2323, 3
  %2332 = add i64 %2331, 9
  %uglygep1768 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2332
  %uglygep1769 = getelementptr i8, ptr %.027.i333.i.i, i64 8
  %2333 = add i64 %2331, 8
  %uglygep1770 = getelementptr i8, ptr %.027.i333.i.i, i64 %2333
  %2334 = mul i64 %2323, -8
  %uglygep1771 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2334
  %uglygep1772 = getelementptr i8, ptr %.025.i334.i.i, i64 %2334
  %bound01773 = icmp ult ptr %uglygep1767, %uglygep1770
  %bound11774 = icmp ult ptr %uglygep1769, %uglygep1768
  %found.conflict1775 = and i1 %bound01773, %bound11774
  %bound01776 = icmp ult ptr %uglygep1767, %.4225.lcssa.i.i108
  %bound11777 = icmp ult ptr %uglygep1771, %uglygep1768
  %found.conflict1778 = and i1 %bound01776, %bound11777
  %conflict.rdx1779 = or i1 %found.conflict1775, %found.conflict1778
  %bound01780 = icmp ult ptr %uglygep1767, %.025.i334.i.i
  %bound11781 = icmp ult ptr %uglygep1772, %uglygep1768
  %found.conflict1782 = and i1 %bound01780, %bound11781
  %conflict.rdx1783 = or i1 %conflict.rdx1779, %found.conflict1782
  %bound01784 = icmp ult ptr %uglygep1769, %.4225.lcssa.i.i108
  %bound11785 = icmp ult ptr %uglygep1771, %uglygep1770
  %found.conflict1786 = and i1 %bound01784, %bound11785
  %conflict.rdx1787 = or i1 %conflict.rdx1783, %found.conflict1786
  %bound01788 = icmp ult ptr %uglygep1769, %.025.i334.i.i
  %bound11789 = icmp ult ptr %uglygep1772, %uglygep1770
  %found.conflict1790 = and i1 %bound01788, %bound11789
  %conflict.rdx1791 = or i1 %conflict.rdx1787, %found.conflict1790
  %bound01792 = icmp ult ptr %uglygep1771, %.025.i334.i.i
  %bound11793 = icmp ult ptr %uglygep1772, %.4225.lcssa.i.i108
  %found.conflict1794 = and i1 %bound01792, %bound11793
  %conflict.rdx1795 = or i1 %conflict.rdx1791, %found.conflict1794
  br i1 %conflict.rdx1795, label %.lr.ph167.i.i.preheader, label %vector.ph1799

vector.ph1799:                                    ; preds = %vector.memcheck1766
  %const3497 = bitcast i64 9223372036854775806 to i64
  %n.vec1801 = and i64 %2323, %const3497
  %ind.end1802 = and i64 %2323, 1
  %2335 = shl i64 %n.vec1801, 3
  %ind.end1804 = getelementptr i8, ptr %2307, i64 %2335
  %2336 = mul i64 %n.vec1801, -8
  %ind.end1806 = getelementptr i8, ptr %.025.i334.i.i, i64 %2336
  %2337 = shl i64 %n.vec1801, 3
  %ind.end1808 = getelementptr i8, ptr %.027.i333.i.i, i64 %2337
  %2338 = mul i64 %n.vec1801, -8
  %ind.end1810 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2338
  br label %vector.body1813

vector.body1813:                                  ; preds = %vector.body1813, %vector.ph1799
  %lsr.iv3039 = phi i64 [ %lsr.iv.next3040, %vector.body1813 ], [ -16, %vector.ph1799 ]
  %index1814 = phi i64 [ 0, %vector.ph1799 ], [ %index.next1827, %vector.body1813 ]
  %sunkaddr4023 = mul i64 %index1814, 8
  %sunkaddr4024 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %sunkaddr4023
  %sunkaddr4025 = getelementptr i8, ptr %sunkaddr4024, i64 9
  %wide.load1819 = load <2 x i64>, ptr %sunkaddr4025, align 8, !alias.scope !78, !noalias !81
  %uglygep3041 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %lsr.iv3039
  %wide.load1820 = load <2 x i64>, ptr %uglygep3041, align 8, !alias.scope !85, !noalias !86
  %reverse1821 = shufflevector <2 x i64> %wide.load1820, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1821, ptr %sunkaddr4025, align 8, !alias.scope !78, !noalias !81
  %reverse1822 = shufflevector <2 x i64> %wide.load1819, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1822, ptr %uglygep3041, align 8, !alias.scope !85, !noalias !86
  %uglygep3042 = getelementptr i8, ptr %.025.i334.i.i, i64 %lsr.iv3039
  %wide.load1823 = load <2 x i64>, ptr %uglygep3042, align 8, !alias.scope !86
  %reverse1824 = shufflevector <2 x i64> %wide.load1823, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4026 = mul i64 %index1814, 8
  %sunkaddr4027 = getelementptr i8, ptr %.027.i333.i.i, i64 %sunkaddr4026
  %sunkaddr4028 = getelementptr i8, ptr %sunkaddr4027, i64 8
  %wide.load1825 = load <2 x i64>, ptr %sunkaddr4028, align 8, !alias.scope !87, !noalias !88
  %reverse1826 = shufflevector <2 x i64> %wide.load1825, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1826, ptr %uglygep3042, align 8, !alias.scope !86
  store <2 x i64> %reverse1824, ptr %sunkaddr4028, align 8, !alias.scope !87, !noalias !88
  %index.next1827 = add nuw i64 %index1814, 2
  %lsr.iv.next3040 = add i64 %lsr.iv3039, -16
  %2339 = icmp eq i64 %n.vec1801, %index.next1827
  br i1 %2339, label %middle.block1796, label %vector.body1813, !llvm.loop !89

middle.block1796:                                 ; preds = %vector.body1813
  %cmp.n1812 = icmp eq i64 %2323, %n.vec1801
  br i1 %cmp.n1812, label %sort.quad_reversal.exit401.i.i, label %.lr.ph167.i.i.preheader

.lr.ph167.i.i.preheader:                          ; preds = %middle.block1796, %vector.memcheck1766, %vector.scevcheck1757, %.lr.ph167.preheader.i.i
  %.1.i340166.i.i.ph = phi i64 [ %2323, %vector.memcheck1766 ], [ %2323, %vector.scevcheck1757 ], [ %2323, %.lr.ph167.preheader.i.i ], [ %ind.end1802, %middle.block1796 ]
  %.024.i339165.i.i.ph = phi ptr [ %2307, %vector.memcheck1766 ], [ %2307, %vector.scevcheck1757 ], [ %2307, %.lr.ph167.preheader.i.i ], [ %ind.end1804, %middle.block1796 ]
  %.126.i338164.i.i.ph = phi ptr [ %.025.i334.i.i, %vector.memcheck1766 ], [ %.025.i334.i.i, %vector.scevcheck1757 ], [ %.025.i334.i.i, %.lr.ph167.preheader.i.i ], [ %ind.end1806, %middle.block1796 ]
  %.128.i337163.i.i.ph = phi ptr [ %.027.i333.i.i, %vector.memcheck1766 ], [ %.027.i333.i.i, %vector.scevcheck1757 ], [ %.027.i333.i.i, %.lr.ph167.preheader.i.i ], [ %ind.end1808, %middle.block1796 ]
  %.029.i336162.i.i.ph = phi ptr [ %.4225.lcssa.i.i108, %vector.memcheck1766 ], [ %.4225.lcssa.i.i108, %vector.scevcheck1757 ], [ %.4225.lcssa.i.i108, %.lr.ph167.preheader.i.i ], [ %ind.end1810, %middle.block1796 ]
  %xtraiter2615 = and i64 %.1.i340166.i.i.ph, 1
  %lcmp.mod2616.not = icmp eq i64 %xtraiter2615, 0
  br i1 %lcmp.mod2616.not, label %.lr.ph167.i.i.prol.loopexit, label %.lr.ph167.i.i.prol

.lr.ph167.i.i.prol:                               ; preds = %.lr.ph167.i.i.preheader
  %2340 = getelementptr inbounds i8, ptr %.128.i337163.i.i.ph, i64 8
  %2341 = getelementptr inbounds i8, ptr %.126.i338164.i.i.ph, i64 -8
  %2342 = getelementptr inbounds i8, ptr %.029.i336162.i.i.ph, i64 -8
  %2343 = getelementptr inbounds i8, ptr %.024.i339165.i.i.ph, i64 8
  %2344 = add nsw i64 %.1.i340166.i.i.ph, -1
  %2345 = load i64, ptr %2343, align 8
  %2346 = load i64, ptr %2342, align 8
  store i64 %2346, ptr %2343, align 8
  store i64 %2345, ptr %2342, align 8
  %2347 = load i64, ptr %2341, align 8
  %2348 = load i64, ptr %2340, align 8
  store i64 %2348, ptr %2341, align 8
  store i64 %2347, ptr %2340, align 8
  br label %.lr.ph167.i.i.prol.loopexit

.lr.ph167.i.i.prol.loopexit:                      ; preds = %.lr.ph167.i.i.prol, %.lr.ph167.i.i.preheader
  %.1.i340166.i.i.unr = phi i64 [ %.1.i340166.i.i.ph, %.lr.ph167.i.i.preheader ], [ %2344, %.lr.ph167.i.i.prol ]
  %.024.i339165.i.i.unr = phi ptr [ %.024.i339165.i.i.ph, %.lr.ph167.i.i.preheader ], [ %2343, %.lr.ph167.i.i.prol ]
  %.126.i338164.i.i.unr = phi ptr [ %.126.i338164.i.i.ph, %.lr.ph167.i.i.preheader ], [ %2341, %.lr.ph167.i.i.prol ]
  %.128.i337163.i.i.unr = phi ptr [ %.128.i337163.i.i.ph, %.lr.ph167.i.i.preheader ], [ %2340, %.lr.ph167.i.i.prol ]
  %.029.i336162.i.i.unr = phi ptr [ %.029.i336162.i.i.ph, %.lr.ph167.i.i.preheader ], [ %2342, %.lr.ph167.i.i.prol ]
  %2349 = icmp eq i64 %.1.i340166.i.i.ph, 1
  br i1 %2349, label %sort.quad_reversal.exit401.i.i, label %.lr.ph167.i.i.preheader2734

.lr.ph167.i.i.preheader2734:                      ; preds = %.lr.ph167.i.i.prol.loopexit
  br label %.lr.ph167.i.i

2350:                                             ; preds = %sort.quad_reversal.exit331.i.i
  %2351 = load i64, ptr %2313, align 8
  %2352 = load i64, ptr %2315, align 8
  store i64 %2352, ptr %2313, align 8
  %2353 = getelementptr inbounds i8, ptr %2313, i64 -8
  store i64 %2351, ptr %2315, align 8
  %2354 = getelementptr inbounds i8, ptr %2315, i64 8
  %2355 = add nsw i64 %2311, -1
  br label %._crit_edge.i332.i.i

.lr.ph167.i.i:                                    ; preds = %.lr.ph167.i.i, %.lr.ph167.i.i.preheader2734
  %lsr.iv3027 = phi i64 [ -1, %.lr.ph167.i.i.preheader2734 ], [ %lsr.iv.next3028, %.lr.ph167.i.i ]
  %lsr.iv3021 = phi i64 [ 0, %.lr.ph167.i.i.preheader2734 ], [ %lsr.iv.next3022, %.lr.ph167.i.i ]
  %2356 = shl i64 %lsr.iv3027, 3
  %uglygep3031 = getelementptr i8, ptr %.126.i338164.i.i.unr, i64 %2356
  %uglygep3038 = getelementptr i8, ptr %.029.i336162.i.i.unr, i64 %2356
  %sunkaddr4029 = mul i64 %lsr.iv3021, 8
  %sunkaddr4030 = getelementptr i8, ptr %.024.i339165.i.i.unr, i64 %sunkaddr4029
  %sunkaddr4031 = getelementptr i8, ptr %sunkaddr4030, i64 8
  %2357 = load i64, ptr %sunkaddr4031, align 8
  %2358 = load i64, ptr %uglygep3038, align 8
  store i64 %2358, ptr %sunkaddr4031, align 8
  store i64 %2357, ptr %uglygep3038, align 8
  %2359 = load i64, ptr %uglygep3031, align 8
  %sunkaddr4032 = mul i64 %lsr.iv3021, 8
  %sunkaddr4033 = getelementptr i8, ptr %.128.i337163.i.i.unr, i64 %sunkaddr4032
  %sunkaddr4034 = getelementptr i8, ptr %sunkaddr4033, i64 8
  %2360 = load i64, ptr %sunkaddr4034, align 8
  store i64 %2360, ptr %uglygep3031, align 8
  store i64 %2359, ptr %sunkaddr4034, align 8
  %2361 = shl i64 %lsr.iv3027, 3
  %uglygep3029 = getelementptr i8, ptr %.126.i338164.i.i.unr, i64 %2361
  %uglygep3030 = getelementptr i8, ptr %uglygep3029, i64 -8
  %uglygep3036 = getelementptr i8, ptr %.029.i336162.i.i.unr, i64 %2361
  %uglygep3037 = getelementptr i8, ptr %uglygep3036, i64 -8
  %sunkaddr4035 = mul i64 %lsr.iv3021, 8
  %sunkaddr4036 = getelementptr i8, ptr %.024.i339165.i.i.unr, i64 %sunkaddr4035
  %sunkaddr4037 = getelementptr i8, ptr %sunkaddr4036, i64 16
  %2362 = load i64, ptr %sunkaddr4037, align 8
  %2363 = load i64, ptr %uglygep3037, align 8
  store i64 %2363, ptr %sunkaddr4037, align 8
  store i64 %2362, ptr %uglygep3037, align 8
  %2364 = load i64, ptr %uglygep3030, align 8
  %sunkaddr4038 = mul i64 %lsr.iv3021, 8
  %sunkaddr4039 = getelementptr i8, ptr %.128.i337163.i.i.unr, i64 %sunkaddr4038
  %sunkaddr4040 = getelementptr i8, ptr %sunkaddr4039, i64 16
  %2365 = load i64, ptr %sunkaddr4040, align 8
  store i64 %2365, ptr %uglygep3030, align 8
  store i64 %2364, ptr %sunkaddr4040, align 8
  %lsr.iv.next3022 = add i64 %lsr.iv3021, 2
  %lsr.iv.next3028 = add i64 %lsr.iv3027, -2
  %2366 = icmp eq i64 %.1.i340166.i.i.unr, %lsr.iv.next3022
  br i1 %2366, label %sort.quad_reversal.exit401.i.i, label %.lr.ph167.i.i, !llvm.loop !90

2367:                                             ; preds = %1975
  %2368 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 1
  %2369 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %2370 = ptrtoint ptr %2368 to i64
  %2371 = sub nuw i64 %2369, %2370
  %2372 = lshr i64 %2371, 4
  %2373 = shl nuw nsw i64 %2372, 3
  %2374 = getelementptr inbounds i8, ptr %2368, i64 %2373
  %2375 = sub nsw i64 0, %2373
  %2376 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %2375
  %2377 = and i64 %2371, 16
  %2378 = icmp eq i64 %2377, 0
  br i1 %2378, label %2411, label %._crit_edge.i342.i.i

._crit_edge.i342.i.i:                             ; preds = %2411, %2367
  %.027.i343.i.i137 = phi ptr [ %2415, %2411 ], [ %2376, %2367 ]
  %.025.i344.i.i138 = phi ptr [ %2414, %2411 ], [ %2374, %2367 ]
  %.0.i345.i.i139 = phi i64 [ %2416, %2411 ], [ %2372, %2367 ]
  %2379 = load i64, ptr %2368, align 8
  %2380 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %2380, ptr %2368, align 8
  store i64 %2379, ptr %.4225.lcssa.i.i108, align 8
  %2381 = load i64, ptr %.025.i344.i.i138, align 8
  %2382 = load i64, ptr %.027.i343.i.i137, align 8
  store i64 %2382, ptr %.025.i344.i.i138, align 8
  store i64 %2381, ptr %.027.i343.i.i137, align 8
  %2383 = icmp ult i64 %.0.i345.i.i139, 2
  br i1 %2383, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph155.preheader.i.i

.lr.ph155.preheader.i.i:                          ; preds = %._crit_edge.i342.i.i
  %2384 = lshr i64 %.0.i345.i.i139, 1
  %min.iters.check1656 = icmp ult i64 %.0.i345.i.i139, 80
  br i1 %min.iters.check1656, label %.lr.ph155.i.i.preheader, label %vector.scevcheck1615

vector.scevcheck1615:                             ; preds = %.lr.ph155.preheader.i.i
  %const3471 = bitcast i64 2305843009213693951 to i64
  %2385 = add nsw i64 %2384, -1
  %uglygep1616 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1618.neg = mul i64 %2385, -8
  %2386 = getelementptr i8, ptr %uglygep1616, i64 %mul.result1618.neg
  %2387 = icmp ugt ptr %2386, %uglygep1616
  %uglygep1620 = getelementptr i8, ptr %.025.i344.i.i138, i64 -8
  %mul.result1622.neg = mul i64 %2385, -8
  %mul.overflow1623 = icmp ugt i64 %2385, %const3471
  %2388 = getelementptr i8, ptr %uglygep1620, i64 %mul.result1622.neg
  %2389 = icmp ugt ptr %2388, %uglygep1620
  %2390 = or i1 %2389, %mul.overflow1623
  %2391 = or i1 %2387, %2390
  br i1 %2391, label %.lr.ph155.i.i.preheader, label %vector.memcheck1624

vector.memcheck1624:                              ; preds = %vector.scevcheck1615
  %uglygep1625 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 9
  %2392 = shl i64 %2384, 3
  %2393 = add i64 %2392, 9
  %uglygep1626 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2393
  %uglygep1627 = getelementptr i8, ptr %.027.i343.i.i137, i64 8
  %2394 = add i64 %2392, 8
  %uglygep1628 = getelementptr i8, ptr %.027.i343.i.i137, i64 %2394
  %2395 = mul i64 %2384, -8
  %uglygep1629 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2395
  %uglygep1630 = getelementptr i8, ptr %.025.i344.i.i138, i64 %2395
  %bound01631 = icmp ult ptr %uglygep1625, %uglygep1628
  %bound11632 = icmp ult ptr %uglygep1627, %uglygep1626
  %found.conflict1633 = and i1 %bound01631, %bound11632
  %bound01634 = icmp ult ptr %uglygep1625, %.4225.lcssa.i.i108
  %bound11635 = icmp ult ptr %uglygep1629, %uglygep1626
  %found.conflict1636 = and i1 %bound01634, %bound11635
  %conflict.rdx1637 = or i1 %found.conflict1633, %found.conflict1636
  %bound01638 = icmp ult ptr %uglygep1625, %.025.i344.i.i138
  %bound11639 = icmp ult ptr %uglygep1630, %uglygep1626
  %found.conflict1640 = and i1 %bound01638, %bound11639
  %conflict.rdx1641 = or i1 %conflict.rdx1637, %found.conflict1640
  %bound01642 = icmp ult ptr %uglygep1627, %.4225.lcssa.i.i108
  %bound11643 = icmp ult ptr %uglygep1629, %uglygep1628
  %found.conflict1644 = and i1 %bound01642, %bound11643
  %conflict.rdx1645 = or i1 %conflict.rdx1641, %found.conflict1644
  %bound01646 = icmp ult ptr %uglygep1627, %.025.i344.i.i138
  %bound11647 = icmp ult ptr %uglygep1630, %uglygep1628
  %found.conflict1648 = and i1 %bound01646, %bound11647
  %conflict.rdx1649 = or i1 %conflict.rdx1645, %found.conflict1648
  %bound01650 = icmp ult ptr %uglygep1629, %.025.i344.i.i138
  %bound11651 = icmp ult ptr %uglygep1630, %.4225.lcssa.i.i108
  %found.conflict1652 = and i1 %bound01650, %bound11651
  %conflict.rdx1653 = or i1 %conflict.rdx1649, %found.conflict1652
  br i1 %conflict.rdx1653, label %.lr.ph155.i.i.preheader, label %vector.ph1657

vector.ph1657:                                    ; preds = %vector.memcheck1624
  %const3495 = bitcast i64 9223372036854775806 to i64
  %n.vec1659 = and i64 %2384, %const3495
  %ind.end1660 = and i64 %2384, 1
  %2396 = shl i64 %n.vec1659, 3
  %ind.end1662 = getelementptr i8, ptr %2368, i64 %2396
  %2397 = mul i64 %n.vec1659, -8
  %ind.end1664 = getelementptr i8, ptr %.025.i344.i.i138, i64 %2397
  %2398 = shl i64 %n.vec1659, 3
  %ind.end1666 = getelementptr i8, ptr %.027.i343.i.i137, i64 %2398
  %2399 = mul i64 %n.vec1659, -8
  %ind.end1668 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2399
  br label %vector.body1671

vector.body1671:                                  ; preds = %vector.body1671, %vector.ph1657
  %lsr.iv3085 = phi i64 [ %lsr.iv.next3086, %vector.body1671 ], [ -16, %vector.ph1657 ]
  %index1672 = phi i64 [ 0, %vector.ph1657 ], [ %index.next1685, %vector.body1671 ]
  %sunkaddr4041 = mul i64 %index1672, 8
  %sunkaddr4042 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %sunkaddr4041
  %sunkaddr4043 = getelementptr i8, ptr %sunkaddr4042, i64 9
  %wide.load1677 = load <2 x i64>, ptr %sunkaddr4043, align 8, !alias.scope !91, !noalias !94
  %uglygep3087 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %lsr.iv3085
  %wide.load1678 = load <2 x i64>, ptr %uglygep3087, align 8, !alias.scope !98, !noalias !99
  %reverse1679 = shufflevector <2 x i64> %wide.load1678, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1679, ptr %sunkaddr4043, align 8, !alias.scope !91, !noalias !94
  %reverse1680 = shufflevector <2 x i64> %wide.load1677, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1680, ptr %uglygep3087, align 8, !alias.scope !98, !noalias !99
  %uglygep3088 = getelementptr i8, ptr %.025.i344.i.i138, i64 %lsr.iv3085
  %wide.load1681 = load <2 x i64>, ptr %uglygep3088, align 8, !alias.scope !99
  %reverse1682 = shufflevector <2 x i64> %wide.load1681, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4044 = mul i64 %index1672, 8
  %sunkaddr4045 = getelementptr i8, ptr %.027.i343.i.i137, i64 %sunkaddr4044
  %sunkaddr4046 = getelementptr i8, ptr %sunkaddr4045, i64 8
  %wide.load1683 = load <2 x i64>, ptr %sunkaddr4046, align 8, !alias.scope !100, !noalias !101
  %reverse1684 = shufflevector <2 x i64> %wide.load1683, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1684, ptr %uglygep3088, align 8, !alias.scope !99
  store <2 x i64> %reverse1682, ptr %sunkaddr4046, align 8, !alias.scope !100, !noalias !101
  %index.next1685 = add nuw i64 %index1672, 2
  %lsr.iv.next3086 = add i64 %lsr.iv3085, -16
  %2400 = icmp eq i64 %n.vec1659, %index.next1685
  br i1 %2400, label %middle.block1654, label %vector.body1671, !llvm.loop !102

middle.block1654:                                 ; preds = %vector.body1671
  %cmp.n1670 = icmp eq i64 %2384, %n.vec1659
  br i1 %cmp.n1670, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph155.i.i.preheader

.lr.ph155.i.i.preheader:                          ; preds = %middle.block1654, %vector.memcheck1624, %vector.scevcheck1615, %.lr.ph155.preheader.i.i
  %.1.i350154.i.i.ph = phi i64 [ %2384, %vector.memcheck1624 ], [ %2384, %vector.scevcheck1615 ], [ %2384, %.lr.ph155.preheader.i.i ], [ %ind.end1660, %middle.block1654 ]
  %.024.i349153.i.i.ph = phi ptr [ %2368, %vector.memcheck1624 ], [ %2368, %vector.scevcheck1615 ], [ %2368, %.lr.ph155.preheader.i.i ], [ %ind.end1662, %middle.block1654 ]
  %.126.i348152.i.i.ph = phi ptr [ %.025.i344.i.i138, %vector.memcheck1624 ], [ %.025.i344.i.i138, %vector.scevcheck1615 ], [ %.025.i344.i.i138, %.lr.ph155.preheader.i.i ], [ %ind.end1664, %middle.block1654 ]
  %.128.i347151.i.i.ph = phi ptr [ %.027.i343.i.i137, %vector.memcheck1624 ], [ %.027.i343.i.i137, %vector.scevcheck1615 ], [ %.027.i343.i.i137, %.lr.ph155.preheader.i.i ], [ %ind.end1666, %middle.block1654 ]
  %.029.i346150.i.i.ph = phi ptr [ %.4225.lcssa.i.i108, %vector.memcheck1624 ], [ %.4225.lcssa.i.i108, %vector.scevcheck1615 ], [ %.4225.lcssa.i.i108, %.lr.ph155.preheader.i.i ], [ %ind.end1668, %middle.block1654 ]
  %xtraiter2611 = and i64 %.1.i350154.i.i.ph, 1
  %lcmp.mod2612.not = icmp eq i64 %xtraiter2611, 0
  br i1 %lcmp.mod2612.not, label %.lr.ph155.i.i.prol.loopexit, label %.lr.ph155.i.i.prol

.lr.ph155.i.i.prol:                               ; preds = %.lr.ph155.i.i.preheader
  %2401 = getelementptr inbounds i8, ptr %.128.i347151.i.i.ph, i64 8
  %2402 = getelementptr inbounds i8, ptr %.126.i348152.i.i.ph, i64 -8
  %2403 = getelementptr inbounds i8, ptr %.029.i346150.i.i.ph, i64 -8
  %2404 = getelementptr inbounds i8, ptr %.024.i349153.i.i.ph, i64 8
  %2405 = add nsw i64 %.1.i350154.i.i.ph, -1
  %2406 = load i64, ptr %2404, align 8
  %2407 = load i64, ptr %2403, align 8
  store i64 %2407, ptr %2404, align 8
  store i64 %2406, ptr %2403, align 8
  %2408 = load i64, ptr %2402, align 8
  %2409 = load i64, ptr %2401, align 8
  store i64 %2409, ptr %2402, align 8
  store i64 %2408, ptr %2401, align 8
  br label %.lr.ph155.i.i.prol.loopexit

.lr.ph155.i.i.prol.loopexit:                      ; preds = %.lr.ph155.i.i.prol, %.lr.ph155.i.i.preheader
  %.1.i350154.i.i.unr = phi i64 [ %.1.i350154.i.i.ph, %.lr.ph155.i.i.preheader ], [ %2405, %.lr.ph155.i.i.prol ]
  %.024.i349153.i.i.unr = phi ptr [ %.024.i349153.i.i.ph, %.lr.ph155.i.i.preheader ], [ %2404, %.lr.ph155.i.i.prol ]
  %.126.i348152.i.i.unr = phi ptr [ %.126.i348152.i.i.ph, %.lr.ph155.i.i.preheader ], [ %2402, %.lr.ph155.i.i.prol ]
  %.128.i347151.i.i.unr = phi ptr [ %.128.i347151.i.i.ph, %.lr.ph155.i.i.preheader ], [ %2401, %.lr.ph155.i.i.prol ]
  %.029.i346150.i.i.unr = phi ptr [ %.029.i346150.i.i.ph, %.lr.ph155.i.i.preheader ], [ %2403, %.lr.ph155.i.i.prol ]
  %2410 = icmp eq i64 %.1.i350154.i.i.ph, 1
  br i1 %2410, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph155.i.i.preheader2737

.lr.ph155.i.i.preheader2737:                      ; preds = %.lr.ph155.i.i.prol.loopexit
  br label %.lr.ph155.i.i

2411:                                             ; preds = %2367
  %2412 = load i64, ptr %2374, align 8
  %2413 = load i64, ptr %2376, align 8
  store i64 %2413, ptr %2374, align 8
  %2414 = getelementptr inbounds i8, ptr %2374, i64 -8
  store i64 %2412, ptr %2376, align 8
  %2415 = getelementptr inbounds i8, ptr %2376, i64 8
  %2416 = add nsw i64 %2372, -1
  br label %._crit_edge.i342.i.i

.lr.ph155.i.i:                                    ; preds = %.lr.ph155.i.i, %.lr.ph155.i.i.preheader2737
  %lsr.iv3073 = phi i64 [ -1, %.lr.ph155.i.i.preheader2737 ], [ %lsr.iv.next3074, %.lr.ph155.i.i ]
  %lsr.iv3067 = phi i64 [ 0, %.lr.ph155.i.i.preheader2737 ], [ %lsr.iv.next3068, %.lr.ph155.i.i ]
  %2417 = shl i64 %lsr.iv3073, 3
  %uglygep3077 = getelementptr i8, ptr %.126.i348152.i.i.unr, i64 %2417
  %uglygep3084 = getelementptr i8, ptr %.029.i346150.i.i.unr, i64 %2417
  %sunkaddr4047 = mul i64 %lsr.iv3067, 8
  %sunkaddr4048 = getelementptr i8, ptr %.024.i349153.i.i.unr, i64 %sunkaddr4047
  %sunkaddr4049 = getelementptr i8, ptr %sunkaddr4048, i64 8
  %2418 = load i64, ptr %sunkaddr4049, align 8
  %2419 = load i64, ptr %uglygep3084, align 8
  store i64 %2419, ptr %sunkaddr4049, align 8
  store i64 %2418, ptr %uglygep3084, align 8
  %2420 = load i64, ptr %uglygep3077, align 8
  %sunkaddr4050 = mul i64 %lsr.iv3067, 8
  %sunkaddr4051 = getelementptr i8, ptr %.128.i347151.i.i.unr, i64 %sunkaddr4050
  %sunkaddr4052 = getelementptr i8, ptr %sunkaddr4051, i64 8
  %2421 = load i64, ptr %sunkaddr4052, align 8
  store i64 %2421, ptr %uglygep3077, align 8
  store i64 %2420, ptr %sunkaddr4052, align 8
  %2422 = shl i64 %lsr.iv3073, 3
  %uglygep3075 = getelementptr i8, ptr %.126.i348152.i.i.unr, i64 %2422
  %uglygep3076 = getelementptr i8, ptr %uglygep3075, i64 -8
  %uglygep3082 = getelementptr i8, ptr %.029.i346150.i.i.unr, i64 %2422
  %uglygep3083 = getelementptr i8, ptr %uglygep3082, i64 -8
  %sunkaddr4053 = mul i64 %lsr.iv3067, 8
  %sunkaddr4054 = getelementptr i8, ptr %.024.i349153.i.i.unr, i64 %sunkaddr4053
  %sunkaddr4055 = getelementptr i8, ptr %sunkaddr4054, i64 16
  %2423 = load i64, ptr %sunkaddr4055, align 8
  %2424 = load i64, ptr %uglygep3083, align 8
  store i64 %2424, ptr %sunkaddr4055, align 8
  store i64 %2423, ptr %uglygep3083, align 8
  %2425 = load i64, ptr %uglygep3076, align 8
  %sunkaddr4056 = mul i64 %lsr.iv3067, 8
  %sunkaddr4057 = getelementptr i8, ptr %.128.i347151.i.i.unr, i64 %sunkaddr4056
  %sunkaddr4058 = getelementptr i8, ptr %sunkaddr4057, i64 16
  %2426 = load i64, ptr %sunkaddr4058, align 8
  store i64 %2426, ptr %uglygep3076, align 8
  store i64 %2425, ptr %sunkaddr4058, align 8
  %lsr.iv.next3068 = add i64 %lsr.iv3067, 2
  %lsr.iv.next3074 = add i64 %lsr.iv3073, -2
  %2427 = icmp eq i64 %.1.i350154.i.i.unr, %lsr.iv.next3068
  br i1 %2427, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph155.i.i, !llvm.loop !103

2428:                                             ; preds = %1975
  %2429 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %2430 = ptrtoint ptr %94 to i64
  %2431 = sub nuw i64 %2429, %2430
  %2432 = lshr i64 %2431, 4
  %2433 = shl nuw nsw i64 %2432, 3
  %2434 = getelementptr inbounds i8, ptr %94, i64 %2433
  %2435 = sub nsw i64 0, %2433
  %2436 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %2435
  %2437 = and i64 %2431, 16
  %2438 = icmp eq i64 %2437, 0
  br i1 %2438, label %2470, label %._crit_edge.i352.i.i

._crit_edge.i352.i.i:                             ; preds = %2470, %2428
  %.027.i353.i.i140 = phi ptr [ %2474, %2470 ], [ %2436, %2428 ]
  %.025.i354.i.i141 = phi ptr [ %2473, %2470 ], [ %2434, %2428 ]
  %.0.i355.i.i142 = phi i64 [ %2475, %2470 ], [ %2432, %2428 ]
  %2439 = load i64, ptr %94, align 8
  %2440 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %2440, ptr %94, align 8
  store i64 %2439, ptr %.4225.lcssa.i.i108, align 8
  %2441 = load i64, ptr %.025.i354.i.i141, align 8
  %2442 = load i64, ptr %.027.i353.i.i140, align 8
  store i64 %2442, ptr %.025.i354.i.i141, align 8
  store i64 %2441, ptr %.027.i353.i.i140, align 8
  %2443 = icmp ult i64 %.0.i355.i.i142, 2
  br i1 %2443, label %sort.flux_analyze__anon_13923.exit.i, label %.lr.ph149.preheader.i.i

.lr.ph149.preheader.i.i:                          ; preds = %._crit_edge.i352.i.i
  %2444 = lshr i64 %.0.i355.i.i142, 1
  %min.iters.check1585 = icmp ult i64 %.0.i355.i.i142, 80
  br i1 %min.iters.check1585, label %.lr.ph149.i.i.preheader, label %vector.scevcheck1544

vector.scevcheck1544:                             ; preds = %.lr.ph149.preheader.i.i
  %const3470 = bitcast i64 2305843009213693951 to i64
  %2445 = add nsw i64 %2444, -1
  %uglygep1545 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1547.neg = mul i64 %2445, -8
  %2446 = getelementptr i8, ptr %uglygep1545, i64 %mul.result1547.neg
  %2447 = icmp ugt ptr %2446, %uglygep1545
  %uglygep1549 = getelementptr i8, ptr %.025.i354.i.i141, i64 -8
  %mul.result1551.neg = mul i64 %2445, -8
  %mul.overflow1552 = icmp ugt i64 %2445, %const3470
  %2448 = getelementptr i8, ptr %uglygep1549, i64 %mul.result1551.neg
  %2449 = icmp ugt ptr %2448, %uglygep1549
  %2450 = or i1 %2449, %mul.overflow1552
  %2451 = or i1 %2447, %2450
  br i1 %2451, label %.lr.ph149.i.i.preheader, label %vector.memcheck1553

vector.memcheck1553:                              ; preds = %vector.scevcheck1544
  %uglygep1554 = getelementptr i8, ptr %94, i64 8
  %2452 = shl i64 %2444, 3
  %2453 = add i64 %2452, 8
  %uglygep1555 = getelementptr i8, ptr %94, i64 %2453
  %uglygep1556 = getelementptr i8, ptr %.027.i353.i.i140, i64 8
  %uglygep1557 = getelementptr i8, ptr %.027.i353.i.i140, i64 %2453
  %2454 = mul i64 %2444, -8
  %uglygep1558 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2454
  %uglygep1559 = getelementptr i8, ptr %.025.i354.i.i141, i64 %2454
  %bound01560 = icmp ult ptr %uglygep1554, %uglygep1557
  %bound11561 = icmp ult ptr %uglygep1556, %uglygep1555
  %found.conflict1562 = and i1 %bound01560, %bound11561
  %bound01563 = icmp ult ptr %uglygep1554, %.4225.lcssa.i.i108
  %bound11564 = icmp ult ptr %uglygep1558, %uglygep1555
  %found.conflict1565 = and i1 %bound01563, %bound11564
  %conflict.rdx1566 = or i1 %found.conflict1562, %found.conflict1565
  %bound01567 = icmp ult ptr %uglygep1554, %.025.i354.i.i141
  %bound11568 = icmp ult ptr %uglygep1559, %uglygep1555
  %found.conflict1569 = and i1 %bound01567, %bound11568
  %conflict.rdx1570 = or i1 %conflict.rdx1566, %found.conflict1569
  %bound01571 = icmp ult ptr %uglygep1556, %.4225.lcssa.i.i108
  %bound11572 = icmp ult ptr %uglygep1558, %uglygep1557
  %found.conflict1573 = and i1 %bound01571, %bound11572
  %conflict.rdx1574 = or i1 %conflict.rdx1570, %found.conflict1573
  %bound01575 = icmp ult ptr %uglygep1556, %.025.i354.i.i141
  %bound11576 = icmp ult ptr %uglygep1559, %uglygep1557
  %found.conflict1577 = and i1 %bound01575, %bound11576
  %conflict.rdx1578 = or i1 %conflict.rdx1574, %found.conflict1577
  %bound01579 = icmp ult ptr %uglygep1558, %.025.i354.i.i141
  %bound11580 = icmp ult ptr %uglygep1559, %.4225.lcssa.i.i108
  %found.conflict1581 = and i1 %bound01579, %bound11580
  %conflict.rdx1582 = or i1 %conflict.rdx1578, %found.conflict1581
  br i1 %conflict.rdx1582, label %.lr.ph149.i.i.preheader, label %vector.ph1586

vector.ph1586:                                    ; preds = %vector.memcheck1553
  %const3494 = bitcast i64 9223372036854775806 to i64
  %n.vec1588 = and i64 %2444, %const3494
  %ind.end1589 = and i64 %2444, 1
  %2455 = shl i64 %n.vec1588, 3
  %ind.end1591 = getelementptr i8, ptr %94, i64 %2455
  %2456 = mul i64 %n.vec1588, -8
  %ind.end1593 = getelementptr i8, ptr %.025.i354.i.i141, i64 %2456
  %2457 = shl i64 %n.vec1588, 3
  %ind.end1595 = getelementptr i8, ptr %.027.i353.i.i140, i64 %2457
  %2458 = mul i64 %n.vec1588, -8
  %ind.end1597 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2458
  br label %vector.body1600

vector.body1600:                                  ; preds = %vector.body1600, %vector.ph1586
  %lsr.iv3108 = phi i64 [ %lsr.iv.next3109, %vector.body1600 ], [ -16, %vector.ph1586 ]
  %index1601 = phi i64 [ 0, %vector.ph1586 ], [ %index.next1614, %vector.body1600 ]
  %sunkaddr4059 = mul i64 %index1601, 8
  %sunkaddr4060 = getelementptr i8, ptr %94, i64 %sunkaddr4059
  %sunkaddr4061 = getelementptr i8, ptr %sunkaddr4060, i64 8
  %wide.load1606 = load <2 x i64>, ptr %sunkaddr4061, align 8, !alias.scope !104, !noalias !107
  %uglygep3110 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %lsr.iv3108
  %wide.load1607 = load <2 x i64>, ptr %uglygep3110, align 8, !alias.scope !111, !noalias !112
  %reverse1608 = shufflevector <2 x i64> %wide.load1607, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1608, ptr %sunkaddr4061, align 8, !alias.scope !104, !noalias !107
  %reverse1609 = shufflevector <2 x i64> %wide.load1606, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1609, ptr %uglygep3110, align 8, !alias.scope !111, !noalias !112
  %uglygep3111 = getelementptr i8, ptr %.025.i354.i.i141, i64 %lsr.iv3108
  %wide.load1610 = load <2 x i64>, ptr %uglygep3111, align 8, !alias.scope !112
  %reverse1611 = shufflevector <2 x i64> %wide.load1610, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4062 = mul i64 %index1601, 8
  %sunkaddr4063 = getelementptr i8, ptr %.027.i353.i.i140, i64 %sunkaddr4062
  %sunkaddr4064 = getelementptr i8, ptr %sunkaddr4063, i64 8
  %wide.load1612 = load <2 x i64>, ptr %sunkaddr4064, align 8, !alias.scope !113, !noalias !114
  %reverse1613 = shufflevector <2 x i64> %wide.load1612, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1613, ptr %uglygep3111, align 8, !alias.scope !112
  store <2 x i64> %reverse1611, ptr %sunkaddr4064, align 8, !alias.scope !113, !noalias !114
  %index.next1614 = add nuw i64 %index1601, 2
  %lsr.iv.next3109 = add i64 %lsr.iv3108, -16
  %2459 = icmp eq i64 %n.vec1588, %index.next1614
  br i1 %2459, label %middle.block1583, label %vector.body1600, !llvm.loop !115

middle.block1583:                                 ; preds = %vector.body1600
  %cmp.n1599 = icmp eq i64 %2444, %n.vec1588
  br i1 %cmp.n1599, label %sort.flux_analyze__anon_13923.exit.i, label %.lr.ph149.i.i.preheader

.lr.ph149.i.i.preheader:                          ; preds = %middle.block1583, %vector.memcheck1553, %vector.scevcheck1544, %.lr.ph149.preheader.i.i
  %.1.i360148.i.i.ph = phi i64 [ %2444, %vector.memcheck1553 ], [ %2444, %vector.scevcheck1544 ], [ %2444, %.lr.ph149.preheader.i.i ], [ %ind.end1589, %middle.block1583 ]
  %.024.i359147.i.i.ph = phi ptr [ %94, %vector.memcheck1553 ], [ %94, %vector.scevcheck1544 ], [ %94, %.lr.ph149.preheader.i.i ], [ %ind.end1591, %middle.block1583 ]
  %.126.i358146.i.i.ph = phi ptr [ %.025.i354.i.i141, %vector.memcheck1553 ], [ %.025.i354.i.i141, %vector.scevcheck1544 ], [ %.025.i354.i.i141, %.lr.ph149.preheader.i.i ], [ %ind.end1593, %middle.block1583 ]
  %.128.i357145.i.i.ph = phi ptr [ %.027.i353.i.i140, %vector.memcheck1553 ], [ %.027.i353.i.i140, %vector.scevcheck1544 ], [ %.027.i353.i.i140, %.lr.ph149.preheader.i.i ], [ %ind.end1595, %middle.block1583 ]
  %.029.i356144.i.i.ph = phi ptr [ %.4225.lcssa.i.i108, %vector.memcheck1553 ], [ %.4225.lcssa.i.i108, %vector.scevcheck1544 ], [ %.4225.lcssa.i.i108, %.lr.ph149.preheader.i.i ], [ %ind.end1597, %middle.block1583 ]
  %xtraiter2609 = and i64 %.1.i360148.i.i.ph, 1
  %lcmp.mod2610.not = icmp eq i64 %xtraiter2609, 0
  br i1 %lcmp.mod2610.not, label %.lr.ph149.i.i.prol.loopexit, label %.lr.ph149.i.i.prol

.lr.ph149.i.i.prol:                               ; preds = %.lr.ph149.i.i.preheader
  %2460 = getelementptr inbounds i8, ptr %.128.i357145.i.i.ph, i64 8
  %2461 = getelementptr inbounds i8, ptr %.126.i358146.i.i.ph, i64 -8
  %2462 = getelementptr inbounds i8, ptr %.029.i356144.i.i.ph, i64 -8
  %2463 = getelementptr inbounds i8, ptr %.024.i359147.i.i.ph, i64 8
  %2464 = add nsw i64 %.1.i360148.i.i.ph, -1
  %2465 = load i64, ptr %2463, align 8
  %2466 = load i64, ptr %2462, align 8
  store i64 %2466, ptr %2463, align 8
  store i64 %2465, ptr %2462, align 8
  %2467 = load i64, ptr %2461, align 8
  %2468 = load i64, ptr %2460, align 8
  store i64 %2468, ptr %2461, align 8
  store i64 %2467, ptr %2460, align 8
  br label %.lr.ph149.i.i.prol.loopexit

.lr.ph149.i.i.prol.loopexit:                      ; preds = %.lr.ph149.i.i.prol, %.lr.ph149.i.i.preheader
  %.1.i360148.i.i.unr = phi i64 [ %.1.i360148.i.i.ph, %.lr.ph149.i.i.preheader ], [ %2464, %.lr.ph149.i.i.prol ]
  %.024.i359147.i.i.unr = phi ptr [ %.024.i359147.i.i.ph, %.lr.ph149.i.i.preheader ], [ %2463, %.lr.ph149.i.i.prol ]
  %.126.i358146.i.i.unr = phi ptr [ %.126.i358146.i.i.ph, %.lr.ph149.i.i.preheader ], [ %2461, %.lr.ph149.i.i.prol ]
  %.128.i357145.i.i.unr = phi ptr [ %.128.i357145.i.i.ph, %.lr.ph149.i.i.preheader ], [ %2460, %.lr.ph149.i.i.prol ]
  %.029.i356144.i.i.unr = phi ptr [ %.029.i356144.i.i.ph, %.lr.ph149.i.i.preheader ], [ %2462, %.lr.ph149.i.i.prol ]
  %2469 = icmp eq i64 %.1.i360148.i.i.ph, 1
  br i1 %2469, label %sort.flux_analyze__anon_13923.exit.i, label %.lr.ph149.i.i.preheader2739

.lr.ph149.i.i.preheader2739:                      ; preds = %.lr.ph149.i.i.prol.loopexit
  br label %.lr.ph149.i.i

2470:                                             ; preds = %2428
  %2471 = load i64, ptr %2434, align 8
  %2472 = load i64, ptr %2436, align 8
  store i64 %2472, ptr %2434, align 8
  %2473 = getelementptr inbounds i8, ptr %2434, i64 -8
  store i64 %2471, ptr %2436, align 8
  %2474 = getelementptr inbounds i8, ptr %2436, i64 8
  %2475 = add nsw i64 %2432, -1
  br label %._crit_edge.i352.i.i

.lr.ph149.i.i:                                    ; preds = %.lr.ph149.i.i, %.lr.ph149.i.i.preheader2739
  %lsr.iv3096 = phi i64 [ -1, %.lr.ph149.i.i.preheader2739 ], [ %lsr.iv.next3097, %.lr.ph149.i.i ]
  %lsr.iv3090 = phi i64 [ 0, %.lr.ph149.i.i.preheader2739 ], [ %lsr.iv.next3091, %.lr.ph149.i.i ]
  %2476 = shl i64 %lsr.iv3096, 3
  %uglygep3100 = getelementptr i8, ptr %.126.i358146.i.i.unr, i64 %2476
  %uglygep3107 = getelementptr i8, ptr %.029.i356144.i.i.unr, i64 %2476
  %sunkaddr4065 = mul i64 %lsr.iv3090, 8
  %sunkaddr4066 = getelementptr i8, ptr %.024.i359147.i.i.unr, i64 %sunkaddr4065
  %sunkaddr4067 = getelementptr i8, ptr %sunkaddr4066, i64 8
  %2477 = load i64, ptr %sunkaddr4067, align 8
  %2478 = load i64, ptr %uglygep3107, align 8
  store i64 %2478, ptr %sunkaddr4067, align 8
  store i64 %2477, ptr %uglygep3107, align 8
  %2479 = load i64, ptr %uglygep3100, align 8
  %sunkaddr4068 = mul i64 %lsr.iv3090, 8
  %sunkaddr4069 = getelementptr i8, ptr %.128.i357145.i.i.unr, i64 %sunkaddr4068
  %sunkaddr4070 = getelementptr i8, ptr %sunkaddr4069, i64 8
  %2480 = load i64, ptr %sunkaddr4070, align 8
  store i64 %2480, ptr %uglygep3100, align 8
  store i64 %2479, ptr %sunkaddr4070, align 8
  %2481 = shl i64 %lsr.iv3096, 3
  %uglygep3098 = getelementptr i8, ptr %.126.i358146.i.i.unr, i64 %2481
  %uglygep3099 = getelementptr i8, ptr %uglygep3098, i64 -8
  %uglygep3105 = getelementptr i8, ptr %.029.i356144.i.i.unr, i64 %2481
  %uglygep3106 = getelementptr i8, ptr %uglygep3105, i64 -8
  %sunkaddr4071 = mul i64 %lsr.iv3090, 8
  %sunkaddr4072 = getelementptr i8, ptr %.024.i359147.i.i.unr, i64 %sunkaddr4071
  %sunkaddr4073 = getelementptr i8, ptr %sunkaddr4072, i64 16
  %2482 = load i64, ptr %sunkaddr4073, align 8
  %2483 = load i64, ptr %uglygep3106, align 8
  store i64 %2483, ptr %sunkaddr4073, align 8
  store i64 %2482, ptr %uglygep3106, align 8
  %2484 = load i64, ptr %uglygep3099, align 8
  %sunkaddr4074 = mul i64 %lsr.iv3090, 8
  %sunkaddr4075 = getelementptr i8, ptr %.128.i357145.i.i.unr, i64 %sunkaddr4074
  %sunkaddr4076 = getelementptr i8, ptr %sunkaddr4075, i64 16
  %2485 = load i64, ptr %sunkaddr4076, align 8
  store i64 %2485, ptr %uglygep3099, align 8
  store i64 %2484, ptr %sunkaddr4076, align 8
  %lsr.iv.next3091 = add i64 %lsr.iv3090, 2
  %lsr.iv.next3097 = add i64 %lsr.iv3096, -2
  %2486 = icmp eq i64 %.1.i360148.i.i.unr, %lsr.iv.next3091
  br i1 %2486, label %sort.flux_analyze__anon_13923.exit.i, label %.lr.ph149.i.i, !llvm.loop !116

sort.quad_reversal.exit371.i.i:                   ; preds = %.lr.ph197.i.i, %.lr.ph197.i.i.prol.loopexit, %middle.block2151, %._crit_edge.i362.i.i, %sort.quad_reversal.exit301.i.i129
  %.5235.i.i143 = phi i64 [ %.2232.lcssa.i.i107, %sort.quad_reversal.exit301.i.i129 ], [ 0, %._crit_edge.i362.i.i ], [ 0, %middle.block2151 ], [ 0, %.lr.ph197.i.i.prol.loopexit ], [ 0, %.lr.ph197.i.i ]
  %2487 = icmp eq i64 %1940, 1
  %2488 = icmp ne i64 %.5241.i.i128, 0
  %2489 = and i1 %2487, %2488
  br i1 %2489, label %2552, label %sort.quad_reversal.exit381.i.i

2490:                                             ; preds = %sort.quad_reversal.exit301.i.i129
  %2491 = ptrtoint ptr %.3.lcssa.i.i111 to i64
  %2492 = ptrtoint ptr %94 to i64
  %2493 = sub nuw i64 %2491, %2492
  %2494 = lshr i64 %2493, 4
  %2495 = shl nuw nsw i64 %2494, 3
  %2496 = getelementptr inbounds i8, ptr %94, i64 %2495
  %2497 = sub nsw i64 0, %2495
  %2498 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 %2497
  %2499 = and i64 %2493, 16
  %2500 = icmp eq i64 %2499, 0
  br i1 %2500, label %2532, label %._crit_edge.i362.i.i

._crit_edge.i362.i.i:                             ; preds = %2532, %2490
  %.027.i363.i.i = phi ptr [ %2536, %2532 ], [ %2498, %2490 ]
  %.025.i364.i.i = phi ptr [ %2535, %2532 ], [ %2496, %2490 ]
  %.0.i365.i.i = phi i64 [ %2537, %2532 ], [ %2494, %2490 ]
  %2501 = load i64, ptr %94, align 8
  %2502 = load i64, ptr %.3.lcssa.i.i111, align 8
  store i64 %2502, ptr %94, align 8
  store i64 %2501, ptr %.3.lcssa.i.i111, align 8
  %2503 = load i64, ptr %.025.i364.i.i, align 8
  %2504 = load i64, ptr %.027.i363.i.i, align 8
  store i64 %2504, ptr %.025.i364.i.i, align 8
  store i64 %2503, ptr %.027.i363.i.i, align 8
  %2505 = icmp ult i64 %.0.i365.i.i, 2
  br i1 %2505, label %sort.quad_reversal.exit371.i.i, label %.lr.ph197.preheader.i.i

.lr.ph197.preheader.i.i:                          ; preds = %._crit_edge.i362.i.i
  %2506 = lshr i64 %.0.i365.i.i, 1
  %min.iters.check2153 = icmp ult i64 %.0.i365.i.i, 80
  br i1 %min.iters.check2153, label %.lr.ph197.i.i.preheader, label %vector.scevcheck2112

vector.scevcheck2112:                             ; preds = %.lr.ph197.preheader.i.i
  %const3481 = bitcast i64 2305843009213693951 to i64
  %2507 = add nsw i64 %2506, -1
  %uglygep2113 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 -8
  %mul.result2115.neg = mul i64 %2507, -8
  %2508 = getelementptr i8, ptr %uglygep2113, i64 %mul.result2115.neg
  %2509 = icmp ugt ptr %2508, %uglygep2113
  %uglygep2117 = getelementptr i8, ptr %.025.i364.i.i, i64 -8
  %mul.result2119.neg = mul i64 %2507, -8
  %mul.overflow2120 = icmp ugt i64 %2507, %const3481
  %2510 = getelementptr i8, ptr %uglygep2117, i64 %mul.result2119.neg
  %2511 = icmp ugt ptr %2510, %uglygep2117
  %2512 = or i1 %2511, %mul.overflow2120
  %2513 = or i1 %2509, %2512
  br i1 %2513, label %.lr.ph197.i.i.preheader, label %vector.memcheck2121

vector.memcheck2121:                              ; preds = %vector.scevcheck2112
  %uglygep2122 = getelementptr i8, ptr %94, i64 8
  %2514 = shl i64 %2506, 3
  %2515 = add i64 %2514, 8
  %uglygep2123 = getelementptr i8, ptr %94, i64 %2515
  %uglygep2124 = getelementptr i8, ptr %.027.i363.i.i, i64 8
  %uglygep2125 = getelementptr i8, ptr %.027.i363.i.i, i64 %2515
  %2516 = mul i64 %2506, -8
  %uglygep2126 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2516
  %uglygep2127 = getelementptr i8, ptr %.025.i364.i.i, i64 %2516
  %bound02128 = icmp ult ptr %uglygep2122, %uglygep2125
  %bound12129 = icmp ult ptr %uglygep2124, %uglygep2123
  %found.conflict2130 = and i1 %bound02128, %bound12129
  %bound02131 = icmp ult ptr %uglygep2122, %.3.lcssa.i.i111
  %bound12132 = icmp ult ptr %uglygep2126, %uglygep2123
  %found.conflict2133 = and i1 %bound02131, %bound12132
  %conflict.rdx2134 = or i1 %found.conflict2130, %found.conflict2133
  %bound02135 = icmp ult ptr %uglygep2122, %.025.i364.i.i
  %bound12136 = icmp ult ptr %uglygep2127, %uglygep2123
  %found.conflict2137 = and i1 %bound02135, %bound12136
  %conflict.rdx2138 = or i1 %conflict.rdx2134, %found.conflict2137
  %bound02139 = icmp ult ptr %uglygep2124, %.3.lcssa.i.i111
  %bound12140 = icmp ult ptr %uglygep2126, %uglygep2125
  %found.conflict2141 = and i1 %bound02139, %bound12140
  %conflict.rdx2142 = or i1 %conflict.rdx2138, %found.conflict2141
  %bound02143 = icmp ult ptr %uglygep2124, %.025.i364.i.i
  %bound12144 = icmp ult ptr %uglygep2127, %uglygep2125
  %found.conflict2145 = and i1 %bound02143, %bound12144
  %conflict.rdx2146 = or i1 %conflict.rdx2142, %found.conflict2145
  %bound02147 = icmp ult ptr %uglygep2126, %.025.i364.i.i
  %bound12148 = icmp ult ptr %uglygep2127, %.3.lcssa.i.i111
  %found.conflict2149 = and i1 %bound02147, %bound12148
  %conflict.rdx2150 = or i1 %conflict.rdx2146, %found.conflict2149
  br i1 %conflict.rdx2150, label %.lr.ph197.i.i.preheader, label %vector.ph2154

vector.ph2154:                                    ; preds = %vector.memcheck2121
  %const3505 = bitcast i64 9223372036854775806 to i64
  %n.vec2156 = and i64 %2506, %const3505
  %ind.end2157 = and i64 %2506, 1
  %2517 = shl i64 %n.vec2156, 3
  %ind.end2159 = getelementptr i8, ptr %94, i64 %2517
  %2518 = mul i64 %n.vec2156, -8
  %ind.end2161 = getelementptr i8, ptr %.025.i364.i.i, i64 %2518
  %2519 = shl i64 %n.vec2156, 3
  %ind.end2163 = getelementptr i8, ptr %.027.i363.i.i, i64 %2519
  %2520 = mul i64 %n.vec2156, -8
  %ind.end2165 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2520
  br label %vector.body2168

vector.body2168:                                  ; preds = %vector.body2168, %vector.ph2154
  %lsr.iv2924 = phi i64 [ %lsr.iv.next2925, %vector.body2168 ], [ -16, %vector.ph2154 ]
  %index2169 = phi i64 [ 0, %vector.ph2154 ], [ %index.next2182, %vector.body2168 ]
  %sunkaddr4077 = mul i64 %index2169, 8
  %sunkaddr4078 = getelementptr i8, ptr %94, i64 %sunkaddr4077
  %sunkaddr4079 = getelementptr i8, ptr %sunkaddr4078, i64 8
  %wide.load2174 = load <2 x i64>, ptr %sunkaddr4079, align 8, !alias.scope !117, !noalias !120
  %uglygep2926 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %lsr.iv2924
  %wide.load2175 = load <2 x i64>, ptr %uglygep2926, align 8, !alias.scope !124, !noalias !125
  %reverse2176 = shufflevector <2 x i64> %wide.load2175, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2176, ptr %sunkaddr4079, align 8, !alias.scope !117, !noalias !120
  %reverse2177 = shufflevector <2 x i64> %wide.load2174, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2177, ptr %uglygep2926, align 8, !alias.scope !124, !noalias !125
  %uglygep2927 = getelementptr i8, ptr %.025.i364.i.i, i64 %lsr.iv2924
  %wide.load2178 = load <2 x i64>, ptr %uglygep2927, align 8, !alias.scope !125
  %reverse2179 = shufflevector <2 x i64> %wide.load2178, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4080 = mul i64 %index2169, 8
  %sunkaddr4081 = getelementptr i8, ptr %.027.i363.i.i, i64 %sunkaddr4080
  %sunkaddr4082 = getelementptr i8, ptr %sunkaddr4081, i64 8
  %wide.load2180 = load <2 x i64>, ptr %sunkaddr4082, align 8, !alias.scope !126, !noalias !127
  %reverse2181 = shufflevector <2 x i64> %wide.load2180, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2181, ptr %uglygep2927, align 8, !alias.scope !125
  store <2 x i64> %reverse2179, ptr %sunkaddr4082, align 8, !alias.scope !126, !noalias !127
  %index.next2182 = add nuw i64 %index2169, 2
  %lsr.iv.next2925 = add i64 %lsr.iv2924, -16
  %2521 = icmp eq i64 %n.vec2156, %index.next2182
  br i1 %2521, label %middle.block2151, label %vector.body2168, !llvm.loop !128

middle.block2151:                                 ; preds = %vector.body2168
  %cmp.n2167 = icmp eq i64 %2506, %n.vec2156
  br i1 %cmp.n2167, label %sort.quad_reversal.exit371.i.i, label %.lr.ph197.i.i.preheader

.lr.ph197.i.i.preheader:                          ; preds = %middle.block2151, %vector.memcheck2121, %vector.scevcheck2112, %.lr.ph197.preheader.i.i
  %.1.i370196.i.i.ph = phi i64 [ %2506, %vector.memcheck2121 ], [ %2506, %vector.scevcheck2112 ], [ %2506, %.lr.ph197.preheader.i.i ], [ %ind.end2157, %middle.block2151 ]
  %.024.i369195.i.i.ph = phi ptr [ %94, %vector.memcheck2121 ], [ %94, %vector.scevcheck2112 ], [ %94, %.lr.ph197.preheader.i.i ], [ %ind.end2159, %middle.block2151 ]
  %.126.i368194.i.i.ph = phi ptr [ %.025.i364.i.i, %vector.memcheck2121 ], [ %.025.i364.i.i, %vector.scevcheck2112 ], [ %.025.i364.i.i, %.lr.ph197.preheader.i.i ], [ %ind.end2161, %middle.block2151 ]
  %.128.i367193.i.i.ph = phi ptr [ %.027.i363.i.i, %vector.memcheck2121 ], [ %.027.i363.i.i, %vector.scevcheck2112 ], [ %.027.i363.i.i, %.lr.ph197.preheader.i.i ], [ %ind.end2163, %middle.block2151 ]
  %.029.i366192.i.i.ph = phi ptr [ %.3.lcssa.i.i111, %vector.memcheck2121 ], [ %.3.lcssa.i.i111, %vector.scevcheck2112 ], [ %.3.lcssa.i.i111, %.lr.ph197.preheader.i.i ], [ %ind.end2165, %middle.block2151 ]
  %xtraiter2625 = and i64 %.1.i370196.i.i.ph, 1
  %lcmp.mod2626.not = icmp eq i64 %xtraiter2625, 0
  br i1 %lcmp.mod2626.not, label %.lr.ph197.i.i.prol.loopexit, label %.lr.ph197.i.i.prol

.lr.ph197.i.i.prol:                               ; preds = %.lr.ph197.i.i.preheader
  %2522 = getelementptr inbounds i8, ptr %.128.i367193.i.i.ph, i64 8
  %2523 = getelementptr inbounds i8, ptr %.126.i368194.i.i.ph, i64 -8
  %2524 = getelementptr inbounds i8, ptr %.029.i366192.i.i.ph, i64 -8
  %2525 = getelementptr inbounds i8, ptr %.024.i369195.i.i.ph, i64 8
  %2526 = add nsw i64 %.1.i370196.i.i.ph, -1
  %2527 = load i64, ptr %2525, align 8
  %2528 = load i64, ptr %2524, align 8
  store i64 %2528, ptr %2525, align 8
  store i64 %2527, ptr %2524, align 8
  %2529 = load i64, ptr %2523, align 8
  %2530 = load i64, ptr %2522, align 8
  store i64 %2530, ptr %2523, align 8
  store i64 %2529, ptr %2522, align 8
  br label %.lr.ph197.i.i.prol.loopexit

.lr.ph197.i.i.prol.loopexit:                      ; preds = %.lr.ph197.i.i.prol, %.lr.ph197.i.i.preheader
  %.1.i370196.i.i.unr = phi i64 [ %.1.i370196.i.i.ph, %.lr.ph197.i.i.preheader ], [ %2526, %.lr.ph197.i.i.prol ]
  %.024.i369195.i.i.unr = phi ptr [ %.024.i369195.i.i.ph, %.lr.ph197.i.i.preheader ], [ %2525, %.lr.ph197.i.i.prol ]
  %.126.i368194.i.i.unr = phi ptr [ %.126.i368194.i.i.ph, %.lr.ph197.i.i.preheader ], [ %2523, %.lr.ph197.i.i.prol ]
  %.128.i367193.i.i.unr = phi ptr [ %.128.i367193.i.i.ph, %.lr.ph197.i.i.preheader ], [ %2522, %.lr.ph197.i.i.prol ]
  %.029.i366192.i.i.unr = phi ptr [ %.029.i366192.i.i.ph, %.lr.ph197.i.i.preheader ], [ %2524, %.lr.ph197.i.i.prol ]
  %2531 = icmp eq i64 %.1.i370196.i.i.ph, 1
  br i1 %2531, label %sort.quad_reversal.exit371.i.i, label %.lr.ph197.i.i.preheader2726

.lr.ph197.i.i.preheader2726:                      ; preds = %.lr.ph197.i.i.prol.loopexit
  br label %.lr.ph197.i.i

2532:                                             ; preds = %2490
  %2533 = load i64, ptr %2496, align 8
  %2534 = load i64, ptr %2498, align 8
  store i64 %2534, ptr %2496, align 8
  %2535 = getelementptr inbounds i8, ptr %2496, i64 -8
  store i64 %2533, ptr %2498, align 8
  %2536 = getelementptr inbounds i8, ptr %2498, i64 8
  %2537 = add nsw i64 %2494, -1
  br label %._crit_edge.i362.i.i

.lr.ph197.i.i:                                    ; preds = %.lr.ph197.i.i, %.lr.ph197.i.i.preheader2726
  %lsr.iv2912 = phi i64 [ -1, %.lr.ph197.i.i.preheader2726 ], [ %lsr.iv.next2913, %.lr.ph197.i.i ]
  %lsr.iv2906 = phi i64 [ 0, %.lr.ph197.i.i.preheader2726 ], [ %lsr.iv.next2907, %.lr.ph197.i.i ]
  %2538 = shl i64 %lsr.iv2912, 3
  %uglygep2916 = getelementptr i8, ptr %.126.i368194.i.i.unr, i64 %2538
  %uglygep2923 = getelementptr i8, ptr %.029.i366192.i.i.unr, i64 %2538
  %sunkaddr4083 = mul i64 %lsr.iv2906, 8
  %sunkaddr4084 = getelementptr i8, ptr %.024.i369195.i.i.unr, i64 %sunkaddr4083
  %sunkaddr4085 = getelementptr i8, ptr %sunkaddr4084, i64 8
  %2539 = load i64, ptr %sunkaddr4085, align 8
  %2540 = load i64, ptr %uglygep2923, align 8
  store i64 %2540, ptr %sunkaddr4085, align 8
  store i64 %2539, ptr %uglygep2923, align 8
  %2541 = load i64, ptr %uglygep2916, align 8
  %sunkaddr4086 = mul i64 %lsr.iv2906, 8
  %sunkaddr4087 = getelementptr i8, ptr %.128.i367193.i.i.unr, i64 %sunkaddr4086
  %sunkaddr4088 = getelementptr i8, ptr %sunkaddr4087, i64 8
  %2542 = load i64, ptr %sunkaddr4088, align 8
  store i64 %2542, ptr %uglygep2916, align 8
  store i64 %2541, ptr %sunkaddr4088, align 8
  %2543 = shl i64 %lsr.iv2912, 3
  %uglygep2914 = getelementptr i8, ptr %.126.i368194.i.i.unr, i64 %2543
  %uglygep2915 = getelementptr i8, ptr %uglygep2914, i64 -8
  %uglygep2921 = getelementptr i8, ptr %.029.i366192.i.i.unr, i64 %2543
  %uglygep2922 = getelementptr i8, ptr %uglygep2921, i64 -8
  %sunkaddr4089 = mul i64 %lsr.iv2906, 8
  %sunkaddr4090 = getelementptr i8, ptr %.024.i369195.i.i.unr, i64 %sunkaddr4089
  %sunkaddr4091 = getelementptr i8, ptr %sunkaddr4090, i64 16
  %2544 = load i64, ptr %sunkaddr4091, align 8
  %2545 = load i64, ptr %uglygep2922, align 8
  store i64 %2545, ptr %sunkaddr4091, align 8
  store i64 %2544, ptr %uglygep2922, align 8
  %2546 = load i64, ptr %uglygep2915, align 8
  %sunkaddr4092 = mul i64 %lsr.iv2906, 8
  %sunkaddr4093 = getelementptr i8, ptr %.128.i367193.i.i.unr, i64 %sunkaddr4092
  %sunkaddr4094 = getelementptr i8, ptr %sunkaddr4093, i64 16
  %2547 = load i64, ptr %sunkaddr4094, align 8
  store i64 %2547, ptr %uglygep2915, align 8
  store i64 %2546, ptr %sunkaddr4094, align 8
  %lsr.iv.next2907 = add i64 %lsr.iv2906, 2
  %lsr.iv.next2913 = add i64 %lsr.iv2912, -2
  %2548 = icmp eq i64 %.1.i370196.i.i.unr, %lsr.iv.next2907
  br i1 %2548, label %sort.quad_reversal.exit371.i.i, label %.lr.ph197.i.i, !llvm.loop !129

sort.quad_reversal.exit381.i.i:                   ; preds = %.lr.ph203.i.i, %.lr.ph203.i.i.prol.loopexit, %middle.block2222, %._crit_edge.i372.i.i, %sort.quad_reversal.exit371.i.i, %.lr.ph191.i.i, %.lr.ph191.i.i.prol.loopexit, %middle.block2080, %._crit_edge.i.i.i133
  %.523573.i.i = phi i64 [ %.5235.i.i143, %sort.quad_reversal.exit371.i.i ], [ %.5235.i.i143, %._crit_edge.i372.i.i ], [ 0, %._crit_edge.i.i.i133 ], [ %.5235.i.i143, %middle.block2222 ], [ 0, %middle.block2080 ], [ %.5235.i.i143, %.lr.ph203.i.i.prol.loopexit ], [ 0, %.lr.ph191.i.i.prol.loopexit ], [ %.5235.i.i143, %.lr.ph203.i.i ], [ 0, %.lr.ph191.i.i ]
  %.52556372.i.i = phi i64 [ %.5255.i.i126, %sort.quad_reversal.exit371.i.i ], [ %.5255.i.i126, %._crit_edge.i372.i.i ], [ %.3253.lcssa.i.i104, %._crit_edge.i.i.i133 ], [ %.5255.i.i126, %middle.block2222 ], [ %.3253.lcssa.i.i104, %middle.block2080 ], [ %.5255.i.i126, %.lr.ph203.i.i.prol.loopexit ], [ %.3253.lcssa.i.i104, %.lr.ph191.i.i.prol.loopexit ], [ %.5255.i.i126, %.lr.ph203.i.i ], [ %.3253.lcssa.i.i104, %.lr.ph191.i.i ]
  %.52486471.i.i = phi i64 [ %.5248.i.i127, %sort.quad_reversal.exit371.i.i ], [ %.5248.i.i127, %._crit_edge.i372.i.i ], [ %.3246.lcssa.i.i105, %._crit_edge.i.i.i133 ], [ %.5248.i.i127, %middle.block2222 ], [ %.3246.lcssa.i.i105, %middle.block2080 ], [ %.5248.i.i127, %.lr.ph203.i.i.prol.loopexit ], [ %.3246.lcssa.i.i105, %.lr.ph191.i.i.prol.loopexit ], [ %.5248.i.i127, %.lr.ph203.i.i ], [ %.3246.lcssa.i.i105, %.lr.ph191.i.i ]
  %.6242.i.i144 = phi i64 [ %.5241.i.i128, %sort.quad_reversal.exit371.i.i ], [ 0, %._crit_edge.i372.i.i ], [ 0, %._crit_edge.i.i.i133 ], [ 0, %middle.block2222 ], [ 0, %middle.block2080 ], [ 0, %.lr.ph203.i.i.prol.loopexit ], [ 0, %.lr.ph191.i.i.prol.loopexit ], [ 0, %.lr.ph203.i.i ], [ 0, %.lr.ph191.i.i ]
  %2549 = icmp eq i64 %1942, 1
  %2550 = icmp ne i64 %.52486471.i.i, 0
  %2551 = and i1 %2549, %2550
  br i1 %2551, label %2615, label %sort.quad_reversal.exit391.i.i

2552:                                             ; preds = %sort.quad_reversal.exit371.i.i
  %2553 = ptrtoint ptr %.4.lcssa.i.i110 to i64
  %2554 = ptrtoint ptr %1980 to i64
  %2555 = sub nuw i64 %2553, %2554
  %2556 = lshr i64 %2555, 4
  %2557 = shl nuw nsw i64 %2556, 3
  %2558 = getelementptr inbounds i8, ptr %1980, i64 %2557
  %2559 = sub nsw i64 0, %2557
  %2560 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 %2559
  %2561 = and i64 %2555, 16
  %2562 = icmp eq i64 %2561, 0
  br i1 %2562, label %2595, label %._crit_edge.i372.i.i

._crit_edge.i372.i.i:                             ; preds = %2595, %2552
  %.027.i373.i.i = phi ptr [ %2599, %2595 ], [ %2560, %2552 ]
  %.025.i374.i.i = phi ptr [ %2598, %2595 ], [ %2558, %2552 ]
  %.0.i375.i.i = phi i64 [ %2600, %2595 ], [ %2556, %2552 ]
  %2563 = load i64, ptr %1980, align 8
  %2564 = load i64, ptr %.4.lcssa.i.i110, align 8
  store i64 %2564, ptr %1980, align 8
  store i64 %2563, ptr %.4.lcssa.i.i110, align 8
  %2565 = load i64, ptr %.025.i374.i.i, align 8
  %2566 = load i64, ptr %.027.i373.i.i, align 8
  store i64 %2566, ptr %.025.i374.i.i, align 8
  store i64 %2565, ptr %.027.i373.i.i, align 8
  %2567 = icmp ult i64 %.0.i375.i.i, 2
  br i1 %2567, label %sort.quad_reversal.exit381.i.i, label %.lr.ph203.preheader.i.i

.lr.ph203.preheader.i.i:                          ; preds = %._crit_edge.i372.i.i
  %2568 = lshr i64 %.0.i375.i.i, 1
  %min.iters.check2224 = icmp ult i64 %.0.i375.i.i, 80
  br i1 %min.iters.check2224, label %.lr.ph203.i.i.preheader, label %vector.scevcheck2183

vector.scevcheck2183:                             ; preds = %.lr.ph203.preheader.i.i
  %const3480 = bitcast i64 2305843009213693951 to i64
  %2569 = add nsw i64 %2568, -1
  %uglygep2184 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -8
  %mul.result2186.neg = mul i64 %2569, -8
  %2570 = getelementptr i8, ptr %uglygep2184, i64 %mul.result2186.neg
  %2571 = icmp ugt ptr %2570, %uglygep2184
  %uglygep2188 = getelementptr i8, ptr %.025.i374.i.i, i64 -8
  %mul.result2190.neg = mul i64 %2569, -8
  %mul.overflow2191 = icmp ugt i64 %2569, %const3480
  %2572 = getelementptr i8, ptr %uglygep2188, i64 %mul.result2190.neg
  %2573 = icmp ugt ptr %2572, %uglygep2188
  %2574 = or i1 %2573, %mul.overflow2191
  %2575 = or i1 %2571, %2574
  br i1 %2575, label %.lr.ph203.i.i.preheader, label %vector.memcheck2192

vector.memcheck2192:                              ; preds = %vector.scevcheck2183
  %uglygep2193 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 16
  %2576 = shl i64 %2568, 3
  %2577 = add i64 %2576, 16
  %uglygep2194 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2577
  %uglygep2195 = getelementptr i8, ptr %.027.i373.i.i, i64 8
  %2578 = add i64 %2576, 8
  %uglygep2196 = getelementptr i8, ptr %.027.i373.i.i, i64 %2578
  %2579 = mul i64 %2568, -8
  %uglygep2197 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2579
  %uglygep2198 = getelementptr i8, ptr %.025.i374.i.i, i64 %2579
  %bound02199 = icmp ult ptr %uglygep2193, %uglygep2196
  %bound12200 = icmp ult ptr %uglygep2195, %uglygep2194
  %found.conflict2201 = and i1 %bound02199, %bound12200
  %bound02202 = icmp ult ptr %uglygep2193, %.4.lcssa.i.i110
  %bound12203 = icmp ult ptr %uglygep2197, %uglygep2194
  %found.conflict2204 = and i1 %bound02202, %bound12203
  %conflict.rdx2205 = or i1 %found.conflict2201, %found.conflict2204
  %bound02206 = icmp ult ptr %uglygep2193, %.025.i374.i.i
  %bound12207 = icmp ult ptr %uglygep2198, %uglygep2194
  %found.conflict2208 = and i1 %bound02206, %bound12207
  %conflict.rdx2209 = or i1 %conflict.rdx2205, %found.conflict2208
  %bound02210 = icmp ult ptr %uglygep2195, %.4.lcssa.i.i110
  %bound12211 = icmp ult ptr %uglygep2197, %uglygep2196
  %found.conflict2212 = and i1 %bound02210, %bound12211
  %conflict.rdx2213 = or i1 %conflict.rdx2209, %found.conflict2212
  %bound02214 = icmp ult ptr %uglygep2195, %.025.i374.i.i
  %bound12215 = icmp ult ptr %uglygep2198, %uglygep2196
  %found.conflict2216 = and i1 %bound02214, %bound12215
  %conflict.rdx2217 = or i1 %conflict.rdx2213, %found.conflict2216
  %bound02218 = icmp ult ptr %uglygep2197, %.025.i374.i.i
  %bound12219 = icmp ult ptr %uglygep2198, %.4.lcssa.i.i110
  %found.conflict2220 = and i1 %bound02218, %bound12219
  %conflict.rdx2221 = or i1 %conflict.rdx2217, %found.conflict2220
  br i1 %conflict.rdx2221, label %.lr.ph203.i.i.preheader, label %vector.ph2225

vector.ph2225:                                    ; preds = %vector.memcheck2192
  %const3504 = bitcast i64 9223372036854775806 to i64
  %n.vec2227 = and i64 %2568, %const3504
  %ind.end2228 = and i64 %2568, 1
  %2580 = shl i64 %n.vec2227, 3
  %ind.end2230 = getelementptr i8, ptr %1980, i64 %2580
  %2581 = mul i64 %n.vec2227, -8
  %ind.end2232 = getelementptr i8, ptr %.025.i374.i.i, i64 %2581
  %2582 = shl i64 %n.vec2227, 3
  %ind.end2234 = getelementptr i8, ptr %.027.i373.i.i, i64 %2582
  %2583 = mul i64 %n.vec2227, -8
  %ind.end2236 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2583
  br label %vector.body2239

vector.body2239:                                  ; preds = %vector.body2239, %vector.ph2225
  %lsr.iv2901 = phi i64 [ %lsr.iv.next2902, %vector.body2239 ], [ -16, %vector.ph2225 ]
  %index2240 = phi i64 [ 0, %vector.ph2225 ], [ %index.next2253, %vector.body2239 ]
  %sunkaddr4095 = mul i64 %index2240, 8
  %sunkaddr4096 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %sunkaddr4095
  %sunkaddr4097 = getelementptr i8, ptr %sunkaddr4096, i64 16
  %wide.load2245 = load <2 x i64>, ptr %sunkaddr4097, align 8, !alias.scope !130, !noalias !133
  %uglygep2903 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %lsr.iv2901
  %wide.load2246 = load <2 x i64>, ptr %uglygep2903, align 8, !alias.scope !137, !noalias !138
  %reverse2247 = shufflevector <2 x i64> %wide.load2246, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2247, ptr %sunkaddr4097, align 8, !alias.scope !130, !noalias !133
  %reverse2248 = shufflevector <2 x i64> %wide.load2245, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2248, ptr %uglygep2903, align 8, !alias.scope !137, !noalias !138
  %uglygep2904 = getelementptr i8, ptr %.025.i374.i.i, i64 %lsr.iv2901
  %wide.load2249 = load <2 x i64>, ptr %uglygep2904, align 8, !alias.scope !138
  %reverse2250 = shufflevector <2 x i64> %wide.load2249, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4098 = mul i64 %index2240, 8
  %sunkaddr4099 = getelementptr i8, ptr %.027.i373.i.i, i64 %sunkaddr4098
  %sunkaddr4100 = getelementptr i8, ptr %sunkaddr4099, i64 8
  %wide.load2251 = load <2 x i64>, ptr %sunkaddr4100, align 8, !alias.scope !139, !noalias !140
  %reverse2252 = shufflevector <2 x i64> %wide.load2251, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2252, ptr %uglygep2904, align 8, !alias.scope !138
  store <2 x i64> %reverse2250, ptr %sunkaddr4100, align 8, !alias.scope !139, !noalias !140
  %index.next2253 = add nuw i64 %index2240, 2
  %lsr.iv.next2902 = add i64 %lsr.iv2901, -16
  %2584 = icmp eq i64 %n.vec2227, %index.next2253
  br i1 %2584, label %middle.block2222, label %vector.body2239, !llvm.loop !141

middle.block2222:                                 ; preds = %vector.body2239
  %cmp.n2238 = icmp eq i64 %2568, %n.vec2227
  br i1 %cmp.n2238, label %sort.quad_reversal.exit381.i.i, label %.lr.ph203.i.i.preheader

.lr.ph203.i.i.preheader:                          ; preds = %middle.block2222, %vector.memcheck2192, %vector.scevcheck2183, %.lr.ph203.preheader.i.i
  %.1.i380202.i.i.ph = phi i64 [ %2568, %vector.memcheck2192 ], [ %2568, %vector.scevcheck2183 ], [ %2568, %.lr.ph203.preheader.i.i ], [ %ind.end2228, %middle.block2222 ]
  %.024.i379201.i.i.ph = phi ptr [ %1980, %vector.memcheck2192 ], [ %1980, %vector.scevcheck2183 ], [ %1980, %.lr.ph203.preheader.i.i ], [ %ind.end2230, %middle.block2222 ]
  %.126.i378200.i.i.ph = phi ptr [ %.025.i374.i.i, %vector.memcheck2192 ], [ %.025.i374.i.i, %vector.scevcheck2183 ], [ %.025.i374.i.i, %.lr.ph203.preheader.i.i ], [ %ind.end2232, %middle.block2222 ]
  %.128.i377199.i.i.ph = phi ptr [ %.027.i373.i.i, %vector.memcheck2192 ], [ %.027.i373.i.i, %vector.scevcheck2183 ], [ %.027.i373.i.i, %.lr.ph203.preheader.i.i ], [ %ind.end2234, %middle.block2222 ]
  %.029.i376198.i.i.ph = phi ptr [ %.4.lcssa.i.i110, %vector.memcheck2192 ], [ %.4.lcssa.i.i110, %vector.scevcheck2183 ], [ %.4.lcssa.i.i110, %.lr.ph203.preheader.i.i ], [ %ind.end2236, %middle.block2222 ]
  %xtraiter2627 = and i64 %.1.i380202.i.i.ph, 1
  %lcmp.mod2628.not = icmp eq i64 %xtraiter2627, 0
  br i1 %lcmp.mod2628.not, label %.lr.ph203.i.i.prol.loopexit, label %.lr.ph203.i.i.prol

.lr.ph203.i.i.prol:                               ; preds = %.lr.ph203.i.i.preheader
  %2585 = getelementptr inbounds i8, ptr %.128.i377199.i.i.ph, i64 8
  %2586 = getelementptr inbounds i8, ptr %.126.i378200.i.i.ph, i64 -8
  %2587 = getelementptr inbounds i8, ptr %.029.i376198.i.i.ph, i64 -8
  %2588 = getelementptr inbounds i8, ptr %.024.i379201.i.i.ph, i64 8
  %2589 = add nsw i64 %.1.i380202.i.i.ph, -1
  %2590 = load i64, ptr %2588, align 8
  %2591 = load i64, ptr %2587, align 8
  store i64 %2591, ptr %2588, align 8
  store i64 %2590, ptr %2587, align 8
  %2592 = load i64, ptr %2586, align 8
  %2593 = load i64, ptr %2585, align 8
  store i64 %2593, ptr %2586, align 8
  store i64 %2592, ptr %2585, align 8
  br label %.lr.ph203.i.i.prol.loopexit

.lr.ph203.i.i.prol.loopexit:                      ; preds = %.lr.ph203.i.i.prol, %.lr.ph203.i.i.preheader
  %.1.i380202.i.i.unr = phi i64 [ %.1.i380202.i.i.ph, %.lr.ph203.i.i.preheader ], [ %2589, %.lr.ph203.i.i.prol ]
  %.024.i379201.i.i.unr = phi ptr [ %.024.i379201.i.i.ph, %.lr.ph203.i.i.preheader ], [ %2588, %.lr.ph203.i.i.prol ]
  %.126.i378200.i.i.unr = phi ptr [ %.126.i378200.i.i.ph, %.lr.ph203.i.i.preheader ], [ %2586, %.lr.ph203.i.i.prol ]
  %.128.i377199.i.i.unr = phi ptr [ %.128.i377199.i.i.ph, %.lr.ph203.i.i.preheader ], [ %2585, %.lr.ph203.i.i.prol ]
  %.029.i376198.i.i.unr = phi ptr [ %.029.i376198.i.i.ph, %.lr.ph203.i.i.preheader ], [ %2587, %.lr.ph203.i.i.prol ]
  %2594 = icmp eq i64 %.1.i380202.i.i.ph, 1
  br i1 %2594, label %sort.quad_reversal.exit381.i.i, label %.lr.ph203.i.i.preheader2725

.lr.ph203.i.i.preheader2725:                      ; preds = %.lr.ph203.i.i.prol.loopexit
  br label %.lr.ph203.i.i

2595:                                             ; preds = %2552
  %2596 = load i64, ptr %2558, align 8
  %2597 = load i64, ptr %2560, align 8
  store i64 %2597, ptr %2558, align 8
  %2598 = getelementptr inbounds i8, ptr %2558, i64 -8
  store i64 %2596, ptr %2560, align 8
  %2599 = getelementptr inbounds i8, ptr %2560, i64 8
  %2600 = add nsw i64 %2556, -1
  br label %._crit_edge.i372.i.i

.lr.ph203.i.i:                                    ; preds = %.lr.ph203.i.i, %.lr.ph203.i.i.preheader2725
  %lsr.iv2889 = phi i64 [ -1, %.lr.ph203.i.i.preheader2725 ], [ %lsr.iv.next2890, %.lr.ph203.i.i ]
  %lsr.iv2883 = phi i64 [ 0, %.lr.ph203.i.i.preheader2725 ], [ %lsr.iv.next2884, %.lr.ph203.i.i ]
  %2601 = shl i64 %lsr.iv2889, 3
  %uglygep2893 = getelementptr i8, ptr %.126.i378200.i.i.unr, i64 %2601
  %uglygep2900 = getelementptr i8, ptr %.029.i376198.i.i.unr, i64 %2601
  %sunkaddr4101 = mul i64 %lsr.iv2883, 8
  %sunkaddr4102 = getelementptr i8, ptr %.024.i379201.i.i.unr, i64 %sunkaddr4101
  %sunkaddr4103 = getelementptr i8, ptr %sunkaddr4102, i64 8
  %2602 = load i64, ptr %sunkaddr4103, align 8
  %2603 = load i64, ptr %uglygep2900, align 8
  store i64 %2603, ptr %sunkaddr4103, align 8
  store i64 %2602, ptr %uglygep2900, align 8
  %2604 = load i64, ptr %uglygep2893, align 8
  %sunkaddr4104 = mul i64 %lsr.iv2883, 8
  %sunkaddr4105 = getelementptr i8, ptr %.128.i377199.i.i.unr, i64 %sunkaddr4104
  %sunkaddr4106 = getelementptr i8, ptr %sunkaddr4105, i64 8
  %2605 = load i64, ptr %sunkaddr4106, align 8
  store i64 %2605, ptr %uglygep2893, align 8
  store i64 %2604, ptr %sunkaddr4106, align 8
  %2606 = shl i64 %lsr.iv2889, 3
  %uglygep2891 = getelementptr i8, ptr %.126.i378200.i.i.unr, i64 %2606
  %uglygep2892 = getelementptr i8, ptr %uglygep2891, i64 -8
  %uglygep2898 = getelementptr i8, ptr %.029.i376198.i.i.unr, i64 %2606
  %uglygep2899 = getelementptr i8, ptr %uglygep2898, i64 -8
  %sunkaddr4107 = mul i64 %lsr.iv2883, 8
  %sunkaddr4108 = getelementptr i8, ptr %.024.i379201.i.i.unr, i64 %sunkaddr4107
  %sunkaddr4109 = getelementptr i8, ptr %sunkaddr4108, i64 16
  %2607 = load i64, ptr %sunkaddr4109, align 8
  %2608 = load i64, ptr %uglygep2899, align 8
  store i64 %2608, ptr %sunkaddr4109, align 8
  store i64 %2607, ptr %uglygep2899, align 8
  %2609 = load i64, ptr %uglygep2892, align 8
  %sunkaddr4110 = mul i64 %lsr.iv2883, 8
  %sunkaddr4111 = getelementptr i8, ptr %.128.i377199.i.i.unr, i64 %sunkaddr4110
  %sunkaddr4112 = getelementptr i8, ptr %sunkaddr4111, i64 16
  %2610 = load i64, ptr %sunkaddr4112, align 8
  store i64 %2610, ptr %uglygep2892, align 8
  store i64 %2609, ptr %sunkaddr4112, align 8
  %lsr.iv.next2884 = add i64 %lsr.iv2883, 2
  %lsr.iv.next2890 = add i64 %lsr.iv2889, -2
  %2611 = icmp eq i64 %.1.i380202.i.i.unr, %lsr.iv.next2884
  br i1 %2611, label %sort.quad_reversal.exit381.i.i, label %.lr.ph203.i.i, !llvm.loop !142

sort.quad_reversal.exit391.i.i:                   ; preds = %.lr.ph209.i.i, %.lr.ph209.i.i.prol.loopexit, %middle.block2293, %._crit_edge.i382.i.i, %sort.quad_reversal.exit381.i.i, %.lr.ph179.i.i, %.lr.ph179.i.i.prol.loopexit, %middle.block1938, %._crit_edge.i302.i.i
  %.624280.i.i = phi i64 [ %.6242.i.i144, %sort.quad_reversal.exit381.i.i ], [ %.6242.i.i144, %._crit_edge.i382.i.i ], [ 0, %._crit_edge.i302.i.i ], [ %.6242.i.i144, %middle.block2293 ], [ 0, %middle.block1938 ], [ %.6242.i.i144, %.lr.ph209.i.i.prol.loopexit ], [ 0, %.lr.ph179.i.i.prol.loopexit ], [ %.6242.i.i144, %.lr.ph209.i.i ], [ 0, %.lr.ph179.i.i ]
  %.5255637279.i.i = phi i64 [ %.52556372.i.i, %sort.quad_reversal.exit381.i.i ], [ %.52556372.i.i, %._crit_edge.i382.i.i ], [ %.3253.lcssa.i.i104, %._crit_edge.i302.i.i ], [ %.52556372.i.i, %middle.block2293 ], [ %.3253.lcssa.i.i104, %middle.block1938 ], [ %.52556372.i.i, %.lr.ph209.i.i.prol.loopexit ], [ %.3253.lcssa.i.i104, %.lr.ph179.i.i.prol.loopexit ], [ %.52556372.i.i, %.lr.ph209.i.i ], [ %.3253.lcssa.i.i104, %.lr.ph179.i.i ]
  %.52357378.i.i = phi i64 [ %.523573.i.i, %sort.quad_reversal.exit381.i.i ], [ %.523573.i.i, %._crit_edge.i382.i.i ], [ 0, %._crit_edge.i302.i.i ], [ %.523573.i.i, %middle.block2293 ], [ 0, %middle.block1938 ], [ %.523573.i.i, %.lr.ph209.i.i.prol.loopexit ], [ 0, %.lr.ph179.i.i.prol.loopexit ], [ %.523573.i.i, %.lr.ph209.i.i ], [ 0, %.lr.ph179.i.i ]
  %.6249.i.i145 = phi i64 [ %.52486471.i.i, %sort.quad_reversal.exit381.i.i ], [ 0, %._crit_edge.i382.i.i ], [ 0, %._crit_edge.i302.i.i ], [ 0, %middle.block2293 ], [ 0, %middle.block1938 ], [ 0, %.lr.ph209.i.i.prol.loopexit ], [ 0, %.lr.ph179.i.i.prol.loopexit ], [ 0, %.lr.ph209.i.i ], [ 0, %.lr.ph179.i.i ]
  %2612 = icmp eq i64 %1944, 1
  %2613 = icmp ne i64 %.5255637279.i.i, 0
  %2614 = and i1 %2612, %2613
  br i1 %2614, label %2675, label %sort.quad_reversal.exit401.i.i

2615:                                             ; preds = %sort.quad_reversal.exit381.i.i
  %2616 = ptrtoint ptr %.4220.lcssa.i.i109 to i64
  %2617 = ptrtoint ptr %1987 to i64
  %2618 = sub nuw i64 %2616, %2617
  %2619 = lshr i64 %2618, 4
  %2620 = shl nuw nsw i64 %2619, 3
  %2621 = getelementptr inbounds i8, ptr %1987, i64 %2620
  %2622 = sub nsw i64 0, %2620
  %2623 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 %2622
  %2624 = and i64 %2618, 16
  %2625 = icmp eq i64 %2624, 0
  br i1 %2625, label %2658, label %._crit_edge.i382.i.i

._crit_edge.i382.i.i:                             ; preds = %2658, %2615
  %.027.i383.i.i = phi ptr [ %2662, %2658 ], [ %2623, %2615 ]
  %.025.i384.i.i = phi ptr [ %2661, %2658 ], [ %2621, %2615 ]
  %.0.i385.i.i = phi i64 [ %2663, %2658 ], [ %2619, %2615 ]
  %2626 = load i64, ptr %1987, align 8
  %2627 = load i64, ptr %.4220.lcssa.i.i109, align 8
  store i64 %2627, ptr %1987, align 8
  store i64 %2626, ptr %.4220.lcssa.i.i109, align 8
  %2628 = load i64, ptr %.025.i384.i.i, align 8
  %2629 = load i64, ptr %.027.i383.i.i, align 8
  store i64 %2629, ptr %.025.i384.i.i, align 8
  store i64 %2628, ptr %.027.i383.i.i, align 8
  %2630 = icmp ult i64 %.0.i385.i.i, 2
  br i1 %2630, label %sort.quad_reversal.exit391.i.i, label %.lr.ph209.preheader.i.i

.lr.ph209.preheader.i.i:                          ; preds = %._crit_edge.i382.i.i
  %2631 = lshr i64 %.0.i385.i.i, 1
  %min.iters.check2295 = icmp ult i64 %.0.i385.i.i, 80
  br i1 %min.iters.check2295, label %.lr.ph209.i.i.preheader, label %vector.scevcheck2254

vector.scevcheck2254:                             ; preds = %.lr.ph209.preheader.i.i
  %const3479 = bitcast i64 2305843009213693951 to i64
  %2632 = add nsw i64 %2631, -1
  %uglygep2255 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -8
  %mul.result2257.neg = mul i64 %2632, -8
  %2633 = getelementptr i8, ptr %uglygep2255, i64 %mul.result2257.neg
  %2634 = icmp ugt ptr %2633, %uglygep2255
  %uglygep2259 = getelementptr i8, ptr %.025.i384.i.i, i64 -8
  %mul.result2261.neg = mul i64 %2632, -8
  %mul.overflow2262 = icmp ugt i64 %2632, %const3479
  %2635 = getelementptr i8, ptr %uglygep2259, i64 %mul.result2261.neg
  %2636 = icmp ugt ptr %2635, %uglygep2259
  %2637 = or i1 %2636, %mul.overflow2262
  %2638 = or i1 %2634, %2637
  br i1 %2638, label %.lr.ph209.i.i.preheader, label %vector.memcheck2263

vector.memcheck2263:                              ; preds = %vector.scevcheck2254
  %uglygep2264 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 16
  %2639 = shl i64 %2631, 3
  %2640 = add i64 %2639, 16
  %uglygep2265 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2640
  %uglygep2266 = getelementptr i8, ptr %.027.i383.i.i, i64 8
  %2641 = add i64 %2639, 8
  %uglygep2267 = getelementptr i8, ptr %.027.i383.i.i, i64 %2641
  %2642 = mul i64 %2631, -8
  %uglygep2268 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2642
  %uglygep2269 = getelementptr i8, ptr %.025.i384.i.i, i64 %2642
  %bound02270 = icmp ult ptr %uglygep2264, %uglygep2267
  %bound12271 = icmp ult ptr %uglygep2266, %uglygep2265
  %found.conflict2272 = and i1 %bound02270, %bound12271
  %bound02273 = icmp ult ptr %uglygep2264, %.4220.lcssa.i.i109
  %bound12274 = icmp ult ptr %uglygep2268, %uglygep2265
  %found.conflict2275 = and i1 %bound02273, %bound12274
  %conflict.rdx2276 = or i1 %found.conflict2272, %found.conflict2275
  %bound02277 = icmp ult ptr %uglygep2264, %.025.i384.i.i
  %bound12278 = icmp ult ptr %uglygep2269, %uglygep2265
  %found.conflict2279 = and i1 %bound02277, %bound12278
  %conflict.rdx2280 = or i1 %conflict.rdx2276, %found.conflict2279
  %bound02281 = icmp ult ptr %uglygep2266, %.4220.lcssa.i.i109
  %bound12282 = icmp ult ptr %uglygep2268, %uglygep2267
  %found.conflict2283 = and i1 %bound02281, %bound12282
  %conflict.rdx2284 = or i1 %conflict.rdx2280, %found.conflict2283
  %bound02285 = icmp ult ptr %uglygep2266, %.025.i384.i.i
  %bound12286 = icmp ult ptr %uglygep2269, %uglygep2267
  %found.conflict2287 = and i1 %bound02285, %bound12286
  %conflict.rdx2288 = or i1 %conflict.rdx2284, %found.conflict2287
  %bound02289 = icmp ult ptr %uglygep2268, %.025.i384.i.i
  %bound12290 = icmp ult ptr %uglygep2269, %.4220.lcssa.i.i109
  %found.conflict2291 = and i1 %bound02289, %bound12290
  %conflict.rdx2292 = or i1 %conflict.rdx2288, %found.conflict2291
  br i1 %conflict.rdx2292, label %.lr.ph209.i.i.preheader, label %vector.ph2296

vector.ph2296:                                    ; preds = %vector.memcheck2263
  %const3503 = bitcast i64 9223372036854775806 to i64
  %n.vec2298 = and i64 %2631, %const3503
  %ind.end2299 = and i64 %2631, 1
  %2643 = shl i64 %n.vec2298, 3
  %ind.end2301 = getelementptr i8, ptr %1987, i64 %2643
  %2644 = mul i64 %n.vec2298, -8
  %ind.end2303 = getelementptr i8, ptr %.025.i384.i.i, i64 %2644
  %2645 = shl i64 %n.vec2298, 3
  %ind.end2305 = getelementptr i8, ptr %.027.i383.i.i, i64 %2645
  %2646 = mul i64 %n.vec2298, -8
  %ind.end2307 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2646
  br label %vector.body2310

vector.body2310:                                  ; preds = %vector.body2310, %vector.ph2296
  %lsr.iv2878 = phi i64 [ %lsr.iv.next2879, %vector.body2310 ], [ -16, %vector.ph2296 ]
  %index2311 = phi i64 [ 0, %vector.ph2296 ], [ %index.next2324, %vector.body2310 ]
  %sunkaddr4113 = mul i64 %index2311, 8
  %sunkaddr4114 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %sunkaddr4113
  %sunkaddr4115 = getelementptr i8, ptr %sunkaddr4114, i64 16
  %wide.load2316 = load <2 x i64>, ptr %sunkaddr4115, align 8, !alias.scope !143, !noalias !146
  %uglygep2880 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %lsr.iv2878
  %wide.load2317 = load <2 x i64>, ptr %uglygep2880, align 8, !alias.scope !150, !noalias !151
  %reverse2318 = shufflevector <2 x i64> %wide.load2317, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2318, ptr %sunkaddr4115, align 8, !alias.scope !143, !noalias !146
  %reverse2319 = shufflevector <2 x i64> %wide.load2316, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2319, ptr %uglygep2880, align 8, !alias.scope !150, !noalias !151
  %uglygep2881 = getelementptr i8, ptr %.025.i384.i.i, i64 %lsr.iv2878
  %wide.load2320 = load <2 x i64>, ptr %uglygep2881, align 8, !alias.scope !151
  %reverse2321 = shufflevector <2 x i64> %wide.load2320, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4116 = mul i64 %index2311, 8
  %sunkaddr4117 = getelementptr i8, ptr %.027.i383.i.i, i64 %sunkaddr4116
  %sunkaddr4118 = getelementptr i8, ptr %sunkaddr4117, i64 8
  %wide.load2322 = load <2 x i64>, ptr %sunkaddr4118, align 8, !alias.scope !152, !noalias !153
  %reverse2323 = shufflevector <2 x i64> %wide.load2322, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2323, ptr %uglygep2881, align 8, !alias.scope !151
  store <2 x i64> %reverse2321, ptr %sunkaddr4118, align 8, !alias.scope !152, !noalias !153
  %index.next2324 = add nuw i64 %index2311, 2
  %lsr.iv.next2879 = add i64 %lsr.iv2878, -16
  %2647 = icmp eq i64 %n.vec2298, %index.next2324
  br i1 %2647, label %middle.block2293, label %vector.body2310, !llvm.loop !154

middle.block2293:                                 ; preds = %vector.body2310
  %cmp.n2309 = icmp eq i64 %2631, %n.vec2298
  br i1 %cmp.n2309, label %sort.quad_reversal.exit391.i.i, label %.lr.ph209.i.i.preheader

.lr.ph209.i.i.preheader:                          ; preds = %middle.block2293, %vector.memcheck2263, %vector.scevcheck2254, %.lr.ph209.preheader.i.i
  %.1.i390208.i.i.ph = phi i64 [ %2631, %vector.memcheck2263 ], [ %2631, %vector.scevcheck2254 ], [ %2631, %.lr.ph209.preheader.i.i ], [ %ind.end2299, %middle.block2293 ]
  %.024.i389207.i.i.ph = phi ptr [ %1987, %vector.memcheck2263 ], [ %1987, %vector.scevcheck2254 ], [ %1987, %.lr.ph209.preheader.i.i ], [ %ind.end2301, %middle.block2293 ]
  %.126.i388206.i.i.ph = phi ptr [ %.025.i384.i.i, %vector.memcheck2263 ], [ %.025.i384.i.i, %vector.scevcheck2254 ], [ %.025.i384.i.i, %.lr.ph209.preheader.i.i ], [ %ind.end2303, %middle.block2293 ]
  %.128.i387205.i.i.ph = phi ptr [ %.027.i383.i.i, %vector.memcheck2263 ], [ %.027.i383.i.i, %vector.scevcheck2254 ], [ %.027.i383.i.i, %.lr.ph209.preheader.i.i ], [ %ind.end2305, %middle.block2293 ]
  %.029.i386204.i.i.ph = phi ptr [ %.4220.lcssa.i.i109, %vector.memcheck2263 ], [ %.4220.lcssa.i.i109, %vector.scevcheck2254 ], [ %.4220.lcssa.i.i109, %.lr.ph209.preheader.i.i ], [ %ind.end2307, %middle.block2293 ]
  %xtraiter2629 = and i64 %.1.i390208.i.i.ph, 1
  %lcmp.mod2630.not = icmp eq i64 %xtraiter2629, 0
  br i1 %lcmp.mod2630.not, label %.lr.ph209.i.i.prol.loopexit, label %.lr.ph209.i.i.prol

.lr.ph209.i.i.prol:                               ; preds = %.lr.ph209.i.i.preheader
  %2648 = getelementptr inbounds i8, ptr %.128.i387205.i.i.ph, i64 8
  %2649 = getelementptr inbounds i8, ptr %.126.i388206.i.i.ph, i64 -8
  %2650 = getelementptr inbounds i8, ptr %.029.i386204.i.i.ph, i64 -8
  %2651 = getelementptr inbounds i8, ptr %.024.i389207.i.i.ph, i64 8
  %2652 = add nsw i64 %.1.i390208.i.i.ph, -1
  %2653 = load i64, ptr %2651, align 8
  %2654 = load i64, ptr %2650, align 8
  store i64 %2654, ptr %2651, align 8
  store i64 %2653, ptr %2650, align 8
  %2655 = load i64, ptr %2649, align 8
  %2656 = load i64, ptr %2648, align 8
  store i64 %2656, ptr %2649, align 8
  store i64 %2655, ptr %2648, align 8
  br label %.lr.ph209.i.i.prol.loopexit

.lr.ph209.i.i.prol.loopexit:                      ; preds = %.lr.ph209.i.i.prol, %.lr.ph209.i.i.preheader
  %.1.i390208.i.i.unr = phi i64 [ %.1.i390208.i.i.ph, %.lr.ph209.i.i.preheader ], [ %2652, %.lr.ph209.i.i.prol ]
  %.024.i389207.i.i.unr = phi ptr [ %.024.i389207.i.i.ph, %.lr.ph209.i.i.preheader ], [ %2651, %.lr.ph209.i.i.prol ]
  %.126.i388206.i.i.unr = phi ptr [ %.126.i388206.i.i.ph, %.lr.ph209.i.i.preheader ], [ %2649, %.lr.ph209.i.i.prol ]
  %.128.i387205.i.i.unr = phi ptr [ %.128.i387205.i.i.ph, %.lr.ph209.i.i.preheader ], [ %2648, %.lr.ph209.i.i.prol ]
  %.029.i386204.i.i.unr = phi ptr [ %.029.i386204.i.i.ph, %.lr.ph209.i.i.preheader ], [ %2650, %.lr.ph209.i.i.prol ]
  %2657 = icmp eq i64 %.1.i390208.i.i.ph, 1
  br i1 %2657, label %sort.quad_reversal.exit391.i.i, label %.lr.ph209.i.i.preheader2724

.lr.ph209.i.i.preheader2724:                      ; preds = %.lr.ph209.i.i.prol.loopexit
  br label %.lr.ph209.i.i

2658:                                             ; preds = %2615
  %2659 = load i64, ptr %2621, align 8
  %2660 = load i64, ptr %2623, align 8
  store i64 %2660, ptr %2621, align 8
  %2661 = getelementptr inbounds i8, ptr %2621, i64 -8
  store i64 %2659, ptr %2623, align 8
  %2662 = getelementptr inbounds i8, ptr %2623, i64 8
  %2663 = add nsw i64 %2619, -1
  br label %._crit_edge.i382.i.i

.lr.ph209.i.i:                                    ; preds = %.lr.ph209.i.i, %.lr.ph209.i.i.preheader2724
  %lsr.iv2866 = phi i64 [ -1, %.lr.ph209.i.i.preheader2724 ], [ %lsr.iv.next2867, %.lr.ph209.i.i ]
  %lsr.iv2860 = phi i64 [ 0, %.lr.ph209.i.i.preheader2724 ], [ %lsr.iv.next2861, %.lr.ph209.i.i ]
  %2664 = shl i64 %lsr.iv2866, 3
  %uglygep2870 = getelementptr i8, ptr %.126.i388206.i.i.unr, i64 %2664
  %uglygep2877 = getelementptr i8, ptr %.029.i386204.i.i.unr, i64 %2664
  %sunkaddr4119 = mul i64 %lsr.iv2860, 8
  %sunkaddr4120 = getelementptr i8, ptr %.024.i389207.i.i.unr, i64 %sunkaddr4119
  %sunkaddr4121 = getelementptr i8, ptr %sunkaddr4120, i64 8
  %2665 = load i64, ptr %sunkaddr4121, align 8
  %2666 = load i64, ptr %uglygep2877, align 8
  store i64 %2666, ptr %sunkaddr4121, align 8
  store i64 %2665, ptr %uglygep2877, align 8
  %2667 = load i64, ptr %uglygep2870, align 8
  %sunkaddr4122 = mul i64 %lsr.iv2860, 8
  %sunkaddr4123 = getelementptr i8, ptr %.128.i387205.i.i.unr, i64 %sunkaddr4122
  %sunkaddr4124 = getelementptr i8, ptr %sunkaddr4123, i64 8
  %2668 = load i64, ptr %sunkaddr4124, align 8
  store i64 %2668, ptr %uglygep2870, align 8
  store i64 %2667, ptr %sunkaddr4124, align 8
  %2669 = shl i64 %lsr.iv2866, 3
  %uglygep2868 = getelementptr i8, ptr %.126.i388206.i.i.unr, i64 %2669
  %uglygep2869 = getelementptr i8, ptr %uglygep2868, i64 -8
  %uglygep2875 = getelementptr i8, ptr %.029.i386204.i.i.unr, i64 %2669
  %uglygep2876 = getelementptr i8, ptr %uglygep2875, i64 -8
  %sunkaddr4125 = mul i64 %lsr.iv2860, 8
  %sunkaddr4126 = getelementptr i8, ptr %.024.i389207.i.i.unr, i64 %sunkaddr4125
  %sunkaddr4127 = getelementptr i8, ptr %sunkaddr4126, i64 16
  %2670 = load i64, ptr %sunkaddr4127, align 8
  %2671 = load i64, ptr %uglygep2876, align 8
  store i64 %2671, ptr %sunkaddr4127, align 8
  store i64 %2670, ptr %uglygep2876, align 8
  %2672 = load i64, ptr %uglygep2869, align 8
  %sunkaddr4128 = mul i64 %lsr.iv2860, 8
  %sunkaddr4129 = getelementptr i8, ptr %.128.i387205.i.i.unr, i64 %sunkaddr4128
  %sunkaddr4130 = getelementptr i8, ptr %sunkaddr4129, i64 16
  %2673 = load i64, ptr %sunkaddr4130, align 8
  store i64 %2673, ptr %uglygep2869, align 8
  store i64 %2672, ptr %sunkaddr4130, align 8
  %lsr.iv.next2861 = add i64 %lsr.iv2860, 2
  %lsr.iv.next2867 = add i64 %lsr.iv2866, -2
  %2674 = icmp eq i64 %.1.i390208.i.i.unr, %lsr.iv.next2861
  br i1 %2674, label %sort.quad_reversal.exit391.i.i, label %.lr.ph209.i.i, !llvm.loop !155

2675:                                             ; preds = %sort.quad_reversal.exit391.i.i
  %2676 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %2677 = ptrtoint ptr %1993 to i64
  %2678 = sub nuw i64 %2676, %2677
  %2679 = lshr i64 %2678, 4
  %2680 = shl nuw nsw i64 %2679, 3
  %2681 = getelementptr inbounds i8, ptr %1993, i64 %2680
  %2682 = sub nsw i64 0, %2680
  %2683 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %2682
  %2684 = and i64 %2678, 16
  %2685 = icmp eq i64 %2684, 0
  br i1 %2685, label %2718, label %._crit_edge.i392.i.i

._crit_edge.i392.i.i:                             ; preds = %2718, %2675
  %.027.i393.i.i = phi ptr [ %2722, %2718 ], [ %2683, %2675 ]
  %.025.i394.i.i = phi ptr [ %2721, %2718 ], [ %2681, %2675 ]
  %.0.i395.i.i = phi i64 [ %2723, %2718 ], [ %2679, %2675 ]
  %2686 = load i64, ptr %1993, align 8
  %2687 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %2687, ptr %1993, align 8
  store i64 %2686, ptr %.4225.lcssa.i.i108, align 8
  %2688 = load i64, ptr %.025.i394.i.i, align 8
  %2689 = load i64, ptr %.027.i393.i.i, align 8
  store i64 %2689, ptr %.025.i394.i.i, align 8
  store i64 %2688, ptr %.027.i393.i.i, align 8
  %2690 = icmp ult i64 %.0.i395.i.i, 2
  br i1 %2690, label %sort.quad_reversal.exit401.i.i, label %.lr.ph215.preheader.i.i

.lr.ph215.preheader.i.i:                          ; preds = %._crit_edge.i392.i.i
  %2691 = lshr i64 %.0.i395.i.i, 1
  %min.iters.check2366 = icmp ult i64 %.0.i395.i.i, 80
  br i1 %min.iters.check2366, label %.lr.ph215.i.i.preheader, label %vector.scevcheck2325

vector.scevcheck2325:                             ; preds = %.lr.ph215.preheader.i.i
  %const3478 = bitcast i64 2305843009213693951 to i64
  %2692 = add nsw i64 %2691, -1
  %uglygep2326 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result2328.neg = mul i64 %2692, -8
  %2693 = getelementptr i8, ptr %uglygep2326, i64 %mul.result2328.neg
  %2694 = icmp ugt ptr %2693, %uglygep2326
  %uglygep2330 = getelementptr i8, ptr %.025.i394.i.i, i64 -8
  %mul.result2332.neg = mul i64 %2692, -8
  %mul.overflow2333 = icmp ugt i64 %2692, %const3478
  %2695 = getelementptr i8, ptr %uglygep2330, i64 %mul.result2332.neg
  %2696 = icmp ugt ptr %2695, %uglygep2330
  %2697 = or i1 %2696, %mul.overflow2333
  %2698 = or i1 %2694, %2697
  br i1 %2698, label %.lr.ph215.i.i.preheader, label %vector.memcheck2334

vector.memcheck2334:                              ; preds = %vector.scevcheck2325
  %uglygep2335 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 16
  %2699 = shl i64 %2691, 3
  %2700 = add i64 %2699, 16
  %uglygep2336 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2700
  %uglygep2337 = getelementptr i8, ptr %.027.i393.i.i, i64 8
  %2701 = add i64 %2699, 8
  %uglygep2338 = getelementptr i8, ptr %.027.i393.i.i, i64 %2701
  %2702 = mul i64 %2691, -8
  %uglygep2339 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2702
  %uglygep2340 = getelementptr i8, ptr %.025.i394.i.i, i64 %2702
  %bound02341 = icmp ult ptr %uglygep2335, %uglygep2338
  %bound12342 = icmp ult ptr %uglygep2337, %uglygep2336
  %found.conflict2343 = and i1 %bound02341, %bound12342
  %bound02344 = icmp ult ptr %uglygep2335, %.4225.lcssa.i.i108
  %bound12345 = icmp ult ptr %uglygep2339, %uglygep2336
  %found.conflict2346 = and i1 %bound02344, %bound12345
  %conflict.rdx2347 = or i1 %found.conflict2343, %found.conflict2346
  %bound02348 = icmp ult ptr %uglygep2335, %.025.i394.i.i
  %bound12349 = icmp ult ptr %uglygep2340, %uglygep2336
  %found.conflict2350 = and i1 %bound02348, %bound12349
  %conflict.rdx2351 = or i1 %conflict.rdx2347, %found.conflict2350
  %bound02352 = icmp ult ptr %uglygep2337, %.4225.lcssa.i.i108
  %bound12353 = icmp ult ptr %uglygep2339, %uglygep2338
  %found.conflict2354 = and i1 %bound02352, %bound12353
  %conflict.rdx2355 = or i1 %conflict.rdx2351, %found.conflict2354
  %bound02356 = icmp ult ptr %uglygep2337, %.025.i394.i.i
  %bound12357 = icmp ult ptr %uglygep2340, %uglygep2338
  %found.conflict2358 = and i1 %bound02356, %bound12357
  %conflict.rdx2359 = or i1 %conflict.rdx2355, %found.conflict2358
  %bound02360 = icmp ult ptr %uglygep2339, %.025.i394.i.i
  %bound12361 = icmp ult ptr %uglygep2340, %.4225.lcssa.i.i108
  %found.conflict2362 = and i1 %bound02360, %bound12361
  %conflict.rdx2363 = or i1 %conflict.rdx2359, %found.conflict2362
  br i1 %conflict.rdx2363, label %.lr.ph215.i.i.preheader, label %vector.ph2367

vector.ph2367:                                    ; preds = %vector.memcheck2334
  %const3502 = bitcast i64 9223372036854775806 to i64
  %n.vec2369 = and i64 %2691, %const3502
  %ind.end2370 = and i64 %2691, 1
  %2703 = shl i64 %n.vec2369, 3
  %ind.end2372 = getelementptr i8, ptr %1993, i64 %2703
  %2704 = mul i64 %n.vec2369, -8
  %ind.end2374 = getelementptr i8, ptr %.025.i394.i.i, i64 %2704
  %2705 = shl i64 %n.vec2369, 3
  %ind.end2376 = getelementptr i8, ptr %.027.i393.i.i, i64 %2705
  %2706 = mul i64 %n.vec2369, -8
  %ind.end2378 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2706
  br label %vector.body2381

vector.body2381:                                  ; preds = %vector.body2381, %vector.ph2367
  %lsr.iv2855 = phi i64 [ %lsr.iv.next2856, %vector.body2381 ], [ -16, %vector.ph2367 ]
  %index2382 = phi i64 [ 0, %vector.ph2367 ], [ %index.next2395, %vector.body2381 ]
  %sunkaddr4131 = mul i64 %index2382, 8
  %sunkaddr4132 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %sunkaddr4131
  %sunkaddr4133 = getelementptr i8, ptr %sunkaddr4132, i64 16
  %wide.load2387 = load <2 x i64>, ptr %sunkaddr4133, align 8, !alias.scope !156, !noalias !159
  %uglygep2857 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %lsr.iv2855
  %wide.load2388 = load <2 x i64>, ptr %uglygep2857, align 8, !alias.scope !163, !noalias !164
  %reverse2389 = shufflevector <2 x i64> %wide.load2388, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2389, ptr %sunkaddr4133, align 8, !alias.scope !156, !noalias !159
  %reverse2390 = shufflevector <2 x i64> %wide.load2387, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2390, ptr %uglygep2857, align 8, !alias.scope !163, !noalias !164
  %uglygep2858 = getelementptr i8, ptr %.025.i394.i.i, i64 %lsr.iv2855
  %wide.load2391 = load <2 x i64>, ptr %uglygep2858, align 8, !alias.scope !164
  %reverse2392 = shufflevector <2 x i64> %wide.load2391, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4134 = mul i64 %index2382, 8
  %sunkaddr4135 = getelementptr i8, ptr %.027.i393.i.i, i64 %sunkaddr4134
  %sunkaddr4136 = getelementptr i8, ptr %sunkaddr4135, i64 8
  %wide.load2393 = load <2 x i64>, ptr %sunkaddr4136, align 8, !alias.scope !165, !noalias !166
  %reverse2394 = shufflevector <2 x i64> %wide.load2393, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2394, ptr %uglygep2858, align 8, !alias.scope !164
  store <2 x i64> %reverse2392, ptr %sunkaddr4136, align 8, !alias.scope !165, !noalias !166
  %index.next2395 = add nuw i64 %index2382, 2
  %lsr.iv.next2856 = add i64 %lsr.iv2855, -16
  %2707 = icmp eq i64 %n.vec2369, %index.next2395
  br i1 %2707, label %middle.block2364, label %vector.body2381, !llvm.loop !167

middle.block2364:                                 ; preds = %vector.body2381
  %cmp.n2380 = icmp eq i64 %2691, %n.vec2369
  br i1 %cmp.n2380, label %sort.quad_reversal.exit401.i.i, label %.lr.ph215.i.i.preheader

.lr.ph215.i.i.preheader:                          ; preds = %middle.block2364, %vector.memcheck2334, %vector.scevcheck2325, %.lr.ph215.preheader.i.i
  %.1.i400214.i.i.ph = phi i64 [ %2691, %vector.memcheck2334 ], [ %2691, %vector.scevcheck2325 ], [ %2691, %.lr.ph215.preheader.i.i ], [ %ind.end2370, %middle.block2364 ]
  %.024.i399213.i.i.ph = phi ptr [ %1993, %vector.memcheck2334 ], [ %1993, %vector.scevcheck2325 ], [ %1993, %.lr.ph215.preheader.i.i ], [ %ind.end2372, %middle.block2364 ]
  %.126.i398212.i.i.ph = phi ptr [ %.025.i394.i.i, %vector.memcheck2334 ], [ %.025.i394.i.i, %vector.scevcheck2325 ], [ %.025.i394.i.i, %.lr.ph215.preheader.i.i ], [ %ind.end2374, %middle.block2364 ]
  %.128.i397211.i.i.ph = phi ptr [ %.027.i393.i.i, %vector.memcheck2334 ], [ %.027.i393.i.i, %vector.scevcheck2325 ], [ %.027.i393.i.i, %.lr.ph215.preheader.i.i ], [ %ind.end2376, %middle.block2364 ]
  %.029.i396210.i.i.ph = phi ptr [ %.4225.lcssa.i.i108, %vector.memcheck2334 ], [ %.4225.lcssa.i.i108, %vector.scevcheck2325 ], [ %.4225.lcssa.i.i108, %.lr.ph215.preheader.i.i ], [ %ind.end2378, %middle.block2364 ]
  %xtraiter2631 = and i64 %.1.i400214.i.i.ph, 1
  %lcmp.mod2632.not = icmp eq i64 %xtraiter2631, 0
  br i1 %lcmp.mod2632.not, label %.lr.ph215.i.i.prol.loopexit, label %.lr.ph215.i.i.prol

.lr.ph215.i.i.prol:                               ; preds = %.lr.ph215.i.i.preheader
  %2708 = getelementptr inbounds i8, ptr %.128.i397211.i.i.ph, i64 8
  %2709 = getelementptr inbounds i8, ptr %.126.i398212.i.i.ph, i64 -8
  %2710 = getelementptr inbounds i8, ptr %.029.i396210.i.i.ph, i64 -8
  %2711 = getelementptr inbounds i8, ptr %.024.i399213.i.i.ph, i64 8
  %2712 = add nsw i64 %.1.i400214.i.i.ph, -1
  %2713 = load i64, ptr %2711, align 8
  %2714 = load i64, ptr %2710, align 8
  store i64 %2714, ptr %2711, align 8
  store i64 %2713, ptr %2710, align 8
  %2715 = load i64, ptr %2709, align 8
  %2716 = load i64, ptr %2708, align 8
  store i64 %2716, ptr %2709, align 8
  store i64 %2715, ptr %2708, align 8
  br label %.lr.ph215.i.i.prol.loopexit

.lr.ph215.i.i.prol.loopexit:                      ; preds = %.lr.ph215.i.i.prol, %.lr.ph215.i.i.preheader
  %.1.i400214.i.i.unr = phi i64 [ %.1.i400214.i.i.ph, %.lr.ph215.i.i.preheader ], [ %2712, %.lr.ph215.i.i.prol ]
  %.024.i399213.i.i.unr = phi ptr [ %.024.i399213.i.i.ph, %.lr.ph215.i.i.preheader ], [ %2711, %.lr.ph215.i.i.prol ]
  %.126.i398212.i.i.unr = phi ptr [ %.126.i398212.i.i.ph, %.lr.ph215.i.i.preheader ], [ %2709, %.lr.ph215.i.i.prol ]
  %.128.i397211.i.i.unr = phi ptr [ %.128.i397211.i.i.ph, %.lr.ph215.i.i.preheader ], [ %2708, %.lr.ph215.i.i.prol ]
  %.029.i396210.i.i.unr = phi ptr [ %.029.i396210.i.i.ph, %.lr.ph215.i.i.preheader ], [ %2710, %.lr.ph215.i.i.prol ]
  %2717 = icmp eq i64 %.1.i400214.i.i.ph, 1
  br i1 %2717, label %sort.quad_reversal.exit401.i.i, label %.lr.ph215.i.i.preheader2723

.lr.ph215.i.i.preheader2723:                      ; preds = %.lr.ph215.i.i.prol.loopexit
  br label %.lr.ph215.i.i

2718:                                             ; preds = %2675
  %2719 = load i64, ptr %2681, align 8
  %2720 = load i64, ptr %2683, align 8
  store i64 %2720, ptr %2681, align 8
  %2721 = getelementptr inbounds i8, ptr %2681, i64 -8
  store i64 %2719, ptr %2683, align 8
  %2722 = getelementptr inbounds i8, ptr %2683, i64 8
  %2723 = add nsw i64 %2679, -1
  br label %._crit_edge.i392.i.i

.lr.ph215.i.i:                                    ; preds = %.lr.ph215.i.i, %.lr.ph215.i.i.preheader2723
  %lsr.iv2843 = phi i64 [ -1, %.lr.ph215.i.i.preheader2723 ], [ %lsr.iv.next2844, %.lr.ph215.i.i ]
  %lsr.iv2837 = phi i64 [ 0, %.lr.ph215.i.i.preheader2723 ], [ %lsr.iv.next2838, %.lr.ph215.i.i ]
  %2724 = shl i64 %lsr.iv2843, 3
  %uglygep2847 = getelementptr i8, ptr %.126.i398212.i.i.unr, i64 %2724
  %uglygep2854 = getelementptr i8, ptr %.029.i396210.i.i.unr, i64 %2724
  %sunkaddr4137 = mul i64 %lsr.iv2837, 8
  %sunkaddr4138 = getelementptr i8, ptr %.024.i399213.i.i.unr, i64 %sunkaddr4137
  %sunkaddr4139 = getelementptr i8, ptr %sunkaddr4138, i64 8
  %2725 = load i64, ptr %sunkaddr4139, align 8
  %2726 = load i64, ptr %uglygep2854, align 8
  store i64 %2726, ptr %sunkaddr4139, align 8
  store i64 %2725, ptr %uglygep2854, align 8
  %2727 = load i64, ptr %uglygep2847, align 8
  %sunkaddr4140 = mul i64 %lsr.iv2837, 8
  %sunkaddr4141 = getelementptr i8, ptr %.128.i397211.i.i.unr, i64 %sunkaddr4140
  %sunkaddr4142 = getelementptr i8, ptr %sunkaddr4141, i64 8
  %2728 = load i64, ptr %sunkaddr4142, align 8
  store i64 %2728, ptr %uglygep2847, align 8
  store i64 %2727, ptr %sunkaddr4142, align 8
  %2729 = shl i64 %lsr.iv2843, 3
  %uglygep2845 = getelementptr i8, ptr %.126.i398212.i.i.unr, i64 %2729
  %uglygep2846 = getelementptr i8, ptr %uglygep2845, i64 -8
  %uglygep2852 = getelementptr i8, ptr %.029.i396210.i.i.unr, i64 %2729
  %uglygep2853 = getelementptr i8, ptr %uglygep2852, i64 -8
  %sunkaddr4143 = mul i64 %lsr.iv2837, 8
  %sunkaddr4144 = getelementptr i8, ptr %.024.i399213.i.i.unr, i64 %sunkaddr4143
  %sunkaddr4145 = getelementptr i8, ptr %sunkaddr4144, i64 16
  %2730 = load i64, ptr %sunkaddr4145, align 8
  %2731 = load i64, ptr %uglygep2853, align 8
  store i64 %2731, ptr %sunkaddr4145, align 8
  store i64 %2730, ptr %uglygep2853, align 8
  %2732 = load i64, ptr %uglygep2846, align 8
  %sunkaddr4146 = mul i64 %lsr.iv2837, 8
  %sunkaddr4147 = getelementptr i8, ptr %.128.i397211.i.i.unr, i64 %sunkaddr4146
  %sunkaddr4148 = getelementptr i8, ptr %sunkaddr4147, i64 16
  %2733 = load i64, ptr %sunkaddr4148, align 8
  store i64 %2733, ptr %uglygep2846, align 8
  store i64 %2732, ptr %sunkaddr4148, align 8
  %lsr.iv.next2838 = add i64 %lsr.iv2837, 2
  %lsr.iv.next2844 = add i64 %lsr.iv2843, -2
  %2734 = icmp eq i64 %.1.i400214.i.i.unr, %lsr.iv.next2838
  br i1 %2734, label %sort.quad_reversal.exit401.i.i, label %.lr.ph215.i.i, !llvm.loop !168

2735:                                             ; preds = %2743, %sort.quad_reversal.exit401.i.i
  %.0267.i.i146 = phi i4 [ 1, %2743 ], [ %1973, %sort.quad_reversal.exit401.i.i ]
  %.0266.i.i147 = phi i4 [ 1, %2743 ], [ %1970, %sort.quad_reversal.exit401.i.i ]
  %.0265.i.i148 = phi i4 [ 1, %2743 ], [ %1967, %sort.quad_reversal.exit401.i.i ]
  %.0264.i.i149 = phi i4 [ 1, %2743 ], [ %1964, %sort.quad_reversal.exit401.i.i ]
  %2736 = shl nuw nsw i4 %.0265.i.i148, 1
  %2737 = shl nuw nsw i4 %.0266.i.i147, 2
  %2738 = or i4 %2736, %2737
  %2739 = shl nuw i4 %.0267.i.i146, 3
  %2740 = or i4 %2738, %2739
  %2741 = or i4 %2740, %.0264.i.i149
  %2742 = zext i4 %2741 to i32
  switch i32 %2742, label %2752 [
    i32 0, label %2753
    i32 1, label %2755
    i32 2, label %2767
    i32 3, label %2780
    i32 4, label %2799
    i32 8, label %2812
    i32 9, label %2822
    i32 12, label %2842
    i32 5, label %2860
    i32 6, label %2860
    i32 7, label %2860
    i32 10, label %2860
    i32 11, label %2860
    i32 13, label %2860
    i32 14, label %2860
    i32 15, label %2860
  ]

2743:                                             ; preds = %sort.quad_reversal.exit401.i.i
  br label %2735

sort.quadsort_swap__anon_14514.exit406.i.i:       ; preds = %2908, %2906, %2905, %2898, %2897, %2858, %2856, %2855, %sort.quadsort_swap__anon_14514.exit409.i.i, %2840, %2838, %2837, %sort.quadsort_swap__anon_14514.exit407.i.i, %2820, %2818, %2817, %2812, %sort.quadsort_swap__anon_14514.exit405.i.i, %sort.quadsort_swap__anon_14514.exit404.i.i, %sort.quadsort_swap__anon_14514.exit402.i.i, %sort.quadsort_swap__anon_14514.exit.i.i
  %2744 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %2745 = load ptr, ptr %.3.lcssa.i.i111, align 8
  %2746 = load ptr, ptr %2744, align 8
  %2747 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2745, ptr align 1 %2746) #18
  %.not271.i.i150 = icmp eq i8 %2747, 1
  %2748 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %2749 = load ptr, ptr %.4220.lcssa.i.i109, align 8
  %2750 = load ptr, ptr %2748, align 8
  %2751 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2749, ptr align 1 %2750) #18
  br i1 %.not271.i.i150, label %2913, label %2911

2752:                                             ; preds = %2735
  unreachable

2753:                                             ; preds = %2735
  %2754 = getelementptr inbounds i8, ptr %1780, i64 %93
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %2754, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.flux_analyze__anon_13923.exit.i

2755:                                             ; preds = %2735
  %.not288.i.i152 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not288.i.i152, label %sort.quadsort_swap__anon_14514.exit.i.i, label %2760

sort.quadsort_swap__anon_14514.exit.i.i:          ; preds = %2765, %2763, %2762, %2755
  %2756 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2757 = add nuw i64 %1788, %1789
  %2758 = shl nuw i64 %2757, 3
  %2759 = getelementptr inbounds i8, ptr %1780, i64 %2758
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2756, ptr nonnull align 1 %1780, ptr nonnull align 1 %2756, ptr nonnull align 1 %2759, i64 %2757, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2760:                                             ; preds = %2755
  %2761 = icmp ult i64 %1, 384
  br i1 %2761, label %2762, label %2763

2762:                                             ; preds = %2760
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit.i.i

2763:                                             ; preds = %2760
  %2764 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %94, i64 %1787, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2764, label %2765, label %sort.quadsort_swap__anon_14514.exit.i.i

2765:                                             ; preds = %2763
  %2766 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, i64 %2766, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit.i.i

2767:                                             ; preds = %2735
  %2768 = getelementptr inbounds i8, ptr %1780, i64 %1792
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %2768, i64 %1787, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  %.not287.i.i153 = icmp eq i64 %.4240.i.i121, 0
  br i1 %.not287.i.i153, label %sort.quadsort_swap__anon_14514.exit402.i.i, label %2772

sort.quadsort_swap__anon_14514.exit402.i.i:       ; preds = %2778, %2776, %2775, %2767
  %2769 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2770 = shl nuw i64 %1789, 3
  %2771 = getelementptr inbounds i8, ptr %1780, i64 %2770
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2769, ptr nonnull align 1 %1780, ptr nonnull align 1 %2769, ptr nonnull align 1 %2771, i64 %1789, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2772:                                             ; preds = %2767
  %2773 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2774 = icmp ult i64 %1788, 96
  br i1 %2774, label %2775, label %2776

2775:                                             ; preds = %2772
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2773, i64 %1788, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit402.i.i

2776:                                             ; preds = %2772
  %2777 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2773, i64 %1788, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2777, label %2778, label %sort.quadsort_swap__anon_14514.exit402.i.i

2778:                                             ; preds = %2776
  %2779 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2773, i64 %1788, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2773, i64 %1788, ptr nonnull align 1 %1780, i64 %1, i64 %2779, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit402.i.i

2780:                                             ; preds = %2735
  %.not285.i.i154 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not285.i.i154, label %sort.quadsort_swap__anon_14514.exit403.i.i, label %2781

sort.quadsort_swap__anon_14514.exit403.i.i:       ; preds = %2786, %2784, %2783, %2780
  %.not286.i.i155 = icmp eq i64 %.4240.i.i121, 0
  br i1 %.not286.i.i155, label %sort.quadsort_swap__anon_14514.exit404.i.i, label %2791

2781:                                             ; preds = %2780
  %2782 = icmp ult i64 %1, 384
  br i1 %2782, label %2783, label %2784

2783:                                             ; preds = %2781
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit403.i.i

2784:                                             ; preds = %2781
  %2785 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %94, i64 %1787, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2785, label %2786, label %sort.quadsort_swap__anon_14514.exit403.i.i

2786:                                             ; preds = %2784
  %2787 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, i64 %2787, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit403.i.i

sort.quadsort_swap__anon_14514.exit404.i.i:       ; preds = %2797, %2795, %2794, %sort.quadsort_swap__anon_14514.exit403.i.i
  %2788 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2789 = shl nuw i64 %1789, 3
  %2790 = getelementptr inbounds i8, ptr %1780, i64 %2789
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2788, ptr nonnull align 1 %1780, ptr nonnull align 1 %2788, ptr nonnull align 1 %2790, i64 %1789, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2791:                                             ; preds = %sort.quadsort_swap__anon_14514.exit403.i.i
  %2792 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2793 = icmp ult i64 %1788, 96
  br i1 %2793, label %2794, label %2795

2794:                                             ; preds = %2791
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2792, i64 %1788, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit404.i.i

2795:                                             ; preds = %2791
  %2796 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2792, i64 %1788, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2796, label %2797, label %sort.quadsort_swap__anon_14514.exit404.i.i

2797:                                             ; preds = %2795
  %2798 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2792, i64 %1788, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2792, i64 %1788, ptr nonnull align 1 %1780, i64 %1, i64 %2798, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit404.i.i

2799:                                             ; preds = %2735
  %2800 = getelementptr inbounds i8, ptr %1780, i64 %1794
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %2800, i64 %1786, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  %.not284.i.i156 = icmp eq i64 %.4247.i.i120, 0
  br i1 %.not284.i.i156, label %sort.quadsort_swap__anon_14514.exit405.i.i, label %2804

sort.quadsort_swap__anon_14514.exit405.i.i:       ; preds = %2810, %2808, %2807, %2799
  %2801 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2802 = shl nuw i64 %1791, 3
  %2803 = getelementptr inbounds i8, ptr %1780, i64 %2802
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2801, ptr nonnull align 1 %1780, ptr nonnull align 1 %2801, ptr nonnull align 1 %2803, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2804:                                             ; preds = %2799
  %2805 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2806 = icmp ult i64 %1789, 192
  br i1 %2806, label %2807, label %2808

2807:                                             ; preds = %2804
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2805, i64 %1790, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit405.i.i

2808:                                             ; preds = %2804
  %2809 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2805, i64 %1790, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2809, label %2810, label %sort.quadsort_swap__anon_14514.exit405.i.i

2810:                                             ; preds = %2808
  %2811 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2805, i64 %1790, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2805, i64 %1790, ptr nonnull align 1 %1780, i64 %1, i64 %2811, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit405.i.i

2812:                                             ; preds = %2735
  %2813 = getelementptr inbounds i8, ptr %1780, i64 %1797
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %2813, i64 %1796, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  %.not283.i.i157 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not283.i.i157, label %sort.quadsort_swap__anon_14514.exit406.i.i, label %2814

2814:                                             ; preds = %2812
  %2815 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2816 = icmp ult i64 %1791, 96
  br i1 %2816, label %2817, label %2818

2817:                                             ; preds = %2814
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2815, i64 %1791, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2818:                                             ; preds = %2814
  %2819 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2815, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2819, label %2820, label %sort.quadsort_swap__anon_14514.exit406.i.i

2820:                                             ; preds = %2818
  %2821 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2815, i64 %1791, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2815, i64 %1791, ptr nonnull align 1 %1780, i64 %1, i64 %2821, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2822:                                             ; preds = %2735
  %.not281.i.i158 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not281.i.i158, label %sort.quadsort_swap__anon_14514.exit407.i.i, label %2827

sort.quadsort_swap__anon_14514.exit407.i.i:       ; preds = %2832, %2830, %2829, %2822
  %2823 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2824 = add nuw i64 %1790, %1788
  %2825 = shl nuw i64 %2824, 3
  %2826 = getelementptr inbounds i8, ptr %1780, i64 %2825
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2823, ptr nonnull align 1 %1780, ptr nonnull align 1 %2823, ptr nonnull align 1 %2826, i64 %2824, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  %.not282.i.i159 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not282.i.i159, label %sort.quadsort_swap__anon_14514.exit406.i.i, label %2834

2827:                                             ; preds = %2822
  %2828 = icmp ult i64 %1, 384
  br i1 %2828, label %2829, label %2830

2829:                                             ; preds = %2827
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit407.i.i

2830:                                             ; preds = %2827
  %2831 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %94, i64 %1787, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2831, label %2832, label %sort.quadsort_swap__anon_14514.exit407.i.i

2832:                                             ; preds = %2830
  %2833 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, i64 %2833, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit407.i.i

2834:                                             ; preds = %sort.quadsort_swap__anon_14514.exit407.i.i
  %2835 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2836 = icmp ult i64 %1791, 96
  br i1 %2836, label %2837, label %2838

2837:                                             ; preds = %2834
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2835, i64 %1791, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2838:                                             ; preds = %2834
  %2839 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2835, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2839, label %2840, label %sort.quadsort_swap__anon_14514.exit406.i.i

2840:                                             ; preds = %2838
  %2841 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2835, i64 %1791, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2835, i64 %1791, ptr nonnull align 1 %1780, i64 %1, i64 %2841, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2842:                                             ; preds = %2735
  %2843 = getelementptr inbounds i8, ptr %1780, i64 %1794
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %2843, i64 %1786, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  %.not279.i.i160 = icmp eq i64 %.4247.i.i120, 0
  br i1 %.not279.i.i160, label %sort.quadsort_swap__anon_14514.exit409.i.i, label %2844

sort.quadsort_swap__anon_14514.exit409.i.i:       ; preds = %2850, %2848, %2847, %2842
  %.not280.i.i161 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not280.i.i161, label %sort.quadsort_swap__anon_14514.exit406.i.i, label %2852

2844:                                             ; preds = %2842
  %2845 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2846 = icmp ult i64 %1789, 192
  br i1 %2846, label %2847, label %2848

2847:                                             ; preds = %2844
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2845, i64 %1790, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit409.i.i

2848:                                             ; preds = %2844
  %2849 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2845, i64 %1790, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2849, label %2850, label %sort.quadsort_swap__anon_14514.exit409.i.i

2850:                                             ; preds = %2848
  %2851 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2845, i64 %1790, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2845, i64 %1790, ptr nonnull align 1 %1780, i64 %1, i64 %2851, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit409.i.i

2852:                                             ; preds = %sort.quadsort_swap__anon_14514.exit409.i.i
  %2853 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2854 = icmp ult i64 %1791, 96
  br i1 %2854, label %2855, label %2856

2855:                                             ; preds = %2852
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2853, i64 %1791, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2856:                                             ; preds = %2852
  %2857 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2853, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2857, label %2858, label %sort.quadsort_swap__anon_14514.exit406.i.i

2858:                                             ; preds = %2856
  %2859 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2853, i64 %1791, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2853, i64 %1791, ptr nonnull align 1 %1780, i64 %1, i64 %2859, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2860:                                             ; preds = %2735, %2735, %2735, %2735, %2735, %2735, %2735, %2735
  %.not.i.i162 = icmp eq i4 %.0264.i.i149, 0
  br i1 %.not.i.i162, label %2862, label %2861

sort.quadsort_swap__anon_14514.exit411.i.i:       ; preds = %2869, %2867, %2866, %2862, %2861
  %.not268.i.i163 = icmp eq i4 %.0265.i.i148, 0
  br i1 %.not268.i.i163, label %2872, label %2871

2861:                                             ; preds = %2860
  %.not278.i.i164 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not278.i.i164, label %sort.quadsort_swap__anon_14514.exit411.i.i, label %2864

2862:                                             ; preds = %2860
  %2863 = getelementptr inbounds i8, ptr %1780, i64 %1792
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %2863, i64 %1787, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit411.i.i

2864:                                             ; preds = %2861
  %2865 = icmp ult i64 %1, 384
  br i1 %2865, label %2866, label %2867

2866:                                             ; preds = %2864
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit411.i.i

2867:                                             ; preds = %2864
  %2868 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %94, i64 %1787, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2868, label %2869, label %sort.quadsort_swap__anon_14514.exit411.i.i

2869:                                             ; preds = %2867
  %2870 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %94, i64 %1787, ptr nonnull align 1 %1780, i64 %1, i64 %2870, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit411.i.i

sort.quadsort_swap__anon_14514.exit412.i.i:       ; preds = %2882, %2880, %2879, %2872, %2871
  %.not269.i.i165 = icmp eq i4 %.0266.i.i147, 0
  br i1 %.not269.i.i165, label %2885, label %2884

2871:                                             ; preds = %sort.quadsort_swap__anon_14514.exit411.i.i
  %.not277.i.i166 = icmp eq i64 %.4240.i.i121, 0
  br i1 %.not277.i.i166, label %sort.quadsort_swap__anon_14514.exit412.i.i, label %2876

2872:                                             ; preds = %sort.quadsort_swap__anon_14514.exit411.i.i
  %2873 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2874 = shl nuw i64 %1788, 3
  %2875 = getelementptr inbounds i8, ptr %1780, i64 %2874
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2873, ptr nonnull align 1 %1780, ptr nonnull align 1 %2873, ptr nonnull align 1 %2875, i64 %1788, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit412.i.i

2876:                                             ; preds = %2871
  %2877 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2878 = icmp ult i64 %1788, 96
  br i1 %2878, label %2879, label %2880

2879:                                             ; preds = %2876
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2877, i64 %1788, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit412.i.i

2880:                                             ; preds = %2876
  %2881 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2877, i64 %1788, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2881, label %2882, label %sort.quadsort_swap__anon_14514.exit412.i.i

2882:                                             ; preds = %2880
  %2883 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2877, i64 %1788, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2877, i64 %1788, ptr nonnull align 1 %1780, i64 %1, i64 %2883, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit412.i.i

sort.quadsort_swap__anon_14514.exit413.i.i:       ; preds = %2895, %2893, %2892, %2885, %2884
  %.not270.i.i167 = icmp eq i4 %.0267.i.i146, 0
  br i1 %.not270.i.i167, label %2898, label %2897

2884:                                             ; preds = %sort.quadsort_swap__anon_14514.exit412.i.i
  %.not276.i.i168 = icmp eq i64 %.4247.i.i120, 0
  br i1 %.not276.i.i168, label %sort.quadsort_swap__anon_14514.exit413.i.i, label %2889

2885:                                             ; preds = %sort.quadsort_swap__anon_14514.exit412.i.i
  %2886 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2887 = shl nuw i64 %1790, 3
  %2888 = getelementptr inbounds i8, ptr %1780, i64 %2887
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2886, ptr nonnull align 1 %1780, ptr nonnull align 1 %2886, ptr nonnull align 1 %2888, i64 %1790, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit413.i.i

2889:                                             ; preds = %2884
  %2890 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2891 = icmp ult i64 %1789, 192
  br i1 %2891, label %2892, label %2893

2892:                                             ; preds = %2889
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2890, i64 %1790, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit413.i.i

2893:                                             ; preds = %2889
  %2894 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2890, i64 %1790, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2894, label %2895, label %sort.quadsort_swap__anon_14514.exit413.i.i

2895:                                             ; preds = %2893
  %2896 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2890, i64 %1790, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2890, i64 %1790, ptr nonnull align 1 %1780, i64 %1, i64 %2896, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit413.i.i

2897:                                             ; preds = %sort.quadsort_swap__anon_14514.exit413.i.i
  %.not275.i.i169 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not275.i.i169, label %sort.quadsort_swap__anon_14514.exit406.i.i, label %2902

2898:                                             ; preds = %sort.quadsort_swap__anon_14514.exit413.i.i
  %2899 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2900 = shl nuw i64 %1791, 3
  %2901 = getelementptr inbounds i8, ptr %1780, i64 %2900
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %2899, ptr nonnull align 1 %1780, ptr nonnull align 1 %2899, ptr nonnull align 1 %2901, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2902:                                             ; preds = %2897
  %2903 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2904 = icmp ult i64 %1791, 96
  br i1 %2904, label %2905, label %2906

2905:                                             ; preds = %2902
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %2903, i64 %1791, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2906:                                             ; preds = %2902
  %2907 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %2903, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br i1 %2907, label %2908, label %sort.quadsort_swap__anon_14514.exit406.i.i

2908:                                             ; preds = %2906
  %2909 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %2903, i64 %1791, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %2903, i64 %1791, ptr nonnull align 1 %1780, i64 %1, i64 %2909, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.quadsort_swap__anon_14514.exit406.i.i

2910:                                             ; preds = %2926, %2924, %2923, %2921
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, i64 %1786, i64 %1789, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.flux_analyze__anon_13923.exit.i

2911:                                             ; preds = %sort.quadsort_swap__anon_14514.exit406.i.i
  %2912 = icmp eq i8 %2751, 1
  br i1 %2912, label %2921, label %2916

2913:                                             ; preds = %sort.quadsort_swap__anon_14514.exit406.i.i
  %2914 = icmp eq i8 %2751, 1
  %2915 = getelementptr inbounds i8, ptr %1780, i64 %1794
  br i1 %2914, label %2926, label %2924

2916:                                             ; preds = %2911
  %2917 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #18
  %2918 = load ptr, ptr %.4.lcssa.i.i110, align 8
  %2919 = load ptr, ptr %2917, align 8
  %2920 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2918, ptr align 1 %2919) #18
  %.not274.i.i170 = icmp eq i8 %2920, 1
  br i1 %.not274.i.i170, label %2923, label %sort.flux_analyze__anon_13923.exit.i

2921:                                             ; preds = %2911
  %2922 = getelementptr inbounds i8, ptr %1780, i64 %1794
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %2922, ptr nonnull align 1 %1795, i64 %1790, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %1794, i1 false)
  br label %2910

2923:                                             ; preds = %2916
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %93, i1 false)
  br label %2910

2924:                                             ; preds = %2913
  %2925 = shl nuw i64 %1789, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2915, ptr nonnull align 1 %1795, i64 %2925, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %1787, i64 %1788, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %2910

2926:                                             ; preds = %2913
  %2927 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %2915, ptr nonnull align 1 %2927, i64 %1790, i64 %1791, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %1787, i64 %1788, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %2910

sort.flux_analyze__anon_13923.exit.i:             ; preds = %2916, %2910, %2753, %.lr.ph149.i.i, %.lr.ph149.i.i.prol.loopexit, %middle.block1583, %._crit_edge.i352.i.i, %1956
  tail call void @roc_dealloc(ptr nonnull align 1 %1780, i32 8)
  br label %sort.fluxsort_direct__anon_13236.exit

2928:                                             ; preds = %1783
  tail call fastcc void @sort.quadsort_direct__anon_13919(ptr nonnull align 1 %94, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %5)
  br label %sort.fluxsort_direct__anon_13236.exit

2929:                                             ; preds = %._crit_edge
  %2930 = icmp eq ptr %1780, null
  br i1 %2930, label %4072, label %2931

2931:                                             ; preds = %2929
  %2932 = lshr i64 %1, 1
  %2933 = lshr i64 %1, 2
  %2934 = sub nuw nsw i64 %2932, %2933
  %2935 = sub nuw i64 %1, %2932
  %2936 = lshr i64 %2935, 1
  %2937 = sub nuw i64 %2935, %2936
  %2938 = shl nuw i64 %2933, 3
  %2939 = getelementptr inbounds i8, ptr %94, i64 %2938
  %2940 = shl nuw i64 %2932, 3
  %2941 = getelementptr inbounds i8, ptr %94, i64 %2940
  %2942 = add nuw i64 %2936, %2932
  %2943 = shl nuw i64 %2942, 3
  %2944 = getelementptr inbounds i8, ptr %94, i64 %2943
  %2945 = icmp ult i64 %2933, %2934
  br i1 %2945, label %2948, label %2946

2946:                                             ; preds = %2948, %2931
  %.0234.i.i172 = phi i64 [ %2954, %2948 ], [ 0, %2931 ]
  %.0210.i.i173 = phi ptr [ %2949, %2948 ], [ %2939, %2931 ]
  %2947 = icmp ult i64 %2933, %2936
  br i1 %2947, label %2957, label %2955

2948:                                             ; preds = %2931
  %2949 = getelementptr inbounds i8, ptr %2939, i64 8
  %2950 = load ptr, ptr %2939, align 8
  %2951 = load ptr, ptr %2949, align 8
  %2952 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2950, ptr align 1 %2951) #18
  %2953 = icmp eq i8 %2952, 1
  %2954 = zext i1 %2953 to i64
  br label %2946

2955:                                             ; preds = %2957, %2946
  %.0241.i.i174 = phi i64 [ %2963, %2957 ], [ 0, %2946 ]
  %.0214.i.i175 = phi ptr [ %2958, %2957 ], [ %2941, %2946 ]
  %2956 = icmp ult i64 %2933, %2937
  br i1 %2956, label %2966, label %2964

2957:                                             ; preds = %2946
  %2958 = getelementptr inbounds i8, ptr %2941, i64 8
  %2959 = load ptr, ptr %2941, align 8
  %2960 = load ptr, ptr %2958, align 8
  %2961 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2959, ptr align 1 %2960) #18
  %2962 = icmp eq i8 %2961, 1
  %2963 = zext i1 %2962 to i64
  br label %2955

2964:                                             ; preds = %2966, %2955
  %.0248.i.i176 = phi i64 [ %2972, %2966 ], [ 0, %2955 ]
  %.0219.i.i177 = phi ptr [ %2967, %2966 ], [ %2944, %2955 ]
  %2965 = icmp ugt i64 %1, 132
  br i1 %2965, label %.preheader89.i.i.preheader, label %.preheader.i.i192

.preheader89.i.i.preheader:                       ; preds = %2964
  br label %.preheader89.i.i

2966:                                             ; preds = %2955
  %2967 = getelementptr inbounds i8, ptr %2944, i64 8
  %2968 = load ptr, ptr %2944, align 8
  %2969 = load ptr, ptr %2967, align 8
  %2970 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2968, ptr align 1 %2969) #18
  %2971 = icmp eq i8 %2970, 1
  %2972 = zext i1 %2971 to i64
  br label %2964

.preheader89.i.i:                                 ; preds = %.critedge.i.i204, %.preheader89.i.i.preheader
  %.0111.i.i178 = phi ptr [ %.2.i.i203, %.critedge.i.i204 ], [ %94, %.preheader89.i.i.preheader ]
  %.1211110.i.i = phi ptr [ %.3213.i.i202, %.critedge.i.i204 ], [ %.0210.i.i173, %.preheader89.i.i.preheader ]
  %.1215109.i.i = phi ptr [ %.3217.i.i201, %.critedge.i.i204 ], [ %.0214.i.i175, %.preheader89.i.i.preheader ]
  %.1220108.i.i = phi ptr [ %.3222.i.i200, %.critedge.i.i204 ], [ %.0219.i.i177, %.preheader89.i.i.preheader ]
  %.0224107.i.i = phi i32 [ %3005, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0225106.i.i = phi i32 [ %3011, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0226105.i.i = phi i32 [ %3017, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0227104.i.i = phi i32 [ %3023, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0228103.i.i = phi i64 [ %.1229.i.i199, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.1235102.i.i = phi i64 [ %.2236.i.i198, %.critedge.i.i204 ], [ %.0234.i.i172, %.preheader89.i.i.preheader ]
  %.1242101.i.i = phi i64 [ %.2243.i.i197, %.critedge.i.i204 ], [ %.0241.i.i174, %.preheader89.i.i.preheader ]
  %.1249100.i.i = phi i64 [ %.2250.i.i196, %.critedge.i.i204 ], [ %.0248.i.i176, %.preheader89.i.i.preheader ]
  %.025499.i.i = phi i64 [ %3025, %.critedge.i.i204 ], [ %1, %.preheader89.i.i.preheader ]
  br label %2974

.preheader.i.i192:                                ; preds = %.critedge.i.i204, %2964
  %.0254.lcssa.i.i179 = phi i64 [ %1, %2964 ], [ %3025, %.critedge.i.i204 ]
  %.1249.lcssa.i.i180 = phi i64 [ %.0248.i.i176, %2964 ], [ %.2250.i.i196, %.critedge.i.i204 ]
  %.1242.lcssa.i.i181 = phi i64 [ %.0241.i.i174, %2964 ], [ %.2243.i.i197, %.critedge.i.i204 ]
  %.1235.lcssa.i.i182 = phi i64 [ %.0234.i.i172, %2964 ], [ %.2236.i.i198, %.critedge.i.i204 ]
  %.0228.lcssa.i.i183 = phi i64 [ 0, %2964 ], [ %.1229.i.i199, %.critedge.i.i204 ]
  %.0227.lcssa.i.i184 = phi i32 [ 0, %2964 ], [ %3023, %.critedge.i.i204 ]
  %.0226.lcssa.i.i185 = phi i32 [ 0, %2964 ], [ %3017, %.critedge.i.i204 ]
  %.0225.lcssa.i.i186 = phi i32 [ 0, %2964 ], [ %3011, %.critedge.i.i204 ]
  %.0224.lcssa.i.i187 = phi i32 [ 0, %2964 ], [ %3005, %.critedge.i.i204 ]
  %.1220.lcssa.i.i188 = phi ptr [ %.0219.i.i177, %2964 ], [ %.3222.i.i200, %.critedge.i.i204 ]
  %.1215.lcssa.i.i189 = phi ptr [ %.0214.i.i175, %2964 ], [ %.3217.i.i201, %.critedge.i.i204 ]
  %.1211.lcssa.i.i190 = phi ptr [ %.0210.i.i173, %2964 ], [ %.3213.i.i202, %.critedge.i.i204 ]
  %.0.lcssa.i.i191 = phi ptr [ %94, %2964 ], [ %.2.i.i203, %.critedge.i.i204 ]
  %2973 = icmp ugt i64 %.0254.lcssa.i.i179, 7
  br i1 %2973, label %.lr.ph.i.i208.preheader, label %._crit_edge.i.i217

.lr.ph.i.i208.preheader:                          ; preds = %.preheader.i.i192
  br label %.lr.ph.i.i208

2974:                                             ; preds = %2974, %.preheader89.i.i
  %lsr.iv3415 = phi i64 [ %lsr.iv.next3416, %2974 ], [ 0, %.preheader89.i.i ]
  %.025794.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2980, %2974 ]
  %.025893.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2986, %2974 ]
  %.025992.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2992, %2974 ]
  %.026091.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2998, %2974 ]
  %uglygep3419 = getelementptr i8, ptr %.0111.i.i178, i64 %lsr.iv3415
  %uglygep3425 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv3415
  %uglygep3431 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv3415
  %uglygep3437 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv3415
  %uglygep3420 = getelementptr i8, ptr %uglygep3419, i64 8
  %2975 = load ptr, ptr %uglygep3419, align 8
  %2976 = load ptr, ptr %uglygep3420, align 8
  %2977 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2975, ptr align 1 %2976) #18
  %2978 = icmp eq i8 %2977, 1
  %2979 = zext i1 %2978 to i8
  %2980 = add nuw i8 %.025794.i.i, %2979
  %uglygep3426 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv3415
  %uglygep3427 = getelementptr i8, ptr %uglygep3426, i64 8
  %2981 = load ptr, ptr %uglygep3425, align 8
  %2982 = load ptr, ptr %uglygep3427, align 8
  %2983 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2981, ptr align 1 %2982) #18
  %2984 = icmp eq i8 %2983, 1
  %2985 = zext i1 %2984 to i8
  %2986 = add nuw i8 %.025893.i.i, %2985
  %uglygep3432 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv3415
  %uglygep3433 = getelementptr i8, ptr %uglygep3432, i64 8
  %2987 = load ptr, ptr %uglygep3431, align 8
  %2988 = load ptr, ptr %uglygep3433, align 8
  %2989 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2987, ptr align 1 %2988) #18
  %2990 = icmp eq i8 %2989, 1
  %2991 = zext i1 %2990 to i8
  %2992 = add nuw i8 %.025992.i.i, %2991
  %uglygep3438 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv3415
  %uglygep3439 = getelementptr i8, ptr %uglygep3438, i64 8
  %2993 = load ptr, ptr %uglygep3437, align 8
  %2994 = load ptr, ptr %uglygep3439, align 8
  %2995 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2993, ptr align 1 %2994) #18
  %2996 = icmp eq i8 %2995, 1
  %2997 = zext i1 %2996 to i8
  %2998 = add nuw i8 %.026091.i.i, %2997
  %lsr.iv.next3416 = add nuw nsw i64 %lsr.iv3415, 8
  %exitcond.not.i.i194 = icmp eq i64 %lsr.iv.next3416, 256
  br i1 %exitcond.not.i.i194, label %2999, label %2974

2999:                                             ; preds = %2974
  %3000 = zext i8 %2980 to i64
  %3001 = add nuw i64 %.0228103.i.i, %3000
  %3002 = and i8 %2980, -33
  %3003 = icmp eq i8 %3002, 0
  %3004 = zext i1 %3003 to i32
  %3005 = add nuw i32 %.0224107.i.i, %3004
  %3006 = zext i8 %2986 to i64
  %3007 = add nuw i64 %.1235102.i.i, %3006
  %3008 = and i8 %2986, -33
  %3009 = icmp eq i8 %3008, 0
  %3010 = zext i1 %3009 to i32
  %3011 = add nuw i32 %.0225106.i.i, %3010
  %3012 = zext i8 %2992 to i64
  %3013 = add nuw i64 %.1242101.i.i, %3012
  %3014 = and i8 %2992, -33
  %3015 = icmp eq i8 %3014, 0
  %3016 = zext i1 %3015 to i32
  %3017 = add nuw i32 %.0226105.i.i, %3016
  %3018 = zext i8 %2998 to i64
  %3019 = add nuw i64 %.1249100.i.i, %3018
  %3020 = and i8 %2998, -33
  %3021 = icmp eq i8 %3020, 0
  %3022 = zext i1 %3021 to i32
  %3023 = add nuw i32 %.0227104.i.i, %3022
  %3024 = icmp ugt i64 %.025499.i.i, 516
  %uglygep3421 = getelementptr i8, ptr %.0111.i.i178, i64 %lsr.iv.next3416
  %uglygep3428 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv.next3416
  %uglygep3434 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv.next3416
  %uglygep3440 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv.next3416
  br i1 %3024, label %3027, label %.critedge.i.i204

.critedge.i.i204:                                 ; preds = %3042, %3027, %2999
  %.1255.i.i195 = phi i64 [ %3047, %3042 ], [ %.025499.i.i, %2999 ], [ %.025499.i.i, %3027 ]
  %.2250.i.i196 = phi i64 [ %3046, %3042 ], [ %3019, %2999 ], [ %3019, %3027 ]
  %.2243.i.i197 = phi i64 [ %3045, %3042 ], [ %3013, %2999 ], [ %3013, %3027 ]
  %.2236.i.i198 = phi i64 [ %3044, %3042 ], [ %3007, %2999 ], [ %3007, %3027 ]
  %.1229.i.i199 = phi i64 [ %3043, %3042 ], [ %3001, %2999 ], [ %3001, %3027 ]
  %.3222.i.i200 = phi ptr [ %uglygep3436, %3042 ], [ %uglygep3440, %2999 ], [ %uglygep3440, %3027 ]
  %.3217.i.i201 = phi ptr [ %uglygep3430, %3042 ], [ %uglygep3434, %2999 ], [ %uglygep3434, %3027 ]
  %.3213.i.i202 = phi ptr [ %uglygep3424, %3042 ], [ %uglygep3428, %2999 ], [ %uglygep3428, %3027 ]
  %.2.i.i203 = phi ptr [ %uglygep3418, %3042 ], [ %uglygep3421, %2999 ], [ %uglygep3421, %3027 ]
  %3025 = add i64 %.1255.i.i195, -128
  %3026 = icmp ugt i64 %3025, 132
  br i1 %3026, label %.preheader89.i.i, label %.preheader.i.i192

3027:                                             ; preds = %2999
  %3028 = and i8 %2998, -33
  %3029 = icmp eq i8 %3028, 0
  %3030 = and i8 %2992, -33
  %3031 = icmp eq i8 %3030, 0
  %3032 = and i8 %2986, -33
  %3033 = icmp eq i8 %3032, 0
  %3034 = and i8 %2980, -33
  %3035 = icmp eq i8 %3034, 0
  %.neg.i.i205 = sext i1 %3029 to i8
  %3036 = zext i1 %3031 to i8
  %3037 = zext i1 %3033 to i8
  %3038 = zext i1 %3035 to i8
  %3039 = add nuw nsw i8 %3037, %3038
  %3040 = add nuw nsw i8 %3039, %3036
  %3041 = icmp eq i8 %3040, %.neg.i.i205
  br i1 %3041, label %3042, label %.critedge.i.i204

3042:                                             ; preds = %3027
  %3043 = add nuw i64 %3001, 48
  %uglygep3417 = getelementptr i8, ptr %.0111.i.i178, i64 %lsr.iv.next3416
  %uglygep3418 = getelementptr i8, ptr %uglygep3417, i64 768
  %3044 = add nuw i64 %3007, 48
  %uglygep3423 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv.next3416
  %uglygep3424 = getelementptr i8, ptr %uglygep3423, i64 768
  %3045 = add nuw i64 %3013, 48
  %uglygep3429 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv.next3416
  %uglygep3430 = getelementptr i8, ptr %uglygep3429, i64 768
  %3046 = add nuw i64 %3019, 48
  %uglygep3435 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv.next3416
  %uglygep3436 = getelementptr i8, ptr %uglygep3435, i64 768
  %3047 = add i64 %.025499.i.i, -384
  br label %.critedge.i.i204

.lr.ph.i.i208:                                    ; preds = %.lr.ph.i.i208, %.lr.ph.i.i208.preheader
  %.3132.i.i206 = phi ptr [ %3048, %.lr.ph.i.i208 ], [ %.0.lcssa.i.i191, %.lr.ph.i.i208.preheader ]
  %.4131.i.i207 = phi ptr [ %3055, %.lr.ph.i.i208 ], [ %.1211.lcssa.i.i190, %.lr.ph.i.i208.preheader ]
  %.4218130.i.i = phi ptr [ %3062, %.lr.ph.i.i208 ], [ %.1215.lcssa.i.i189, %.lr.ph.i.i208.preheader ]
  %.4223129.i.i = phi ptr [ %3069, %.lr.ph.i.i208 ], [ %.1220.lcssa.i.i188, %.lr.ph.i.i208.preheader ]
  %.2230128.i.i = phi i64 [ %3054, %.lr.ph.i.i208 ], [ %.0228.lcssa.i.i183, %.lr.ph.i.i208.preheader ]
  %.3237127.i.i = phi i64 [ %3061, %.lr.ph.i.i208 ], [ %.1235.lcssa.i.i182, %.lr.ph.i.i208.preheader ]
  %.3244126.i.i = phi i64 [ %3068, %.lr.ph.i.i208 ], [ %.1242.lcssa.i.i181, %.lr.ph.i.i208.preheader ]
  %.3251125.i.i = phi i64 [ %3075, %.lr.ph.i.i208 ], [ %.1249.lcssa.i.i180, %.lr.ph.i.i208.preheader ]
  %.2256124.i.i = phi i64 [ %3076, %.lr.ph.i.i208 ], [ %.0254.lcssa.i.i179, %.lr.ph.i.i208.preheader ]
  %3048 = getelementptr inbounds i8, ptr %.3132.i.i206, i64 8
  %3049 = load ptr, ptr %.3132.i.i206, align 8
  %3050 = load ptr, ptr %3048, align 8
  %3051 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3049, ptr align 1 %3050) #18
  %3052 = icmp eq i8 %3051, 1
  %3053 = zext i1 %3052 to i64
  %3054 = add nuw i64 %.2230128.i.i, %3053
  %3055 = getelementptr inbounds i8, ptr %.4131.i.i207, i64 8
  %3056 = load ptr, ptr %.4131.i.i207, align 8
  %3057 = load ptr, ptr %3055, align 8
  %3058 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3056, ptr align 1 %3057) #18
  %3059 = icmp eq i8 %3058, 1
  %3060 = zext i1 %3059 to i64
  %3061 = add nuw i64 %.3237127.i.i, %3060
  %3062 = getelementptr inbounds i8, ptr %.4218130.i.i, i64 8
  %3063 = load ptr, ptr %.4218130.i.i, align 8
  %3064 = load ptr, ptr %3062, align 8
  %3065 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3063, ptr align 1 %3064) #18
  %3066 = icmp eq i8 %3065, 1
  %3067 = zext i1 %3066 to i64
  %3068 = add nuw i64 %.3244126.i.i, %3067
  %3069 = getelementptr inbounds i8, ptr %.4223129.i.i, i64 8
  %3070 = load ptr, ptr %.4223129.i.i, align 8
  %3071 = load ptr, ptr %3069, align 8
  %3072 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3070, ptr align 1 %3071) #18
  %3073 = icmp eq i8 %3072, 1
  %3074 = zext i1 %3073 to i64
  %3075 = add nuw i64 %.3251125.i.i, %3074
  %3076 = add i64 %.2256124.i.i, -4
  %3077 = icmp ugt i64 %3076, 7
  br i1 %3077, label %.lr.ph.i.i208, label %._crit_edge.i.i217

._crit_edge.i.i217:                               ; preds = %.lr.ph.i.i208, %.preheader.i.i192
  %.3251.lcssa.i.i209 = phi i64 [ %.1249.lcssa.i.i180, %.preheader.i.i192 ], [ %3075, %.lr.ph.i.i208 ]
  %.3244.lcssa.i.i210 = phi i64 [ %.1242.lcssa.i.i181, %.preheader.i.i192 ], [ %3068, %.lr.ph.i.i208 ]
  %.3237.lcssa.i.i211 = phi i64 [ %.1235.lcssa.i.i182, %.preheader.i.i192 ], [ %3061, %.lr.ph.i.i208 ]
  %.2230.lcssa.i.i212 = phi i64 [ %.0228.lcssa.i.i183, %.preheader.i.i192 ], [ %3054, %.lr.ph.i.i208 ]
  %.4223.lcssa.i.i213 = phi ptr [ %.1220.lcssa.i.i188, %.preheader.i.i192 ], [ %3069, %.lr.ph.i.i208 ]
  %.4218.lcssa.i.i214 = phi ptr [ %.1215.lcssa.i.i189, %.preheader.i.i192 ], [ %3062, %.lr.ph.i.i208 ]
  %.4.lcssa.i.i215 = phi ptr [ %.1211.lcssa.i.i190, %.preheader.i.i192 ], [ %3055, %.lr.ph.i.i208 ]
  %.3.lcssa.i.i216 = phi ptr [ %.0.lcssa.i.i191, %.preheader.i.i192 ], [ %3048, %.lr.ph.i.i208 ]
  %3078 = add i64 %.3237.lcssa.i.i211, %.3244.lcssa.i.i210
  %3079 = add i64 %3078, %.2230.lcssa.i.i212
  %3080 = sub i64 0, %.3251.lcssa.i.i209
  %3081 = icmp eq i64 %3079, %3080
  br i1 %3081, label %3090, label %.critedge2.i.i221

.critedge2.i.i221:                                ; preds = %3100, %3095, %3090, %._crit_edge.i.i217
  %3082 = sub nuw i64 %2933, %.2230.lcssa.i.i212
  %3083 = icmp eq i64 %3082, 1
  %3084 = sub nuw i64 %2934, %.3237.lcssa.i.i211
  %3085 = icmp eq i64 %3084, 1
  %3086 = sub nuw i64 %2936, %.3244.lcssa.i.i210
  %3087 = icmp eq i64 %3086, 1
  %3088 = sub nuw i64 %2937, %.3251.lcssa.i.i209
  %3089 = icmp eq i64 %3088, 1
  %..i.i218 = select i1 %3083, i1 true, i1 %3085
  %.5.i.i219 = select i1 %..i.i218, i1 true, i1 %3087
  %.6.i.i220 = select i1 %.5.i.i219, i1 true, i1 %3089
  br i1 %.6.i.i220, label %3119, label %sort.quad_reversal.exit399.i.i229

3090:                                             ; preds = %._crit_edge.i.i217
  %3091 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3092 = load ptr, ptr %.3.lcssa.i.i216, align 8
  %3093 = load ptr, ptr %3091, align 8
  %3094 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3092, ptr align 1 %3093) #18
  %.not287.i.i222 = icmp eq i8 %3094, 1
  br i1 %.not287.i.i222, label %.critedge2.i.i221, label %3095

3095:                                             ; preds = %3090
  %3096 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3097 = load ptr, ptr %.4.lcssa.i.i215, align 8
  %3098 = load ptr, ptr %3096, align 8
  %3099 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3097, ptr align 1 %3098) #18
  %.not288.i.i223 = icmp eq i8 %3099, 1
  br i1 %.not288.i.i223, label %.critedge2.i.i221, label %3100

3100:                                             ; preds = %3095
  %3101 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3102 = load ptr, ptr %.4218.lcssa.i.i214, align 8
  %3103 = load ptr, ptr %3101, align 8
  %3104 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3102, ptr align 1 %3103) #18
  %.not289.i.i224 = icmp eq i8 %3104, 1
  br i1 %.not289.i.i224, label %.critedge2.i.i221, label %sort.flux_analyze__anon_13924.exit.i

sort.quad_reversal.exit399.i.i229:                ; preds = %.lr.ph212.i.i, %.lr.ph212.i.i.prol.loopexit, %middle.block1512, %._crit_edge.i390.i.i, %sort.quad_reversal.exit389.i.i, %.lr.ph164.i.i, %.lr.ph164.i.i.prol.loopexit, %middle.block944, %._crit_edge.i330.i.i, %.critedge2.i.i221
  %.4252.i.i225 = phi i64 [ %.5253627178.i.i, %sort.quad_reversal.exit389.i.i ], [ %.3251.lcssa.i.i209, %.critedge2.i.i221 ], [ 0, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ 0, %middle.block1512 ], [ 0, %middle.block944 ], [ 0, %.lr.ph212.i.i.prol.loopexit ], [ 0, %.lr.ph164.i.i.prol.loopexit ], [ 0, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %.4245.i.i226 = phi i64 [ %.6247.i.i248, %sort.quad_reversal.exit389.i.i ], [ %.3244.lcssa.i.i210, %.critedge2.i.i221 ], [ %.6247.i.i248, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ %.6247.i.i248, %middle.block1512 ], [ 0, %middle.block944 ], [ %.6247.i.i248, %.lr.ph212.i.i.prol.loopexit ], [ 0, %.lr.ph164.i.i.prol.loopexit ], [ %.6247.i.i248, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %.4238.i.i227 = phi i64 [ %.624079.i.i, %sort.quad_reversal.exit389.i.i ], [ %.3237.lcssa.i.i211, %.critedge2.i.i221 ], [ %.624079.i.i, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ %.624079.i.i, %middle.block1512 ], [ 0, %middle.block944 ], [ %.624079.i.i, %.lr.ph212.i.i.prol.loopexit ], [ 0, %.lr.ph164.i.i.prol.loopexit ], [ %.624079.i.i, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %.3231.i.i228 = phi i64 [ %.52337277.i.i, %sort.quad_reversal.exit389.i.i ], [ %.2230.lcssa.i.i212, %.critedge2.i.i221 ], [ %.52337277.i.i, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ %.52337277.i.i, %middle.block1512 ], [ 0, %middle.block944 ], [ %.52337277.i.i, %.lr.ph212.i.i.prol.loopexit ], [ 0, %.lr.ph164.i.i.prol.loopexit ], [ %.52337277.i.i, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %3105 = lshr i64 %1, 9
  %3106 = zext i32 %.0224.lcssa.i.i187 to i64
  %3107 = icmp ult i64 %3105, %3106
  %3108 = zext i1 %3107 to i4
  %3109 = zext i32 %.0225.lcssa.i.i186 to i64
  %3110 = icmp ult i64 %3105, %3109
  %3111 = zext i1 %3110 to i4
  %3112 = zext i32 %.0226.lcssa.i.i185 to i64
  %3113 = icmp ult i64 %3105, %3112
  %3114 = zext i1 %3113 to i4
  %3115 = zext i32 %.0227.lcssa.i.i184 to i64
  %3116 = icmp ult i64 %3105, %3115
  %3117 = zext i1 %3116 to i4
  %3118 = icmp ugt i64 %1, 1048579
  br i1 %3118, label %3887, label %3879

3119:                                             ; preds = %.critedge2.i.i221
  %3120 = icmp eq i64 %3088, 1
  %3121 = icmp eq i64 %3086, 1
  %3122 = icmp eq i64 %3084, 1
  %3123 = icmp eq i64 %3082, 1
  %.7.i.i230 = select i1 %3123, i1 %3122, i1 false
  %3124 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3125 = load ptr, ptr %.3.lcssa.i.i216, align 8
  %3126 = load ptr, ptr %3124, align 8
  %3127 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3125, ptr align 1 %3126) #18
  %3128 = icmp eq i8 %3127, 1
  %3129 = and i1 %.7.i.i230, %3128
  %3130 = zext i1 %3129 to i3
  %.8.i.i231 = select i1 %3122, i1 %3121, i1 false
  %3131 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3132 = load ptr, ptr %.4.lcssa.i.i215, align 8
  %3133 = load ptr, ptr %3131, align 8
  %3134 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3132, ptr align 1 %3133) #18
  %3135 = icmp eq i8 %3134, 1
  %3136 = and i1 %.8.i.i231, %3135
  %.9.i.i232 = select i1 %3121, i1 %3120, i1 false
  %3137 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3138 = load ptr, ptr %.4218.lcssa.i.i214, align 8
  %3139 = load ptr, ptr %3137, align 8
  %3140 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3138, ptr align 1 %3139) #18
  %3141 = icmp eq i8 %3140, 1
  %3142 = and i1 %.9.i.i232, %3141
  %3143 = select i1 %3136, i3 2, i3 0
  %3144 = or i3 %3143, %3130
  %3145 = select i1 %3142, i3 -4, i3 0
  %3146 = or i3 %3144, %3145
  %3147 = zext i3 %3146 to i32
  switch i32 %3147, label %3151 [
    i32 0, label %sort.quad_reversal.exit299.i.i
    i32 1, label %3152
    i32 2, label %3211
    i32 3, label %3272
    i32 4, label %3331
    i32 5, label %3392
    i32 6, label %3511
    i32 7, label %3572
  ]

sort.quad_reversal.exit299.i.i:                   ; preds = %.lr.ph152.i.i, %.lr.ph152.i.i.prol.loopexit, %middle.block802, %._crit_edge.i340.i.i, %.lr.ph170.i.i, %.lr.ph170.i.i.prol.loopexit, %middle.block1015, %._crit_edge.i310.i.i, %.lr.ph182.i.i, %.lr.ph182.i.i.prol.loopexit, %middle.block1157, %._crit_edge.i290.i.i, %3119
  %.5253.i.i233 = phi i64 [ %.3251.lcssa.i.i209, %3119 ], [ %.3251.lcssa.i.i209, %._crit_edge.i290.i.i ], [ 0, %._crit_edge.i310.i.i ], [ 0, %._crit_edge.i340.i.i ], [ %.3251.lcssa.i.i209, %middle.block1157 ], [ 0, %middle.block1015 ], [ 0, %middle.block802 ], [ %.3251.lcssa.i.i209, %.lr.ph182.i.i.prol.loopexit ], [ 0, %.lr.ph170.i.i.prol.loopexit ], [ 0, %.lr.ph152.i.i.prol.loopexit ], [ %.3251.lcssa.i.i209, %.lr.ph182.i.i ], [ 0, %.lr.ph170.i.i ], [ 0, %.lr.ph152.i.i ]
  %.5246.i.i234 = phi i64 [ %.3244.lcssa.i.i210, %3119 ], [ 0, %._crit_edge.i290.i.i ], [ 0, %._crit_edge.i310.i.i ], [ 0, %._crit_edge.i340.i.i ], [ 0, %middle.block1157 ], [ 0, %middle.block1015 ], [ 0, %middle.block802 ], [ 0, %.lr.ph182.i.i.prol.loopexit ], [ 0, %.lr.ph170.i.i.prol.loopexit ], [ 0, %.lr.ph152.i.i.prol.loopexit ], [ 0, %.lr.ph182.i.i ], [ 0, %.lr.ph170.i.i ], [ 0, %.lr.ph152.i.i ]
  %.5239.i.i235 = phi i64 [ %.3237.lcssa.i.i211, %3119 ], [ 0, %._crit_edge.i290.i.i ], [ %.3237.lcssa.i.i211, %._crit_edge.i310.i.i ], [ 0, %._crit_edge.i340.i.i ], [ 0, %middle.block1157 ], [ %.3237.lcssa.i.i211, %middle.block1015 ], [ 0, %middle.block802 ], [ 0, %.lr.ph182.i.i.prol.loopexit ], [ %.3237.lcssa.i.i211, %.lr.ph170.i.i.prol.loopexit ], [ 0, %.lr.ph152.i.i.prol.loopexit ], [ 0, %.lr.ph182.i.i ], [ %.3237.lcssa.i.i211, %.lr.ph170.i.i ], [ 0, %.lr.ph152.i.i ]
  %3148 = icmp eq i64 %3082, 1
  %3149 = icmp ne i64 %.2230.lcssa.i.i212, 0
  %3150 = and i1 %3149, %3148
  br i1 %3150, label %3634, label %sort.quad_reversal.exit369.i.i

3151:                                             ; preds = %3119
  unreachable

3152:                                             ; preds = %3119
  %3153 = ptrtoint ptr %.4.lcssa.i.i215 to i64
  %3154 = ptrtoint ptr %94 to i64
  %3155 = sub nuw i64 %3153, %3154
  %3156 = lshr i64 %3155, 4
  %3157 = shl nuw nsw i64 %3156, 3
  %3158 = getelementptr inbounds i8, ptr %94, i64 %3157
  %3159 = sub nsw i64 0, %3157
  %3160 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 %3159
  %3161 = and i64 %3155, 16
  %3162 = icmp eq i64 %3161, 0
  br i1 %3162, label %3194, label %._crit_edge.i.i.i239

._crit_edge.i.i.i239:                             ; preds = %3194, %3152
  %.027.i.i.i236 = phi ptr [ %3198, %3194 ], [ %3160, %3152 ]
  %.025.i.i.i237 = phi ptr [ %3197, %3194 ], [ %3158, %3152 ]
  %.0.i.i.i238 = phi i64 [ %3199, %3194 ], [ %3156, %3152 ]
  %3163 = load i64, ptr %94, align 8
  %3164 = load i64, ptr %.4.lcssa.i.i215, align 8
  store i64 %3164, ptr %94, align 8
  store i64 %3163, ptr %.4.lcssa.i.i215, align 8
  %3165 = load i64, ptr %.025.i.i.i237, align 8
  %3166 = load i64, ptr %.027.i.i.i236, align 8
  store i64 %3166, ptr %.025.i.i.i237, align 8
  store i64 %3165, ptr %.027.i.i.i236, align 8
  %3167 = icmp ult i64 %.0.i.i.i238, 2
  br i1 %3167, label %sort.quad_reversal.exit379.i.i, label %.lr.ph188.preheader.i.i

.lr.ph188.preheader.i.i:                          ; preds = %._crit_edge.i.i.i239
  %3168 = lshr i64 %.0.i.i.i238, 1
  %min.iters.check1230 = icmp ult i64 %.0.i.i.i238, 80
  br i1 %min.iters.check1230, label %.lr.ph188.i.i.preheader, label %vector.scevcheck1189

vector.scevcheck1189:                             ; preds = %.lr.ph188.preheader.i.i
  %const3465 = bitcast i64 2305843009213693951 to i64
  %3169 = add nsw i64 %3168, -1
  %uglygep1190 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -8
  %mul.result1192.neg = mul i64 %3169, -8
  %3170 = getelementptr i8, ptr %uglygep1190, i64 %mul.result1192.neg
  %3171 = icmp ugt ptr %3170, %uglygep1190
  %uglygep1194 = getelementptr i8, ptr %.025.i.i.i237, i64 -8
  %mul.result1196.neg = mul i64 %3169, -8
  %mul.overflow1197 = icmp ugt i64 %3169, %const3465
  %3172 = getelementptr i8, ptr %uglygep1194, i64 %mul.result1196.neg
  %3173 = icmp ugt ptr %3172, %uglygep1194
  %3174 = or i1 %3173, %mul.overflow1197
  %3175 = or i1 %3171, %3174
  br i1 %3175, label %.lr.ph188.i.i.preheader, label %vector.memcheck1198

vector.memcheck1198:                              ; preds = %vector.scevcheck1189
  %uglygep1199 = getelementptr i8, ptr %94, i64 8
  %3176 = shl i64 %3168, 3
  %3177 = add i64 %3176, 8
  %uglygep1200 = getelementptr i8, ptr %94, i64 %3177
  %uglygep1201 = getelementptr i8, ptr %.027.i.i.i236, i64 8
  %uglygep1202 = getelementptr i8, ptr %.027.i.i.i236, i64 %3177
  %3178 = mul i64 %3168, -8
  %uglygep1203 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3178
  %uglygep1204 = getelementptr i8, ptr %.025.i.i.i237, i64 %3178
  %bound01205 = icmp ult ptr %uglygep1199, %uglygep1202
  %bound11206 = icmp ult ptr %uglygep1201, %uglygep1200
  %found.conflict1207 = and i1 %bound01205, %bound11206
  %bound01208 = icmp ult ptr %uglygep1199, %.4.lcssa.i.i215
  %bound11209 = icmp ult ptr %uglygep1203, %uglygep1200
  %found.conflict1210 = and i1 %bound01208, %bound11209
  %conflict.rdx1211 = or i1 %found.conflict1207, %found.conflict1210
  %bound01212 = icmp ult ptr %uglygep1199, %.025.i.i.i237
  %bound11213 = icmp ult ptr %uglygep1204, %uglygep1200
  %found.conflict1214 = and i1 %bound01212, %bound11213
  %conflict.rdx1215 = or i1 %conflict.rdx1211, %found.conflict1214
  %bound01216 = icmp ult ptr %uglygep1201, %.4.lcssa.i.i215
  %bound11217 = icmp ult ptr %uglygep1203, %uglygep1202
  %found.conflict1218 = and i1 %bound01216, %bound11217
  %conflict.rdx1219 = or i1 %conflict.rdx1215, %found.conflict1218
  %bound01220 = icmp ult ptr %uglygep1201, %.025.i.i.i237
  %bound11221 = icmp ult ptr %uglygep1204, %uglygep1202
  %found.conflict1222 = and i1 %bound01220, %bound11221
  %conflict.rdx1223 = or i1 %conflict.rdx1219, %found.conflict1222
  %bound01224 = icmp ult ptr %uglygep1203, %.025.i.i.i237
  %bound11225 = icmp ult ptr %uglygep1204, %.4.lcssa.i.i215
  %found.conflict1226 = and i1 %bound01224, %bound11225
  %conflict.rdx1227 = or i1 %conflict.rdx1223, %found.conflict1226
  br i1 %conflict.rdx1227, label %.lr.ph188.i.i.preheader, label %vector.ph1231

vector.ph1231:                                    ; preds = %vector.memcheck1198
  %const3489 = bitcast i64 9223372036854775806 to i64
  %n.vec1233 = and i64 %3168, %const3489
  %ind.end1234 = and i64 %3168, 1
  %3179 = shl i64 %n.vec1233, 3
  %ind.end1236 = getelementptr i8, ptr %94, i64 %3179
  %3180 = mul i64 %n.vec1233, -8
  %ind.end1238 = getelementptr i8, ptr %.025.i.i.i237, i64 %3180
  %3181 = shl i64 %n.vec1233, 3
  %ind.end1240 = getelementptr i8, ptr %.027.i.i.i236, i64 %3181
  %3182 = mul i64 %n.vec1233, -8
  %ind.end1242 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3182
  br label %vector.body1245

vector.body1245:                                  ; preds = %vector.body1245, %vector.ph1231
  %lsr.iv3249 = phi i64 [ %lsr.iv.next3250, %vector.body1245 ], [ -16, %vector.ph1231 ]
  %index1246 = phi i64 [ 0, %vector.ph1231 ], [ %index.next1259, %vector.body1245 ]
  %sunkaddr4157 = mul i64 %index1246, 8
  %sunkaddr4158 = getelementptr i8, ptr %94, i64 %sunkaddr4157
  %sunkaddr4159 = getelementptr i8, ptr %sunkaddr4158, i64 8
  %wide.load1251 = load <2 x i64>, ptr %sunkaddr4159, align 8, !alias.scope !169, !noalias !172
  %uglygep3251 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %lsr.iv3249
  %wide.load1252 = load <2 x i64>, ptr %uglygep3251, align 8, !alias.scope !176, !noalias !177
  %reverse1253 = shufflevector <2 x i64> %wide.load1252, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1253, ptr %sunkaddr4159, align 8, !alias.scope !169, !noalias !172
  %reverse1254 = shufflevector <2 x i64> %wide.load1251, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1254, ptr %uglygep3251, align 8, !alias.scope !176, !noalias !177
  %uglygep3252 = getelementptr i8, ptr %.025.i.i.i237, i64 %lsr.iv3249
  %wide.load1255 = load <2 x i64>, ptr %uglygep3252, align 8, !alias.scope !177
  %reverse1256 = shufflevector <2 x i64> %wide.load1255, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4160 = mul i64 %index1246, 8
  %sunkaddr4161 = getelementptr i8, ptr %.027.i.i.i236, i64 %sunkaddr4160
  %sunkaddr4162 = getelementptr i8, ptr %sunkaddr4161, i64 8
  %wide.load1257 = load <2 x i64>, ptr %sunkaddr4162, align 8, !alias.scope !178, !noalias !179
  %reverse1258 = shufflevector <2 x i64> %wide.load1257, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1258, ptr %uglygep3252, align 8, !alias.scope !177
  store <2 x i64> %reverse1256, ptr %sunkaddr4162, align 8, !alias.scope !178, !noalias !179
  %index.next1259 = add nuw i64 %index1246, 2
  %lsr.iv.next3250 = add i64 %lsr.iv3249, -16
  %3183 = icmp eq i64 %n.vec1233, %index.next1259
  br i1 %3183, label %middle.block1228, label %vector.body1245, !llvm.loop !180

middle.block1228:                                 ; preds = %vector.body1245
  %cmp.n1244 = icmp eq i64 %3168, %n.vec1233
  br i1 %cmp.n1244, label %sort.quad_reversal.exit379.i.i, label %.lr.ph188.i.i.preheader

.lr.ph188.i.i.preheader:                          ; preds = %middle.block1228, %vector.memcheck1198, %vector.scevcheck1189, %.lr.ph188.preheader.i.i
  %.1.i187.i.i.ph = phi i64 [ %3168, %vector.memcheck1198 ], [ %3168, %vector.scevcheck1189 ], [ %3168, %.lr.ph188.preheader.i.i ], [ %ind.end1234, %middle.block1228 ]
  %.024.i186.i.i.ph = phi ptr [ %94, %vector.memcheck1198 ], [ %94, %vector.scevcheck1189 ], [ %94, %.lr.ph188.preheader.i.i ], [ %ind.end1236, %middle.block1228 ]
  %.126.i185.i.i.ph = phi ptr [ %.025.i.i.i237, %vector.memcheck1198 ], [ %.025.i.i.i237, %vector.scevcheck1189 ], [ %.025.i.i.i237, %.lr.ph188.preheader.i.i ], [ %ind.end1238, %middle.block1228 ]
  %.128.i184.i.i.ph = phi ptr [ %.027.i.i.i236, %vector.memcheck1198 ], [ %.027.i.i.i236, %vector.scevcheck1189 ], [ %.027.i.i.i236, %.lr.ph188.preheader.i.i ], [ %ind.end1240, %middle.block1228 ]
  %.029.i183.i.i.ph = phi ptr [ %.4.lcssa.i.i215, %vector.memcheck1198 ], [ %.4.lcssa.i.i215, %vector.scevcheck1189 ], [ %.4.lcssa.i.i215, %.lr.ph188.preheader.i.i ], [ %ind.end1242, %middle.block1228 ]
  %xtraiter2599 = and i64 %.1.i187.i.i.ph, 1
  %lcmp.mod2600.not = icmp eq i64 %xtraiter2599, 0
  br i1 %lcmp.mod2600.not, label %.lr.ph188.i.i.prol.loopexit, label %.lr.ph188.i.i.prol

.lr.ph188.i.i.prol:                               ; preds = %.lr.ph188.i.i.preheader
  %3184 = getelementptr inbounds i8, ptr %.128.i184.i.i.ph, i64 8
  %3185 = getelementptr inbounds i8, ptr %.126.i185.i.i.ph, i64 -8
  %3186 = getelementptr inbounds i8, ptr %.029.i183.i.i.ph, i64 -8
  %3187 = getelementptr inbounds i8, ptr %.024.i186.i.i.ph, i64 8
  %3188 = add nsw i64 %.1.i187.i.i.ph, -1
  %3189 = load i64, ptr %3187, align 8
  %3190 = load i64, ptr %3186, align 8
  store i64 %3190, ptr %3187, align 8
  store i64 %3189, ptr %3186, align 8
  %3191 = load i64, ptr %3185, align 8
  %3192 = load i64, ptr %3184, align 8
  store i64 %3192, ptr %3185, align 8
  store i64 %3191, ptr %3184, align 8
  br label %.lr.ph188.i.i.prol.loopexit

.lr.ph188.i.i.prol.loopexit:                      ; preds = %.lr.ph188.i.i.prol, %.lr.ph188.i.i.preheader
  %.1.i187.i.i.unr = phi i64 [ %.1.i187.i.i.ph, %.lr.ph188.i.i.preheader ], [ %3188, %.lr.ph188.i.i.prol ]
  %.024.i186.i.i.unr = phi ptr [ %.024.i186.i.i.ph, %.lr.ph188.i.i.preheader ], [ %3187, %.lr.ph188.i.i.prol ]
  %.126.i185.i.i.unr = phi ptr [ %.126.i185.i.i.ph, %.lr.ph188.i.i.preheader ], [ %3185, %.lr.ph188.i.i.prol ]
  %.128.i184.i.i.unr = phi ptr [ %.128.i184.i.i.ph, %.lr.ph188.i.i.preheader ], [ %3184, %.lr.ph188.i.i.prol ]
  %.029.i183.i.i.unr = phi ptr [ %.029.i183.i.i.ph, %.lr.ph188.i.i.preheader ], [ %3186, %.lr.ph188.i.i.prol ]
  %3193 = icmp eq i64 %.1.i187.i.i.ph, 1
  br i1 %3193, label %sort.quad_reversal.exit379.i.i, label %.lr.ph188.i.i.preheader2744

.lr.ph188.i.i.preheader2744:                      ; preds = %.lr.ph188.i.i.prol.loopexit
  br label %.lr.ph188.i.i

3194:                                             ; preds = %3152
  %3195 = load i64, ptr %3158, align 8
  %3196 = load i64, ptr %3160, align 8
  store i64 %3196, ptr %3158, align 8
  %3197 = getelementptr inbounds i8, ptr %3158, i64 -8
  store i64 %3195, ptr %3160, align 8
  %3198 = getelementptr inbounds i8, ptr %3160, i64 8
  %3199 = add nsw i64 %3156, -1
  br label %._crit_edge.i.i.i239

.lr.ph188.i.i:                                    ; preds = %.lr.ph188.i.i, %.lr.ph188.i.i.preheader2744
  %lsr.iv3237 = phi i64 [ -1, %.lr.ph188.i.i.preheader2744 ], [ %lsr.iv.next3238, %.lr.ph188.i.i ]
  %lsr.iv3231 = phi i64 [ 0, %.lr.ph188.i.i.preheader2744 ], [ %lsr.iv.next3232, %.lr.ph188.i.i ]
  %3200 = shl i64 %lsr.iv3237, 3
  %uglygep3241 = getelementptr i8, ptr %.126.i185.i.i.unr, i64 %3200
  %uglygep3248 = getelementptr i8, ptr %.029.i183.i.i.unr, i64 %3200
  %sunkaddr4163 = mul i64 %lsr.iv3231, 8
  %sunkaddr4164 = getelementptr i8, ptr %.024.i186.i.i.unr, i64 %sunkaddr4163
  %sunkaddr4165 = getelementptr i8, ptr %sunkaddr4164, i64 8
  %3201 = load i64, ptr %sunkaddr4165, align 8
  %3202 = load i64, ptr %uglygep3248, align 8
  store i64 %3202, ptr %sunkaddr4165, align 8
  store i64 %3201, ptr %uglygep3248, align 8
  %3203 = load i64, ptr %uglygep3241, align 8
  %sunkaddr4166 = mul i64 %lsr.iv3231, 8
  %sunkaddr4167 = getelementptr i8, ptr %.128.i184.i.i.unr, i64 %sunkaddr4166
  %sunkaddr4168 = getelementptr i8, ptr %sunkaddr4167, i64 8
  %3204 = load i64, ptr %sunkaddr4168, align 8
  store i64 %3204, ptr %uglygep3241, align 8
  store i64 %3203, ptr %sunkaddr4168, align 8
  %3205 = shl i64 %lsr.iv3237, 3
  %uglygep3239 = getelementptr i8, ptr %.126.i185.i.i.unr, i64 %3205
  %uglygep3240 = getelementptr i8, ptr %uglygep3239, i64 -8
  %uglygep3246 = getelementptr i8, ptr %.029.i183.i.i.unr, i64 %3205
  %uglygep3247 = getelementptr i8, ptr %uglygep3246, i64 -8
  %sunkaddr4169 = mul i64 %lsr.iv3231, 8
  %sunkaddr4170 = getelementptr i8, ptr %.024.i186.i.i.unr, i64 %sunkaddr4169
  %sunkaddr4171 = getelementptr i8, ptr %sunkaddr4170, i64 16
  %3206 = load i64, ptr %sunkaddr4171, align 8
  %3207 = load i64, ptr %uglygep3247, align 8
  store i64 %3207, ptr %sunkaddr4171, align 8
  store i64 %3206, ptr %uglygep3247, align 8
  %3208 = load i64, ptr %uglygep3240, align 8
  %sunkaddr4172 = mul i64 %lsr.iv3231, 8
  %sunkaddr4173 = getelementptr i8, ptr %.128.i184.i.i.unr, i64 %sunkaddr4172
  %sunkaddr4174 = getelementptr i8, ptr %sunkaddr4173, i64 16
  %3209 = load i64, ptr %sunkaddr4174, align 8
  store i64 %3209, ptr %uglygep3240, align 8
  store i64 %3208, ptr %sunkaddr4174, align 8
  %lsr.iv.next3232 = add i64 %lsr.iv3231, 2
  %lsr.iv.next3238 = add i64 %lsr.iv3237, -2
  %3210 = icmp eq i64 %.1.i187.i.i.unr, %lsr.iv.next3232
  br i1 %3210, label %sort.quad_reversal.exit379.i.i, label %.lr.ph188.i.i, !llvm.loop !181

3211:                                             ; preds = %3119
  %3212 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 1
  %3213 = ptrtoint ptr %.4218.lcssa.i.i214 to i64
  %3214 = ptrtoint ptr %3212 to i64
  %3215 = sub nuw i64 %3213, %3214
  %3216 = lshr i64 %3215, 4
  %3217 = shl nuw nsw i64 %3216, 3
  %3218 = getelementptr inbounds i8, ptr %3212, i64 %3217
  %3219 = sub nsw i64 0, %3217
  %3220 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 %3219
  %3221 = and i64 %3215, 16
  %3222 = icmp eq i64 %3221, 0
  br i1 %3222, label %3255, label %._crit_edge.i290.i.i

._crit_edge.i290.i.i:                             ; preds = %3255, %3211
  %.027.i291.i.i = phi ptr [ %3259, %3255 ], [ %3220, %3211 ]
  %.025.i292.i.i = phi ptr [ %3258, %3255 ], [ %3218, %3211 ]
  %.0.i293.i.i = phi i64 [ %3260, %3255 ], [ %3216, %3211 ]
  %3223 = load i64, ptr %3212, align 8
  %3224 = load i64, ptr %.4218.lcssa.i.i214, align 8
  store i64 %3224, ptr %3212, align 8
  store i64 %3223, ptr %.4218.lcssa.i.i214, align 8
  %3225 = load i64, ptr %.025.i292.i.i, align 8
  %3226 = load i64, ptr %.027.i291.i.i, align 8
  store i64 %3226, ptr %.025.i292.i.i, align 8
  store i64 %3225, ptr %.027.i291.i.i, align 8
  %3227 = icmp ult i64 %.0.i293.i.i, 2
  br i1 %3227, label %sort.quad_reversal.exit299.i.i, label %.lr.ph182.preheader.i.i

.lr.ph182.preheader.i.i:                          ; preds = %._crit_edge.i290.i.i
  %3228 = lshr i64 %.0.i293.i.i, 1
  %min.iters.check1159 = icmp ult i64 %.0.i293.i.i, 80
  br i1 %min.iters.check1159, label %.lr.ph182.i.i.preheader, label %vector.scevcheck1118

vector.scevcheck1118:                             ; preds = %.lr.ph182.preheader.i.i
  %const3464 = bitcast i64 2305843009213693951 to i64
  %3229 = add nsw i64 %3228, -1
  %uglygep1119 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -8
  %mul.result1121.neg = mul i64 %3229, -8
  %3230 = getelementptr i8, ptr %uglygep1119, i64 %mul.result1121.neg
  %3231 = icmp ugt ptr %3230, %uglygep1119
  %uglygep1123 = getelementptr i8, ptr %.025.i292.i.i, i64 -8
  %mul.result1125.neg = mul i64 %3229, -8
  %mul.overflow1126 = icmp ugt i64 %3229, %const3464
  %3232 = getelementptr i8, ptr %uglygep1123, i64 %mul.result1125.neg
  %3233 = icmp ugt ptr %3232, %uglygep1123
  %3234 = or i1 %3233, %mul.overflow1126
  %3235 = or i1 %3231, %3234
  br i1 %3235, label %.lr.ph182.i.i.preheader, label %vector.memcheck1127

vector.memcheck1127:                              ; preds = %vector.scevcheck1118
  %uglygep1128 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 9
  %3236 = shl i64 %3228, 3
  %3237 = add i64 %3236, 9
  %uglygep1129 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3237
  %uglygep1130 = getelementptr i8, ptr %.027.i291.i.i, i64 8
  %3238 = add i64 %3236, 8
  %uglygep1131 = getelementptr i8, ptr %.027.i291.i.i, i64 %3238
  %3239 = mul i64 %3228, -8
  %uglygep1132 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3239
  %uglygep1133 = getelementptr i8, ptr %.025.i292.i.i, i64 %3239
  %bound01134 = icmp ult ptr %uglygep1128, %uglygep1131
  %bound11135 = icmp ult ptr %uglygep1130, %uglygep1129
  %found.conflict1136 = and i1 %bound01134, %bound11135
  %bound01137 = icmp ult ptr %uglygep1128, %.4218.lcssa.i.i214
  %bound11138 = icmp ult ptr %uglygep1132, %uglygep1129
  %found.conflict1139 = and i1 %bound01137, %bound11138
  %conflict.rdx1140 = or i1 %found.conflict1136, %found.conflict1139
  %bound01141 = icmp ult ptr %uglygep1128, %.025.i292.i.i
  %bound11142 = icmp ult ptr %uglygep1133, %uglygep1129
  %found.conflict1143 = and i1 %bound01141, %bound11142
  %conflict.rdx1144 = or i1 %conflict.rdx1140, %found.conflict1143
  %bound01145 = icmp ult ptr %uglygep1130, %.4218.lcssa.i.i214
  %bound11146 = icmp ult ptr %uglygep1132, %uglygep1131
  %found.conflict1147 = and i1 %bound01145, %bound11146
  %conflict.rdx1148 = or i1 %conflict.rdx1144, %found.conflict1147
  %bound01149 = icmp ult ptr %uglygep1130, %.025.i292.i.i
  %bound11150 = icmp ult ptr %uglygep1133, %uglygep1131
  %found.conflict1151 = and i1 %bound01149, %bound11150
  %conflict.rdx1152 = or i1 %conflict.rdx1148, %found.conflict1151
  %bound01153 = icmp ult ptr %uglygep1132, %.025.i292.i.i
  %bound11154 = icmp ult ptr %uglygep1133, %.4218.lcssa.i.i214
  %found.conflict1155 = and i1 %bound01153, %bound11154
  %conflict.rdx1156 = or i1 %conflict.rdx1152, %found.conflict1155
  br i1 %conflict.rdx1156, label %.lr.ph182.i.i.preheader, label %vector.ph1160

vector.ph1160:                                    ; preds = %vector.memcheck1127
  %const3488 = bitcast i64 9223372036854775806 to i64
  %n.vec1162 = and i64 %3228, %const3488
  %ind.end1163 = and i64 %3228, 1
  %3240 = shl i64 %n.vec1162, 3
  %ind.end1165 = getelementptr i8, ptr %3212, i64 %3240
  %3241 = mul i64 %n.vec1162, -8
  %ind.end1167 = getelementptr i8, ptr %.025.i292.i.i, i64 %3241
  %3242 = shl i64 %n.vec1162, 3
  %ind.end1169 = getelementptr i8, ptr %.027.i291.i.i, i64 %3242
  %3243 = mul i64 %n.vec1162, -8
  %ind.end1171 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3243
  br label %vector.body1174

vector.body1174:                                  ; preds = %vector.body1174, %vector.ph1160
  %lsr.iv3272 = phi i64 [ %lsr.iv.next3273, %vector.body1174 ], [ -16, %vector.ph1160 ]
  %index1175 = phi i64 [ 0, %vector.ph1160 ], [ %index.next1188, %vector.body1174 ]
  %sunkaddr4175 = mul i64 %index1175, 8
  %sunkaddr4176 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %sunkaddr4175
  %sunkaddr4177 = getelementptr i8, ptr %sunkaddr4176, i64 9
  %wide.load1180 = load <2 x i64>, ptr %sunkaddr4177, align 8, !alias.scope !182, !noalias !185
  %uglygep3274 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %lsr.iv3272
  %wide.load1181 = load <2 x i64>, ptr %uglygep3274, align 8, !alias.scope !189, !noalias !190
  %reverse1182 = shufflevector <2 x i64> %wide.load1181, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1182, ptr %sunkaddr4177, align 8, !alias.scope !182, !noalias !185
  %reverse1183 = shufflevector <2 x i64> %wide.load1180, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1183, ptr %uglygep3274, align 8, !alias.scope !189, !noalias !190
  %uglygep3275 = getelementptr i8, ptr %.025.i292.i.i, i64 %lsr.iv3272
  %wide.load1184 = load <2 x i64>, ptr %uglygep3275, align 8, !alias.scope !190
  %reverse1185 = shufflevector <2 x i64> %wide.load1184, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4178 = mul i64 %index1175, 8
  %sunkaddr4179 = getelementptr i8, ptr %.027.i291.i.i, i64 %sunkaddr4178
  %sunkaddr4180 = getelementptr i8, ptr %sunkaddr4179, i64 8
  %wide.load1186 = load <2 x i64>, ptr %sunkaddr4180, align 8, !alias.scope !191, !noalias !192
  %reverse1187 = shufflevector <2 x i64> %wide.load1186, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1187, ptr %uglygep3275, align 8, !alias.scope !190
  store <2 x i64> %reverse1185, ptr %sunkaddr4180, align 8, !alias.scope !191, !noalias !192
  %index.next1188 = add nuw i64 %index1175, 2
  %lsr.iv.next3273 = add i64 %lsr.iv3272, -16
  %3244 = icmp eq i64 %n.vec1162, %index.next1188
  br i1 %3244, label %middle.block1157, label %vector.body1174, !llvm.loop !193

middle.block1157:                                 ; preds = %vector.body1174
  %cmp.n1173 = icmp eq i64 %3228, %n.vec1162
  br i1 %cmp.n1173, label %sort.quad_reversal.exit299.i.i, label %.lr.ph182.i.i.preheader

.lr.ph182.i.i.preheader:                          ; preds = %middle.block1157, %vector.memcheck1127, %vector.scevcheck1118, %.lr.ph182.preheader.i.i
  %.1.i298181.i.i.ph = phi i64 [ %3228, %vector.memcheck1127 ], [ %3228, %vector.scevcheck1118 ], [ %3228, %.lr.ph182.preheader.i.i ], [ %ind.end1163, %middle.block1157 ]
  %.024.i297180.i.i.ph = phi ptr [ %3212, %vector.memcheck1127 ], [ %3212, %vector.scevcheck1118 ], [ %3212, %.lr.ph182.preheader.i.i ], [ %ind.end1165, %middle.block1157 ]
  %.126.i296179.i.i.ph = phi ptr [ %.025.i292.i.i, %vector.memcheck1127 ], [ %.025.i292.i.i, %vector.scevcheck1118 ], [ %.025.i292.i.i, %.lr.ph182.preheader.i.i ], [ %ind.end1167, %middle.block1157 ]
  %.128.i295178.i.i.ph = phi ptr [ %.027.i291.i.i, %vector.memcheck1127 ], [ %.027.i291.i.i, %vector.scevcheck1118 ], [ %.027.i291.i.i, %.lr.ph182.preheader.i.i ], [ %ind.end1169, %middle.block1157 ]
  %.029.i294177.i.i.ph = phi ptr [ %.4218.lcssa.i.i214, %vector.memcheck1127 ], [ %.4218.lcssa.i.i214, %vector.scevcheck1118 ], [ %.4218.lcssa.i.i214, %.lr.ph182.preheader.i.i ], [ %ind.end1171, %middle.block1157 ]
  %xtraiter2597 = and i64 %.1.i298181.i.i.ph, 1
  %lcmp.mod2598.not = icmp eq i64 %xtraiter2597, 0
  br i1 %lcmp.mod2598.not, label %.lr.ph182.i.i.prol.loopexit, label %.lr.ph182.i.i.prol

.lr.ph182.i.i.prol:                               ; preds = %.lr.ph182.i.i.preheader
  %3245 = getelementptr inbounds i8, ptr %.128.i295178.i.i.ph, i64 8
  %3246 = getelementptr inbounds i8, ptr %.126.i296179.i.i.ph, i64 -8
  %3247 = getelementptr inbounds i8, ptr %.029.i294177.i.i.ph, i64 -8
  %3248 = getelementptr inbounds i8, ptr %.024.i297180.i.i.ph, i64 8
  %3249 = add nsw i64 %.1.i298181.i.i.ph, -1
  %3250 = load i64, ptr %3248, align 8
  %3251 = load i64, ptr %3247, align 8
  store i64 %3251, ptr %3248, align 8
  store i64 %3250, ptr %3247, align 8
  %3252 = load i64, ptr %3246, align 8
  %3253 = load i64, ptr %3245, align 8
  store i64 %3253, ptr %3246, align 8
  store i64 %3252, ptr %3245, align 8
  br label %.lr.ph182.i.i.prol.loopexit

.lr.ph182.i.i.prol.loopexit:                      ; preds = %.lr.ph182.i.i.prol, %.lr.ph182.i.i.preheader
  %.1.i298181.i.i.unr = phi i64 [ %.1.i298181.i.i.ph, %.lr.ph182.i.i.preheader ], [ %3249, %.lr.ph182.i.i.prol ]
  %.024.i297180.i.i.unr = phi ptr [ %.024.i297180.i.i.ph, %.lr.ph182.i.i.preheader ], [ %3248, %.lr.ph182.i.i.prol ]
  %.126.i296179.i.i.unr = phi ptr [ %.126.i296179.i.i.ph, %.lr.ph182.i.i.preheader ], [ %3246, %.lr.ph182.i.i.prol ]
  %.128.i295178.i.i.unr = phi ptr [ %.128.i295178.i.i.ph, %.lr.ph182.i.i.preheader ], [ %3245, %.lr.ph182.i.i.prol ]
  %.029.i294177.i.i.unr = phi ptr [ %.029.i294177.i.i.ph, %.lr.ph182.i.i.preheader ], [ %3247, %.lr.ph182.i.i.prol ]
  %3254 = icmp eq i64 %.1.i298181.i.i.ph, 1
  br i1 %3254, label %sort.quad_reversal.exit299.i.i, label %.lr.ph182.i.i.preheader2746

.lr.ph182.i.i.preheader2746:                      ; preds = %.lr.ph182.i.i.prol.loopexit
  br label %.lr.ph182.i.i

3255:                                             ; preds = %3211
  %3256 = load i64, ptr %3218, align 8
  %3257 = load i64, ptr %3220, align 8
  store i64 %3257, ptr %3218, align 8
  %3258 = getelementptr inbounds i8, ptr %3218, i64 -8
  store i64 %3256, ptr %3220, align 8
  %3259 = getelementptr inbounds i8, ptr %3220, i64 8
  %3260 = add nsw i64 %3216, -1
  br label %._crit_edge.i290.i.i

.lr.ph182.i.i:                                    ; preds = %.lr.ph182.i.i, %.lr.ph182.i.i.preheader2746
  %lsr.iv3260 = phi i64 [ -1, %.lr.ph182.i.i.preheader2746 ], [ %lsr.iv.next3261, %.lr.ph182.i.i ]
  %lsr.iv3254 = phi i64 [ 0, %.lr.ph182.i.i.preheader2746 ], [ %lsr.iv.next3255, %.lr.ph182.i.i ]
  %3261 = shl i64 %lsr.iv3260, 3
  %uglygep3264 = getelementptr i8, ptr %.126.i296179.i.i.unr, i64 %3261
  %uglygep3271 = getelementptr i8, ptr %.029.i294177.i.i.unr, i64 %3261
  %sunkaddr4181 = mul i64 %lsr.iv3254, 8
  %sunkaddr4182 = getelementptr i8, ptr %.024.i297180.i.i.unr, i64 %sunkaddr4181
  %sunkaddr4183 = getelementptr i8, ptr %sunkaddr4182, i64 8
  %3262 = load i64, ptr %sunkaddr4183, align 8
  %3263 = load i64, ptr %uglygep3271, align 8
  store i64 %3263, ptr %sunkaddr4183, align 8
  store i64 %3262, ptr %uglygep3271, align 8
  %3264 = load i64, ptr %uglygep3264, align 8
  %sunkaddr4184 = mul i64 %lsr.iv3254, 8
  %sunkaddr4185 = getelementptr i8, ptr %.128.i295178.i.i.unr, i64 %sunkaddr4184
  %sunkaddr4186 = getelementptr i8, ptr %sunkaddr4185, i64 8
  %3265 = load i64, ptr %sunkaddr4186, align 8
  store i64 %3265, ptr %uglygep3264, align 8
  store i64 %3264, ptr %sunkaddr4186, align 8
  %3266 = shl i64 %lsr.iv3260, 3
  %uglygep3262 = getelementptr i8, ptr %.126.i296179.i.i.unr, i64 %3266
  %uglygep3263 = getelementptr i8, ptr %uglygep3262, i64 -8
  %uglygep3269 = getelementptr i8, ptr %.029.i294177.i.i.unr, i64 %3266
  %uglygep3270 = getelementptr i8, ptr %uglygep3269, i64 -8
  %sunkaddr4187 = mul i64 %lsr.iv3254, 8
  %sunkaddr4188 = getelementptr i8, ptr %.024.i297180.i.i.unr, i64 %sunkaddr4187
  %sunkaddr4189 = getelementptr i8, ptr %sunkaddr4188, i64 16
  %3267 = load i64, ptr %sunkaddr4189, align 8
  %3268 = load i64, ptr %uglygep3270, align 8
  store i64 %3268, ptr %sunkaddr4189, align 8
  store i64 %3267, ptr %uglygep3270, align 8
  %3269 = load i64, ptr %uglygep3263, align 8
  %sunkaddr4190 = mul i64 %lsr.iv3254, 8
  %sunkaddr4191 = getelementptr i8, ptr %.128.i295178.i.i.unr, i64 %sunkaddr4190
  %sunkaddr4192 = getelementptr i8, ptr %sunkaddr4191, i64 16
  %3270 = load i64, ptr %sunkaddr4192, align 8
  store i64 %3270, ptr %uglygep3263, align 8
  store i64 %3269, ptr %sunkaddr4192, align 8
  %lsr.iv.next3255 = add i64 %lsr.iv3254, 2
  %lsr.iv.next3261 = add i64 %lsr.iv3260, -2
  %3271 = icmp eq i64 %.1.i298181.i.i.unr, %lsr.iv.next3255
  br i1 %3271, label %sort.quad_reversal.exit299.i.i, label %.lr.ph182.i.i, !llvm.loop !194

3272:                                             ; preds = %3119
  %3273 = ptrtoint ptr %.4218.lcssa.i.i214 to i64
  %3274 = ptrtoint ptr %94 to i64
  %3275 = sub nuw i64 %3273, %3274
  %3276 = lshr i64 %3275, 4
  %3277 = shl nuw nsw i64 %3276, 3
  %3278 = getelementptr inbounds i8, ptr %94, i64 %3277
  %3279 = sub nsw i64 0, %3277
  %3280 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 %3279
  %3281 = and i64 %3275, 16
  %3282 = icmp eq i64 %3281, 0
  br i1 %3282, label %3314, label %._crit_edge.i300.i.i

._crit_edge.i300.i.i:                             ; preds = %3314, %3272
  %.027.i301.i.i = phi ptr [ %3318, %3314 ], [ %3280, %3272 ]
  %.025.i302.i.i = phi ptr [ %3317, %3314 ], [ %3278, %3272 ]
  %.0.i303.i.i = phi i64 [ %3319, %3314 ], [ %3276, %3272 ]
  %3283 = load i64, ptr %94, align 8
  %3284 = load i64, ptr %.4218.lcssa.i.i214, align 8
  store i64 %3284, ptr %94, align 8
  store i64 %3283, ptr %.4218.lcssa.i.i214, align 8
  %3285 = load i64, ptr %.025.i302.i.i, align 8
  %3286 = load i64, ptr %.027.i301.i.i, align 8
  store i64 %3286, ptr %.025.i302.i.i, align 8
  store i64 %3285, ptr %.027.i301.i.i, align 8
  %3287 = icmp ult i64 %.0.i303.i.i, 2
  br i1 %3287, label %sort.quad_reversal.exit389.i.i, label %.lr.ph176.preheader.i.i

.lr.ph176.preheader.i.i:                          ; preds = %._crit_edge.i300.i.i
  %3288 = lshr i64 %.0.i303.i.i, 1
  %min.iters.check1088 = icmp ult i64 %.0.i303.i.i, 80
  br i1 %min.iters.check1088, label %.lr.ph176.i.i.preheader, label %vector.scevcheck1047

vector.scevcheck1047:                             ; preds = %.lr.ph176.preheader.i.i
  %const3463 = bitcast i64 2305843009213693951 to i64
  %3289 = add nsw i64 %3288, -1
  %uglygep1048 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -8
  %mul.result1050.neg = mul i64 %3289, -8
  %3290 = getelementptr i8, ptr %uglygep1048, i64 %mul.result1050.neg
  %3291 = icmp ugt ptr %3290, %uglygep1048
  %uglygep1052 = getelementptr i8, ptr %.025.i302.i.i, i64 -8
  %mul.result1054.neg = mul i64 %3289, -8
  %mul.overflow1055 = icmp ugt i64 %3289, %const3463
  %3292 = getelementptr i8, ptr %uglygep1052, i64 %mul.result1054.neg
  %3293 = icmp ugt ptr %3292, %uglygep1052
  %3294 = or i1 %3293, %mul.overflow1055
  %3295 = or i1 %3291, %3294
  br i1 %3295, label %.lr.ph176.i.i.preheader, label %vector.memcheck1056

vector.memcheck1056:                              ; preds = %vector.scevcheck1047
  %uglygep1057 = getelementptr i8, ptr %94, i64 8
  %3296 = shl i64 %3288, 3
  %3297 = add i64 %3296, 8
  %uglygep1058 = getelementptr i8, ptr %94, i64 %3297
  %uglygep1059 = getelementptr i8, ptr %.027.i301.i.i, i64 8
  %uglygep1060 = getelementptr i8, ptr %.027.i301.i.i, i64 %3297
  %3298 = mul i64 %3288, -8
  %uglygep1061 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3298
  %uglygep1062 = getelementptr i8, ptr %.025.i302.i.i, i64 %3298
  %bound01063 = icmp ult ptr %uglygep1057, %uglygep1060
  %bound11064 = icmp ult ptr %uglygep1059, %uglygep1058
  %found.conflict1065 = and i1 %bound01063, %bound11064
  %bound01066 = icmp ult ptr %uglygep1057, %.4218.lcssa.i.i214
  %bound11067 = icmp ult ptr %uglygep1061, %uglygep1058
  %found.conflict1068 = and i1 %bound01066, %bound11067
  %conflict.rdx1069 = or i1 %found.conflict1065, %found.conflict1068
  %bound01070 = icmp ult ptr %uglygep1057, %.025.i302.i.i
  %bound11071 = icmp ult ptr %uglygep1062, %uglygep1058
  %found.conflict1072 = and i1 %bound01070, %bound11071
  %conflict.rdx1073 = or i1 %conflict.rdx1069, %found.conflict1072
  %bound01074 = icmp ult ptr %uglygep1059, %.4218.lcssa.i.i214
  %bound11075 = icmp ult ptr %uglygep1061, %uglygep1060
  %found.conflict1076 = and i1 %bound01074, %bound11075
  %conflict.rdx1077 = or i1 %conflict.rdx1073, %found.conflict1076
  %bound01078 = icmp ult ptr %uglygep1059, %.025.i302.i.i
  %bound11079 = icmp ult ptr %uglygep1062, %uglygep1060
  %found.conflict1080 = and i1 %bound01078, %bound11079
  %conflict.rdx1081 = or i1 %conflict.rdx1077, %found.conflict1080
  %bound01082 = icmp ult ptr %uglygep1061, %.025.i302.i.i
  %bound11083 = icmp ult ptr %uglygep1062, %.4218.lcssa.i.i214
  %found.conflict1084 = and i1 %bound01082, %bound11083
  %conflict.rdx1085 = or i1 %conflict.rdx1081, %found.conflict1084
  br i1 %conflict.rdx1085, label %.lr.ph176.i.i.preheader, label %vector.ph1089

vector.ph1089:                                    ; preds = %vector.memcheck1056
  %const3487 = bitcast i64 9223372036854775806 to i64
  %n.vec1091 = and i64 %3288, %const3487
  %ind.end1092 = and i64 %3288, 1
  %3299 = shl i64 %n.vec1091, 3
  %ind.end1094 = getelementptr i8, ptr %94, i64 %3299
  %3300 = mul i64 %n.vec1091, -8
  %ind.end1096 = getelementptr i8, ptr %.025.i302.i.i, i64 %3300
  %3301 = shl i64 %n.vec1091, 3
  %ind.end1098 = getelementptr i8, ptr %.027.i301.i.i, i64 %3301
  %3302 = mul i64 %n.vec1091, -8
  %ind.end1100 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3302
  br label %vector.body1103

vector.body1103:                                  ; preds = %vector.body1103, %vector.ph1089
  %lsr.iv3295 = phi i64 [ %lsr.iv.next3296, %vector.body1103 ], [ -16, %vector.ph1089 ]
  %index1104 = phi i64 [ 0, %vector.ph1089 ], [ %index.next1117, %vector.body1103 ]
  %sunkaddr4193 = mul i64 %index1104, 8
  %sunkaddr4194 = getelementptr i8, ptr %94, i64 %sunkaddr4193
  %sunkaddr4195 = getelementptr i8, ptr %sunkaddr4194, i64 8
  %wide.load1109 = load <2 x i64>, ptr %sunkaddr4195, align 8, !alias.scope !195, !noalias !198
  %uglygep3297 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %lsr.iv3295
  %wide.load1110 = load <2 x i64>, ptr %uglygep3297, align 8, !alias.scope !202, !noalias !203
  %reverse1111 = shufflevector <2 x i64> %wide.load1110, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1111, ptr %sunkaddr4195, align 8, !alias.scope !195, !noalias !198
  %reverse1112 = shufflevector <2 x i64> %wide.load1109, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1112, ptr %uglygep3297, align 8, !alias.scope !202, !noalias !203
  %uglygep3298 = getelementptr i8, ptr %.025.i302.i.i, i64 %lsr.iv3295
  %wide.load1113 = load <2 x i64>, ptr %uglygep3298, align 8, !alias.scope !203
  %reverse1114 = shufflevector <2 x i64> %wide.load1113, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4196 = mul i64 %index1104, 8
  %sunkaddr4197 = getelementptr i8, ptr %.027.i301.i.i, i64 %sunkaddr4196
  %sunkaddr4198 = getelementptr i8, ptr %sunkaddr4197, i64 8
  %wide.load1115 = load <2 x i64>, ptr %sunkaddr4198, align 8, !alias.scope !204, !noalias !205
  %reverse1116 = shufflevector <2 x i64> %wide.load1115, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1116, ptr %uglygep3298, align 8, !alias.scope !203
  store <2 x i64> %reverse1114, ptr %sunkaddr4198, align 8, !alias.scope !204, !noalias !205
  %index.next1117 = add nuw i64 %index1104, 2
  %lsr.iv.next3296 = add i64 %lsr.iv3295, -16
  %3303 = icmp eq i64 %n.vec1091, %index.next1117
  br i1 %3303, label %middle.block1086, label %vector.body1103, !llvm.loop !206

middle.block1086:                                 ; preds = %vector.body1103
  %cmp.n1102 = icmp eq i64 %3288, %n.vec1091
  br i1 %cmp.n1102, label %sort.quad_reversal.exit389.i.i, label %.lr.ph176.i.i.preheader

.lr.ph176.i.i.preheader:                          ; preds = %middle.block1086, %vector.memcheck1056, %vector.scevcheck1047, %.lr.ph176.preheader.i.i
  %.1.i308175.i.i.ph = phi i64 [ %3288, %vector.memcheck1056 ], [ %3288, %vector.scevcheck1047 ], [ %3288, %.lr.ph176.preheader.i.i ], [ %ind.end1092, %middle.block1086 ]
  %.024.i307174.i.i.ph = phi ptr [ %94, %vector.memcheck1056 ], [ %94, %vector.scevcheck1047 ], [ %94, %.lr.ph176.preheader.i.i ], [ %ind.end1094, %middle.block1086 ]
  %.126.i306173.i.i.ph = phi ptr [ %.025.i302.i.i, %vector.memcheck1056 ], [ %.025.i302.i.i, %vector.scevcheck1047 ], [ %.025.i302.i.i, %.lr.ph176.preheader.i.i ], [ %ind.end1096, %middle.block1086 ]
  %.128.i305172.i.i.ph = phi ptr [ %.027.i301.i.i, %vector.memcheck1056 ], [ %.027.i301.i.i, %vector.scevcheck1047 ], [ %.027.i301.i.i, %.lr.ph176.preheader.i.i ], [ %ind.end1098, %middle.block1086 ]
  %.029.i304171.i.i.ph = phi ptr [ %.4218.lcssa.i.i214, %vector.memcheck1056 ], [ %.4218.lcssa.i.i214, %vector.scevcheck1047 ], [ %.4218.lcssa.i.i214, %.lr.ph176.preheader.i.i ], [ %ind.end1100, %middle.block1086 ]
  %xtraiter2595 = and i64 %.1.i308175.i.i.ph, 1
  %lcmp.mod2596.not = icmp eq i64 %xtraiter2595, 0
  br i1 %lcmp.mod2596.not, label %.lr.ph176.i.i.prol.loopexit, label %.lr.ph176.i.i.prol

.lr.ph176.i.i.prol:                               ; preds = %.lr.ph176.i.i.preheader
  %3304 = getelementptr inbounds i8, ptr %.128.i305172.i.i.ph, i64 8
  %3305 = getelementptr inbounds i8, ptr %.126.i306173.i.i.ph, i64 -8
  %3306 = getelementptr inbounds i8, ptr %.029.i304171.i.i.ph, i64 -8
  %3307 = getelementptr inbounds i8, ptr %.024.i307174.i.i.ph, i64 8
  %3308 = add nsw i64 %.1.i308175.i.i.ph, -1
  %3309 = load i64, ptr %3307, align 8
  %3310 = load i64, ptr %3306, align 8
  store i64 %3310, ptr %3307, align 8
  store i64 %3309, ptr %3306, align 8
  %3311 = load i64, ptr %3305, align 8
  %3312 = load i64, ptr %3304, align 8
  store i64 %3312, ptr %3305, align 8
  store i64 %3311, ptr %3304, align 8
  br label %.lr.ph176.i.i.prol.loopexit

.lr.ph176.i.i.prol.loopexit:                      ; preds = %.lr.ph176.i.i.prol, %.lr.ph176.i.i.preheader
  %.1.i308175.i.i.unr = phi i64 [ %.1.i308175.i.i.ph, %.lr.ph176.i.i.preheader ], [ %3308, %.lr.ph176.i.i.prol ]
  %.024.i307174.i.i.unr = phi ptr [ %.024.i307174.i.i.ph, %.lr.ph176.i.i.preheader ], [ %3307, %.lr.ph176.i.i.prol ]
  %.126.i306173.i.i.unr = phi ptr [ %.126.i306173.i.i.ph, %.lr.ph176.i.i.preheader ], [ %3305, %.lr.ph176.i.i.prol ]
  %.128.i305172.i.i.unr = phi ptr [ %.128.i305172.i.i.ph, %.lr.ph176.i.i.preheader ], [ %3304, %.lr.ph176.i.i.prol ]
  %.029.i304171.i.i.unr = phi ptr [ %.029.i304171.i.i.ph, %.lr.ph176.i.i.preheader ], [ %3306, %.lr.ph176.i.i.prol ]
  %3313 = icmp eq i64 %.1.i308175.i.i.ph, 1
  br i1 %3313, label %sort.quad_reversal.exit389.i.i, label %.lr.ph176.i.i.preheader2747

.lr.ph176.i.i.preheader2747:                      ; preds = %.lr.ph176.i.i.prol.loopexit
  br label %.lr.ph176.i.i

3314:                                             ; preds = %3272
  %3315 = load i64, ptr %3278, align 8
  %3316 = load i64, ptr %3280, align 8
  store i64 %3316, ptr %3278, align 8
  %3317 = getelementptr inbounds i8, ptr %3278, i64 -8
  store i64 %3315, ptr %3280, align 8
  %3318 = getelementptr inbounds i8, ptr %3280, i64 8
  %3319 = add nsw i64 %3276, -1
  br label %._crit_edge.i300.i.i

.lr.ph176.i.i:                                    ; preds = %.lr.ph176.i.i, %.lr.ph176.i.i.preheader2747
  %lsr.iv3283 = phi i64 [ -1, %.lr.ph176.i.i.preheader2747 ], [ %lsr.iv.next3284, %.lr.ph176.i.i ]
  %lsr.iv3277 = phi i64 [ 0, %.lr.ph176.i.i.preheader2747 ], [ %lsr.iv.next3278, %.lr.ph176.i.i ]
  %3320 = shl i64 %lsr.iv3283, 3
  %uglygep3287 = getelementptr i8, ptr %.126.i306173.i.i.unr, i64 %3320
  %uglygep3294 = getelementptr i8, ptr %.029.i304171.i.i.unr, i64 %3320
  %sunkaddr4199 = mul i64 %lsr.iv3277, 8
  %sunkaddr4200 = getelementptr i8, ptr %.024.i307174.i.i.unr, i64 %sunkaddr4199
  %sunkaddr4201 = getelementptr i8, ptr %sunkaddr4200, i64 8
  %3321 = load i64, ptr %sunkaddr4201, align 8
  %3322 = load i64, ptr %uglygep3294, align 8
  store i64 %3322, ptr %sunkaddr4201, align 8
  store i64 %3321, ptr %uglygep3294, align 8
  %3323 = load i64, ptr %uglygep3287, align 8
  %sunkaddr4202 = mul i64 %lsr.iv3277, 8
  %sunkaddr4203 = getelementptr i8, ptr %.128.i305172.i.i.unr, i64 %sunkaddr4202
  %sunkaddr4204 = getelementptr i8, ptr %sunkaddr4203, i64 8
  %3324 = load i64, ptr %sunkaddr4204, align 8
  store i64 %3324, ptr %uglygep3287, align 8
  store i64 %3323, ptr %sunkaddr4204, align 8
  %3325 = shl i64 %lsr.iv3283, 3
  %uglygep3285 = getelementptr i8, ptr %.126.i306173.i.i.unr, i64 %3325
  %uglygep3286 = getelementptr i8, ptr %uglygep3285, i64 -8
  %uglygep3292 = getelementptr i8, ptr %.029.i304171.i.i.unr, i64 %3325
  %uglygep3293 = getelementptr i8, ptr %uglygep3292, i64 -8
  %sunkaddr4205 = mul i64 %lsr.iv3277, 8
  %sunkaddr4206 = getelementptr i8, ptr %.024.i307174.i.i.unr, i64 %sunkaddr4205
  %sunkaddr4207 = getelementptr i8, ptr %sunkaddr4206, i64 16
  %3326 = load i64, ptr %sunkaddr4207, align 8
  %3327 = load i64, ptr %uglygep3293, align 8
  store i64 %3327, ptr %sunkaddr4207, align 8
  store i64 %3326, ptr %uglygep3293, align 8
  %3328 = load i64, ptr %uglygep3286, align 8
  %sunkaddr4208 = mul i64 %lsr.iv3277, 8
  %sunkaddr4209 = getelementptr i8, ptr %.128.i305172.i.i.unr, i64 %sunkaddr4208
  %sunkaddr4210 = getelementptr i8, ptr %sunkaddr4209, i64 16
  %3329 = load i64, ptr %sunkaddr4210, align 8
  store i64 %3329, ptr %uglygep3286, align 8
  store i64 %3328, ptr %sunkaddr4210, align 8
  %lsr.iv.next3278 = add i64 %lsr.iv3277, 2
  %lsr.iv.next3284 = add i64 %lsr.iv3283, -2
  %3330 = icmp eq i64 %.1.i308175.i.i.unr, %lsr.iv.next3278
  br i1 %3330, label %sort.quad_reversal.exit389.i.i, label %.lr.ph176.i.i, !llvm.loop !207

3331:                                             ; preds = %3119
  %3332 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 1
  %3333 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %3334 = ptrtoint ptr %3332 to i64
  %3335 = sub nuw i64 %3333, %3334
  %3336 = lshr i64 %3335, 4
  %3337 = shl nuw nsw i64 %3336, 3
  %3338 = getelementptr inbounds i8, ptr %3332, i64 %3337
  %3339 = sub nsw i64 0, %3337
  %3340 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %3339
  %3341 = and i64 %3335, 16
  %3342 = icmp eq i64 %3341, 0
  br i1 %3342, label %3375, label %._crit_edge.i310.i.i

._crit_edge.i310.i.i:                             ; preds = %3375, %3331
  %.027.i311.i.i = phi ptr [ %3379, %3375 ], [ %3340, %3331 ]
  %.025.i312.i.i = phi ptr [ %3378, %3375 ], [ %3338, %3331 ]
  %.0.i313.i.i = phi i64 [ %3380, %3375 ], [ %3336, %3331 ]
  %3343 = load i64, ptr %3332, align 8
  %3344 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %3344, ptr %3332, align 8
  store i64 %3343, ptr %.4223.lcssa.i.i213, align 8
  %3345 = load i64, ptr %.025.i312.i.i, align 8
  %3346 = load i64, ptr %.027.i311.i.i, align 8
  store i64 %3346, ptr %.025.i312.i.i, align 8
  store i64 %3345, ptr %.027.i311.i.i, align 8
  %3347 = icmp ult i64 %.0.i313.i.i, 2
  br i1 %3347, label %sort.quad_reversal.exit299.i.i, label %.lr.ph170.preheader.i.i

.lr.ph170.preheader.i.i:                          ; preds = %._crit_edge.i310.i.i
  %3348 = lshr i64 %.0.i313.i.i, 1
  %min.iters.check1017 = icmp ult i64 %.0.i313.i.i, 80
  br i1 %min.iters.check1017, label %.lr.ph170.i.i.preheader, label %vector.scevcheck976

vector.scevcheck976:                              ; preds = %.lr.ph170.preheader.i.i
  %const3462 = bitcast i64 2305843009213693951 to i64
  %3349 = add nsw i64 %3348, -1
  %uglygep977 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result979.neg = mul i64 %3349, -8
  %3350 = getelementptr i8, ptr %uglygep977, i64 %mul.result979.neg
  %3351 = icmp ugt ptr %3350, %uglygep977
  %uglygep981 = getelementptr i8, ptr %.025.i312.i.i, i64 -8
  %mul.result983.neg = mul i64 %3349, -8
  %mul.overflow984 = icmp ugt i64 %3349, %const3462
  %3352 = getelementptr i8, ptr %uglygep981, i64 %mul.result983.neg
  %3353 = icmp ugt ptr %3352, %uglygep981
  %3354 = or i1 %3353, %mul.overflow984
  %3355 = or i1 %3351, %3354
  br i1 %3355, label %.lr.ph170.i.i.preheader, label %vector.memcheck985

vector.memcheck985:                               ; preds = %vector.scevcheck976
  %uglygep986 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 9
  %3356 = shl i64 %3348, 3
  %3357 = add i64 %3356, 9
  %uglygep987 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3357
  %uglygep988 = getelementptr i8, ptr %.027.i311.i.i, i64 8
  %3358 = add i64 %3356, 8
  %uglygep989 = getelementptr i8, ptr %.027.i311.i.i, i64 %3358
  %3359 = mul i64 %3348, -8
  %uglygep990 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3359
  %uglygep991 = getelementptr i8, ptr %.025.i312.i.i, i64 %3359
  %bound0992 = icmp ult ptr %uglygep986, %uglygep989
  %bound1993 = icmp ult ptr %uglygep988, %uglygep987
  %found.conflict994 = and i1 %bound0992, %bound1993
  %bound0995 = icmp ult ptr %uglygep986, %.4223.lcssa.i.i213
  %bound1996 = icmp ult ptr %uglygep990, %uglygep987
  %found.conflict997 = and i1 %bound0995, %bound1996
  %conflict.rdx998 = or i1 %found.conflict994, %found.conflict997
  %bound0999 = icmp ult ptr %uglygep986, %.025.i312.i.i
  %bound11000 = icmp ult ptr %uglygep991, %uglygep987
  %found.conflict1001 = and i1 %bound0999, %bound11000
  %conflict.rdx1002 = or i1 %conflict.rdx998, %found.conflict1001
  %bound01003 = icmp ult ptr %uglygep988, %.4223.lcssa.i.i213
  %bound11004 = icmp ult ptr %uglygep990, %uglygep989
  %found.conflict1005 = and i1 %bound01003, %bound11004
  %conflict.rdx1006 = or i1 %conflict.rdx1002, %found.conflict1005
  %bound01007 = icmp ult ptr %uglygep988, %.025.i312.i.i
  %bound11008 = icmp ult ptr %uglygep991, %uglygep989
  %found.conflict1009 = and i1 %bound01007, %bound11008
  %conflict.rdx1010 = or i1 %conflict.rdx1006, %found.conflict1009
  %bound01011 = icmp ult ptr %uglygep990, %.025.i312.i.i
  %bound11012 = icmp ult ptr %uglygep991, %.4223.lcssa.i.i213
  %found.conflict1013 = and i1 %bound01011, %bound11012
  %conflict.rdx1014 = or i1 %conflict.rdx1010, %found.conflict1013
  br i1 %conflict.rdx1014, label %.lr.ph170.i.i.preheader, label %vector.ph1018

vector.ph1018:                                    ; preds = %vector.memcheck985
  %const3486 = bitcast i64 9223372036854775806 to i64
  %n.vec1020 = and i64 %3348, %const3486
  %ind.end1021 = and i64 %3348, 1
  %3360 = shl i64 %n.vec1020, 3
  %ind.end1023 = getelementptr i8, ptr %3332, i64 %3360
  %3361 = mul i64 %n.vec1020, -8
  %ind.end1025 = getelementptr i8, ptr %.025.i312.i.i, i64 %3361
  %3362 = shl i64 %n.vec1020, 3
  %ind.end1027 = getelementptr i8, ptr %.027.i311.i.i, i64 %3362
  %3363 = mul i64 %n.vec1020, -8
  %ind.end1029 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3363
  br label %vector.body1032

vector.body1032:                                  ; preds = %vector.body1032, %vector.ph1018
  %lsr.iv3318 = phi i64 [ %lsr.iv.next3319, %vector.body1032 ], [ -16, %vector.ph1018 ]
  %index1033 = phi i64 [ 0, %vector.ph1018 ], [ %index.next1046, %vector.body1032 ]
  %sunkaddr4211 = mul i64 %index1033, 8
  %sunkaddr4212 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %sunkaddr4211
  %sunkaddr4213 = getelementptr i8, ptr %sunkaddr4212, i64 9
  %wide.load1038 = load <2 x i64>, ptr %sunkaddr4213, align 8, !alias.scope !208, !noalias !211
  %uglygep3320 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %lsr.iv3318
  %wide.load1039 = load <2 x i64>, ptr %uglygep3320, align 8, !alias.scope !215, !noalias !216
  %reverse1040 = shufflevector <2 x i64> %wide.load1039, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1040, ptr %sunkaddr4213, align 8, !alias.scope !208, !noalias !211
  %reverse1041 = shufflevector <2 x i64> %wide.load1038, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1041, ptr %uglygep3320, align 8, !alias.scope !215, !noalias !216
  %uglygep3321 = getelementptr i8, ptr %.025.i312.i.i, i64 %lsr.iv3318
  %wide.load1042 = load <2 x i64>, ptr %uglygep3321, align 8, !alias.scope !216
  %reverse1043 = shufflevector <2 x i64> %wide.load1042, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4214 = mul i64 %index1033, 8
  %sunkaddr4215 = getelementptr i8, ptr %.027.i311.i.i, i64 %sunkaddr4214
  %sunkaddr4216 = getelementptr i8, ptr %sunkaddr4215, i64 8
  %wide.load1044 = load <2 x i64>, ptr %sunkaddr4216, align 8, !alias.scope !217, !noalias !218
  %reverse1045 = shufflevector <2 x i64> %wide.load1044, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1045, ptr %uglygep3321, align 8, !alias.scope !216
  store <2 x i64> %reverse1043, ptr %sunkaddr4216, align 8, !alias.scope !217, !noalias !218
  %index.next1046 = add nuw i64 %index1033, 2
  %lsr.iv.next3319 = add i64 %lsr.iv3318, -16
  %3364 = icmp eq i64 %n.vec1020, %index.next1046
  br i1 %3364, label %middle.block1015, label %vector.body1032, !llvm.loop !219

middle.block1015:                                 ; preds = %vector.body1032
  %cmp.n1031 = icmp eq i64 %3348, %n.vec1020
  br i1 %cmp.n1031, label %sort.quad_reversal.exit299.i.i, label %.lr.ph170.i.i.preheader

.lr.ph170.i.i.preheader:                          ; preds = %middle.block1015, %vector.memcheck985, %vector.scevcheck976, %.lr.ph170.preheader.i.i
  %.1.i318169.i.i.ph = phi i64 [ %3348, %vector.memcheck985 ], [ %3348, %vector.scevcheck976 ], [ %3348, %.lr.ph170.preheader.i.i ], [ %ind.end1021, %middle.block1015 ]
  %.024.i317168.i.i.ph = phi ptr [ %3332, %vector.memcheck985 ], [ %3332, %vector.scevcheck976 ], [ %3332, %.lr.ph170.preheader.i.i ], [ %ind.end1023, %middle.block1015 ]
  %.126.i316167.i.i.ph = phi ptr [ %.025.i312.i.i, %vector.memcheck985 ], [ %.025.i312.i.i, %vector.scevcheck976 ], [ %.025.i312.i.i, %.lr.ph170.preheader.i.i ], [ %ind.end1025, %middle.block1015 ]
  %.128.i315166.i.i.ph = phi ptr [ %.027.i311.i.i, %vector.memcheck985 ], [ %.027.i311.i.i, %vector.scevcheck976 ], [ %.027.i311.i.i, %.lr.ph170.preheader.i.i ], [ %ind.end1027, %middle.block1015 ]
  %.029.i314165.i.i.ph = phi ptr [ %.4223.lcssa.i.i213, %vector.memcheck985 ], [ %.4223.lcssa.i.i213, %vector.scevcheck976 ], [ %.4223.lcssa.i.i213, %.lr.ph170.preheader.i.i ], [ %ind.end1029, %middle.block1015 ]
  %xtraiter2593 = and i64 %.1.i318169.i.i.ph, 1
  %lcmp.mod2594.not = icmp eq i64 %xtraiter2593, 0
  br i1 %lcmp.mod2594.not, label %.lr.ph170.i.i.prol.loopexit, label %.lr.ph170.i.i.prol

.lr.ph170.i.i.prol:                               ; preds = %.lr.ph170.i.i.preheader
  %3365 = getelementptr inbounds i8, ptr %.128.i315166.i.i.ph, i64 8
  %3366 = getelementptr inbounds i8, ptr %.126.i316167.i.i.ph, i64 -8
  %3367 = getelementptr inbounds i8, ptr %.029.i314165.i.i.ph, i64 -8
  %3368 = getelementptr inbounds i8, ptr %.024.i317168.i.i.ph, i64 8
  %3369 = add nsw i64 %.1.i318169.i.i.ph, -1
  %3370 = load i64, ptr %3368, align 8
  %3371 = load i64, ptr %3367, align 8
  store i64 %3371, ptr %3368, align 8
  store i64 %3370, ptr %3367, align 8
  %3372 = load i64, ptr %3366, align 8
  %3373 = load i64, ptr %3365, align 8
  store i64 %3373, ptr %3366, align 8
  store i64 %3372, ptr %3365, align 8
  br label %.lr.ph170.i.i.prol.loopexit

.lr.ph170.i.i.prol.loopexit:                      ; preds = %.lr.ph170.i.i.prol, %.lr.ph170.i.i.preheader
  %.1.i318169.i.i.unr = phi i64 [ %.1.i318169.i.i.ph, %.lr.ph170.i.i.preheader ], [ %3369, %.lr.ph170.i.i.prol ]
  %.024.i317168.i.i.unr = phi ptr [ %.024.i317168.i.i.ph, %.lr.ph170.i.i.preheader ], [ %3368, %.lr.ph170.i.i.prol ]
  %.126.i316167.i.i.unr = phi ptr [ %.126.i316167.i.i.ph, %.lr.ph170.i.i.preheader ], [ %3366, %.lr.ph170.i.i.prol ]
  %.128.i315166.i.i.unr = phi ptr [ %.128.i315166.i.i.ph, %.lr.ph170.i.i.preheader ], [ %3365, %.lr.ph170.i.i.prol ]
  %.029.i314165.i.i.unr = phi ptr [ %.029.i314165.i.i.ph, %.lr.ph170.i.i.preheader ], [ %3367, %.lr.ph170.i.i.prol ]
  %3374 = icmp eq i64 %.1.i318169.i.i.ph, 1
  br i1 %3374, label %sort.quad_reversal.exit299.i.i, label %.lr.ph170.i.i.preheader2749

.lr.ph170.i.i.preheader2749:                      ; preds = %.lr.ph170.i.i.prol.loopexit
  br label %.lr.ph170.i.i

3375:                                             ; preds = %3331
  %3376 = load i64, ptr %3338, align 8
  %3377 = load i64, ptr %3340, align 8
  store i64 %3377, ptr %3338, align 8
  %3378 = getelementptr inbounds i8, ptr %3338, i64 -8
  store i64 %3376, ptr %3340, align 8
  %3379 = getelementptr inbounds i8, ptr %3340, i64 8
  %3380 = add nsw i64 %3336, -1
  br label %._crit_edge.i310.i.i

.lr.ph170.i.i:                                    ; preds = %.lr.ph170.i.i, %.lr.ph170.i.i.preheader2749
  %lsr.iv3306 = phi i64 [ -1, %.lr.ph170.i.i.preheader2749 ], [ %lsr.iv.next3307, %.lr.ph170.i.i ]
  %lsr.iv3300 = phi i64 [ 0, %.lr.ph170.i.i.preheader2749 ], [ %lsr.iv.next3301, %.lr.ph170.i.i ]
  %3381 = shl i64 %lsr.iv3306, 3
  %uglygep3310 = getelementptr i8, ptr %.126.i316167.i.i.unr, i64 %3381
  %uglygep3317 = getelementptr i8, ptr %.029.i314165.i.i.unr, i64 %3381
  %sunkaddr4217 = mul i64 %lsr.iv3300, 8
  %sunkaddr4218 = getelementptr i8, ptr %.024.i317168.i.i.unr, i64 %sunkaddr4217
  %sunkaddr4219 = getelementptr i8, ptr %sunkaddr4218, i64 8
  %3382 = load i64, ptr %sunkaddr4219, align 8
  %3383 = load i64, ptr %uglygep3317, align 8
  store i64 %3383, ptr %sunkaddr4219, align 8
  store i64 %3382, ptr %uglygep3317, align 8
  %3384 = load i64, ptr %uglygep3310, align 8
  %sunkaddr4220 = mul i64 %lsr.iv3300, 8
  %sunkaddr4221 = getelementptr i8, ptr %.128.i315166.i.i.unr, i64 %sunkaddr4220
  %sunkaddr4222 = getelementptr i8, ptr %sunkaddr4221, i64 8
  %3385 = load i64, ptr %sunkaddr4222, align 8
  store i64 %3385, ptr %uglygep3310, align 8
  store i64 %3384, ptr %sunkaddr4222, align 8
  %3386 = shl i64 %lsr.iv3306, 3
  %uglygep3308 = getelementptr i8, ptr %.126.i316167.i.i.unr, i64 %3386
  %uglygep3309 = getelementptr i8, ptr %uglygep3308, i64 -8
  %uglygep3315 = getelementptr i8, ptr %.029.i314165.i.i.unr, i64 %3386
  %uglygep3316 = getelementptr i8, ptr %uglygep3315, i64 -8
  %sunkaddr4223 = mul i64 %lsr.iv3300, 8
  %sunkaddr4224 = getelementptr i8, ptr %.024.i317168.i.i.unr, i64 %sunkaddr4223
  %sunkaddr4225 = getelementptr i8, ptr %sunkaddr4224, i64 16
  %3387 = load i64, ptr %sunkaddr4225, align 8
  %3388 = load i64, ptr %uglygep3316, align 8
  store i64 %3388, ptr %sunkaddr4225, align 8
  store i64 %3387, ptr %uglygep3316, align 8
  %3389 = load i64, ptr %uglygep3309, align 8
  %sunkaddr4226 = mul i64 %lsr.iv3300, 8
  %sunkaddr4227 = getelementptr i8, ptr %.128.i315166.i.i.unr, i64 %sunkaddr4226
  %sunkaddr4228 = getelementptr i8, ptr %sunkaddr4227, i64 16
  %3390 = load i64, ptr %sunkaddr4228, align 8
  store i64 %3390, ptr %uglygep3309, align 8
  store i64 %3389, ptr %sunkaddr4228, align 8
  %lsr.iv.next3301 = add i64 %lsr.iv3300, 2
  %lsr.iv.next3307 = add i64 %lsr.iv3306, -2
  %3391 = icmp eq i64 %.1.i318169.i.i.unr, %lsr.iv.next3301
  br i1 %3391, label %sort.quad_reversal.exit299.i.i, label %.lr.ph170.i.i, !llvm.loop !220

3392:                                             ; preds = %3119
  %3393 = ptrtoint ptr %.4.lcssa.i.i215 to i64
  %3394 = ptrtoint ptr %94 to i64
  %3395 = sub nuw i64 %3393, %3394
  %3396 = lshr i64 %3395, 4
  %3397 = shl nuw nsw i64 %3396, 3
  %3398 = getelementptr inbounds i8, ptr %94, i64 %3397
  %3399 = sub nsw i64 0, %3397
  %3400 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 %3399
  %3401 = and i64 %3395, 16
  %3402 = icmp eq i64 %3401, 0
  br i1 %3402, label %3434, label %._crit_edge.i320.i.i

._crit_edge.i320.i.i:                             ; preds = %3434, %3392
  %.027.i321.i.i = phi ptr [ %3438, %3434 ], [ %3400, %3392 ]
  %.025.i322.i.i = phi ptr [ %3437, %3434 ], [ %3398, %3392 ]
  %.0.i323.i.i = phi i64 [ %3439, %3434 ], [ %3396, %3392 ]
  %3403 = load i64, ptr %94, align 8
  %3404 = load i64, ptr %.4.lcssa.i.i215, align 8
  store i64 %3404, ptr %94, align 8
  store i64 %3403, ptr %.4.lcssa.i.i215, align 8
  %3405 = load i64, ptr %.025.i322.i.i, align 8
  %3406 = load i64, ptr %.027.i321.i.i, align 8
  store i64 %3406, ptr %.025.i322.i.i, align 8
  store i64 %3405, ptr %.027.i321.i.i, align 8
  %3407 = icmp ult i64 %.0.i323.i.i, 2
  br i1 %3407, label %sort.quad_reversal.exit329.i.i, label %.lr.ph158.preheader.i.i

.lr.ph158.preheader.i.i:                          ; preds = %._crit_edge.i320.i.i
  %3408 = lshr i64 %.0.i323.i.i, 1
  %min.iters.check875 = icmp ult i64 %.0.i323.i.i, 80
  br i1 %min.iters.check875, label %.lr.ph158.i.i.preheader, label %vector.scevcheck834

vector.scevcheck834:                              ; preds = %.lr.ph158.preheader.i.i
  %const3460 = bitcast i64 2305843009213693951 to i64
  %3409 = add nsw i64 %3408, -1
  %uglygep835 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -8
  %mul.result837.neg = mul i64 %3409, -8
  %3410 = getelementptr i8, ptr %uglygep835, i64 %mul.result837.neg
  %3411 = icmp ugt ptr %3410, %uglygep835
  %uglygep839 = getelementptr i8, ptr %.025.i322.i.i, i64 -8
  %mul.result841.neg = mul i64 %3409, -8
  %mul.overflow842 = icmp ugt i64 %3409, %const3460
  %3412 = getelementptr i8, ptr %uglygep839, i64 %mul.result841.neg
  %3413 = icmp ugt ptr %3412, %uglygep839
  %3414 = or i1 %3413, %mul.overflow842
  %3415 = or i1 %3411, %3414
  br i1 %3415, label %.lr.ph158.i.i.preheader, label %vector.memcheck843

vector.memcheck843:                               ; preds = %vector.scevcheck834
  %uglygep844 = getelementptr i8, ptr %94, i64 8
  %3416 = shl i64 %3408, 3
  %3417 = add i64 %3416, 8
  %uglygep845 = getelementptr i8, ptr %94, i64 %3417
  %uglygep846 = getelementptr i8, ptr %.027.i321.i.i, i64 8
  %uglygep847 = getelementptr i8, ptr %.027.i321.i.i, i64 %3417
  %3418 = mul i64 %3408, -8
  %uglygep848 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3418
  %uglygep849 = getelementptr i8, ptr %.025.i322.i.i, i64 %3418
  %bound0850 = icmp ult ptr %uglygep844, %uglygep847
  %bound1851 = icmp ult ptr %uglygep846, %uglygep845
  %found.conflict852 = and i1 %bound0850, %bound1851
  %bound0853 = icmp ult ptr %uglygep844, %.4.lcssa.i.i215
  %bound1854 = icmp ult ptr %uglygep848, %uglygep845
  %found.conflict855 = and i1 %bound0853, %bound1854
  %conflict.rdx856 = or i1 %found.conflict852, %found.conflict855
  %bound0857 = icmp ult ptr %uglygep844, %.025.i322.i.i
  %bound1858 = icmp ult ptr %uglygep849, %uglygep845
  %found.conflict859 = and i1 %bound0857, %bound1858
  %conflict.rdx860 = or i1 %conflict.rdx856, %found.conflict859
  %bound0861 = icmp ult ptr %uglygep846, %.4.lcssa.i.i215
  %bound1862 = icmp ult ptr %uglygep848, %uglygep847
  %found.conflict863 = and i1 %bound0861, %bound1862
  %conflict.rdx864 = or i1 %conflict.rdx860, %found.conflict863
  %bound0865 = icmp ult ptr %uglygep846, %.025.i322.i.i
  %bound1866 = icmp ult ptr %uglygep849, %uglygep847
  %found.conflict867 = and i1 %bound0865, %bound1866
  %conflict.rdx868 = or i1 %conflict.rdx864, %found.conflict867
  %bound0869 = icmp ult ptr %uglygep848, %.025.i322.i.i
  %bound1870 = icmp ult ptr %uglygep849, %.4.lcssa.i.i215
  %found.conflict871 = and i1 %bound0869, %bound1870
  %conflict.rdx872 = or i1 %conflict.rdx868, %found.conflict871
  br i1 %conflict.rdx872, label %.lr.ph158.i.i.preheader, label %vector.ph876

vector.ph876:                                     ; preds = %vector.memcheck843
  %const3484 = bitcast i64 9223372036854775806 to i64
  %n.vec878 = and i64 %3408, %const3484
  %ind.end879 = and i64 %3408, 1
  %3419 = shl i64 %n.vec878, 3
  %ind.end881 = getelementptr i8, ptr %94, i64 %3419
  %3420 = mul i64 %n.vec878, -8
  %ind.end883 = getelementptr i8, ptr %.025.i322.i.i, i64 %3420
  %3421 = shl i64 %n.vec878, 3
  %ind.end885 = getelementptr i8, ptr %.027.i321.i.i, i64 %3421
  %3422 = mul i64 %n.vec878, -8
  %ind.end887 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3422
  br label %vector.body890

vector.body890:                                   ; preds = %vector.body890, %vector.ph876
  %lsr.iv3364 = phi i64 [ %lsr.iv.next3365, %vector.body890 ], [ -16, %vector.ph876 ]
  %index891 = phi i64 [ 0, %vector.ph876 ], [ %index.next904, %vector.body890 ]
  %sunkaddr4229 = mul i64 %index891, 8
  %sunkaddr4230 = getelementptr i8, ptr %94, i64 %sunkaddr4229
  %sunkaddr4231 = getelementptr i8, ptr %sunkaddr4230, i64 8
  %wide.load896 = load <2 x i64>, ptr %sunkaddr4231, align 8, !alias.scope !221, !noalias !224
  %uglygep3366 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %lsr.iv3364
  %wide.load897 = load <2 x i64>, ptr %uglygep3366, align 8, !alias.scope !228, !noalias !229
  %reverse898 = shufflevector <2 x i64> %wide.load897, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse898, ptr %sunkaddr4231, align 8, !alias.scope !221, !noalias !224
  %reverse899 = shufflevector <2 x i64> %wide.load896, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse899, ptr %uglygep3366, align 8, !alias.scope !228, !noalias !229
  %uglygep3367 = getelementptr i8, ptr %.025.i322.i.i, i64 %lsr.iv3364
  %wide.load900 = load <2 x i64>, ptr %uglygep3367, align 8, !alias.scope !229
  %reverse901 = shufflevector <2 x i64> %wide.load900, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4232 = mul i64 %index891, 8
  %sunkaddr4233 = getelementptr i8, ptr %.027.i321.i.i, i64 %sunkaddr4232
  %sunkaddr4234 = getelementptr i8, ptr %sunkaddr4233, i64 8
  %wide.load902 = load <2 x i64>, ptr %sunkaddr4234, align 8, !alias.scope !230, !noalias !231
  %reverse903 = shufflevector <2 x i64> %wide.load902, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse903, ptr %uglygep3367, align 8, !alias.scope !229
  store <2 x i64> %reverse901, ptr %sunkaddr4234, align 8, !alias.scope !230, !noalias !231
  %index.next904 = add nuw i64 %index891, 2
  %lsr.iv.next3365 = add i64 %lsr.iv3364, -16
  %3423 = icmp eq i64 %n.vec878, %index.next904
  br i1 %3423, label %middle.block873, label %vector.body890, !llvm.loop !232

middle.block873:                                  ; preds = %vector.body890
  %cmp.n889 = icmp eq i64 %3408, %n.vec878
  br i1 %cmp.n889, label %sort.quad_reversal.exit329.i.i, label %.lr.ph158.i.i.preheader

.lr.ph158.i.i.preheader:                          ; preds = %middle.block873, %vector.memcheck843, %vector.scevcheck834, %.lr.ph158.preheader.i.i
  %.1.i328157.i.i.ph = phi i64 [ %3408, %vector.memcheck843 ], [ %3408, %vector.scevcheck834 ], [ %3408, %.lr.ph158.preheader.i.i ], [ %ind.end879, %middle.block873 ]
  %.024.i327156.i.i.ph = phi ptr [ %94, %vector.memcheck843 ], [ %94, %vector.scevcheck834 ], [ %94, %.lr.ph158.preheader.i.i ], [ %ind.end881, %middle.block873 ]
  %.126.i326155.i.i.ph = phi ptr [ %.025.i322.i.i, %vector.memcheck843 ], [ %.025.i322.i.i, %vector.scevcheck834 ], [ %.025.i322.i.i, %.lr.ph158.preheader.i.i ], [ %ind.end883, %middle.block873 ]
  %.128.i325154.i.i.ph = phi ptr [ %.027.i321.i.i, %vector.memcheck843 ], [ %.027.i321.i.i, %vector.scevcheck834 ], [ %.027.i321.i.i, %.lr.ph158.preheader.i.i ], [ %ind.end885, %middle.block873 ]
  %.029.i324153.i.i.ph = phi ptr [ %.4.lcssa.i.i215, %vector.memcheck843 ], [ %.4.lcssa.i.i215, %vector.scevcheck834 ], [ %.4.lcssa.i.i215, %.lr.ph158.preheader.i.i ], [ %ind.end887, %middle.block873 ]
  %xtraiter2589 = and i64 %.1.i328157.i.i.ph, 1
  %lcmp.mod2590.not = icmp eq i64 %xtraiter2589, 0
  br i1 %lcmp.mod2590.not, label %.lr.ph158.i.i.prol.loopexit, label %.lr.ph158.i.i.prol

.lr.ph158.i.i.prol:                               ; preds = %.lr.ph158.i.i.preheader
  %3424 = getelementptr inbounds i8, ptr %.128.i325154.i.i.ph, i64 8
  %3425 = getelementptr inbounds i8, ptr %.126.i326155.i.i.ph, i64 -8
  %3426 = getelementptr inbounds i8, ptr %.029.i324153.i.i.ph, i64 -8
  %3427 = getelementptr inbounds i8, ptr %.024.i327156.i.i.ph, i64 8
  %3428 = add nsw i64 %.1.i328157.i.i.ph, -1
  %3429 = load i64, ptr %3427, align 8
  %3430 = load i64, ptr %3426, align 8
  store i64 %3430, ptr %3427, align 8
  store i64 %3429, ptr %3426, align 8
  %3431 = load i64, ptr %3425, align 8
  %3432 = load i64, ptr %3424, align 8
  store i64 %3432, ptr %3425, align 8
  store i64 %3431, ptr %3424, align 8
  br label %.lr.ph158.i.i.prol.loopexit

.lr.ph158.i.i.prol.loopexit:                      ; preds = %.lr.ph158.i.i.prol, %.lr.ph158.i.i.preheader
  %.1.i328157.i.i.unr = phi i64 [ %.1.i328157.i.i.ph, %.lr.ph158.i.i.preheader ], [ %3428, %.lr.ph158.i.i.prol ]
  %.024.i327156.i.i.unr = phi ptr [ %.024.i327156.i.i.ph, %.lr.ph158.i.i.preheader ], [ %3427, %.lr.ph158.i.i.prol ]
  %.126.i326155.i.i.unr = phi ptr [ %.126.i326155.i.i.ph, %.lr.ph158.i.i.preheader ], [ %3425, %.lr.ph158.i.i.prol ]
  %.128.i325154.i.i.unr = phi ptr [ %.128.i325154.i.i.ph, %.lr.ph158.i.i.preheader ], [ %3424, %.lr.ph158.i.i.prol ]
  %.029.i324153.i.i.unr = phi ptr [ %.029.i324153.i.i.ph, %.lr.ph158.i.i.preheader ], [ %3426, %.lr.ph158.i.i.prol ]
  %3433 = icmp eq i64 %.1.i328157.i.i.ph, 1
  br i1 %3433, label %sort.quad_reversal.exit329.i.i, label %.lr.ph158.i.i.preheader2753

.lr.ph158.i.i.preheader2753:                      ; preds = %.lr.ph158.i.i.prol.loopexit
  br label %.lr.ph158.i.i

3434:                                             ; preds = %3392
  %3435 = load i64, ptr %3398, align 8
  %3436 = load i64, ptr %3400, align 8
  store i64 %3436, ptr %3398, align 8
  %3437 = getelementptr inbounds i8, ptr %3398, i64 -8
  store i64 %3435, ptr %3400, align 8
  %3438 = getelementptr inbounds i8, ptr %3400, i64 8
  %3439 = add nsw i64 %3396, -1
  br label %._crit_edge.i320.i.i

.lr.ph158.i.i:                                    ; preds = %.lr.ph158.i.i, %.lr.ph158.i.i.preheader2753
  %lsr.iv3352 = phi i64 [ -1, %.lr.ph158.i.i.preheader2753 ], [ %lsr.iv.next3353, %.lr.ph158.i.i ]
  %lsr.iv3346 = phi i64 [ 0, %.lr.ph158.i.i.preheader2753 ], [ %lsr.iv.next3347, %.lr.ph158.i.i ]
  %3440 = shl i64 %lsr.iv3352, 3
  %uglygep3356 = getelementptr i8, ptr %.126.i326155.i.i.unr, i64 %3440
  %uglygep3363 = getelementptr i8, ptr %.029.i324153.i.i.unr, i64 %3440
  %sunkaddr4235 = mul i64 %lsr.iv3346, 8
  %sunkaddr4236 = getelementptr i8, ptr %.024.i327156.i.i.unr, i64 %sunkaddr4235
  %sunkaddr4237 = getelementptr i8, ptr %sunkaddr4236, i64 8
  %3441 = load i64, ptr %sunkaddr4237, align 8
  %3442 = load i64, ptr %uglygep3363, align 8
  store i64 %3442, ptr %sunkaddr4237, align 8
  store i64 %3441, ptr %uglygep3363, align 8
  %3443 = load i64, ptr %uglygep3356, align 8
  %sunkaddr4238 = mul i64 %lsr.iv3346, 8
  %sunkaddr4239 = getelementptr i8, ptr %.128.i325154.i.i.unr, i64 %sunkaddr4238
  %sunkaddr4240 = getelementptr i8, ptr %sunkaddr4239, i64 8
  %3444 = load i64, ptr %sunkaddr4240, align 8
  store i64 %3444, ptr %uglygep3356, align 8
  store i64 %3443, ptr %sunkaddr4240, align 8
  %3445 = shl i64 %lsr.iv3352, 3
  %uglygep3354 = getelementptr i8, ptr %.126.i326155.i.i.unr, i64 %3445
  %uglygep3355 = getelementptr i8, ptr %uglygep3354, i64 -8
  %uglygep3361 = getelementptr i8, ptr %.029.i324153.i.i.unr, i64 %3445
  %uglygep3362 = getelementptr i8, ptr %uglygep3361, i64 -8
  %sunkaddr4241 = mul i64 %lsr.iv3346, 8
  %sunkaddr4242 = getelementptr i8, ptr %.024.i327156.i.i.unr, i64 %sunkaddr4241
  %sunkaddr4243 = getelementptr i8, ptr %sunkaddr4242, i64 16
  %3446 = load i64, ptr %sunkaddr4243, align 8
  %3447 = load i64, ptr %uglygep3362, align 8
  store i64 %3447, ptr %sunkaddr4243, align 8
  store i64 %3446, ptr %uglygep3362, align 8
  %3448 = load i64, ptr %uglygep3355, align 8
  %sunkaddr4244 = mul i64 %lsr.iv3346, 8
  %sunkaddr4245 = getelementptr i8, ptr %.128.i325154.i.i.unr, i64 %sunkaddr4244
  %sunkaddr4246 = getelementptr i8, ptr %sunkaddr4245, i64 16
  %3449 = load i64, ptr %sunkaddr4246, align 8
  store i64 %3449, ptr %uglygep3355, align 8
  store i64 %3448, ptr %sunkaddr4246, align 8
  %lsr.iv.next3347 = add i64 %lsr.iv3346, 2
  %lsr.iv.next3353 = add i64 %lsr.iv3352, -2
  %3450 = icmp eq i64 %.1.i328157.i.i.unr, %lsr.iv.next3347
  br i1 %3450, label %sort.quad_reversal.exit329.i.i, label %.lr.ph158.i.i, !llvm.loop !233

sort.quad_reversal.exit329.i.i:                   ; preds = %.lr.ph158.i.i, %.lr.ph158.i.i.prol.loopexit, %middle.block873, %._crit_edge.i320.i.i
  %3451 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 1
  %3452 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %3453 = ptrtoint ptr %3451 to i64
  %3454 = sub nuw i64 %3452, %3453
  %3455 = lshr i64 %3454, 4
  %3456 = shl nuw nsw i64 %3455, 3
  %3457 = getelementptr inbounds i8, ptr %3451, i64 %3456
  %3458 = sub nsw i64 0, %3456
  %3459 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %3458
  %3460 = and i64 %3454, 16
  %3461 = icmp eq i64 %3460, 0
  br i1 %3461, label %3494, label %._crit_edge.i330.i.i

._crit_edge.i330.i.i:                             ; preds = %3494, %sort.quad_reversal.exit329.i.i
  %.027.i331.i.i240 = phi ptr [ %3498, %3494 ], [ %3459, %sort.quad_reversal.exit329.i.i ]
  %.025.i332.i.i241 = phi ptr [ %3497, %3494 ], [ %3457, %sort.quad_reversal.exit329.i.i ]
  %.0.i333.i.i242 = phi i64 [ %3499, %3494 ], [ %3455, %sort.quad_reversal.exit329.i.i ]
  %3462 = load i64, ptr %3451, align 8
  %3463 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %3463, ptr %3451, align 8
  store i64 %3462, ptr %.4223.lcssa.i.i213, align 8
  %3464 = load i64, ptr %.025.i332.i.i241, align 8
  %3465 = load i64, ptr %.027.i331.i.i240, align 8
  store i64 %3465, ptr %.025.i332.i.i241, align 8
  store i64 %3464, ptr %.027.i331.i.i240, align 8
  %3466 = icmp ult i64 %.0.i333.i.i242, 2
  br i1 %3466, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph164.preheader.i.i

.lr.ph164.preheader.i.i:                          ; preds = %._crit_edge.i330.i.i
  %3467 = lshr i64 %.0.i333.i.i242, 1
  %min.iters.check946 = icmp ult i64 %.0.i333.i.i242, 80
  br i1 %min.iters.check946, label %.lr.ph164.i.i.preheader, label %vector.scevcheck905

vector.scevcheck905:                              ; preds = %.lr.ph164.preheader.i.i
  %const3461 = bitcast i64 2305843009213693951 to i64
  %3468 = add nsw i64 %3467, -1
  %uglygep906 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result908.neg = mul i64 %3468, -8
  %3469 = getelementptr i8, ptr %uglygep906, i64 %mul.result908.neg
  %3470 = icmp ugt ptr %3469, %uglygep906
  %uglygep910 = getelementptr i8, ptr %.025.i332.i.i241, i64 -8
  %mul.result912.neg = mul i64 %3468, -8
  %mul.overflow913 = icmp ugt i64 %3468, %const3461
  %3471 = getelementptr i8, ptr %uglygep910, i64 %mul.result912.neg
  %3472 = icmp ugt ptr %3471, %uglygep910
  %3473 = or i1 %3472, %mul.overflow913
  %3474 = or i1 %3470, %3473
  br i1 %3474, label %.lr.ph164.i.i.preheader, label %vector.memcheck914

vector.memcheck914:                               ; preds = %vector.scevcheck905
  %uglygep915 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 9
  %3475 = shl i64 %3467, 3
  %3476 = add i64 %3475, 9
  %uglygep916 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3476
  %uglygep917 = getelementptr i8, ptr %.027.i331.i.i240, i64 8
  %3477 = add i64 %3475, 8
  %uglygep918 = getelementptr i8, ptr %.027.i331.i.i240, i64 %3477
  %3478 = mul i64 %3467, -8
  %uglygep919 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3478
  %uglygep920 = getelementptr i8, ptr %.025.i332.i.i241, i64 %3478
  %bound0921 = icmp ult ptr %uglygep915, %uglygep918
  %bound1922 = icmp ult ptr %uglygep917, %uglygep916
  %found.conflict923 = and i1 %bound0921, %bound1922
  %bound0924 = icmp ult ptr %uglygep915, %.4223.lcssa.i.i213
  %bound1925 = icmp ult ptr %uglygep919, %uglygep916
  %found.conflict926 = and i1 %bound0924, %bound1925
  %conflict.rdx927 = or i1 %found.conflict923, %found.conflict926
  %bound0928 = icmp ult ptr %uglygep915, %.025.i332.i.i241
  %bound1929 = icmp ult ptr %uglygep920, %uglygep916
  %found.conflict930 = and i1 %bound0928, %bound1929
  %conflict.rdx931 = or i1 %conflict.rdx927, %found.conflict930
  %bound0932 = icmp ult ptr %uglygep917, %.4223.lcssa.i.i213
  %bound1933 = icmp ult ptr %uglygep919, %uglygep918
  %found.conflict934 = and i1 %bound0932, %bound1933
  %conflict.rdx935 = or i1 %conflict.rdx931, %found.conflict934
  %bound0936 = icmp ult ptr %uglygep917, %.025.i332.i.i241
  %bound1937 = icmp ult ptr %uglygep920, %uglygep918
  %found.conflict938 = and i1 %bound0936, %bound1937
  %conflict.rdx939 = or i1 %conflict.rdx935, %found.conflict938
  %bound0940 = icmp ult ptr %uglygep919, %.025.i332.i.i241
  %bound1941 = icmp ult ptr %uglygep920, %.4223.lcssa.i.i213
  %found.conflict942 = and i1 %bound0940, %bound1941
  %conflict.rdx943 = or i1 %conflict.rdx939, %found.conflict942
  br i1 %conflict.rdx943, label %.lr.ph164.i.i.preheader, label %vector.ph947

vector.ph947:                                     ; preds = %vector.memcheck914
  %const3485 = bitcast i64 9223372036854775806 to i64
  %n.vec949 = and i64 %3467, %const3485
  %ind.end950 = and i64 %3467, 1
  %3479 = shl i64 %n.vec949, 3
  %ind.end952 = getelementptr i8, ptr %3451, i64 %3479
  %3480 = mul i64 %n.vec949, -8
  %ind.end954 = getelementptr i8, ptr %.025.i332.i.i241, i64 %3480
  %3481 = shl i64 %n.vec949, 3
  %ind.end956 = getelementptr i8, ptr %.027.i331.i.i240, i64 %3481
  %3482 = mul i64 %n.vec949, -8
  %ind.end958 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3482
  br label %vector.body961

vector.body961:                                   ; preds = %vector.body961, %vector.ph947
  %lsr.iv3341 = phi i64 [ %lsr.iv.next3342, %vector.body961 ], [ -16, %vector.ph947 ]
  %index962 = phi i64 [ 0, %vector.ph947 ], [ %index.next975, %vector.body961 ]
  %sunkaddr4247 = mul i64 %index962, 8
  %sunkaddr4248 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %sunkaddr4247
  %sunkaddr4249 = getelementptr i8, ptr %sunkaddr4248, i64 9
  %wide.load967 = load <2 x i64>, ptr %sunkaddr4249, align 8, !alias.scope !234, !noalias !237
  %uglygep3343 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %lsr.iv3341
  %wide.load968 = load <2 x i64>, ptr %uglygep3343, align 8, !alias.scope !241, !noalias !242
  %reverse969 = shufflevector <2 x i64> %wide.load968, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse969, ptr %sunkaddr4249, align 8, !alias.scope !234, !noalias !237
  %reverse970 = shufflevector <2 x i64> %wide.load967, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse970, ptr %uglygep3343, align 8, !alias.scope !241, !noalias !242
  %uglygep3344 = getelementptr i8, ptr %.025.i332.i.i241, i64 %lsr.iv3341
  %wide.load971 = load <2 x i64>, ptr %uglygep3344, align 8, !alias.scope !242
  %reverse972 = shufflevector <2 x i64> %wide.load971, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4250 = mul i64 %index962, 8
  %sunkaddr4251 = getelementptr i8, ptr %.027.i331.i.i240, i64 %sunkaddr4250
  %sunkaddr4252 = getelementptr i8, ptr %sunkaddr4251, i64 8
  %wide.load973 = load <2 x i64>, ptr %sunkaddr4252, align 8, !alias.scope !243, !noalias !244
  %reverse974 = shufflevector <2 x i64> %wide.load973, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse974, ptr %uglygep3344, align 8, !alias.scope !242
  store <2 x i64> %reverse972, ptr %sunkaddr4252, align 8, !alias.scope !243, !noalias !244
  %index.next975 = add nuw i64 %index962, 2
  %lsr.iv.next3342 = add i64 %lsr.iv3341, -16
  %3483 = icmp eq i64 %n.vec949, %index.next975
  br i1 %3483, label %middle.block944, label %vector.body961, !llvm.loop !245

middle.block944:                                  ; preds = %vector.body961
  %cmp.n960 = icmp eq i64 %3467, %n.vec949
  br i1 %cmp.n960, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph164.i.i.preheader

.lr.ph164.i.i.preheader:                          ; preds = %middle.block944, %vector.memcheck914, %vector.scevcheck905, %.lr.ph164.preheader.i.i
  %.1.i338163.i.i.ph = phi i64 [ %3467, %vector.memcheck914 ], [ %3467, %vector.scevcheck905 ], [ %3467, %.lr.ph164.preheader.i.i ], [ %ind.end950, %middle.block944 ]
  %.024.i337162.i.i.ph = phi ptr [ %3451, %vector.memcheck914 ], [ %3451, %vector.scevcheck905 ], [ %3451, %.lr.ph164.preheader.i.i ], [ %ind.end952, %middle.block944 ]
  %.126.i336161.i.i.ph = phi ptr [ %.025.i332.i.i241, %vector.memcheck914 ], [ %.025.i332.i.i241, %vector.scevcheck905 ], [ %.025.i332.i.i241, %.lr.ph164.preheader.i.i ], [ %ind.end954, %middle.block944 ]
  %.128.i335160.i.i.ph = phi ptr [ %.027.i331.i.i240, %vector.memcheck914 ], [ %.027.i331.i.i240, %vector.scevcheck905 ], [ %.027.i331.i.i240, %.lr.ph164.preheader.i.i ], [ %ind.end956, %middle.block944 ]
  %.029.i334159.i.i.ph = phi ptr [ %.4223.lcssa.i.i213, %vector.memcheck914 ], [ %.4223.lcssa.i.i213, %vector.scevcheck905 ], [ %.4223.lcssa.i.i213, %.lr.ph164.preheader.i.i ], [ %ind.end958, %middle.block944 ]
  %xtraiter2591 = and i64 %.1.i338163.i.i.ph, 1
  %lcmp.mod2592.not = icmp eq i64 %xtraiter2591, 0
  br i1 %lcmp.mod2592.not, label %.lr.ph164.i.i.prol.loopexit, label %.lr.ph164.i.i.prol

.lr.ph164.i.i.prol:                               ; preds = %.lr.ph164.i.i.preheader
  %3484 = getelementptr inbounds i8, ptr %.128.i335160.i.i.ph, i64 8
  %3485 = getelementptr inbounds i8, ptr %.126.i336161.i.i.ph, i64 -8
  %3486 = getelementptr inbounds i8, ptr %.029.i334159.i.i.ph, i64 -8
  %3487 = getelementptr inbounds i8, ptr %.024.i337162.i.i.ph, i64 8
  %3488 = add nsw i64 %.1.i338163.i.i.ph, -1
  %3489 = load i64, ptr %3487, align 8
  %3490 = load i64, ptr %3486, align 8
  store i64 %3490, ptr %3487, align 8
  store i64 %3489, ptr %3486, align 8
  %3491 = load i64, ptr %3485, align 8
  %3492 = load i64, ptr %3484, align 8
  store i64 %3492, ptr %3485, align 8
  store i64 %3491, ptr %3484, align 8
  br label %.lr.ph164.i.i.prol.loopexit

.lr.ph164.i.i.prol.loopexit:                      ; preds = %.lr.ph164.i.i.prol, %.lr.ph164.i.i.preheader
  %.1.i338163.i.i.unr = phi i64 [ %.1.i338163.i.i.ph, %.lr.ph164.i.i.preheader ], [ %3488, %.lr.ph164.i.i.prol ]
  %.024.i337162.i.i.unr = phi ptr [ %.024.i337162.i.i.ph, %.lr.ph164.i.i.preheader ], [ %3487, %.lr.ph164.i.i.prol ]
  %.126.i336161.i.i.unr = phi ptr [ %.126.i336161.i.i.ph, %.lr.ph164.i.i.preheader ], [ %3485, %.lr.ph164.i.i.prol ]
  %.128.i335160.i.i.unr = phi ptr [ %.128.i335160.i.i.ph, %.lr.ph164.i.i.preheader ], [ %3484, %.lr.ph164.i.i.prol ]
  %.029.i334159.i.i.unr = phi ptr [ %.029.i334159.i.i.ph, %.lr.ph164.i.i.preheader ], [ %3486, %.lr.ph164.i.i.prol ]
  %3493 = icmp eq i64 %.1.i338163.i.i.ph, 1
  br i1 %3493, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph164.i.i.preheader2751

.lr.ph164.i.i.preheader2751:                      ; preds = %.lr.ph164.i.i.prol.loopexit
  br label %.lr.ph164.i.i

3494:                                             ; preds = %sort.quad_reversal.exit329.i.i
  %3495 = load i64, ptr %3457, align 8
  %3496 = load i64, ptr %3459, align 8
  store i64 %3496, ptr %3457, align 8
  %3497 = getelementptr inbounds i8, ptr %3457, i64 -8
  store i64 %3495, ptr %3459, align 8
  %3498 = getelementptr inbounds i8, ptr %3459, i64 8
  %3499 = add nsw i64 %3455, -1
  br label %._crit_edge.i330.i.i

.lr.ph164.i.i:                                    ; preds = %.lr.ph164.i.i, %.lr.ph164.i.i.preheader2751
  %lsr.iv3329 = phi i64 [ -1, %.lr.ph164.i.i.preheader2751 ], [ %lsr.iv.next3330, %.lr.ph164.i.i ]
  %lsr.iv3323 = phi i64 [ 0, %.lr.ph164.i.i.preheader2751 ], [ %lsr.iv.next3324, %.lr.ph164.i.i ]
  %3500 = shl i64 %lsr.iv3329, 3
  %uglygep3333 = getelementptr i8, ptr %.126.i336161.i.i.unr, i64 %3500
  %uglygep3340 = getelementptr i8, ptr %.029.i334159.i.i.unr, i64 %3500
  %sunkaddr4253 = mul i64 %lsr.iv3323, 8
  %sunkaddr4254 = getelementptr i8, ptr %.024.i337162.i.i.unr, i64 %sunkaddr4253
  %sunkaddr4255 = getelementptr i8, ptr %sunkaddr4254, i64 8
  %3501 = load i64, ptr %sunkaddr4255, align 8
  %3502 = load i64, ptr %uglygep3340, align 8
  store i64 %3502, ptr %sunkaddr4255, align 8
  store i64 %3501, ptr %uglygep3340, align 8
  %3503 = load i64, ptr %uglygep3333, align 8
  %sunkaddr4256 = mul i64 %lsr.iv3323, 8
  %sunkaddr4257 = getelementptr i8, ptr %.128.i335160.i.i.unr, i64 %sunkaddr4256
  %sunkaddr4258 = getelementptr i8, ptr %sunkaddr4257, i64 8
  %3504 = load i64, ptr %sunkaddr4258, align 8
  store i64 %3504, ptr %uglygep3333, align 8
  store i64 %3503, ptr %sunkaddr4258, align 8
  %3505 = shl i64 %lsr.iv3329, 3
  %uglygep3331 = getelementptr i8, ptr %.126.i336161.i.i.unr, i64 %3505
  %uglygep3332 = getelementptr i8, ptr %uglygep3331, i64 -8
  %uglygep3338 = getelementptr i8, ptr %.029.i334159.i.i.unr, i64 %3505
  %uglygep3339 = getelementptr i8, ptr %uglygep3338, i64 -8
  %sunkaddr4259 = mul i64 %lsr.iv3323, 8
  %sunkaddr4260 = getelementptr i8, ptr %.024.i337162.i.i.unr, i64 %sunkaddr4259
  %sunkaddr4261 = getelementptr i8, ptr %sunkaddr4260, i64 16
  %3506 = load i64, ptr %sunkaddr4261, align 8
  %3507 = load i64, ptr %uglygep3339, align 8
  store i64 %3507, ptr %sunkaddr4261, align 8
  store i64 %3506, ptr %uglygep3339, align 8
  %3508 = load i64, ptr %uglygep3332, align 8
  %sunkaddr4262 = mul i64 %lsr.iv3323, 8
  %sunkaddr4263 = getelementptr i8, ptr %.128.i335160.i.i.unr, i64 %sunkaddr4262
  %sunkaddr4264 = getelementptr i8, ptr %sunkaddr4263, i64 16
  %3509 = load i64, ptr %sunkaddr4264, align 8
  store i64 %3509, ptr %uglygep3332, align 8
  store i64 %3508, ptr %sunkaddr4264, align 8
  %lsr.iv.next3324 = add i64 %lsr.iv3323, 2
  %lsr.iv.next3330 = add i64 %lsr.iv3329, -2
  %3510 = icmp eq i64 %.1.i338163.i.i.unr, %lsr.iv.next3324
  br i1 %3510, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph164.i.i, !llvm.loop !246

3511:                                             ; preds = %3119
  %3512 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 1
  %3513 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %3514 = ptrtoint ptr %3512 to i64
  %3515 = sub nuw i64 %3513, %3514
  %3516 = lshr i64 %3515, 4
  %3517 = shl nuw nsw i64 %3516, 3
  %3518 = getelementptr inbounds i8, ptr %3512, i64 %3517
  %3519 = sub nsw i64 0, %3517
  %3520 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %3519
  %3521 = and i64 %3515, 16
  %3522 = icmp eq i64 %3521, 0
  br i1 %3522, label %3555, label %._crit_edge.i340.i.i

._crit_edge.i340.i.i:                             ; preds = %3555, %3511
  %.027.i341.i.i243 = phi ptr [ %3559, %3555 ], [ %3520, %3511 ]
  %.025.i342.i.i244 = phi ptr [ %3558, %3555 ], [ %3518, %3511 ]
  %.0.i343.i.i245 = phi i64 [ %3560, %3555 ], [ %3516, %3511 ]
  %3523 = load i64, ptr %3512, align 8
  %3524 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %3524, ptr %3512, align 8
  store i64 %3523, ptr %.4223.lcssa.i.i213, align 8
  %3525 = load i64, ptr %.025.i342.i.i244, align 8
  %3526 = load i64, ptr %.027.i341.i.i243, align 8
  store i64 %3526, ptr %.025.i342.i.i244, align 8
  store i64 %3525, ptr %.027.i341.i.i243, align 8
  %3527 = icmp ult i64 %.0.i343.i.i245, 2
  br i1 %3527, label %sort.quad_reversal.exit299.i.i, label %.lr.ph152.preheader.i.i

.lr.ph152.preheader.i.i:                          ; preds = %._crit_edge.i340.i.i
  %3528 = lshr i64 %.0.i343.i.i245, 1
  %min.iters.check804 = icmp ult i64 %.0.i343.i.i245, 80
  br i1 %min.iters.check804, label %.lr.ph152.i.i.preheader, label %vector.scevcheck763

vector.scevcheck763:                              ; preds = %.lr.ph152.preheader.i.i
  %const3459 = bitcast i64 2305843009213693951 to i64
  %3529 = add nsw i64 %3528, -1
  %uglygep764 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result766.neg = mul i64 %3529, -8
  %3530 = getelementptr i8, ptr %uglygep764, i64 %mul.result766.neg
  %3531 = icmp ugt ptr %3530, %uglygep764
  %uglygep768 = getelementptr i8, ptr %.025.i342.i.i244, i64 -8
  %mul.result770.neg = mul i64 %3529, -8
  %mul.overflow771 = icmp ugt i64 %3529, %const3459
  %3532 = getelementptr i8, ptr %uglygep768, i64 %mul.result770.neg
  %3533 = icmp ugt ptr %3532, %uglygep768
  %3534 = or i1 %3533, %mul.overflow771
  %3535 = or i1 %3531, %3534
  br i1 %3535, label %.lr.ph152.i.i.preheader, label %vector.memcheck772

vector.memcheck772:                               ; preds = %vector.scevcheck763
  %uglygep773 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 9
  %3536 = shl i64 %3528, 3
  %3537 = add i64 %3536, 9
  %uglygep774 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3537
  %uglygep775 = getelementptr i8, ptr %.027.i341.i.i243, i64 8
  %3538 = add i64 %3536, 8
  %uglygep776 = getelementptr i8, ptr %.027.i341.i.i243, i64 %3538
  %3539 = mul i64 %3528, -8
  %uglygep777 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3539
  %uglygep778 = getelementptr i8, ptr %.025.i342.i.i244, i64 %3539
  %bound0779 = icmp ult ptr %uglygep773, %uglygep776
  %bound1780 = icmp ult ptr %uglygep775, %uglygep774
  %found.conflict781 = and i1 %bound0779, %bound1780
  %bound0782 = icmp ult ptr %uglygep773, %.4223.lcssa.i.i213
  %bound1783 = icmp ult ptr %uglygep777, %uglygep774
  %found.conflict784 = and i1 %bound0782, %bound1783
  %conflict.rdx785 = or i1 %found.conflict781, %found.conflict784
  %bound0786 = icmp ult ptr %uglygep773, %.025.i342.i.i244
  %bound1787 = icmp ult ptr %uglygep778, %uglygep774
  %found.conflict788 = and i1 %bound0786, %bound1787
  %conflict.rdx789 = or i1 %conflict.rdx785, %found.conflict788
  %bound0790 = icmp ult ptr %uglygep775, %.4223.lcssa.i.i213
  %bound1791 = icmp ult ptr %uglygep777, %uglygep776
  %found.conflict792 = and i1 %bound0790, %bound1791
  %conflict.rdx793 = or i1 %conflict.rdx789, %found.conflict792
  %bound0794 = icmp ult ptr %uglygep775, %.025.i342.i.i244
  %bound1795 = icmp ult ptr %uglygep778, %uglygep776
  %found.conflict796 = and i1 %bound0794, %bound1795
  %conflict.rdx797 = or i1 %conflict.rdx793, %found.conflict796
  %bound0798 = icmp ult ptr %uglygep777, %.025.i342.i.i244
  %bound1799 = icmp ult ptr %uglygep778, %.4223.lcssa.i.i213
  %found.conflict800 = and i1 %bound0798, %bound1799
  %conflict.rdx801 = or i1 %conflict.rdx797, %found.conflict800
  br i1 %conflict.rdx801, label %.lr.ph152.i.i.preheader, label %vector.ph805

vector.ph805:                                     ; preds = %vector.memcheck772
  %const3483 = bitcast i64 9223372036854775806 to i64
  %n.vec807 = and i64 %3528, %const3483
  %ind.end808 = and i64 %3528, 1
  %3540 = shl i64 %n.vec807, 3
  %ind.end810 = getelementptr i8, ptr %3512, i64 %3540
  %3541 = mul i64 %n.vec807, -8
  %ind.end812 = getelementptr i8, ptr %.025.i342.i.i244, i64 %3541
  %3542 = shl i64 %n.vec807, 3
  %ind.end814 = getelementptr i8, ptr %.027.i341.i.i243, i64 %3542
  %3543 = mul i64 %n.vec807, -8
  %ind.end816 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3543
  br label %vector.body819

vector.body819:                                   ; preds = %vector.body819, %vector.ph805
  %lsr.iv3387 = phi i64 [ %lsr.iv.next3388, %vector.body819 ], [ -16, %vector.ph805 ]
  %index820 = phi i64 [ 0, %vector.ph805 ], [ %index.next833, %vector.body819 ]
  %sunkaddr4265 = mul i64 %index820, 8
  %sunkaddr4266 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %sunkaddr4265
  %sunkaddr4267 = getelementptr i8, ptr %sunkaddr4266, i64 9
  %wide.load825 = load <2 x i64>, ptr %sunkaddr4267, align 8, !alias.scope !247, !noalias !250
  %uglygep3389 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %lsr.iv3387
  %wide.load826 = load <2 x i64>, ptr %uglygep3389, align 8, !alias.scope !254, !noalias !255
  %reverse827 = shufflevector <2 x i64> %wide.load826, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse827, ptr %sunkaddr4267, align 8, !alias.scope !247, !noalias !250
  %reverse828 = shufflevector <2 x i64> %wide.load825, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse828, ptr %uglygep3389, align 8, !alias.scope !254, !noalias !255
  %uglygep3390 = getelementptr i8, ptr %.025.i342.i.i244, i64 %lsr.iv3387
  %wide.load829 = load <2 x i64>, ptr %uglygep3390, align 8, !alias.scope !255
  %reverse830 = shufflevector <2 x i64> %wide.load829, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4268 = mul i64 %index820, 8
  %sunkaddr4269 = getelementptr i8, ptr %.027.i341.i.i243, i64 %sunkaddr4268
  %sunkaddr4270 = getelementptr i8, ptr %sunkaddr4269, i64 8
  %wide.load831 = load <2 x i64>, ptr %sunkaddr4270, align 8, !alias.scope !256, !noalias !257
  %reverse832 = shufflevector <2 x i64> %wide.load831, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse832, ptr %uglygep3390, align 8, !alias.scope !255
  store <2 x i64> %reverse830, ptr %sunkaddr4270, align 8, !alias.scope !256, !noalias !257
  %index.next833 = add nuw i64 %index820, 2
  %lsr.iv.next3388 = add i64 %lsr.iv3387, -16
  %3544 = icmp eq i64 %n.vec807, %index.next833
  br i1 %3544, label %middle.block802, label %vector.body819, !llvm.loop !258

middle.block802:                                  ; preds = %vector.body819
  %cmp.n818 = icmp eq i64 %3528, %n.vec807
  br i1 %cmp.n818, label %sort.quad_reversal.exit299.i.i, label %.lr.ph152.i.i.preheader

.lr.ph152.i.i.preheader:                          ; preds = %middle.block802, %vector.memcheck772, %vector.scevcheck763, %.lr.ph152.preheader.i.i
  %.1.i348151.i.i.ph = phi i64 [ %3528, %vector.memcheck772 ], [ %3528, %vector.scevcheck763 ], [ %3528, %.lr.ph152.preheader.i.i ], [ %ind.end808, %middle.block802 ]
  %.024.i347150.i.i.ph = phi ptr [ %3512, %vector.memcheck772 ], [ %3512, %vector.scevcheck763 ], [ %3512, %.lr.ph152.preheader.i.i ], [ %ind.end810, %middle.block802 ]
  %.126.i346149.i.i.ph = phi ptr [ %.025.i342.i.i244, %vector.memcheck772 ], [ %.025.i342.i.i244, %vector.scevcheck763 ], [ %.025.i342.i.i244, %.lr.ph152.preheader.i.i ], [ %ind.end812, %middle.block802 ]
  %.128.i345148.i.i.ph = phi ptr [ %.027.i341.i.i243, %vector.memcheck772 ], [ %.027.i341.i.i243, %vector.scevcheck763 ], [ %.027.i341.i.i243, %.lr.ph152.preheader.i.i ], [ %ind.end814, %middle.block802 ]
  %.029.i344147.i.i.ph = phi ptr [ %.4223.lcssa.i.i213, %vector.memcheck772 ], [ %.4223.lcssa.i.i213, %vector.scevcheck763 ], [ %.4223.lcssa.i.i213, %.lr.ph152.preheader.i.i ], [ %ind.end816, %middle.block802 ]
  %xtraiter2587 = and i64 %.1.i348151.i.i.ph, 1
  %lcmp.mod2588.not = icmp eq i64 %xtraiter2587, 0
  br i1 %lcmp.mod2588.not, label %.lr.ph152.i.i.prol.loopexit, label %.lr.ph152.i.i.prol

.lr.ph152.i.i.prol:                               ; preds = %.lr.ph152.i.i.preheader
  %3545 = getelementptr inbounds i8, ptr %.128.i345148.i.i.ph, i64 8
  %3546 = getelementptr inbounds i8, ptr %.126.i346149.i.i.ph, i64 -8
  %3547 = getelementptr inbounds i8, ptr %.029.i344147.i.i.ph, i64 -8
  %3548 = getelementptr inbounds i8, ptr %.024.i347150.i.i.ph, i64 8
  %3549 = add nsw i64 %.1.i348151.i.i.ph, -1
  %3550 = load i64, ptr %3548, align 8
  %3551 = load i64, ptr %3547, align 8
  store i64 %3551, ptr %3548, align 8
  store i64 %3550, ptr %3547, align 8
  %3552 = load i64, ptr %3546, align 8
  %3553 = load i64, ptr %3545, align 8
  store i64 %3553, ptr %3546, align 8
  store i64 %3552, ptr %3545, align 8
  br label %.lr.ph152.i.i.prol.loopexit

.lr.ph152.i.i.prol.loopexit:                      ; preds = %.lr.ph152.i.i.prol, %.lr.ph152.i.i.preheader
  %.1.i348151.i.i.unr = phi i64 [ %.1.i348151.i.i.ph, %.lr.ph152.i.i.preheader ], [ %3549, %.lr.ph152.i.i.prol ]
  %.024.i347150.i.i.unr = phi ptr [ %.024.i347150.i.i.ph, %.lr.ph152.i.i.preheader ], [ %3548, %.lr.ph152.i.i.prol ]
  %.126.i346149.i.i.unr = phi ptr [ %.126.i346149.i.i.ph, %.lr.ph152.i.i.preheader ], [ %3546, %.lr.ph152.i.i.prol ]
  %.128.i345148.i.i.unr = phi ptr [ %.128.i345148.i.i.ph, %.lr.ph152.i.i.preheader ], [ %3545, %.lr.ph152.i.i.prol ]
  %.029.i344147.i.i.unr = phi ptr [ %.029.i344147.i.i.ph, %.lr.ph152.i.i.preheader ], [ %3547, %.lr.ph152.i.i.prol ]
  %3554 = icmp eq i64 %.1.i348151.i.i.ph, 1
  br i1 %3554, label %sort.quad_reversal.exit299.i.i, label %.lr.ph152.i.i.preheader2754

.lr.ph152.i.i.preheader2754:                      ; preds = %.lr.ph152.i.i.prol.loopexit
  br label %.lr.ph152.i.i

3555:                                             ; preds = %3511
  %3556 = load i64, ptr %3518, align 8
  %3557 = load i64, ptr %3520, align 8
  store i64 %3557, ptr %3518, align 8
  %3558 = getelementptr inbounds i8, ptr %3518, i64 -8
  store i64 %3556, ptr %3520, align 8
  %3559 = getelementptr inbounds i8, ptr %3520, i64 8
  %3560 = add nsw i64 %3516, -1
  br label %._crit_edge.i340.i.i

.lr.ph152.i.i:                                    ; preds = %.lr.ph152.i.i, %.lr.ph152.i.i.preheader2754
  %lsr.iv3375 = phi i64 [ -1, %.lr.ph152.i.i.preheader2754 ], [ %lsr.iv.next3376, %.lr.ph152.i.i ]
  %lsr.iv3369 = phi i64 [ 0, %.lr.ph152.i.i.preheader2754 ], [ %lsr.iv.next3370, %.lr.ph152.i.i ]
  %3561 = shl i64 %lsr.iv3375, 3
  %uglygep3379 = getelementptr i8, ptr %.126.i346149.i.i.unr, i64 %3561
  %uglygep3386 = getelementptr i8, ptr %.029.i344147.i.i.unr, i64 %3561
  %sunkaddr4271 = mul i64 %lsr.iv3369, 8
  %sunkaddr4272 = getelementptr i8, ptr %.024.i347150.i.i.unr, i64 %sunkaddr4271
  %sunkaddr4273 = getelementptr i8, ptr %sunkaddr4272, i64 8
  %3562 = load i64, ptr %sunkaddr4273, align 8
  %3563 = load i64, ptr %uglygep3386, align 8
  store i64 %3563, ptr %sunkaddr4273, align 8
  store i64 %3562, ptr %uglygep3386, align 8
  %3564 = load i64, ptr %uglygep3379, align 8
  %sunkaddr4274 = mul i64 %lsr.iv3369, 8
  %sunkaddr4275 = getelementptr i8, ptr %.128.i345148.i.i.unr, i64 %sunkaddr4274
  %sunkaddr4276 = getelementptr i8, ptr %sunkaddr4275, i64 8
  %3565 = load i64, ptr %sunkaddr4276, align 8
  store i64 %3565, ptr %uglygep3379, align 8
  store i64 %3564, ptr %sunkaddr4276, align 8
  %3566 = shl i64 %lsr.iv3375, 3
  %uglygep3377 = getelementptr i8, ptr %.126.i346149.i.i.unr, i64 %3566
  %uglygep3378 = getelementptr i8, ptr %uglygep3377, i64 -8
  %uglygep3384 = getelementptr i8, ptr %.029.i344147.i.i.unr, i64 %3566
  %uglygep3385 = getelementptr i8, ptr %uglygep3384, i64 -8
  %sunkaddr4277 = mul i64 %lsr.iv3369, 8
  %sunkaddr4278 = getelementptr i8, ptr %.024.i347150.i.i.unr, i64 %sunkaddr4277
  %sunkaddr4279 = getelementptr i8, ptr %sunkaddr4278, i64 16
  %3567 = load i64, ptr %sunkaddr4279, align 8
  %3568 = load i64, ptr %uglygep3385, align 8
  store i64 %3568, ptr %sunkaddr4279, align 8
  store i64 %3567, ptr %uglygep3385, align 8
  %3569 = load i64, ptr %uglygep3378, align 8
  %sunkaddr4280 = mul i64 %lsr.iv3369, 8
  %sunkaddr4281 = getelementptr i8, ptr %.128.i345148.i.i.unr, i64 %sunkaddr4280
  %sunkaddr4282 = getelementptr i8, ptr %sunkaddr4281, i64 16
  %3570 = load i64, ptr %sunkaddr4282, align 8
  store i64 %3570, ptr %uglygep3378, align 8
  store i64 %3569, ptr %sunkaddr4282, align 8
  %lsr.iv.next3370 = add i64 %lsr.iv3369, 2
  %lsr.iv.next3376 = add i64 %lsr.iv3375, -2
  %3571 = icmp eq i64 %.1.i348151.i.i.unr, %lsr.iv.next3370
  br i1 %3571, label %sort.quad_reversal.exit299.i.i, label %.lr.ph152.i.i, !llvm.loop !259

3572:                                             ; preds = %3119
  %3573 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %3574 = ptrtoint ptr %94 to i64
  %3575 = sub nuw i64 %3573, %3574
  %3576 = lshr i64 %3575, 4
  %3577 = shl nuw nsw i64 %3576, 3
  %3578 = getelementptr inbounds i8, ptr %94, i64 %3577
  %3579 = sub nsw i64 0, %3577
  %3580 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %3579
  %3581 = and i64 %3575, 16
  %3582 = icmp eq i64 %3581, 0
  br i1 %3582, label %3614, label %._crit_edge.i350.i.i

._crit_edge.i350.i.i:                             ; preds = %3614, %3572
  %.027.i351.i.i = phi ptr [ %3618, %3614 ], [ %3580, %3572 ]
  %.025.i352.i.i = phi ptr [ %3617, %3614 ], [ %3578, %3572 ]
  %.0.i353.i.i = phi i64 [ %3619, %3614 ], [ %3576, %3572 ]
  %3583 = load i64, ptr %94, align 8
  %3584 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %3584, ptr %94, align 8
  store i64 %3583, ptr %.4223.lcssa.i.i213, align 8
  %3585 = load i64, ptr %.025.i352.i.i, align 8
  %3586 = load i64, ptr %.027.i351.i.i, align 8
  store i64 %3586, ptr %.025.i352.i.i, align 8
  store i64 %3585, ptr %.027.i351.i.i, align 8
  %3587 = icmp ult i64 %.0.i353.i.i, 2
  br i1 %3587, label %sort.flux_analyze__anon_13924.exit.i, label %.lr.ph146.preheader.i.i

.lr.ph146.preheader.i.i:                          ; preds = %._crit_edge.i350.i.i
  %3588 = lshr i64 %.0.i353.i.i, 1
  %min.iters.check = icmp ult i64 %.0.i353.i.i, 80
  br i1 %min.iters.check, label %.lr.ph146.i.i.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %.lr.ph146.preheader.i.i
  %const = bitcast i64 2305843009213693951 to i64
  %3589 = add nsw i64 %3588, -1
  %uglygep = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result.neg = mul i64 %3589, -8
  %3590 = getelementptr i8, ptr %uglygep, i64 %mul.result.neg
  %3591 = icmp ugt ptr %3590, %uglygep
  %uglygep717 = getelementptr i8, ptr %.025.i352.i.i, i64 -8
  %mul.result719.neg = mul i64 %3589, -8
  %mul.overflow720 = icmp ugt i64 %3589, %const
  %3592 = getelementptr i8, ptr %uglygep717, i64 %mul.result719.neg
  %3593 = icmp ugt ptr %3592, %uglygep717
  %3594 = or i1 %3593, %mul.overflow720
  %3595 = or i1 %3591, %3594
  br i1 %3595, label %.lr.ph146.i.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %uglygep721 = getelementptr i8, ptr %94, i64 8
  %3596 = shl i64 %3588, 3
  %3597 = add i64 %3596, 8
  %uglygep722 = getelementptr i8, ptr %94, i64 %3597
  %uglygep723 = getelementptr i8, ptr %.027.i351.i.i, i64 8
  %uglygep724 = getelementptr i8, ptr %.027.i351.i.i, i64 %3597
  %3598 = mul i64 %3588, -8
  %uglygep725 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3598
  %uglygep726 = getelementptr i8, ptr %.025.i352.i.i, i64 %3598
  %bound0 = icmp ult ptr %uglygep721, %uglygep724
  %bound1 = icmp ult ptr %uglygep723, %uglygep722
  %found.conflict = and i1 %bound0, %bound1
  %bound0727 = icmp ult ptr %uglygep721, %.4223.lcssa.i.i213
  %bound1728 = icmp ult ptr %uglygep725, %uglygep722
  %found.conflict729 = and i1 %bound0727, %bound1728
  %conflict.rdx = or i1 %found.conflict, %found.conflict729
  %bound0730 = icmp ult ptr %uglygep721, %.025.i352.i.i
  %bound1731 = icmp ult ptr %uglygep726, %uglygep722
  %found.conflict732 = and i1 %bound0730, %bound1731
  %conflict.rdx733 = or i1 %conflict.rdx, %found.conflict732
  %bound0734 = icmp ult ptr %uglygep723, %.4223.lcssa.i.i213
  %bound1735 = icmp ult ptr %uglygep725, %uglygep724
  %found.conflict736 = and i1 %bound0734, %bound1735
  %conflict.rdx737 = or i1 %conflict.rdx733, %found.conflict736
  %bound0738 = icmp ult ptr %uglygep723, %.025.i352.i.i
  %bound1739 = icmp ult ptr %uglygep726, %uglygep724
  %found.conflict740 = and i1 %bound0738, %bound1739
  %conflict.rdx741 = or i1 %conflict.rdx737, %found.conflict740
  %bound0742 = icmp ult ptr %uglygep725, %.025.i352.i.i
  %bound1743 = icmp ult ptr %uglygep726, %.4223.lcssa.i.i213
  %found.conflict744 = and i1 %bound0742, %bound1743
  %conflict.rdx745 = or i1 %conflict.rdx741, %found.conflict744
  br i1 %conflict.rdx745, label %.lr.ph146.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %const3482 = bitcast i64 9223372036854775806 to i64
  %n.vec = and i64 %3588, %const3482
  %ind.end = and i64 %3588, 1
  %3599 = shl i64 %n.vec, 3
  %ind.end746 = getelementptr i8, ptr %94, i64 %3599
  %3600 = mul i64 %n.vec, -8
  %ind.end748 = getelementptr i8, ptr %.025.i352.i.i, i64 %3600
  %3601 = shl i64 %n.vec, 3
  %ind.end750 = getelementptr i8, ptr %.027.i351.i.i, i64 %3601
  %3602 = mul i64 %n.vec, -8
  %ind.end752 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3602
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv3410 = phi i64 [ %lsr.iv.next3411, %vector.body ], [ -16, %vector.ph ]
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %sunkaddr4283 = mul i64 %index, 8
  %sunkaddr4284 = getelementptr i8, ptr %94, i64 %sunkaddr4283
  %sunkaddr4285 = getelementptr i8, ptr %sunkaddr4284, i64 8
  %wide.load = load <2 x i64>, ptr %sunkaddr4285, align 8, !alias.scope !260, !noalias !263
  %uglygep3412 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %lsr.iv3410
  %wide.load757 = load <2 x i64>, ptr %uglygep3412, align 8, !alias.scope !267, !noalias !268
  %reverse = shufflevector <2 x i64> %wide.load757, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse, ptr %sunkaddr4285, align 8, !alias.scope !260, !noalias !263
  %reverse758 = shufflevector <2 x i64> %wide.load, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse758, ptr %uglygep3412, align 8, !alias.scope !267, !noalias !268
  %uglygep3413 = getelementptr i8, ptr %.025.i352.i.i, i64 %lsr.iv3410
  %wide.load759 = load <2 x i64>, ptr %uglygep3413, align 8, !alias.scope !268
  %reverse760 = shufflevector <2 x i64> %wide.load759, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4286 = mul i64 %index, 8
  %sunkaddr4287 = getelementptr i8, ptr %.027.i351.i.i, i64 %sunkaddr4286
  %sunkaddr4288 = getelementptr i8, ptr %sunkaddr4287, i64 8
  %wide.load761 = load <2 x i64>, ptr %sunkaddr4288, align 8, !alias.scope !269, !noalias !270
  %reverse762 = shufflevector <2 x i64> %wide.load761, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse762, ptr %uglygep3413, align 8, !alias.scope !268
  store <2 x i64> %reverse760, ptr %sunkaddr4288, align 8, !alias.scope !269, !noalias !270
  %index.next = add nuw i64 %index, 2
  %lsr.iv.next3411 = add i64 %lsr.iv3410, -16
  %3603 = icmp eq i64 %n.vec, %index.next
  br i1 %3603, label %middle.block, label %vector.body, !llvm.loop !271

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %3588, %n.vec
  br i1 %cmp.n, label %sort.flux_analyze__anon_13924.exit.i, label %.lr.ph146.i.i.preheader

.lr.ph146.i.i.preheader:                          ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %.lr.ph146.preheader.i.i
  %.1.i358145.i.i.ph = phi i64 [ %3588, %vector.memcheck ], [ %3588, %vector.scevcheck ], [ %3588, %.lr.ph146.preheader.i.i ], [ %ind.end, %middle.block ]
  %.024.i357144.i.i.ph = phi ptr [ %94, %vector.memcheck ], [ %94, %vector.scevcheck ], [ %94, %.lr.ph146.preheader.i.i ], [ %ind.end746, %middle.block ]
  %.126.i356143.i.i.ph = phi ptr [ %.025.i352.i.i, %vector.memcheck ], [ %.025.i352.i.i, %vector.scevcheck ], [ %.025.i352.i.i, %.lr.ph146.preheader.i.i ], [ %ind.end748, %middle.block ]
  %.128.i355142.i.i.ph = phi ptr [ %.027.i351.i.i, %vector.memcheck ], [ %.027.i351.i.i, %vector.scevcheck ], [ %.027.i351.i.i, %.lr.ph146.preheader.i.i ], [ %ind.end750, %middle.block ]
  %.029.i354141.i.i.ph = phi ptr [ %.4223.lcssa.i.i213, %vector.memcheck ], [ %.4223.lcssa.i.i213, %vector.scevcheck ], [ %.4223.lcssa.i.i213, %.lr.ph146.preheader.i.i ], [ %ind.end752, %middle.block ]
  %xtraiter2585 = and i64 %.1.i358145.i.i.ph, 1
  %lcmp.mod2586.not = icmp eq i64 %xtraiter2585, 0
  br i1 %lcmp.mod2586.not, label %.lr.ph146.i.i.prol.loopexit, label %.lr.ph146.i.i.prol

.lr.ph146.i.i.prol:                               ; preds = %.lr.ph146.i.i.preheader
  %3604 = getelementptr inbounds i8, ptr %.128.i355142.i.i.ph, i64 8
  %3605 = getelementptr inbounds i8, ptr %.126.i356143.i.i.ph, i64 -8
  %3606 = getelementptr inbounds i8, ptr %.029.i354141.i.i.ph, i64 -8
  %3607 = getelementptr inbounds i8, ptr %.024.i357144.i.i.ph, i64 8
  %3608 = add nsw i64 %.1.i358145.i.i.ph, -1
  %3609 = load i64, ptr %3607, align 8
  %3610 = load i64, ptr %3606, align 8
  store i64 %3610, ptr %3607, align 8
  store i64 %3609, ptr %3606, align 8
  %3611 = load i64, ptr %3605, align 8
  %3612 = load i64, ptr %3604, align 8
  store i64 %3612, ptr %3605, align 8
  store i64 %3611, ptr %3604, align 8
  br label %.lr.ph146.i.i.prol.loopexit

.lr.ph146.i.i.prol.loopexit:                      ; preds = %.lr.ph146.i.i.prol, %.lr.ph146.i.i.preheader
  %.1.i358145.i.i.unr = phi i64 [ %.1.i358145.i.i.ph, %.lr.ph146.i.i.preheader ], [ %3608, %.lr.ph146.i.i.prol ]
  %.024.i357144.i.i.unr = phi ptr [ %.024.i357144.i.i.ph, %.lr.ph146.i.i.preheader ], [ %3607, %.lr.ph146.i.i.prol ]
  %.126.i356143.i.i.unr = phi ptr [ %.126.i356143.i.i.ph, %.lr.ph146.i.i.preheader ], [ %3605, %.lr.ph146.i.i.prol ]
  %.128.i355142.i.i.unr = phi ptr [ %.128.i355142.i.i.ph, %.lr.ph146.i.i.preheader ], [ %3604, %.lr.ph146.i.i.prol ]
  %.029.i354141.i.i.unr = phi ptr [ %.029.i354141.i.i.ph, %.lr.ph146.i.i.preheader ], [ %3606, %.lr.ph146.i.i.prol ]
  %3613 = icmp eq i64 %.1.i358145.i.i.ph, 1
  br i1 %3613, label %sort.flux_analyze__anon_13924.exit.i, label %.lr.ph146.i.i.preheader2756

.lr.ph146.i.i.preheader2756:                      ; preds = %.lr.ph146.i.i.prol.loopexit
  br label %.lr.ph146.i.i

3614:                                             ; preds = %3572
  %3615 = load i64, ptr %3578, align 8
  %3616 = load i64, ptr %3580, align 8
  store i64 %3616, ptr %3578, align 8
  %3617 = getelementptr inbounds i8, ptr %3578, i64 -8
  store i64 %3615, ptr %3580, align 8
  %3618 = getelementptr inbounds i8, ptr %3580, i64 8
  %3619 = add nsw i64 %3576, -1
  br label %._crit_edge.i350.i.i

.lr.ph146.i.i:                                    ; preds = %.lr.ph146.i.i, %.lr.ph146.i.i.preheader2756
  %lsr.iv3398 = phi i64 [ -1, %.lr.ph146.i.i.preheader2756 ], [ %lsr.iv.next3399, %.lr.ph146.i.i ]
  %lsr.iv3392 = phi i64 [ 0, %.lr.ph146.i.i.preheader2756 ], [ %lsr.iv.next3393, %.lr.ph146.i.i ]
  %3620 = shl i64 %lsr.iv3398, 3
  %uglygep3402 = getelementptr i8, ptr %.126.i356143.i.i.unr, i64 %3620
  %uglygep3409 = getelementptr i8, ptr %.029.i354141.i.i.unr, i64 %3620
  %sunkaddr4289 = mul i64 %lsr.iv3392, 8
  %sunkaddr4290 = getelementptr i8, ptr %.024.i357144.i.i.unr, i64 %sunkaddr4289
  %sunkaddr4291 = getelementptr i8, ptr %sunkaddr4290, i64 8
  %3621 = load i64, ptr %sunkaddr4291, align 8
  %3622 = load i64, ptr %uglygep3409, align 8
  store i64 %3622, ptr %sunkaddr4291, align 8
  store i64 %3621, ptr %uglygep3409, align 8
  %3623 = load i64, ptr %uglygep3402, align 8
  %sunkaddr4292 = mul i64 %lsr.iv3392, 8
  %sunkaddr4293 = getelementptr i8, ptr %.128.i355142.i.i.unr, i64 %sunkaddr4292
  %sunkaddr4294 = getelementptr i8, ptr %sunkaddr4293, i64 8
  %3624 = load i64, ptr %sunkaddr4294, align 8
  store i64 %3624, ptr %uglygep3402, align 8
  store i64 %3623, ptr %sunkaddr4294, align 8
  %3625 = shl i64 %lsr.iv3398, 3
  %uglygep3400 = getelementptr i8, ptr %.126.i356143.i.i.unr, i64 %3625
  %uglygep3401 = getelementptr i8, ptr %uglygep3400, i64 -8
  %uglygep3407 = getelementptr i8, ptr %.029.i354141.i.i.unr, i64 %3625
  %uglygep3408 = getelementptr i8, ptr %uglygep3407, i64 -8
  %sunkaddr4295 = mul i64 %lsr.iv3392, 8
  %sunkaddr4296 = getelementptr i8, ptr %.024.i357144.i.i.unr, i64 %sunkaddr4295
  %sunkaddr4297 = getelementptr i8, ptr %sunkaddr4296, i64 16
  %3626 = load i64, ptr %sunkaddr4297, align 8
  %3627 = load i64, ptr %uglygep3408, align 8
  store i64 %3627, ptr %sunkaddr4297, align 8
  store i64 %3626, ptr %uglygep3408, align 8
  %3628 = load i64, ptr %uglygep3401, align 8
  %sunkaddr4298 = mul i64 %lsr.iv3392, 8
  %sunkaddr4299 = getelementptr i8, ptr %.128.i355142.i.i.unr, i64 %sunkaddr4298
  %sunkaddr4300 = getelementptr i8, ptr %sunkaddr4299, i64 16
  %3629 = load i64, ptr %sunkaddr4300, align 8
  store i64 %3629, ptr %uglygep3401, align 8
  store i64 %3628, ptr %sunkaddr4300, align 8
  %lsr.iv.next3393 = add i64 %lsr.iv3392, 2
  %lsr.iv.next3399 = add i64 %lsr.iv3398, -2
  %3630 = icmp eq i64 %.1.i358145.i.i.unr, %lsr.iv.next3393
  br i1 %3630, label %sort.flux_analyze__anon_13924.exit.i, label %.lr.ph146.i.i, !llvm.loop !272

sort.quad_reversal.exit369.i.i:                   ; preds = %.lr.ph194.i.i, %.lr.ph194.i.i.prol.loopexit, %middle.block1299, %._crit_edge.i360.i.i, %sort.quad_reversal.exit299.i.i
  %.5233.i.i246 = phi i64 [ %.2230.lcssa.i.i212, %sort.quad_reversal.exit299.i.i ], [ 0, %._crit_edge.i360.i.i ], [ 0, %middle.block1299 ], [ 0, %.lr.ph194.i.i.prol.loopexit ], [ 0, %.lr.ph194.i.i ]
  %3631 = icmp eq i64 %3084, 1
  %3632 = icmp ne i64 %.5239.i.i235, 0
  %3633 = and i1 %3631, %3632
  br i1 %3633, label %3696, label %sort.quad_reversal.exit379.i.i

3634:                                             ; preds = %sort.quad_reversal.exit299.i.i
  %3635 = ptrtoint ptr %.3.lcssa.i.i216 to i64
  %3636 = ptrtoint ptr %94 to i64
  %3637 = sub nuw i64 %3635, %3636
  %3638 = lshr i64 %3637, 4
  %3639 = shl nuw nsw i64 %3638, 3
  %3640 = getelementptr inbounds i8, ptr %94, i64 %3639
  %3641 = sub nsw i64 0, %3639
  %3642 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 %3641
  %3643 = and i64 %3637, 16
  %3644 = icmp eq i64 %3643, 0
  br i1 %3644, label %3676, label %._crit_edge.i360.i.i

._crit_edge.i360.i.i:                             ; preds = %3676, %3634
  %.027.i361.i.i = phi ptr [ %3680, %3676 ], [ %3642, %3634 ]
  %.025.i362.i.i = phi ptr [ %3679, %3676 ], [ %3640, %3634 ]
  %.0.i363.i.i = phi i64 [ %3681, %3676 ], [ %3638, %3634 ]
  %3645 = load i64, ptr %94, align 8
  %3646 = load i64, ptr %.3.lcssa.i.i216, align 8
  store i64 %3646, ptr %94, align 8
  store i64 %3645, ptr %.3.lcssa.i.i216, align 8
  %3647 = load i64, ptr %.025.i362.i.i, align 8
  %3648 = load i64, ptr %.027.i361.i.i, align 8
  store i64 %3648, ptr %.025.i362.i.i, align 8
  store i64 %3647, ptr %.027.i361.i.i, align 8
  %3649 = icmp ult i64 %.0.i363.i.i, 2
  br i1 %3649, label %sort.quad_reversal.exit369.i.i, label %.lr.ph194.preheader.i.i

.lr.ph194.preheader.i.i:                          ; preds = %._crit_edge.i360.i.i
  %3650 = lshr i64 %.0.i363.i.i, 1
  %min.iters.check1301 = icmp ult i64 %.0.i363.i.i, 80
  br i1 %min.iters.check1301, label %.lr.ph194.i.i.preheader, label %vector.scevcheck1260

vector.scevcheck1260:                             ; preds = %.lr.ph194.preheader.i.i
  %const3469 = bitcast i64 2305843009213693951 to i64
  %3651 = add nsw i64 %3650, -1
  %uglygep1261 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 -8
  %mul.result1263.neg = mul i64 %3651, -8
  %3652 = getelementptr i8, ptr %uglygep1261, i64 %mul.result1263.neg
  %3653 = icmp ugt ptr %3652, %uglygep1261
  %uglygep1265 = getelementptr i8, ptr %.025.i362.i.i, i64 -8
  %mul.result1267.neg = mul i64 %3651, -8
  %mul.overflow1268 = icmp ugt i64 %3651, %const3469
  %3654 = getelementptr i8, ptr %uglygep1265, i64 %mul.result1267.neg
  %3655 = icmp ugt ptr %3654, %uglygep1265
  %3656 = or i1 %3655, %mul.overflow1268
  %3657 = or i1 %3653, %3656
  br i1 %3657, label %.lr.ph194.i.i.preheader, label %vector.memcheck1269

vector.memcheck1269:                              ; preds = %vector.scevcheck1260
  %uglygep1270 = getelementptr i8, ptr %94, i64 8
  %3658 = shl i64 %3650, 3
  %3659 = add i64 %3658, 8
  %uglygep1271 = getelementptr i8, ptr %94, i64 %3659
  %uglygep1272 = getelementptr i8, ptr %.027.i361.i.i, i64 8
  %uglygep1273 = getelementptr i8, ptr %.027.i361.i.i, i64 %3659
  %3660 = mul i64 %3650, -8
  %uglygep1274 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3660
  %uglygep1275 = getelementptr i8, ptr %.025.i362.i.i, i64 %3660
  %bound01276 = icmp ult ptr %uglygep1270, %uglygep1273
  %bound11277 = icmp ult ptr %uglygep1272, %uglygep1271
  %found.conflict1278 = and i1 %bound01276, %bound11277
  %bound01279 = icmp ult ptr %uglygep1270, %.3.lcssa.i.i216
  %bound11280 = icmp ult ptr %uglygep1274, %uglygep1271
  %found.conflict1281 = and i1 %bound01279, %bound11280
  %conflict.rdx1282 = or i1 %found.conflict1278, %found.conflict1281
  %bound01283 = icmp ult ptr %uglygep1270, %.025.i362.i.i
  %bound11284 = icmp ult ptr %uglygep1275, %uglygep1271
  %found.conflict1285 = and i1 %bound01283, %bound11284
  %conflict.rdx1286 = or i1 %conflict.rdx1282, %found.conflict1285
  %bound01287 = icmp ult ptr %uglygep1272, %.3.lcssa.i.i216
  %bound11288 = icmp ult ptr %uglygep1274, %uglygep1273
  %found.conflict1289 = and i1 %bound01287, %bound11288
  %conflict.rdx1290 = or i1 %conflict.rdx1286, %found.conflict1289
  %bound01291 = icmp ult ptr %uglygep1272, %.025.i362.i.i
  %bound11292 = icmp ult ptr %uglygep1275, %uglygep1273
  %found.conflict1293 = and i1 %bound01291, %bound11292
  %conflict.rdx1294 = or i1 %conflict.rdx1290, %found.conflict1293
  %bound01295 = icmp ult ptr %uglygep1274, %.025.i362.i.i
  %bound11296 = icmp ult ptr %uglygep1275, %.3.lcssa.i.i216
  %found.conflict1297 = and i1 %bound01295, %bound11296
  %conflict.rdx1298 = or i1 %conflict.rdx1294, %found.conflict1297
  br i1 %conflict.rdx1298, label %.lr.ph194.i.i.preheader, label %vector.ph1302

vector.ph1302:                                    ; preds = %vector.memcheck1269
  %const3493 = bitcast i64 9223372036854775806 to i64
  %n.vec1304 = and i64 %3650, %const3493
  %ind.end1305 = and i64 %3650, 1
  %3661 = shl i64 %n.vec1304, 3
  %ind.end1307 = getelementptr i8, ptr %94, i64 %3661
  %3662 = mul i64 %n.vec1304, -8
  %ind.end1309 = getelementptr i8, ptr %.025.i362.i.i, i64 %3662
  %3663 = shl i64 %n.vec1304, 3
  %ind.end1311 = getelementptr i8, ptr %.027.i361.i.i, i64 %3663
  %3664 = mul i64 %n.vec1304, -8
  %ind.end1313 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3664
  br label %vector.body1316

vector.body1316:                                  ; preds = %vector.body1316, %vector.ph1302
  %lsr.iv3226 = phi i64 [ %lsr.iv.next3227, %vector.body1316 ], [ -16, %vector.ph1302 ]
  %index1317 = phi i64 [ 0, %vector.ph1302 ], [ %index.next1330, %vector.body1316 ]
  %sunkaddr4301 = mul i64 %index1317, 8
  %sunkaddr4302 = getelementptr i8, ptr %94, i64 %sunkaddr4301
  %sunkaddr4303 = getelementptr i8, ptr %sunkaddr4302, i64 8
  %wide.load1322 = load <2 x i64>, ptr %sunkaddr4303, align 8, !alias.scope !273, !noalias !276
  %uglygep3228 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %lsr.iv3226
  %wide.load1323 = load <2 x i64>, ptr %uglygep3228, align 8, !alias.scope !280, !noalias !281
  %reverse1324 = shufflevector <2 x i64> %wide.load1323, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1324, ptr %sunkaddr4303, align 8, !alias.scope !273, !noalias !276
  %reverse1325 = shufflevector <2 x i64> %wide.load1322, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1325, ptr %uglygep3228, align 8, !alias.scope !280, !noalias !281
  %uglygep3229 = getelementptr i8, ptr %.025.i362.i.i, i64 %lsr.iv3226
  %wide.load1326 = load <2 x i64>, ptr %uglygep3229, align 8, !alias.scope !281
  %reverse1327 = shufflevector <2 x i64> %wide.load1326, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4304 = mul i64 %index1317, 8
  %sunkaddr4305 = getelementptr i8, ptr %.027.i361.i.i, i64 %sunkaddr4304
  %sunkaddr4306 = getelementptr i8, ptr %sunkaddr4305, i64 8
  %wide.load1328 = load <2 x i64>, ptr %sunkaddr4306, align 8, !alias.scope !282, !noalias !283
  %reverse1329 = shufflevector <2 x i64> %wide.load1328, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1329, ptr %uglygep3229, align 8, !alias.scope !281
  store <2 x i64> %reverse1327, ptr %sunkaddr4306, align 8, !alias.scope !282, !noalias !283
  %index.next1330 = add nuw i64 %index1317, 2
  %lsr.iv.next3227 = add i64 %lsr.iv3226, -16
  %3665 = icmp eq i64 %n.vec1304, %index.next1330
  br i1 %3665, label %middle.block1299, label %vector.body1316, !llvm.loop !284

middle.block1299:                                 ; preds = %vector.body1316
  %cmp.n1315 = icmp eq i64 %3650, %n.vec1304
  br i1 %cmp.n1315, label %sort.quad_reversal.exit369.i.i, label %.lr.ph194.i.i.preheader

.lr.ph194.i.i.preheader:                          ; preds = %middle.block1299, %vector.memcheck1269, %vector.scevcheck1260, %.lr.ph194.preheader.i.i
  %.1.i368193.i.i.ph = phi i64 [ %3650, %vector.memcheck1269 ], [ %3650, %vector.scevcheck1260 ], [ %3650, %.lr.ph194.preheader.i.i ], [ %ind.end1305, %middle.block1299 ]
  %.024.i367192.i.i.ph = phi ptr [ %94, %vector.memcheck1269 ], [ %94, %vector.scevcheck1260 ], [ %94, %.lr.ph194.preheader.i.i ], [ %ind.end1307, %middle.block1299 ]
  %.126.i366191.i.i.ph = phi ptr [ %.025.i362.i.i, %vector.memcheck1269 ], [ %.025.i362.i.i, %vector.scevcheck1260 ], [ %.025.i362.i.i, %.lr.ph194.preheader.i.i ], [ %ind.end1309, %middle.block1299 ]
  %.128.i365190.i.i.ph = phi ptr [ %.027.i361.i.i, %vector.memcheck1269 ], [ %.027.i361.i.i, %vector.scevcheck1260 ], [ %.027.i361.i.i, %.lr.ph194.preheader.i.i ], [ %ind.end1311, %middle.block1299 ]
  %.029.i364189.i.i.ph = phi ptr [ %.3.lcssa.i.i216, %vector.memcheck1269 ], [ %.3.lcssa.i.i216, %vector.scevcheck1260 ], [ %.3.lcssa.i.i216, %.lr.ph194.preheader.i.i ], [ %ind.end1313, %middle.block1299 ]
  %xtraiter2601 = and i64 %.1.i368193.i.i.ph, 1
  %lcmp.mod2602.not = icmp eq i64 %xtraiter2601, 0
  br i1 %lcmp.mod2602.not, label %.lr.ph194.i.i.prol.loopexit, label %.lr.ph194.i.i.prol

.lr.ph194.i.i.prol:                               ; preds = %.lr.ph194.i.i.preheader
  %3666 = getelementptr inbounds i8, ptr %.128.i365190.i.i.ph, i64 8
  %3667 = getelementptr inbounds i8, ptr %.126.i366191.i.i.ph, i64 -8
  %3668 = getelementptr inbounds i8, ptr %.029.i364189.i.i.ph, i64 -8
  %3669 = getelementptr inbounds i8, ptr %.024.i367192.i.i.ph, i64 8
  %3670 = add nsw i64 %.1.i368193.i.i.ph, -1
  %3671 = load i64, ptr %3669, align 8
  %3672 = load i64, ptr %3668, align 8
  store i64 %3672, ptr %3669, align 8
  store i64 %3671, ptr %3668, align 8
  %3673 = load i64, ptr %3667, align 8
  %3674 = load i64, ptr %3666, align 8
  store i64 %3674, ptr %3667, align 8
  store i64 %3673, ptr %3666, align 8
  br label %.lr.ph194.i.i.prol.loopexit

.lr.ph194.i.i.prol.loopexit:                      ; preds = %.lr.ph194.i.i.prol, %.lr.ph194.i.i.preheader
  %.1.i368193.i.i.unr = phi i64 [ %.1.i368193.i.i.ph, %.lr.ph194.i.i.preheader ], [ %3670, %.lr.ph194.i.i.prol ]
  %.024.i367192.i.i.unr = phi ptr [ %.024.i367192.i.i.ph, %.lr.ph194.i.i.preheader ], [ %3669, %.lr.ph194.i.i.prol ]
  %.126.i366191.i.i.unr = phi ptr [ %.126.i366191.i.i.ph, %.lr.ph194.i.i.preheader ], [ %3667, %.lr.ph194.i.i.prol ]
  %.128.i365190.i.i.unr = phi ptr [ %.128.i365190.i.i.ph, %.lr.ph194.i.i.preheader ], [ %3666, %.lr.ph194.i.i.prol ]
  %.029.i364189.i.i.unr = phi ptr [ %.029.i364189.i.i.ph, %.lr.ph194.i.i.preheader ], [ %3668, %.lr.ph194.i.i.prol ]
  %3675 = icmp eq i64 %.1.i368193.i.i.ph, 1
  br i1 %3675, label %sort.quad_reversal.exit369.i.i, label %.lr.ph194.i.i.preheader2743

.lr.ph194.i.i.preheader2743:                      ; preds = %.lr.ph194.i.i.prol.loopexit
  br label %.lr.ph194.i.i

3676:                                             ; preds = %3634
  %3677 = load i64, ptr %3640, align 8
  %3678 = load i64, ptr %3642, align 8
  store i64 %3678, ptr %3640, align 8
  %3679 = getelementptr inbounds i8, ptr %3640, i64 -8
  store i64 %3677, ptr %3642, align 8
  %3680 = getelementptr inbounds i8, ptr %3642, i64 8
  %3681 = add nsw i64 %3638, -1
  br label %._crit_edge.i360.i.i

.lr.ph194.i.i:                                    ; preds = %.lr.ph194.i.i, %.lr.ph194.i.i.preheader2743
  %lsr.iv3214 = phi i64 [ -1, %.lr.ph194.i.i.preheader2743 ], [ %lsr.iv.next3215, %.lr.ph194.i.i ]
  %lsr.iv3208 = phi i64 [ 0, %.lr.ph194.i.i.preheader2743 ], [ %lsr.iv.next3209, %.lr.ph194.i.i ]
  %3682 = shl i64 %lsr.iv3214, 3
  %uglygep3218 = getelementptr i8, ptr %.126.i366191.i.i.unr, i64 %3682
  %uglygep3225 = getelementptr i8, ptr %.029.i364189.i.i.unr, i64 %3682
  %sunkaddr4307 = mul i64 %lsr.iv3208, 8
  %sunkaddr4308 = getelementptr i8, ptr %.024.i367192.i.i.unr, i64 %sunkaddr4307
  %sunkaddr4309 = getelementptr i8, ptr %sunkaddr4308, i64 8
  %3683 = load i64, ptr %sunkaddr4309, align 8
  %3684 = load i64, ptr %uglygep3225, align 8
  store i64 %3684, ptr %sunkaddr4309, align 8
  store i64 %3683, ptr %uglygep3225, align 8
  %3685 = load i64, ptr %uglygep3218, align 8
  %sunkaddr4310 = mul i64 %lsr.iv3208, 8
  %sunkaddr4311 = getelementptr i8, ptr %.128.i365190.i.i.unr, i64 %sunkaddr4310
  %sunkaddr4312 = getelementptr i8, ptr %sunkaddr4311, i64 8
  %3686 = load i64, ptr %sunkaddr4312, align 8
  store i64 %3686, ptr %uglygep3218, align 8
  store i64 %3685, ptr %sunkaddr4312, align 8
  %3687 = shl i64 %lsr.iv3214, 3
  %uglygep3216 = getelementptr i8, ptr %.126.i366191.i.i.unr, i64 %3687
  %uglygep3217 = getelementptr i8, ptr %uglygep3216, i64 -8
  %uglygep3223 = getelementptr i8, ptr %.029.i364189.i.i.unr, i64 %3687
  %uglygep3224 = getelementptr i8, ptr %uglygep3223, i64 -8
  %sunkaddr4313 = mul i64 %lsr.iv3208, 8
  %sunkaddr4314 = getelementptr i8, ptr %.024.i367192.i.i.unr, i64 %sunkaddr4313
  %sunkaddr4315 = getelementptr i8, ptr %sunkaddr4314, i64 16
  %3688 = load i64, ptr %sunkaddr4315, align 8
  %3689 = load i64, ptr %uglygep3224, align 8
  store i64 %3689, ptr %sunkaddr4315, align 8
  store i64 %3688, ptr %uglygep3224, align 8
  %3690 = load i64, ptr %uglygep3217, align 8
  %sunkaddr4316 = mul i64 %lsr.iv3208, 8
  %sunkaddr4317 = getelementptr i8, ptr %.128.i365190.i.i.unr, i64 %sunkaddr4316
  %sunkaddr4318 = getelementptr i8, ptr %sunkaddr4317, i64 16
  %3691 = load i64, ptr %sunkaddr4318, align 8
  store i64 %3691, ptr %uglygep3217, align 8
  store i64 %3690, ptr %sunkaddr4318, align 8
  %lsr.iv.next3209 = add i64 %lsr.iv3208, 2
  %lsr.iv.next3215 = add i64 %lsr.iv3214, -2
  %3692 = icmp eq i64 %.1.i368193.i.i.unr, %lsr.iv.next3209
  br i1 %3692, label %sort.quad_reversal.exit369.i.i, label %.lr.ph194.i.i, !llvm.loop !285

sort.quad_reversal.exit379.i.i:                   ; preds = %.lr.ph200.i.i, %.lr.ph200.i.i.prol.loopexit, %middle.block1370, %._crit_edge.i370.i.i, %sort.quad_reversal.exit369.i.i, %.lr.ph188.i.i, %.lr.ph188.i.i.prol.loopexit, %middle.block1228, %._crit_edge.i.i.i239
  %.523372.i.i = phi i64 [ %.5233.i.i246, %sort.quad_reversal.exit369.i.i ], [ %.5233.i.i246, %._crit_edge.i370.i.i ], [ 0, %._crit_edge.i.i.i239 ], [ %.5233.i.i246, %middle.block1370 ], [ 0, %middle.block1228 ], [ %.5233.i.i246, %.lr.ph200.i.i.prol.loopexit ], [ 0, %.lr.ph188.i.i.prol.loopexit ], [ %.5233.i.i246, %.lr.ph200.i.i ], [ 0, %.lr.ph188.i.i ]
  %.52536271.i.i = phi i64 [ %.5253.i.i233, %sort.quad_reversal.exit369.i.i ], [ %.5253.i.i233, %._crit_edge.i370.i.i ], [ %.3251.lcssa.i.i209, %._crit_edge.i.i.i239 ], [ %.5253.i.i233, %middle.block1370 ], [ %.3251.lcssa.i.i209, %middle.block1228 ], [ %.5253.i.i233, %.lr.ph200.i.i.prol.loopexit ], [ %.3251.lcssa.i.i209, %.lr.ph188.i.i.prol.loopexit ], [ %.5253.i.i233, %.lr.ph200.i.i ], [ %.3251.lcssa.i.i209, %.lr.ph188.i.i ]
  %.52466370.i.i = phi i64 [ %.5246.i.i234, %sort.quad_reversal.exit369.i.i ], [ %.5246.i.i234, %._crit_edge.i370.i.i ], [ %.3244.lcssa.i.i210, %._crit_edge.i.i.i239 ], [ %.5246.i.i234, %middle.block1370 ], [ %.3244.lcssa.i.i210, %middle.block1228 ], [ %.5246.i.i234, %.lr.ph200.i.i.prol.loopexit ], [ %.3244.lcssa.i.i210, %.lr.ph188.i.i.prol.loopexit ], [ %.5246.i.i234, %.lr.ph200.i.i ], [ %.3244.lcssa.i.i210, %.lr.ph188.i.i ]
  %.6240.i.i247 = phi i64 [ %.5239.i.i235, %sort.quad_reversal.exit369.i.i ], [ 0, %._crit_edge.i370.i.i ], [ 0, %._crit_edge.i.i.i239 ], [ 0, %middle.block1370 ], [ 0, %middle.block1228 ], [ 0, %.lr.ph200.i.i.prol.loopexit ], [ 0, %.lr.ph188.i.i.prol.loopexit ], [ 0, %.lr.ph200.i.i ], [ 0, %.lr.ph188.i.i ]
  %3693 = icmp eq i64 %3086, 1
  %3694 = icmp ne i64 %.52466370.i.i, 0
  %3695 = and i1 %3693, %3694
  br i1 %3695, label %3759, label %sort.quad_reversal.exit389.i.i

3696:                                             ; preds = %sort.quad_reversal.exit369.i.i
  %3697 = ptrtoint ptr %.4.lcssa.i.i215 to i64
  %3698 = ptrtoint ptr %3124 to i64
  %3699 = sub nuw i64 %3697, %3698
  %3700 = lshr i64 %3699, 4
  %3701 = shl nuw nsw i64 %3700, 3
  %3702 = getelementptr inbounds i8, ptr %3124, i64 %3701
  %3703 = sub nsw i64 0, %3701
  %3704 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 %3703
  %3705 = and i64 %3699, 16
  %3706 = icmp eq i64 %3705, 0
  br i1 %3706, label %3739, label %._crit_edge.i370.i.i

._crit_edge.i370.i.i:                             ; preds = %3739, %3696
  %.027.i371.i.i = phi ptr [ %3743, %3739 ], [ %3704, %3696 ]
  %.025.i372.i.i = phi ptr [ %3742, %3739 ], [ %3702, %3696 ]
  %.0.i373.i.i = phi i64 [ %3744, %3739 ], [ %3700, %3696 ]
  %3707 = load i64, ptr %3124, align 8
  %3708 = load i64, ptr %.4.lcssa.i.i215, align 8
  store i64 %3708, ptr %3124, align 8
  store i64 %3707, ptr %.4.lcssa.i.i215, align 8
  %3709 = load i64, ptr %.025.i372.i.i, align 8
  %3710 = load i64, ptr %.027.i371.i.i, align 8
  store i64 %3710, ptr %.025.i372.i.i, align 8
  store i64 %3709, ptr %.027.i371.i.i, align 8
  %3711 = icmp ult i64 %.0.i373.i.i, 2
  br i1 %3711, label %sort.quad_reversal.exit379.i.i, label %.lr.ph200.preheader.i.i

.lr.ph200.preheader.i.i:                          ; preds = %._crit_edge.i370.i.i
  %3712 = lshr i64 %.0.i373.i.i, 1
  %min.iters.check1372 = icmp ult i64 %.0.i373.i.i, 80
  br i1 %min.iters.check1372, label %.lr.ph200.i.i.preheader, label %vector.scevcheck1331

vector.scevcheck1331:                             ; preds = %.lr.ph200.preheader.i.i
  %const3468 = bitcast i64 2305843009213693951 to i64
  %3713 = add nsw i64 %3712, -1
  %uglygep1332 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -8
  %mul.result1334.neg = mul i64 %3713, -8
  %3714 = getelementptr i8, ptr %uglygep1332, i64 %mul.result1334.neg
  %3715 = icmp ugt ptr %3714, %uglygep1332
  %uglygep1336 = getelementptr i8, ptr %.025.i372.i.i, i64 -8
  %mul.result1338.neg = mul i64 %3713, -8
  %mul.overflow1339 = icmp ugt i64 %3713, %const3468
  %3716 = getelementptr i8, ptr %uglygep1336, i64 %mul.result1338.neg
  %3717 = icmp ugt ptr %3716, %uglygep1336
  %3718 = or i1 %3717, %mul.overflow1339
  %3719 = or i1 %3715, %3718
  br i1 %3719, label %.lr.ph200.i.i.preheader, label %vector.memcheck1340

vector.memcheck1340:                              ; preds = %vector.scevcheck1331
  %uglygep1341 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 16
  %3720 = shl i64 %3712, 3
  %3721 = add i64 %3720, 16
  %uglygep1342 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3721
  %uglygep1343 = getelementptr i8, ptr %.027.i371.i.i, i64 8
  %3722 = add i64 %3720, 8
  %uglygep1344 = getelementptr i8, ptr %.027.i371.i.i, i64 %3722
  %3723 = mul i64 %3712, -8
  %uglygep1345 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3723
  %uglygep1346 = getelementptr i8, ptr %.025.i372.i.i, i64 %3723
  %bound01347 = icmp ult ptr %uglygep1341, %uglygep1344
  %bound11348 = icmp ult ptr %uglygep1343, %uglygep1342
  %found.conflict1349 = and i1 %bound01347, %bound11348
  %bound01350 = icmp ult ptr %uglygep1341, %.4.lcssa.i.i215
  %bound11351 = icmp ult ptr %uglygep1345, %uglygep1342
  %found.conflict1352 = and i1 %bound01350, %bound11351
  %conflict.rdx1353 = or i1 %found.conflict1349, %found.conflict1352
  %bound01354 = icmp ult ptr %uglygep1341, %.025.i372.i.i
  %bound11355 = icmp ult ptr %uglygep1346, %uglygep1342
  %found.conflict1356 = and i1 %bound01354, %bound11355
  %conflict.rdx1357 = or i1 %conflict.rdx1353, %found.conflict1356
  %bound01358 = icmp ult ptr %uglygep1343, %.4.lcssa.i.i215
  %bound11359 = icmp ult ptr %uglygep1345, %uglygep1344
  %found.conflict1360 = and i1 %bound01358, %bound11359
  %conflict.rdx1361 = or i1 %conflict.rdx1357, %found.conflict1360
  %bound01362 = icmp ult ptr %uglygep1343, %.025.i372.i.i
  %bound11363 = icmp ult ptr %uglygep1346, %uglygep1344
  %found.conflict1364 = and i1 %bound01362, %bound11363
  %conflict.rdx1365 = or i1 %conflict.rdx1361, %found.conflict1364
  %bound01366 = icmp ult ptr %uglygep1345, %.025.i372.i.i
  %bound11367 = icmp ult ptr %uglygep1346, %.4.lcssa.i.i215
  %found.conflict1368 = and i1 %bound01366, %bound11367
  %conflict.rdx1369 = or i1 %conflict.rdx1365, %found.conflict1368
  br i1 %conflict.rdx1369, label %.lr.ph200.i.i.preheader, label %vector.ph1373

vector.ph1373:                                    ; preds = %vector.memcheck1340
  %const3492 = bitcast i64 9223372036854775806 to i64
  %n.vec1375 = and i64 %3712, %const3492
  %ind.end1376 = and i64 %3712, 1
  %3724 = shl i64 %n.vec1375, 3
  %ind.end1378 = getelementptr i8, ptr %3124, i64 %3724
  %3725 = mul i64 %n.vec1375, -8
  %ind.end1380 = getelementptr i8, ptr %.025.i372.i.i, i64 %3725
  %3726 = shl i64 %n.vec1375, 3
  %ind.end1382 = getelementptr i8, ptr %.027.i371.i.i, i64 %3726
  %3727 = mul i64 %n.vec1375, -8
  %ind.end1384 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3727
  br label %vector.body1387

vector.body1387:                                  ; preds = %vector.body1387, %vector.ph1373
  %lsr.iv3203 = phi i64 [ %lsr.iv.next3204, %vector.body1387 ], [ -16, %vector.ph1373 ]
  %index1388 = phi i64 [ 0, %vector.ph1373 ], [ %index.next1401, %vector.body1387 ]
  %sunkaddr4319 = mul i64 %index1388, 8
  %sunkaddr4320 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %sunkaddr4319
  %sunkaddr4321 = getelementptr i8, ptr %sunkaddr4320, i64 16
  %wide.load1393 = load <2 x i64>, ptr %sunkaddr4321, align 8, !alias.scope !286, !noalias !289
  %uglygep3205 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %lsr.iv3203
  %wide.load1394 = load <2 x i64>, ptr %uglygep3205, align 8, !alias.scope !293, !noalias !294
  %reverse1395 = shufflevector <2 x i64> %wide.load1394, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1395, ptr %sunkaddr4321, align 8, !alias.scope !286, !noalias !289
  %reverse1396 = shufflevector <2 x i64> %wide.load1393, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1396, ptr %uglygep3205, align 8, !alias.scope !293, !noalias !294
  %uglygep3206 = getelementptr i8, ptr %.025.i372.i.i, i64 %lsr.iv3203
  %wide.load1397 = load <2 x i64>, ptr %uglygep3206, align 8, !alias.scope !294
  %reverse1398 = shufflevector <2 x i64> %wide.load1397, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4322 = mul i64 %index1388, 8
  %sunkaddr4323 = getelementptr i8, ptr %.027.i371.i.i, i64 %sunkaddr4322
  %sunkaddr4324 = getelementptr i8, ptr %sunkaddr4323, i64 8
  %wide.load1399 = load <2 x i64>, ptr %sunkaddr4324, align 8, !alias.scope !295, !noalias !296
  %reverse1400 = shufflevector <2 x i64> %wide.load1399, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1400, ptr %uglygep3206, align 8, !alias.scope !294
  store <2 x i64> %reverse1398, ptr %sunkaddr4324, align 8, !alias.scope !295, !noalias !296
  %index.next1401 = add nuw i64 %index1388, 2
  %lsr.iv.next3204 = add i64 %lsr.iv3203, -16
  %3728 = icmp eq i64 %n.vec1375, %index.next1401
  br i1 %3728, label %middle.block1370, label %vector.body1387, !llvm.loop !297

middle.block1370:                                 ; preds = %vector.body1387
  %cmp.n1386 = icmp eq i64 %3712, %n.vec1375
  br i1 %cmp.n1386, label %sort.quad_reversal.exit379.i.i, label %.lr.ph200.i.i.preheader

.lr.ph200.i.i.preheader:                          ; preds = %middle.block1370, %vector.memcheck1340, %vector.scevcheck1331, %.lr.ph200.preheader.i.i
  %.1.i378199.i.i.ph = phi i64 [ %3712, %vector.memcheck1340 ], [ %3712, %vector.scevcheck1331 ], [ %3712, %.lr.ph200.preheader.i.i ], [ %ind.end1376, %middle.block1370 ]
  %.024.i377198.i.i.ph = phi ptr [ %3124, %vector.memcheck1340 ], [ %3124, %vector.scevcheck1331 ], [ %3124, %.lr.ph200.preheader.i.i ], [ %ind.end1378, %middle.block1370 ]
  %.126.i376197.i.i.ph = phi ptr [ %.025.i372.i.i, %vector.memcheck1340 ], [ %.025.i372.i.i, %vector.scevcheck1331 ], [ %.025.i372.i.i, %.lr.ph200.preheader.i.i ], [ %ind.end1380, %middle.block1370 ]
  %.128.i375196.i.i.ph = phi ptr [ %.027.i371.i.i, %vector.memcheck1340 ], [ %.027.i371.i.i, %vector.scevcheck1331 ], [ %.027.i371.i.i, %.lr.ph200.preheader.i.i ], [ %ind.end1382, %middle.block1370 ]
  %.029.i374195.i.i.ph = phi ptr [ %.4.lcssa.i.i215, %vector.memcheck1340 ], [ %.4.lcssa.i.i215, %vector.scevcheck1331 ], [ %.4.lcssa.i.i215, %.lr.ph200.preheader.i.i ], [ %ind.end1384, %middle.block1370 ]
  %xtraiter2603 = and i64 %.1.i378199.i.i.ph, 1
  %lcmp.mod2604.not = icmp eq i64 %xtraiter2603, 0
  br i1 %lcmp.mod2604.not, label %.lr.ph200.i.i.prol.loopexit, label %.lr.ph200.i.i.prol

.lr.ph200.i.i.prol:                               ; preds = %.lr.ph200.i.i.preheader
  %3729 = getelementptr inbounds i8, ptr %.128.i375196.i.i.ph, i64 8
  %3730 = getelementptr inbounds i8, ptr %.126.i376197.i.i.ph, i64 -8
  %3731 = getelementptr inbounds i8, ptr %.029.i374195.i.i.ph, i64 -8
  %3732 = getelementptr inbounds i8, ptr %.024.i377198.i.i.ph, i64 8
  %3733 = add nsw i64 %.1.i378199.i.i.ph, -1
  %3734 = load i64, ptr %3732, align 8
  %3735 = load i64, ptr %3731, align 8
  store i64 %3735, ptr %3732, align 8
  store i64 %3734, ptr %3731, align 8
  %3736 = load i64, ptr %3730, align 8
  %3737 = load i64, ptr %3729, align 8
  store i64 %3737, ptr %3730, align 8
  store i64 %3736, ptr %3729, align 8
  br label %.lr.ph200.i.i.prol.loopexit

.lr.ph200.i.i.prol.loopexit:                      ; preds = %.lr.ph200.i.i.prol, %.lr.ph200.i.i.preheader
  %.1.i378199.i.i.unr = phi i64 [ %.1.i378199.i.i.ph, %.lr.ph200.i.i.preheader ], [ %3733, %.lr.ph200.i.i.prol ]
  %.024.i377198.i.i.unr = phi ptr [ %.024.i377198.i.i.ph, %.lr.ph200.i.i.preheader ], [ %3732, %.lr.ph200.i.i.prol ]
  %.126.i376197.i.i.unr = phi ptr [ %.126.i376197.i.i.ph, %.lr.ph200.i.i.preheader ], [ %3730, %.lr.ph200.i.i.prol ]
  %.128.i375196.i.i.unr = phi ptr [ %.128.i375196.i.i.ph, %.lr.ph200.i.i.preheader ], [ %3729, %.lr.ph200.i.i.prol ]
  %.029.i374195.i.i.unr = phi ptr [ %.029.i374195.i.i.ph, %.lr.ph200.i.i.preheader ], [ %3731, %.lr.ph200.i.i.prol ]
  %3738 = icmp eq i64 %.1.i378199.i.i.ph, 1
  br i1 %3738, label %sort.quad_reversal.exit379.i.i, label %.lr.ph200.i.i.preheader2742

.lr.ph200.i.i.preheader2742:                      ; preds = %.lr.ph200.i.i.prol.loopexit
  br label %.lr.ph200.i.i

3739:                                             ; preds = %3696
  %3740 = load i64, ptr %3702, align 8
  %3741 = load i64, ptr %3704, align 8
  store i64 %3741, ptr %3702, align 8
  %3742 = getelementptr inbounds i8, ptr %3702, i64 -8
  store i64 %3740, ptr %3704, align 8
  %3743 = getelementptr inbounds i8, ptr %3704, i64 8
  %3744 = add nsw i64 %3700, -1
  br label %._crit_edge.i370.i.i

.lr.ph200.i.i:                                    ; preds = %.lr.ph200.i.i, %.lr.ph200.i.i.preheader2742
  %lsr.iv3191 = phi i64 [ -1, %.lr.ph200.i.i.preheader2742 ], [ %lsr.iv.next3192, %.lr.ph200.i.i ]
  %lsr.iv3185 = phi i64 [ 0, %.lr.ph200.i.i.preheader2742 ], [ %lsr.iv.next3186, %.lr.ph200.i.i ]
  %3745 = shl i64 %lsr.iv3191, 3
  %uglygep3195 = getelementptr i8, ptr %.126.i376197.i.i.unr, i64 %3745
  %uglygep3202 = getelementptr i8, ptr %.029.i374195.i.i.unr, i64 %3745
  %sunkaddr4325 = mul i64 %lsr.iv3185, 8
  %sunkaddr4326 = getelementptr i8, ptr %.024.i377198.i.i.unr, i64 %sunkaddr4325
  %sunkaddr4327 = getelementptr i8, ptr %sunkaddr4326, i64 8
  %3746 = load i64, ptr %sunkaddr4327, align 8
  %3747 = load i64, ptr %uglygep3202, align 8
  store i64 %3747, ptr %sunkaddr4327, align 8
  store i64 %3746, ptr %uglygep3202, align 8
  %3748 = load i64, ptr %uglygep3195, align 8
  %sunkaddr4328 = mul i64 %lsr.iv3185, 8
  %sunkaddr4329 = getelementptr i8, ptr %.128.i375196.i.i.unr, i64 %sunkaddr4328
  %sunkaddr4330 = getelementptr i8, ptr %sunkaddr4329, i64 8
  %3749 = load i64, ptr %sunkaddr4330, align 8
  store i64 %3749, ptr %uglygep3195, align 8
  store i64 %3748, ptr %sunkaddr4330, align 8
  %3750 = shl i64 %lsr.iv3191, 3
  %uglygep3193 = getelementptr i8, ptr %.126.i376197.i.i.unr, i64 %3750
  %uglygep3194 = getelementptr i8, ptr %uglygep3193, i64 -8
  %uglygep3200 = getelementptr i8, ptr %.029.i374195.i.i.unr, i64 %3750
  %uglygep3201 = getelementptr i8, ptr %uglygep3200, i64 -8
  %sunkaddr4331 = mul i64 %lsr.iv3185, 8
  %sunkaddr4332 = getelementptr i8, ptr %.024.i377198.i.i.unr, i64 %sunkaddr4331
  %sunkaddr4333 = getelementptr i8, ptr %sunkaddr4332, i64 16
  %3751 = load i64, ptr %sunkaddr4333, align 8
  %3752 = load i64, ptr %uglygep3201, align 8
  store i64 %3752, ptr %sunkaddr4333, align 8
  store i64 %3751, ptr %uglygep3201, align 8
  %3753 = load i64, ptr %uglygep3194, align 8
  %sunkaddr4334 = mul i64 %lsr.iv3185, 8
  %sunkaddr4335 = getelementptr i8, ptr %.128.i375196.i.i.unr, i64 %sunkaddr4334
  %sunkaddr4336 = getelementptr i8, ptr %sunkaddr4335, i64 16
  %3754 = load i64, ptr %sunkaddr4336, align 8
  store i64 %3754, ptr %uglygep3194, align 8
  store i64 %3753, ptr %sunkaddr4336, align 8
  %lsr.iv.next3186 = add i64 %lsr.iv3185, 2
  %lsr.iv.next3192 = add i64 %lsr.iv3191, -2
  %3755 = icmp eq i64 %.1.i378199.i.i.unr, %lsr.iv.next3186
  br i1 %3755, label %sort.quad_reversal.exit379.i.i, label %.lr.ph200.i.i, !llvm.loop !298

sort.quad_reversal.exit389.i.i:                   ; preds = %.lr.ph206.i.i, %.lr.ph206.i.i.prol.loopexit, %middle.block1441, %._crit_edge.i380.i.i, %sort.quad_reversal.exit379.i.i, %.lr.ph176.i.i, %.lr.ph176.i.i.prol.loopexit, %middle.block1086, %._crit_edge.i300.i.i
  %.624079.i.i = phi i64 [ %.6240.i.i247, %sort.quad_reversal.exit379.i.i ], [ %.6240.i.i247, %._crit_edge.i380.i.i ], [ 0, %._crit_edge.i300.i.i ], [ %.6240.i.i247, %middle.block1441 ], [ 0, %middle.block1086 ], [ %.6240.i.i247, %.lr.ph206.i.i.prol.loopexit ], [ 0, %.lr.ph176.i.i.prol.loopexit ], [ %.6240.i.i247, %.lr.ph206.i.i ], [ 0, %.lr.ph176.i.i ]
  %.5253627178.i.i = phi i64 [ %.52536271.i.i, %sort.quad_reversal.exit379.i.i ], [ %.52536271.i.i, %._crit_edge.i380.i.i ], [ %.3251.lcssa.i.i209, %._crit_edge.i300.i.i ], [ %.52536271.i.i, %middle.block1441 ], [ %.3251.lcssa.i.i209, %middle.block1086 ], [ %.52536271.i.i, %.lr.ph206.i.i.prol.loopexit ], [ %.3251.lcssa.i.i209, %.lr.ph176.i.i.prol.loopexit ], [ %.52536271.i.i, %.lr.ph206.i.i ], [ %.3251.lcssa.i.i209, %.lr.ph176.i.i ]
  %.52337277.i.i = phi i64 [ %.523372.i.i, %sort.quad_reversal.exit379.i.i ], [ %.523372.i.i, %._crit_edge.i380.i.i ], [ 0, %._crit_edge.i300.i.i ], [ %.523372.i.i, %middle.block1441 ], [ 0, %middle.block1086 ], [ %.523372.i.i, %.lr.ph206.i.i.prol.loopexit ], [ 0, %.lr.ph176.i.i.prol.loopexit ], [ %.523372.i.i, %.lr.ph206.i.i ], [ 0, %.lr.ph176.i.i ]
  %.6247.i.i248 = phi i64 [ %.52466370.i.i, %sort.quad_reversal.exit379.i.i ], [ 0, %._crit_edge.i380.i.i ], [ 0, %._crit_edge.i300.i.i ], [ 0, %middle.block1441 ], [ 0, %middle.block1086 ], [ 0, %.lr.ph206.i.i.prol.loopexit ], [ 0, %.lr.ph176.i.i.prol.loopexit ], [ 0, %.lr.ph206.i.i ], [ 0, %.lr.ph176.i.i ]
  %3756 = icmp eq i64 %3088, 1
  %3757 = icmp ne i64 %.5253627178.i.i, 0
  %3758 = and i1 %3756, %3757
  br i1 %3758, label %3819, label %sort.quad_reversal.exit399.i.i229

3759:                                             ; preds = %sort.quad_reversal.exit379.i.i
  %3760 = ptrtoint ptr %.4218.lcssa.i.i214 to i64
  %3761 = ptrtoint ptr %3131 to i64
  %3762 = sub nuw i64 %3760, %3761
  %3763 = lshr i64 %3762, 4
  %3764 = shl nuw nsw i64 %3763, 3
  %3765 = getelementptr inbounds i8, ptr %3131, i64 %3764
  %3766 = sub nsw i64 0, %3764
  %3767 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 %3766
  %3768 = and i64 %3762, 16
  %3769 = icmp eq i64 %3768, 0
  br i1 %3769, label %3802, label %._crit_edge.i380.i.i

._crit_edge.i380.i.i:                             ; preds = %3802, %3759
  %.027.i381.i.i = phi ptr [ %3806, %3802 ], [ %3767, %3759 ]
  %.025.i382.i.i = phi ptr [ %3805, %3802 ], [ %3765, %3759 ]
  %.0.i383.i.i = phi i64 [ %3807, %3802 ], [ %3763, %3759 ]
  %3770 = load i64, ptr %3131, align 8
  %3771 = load i64, ptr %.4218.lcssa.i.i214, align 8
  store i64 %3771, ptr %3131, align 8
  store i64 %3770, ptr %.4218.lcssa.i.i214, align 8
  %3772 = load i64, ptr %.025.i382.i.i, align 8
  %3773 = load i64, ptr %.027.i381.i.i, align 8
  store i64 %3773, ptr %.025.i382.i.i, align 8
  store i64 %3772, ptr %.027.i381.i.i, align 8
  %3774 = icmp ult i64 %.0.i383.i.i, 2
  br i1 %3774, label %sort.quad_reversal.exit389.i.i, label %.lr.ph206.preheader.i.i

.lr.ph206.preheader.i.i:                          ; preds = %._crit_edge.i380.i.i
  %3775 = lshr i64 %.0.i383.i.i, 1
  %min.iters.check1443 = icmp ult i64 %.0.i383.i.i, 80
  br i1 %min.iters.check1443, label %.lr.ph206.i.i.preheader, label %vector.scevcheck1402

vector.scevcheck1402:                             ; preds = %.lr.ph206.preheader.i.i
  %const3467 = bitcast i64 2305843009213693951 to i64
  %3776 = add nsw i64 %3775, -1
  %uglygep1403 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -8
  %mul.result1405.neg = mul i64 %3776, -8
  %3777 = getelementptr i8, ptr %uglygep1403, i64 %mul.result1405.neg
  %3778 = icmp ugt ptr %3777, %uglygep1403
  %uglygep1407 = getelementptr i8, ptr %.025.i382.i.i, i64 -8
  %mul.result1409.neg = mul i64 %3776, -8
  %mul.overflow1410 = icmp ugt i64 %3776, %const3467
  %3779 = getelementptr i8, ptr %uglygep1407, i64 %mul.result1409.neg
  %3780 = icmp ugt ptr %3779, %uglygep1407
  %3781 = or i1 %3780, %mul.overflow1410
  %3782 = or i1 %3778, %3781
  br i1 %3782, label %.lr.ph206.i.i.preheader, label %vector.memcheck1411

vector.memcheck1411:                              ; preds = %vector.scevcheck1402
  %uglygep1412 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 16
  %3783 = shl i64 %3775, 3
  %3784 = add i64 %3783, 16
  %uglygep1413 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3784
  %uglygep1414 = getelementptr i8, ptr %.027.i381.i.i, i64 8
  %3785 = add i64 %3783, 8
  %uglygep1415 = getelementptr i8, ptr %.027.i381.i.i, i64 %3785
  %3786 = mul i64 %3775, -8
  %uglygep1416 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3786
  %uglygep1417 = getelementptr i8, ptr %.025.i382.i.i, i64 %3786
  %bound01418 = icmp ult ptr %uglygep1412, %uglygep1415
  %bound11419 = icmp ult ptr %uglygep1414, %uglygep1413
  %found.conflict1420 = and i1 %bound01418, %bound11419
  %bound01421 = icmp ult ptr %uglygep1412, %.4218.lcssa.i.i214
  %bound11422 = icmp ult ptr %uglygep1416, %uglygep1413
  %found.conflict1423 = and i1 %bound01421, %bound11422
  %conflict.rdx1424 = or i1 %found.conflict1420, %found.conflict1423
  %bound01425 = icmp ult ptr %uglygep1412, %.025.i382.i.i
  %bound11426 = icmp ult ptr %uglygep1417, %uglygep1413
  %found.conflict1427 = and i1 %bound01425, %bound11426
  %conflict.rdx1428 = or i1 %conflict.rdx1424, %found.conflict1427
  %bound01429 = icmp ult ptr %uglygep1414, %.4218.lcssa.i.i214
  %bound11430 = icmp ult ptr %uglygep1416, %uglygep1415
  %found.conflict1431 = and i1 %bound01429, %bound11430
  %conflict.rdx1432 = or i1 %conflict.rdx1428, %found.conflict1431
  %bound01433 = icmp ult ptr %uglygep1414, %.025.i382.i.i
  %bound11434 = icmp ult ptr %uglygep1417, %uglygep1415
  %found.conflict1435 = and i1 %bound01433, %bound11434
  %conflict.rdx1436 = or i1 %conflict.rdx1432, %found.conflict1435
  %bound01437 = icmp ult ptr %uglygep1416, %.025.i382.i.i
  %bound11438 = icmp ult ptr %uglygep1417, %.4218.lcssa.i.i214
  %found.conflict1439 = and i1 %bound01437, %bound11438
  %conflict.rdx1440 = or i1 %conflict.rdx1436, %found.conflict1439
  br i1 %conflict.rdx1440, label %.lr.ph206.i.i.preheader, label %vector.ph1444

vector.ph1444:                                    ; preds = %vector.memcheck1411
  %const3491 = bitcast i64 9223372036854775806 to i64
  %n.vec1446 = and i64 %3775, %const3491
  %ind.end1447 = and i64 %3775, 1
  %3787 = shl i64 %n.vec1446, 3
  %ind.end1449 = getelementptr i8, ptr %3131, i64 %3787
  %3788 = mul i64 %n.vec1446, -8
  %ind.end1451 = getelementptr i8, ptr %.025.i382.i.i, i64 %3788
  %3789 = shl i64 %n.vec1446, 3
  %ind.end1453 = getelementptr i8, ptr %.027.i381.i.i, i64 %3789
  %3790 = mul i64 %n.vec1446, -8
  %ind.end1455 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3790
  br label %vector.body1458

vector.body1458:                                  ; preds = %vector.body1458, %vector.ph1444
  %lsr.iv3180 = phi i64 [ %lsr.iv.next3181, %vector.body1458 ], [ -16, %vector.ph1444 ]
  %index1459 = phi i64 [ 0, %vector.ph1444 ], [ %index.next1472, %vector.body1458 ]
  %sunkaddr4337 = mul i64 %index1459, 8
  %sunkaddr4338 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %sunkaddr4337
  %sunkaddr4339 = getelementptr i8, ptr %sunkaddr4338, i64 16
  %wide.load1464 = load <2 x i64>, ptr %sunkaddr4339, align 8, !alias.scope !299, !noalias !302
  %uglygep3182 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %lsr.iv3180
  %wide.load1465 = load <2 x i64>, ptr %uglygep3182, align 8, !alias.scope !306, !noalias !307
  %reverse1466 = shufflevector <2 x i64> %wide.load1465, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1466, ptr %sunkaddr4339, align 8, !alias.scope !299, !noalias !302
  %reverse1467 = shufflevector <2 x i64> %wide.load1464, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1467, ptr %uglygep3182, align 8, !alias.scope !306, !noalias !307
  %uglygep3183 = getelementptr i8, ptr %.025.i382.i.i, i64 %lsr.iv3180
  %wide.load1468 = load <2 x i64>, ptr %uglygep3183, align 8, !alias.scope !307
  %reverse1469 = shufflevector <2 x i64> %wide.load1468, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4340 = mul i64 %index1459, 8
  %sunkaddr4341 = getelementptr i8, ptr %.027.i381.i.i, i64 %sunkaddr4340
  %sunkaddr4342 = getelementptr i8, ptr %sunkaddr4341, i64 8
  %wide.load1470 = load <2 x i64>, ptr %sunkaddr4342, align 8, !alias.scope !308, !noalias !309
  %reverse1471 = shufflevector <2 x i64> %wide.load1470, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1471, ptr %uglygep3183, align 8, !alias.scope !307
  store <2 x i64> %reverse1469, ptr %sunkaddr4342, align 8, !alias.scope !308, !noalias !309
  %index.next1472 = add nuw i64 %index1459, 2
  %lsr.iv.next3181 = add i64 %lsr.iv3180, -16
  %3791 = icmp eq i64 %n.vec1446, %index.next1472
  br i1 %3791, label %middle.block1441, label %vector.body1458, !llvm.loop !310

middle.block1441:                                 ; preds = %vector.body1458
  %cmp.n1457 = icmp eq i64 %3775, %n.vec1446
  br i1 %cmp.n1457, label %sort.quad_reversal.exit389.i.i, label %.lr.ph206.i.i.preheader

.lr.ph206.i.i.preheader:                          ; preds = %middle.block1441, %vector.memcheck1411, %vector.scevcheck1402, %.lr.ph206.preheader.i.i
  %.1.i388205.i.i.ph = phi i64 [ %3775, %vector.memcheck1411 ], [ %3775, %vector.scevcheck1402 ], [ %3775, %.lr.ph206.preheader.i.i ], [ %ind.end1447, %middle.block1441 ]
  %.024.i387204.i.i.ph = phi ptr [ %3131, %vector.memcheck1411 ], [ %3131, %vector.scevcheck1402 ], [ %3131, %.lr.ph206.preheader.i.i ], [ %ind.end1449, %middle.block1441 ]
  %.126.i386203.i.i.ph = phi ptr [ %.025.i382.i.i, %vector.memcheck1411 ], [ %.025.i382.i.i, %vector.scevcheck1402 ], [ %.025.i382.i.i, %.lr.ph206.preheader.i.i ], [ %ind.end1451, %middle.block1441 ]
  %.128.i385202.i.i.ph = phi ptr [ %.027.i381.i.i, %vector.memcheck1411 ], [ %.027.i381.i.i, %vector.scevcheck1402 ], [ %.027.i381.i.i, %.lr.ph206.preheader.i.i ], [ %ind.end1453, %middle.block1441 ]
  %.029.i384201.i.i.ph = phi ptr [ %.4218.lcssa.i.i214, %vector.memcheck1411 ], [ %.4218.lcssa.i.i214, %vector.scevcheck1402 ], [ %.4218.lcssa.i.i214, %.lr.ph206.preheader.i.i ], [ %ind.end1455, %middle.block1441 ]
  %xtraiter2605 = and i64 %.1.i388205.i.i.ph, 1
  %lcmp.mod2606.not = icmp eq i64 %xtraiter2605, 0
  br i1 %lcmp.mod2606.not, label %.lr.ph206.i.i.prol.loopexit, label %.lr.ph206.i.i.prol

.lr.ph206.i.i.prol:                               ; preds = %.lr.ph206.i.i.preheader
  %3792 = getelementptr inbounds i8, ptr %.128.i385202.i.i.ph, i64 8
  %3793 = getelementptr inbounds i8, ptr %.126.i386203.i.i.ph, i64 -8
  %3794 = getelementptr inbounds i8, ptr %.029.i384201.i.i.ph, i64 -8
  %3795 = getelementptr inbounds i8, ptr %.024.i387204.i.i.ph, i64 8
  %3796 = add nsw i64 %.1.i388205.i.i.ph, -1
  %3797 = load i64, ptr %3795, align 8
  %3798 = load i64, ptr %3794, align 8
  store i64 %3798, ptr %3795, align 8
  store i64 %3797, ptr %3794, align 8
  %3799 = load i64, ptr %3793, align 8
  %3800 = load i64, ptr %3792, align 8
  store i64 %3800, ptr %3793, align 8
  store i64 %3799, ptr %3792, align 8
  br label %.lr.ph206.i.i.prol.loopexit

.lr.ph206.i.i.prol.loopexit:                      ; preds = %.lr.ph206.i.i.prol, %.lr.ph206.i.i.preheader
  %.1.i388205.i.i.unr = phi i64 [ %.1.i388205.i.i.ph, %.lr.ph206.i.i.preheader ], [ %3796, %.lr.ph206.i.i.prol ]
  %.024.i387204.i.i.unr = phi ptr [ %.024.i387204.i.i.ph, %.lr.ph206.i.i.preheader ], [ %3795, %.lr.ph206.i.i.prol ]
  %.126.i386203.i.i.unr = phi ptr [ %.126.i386203.i.i.ph, %.lr.ph206.i.i.preheader ], [ %3793, %.lr.ph206.i.i.prol ]
  %.128.i385202.i.i.unr = phi ptr [ %.128.i385202.i.i.ph, %.lr.ph206.i.i.preheader ], [ %3792, %.lr.ph206.i.i.prol ]
  %.029.i384201.i.i.unr = phi ptr [ %.029.i384201.i.i.ph, %.lr.ph206.i.i.preheader ], [ %3794, %.lr.ph206.i.i.prol ]
  %3801 = icmp eq i64 %.1.i388205.i.i.ph, 1
  br i1 %3801, label %sort.quad_reversal.exit389.i.i, label %.lr.ph206.i.i.preheader2741

.lr.ph206.i.i.preheader2741:                      ; preds = %.lr.ph206.i.i.prol.loopexit
  br label %.lr.ph206.i.i

3802:                                             ; preds = %3759
  %3803 = load i64, ptr %3765, align 8
  %3804 = load i64, ptr %3767, align 8
  store i64 %3804, ptr %3765, align 8
  %3805 = getelementptr inbounds i8, ptr %3765, i64 -8
  store i64 %3803, ptr %3767, align 8
  %3806 = getelementptr inbounds i8, ptr %3767, i64 8
  %3807 = add nsw i64 %3763, -1
  br label %._crit_edge.i380.i.i

.lr.ph206.i.i:                                    ; preds = %.lr.ph206.i.i, %.lr.ph206.i.i.preheader2741
  %lsr.iv3168 = phi i64 [ -1, %.lr.ph206.i.i.preheader2741 ], [ %lsr.iv.next3169, %.lr.ph206.i.i ]
  %lsr.iv3162 = phi i64 [ 0, %.lr.ph206.i.i.preheader2741 ], [ %lsr.iv.next3163, %.lr.ph206.i.i ]
  %3808 = shl i64 %lsr.iv3168, 3
  %uglygep3172 = getelementptr i8, ptr %.126.i386203.i.i.unr, i64 %3808
  %uglygep3179 = getelementptr i8, ptr %.029.i384201.i.i.unr, i64 %3808
  %sunkaddr4343 = mul i64 %lsr.iv3162, 8
  %sunkaddr4344 = getelementptr i8, ptr %.024.i387204.i.i.unr, i64 %sunkaddr4343
  %sunkaddr4345 = getelementptr i8, ptr %sunkaddr4344, i64 8
  %3809 = load i64, ptr %sunkaddr4345, align 8
  %3810 = load i64, ptr %uglygep3179, align 8
  store i64 %3810, ptr %sunkaddr4345, align 8
  store i64 %3809, ptr %uglygep3179, align 8
  %3811 = load i64, ptr %uglygep3172, align 8
  %sunkaddr4346 = mul i64 %lsr.iv3162, 8
  %sunkaddr4347 = getelementptr i8, ptr %.128.i385202.i.i.unr, i64 %sunkaddr4346
  %sunkaddr4348 = getelementptr i8, ptr %sunkaddr4347, i64 8
  %3812 = load i64, ptr %sunkaddr4348, align 8
  store i64 %3812, ptr %uglygep3172, align 8
  store i64 %3811, ptr %sunkaddr4348, align 8
  %3813 = shl i64 %lsr.iv3168, 3
  %uglygep3170 = getelementptr i8, ptr %.126.i386203.i.i.unr, i64 %3813
  %uglygep3171 = getelementptr i8, ptr %uglygep3170, i64 -8
  %uglygep3177 = getelementptr i8, ptr %.029.i384201.i.i.unr, i64 %3813
  %uglygep3178 = getelementptr i8, ptr %uglygep3177, i64 -8
  %sunkaddr4349 = mul i64 %lsr.iv3162, 8
  %sunkaddr4350 = getelementptr i8, ptr %.024.i387204.i.i.unr, i64 %sunkaddr4349
  %sunkaddr4351 = getelementptr i8, ptr %sunkaddr4350, i64 16
  %3814 = load i64, ptr %sunkaddr4351, align 8
  %3815 = load i64, ptr %uglygep3178, align 8
  store i64 %3815, ptr %sunkaddr4351, align 8
  store i64 %3814, ptr %uglygep3178, align 8
  %3816 = load i64, ptr %uglygep3171, align 8
  %sunkaddr4352 = mul i64 %lsr.iv3162, 8
  %sunkaddr4353 = getelementptr i8, ptr %.128.i385202.i.i.unr, i64 %sunkaddr4352
  %sunkaddr4354 = getelementptr i8, ptr %sunkaddr4353, i64 16
  %3817 = load i64, ptr %sunkaddr4354, align 8
  store i64 %3817, ptr %uglygep3171, align 8
  store i64 %3816, ptr %sunkaddr4354, align 8
  %lsr.iv.next3163 = add i64 %lsr.iv3162, 2
  %lsr.iv.next3169 = add i64 %lsr.iv3168, -2
  %3818 = icmp eq i64 %.1.i388205.i.i.unr, %lsr.iv.next3163
  br i1 %3818, label %sort.quad_reversal.exit389.i.i, label %.lr.ph206.i.i, !llvm.loop !311

3819:                                             ; preds = %sort.quad_reversal.exit389.i.i
  %3820 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %3821 = ptrtoint ptr %3137 to i64
  %3822 = sub nuw i64 %3820, %3821
  %3823 = lshr i64 %3822, 4
  %3824 = shl nuw nsw i64 %3823, 3
  %3825 = getelementptr inbounds i8, ptr %3137, i64 %3824
  %3826 = sub nsw i64 0, %3824
  %3827 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %3826
  %3828 = and i64 %3822, 16
  %3829 = icmp eq i64 %3828, 0
  br i1 %3829, label %3862, label %._crit_edge.i390.i.i

._crit_edge.i390.i.i:                             ; preds = %3862, %3819
  %.027.i391.i.i249 = phi ptr [ %3866, %3862 ], [ %3827, %3819 ]
  %.025.i392.i.i250 = phi ptr [ %3865, %3862 ], [ %3825, %3819 ]
  %.0.i393.i.i251 = phi i64 [ %3867, %3862 ], [ %3823, %3819 ]
  %3830 = load i64, ptr %3137, align 8
  %3831 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %3831, ptr %3137, align 8
  store i64 %3830, ptr %.4223.lcssa.i.i213, align 8
  %3832 = load i64, ptr %.025.i392.i.i250, align 8
  %3833 = load i64, ptr %.027.i391.i.i249, align 8
  store i64 %3833, ptr %.025.i392.i.i250, align 8
  store i64 %3832, ptr %.027.i391.i.i249, align 8
  %3834 = icmp ult i64 %.0.i393.i.i251, 2
  br i1 %3834, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph212.preheader.i.i

.lr.ph212.preheader.i.i:                          ; preds = %._crit_edge.i390.i.i
  %3835 = lshr i64 %.0.i393.i.i251, 1
  %min.iters.check1514 = icmp ult i64 %.0.i393.i.i251, 80
  br i1 %min.iters.check1514, label %.lr.ph212.i.i.preheader, label %vector.scevcheck1473

vector.scevcheck1473:                             ; preds = %.lr.ph212.preheader.i.i
  %const3466 = bitcast i64 2305843009213693951 to i64
  %3836 = add nsw i64 %3835, -1
  %uglygep1474 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result1476.neg = mul i64 %3836, -8
  %3837 = getelementptr i8, ptr %uglygep1474, i64 %mul.result1476.neg
  %3838 = icmp ugt ptr %3837, %uglygep1474
  %uglygep1478 = getelementptr i8, ptr %.025.i392.i.i250, i64 -8
  %mul.result1480.neg = mul i64 %3836, -8
  %mul.overflow1481 = icmp ugt i64 %3836, %const3466
  %3839 = getelementptr i8, ptr %uglygep1478, i64 %mul.result1480.neg
  %3840 = icmp ugt ptr %3839, %uglygep1478
  %3841 = or i1 %3840, %mul.overflow1481
  %3842 = or i1 %3838, %3841
  br i1 %3842, label %.lr.ph212.i.i.preheader, label %vector.memcheck1482

vector.memcheck1482:                              ; preds = %vector.scevcheck1473
  %uglygep1483 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 16
  %3843 = shl i64 %3835, 3
  %3844 = add i64 %3843, 16
  %uglygep1484 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3844
  %uglygep1485 = getelementptr i8, ptr %.027.i391.i.i249, i64 8
  %3845 = add i64 %3843, 8
  %uglygep1486 = getelementptr i8, ptr %.027.i391.i.i249, i64 %3845
  %3846 = mul i64 %3835, -8
  %uglygep1487 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3846
  %uglygep1488 = getelementptr i8, ptr %.025.i392.i.i250, i64 %3846
  %bound01489 = icmp ult ptr %uglygep1483, %uglygep1486
  %bound11490 = icmp ult ptr %uglygep1485, %uglygep1484
  %found.conflict1491 = and i1 %bound01489, %bound11490
  %bound01492 = icmp ult ptr %uglygep1483, %.4223.lcssa.i.i213
  %bound11493 = icmp ult ptr %uglygep1487, %uglygep1484
  %found.conflict1494 = and i1 %bound01492, %bound11493
  %conflict.rdx1495 = or i1 %found.conflict1491, %found.conflict1494
  %bound01496 = icmp ult ptr %uglygep1483, %.025.i392.i.i250
  %bound11497 = icmp ult ptr %uglygep1488, %uglygep1484
  %found.conflict1498 = and i1 %bound01496, %bound11497
  %conflict.rdx1499 = or i1 %conflict.rdx1495, %found.conflict1498
  %bound01500 = icmp ult ptr %uglygep1485, %.4223.lcssa.i.i213
  %bound11501 = icmp ult ptr %uglygep1487, %uglygep1486
  %found.conflict1502 = and i1 %bound01500, %bound11501
  %conflict.rdx1503 = or i1 %conflict.rdx1499, %found.conflict1502
  %bound01504 = icmp ult ptr %uglygep1485, %.025.i392.i.i250
  %bound11505 = icmp ult ptr %uglygep1488, %uglygep1486
  %found.conflict1506 = and i1 %bound01504, %bound11505
  %conflict.rdx1507 = or i1 %conflict.rdx1503, %found.conflict1506
  %bound01508 = icmp ult ptr %uglygep1487, %.025.i392.i.i250
  %bound11509 = icmp ult ptr %uglygep1488, %.4223.lcssa.i.i213
  %found.conflict1510 = and i1 %bound01508, %bound11509
  %conflict.rdx1511 = or i1 %conflict.rdx1507, %found.conflict1510
  br i1 %conflict.rdx1511, label %.lr.ph212.i.i.preheader, label %vector.ph1515

vector.ph1515:                                    ; preds = %vector.memcheck1482
  %const3490 = bitcast i64 9223372036854775806 to i64
  %n.vec1517 = and i64 %3835, %const3490
  %ind.end1518 = and i64 %3835, 1
  %3847 = shl i64 %n.vec1517, 3
  %ind.end1520 = getelementptr i8, ptr %3137, i64 %3847
  %3848 = mul i64 %n.vec1517, -8
  %ind.end1522 = getelementptr i8, ptr %.025.i392.i.i250, i64 %3848
  %3849 = shl i64 %n.vec1517, 3
  %ind.end1524 = getelementptr i8, ptr %.027.i391.i.i249, i64 %3849
  %3850 = mul i64 %n.vec1517, -8
  %ind.end1526 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3850
  br label %vector.body1529

vector.body1529:                                  ; preds = %vector.body1529, %vector.ph1515
  %lsr.iv3157 = phi i64 [ %lsr.iv.next3158, %vector.body1529 ], [ -16, %vector.ph1515 ]
  %index1530 = phi i64 [ 0, %vector.ph1515 ], [ %index.next1543, %vector.body1529 ]
  %sunkaddr4355 = mul i64 %index1530, 8
  %sunkaddr4356 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %sunkaddr4355
  %sunkaddr4357 = getelementptr i8, ptr %sunkaddr4356, i64 16
  %wide.load1535 = load <2 x i64>, ptr %sunkaddr4357, align 8, !alias.scope !312, !noalias !315
  %uglygep3159 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %lsr.iv3157
  %wide.load1536 = load <2 x i64>, ptr %uglygep3159, align 8, !alias.scope !319, !noalias !320
  %reverse1537 = shufflevector <2 x i64> %wide.load1536, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1537, ptr %sunkaddr4357, align 8, !alias.scope !312, !noalias !315
  %reverse1538 = shufflevector <2 x i64> %wide.load1535, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1538, ptr %uglygep3159, align 8, !alias.scope !319, !noalias !320
  %uglygep3160 = getelementptr i8, ptr %.025.i392.i.i250, i64 %lsr.iv3157
  %wide.load1539 = load <2 x i64>, ptr %uglygep3160, align 8, !alias.scope !320
  %reverse1540 = shufflevector <2 x i64> %wide.load1539, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %sunkaddr4358 = mul i64 %index1530, 8
  %sunkaddr4359 = getelementptr i8, ptr %.027.i391.i.i249, i64 %sunkaddr4358
  %sunkaddr4360 = getelementptr i8, ptr %sunkaddr4359, i64 8
  %wide.load1541 = load <2 x i64>, ptr %sunkaddr4360, align 8, !alias.scope !321, !noalias !322
  %reverse1542 = shufflevector <2 x i64> %wide.load1541, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1542, ptr %uglygep3160, align 8, !alias.scope !320
  store <2 x i64> %reverse1540, ptr %sunkaddr4360, align 8, !alias.scope !321, !noalias !322
  %index.next1543 = add nuw i64 %index1530, 2
  %lsr.iv.next3158 = add i64 %lsr.iv3157, -16
  %3851 = icmp eq i64 %n.vec1517, %index.next1543
  br i1 %3851, label %middle.block1512, label %vector.body1529, !llvm.loop !323

middle.block1512:                                 ; preds = %vector.body1529
  %cmp.n1528 = icmp eq i64 %3835, %n.vec1517
  br i1 %cmp.n1528, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph212.i.i.preheader

.lr.ph212.i.i.preheader:                          ; preds = %middle.block1512, %vector.memcheck1482, %vector.scevcheck1473, %.lr.ph212.preheader.i.i
  %.1.i398211.i.i.ph = phi i64 [ %3835, %vector.memcheck1482 ], [ %3835, %vector.scevcheck1473 ], [ %3835, %.lr.ph212.preheader.i.i ], [ %ind.end1518, %middle.block1512 ]
  %.024.i397210.i.i.ph = phi ptr [ %3137, %vector.memcheck1482 ], [ %3137, %vector.scevcheck1473 ], [ %3137, %.lr.ph212.preheader.i.i ], [ %ind.end1520, %middle.block1512 ]
  %.126.i396209.i.i.ph = phi ptr [ %.025.i392.i.i250, %vector.memcheck1482 ], [ %.025.i392.i.i250, %vector.scevcheck1473 ], [ %.025.i392.i.i250, %.lr.ph212.preheader.i.i ], [ %ind.end1522, %middle.block1512 ]
  %.128.i395208.i.i.ph = phi ptr [ %.027.i391.i.i249, %vector.memcheck1482 ], [ %.027.i391.i.i249, %vector.scevcheck1473 ], [ %.027.i391.i.i249, %.lr.ph212.preheader.i.i ], [ %ind.end1524, %middle.block1512 ]
  %.029.i394207.i.i.ph = phi ptr [ %.4223.lcssa.i.i213, %vector.memcheck1482 ], [ %.4223.lcssa.i.i213, %vector.scevcheck1473 ], [ %.4223.lcssa.i.i213, %.lr.ph212.preheader.i.i ], [ %ind.end1526, %middle.block1512 ]
  %xtraiter2607 = and i64 %.1.i398211.i.i.ph, 1
  %lcmp.mod2608.not = icmp eq i64 %xtraiter2607, 0
  br i1 %lcmp.mod2608.not, label %.lr.ph212.i.i.prol.loopexit, label %.lr.ph212.i.i.prol

.lr.ph212.i.i.prol:                               ; preds = %.lr.ph212.i.i.preheader
  %3852 = getelementptr inbounds i8, ptr %.128.i395208.i.i.ph, i64 8
  %3853 = getelementptr inbounds i8, ptr %.126.i396209.i.i.ph, i64 -8
  %3854 = getelementptr inbounds i8, ptr %.029.i394207.i.i.ph, i64 -8
  %3855 = getelementptr inbounds i8, ptr %.024.i397210.i.i.ph, i64 8
  %3856 = add nsw i64 %.1.i398211.i.i.ph, -1
  %3857 = load i64, ptr %3855, align 8
  %3858 = load i64, ptr %3854, align 8
  store i64 %3858, ptr %3855, align 8
  store i64 %3857, ptr %3854, align 8
  %3859 = load i64, ptr %3853, align 8
  %3860 = load i64, ptr %3852, align 8
  store i64 %3860, ptr %3853, align 8
  store i64 %3859, ptr %3852, align 8
  br label %.lr.ph212.i.i.prol.loopexit

.lr.ph212.i.i.prol.loopexit:                      ; preds = %.lr.ph212.i.i.prol, %.lr.ph212.i.i.preheader
  %.1.i398211.i.i.unr = phi i64 [ %.1.i398211.i.i.ph, %.lr.ph212.i.i.preheader ], [ %3856, %.lr.ph212.i.i.prol ]
  %.024.i397210.i.i.unr = phi ptr [ %.024.i397210.i.i.ph, %.lr.ph212.i.i.preheader ], [ %3855, %.lr.ph212.i.i.prol ]
  %.126.i396209.i.i.unr = phi ptr [ %.126.i396209.i.i.ph, %.lr.ph212.i.i.preheader ], [ %3853, %.lr.ph212.i.i.prol ]
  %.128.i395208.i.i.unr = phi ptr [ %.128.i395208.i.i.ph, %.lr.ph212.i.i.preheader ], [ %3852, %.lr.ph212.i.i.prol ]
  %.029.i394207.i.i.unr = phi ptr [ %.029.i394207.i.i.ph, %.lr.ph212.i.i.preheader ], [ %3854, %.lr.ph212.i.i.prol ]
  %3861 = icmp eq i64 %.1.i398211.i.i.ph, 1
  br i1 %3861, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph212.i.i.preheader2740

.lr.ph212.i.i.preheader2740:                      ; preds = %.lr.ph212.i.i.prol.loopexit
  br label %.lr.ph212.i.i

3862:                                             ; preds = %3819
  %3863 = load i64, ptr %3825, align 8
  %3864 = load i64, ptr %3827, align 8
  store i64 %3864, ptr %3825, align 8
  %3865 = getelementptr inbounds i8, ptr %3825, i64 -8
  store i64 %3863, ptr %3827, align 8
  %3866 = getelementptr inbounds i8, ptr %3827, i64 8
  %3867 = add nsw i64 %3823, -1
  br label %._crit_edge.i390.i.i

.lr.ph212.i.i:                                    ; preds = %.lr.ph212.i.i, %.lr.ph212.i.i.preheader2740
  %lsr.iv3145 = phi i64 [ -1, %.lr.ph212.i.i.preheader2740 ], [ %lsr.iv.next3146, %.lr.ph212.i.i ]
  %lsr.iv3139 = phi i64 [ 0, %.lr.ph212.i.i.preheader2740 ], [ %lsr.iv.next3140, %.lr.ph212.i.i ]
  %3868 = shl i64 %lsr.iv3145, 3
  %uglygep3149 = getelementptr i8, ptr %.126.i396209.i.i.unr, i64 %3868
  %uglygep3156 = getelementptr i8, ptr %.029.i394207.i.i.unr, i64 %3868
  %sunkaddr4361 = mul i64 %lsr.iv3139, 8
  %sunkaddr4362 = getelementptr i8, ptr %.024.i397210.i.i.unr, i64 %sunkaddr4361
  %sunkaddr4363 = getelementptr i8, ptr %sunkaddr4362, i64 8
  %3869 = load i64, ptr %sunkaddr4363, align 8
  %3870 = load i64, ptr %uglygep3156, align 8
  store i64 %3870, ptr %sunkaddr4363, align 8
  store i64 %3869, ptr %uglygep3156, align 8
  %3871 = load i64, ptr %uglygep3149, align 8
  %sunkaddr4364 = mul i64 %lsr.iv3139, 8
  %sunkaddr4365 = getelementptr i8, ptr %.128.i395208.i.i.unr, i64 %sunkaddr4364
  %sunkaddr4366 = getelementptr i8, ptr %sunkaddr4365, i64 8
  %3872 = load i64, ptr %sunkaddr4366, align 8
  store i64 %3872, ptr %uglygep3149, align 8
  store i64 %3871, ptr %sunkaddr4366, align 8
  %3873 = shl i64 %lsr.iv3145, 3
  %uglygep3147 = getelementptr i8, ptr %.126.i396209.i.i.unr, i64 %3873
  %uglygep3148 = getelementptr i8, ptr %uglygep3147, i64 -8
  %uglygep3154 = getelementptr i8, ptr %.029.i394207.i.i.unr, i64 %3873
  %uglygep3155 = getelementptr i8, ptr %uglygep3154, i64 -8
  %sunkaddr4367 = mul i64 %lsr.iv3139, 8
  %sunkaddr4368 = getelementptr i8, ptr %.024.i397210.i.i.unr, i64 %sunkaddr4367
  %sunkaddr4369 = getelementptr i8, ptr %sunkaddr4368, i64 16
  %3874 = load i64, ptr %sunkaddr4369, align 8
  %3875 = load i64, ptr %uglygep3155, align 8
  store i64 %3875, ptr %sunkaddr4369, align 8
  store i64 %3874, ptr %uglygep3155, align 8
  %3876 = load i64, ptr %uglygep3148, align 8
  %sunkaddr4370 = mul i64 %lsr.iv3139, 8
  %sunkaddr4371 = getelementptr i8, ptr %.128.i395208.i.i.unr, i64 %sunkaddr4370
  %sunkaddr4372 = getelementptr i8, ptr %sunkaddr4371, i64 16
  %3877 = load i64, ptr %sunkaddr4372, align 8
  store i64 %3877, ptr %uglygep3148, align 8
  store i64 %3876, ptr %sunkaddr4372, align 8
  %lsr.iv.next3140 = add i64 %lsr.iv3139, 2
  %lsr.iv.next3146 = add i64 %lsr.iv3145, -2
  %3878 = icmp eq i64 %.1.i398211.i.i.unr, %lsr.iv.next3140
  br i1 %3878, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph212.i.i, !llvm.loop !324

3879:                                             ; preds = %3887, %sort.quad_reversal.exit399.i.i229
  %.0265.i.i252 = phi i4 [ 1, %3887 ], [ %3117, %sort.quad_reversal.exit399.i.i229 ]
  %.0264.i.i253 = phi i4 [ 1, %3887 ], [ %3114, %sort.quad_reversal.exit399.i.i229 ]
  %.0263.i.i254 = phi i4 [ 1, %3887 ], [ %3111, %sort.quad_reversal.exit399.i.i229 ]
  %.0262.i.i255 = phi i4 [ 1, %3887 ], [ %3108, %sort.quad_reversal.exit399.i.i229 ]
  %3880 = shl nuw nsw i4 %.0263.i.i254, 1
  %3881 = shl nuw nsw i4 %.0264.i.i253, 2
  %3882 = or i4 %3880, %3881
  %3883 = shl nuw i4 %.0265.i.i252, 3
  %3884 = or i4 %3882, %3883
  %3885 = or i4 %3884, %.0262.i.i255
  %3886 = zext i4 %3885 to i32
  switch i32 %3886, label %3896 [
    i32 0, label %3897
    i32 1, label %3899
    i32 2, label %3911
    i32 3, label %3924
    i32 4, label %3943
    i32 8, label %3956
    i32 9, label %3966
    i32 12, label %3986
    i32 5, label %4004
    i32 6, label %4004
    i32 7, label %4004
    i32 10, label %4004
    i32 11, label %4004
    i32 13, label %4004
    i32 14, label %4004
    i32 15, label %4004
  ]

3887:                                             ; preds = %sort.quad_reversal.exit399.i.i229
  br label %3879

sort.quadsort_swap__anon_14517.exit404.i.i:       ; preds = %4052, %4050, %4049, %4042, %4041, %4002, %4000, %3999, %sort.quadsort_swap__anon_14517.exit407.i.i, %3984, %3982, %3981, %sort.quadsort_swap__anon_14517.exit405.i.i, %3964, %3962, %3961, %3956, %sort.quadsort_swap__anon_14517.exit403.i.i, %sort.quadsort_swap__anon_14517.exit402.i.i, %sort.quadsort_swap__anon_14517.exit400.i.i, %sort.quadsort_swap__anon_14517.exit.i.i
  %3888 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3889 = load ptr, ptr %.3.lcssa.i.i216, align 8
  %3890 = load ptr, ptr %3888, align 8
  %3891 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3889, ptr align 1 %3890) #18
  %.not269.i.i256 = icmp eq i8 %3891, 1
  %3892 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3893 = load ptr, ptr %.4218.lcssa.i.i214, align 8
  %3894 = load ptr, ptr %3892, align 8
  %3895 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3893, ptr align 1 %3894) #18
  br i1 %.not269.i.i256, label %4057, label %4055

3896:                                             ; preds = %3879
  unreachable

3897:                                             ; preds = %3879
  %3898 = getelementptr inbounds i8, ptr %1780, i64 %93
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %3898, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.flux_analyze__anon_13924.exit.i

3899:                                             ; preds = %3879
  %.not286.i.i258 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not286.i.i258, label %sort.quadsort_swap__anon_14517.exit.i.i, label %3904

sort.quadsort_swap__anon_14517.exit.i.i:          ; preds = %3909, %3907, %3906, %3899
  %3900 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3901 = add nuw i64 %2934, %2935
  %3902 = shl nuw i64 %3901, 3
  %3903 = getelementptr inbounds i8, ptr %1780, i64 %3902
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %3900, ptr nonnull align 1 %1780, ptr nonnull align 1 %3900, ptr nonnull align 1 %3903, i64 %3901, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3904:                                             ; preds = %3899
  %3905 = icmp ult i64 %1, 384
  br i1 %3905, label %3906, label %3907

3906:                                             ; preds = %3904
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit.i.i

3907:                                             ; preds = %3904
  %3908 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %94, i64 %2933, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3908, label %3909, label %sort.quadsort_swap__anon_14517.exit.i.i

3909:                                             ; preds = %3907
  %3910 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, i64 %3910, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit.i.i

3911:                                             ; preds = %3879
  %3912 = getelementptr inbounds i8, ptr %1780, i64 %2938
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %3912, i64 %2933, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %.not285.i.i259 = icmp eq i64 %.4238.i.i227, 0
  br i1 %.not285.i.i259, label %sort.quadsort_swap__anon_14517.exit400.i.i, label %3916

sort.quadsort_swap__anon_14517.exit400.i.i:       ; preds = %3922, %3920, %3919, %3911
  %3913 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3914 = shl nuw i64 %2935, 3
  %3915 = getelementptr inbounds i8, ptr %1780, i64 %3914
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %3913, ptr nonnull align 1 %1780, ptr nonnull align 1 %3913, ptr nonnull align 1 %3915, i64 %2935, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3916:                                             ; preds = %3911
  %3917 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3918 = icmp ult i64 %2934, 96
  br i1 %3918, label %3919, label %3920

3919:                                             ; preds = %3916
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %3917, i64 %2934, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit400.i.i

3920:                                             ; preds = %3916
  %3921 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %3917, i64 %2934, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3921, label %3922, label %sort.quadsort_swap__anon_14517.exit400.i.i

3922:                                             ; preds = %3920
  %3923 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %3917, i64 %2934, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %3917, i64 %2934, ptr nonnull align 1 %1780, i64 %1, i64 %3923, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit400.i.i

3924:                                             ; preds = %3879
  %.not283.i.i260 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not283.i.i260, label %sort.quadsort_swap__anon_14517.exit401.i.i, label %3925

sort.quadsort_swap__anon_14517.exit401.i.i:       ; preds = %3930, %3928, %3927, %3924
  %.not284.i.i261 = icmp eq i64 %.4238.i.i227, 0
  br i1 %.not284.i.i261, label %sort.quadsort_swap__anon_14517.exit402.i.i, label %3935

3925:                                             ; preds = %3924
  %3926 = icmp ult i64 %1, 384
  br i1 %3926, label %3927, label %3928

3927:                                             ; preds = %3925
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit401.i.i

3928:                                             ; preds = %3925
  %3929 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %94, i64 %2933, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3929, label %3930, label %sort.quadsort_swap__anon_14517.exit401.i.i

3930:                                             ; preds = %3928
  %3931 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, i64 %3931, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit401.i.i

sort.quadsort_swap__anon_14517.exit402.i.i:       ; preds = %3941, %3939, %3938, %sort.quadsort_swap__anon_14517.exit401.i.i
  %3932 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3933 = shl nuw i64 %2935, 3
  %3934 = getelementptr inbounds i8, ptr %1780, i64 %3933
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %3932, ptr nonnull align 1 %1780, ptr nonnull align 1 %3932, ptr nonnull align 1 %3934, i64 %2935, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3935:                                             ; preds = %sort.quadsort_swap__anon_14517.exit401.i.i
  %3936 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3937 = icmp ult i64 %2934, 96
  br i1 %3937, label %3938, label %3939

3938:                                             ; preds = %3935
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %3936, i64 %2934, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit402.i.i

3939:                                             ; preds = %3935
  %3940 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %3936, i64 %2934, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3940, label %3941, label %sort.quadsort_swap__anon_14517.exit402.i.i

3941:                                             ; preds = %3939
  %3942 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %3936, i64 %2934, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %3936, i64 %2934, ptr nonnull align 1 %1780, i64 %1, i64 %3942, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit402.i.i

3943:                                             ; preds = %3879
  %3944 = getelementptr inbounds i8, ptr %1780, i64 %2940
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %3944, i64 %2932, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %.not282.i.i262 = icmp eq i64 %.4245.i.i226, 0
  br i1 %.not282.i.i262, label %sort.quadsort_swap__anon_14517.exit403.i.i, label %3948

sort.quadsort_swap__anon_14517.exit403.i.i:       ; preds = %3954, %3952, %3951, %3943
  %3945 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3946 = shl nuw i64 %2937, 3
  %3947 = getelementptr inbounds i8, ptr %1780, i64 %3946
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %3945, ptr nonnull align 1 %1780, ptr nonnull align 1 %3945, ptr nonnull align 1 %3947, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3948:                                             ; preds = %3943
  %3949 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3950 = icmp ult i64 %2935, 192
  br i1 %3950, label %3951, label %3952

3951:                                             ; preds = %3948
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %3949, i64 %2936, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit403.i.i

3952:                                             ; preds = %3948
  %3953 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %3949, i64 %2936, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3953, label %3954, label %sort.quadsort_swap__anon_14517.exit403.i.i

3954:                                             ; preds = %3952
  %3955 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %3949, i64 %2936, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %3949, i64 %2936, ptr nonnull align 1 %1780, i64 %1, i64 %3955, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit403.i.i

3956:                                             ; preds = %3879
  %3957 = getelementptr inbounds i8, ptr %1780, i64 %2943
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %3957, i64 %2942, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %.not281.i.i263 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not281.i.i263, label %sort.quadsort_swap__anon_14517.exit404.i.i, label %3958

3958:                                             ; preds = %3956
  %3959 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3960 = icmp ult i64 %2937, 96
  br i1 %3960, label %3961, label %3962

3961:                                             ; preds = %3958
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %3959, i64 %2937, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3962:                                             ; preds = %3958
  %3963 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %3959, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3963, label %3964, label %sort.quadsort_swap__anon_14517.exit404.i.i

3964:                                             ; preds = %3962
  %3965 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %3959, i64 %2937, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %3959, i64 %2937, ptr nonnull align 1 %1780, i64 %1, i64 %3965, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3966:                                             ; preds = %3879
  %.not279.i.i264 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not279.i.i264, label %sort.quadsort_swap__anon_14517.exit405.i.i, label %3971

sort.quadsort_swap__anon_14517.exit405.i.i:       ; preds = %3976, %3974, %3973, %3966
  %3967 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3968 = add nuw i64 %2936, %2934
  %3969 = shl nuw i64 %3968, 3
  %3970 = getelementptr inbounds i8, ptr %1780, i64 %3969
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %3967, ptr nonnull align 1 %1780, ptr nonnull align 1 %3967, ptr nonnull align 1 %3970, i64 %3968, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %.not280.i.i265 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not280.i.i265, label %sort.quadsort_swap__anon_14517.exit404.i.i, label %3978

3971:                                             ; preds = %3966
  %3972 = icmp ult i64 %1, 384
  br i1 %3972, label %3973, label %3974

3973:                                             ; preds = %3971
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit405.i.i

3974:                                             ; preds = %3971
  %3975 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %94, i64 %2933, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3975, label %3976, label %sort.quadsort_swap__anon_14517.exit405.i.i

3976:                                             ; preds = %3974
  %3977 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, i64 %3977, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit405.i.i

3978:                                             ; preds = %sort.quadsort_swap__anon_14517.exit405.i.i
  %3979 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3980 = icmp ult i64 %2937, 96
  br i1 %3980, label %3981, label %3982

3981:                                             ; preds = %3978
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %3979, i64 %2937, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3982:                                             ; preds = %3978
  %3983 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %3979, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3983, label %3984, label %sort.quadsort_swap__anon_14517.exit404.i.i

3984:                                             ; preds = %3982
  %3985 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %3979, i64 %2937, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %3979, i64 %2937, ptr nonnull align 1 %1780, i64 %1, i64 %3985, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

3986:                                             ; preds = %3879
  %3987 = getelementptr inbounds i8, ptr %1780, i64 %2940
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %3987, i64 %2932, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %.not277.i.i266 = icmp eq i64 %.4245.i.i226, 0
  br i1 %.not277.i.i266, label %sort.quadsort_swap__anon_14517.exit407.i.i, label %3988

sort.quadsort_swap__anon_14517.exit407.i.i:       ; preds = %3994, %3992, %3991, %3986
  %.not278.i.i267 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not278.i.i267, label %sort.quadsort_swap__anon_14517.exit404.i.i, label %3996

3988:                                             ; preds = %3986
  %3989 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3990 = icmp ult i64 %2935, 192
  br i1 %3990, label %3991, label %3992

3991:                                             ; preds = %3988
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %3989, i64 %2936, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit407.i.i

3992:                                             ; preds = %3988
  %3993 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %3989, i64 %2936, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %3993, label %3994, label %sort.quadsort_swap__anon_14517.exit407.i.i

3994:                                             ; preds = %3992
  %3995 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %3989, i64 %2936, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %3989, i64 %2936, ptr nonnull align 1 %1780, i64 %1, i64 %3995, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit407.i.i

3996:                                             ; preds = %sort.quadsort_swap__anon_14517.exit407.i.i
  %3997 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3998 = icmp ult i64 %2937, 96
  br i1 %3998, label %3999, label %4000

3999:                                             ; preds = %3996
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %3997, i64 %2937, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

4000:                                             ; preds = %3996
  %4001 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %3997, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %4001, label %4002, label %sort.quadsort_swap__anon_14517.exit404.i.i

4002:                                             ; preds = %4000
  %4003 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %3997, i64 %2937, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %3997, i64 %2937, ptr nonnull align 1 %1780, i64 %1, i64 %4003, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

4004:                                             ; preds = %3879, %3879, %3879, %3879, %3879, %3879, %3879, %3879
  %.not.i.i268 = icmp eq i4 %.0262.i.i255, 0
  br i1 %.not.i.i268, label %4006, label %4005

sort.quadsort_swap__anon_14517.exit409.i.i:       ; preds = %4013, %4011, %4010, %4006, %4005
  %.not266.i.i269 = icmp eq i4 %.0263.i.i254, 0
  br i1 %.not266.i.i269, label %4016, label %4015

4005:                                             ; preds = %4004
  %.not276.i.i270 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not276.i.i270, label %sort.quadsort_swap__anon_14517.exit409.i.i, label %4008

4006:                                             ; preds = %4004
  %4007 = getelementptr inbounds i8, ptr %1780, i64 %2938
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, ptr nonnull align 1 %94, ptr nonnull align 1 %4007, i64 %2933, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit409.i.i

4008:                                             ; preds = %4005
  %4009 = icmp ult i64 %1, 384
  br i1 %4009, label %4010, label %4011

4010:                                             ; preds = %4008
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit409.i.i

4011:                                             ; preds = %4008
  %4012 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %94, i64 %2933, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %4012, label %4013, label %sort.quadsort_swap__anon_14517.exit409.i.i

4013:                                             ; preds = %4011
  %4014 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %94, i64 %2933, ptr nonnull align 1 %1780, i64 %1, i64 %4014, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit409.i.i

sort.quadsort_swap__anon_14517.exit410.i.i:       ; preds = %4026, %4024, %4023, %4016, %4015
  %.not267.i.i271 = icmp eq i4 %.0264.i.i253, 0
  br i1 %.not267.i.i271, label %4029, label %4028

4015:                                             ; preds = %sort.quadsort_swap__anon_14517.exit409.i.i
  %.not275.i.i272 = icmp eq i64 %.4238.i.i227, 0
  br i1 %.not275.i.i272, label %sort.quadsort_swap__anon_14517.exit410.i.i, label %4020

4016:                                             ; preds = %sort.quadsort_swap__anon_14517.exit409.i.i
  %4017 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %4018 = shl nuw i64 %2934, 3
  %4019 = getelementptr inbounds i8, ptr %1780, i64 %4018
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %4017, ptr nonnull align 1 %1780, ptr nonnull align 1 %4017, ptr nonnull align 1 %4019, i64 %2934, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit410.i.i

4020:                                             ; preds = %4015
  %4021 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %4022 = icmp ult i64 %2934, 96
  br i1 %4022, label %4023, label %4024

4023:                                             ; preds = %4020
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %4021, i64 %2934, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit410.i.i

4024:                                             ; preds = %4020
  %4025 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %4021, i64 %2934, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %4025, label %4026, label %sort.quadsort_swap__anon_14517.exit410.i.i

4026:                                             ; preds = %4024
  %4027 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %4021, i64 %2934, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %4021, i64 %2934, ptr nonnull align 1 %1780, i64 %1, i64 %4027, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit410.i.i

sort.quadsort_swap__anon_14517.exit411.i.i:       ; preds = %4039, %4037, %4036, %4029, %4028
  %.not268.i.i273 = icmp eq i4 %.0265.i.i252, 0
  br i1 %.not268.i.i273, label %4042, label %4041

4028:                                             ; preds = %sort.quadsort_swap__anon_14517.exit410.i.i
  %.not274.i.i274 = icmp eq i64 %.4245.i.i226, 0
  br i1 %.not274.i.i274, label %sort.quadsort_swap__anon_14517.exit411.i.i, label %4033

4029:                                             ; preds = %sort.quadsort_swap__anon_14517.exit410.i.i
  %4030 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %4031 = shl nuw i64 %2936, 3
  %4032 = getelementptr inbounds i8, ptr %1780, i64 %4031
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %4030, ptr nonnull align 1 %1780, ptr nonnull align 1 %4030, ptr nonnull align 1 %4032, i64 %2936, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit411.i.i

4033:                                             ; preds = %4028
  %4034 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %4035 = icmp ult i64 %2935, 192
  br i1 %4035, label %4036, label %4037

4036:                                             ; preds = %4033
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %4034, i64 %2936, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit411.i.i

4037:                                             ; preds = %4033
  %4038 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %4034, i64 %2936, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %4038, label %4039, label %sort.quadsort_swap__anon_14517.exit411.i.i

4039:                                             ; preds = %4037
  %4040 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %4034, i64 %2936, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %4034, i64 %2936, ptr nonnull align 1 %1780, i64 %1, i64 %4040, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit411.i.i

4041:                                             ; preds = %sort.quadsort_swap__anon_14517.exit411.i.i
  %.not273.i.i275 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not273.i.i275, label %sort.quadsort_swap__anon_14517.exit404.i.i, label %4046

4042:                                             ; preds = %sort.quadsort_swap__anon_14517.exit411.i.i
  %4043 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %4044 = shl nuw i64 %2937, 3
  %4045 = getelementptr inbounds i8, ptr %1780, i64 %4044
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %4043, ptr nonnull align 1 %1780, ptr nonnull align 1 %4043, ptr nonnull align 1 %4045, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

4046:                                             ; preds = %4041
  %4047 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %4048 = icmp ult i64 %2937, 96
  br i1 %4048, label %4049, label %4050

4049:                                             ; preds = %4046
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %4047, i64 %2937, ptr nonnull align 1 %1780, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

4050:                                             ; preds = %4046
  %4051 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %4047, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %4051, label %4052, label %sort.quadsort_swap__anon_14517.exit404.i.i

4052:                                             ; preds = %4050
  %4053 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %4047, i64 %2937, ptr nonnull align 1 %1780, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %4047, i64 %2937, ptr nonnull align 1 %1780, i64 %1, i64 %4053, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14517.exit404.i.i

4054:                                             ; preds = %4070, %4068, %4067, %4065
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %94, ptr nonnull align 1 %1780, i64 %2932, i64 %2935, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.flux_analyze__anon_13924.exit.i

4055:                                             ; preds = %sort.quadsort_swap__anon_14517.exit404.i.i
  %4056 = icmp eq i8 %3895, 1
  br i1 %4056, label %4065, label %4060

4057:                                             ; preds = %sort.quadsort_swap__anon_14517.exit404.i.i
  %4058 = icmp eq i8 %3895, 1
  %4059 = getelementptr inbounds i8, ptr %1780, i64 %2940
  br i1 %4058, label %4070, label %4068

4060:                                             ; preds = %4055
  %4061 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %4062 = load ptr, ptr %.4.lcssa.i.i215, align 8
  %4063 = load ptr, ptr %4061, align 8
  %4064 = tail call i8 %2(ptr align 1 %3, ptr align 1 %4062, ptr align 1 %4063) #18
  %.not272.i.i276 = icmp eq i8 %4064, 1
  br i1 %.not272.i.i276, label %4067, label %sort.flux_analyze__anon_13924.exit.i

4065:                                             ; preds = %4055
  %4066 = getelementptr inbounds i8, ptr %1780, i64 %2940
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %4066, ptr nonnull align 1 %2941, i64 %2936, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %2940, i1 false)
  br label %4054

4067:                                             ; preds = %4060
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %93, i1 false)
  br label %4054

4068:                                             ; preds = %4057
  %4069 = shl nuw i64 %2935, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %4059, ptr nonnull align 1 %2941, i64 %4069, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %2933, i64 %2934, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %4054

4070:                                             ; preds = %4057
  %4071 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %4059, ptr nonnull align 1 %4071, i64 %2936, i64 %2937, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %1780, ptr nonnull align 1 %94, i64 %2933, i64 %2934, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %4054

sort.flux_analyze__anon_13924.exit.i:             ; preds = %4060, %4054, %3897, %.lr.ph146.i.i, %.lr.ph146.i.i.prol.loopexit, %middle.block, %._crit_edge.i350.i.i, %3100
  tail call void @roc_dealloc(ptr nonnull align 1 %1780, i32 8)
  br label %sort.fluxsort_direct__anon_13236.exit

4072:                                             ; preds = %2929
  tail call fastcc void @sort.quadsort_direct__anon_13920(ptr nonnull align 1 %94, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %sort.fluxsort_direct__anon_13236.exit

4073:                                             ; preds = %sort.fluxsort_direct__anon_13236.exit
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13238, i64 50)
  unreachable

.lr.ph403:                                        ; preds = %.lr.ph403, %.lr.ph403.preheader
  %lsr.iv2835 = phi ptr [ %1782, %.lr.ph403.preheader ], [ %uglygep2836, %.lr.ph403 ]
  %.0402 = phi i64 [ %4076, %.lr.ph403 ], [ 0, %.lr.ph403.preheader ]
  %4074 = shl i64 %.0402, 3
  %uglygep2834 = getelementptr i8, ptr %94, i64 %4074
  %4075 = load ptr, ptr %uglygep2834, align 8
  tail call void %8(ptr nonnull align 1 %lsr.iv2835, ptr align 1 %4075) #18
  %4076 = add i64 %.0402, 1
  %uglygep2836 = getelementptr i8, ptr %lsr.iv2835, i64 %6
  %exitcond500.not = icmp eq i64 %1, %4076
  br i1 %exitcond500.not, label %._crit_edge404, label %.lr.ph403

._crit_edge404:                                   ; preds = %.lr.ph403
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1782, i64 %1781, i1 false)
  tail call void @roc_dealloc(ptr nonnull align 1 %1782, i32 %7)
  tail call void @roc_dealloc(ptr nonnull align 1 %94, i32 8)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.usub.sat.i64(i64, i64) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.floor.f32(float) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i8, i1 } @llvm.usub.with.overflow.i8(i8, i8) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none) uwtable
define internal i64 @roc_builtins.num.floor_f32.u64(float %0) local_unnamed_addr #5 {
  %2 = tail call float @llvm.floor.f32(float %0)
  %3 = fptoui float %2 to i64
  ret i64 %3
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal i64 @roc_builtins.str.count_utf8_bytes(ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %0) local_unnamed_addr #6 {
str.RocStr.len.exit:
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %1 = icmp slt i64 %.sroa.2.0.copyload, 0
  %2 = lshr i64 %.sroa.2.0.copyload, 56
  %3 = xor i64 %2, 128
  %4 = and i64 %.sroa.1.0.copyload, 9223372036854775807
  %common.ret.op.i = select i1 %1, i64 %3, i64 %4
  ret i64 %common.ret.op.i
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.concat(ptr noalias nocapture nonnull writeonly sret(%str.RocStr) %0, ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %1, ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %2) local_unnamed_addr #4 {
  %const = bitcast i64 9223372036854775807 to i64
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %str.RocStr, align 8
  %7 = alloca %str.RocStr, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %.sroa.2.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %2, i64 8
  %.sroa.2.sroa.2.0.copyload = load i64, ptr %.sroa.2.sroa.2.0..sroa_idx, align 8
  %.sroa.2.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %2, i64 16
  %.sroa.2.sroa.3.0.copyload = load i64, ptr %.sroa.2.sroa.3.0..sroa_idx, align 8
  %8 = icmp slt i64 %.sroa.2.sroa.3.0.copyload, 0
  %9 = lshr i64 %.sroa.2.sroa.3.0.copyload, 56
  %10 = xor i64 %9, 128
  %11 = and i64 %.sroa.2.sroa.2.0.copyload, %const
  %common.ret.op.i.i = select i1 %8, i64 %10, i64 %11
  %12 = icmp eq i64 %common.ret.op.i.i, 0
  br i1 %12, label %13, label %str.RocStr.len.exit

13:                                               ; preds = %str.RocStr.len.exit, %3
  %14 = phi ptr [ %6, %str.RocStr.len.exit ], [ %7, %3 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %14, i64 24, i1 false)
  ret void

str.RocStr.len.exit:                              ; preds = %3
  %15 = icmp slt i64 %.sroa.2.sroa.3.0.copyload, 0
  %.sroa.2.sroa.0.0.copyload = load ptr, ptr %2, align 8
  %.sroa.136.0..sroa_idx = getelementptr inbounds i8, ptr %7, i64 8
  %.sroa.136.0.copyload = load i64, ptr %.sroa.136.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %7, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %16 = icmp slt i64 %.sroa.2.0.copyload, 0
  %17 = lshr i64 %.sroa.2.0.copyload, 56
  %18 = xor i64 %17, 128
  %19 = and i64 %.sroa.136.0.copyload, %const
  %common.ret.op.i = select i1 %16, i64 %18, i64 %19
  %20 = add nuw i64 %common.ret.op.i, %common.ret.op.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  call fastcc void @str.RocStr.reallocate(ptr noalias %6, ptr nonnull readonly align 8 %5, i64 %20)
  %21 = getelementptr inbounds i8, ptr %6, i64 16
  %.val.i = load i64, ptr %21, align 8
  %22 = icmp slt i64 %.val.i, 0
  %23 = load ptr, ptr %6, align 8
  %common.ret.op.i8 = select i1 %22, ptr %6, ptr %23
  %24 = getelementptr inbounds i8, ptr %common.ret.op.i8, i64 %common.ret.op.i
  store ptr %.sroa.2.sroa.0.0.copyload, ptr %4, align 8
  %.sroa.5.0..sroa_idx25 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %.sroa.2.sroa.2.0.copyload, ptr %.sroa.5.0..sroa_idx25, align 8
  %.sroa.6.0..sroa_idx30 = getelementptr inbounds i8, ptr %4, i64 16
  store i64 %.sroa.2.sroa.3.0.copyload, ptr %.sroa.6.0..sroa_idx30, align 8
  %common.ret.op.i1446 = select i1 %15, ptr %4, ptr %.sroa.2.sroa.0.0.copyload
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %24, ptr align 1 %common.ret.op.i1446, i64 %common.ret.op.i.i, i1 false)
  br label %13
}

; Function Attrs: nounwind uwtable
define private fastcc void @str.RocStr.reallocate(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 8 %1, i64 %2) unnamed_addr #4 {
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %str.RocStr, align 8
  %7 = alloca %str.RocStr, align 8
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %8 = icmp slt i64 %.sroa.2.0.copyload, 0
  br i1 %8, label %.critedge, label %str.RocStr.isSeamlessSlice.exit

str.RocStr.isSeamlessSlice.exit:                  ; preds = %3
  %const = bitcast i64 -9223372036854775808 to i64
  %9 = icmp slt i64 %.sroa.1.0.copyload, 0
  %const_mat = add i64 %const, -1
  %10 = and i64 %.sroa.1.0.copyload, %const_mat
  %spec.select.i = select i1 %9, i64 %10, i64 %.sroa.2.0.copyload
  br i1 %9, label %.critedge, label %str.RocStr.getCapacity.exit.i.i

str.RocStr.getCapacity.exit.i.i:                  ; preds = %str.RocStr.isSeamlessSlice.exit
  %.sroa.017.0.copyload = load ptr, ptr %1, align 8
  %.not29 = icmp eq i64 %.sroa.2.0.copyload, 0
  br i1 %.not29, label %14, label %str.RocStr.isUnique.exit

str.RocStr.isUnique.exit:                         ; preds = %str.RocStr.getCapacity.exit.i.i
  %11 = getelementptr inbounds i64, ptr %.sroa.017.0.copyload, i64 -1
  %12 = load i64, ptr %11, align 8
  %13 = icmp eq i64 %12, %const
  br i1 %13, label %.thread, label %.critedge

common.ret:                                       ; preds = %utils.unsafeReallocate.exit, %str.RocStr.setLen.exit, %16, %.critedge
  ret void

.critedge:                                        ; preds = %str.RocStr.isUnique.exit, %str.RocStr.isSeamlessSlice.exit, %3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  call fastcc void @str.RocStr.reallocateFresh(ptr noalias %6, ptr nonnull readonly align 8 %7, i64 %2)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false)
  br label %common.ret

14:                                               ; preds = %str.RocStr.getCapacity.exit.i.i
  %.not = icmp eq ptr %.sroa.017.0.copyload, null
  br i1 %.not, label %16, label %.thread

.thread:                                          ; preds = %14, %str.RocStr.isUnique.exit
  %15 = icmp ugt i64 %spec.select.i, %2
  br i1 %15, label %str.RocStr.setLen.exit, label %19

16:                                               ; preds = %14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  call fastcc void @str.RocStr.reallocateFresh(ptr noalias %4, ptr nonnull readonly align 8 %5, i64 %2)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false)
  br label %common.ret

str.RocStr.setLen.exit:                           ; preds = %.thread
  %17 = and i64 %.sroa.1.0.copyload, %const
  %18 = or i64 %17, %2
  store ptr %.sroa.017.0.copyload, ptr %0, align 8
  %.sroa.221.0..sroa_idx22 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %18, ptr %.sroa.221.0..sroa_idx22, align 8
  %.sroa.4.0..sroa_idx24 = getelementptr inbounds i8, ptr %0, i64 16
  store i64 %.sroa.2.0.copyload, ptr %.sroa.4.0..sroa_idx24, align 8
  br label %common.ret

19:                                               ; preds = %.thread
  %20 = icmp eq i64 %spec.select.i, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %39, %37, %33, %19
  %.0 = phi i64 [ %34, %33 ], [ %38, %37 ], [ %42, %39 ], [ 64, %19 ]
  %22 = tail call i64 @llvm.umax.i64(i64 %.0, i64 %2)
  %.not.i = icmp ult i64 %spec.select.i, %22
  br i1 %.not.i, label %23, label %utils.unsafeReallocate.exit

23:                                               ; preds = %21
  %24 = add nuw i64 %22, 8
  %25 = add nuw i64 %spec.select.i, 8
  %26 = getelementptr inbounds i8, ptr %.sroa.017.0.copyload, i64 -8
  %27 = tail call ptr @roc_realloc(ptr nonnull align 1 %26, i64 %24, i64 %25, i32 8)
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  br label %utils.unsafeReallocate.exit

utils.unsafeReallocate.exit:                      ; preds = %23, %21
  %common.ret.op.i11 = phi ptr [ %28, %23 ], [ %.sroa.017.0.copyload, %21 ]
  store ptr %common.ret.op.i11, ptr %0, align 8
  %29 = getelementptr inbounds %str.RocStr, ptr %0, i64 0, i32 1
  store i64 %2, ptr %29, align 8
  %30 = getelementptr inbounds %str.RocStr, ptr %0, i64 0, i32 2
  store i64 %22, ptr %30, align 8
  br label %common.ret

31:                                               ; preds = %19
  %32 = icmp ult i64 %spec.select.i, 4096
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = shl nuw nsw i64 %spec.select.i, 1
  br label %21

35:                                               ; preds = %31
  %36 = icmp ugt i64 %spec.select.i, 131072
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = shl nuw i64 %spec.select.i, 1
  br label %21

39:                                               ; preds = %35
  %40 = mul nuw nsw i64 %spec.select.i, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = lshr i64 %41, 1
  br label %21
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal zeroext i1 @roc_builtins.str.equal(ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %0, ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %1) local_unnamed_addr #7 {
  %3 = alloca %str.RocStr, align 8
  %4 = alloca %str.RocStr, align 8
  %.sroa.0.0.copyload = load ptr, ptr %0, align 8
  %.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  %.sroa.3.0.copyload = load i64, ptr %.sroa.3.0..sroa_idx, align 8
  %.sroa.5.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  %.sroa.5.0.copyload = load i64, ptr %.sroa.5.0..sroa_idx, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4)
  %5 = load ptr, ptr %1, align 8
  %6 = icmp eq ptr %.sroa.0.0.copyload, %5
  br i1 %6, label %7, label %..critedge_crit_edge.i

..critedge_crit_edge.i:                           ; preds = %2
  %.sroa.117.0..sroa_idx.phi.trans.insert.i = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.117.0.copyload.pre.i = load i64, ptr %.sroa.117.0..sroa_idx.phi.trans.insert.i, align 8
  br label %.critedge.i

7:                                                ; preds = %2
  %8 = getelementptr inbounds %str.RocStr, ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8
  %10 = icmp eq i64 %.sroa.3.0.copyload, %9
  br i1 %10, label %11, label %.critedge.i

11:                                               ; preds = %7
  %12 = getelementptr inbounds %str.RocStr, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %12, align 8
  %14 = icmp eq i64 %.sroa.5.0.copyload, %13
  br i1 %14, label %str.RocStr.eq.exit, label %.critedge.i

.critedge.i:                                      ; preds = %11, %7, %..critedge_crit_edge.i
  %.sroa.117.0.copyload.i = phi i64 [ %.sroa.117.0.copyload.pre.i, %..critedge_crit_edge.i ], [ %9, %7 ], [ %.sroa.3.0.copyload, %11 ]
  %const = bitcast i64 9223372036854775807 to i64
  %15 = icmp slt i64 %.sroa.5.0.copyload, 0
  %16 = lshr i64 %.sroa.5.0.copyload, 56
  %17 = xor i64 %16, 128
  %18 = and i64 %.sroa.3.0.copyload, %const
  %common.ret.op.i.i = select i1 %15, i64 %17, i64 %18
  %.sroa.218.0..sroa_idx.i = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.218.0.copyload.i = load i64, ptr %.sroa.218.0..sroa_idx.i, align 8
  %19 = icmp slt i64 %.sroa.218.0.copyload.i, 0
  %20 = lshr i64 %.sroa.218.0.copyload.i, 56
  %21 = xor i64 %20, 128
  %22 = and i64 %.sroa.117.0.copyload.i, %const
  %common.ret.op.i10.i = select i1 %19, i64 %21, i64 %22
  %.not.i = icmp eq i64 %common.ret.op.i.i, %common.ret.op.i10.i
  br i1 %.not.i, label %str.RocStr.asU8ptr.exit.i, label %str.RocStr.eq.exit

str.RocStr.asU8ptr.exit.i:                        ; preds = %.critedge.i
  %23 = icmp slt i64 %.sroa.5.0.copyload, 0
  store ptr %.sroa.0.0.copyload, ptr %4, align 8
  %.sroa.3.0..sroa_idx2 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %.sroa.3.0.copyload, ptr %.sroa.3.0..sroa_idx2, align 8
  %.sroa.5.0..sroa_idx4 = getelementptr inbounds i8, ptr %4, i64 16
  store i64 %.sroa.5.0.copyload, ptr %.sroa.5.0..sroa_idx4, align 8
  %spec.select.i = select i1 %23, ptr %4, ptr %.sroa.0.0.copyload
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %24 = getelementptr inbounds i8, ptr %3, i64 16
  %.val.i13.i = load i64, ptr %24, align 8
  %25 = icmp slt i64 %.val.i13.i, 0
  %26 = load ptr, ptr %3, align 8
  %common.ret.op.i14.i = select i1 %25, ptr %3, ptr %26
  %.not22.i = icmp eq i64 %common.ret.op.i.i, 0
  br i1 %.not22.i, label %str.RocStr.eq.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %str.RocStr.asU8ptr.exit.i
  %27 = add nsw i64 %common.ret.op.i.i, -1
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %.019.i = phi i64 [ %32, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  %28 = getelementptr inbounds i8, ptr %spec.select.i, i64 %.019.i
  %29 = load i8, ptr %28, align 1
  %30 = getelementptr inbounds i8, ptr %common.ret.op.i14.i, i64 %.019.i
  %31 = load i8, ptr %30, align 1
  %.not7.i = icmp eq i8 %29, %31
  %32 = add nuw nsw i64 %.019.i, 1
  %exitcond.not.i = icmp ne i64 %27, %.019.i
  %or.cond.not = select i1 %.not7.i, i1 %exitcond.not.i, i1 false
  br i1 %or.cond.not, label %.lr.ph.i, label %str.RocStr.eq.exit

str.RocStr.eq.exit:                               ; preds = %.lr.ph.i, %str.RocStr.asU8ptr.exit.i, %.critedge.i, %11
  %common.ret.op.i = phi i1 [ true, %11 ], [ false, %.critedge.i ], [ true, %str.RocStr.asU8ptr.exit.i ], [ %.not7.i, %.lr.ph.i ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4)
  ret i1 %common.ret.op.i
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.substring_unsafe(ptr noalias nocapture nonnull writeonly sret(%str.RocStr) %0, ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %1, i64 %2, i64 %3) local_unnamed_addr #4 {
  call fastcc void @str.substringUnsafe(ptr noalias %0, ptr nonnull readonly align 8 %1, i64 %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @str.substringUnsafe(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 8 %1, i64 %2, i64 %3) unnamed_addr #4 {
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %str.RocStr, align 8
  %7 = alloca %str.RocStr, align 8
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %8 = icmp slt i64 %.sroa.1.0.copyload, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %str.RocStr.setLen.exit, label %str.RocStr.asSlice.exit

11:                                               ; preds = %4
  %12 = load ptr, ptr %1, align 8
  %.not = icmp eq ptr %12, null
  br i1 %.not, label %29, label %27

common.ret:                                       ; preds = %.critedge, %str.RocStr.setLen.exit7, %str.RocStr.fromSlice.exit, %str.RocStr.setLen.exit
  ret void

str.RocStr.setLen.exit:                           ; preds = %9
  %const32 = bitcast i64 -9223372036854775808 to i64
  %.sroa.08.0.copyload = load ptr, ptr %1, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %13 = shl i64 %3, 56
  %.sroa.4.23.insert.mask = and i64 %.sroa.1.0.copyload, 72057594037927935
  %.sroa.4.23.insert.shift = or i64 %13, %.sroa.4.23.insert.mask
  %.sroa.4.23.insert.insert = or i64 %.sroa.4.23.insert.shift, %const32
  store ptr %.sroa.08.0.copyload, ptr %0, align 8
  %.sroa.2.0..sroa_idx10 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %.sroa.2.0.copyload, ptr %.sroa.2.0..sroa_idx10, align 8
  %.sroa.4.0..sroa_idx12 = getelementptr inbounds i8, ptr %0, i64 16
  store i64 %.sroa.4.23.insert.insert, ptr %.sroa.4.0..sroa_idx12, align 8
  br label %common.ret

str.RocStr.asSlice.exit:                          ; preds = %9
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %14 = getelementptr inbounds i8, ptr %7, i64 16
  %.val.i.i = load i64, ptr %14, align 8
  %15 = icmp slt i64 %.val.i.i, 0
  %16 = load ptr, ptr %7, align 8
  %common.ret.op.i5.i = select i1 %15, ptr %7, ptr %16
  %17 = getelementptr inbounds i8, ptr %common.ret.op.i5.i, i64 %2
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5), !noalias !325
  %18 = icmp ugt i64 %3, 23
  br i1 %18, label %str.RocStr.allocate.exit.i.i, label %str.RocStr.allocate.exit.thread.i.i

str.RocStr.allocate.exit.thread.i.i:              ; preds = %str.RocStr.asSlice.exit
  %const30 = bitcast i64 -9223372036854775808 to i64
  %19 = shl nuw nsw i64 %3, 56
  %.sroa.3.23.insert.shift.i.i = or i64 %19, %const30
  br label %str.RocStr.fromSlice.exit

str.RocStr.allocate.exit.i.i:                     ; preds = %str.RocStr.asSlice.exit
  %const31 = bitcast i64 -9223372036854775808 to i64
  %20 = tail call i64 @llvm.umax.i64(i64 %3, i64 64)
  %21 = add nuw i64 %20, 8
  %22 = tail call ptr @roc_alloc(i64 %21, i32 8), !noalias !328
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store i64 %const31, ptr %22, align 8, !noalias !328
  %24 = icmp slt i64 %20, 0
  %spec.select.i.i = select i1 %24, ptr %5, ptr %23
  br label %str.RocStr.fromSlice.exit

str.RocStr.fromSlice.exit:                        ; preds = %str.RocStr.allocate.exit.i.i, %str.RocStr.allocate.exit.thread.i.i
  %.sink7.i.i = phi ptr [ %23, %str.RocStr.allocate.exit.i.i ], [ null, %str.RocStr.allocate.exit.thread.i.i ]
  %.sink.i.i = phi i64 [ %3, %str.RocStr.allocate.exit.i.i ], [ 0, %str.RocStr.allocate.exit.thread.i.i ]
  %.sroa.3.23.insert.shift.sink.i.i = phi i64 [ %20, %str.RocStr.allocate.exit.i.i ], [ %.sroa.3.23.insert.shift.i.i, %str.RocStr.allocate.exit.thread.i.i ]
  %common.ret.op.i.i.i = phi ptr [ %spec.select.i.i, %str.RocStr.allocate.exit.i.i ], [ %5, %str.RocStr.allocate.exit.thread.i.i ]
  store ptr %.sink7.i.i, ptr %5, align 8, !noalias !335
  %25 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %.sink.i.i, ptr %25, align 8, !noalias !335
  %26 = getelementptr inbounds i8, ptr %5, i64 16
  store i64 %.sroa.3.23.insert.shift.sink.i.i, ptr %26, align 8, !noalias !335
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %common.ret.op.i.i.i, ptr nonnull align 1 %17, i64 %3, i1 false), !noalias !335
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5), !noalias !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false)
  br label %common.ret

27:                                               ; preds = %11
  %const = bitcast i64 -9223372036854775808 to i64
  %28 = icmp eq i64 %2, 0
  %.sroa.215.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.215.0.copyload = load i64, ptr %.sroa.215.0..sroa_idx, align 8
  br i1 %28, label %str.RocStr.getCapacity.exit.i.i, label %.critedge

29:                                               ; preds = %11
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) @5, i64 24, i1 false)
  ret void

str.RocStr.getCapacity.exit.i.i:                  ; preds = %27
  %30 = icmp slt i64 %.sroa.215.0.copyload, 0
  %const_mat = add i64 %const, -1
  %31 = and i64 %.sroa.215.0.copyload, %const_mat
  %spec.select.i.i.i = select i1 %30, i64 %31, i64 %.sroa.1.0.copyload
  %32 = icmp ne i64 %spec.select.i.i.i, 0
  %or.cond.i.i = or i1 %30, %32
  br i1 %or.cond.i.i, label %str.RocStr.isUnique.exit, label %str.RocStr.setLen.exit7

str.RocStr.isUnique.exit:                         ; preds = %str.RocStr.getCapacity.exit.i.i
  %33 = getelementptr inbounds i64, ptr %12, i64 -1
  %34 = load i64, ptr %33, align 8
  %35 = icmp eq i64 %34, %const
  br i1 %35, label %str.RocStr.setLen.exit7, label %.critedge

str.RocStr.setLen.exit7:                          ; preds = %str.RocStr.isUnique.exit, %str.RocStr.getCapacity.exit.i.i
  %36 = and i64 %.sroa.215.0.copyload, %const
  %37 = or i64 %36, %3
  store ptr %12, ptr %0, align 8
  %.sroa.218.0..sroa_idx19 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %37, ptr %.sroa.218.0..sroa_idx19, align 8
  %.sroa.421.0..sroa_idx22 = getelementptr inbounds i8, ptr %0, i64 16
  store i64 %.sroa.1.0.copyload, ptr %.sroa.421.0..sroa_idx22, align 8
  br label %common.ret

.critedge:                                        ; preds = %str.RocStr.isUnique.exit, %27
  %38 = ptrtoint ptr %12 to i64
  %39 = lshr i64 %38, 1
  %isneg = icmp slt i64 %.sroa.215.0.copyload, 0
  %40 = select i1 %isneg, i64 %.sroa.1.0.copyload, i64 %39
  %41 = getelementptr inbounds i8, ptr %12, i64 %2
  store ptr %41, ptr %0, align 8
  %42 = getelementptr inbounds %str.RocStr, ptr %0, i64 0, i32 1
  %43 = or i64 %3, %const
  store i64 %43, ptr %42, align 8
  %44 = getelementptr inbounds %str.RocStr, ptr %0, i64 0, i32 2
  store i64 %40, ptr %44, align 8
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal zeroext i8 @roc_builtins.str.get_unsafe(ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %0, i64 %1) local_unnamed_addr #8 {
  %3 = alloca [24 x i8], align 8
  %.sroa.0.0.copyload = load ptr, ptr %0, align 8
  %.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  %.sroa.3.0.copyload = load i64, ptr %.sroa.3.0..sroa_idx, align 8
  %.sroa.34.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  %.sroa.34.0.copyload = load i64, ptr %.sroa.34.0..sroa_idx, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  %4 = icmp slt i64 %.sroa.34.0.copyload, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  store ptr %.sroa.0.0.copyload, ptr %3, align 8
  %.sroa.3.0..sroa_idx2 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %.sroa.3.0.copyload, ptr %.sroa.3.0..sroa_idx2, align 8
  %.sroa.34.0..sroa_idx5 = getelementptr inbounds i8, ptr %3, i64 16
  store i64 %.sroa.34.0.copyload, ptr %.sroa.34.0..sroa_idx5, align 8
  %6 = getelementptr inbounds [24 x i8], ptr %3, i64 0, i64 %1
  br label %str.RocStr.getUnchecked.exit

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload, i64 %1
  br label %str.RocStr.getUnchecked.exit

str.RocStr.getUnchecked.exit:                     ; preds = %7, %5
  %common.ret.op.in.i = phi ptr [ %6, %5 ], [ %8, %7 ]
  %common.ret.op.i = load i8, ptr %common.ret.op.in.i, align 1
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  ret i8 %common.ret.op.i
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.to_utf8(ptr noalias nocapture nonnull writeonly sret(%list.RocList) %0, ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %1) local_unnamed_addr #4 {
  %3 = alloca %list.RocList, align 8
  %4 = alloca %list.RocList, align 8
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %list.RocList, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %7 = icmp slt i64 %.sroa.2.0.copyload, 0
  br i1 %7, label %str.RocStr.len.exit, label %str.RocStr.len.exit.thread

str.RocStr.len.exit:                              ; preds = %2
  %8 = lshr i64 %.sroa.2.0.copyload, 56
  %9 = xor i64 %8, 128
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %str.RocStr.asU8ptr.exit

str.RocStr.len.exit.thread:                       ; preds = %2
  %const = bitcast i64 -9223372036854775808 to i64
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %const_mat = add i64 %const, -1
  %11 = and i64 %.sroa.1.0.copyload, %const_mat
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %15, label %24

13:                                               ; preds = %24, %str.RocStr.asU8ptr.exit, %15
  %14 = phi ptr [ %6, %15 ], [ %4, %str.RocStr.asU8ptr.exit ], [ %3, %24 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %14, i64 24, i1 false)
  ret void

15:                                               ; preds = %str.RocStr.len.exit.thread, %str.RocStr.len.exit
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false), !alias.scope !336
  br label %13

str.RocStr.asU8ptr.exit:                          ; preds = %str.RocStr.len.exit
  %const9 = bitcast i64 -9223372036854775808 to i64
  %16 = add nuw nsw i64 %9, 8
  %17 = tail call ptr @roc_alloc(i64 %16, i32 8)
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  store i64 %const9, ptr %17, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %19 = getelementptr inbounds i8, ptr %5, i64 16
  %.val.i = load i64, ptr %19, align 8
  %20 = icmp slt i64 %.val.i, 0
  %21 = load ptr, ptr %5, align 8
  %spec.select = select i1 %20, ptr %5, ptr %21
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %18, ptr align 1 %spec.select, i64 %9, i1 false)
  %22 = getelementptr inbounds %list.RocList, ptr %4, i64 0, i32 1
  store i64 %9, ptr %22, align 8
  store ptr %18, ptr %4, align 8
  %23 = getelementptr inbounds %list.RocList, ptr %4, i64 0, i32 2
  store i64 %9, ptr %23, align 8
  br label %13

24:                                               ; preds = %str.RocStr.len.exit.thread
  %25 = and i64 %.sroa.1.0.copyload, %const
  %26 = getelementptr inbounds %list.RocList, ptr %3, i64 0, i32 1
  store i64 %11, ptr %26, align 8
  %27 = load ptr, ptr %1, align 8
  store ptr %27, ptr %3, align 8
  %28 = getelementptr inbounds %list.RocList, ptr %3, i64 0, i32 2
  %29 = or i64 %.sroa.2.0.copyload, %25
  store i64 %29, ptr %28, align 8
  br label %13
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.from_utf8(ptr noalias nocapture nonnull writeonly sret(%str.FromUtf8Result) %0, ptr nocapture nonnull readonly byval(%list.RocList) align 8 %1, i8 zeroext %2) local_unnamed_addr #4 {
  %4 = alloca { i21, i16, [2 x i8] }, align 4
  %5 = alloca { i21, i16, [2 x i8] }, align 4
  %6 = alloca { i21, i16, [2 x i8] }, align 4
  %7 = alloca [4 x i8], align 4
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !noalias !339
  %8 = icmp eq i64 %.sroa.1.0.copyload.i, 0
  %.sroa.0.0.copyload.i = load ptr, ptr %1, align 8, !noalias !339
  br i1 %8, label %9, label %23

9:                                                ; preds = %3
  %const84 = bitcast i64 -9223372036854775808 to i64
  %.sroa.218.0..sroa_idx.i = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.218.0.copyload.i = load i64, ptr %.sroa.218.0..sroa_idx.i, align 8, !noalias !339
  %10 = ptrtoint ptr %.sroa.0.0.copyload.i to i64
  %11 = shl i64 %.sroa.218.0.copyload.i, 1
  %isneg.i.i.i = icmp slt i64 %.sroa.218.0.copyload.i, 0
  %12 = select i1 %isneg.i.i.i, i64 %11, i64 %10
  %13 = icmp ne i64 %.sroa.218.0.copyload.i, 0
  %14 = icmp ne i64 %12, 0
  %or.cond.i.i.i = select i1 %13, i1 %14, i1 false
  br i1 %or.cond.i.i.i, label %15, label %str.fromUtf8.exit

15:                                               ; preds = %9
  %16 = inttoptr i64 %12 to ptr
  %17 = getelementptr inbounds i64, ptr %16, i64 -1
  %18 = load i64, ptr %17, align 8, !noalias !339
  %.not.i.i.i = icmp eq i64 %18, 0
  br i1 %.not.i.i.i, label %str.fromUtf8.exit, label %19

19:                                               ; preds = %15
  %20 = add i64 %18, -1
  store i64 %20, ptr %17, align 8, !noalias !339
  %21 = icmp eq i64 %18, %const84
  br i1 %21, label %22, label %str.fromUtf8.exit

22:                                               ; preds = %19
  tail call void @roc_dealloc(ptr nonnull align 1 %17, i32 8), !noalias !339
  br label %str.fromUtf8.exit

23:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4), !noalias !339
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6), !noalias !339
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7), !noalias !339
  %24 = icmp ugt i64 %.sroa.1.0.copyload.i, 8
  br i1 %24, label %.lr.ph93.i.i, label %._crit_edge.i.i

.lr.ph93.i.i:                                     ; preds = %23
  %25 = load i32, ptr @0, align 4, !noalias !339
  %26 = load i32, ptr @4, align 4, !noalias !339
  %27 = load i32, ptr @3, align 4, !noalias !339
  %28 = load i32, ptr @2, align 4, !noalias !339
  br label %29

29:                                               ; preds = %.loopexit.i.i, %.lr.ph93.i.i
  %30 = phi i64 [ 8, %.lr.ph93.i.i ], [ %37, %.loopexit.i.i ]
  %.092.i.i = phi i64 [ 0, %.lr.ph93.i.i ], [ %.1.i.i, %.loopexit.i.i ]
  %31 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 %.092.i.i
  %.0.copyload.i.i = load i64, ptr %31, align 1, !noalias !339
  %32 = and i64 %.0.copyload.i.i, -9187201950435737472
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %.loopexit.i.i, label %.preheader84.i.i.preheader

.preheader84.i.i.preheader:                       ; preds = %29
  %34 = add i64 %.092.i.i, -1
  br label %.preheader84.i.i

._crit_edge.i.i:                                  ; preds = %.loopexit.i.i, %23
  %.0.lcssa.i.i = phi i64 [ 0, %23 ], [ %.1.i.i, %.loopexit.i.i ]
  %35 = icmp eq i64 %.0.lcssa.i.i, %.sroa.1.0.copyload.i
  br i1 %35, label %.loopexit.i, label %.preheader.i.i.preheader

.preheader.i.i.preheader:                         ; preds = %._crit_edge.i.i
  %uglygep = getelementptr i8, ptr %.sroa.0.0.copyload.i, i64 %.0.lcssa.i.i
  %36 = sub i64 %.sroa.1.0.copyload.i, %.0.lcssa.i.i
  br label %.preheader.i.i

.loopexit.i.i:                                    ; preds = %42, %.preheader82.i.i, %29
  %.1.i.i = phi i64 [ %30, %29 ], [ %43, %42 ], [ %lsr.iv.next78, %.preheader82.i.i ]
  %37 = add nuw i64 %.1.i.i, 8
  %38 = icmp ult i64 %37, %.sroa.1.0.copyload.i
  br i1 %38, label %29, label %._crit_edge.i.i

.preheader84.i.i:                                 ; preds = %.preheader84.i.i, %.preheader84.i.i.preheader
  %lsr.iv77 = phi i64 [ %34, %.preheader84.i.i.preheader ], [ %lsr.iv.next78, %.preheader84.i.i ]
  %uglygep80 = getelementptr i8, ptr %.sroa.0.0.copyload.i, i64 %lsr.iv77
  %uglygep81 = getelementptr i8, ptr %uglygep80, i64 1
  %39 = load i8, ptr %uglygep81, align 1, !noalias !339
  %40 = icmp sgt i8 %39, -1
  %lsr.iv.next78 = add i64 %lsr.iv77, 1
  br i1 %40, label %.preheader84.i.i, label %.preheader82.i.i

.preheader82.i.i:                                 ; preds = %.preheader84.i.i
  %41 = add i64 %lsr.iv.next78, 4
  %.not89.i.i = icmp ult i64 %41, %.sroa.1.0.copyload.i
  br i1 %.not89.i.i, label %.lr.ph.i.i.preheader, label %.loopexit.i.i

.lr.ph.i.i.preheader:                             ; preds = %.preheader82.i.i
  %uglygep79 = getelementptr i8, ptr %.sroa.0.0.copyload.i, i64 %lsr.iv.next78
  br label %.lr.ph.i.i

42:                                               ; preds = %63
  %43 = add nuw i64 %.391.i.i, %65
  %44 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 %43
  %45 = load i8, ptr %44, align 1, !noalias !339
  %46 = icmp slt i8 %45, 0
  %47 = add nuw i64 %43, 4
  %.not.i.i = icmp ult i64 %47, %.sroa.1.0.copyload.i
  %or.cond.i.i = select i1 %46, i1 %.not.i.i, i1 false
  br i1 %or.cond.i.i, label %.lr.ph.i.i, label %.loopexit.i.i

.lr.ph.i.i:                                       ; preds = %42, %.lr.ph.i.i.preheader
  %48 = phi ptr [ %44, %42 ], [ %uglygep79, %.lr.ph.i.i.preheader ]
  %.391.i.i = phi i64 [ %43, %42 ], [ %lsr.iv.next78, %.lr.ph.i.i.preheader ]
  %49 = load i32, ptr %48, align 1, !noalias !339
  store i32 %49, ptr %7, align 4, !noalias !339
  %50 = trunc i32 %49 to i8
  %51 = icmp sgt i8 %50, -1
  br i1 %51, label %unicode.utf8ByteSequenceLength.exit.i.i, label %52

52:                                               ; preds = %.lr.ph.i.i
  %53 = and i8 %50, -32
  %54 = icmp eq i8 %53, -64
  br i1 %54, label %unicode.utf8ByteSequenceLength.exit.i.i, label %55

55:                                               ; preds = %52
  %56 = and i8 %50, -16
  %57 = icmp eq i8 %56, -32
  br i1 %57, label %unicode.utf8ByteSequenceLength.exit.i.i, label %58

58:                                               ; preds = %55
  %59 = and i8 %50, -8
  %60 = icmp eq i8 %59, -16
  %spec.select.i.i.i = select i1 %60, i32 %25, i32 20
  br label %unicode.utf8ByteSequenceLength.exit.i.i

unicode.utf8ByteSequenceLength.exit.i.i:          ; preds = %58, %55, %52, %.lr.ph.i.i
  %.sink.i.i.i = phi i32 [ %spec.select.i.i.i, %58 ], [ %28, %.lr.ph.i.i ], [ %27, %52 ], [ %26, %55 ]
  %61 = and i32 %.sink.i.i.i, 65535
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %.loopexit26.i

63:                                               ; preds = %unicode.utf8ByteSequenceLength.exit.i.i
  %.sroa.2.0.extract.shift.i.i = lshr i32 %.sink.i.i.i, 16
  %64 = and i32 %.sroa.2.0.extract.shift.i.i, 7
  %65 = zext i32 %64 to i64
  call fastcc void @unicode.utf8Decode(ptr noalias %6, ptr nonnull readonly align 1 %7, i64 %65), !noalias !339
  %sunkaddr = getelementptr inbounds i8, ptr %6, i64 4
  %.val69.i.i = load i16, ptr %sunkaddr, align 4, !noalias !339
  %.not80.i.i = icmp eq i16 %.val69.i.i, 0
  br i1 %.not80.i.i, label %42, label %.loopexit26.i

.preheader.i.i:                                   ; preds = %68, %.preheader.i.i.preheader
  %lsr.iv76 = phi i64 [ %36, %.preheader.i.i.preheader ], [ %lsr.iv.next, %68 ]
  %lsr.iv = phi ptr [ %uglygep, %.preheader.i.i.preheader ], [ %uglygep74, %68 ]
  %66 = load i8, ptr %lsr.iv, align 1, !noalias !339
  %67 = icmp sgt i8 %66, -1
  br i1 %67, label %68, label %70

68:                                               ; preds = %.preheader.i.i
  %uglygep74 = getelementptr i8, ptr %lsr.iv, i64 1
  %lsr.iv.next = add i64 %lsr.iv76, -1
  %69 = icmp eq i64 %lsr.iv.next, 0
  br i1 %69, label %.loopexit.i, label %.preheader.i.i

70:                                               ; preds = %.preheader.i.i
  %71 = load i32, ptr @0, align 4, !noalias !339
  %72 = load i32, ptr @4, align 4, !noalias !339
  %73 = load i32, ptr @3, align 4, !noalias !339
  %74 = load i32, ptr @2, align 4, !noalias !339
  br label %75

75:                                               ; preds = %95, %70
  %.061.i.i = phi i64 [ 0, %70 ], [ %93, %95 ]
  %.not78.not.i.i = icmp ult i64 %.061.i.i, %lsr.iv76
  br i1 %.not78.not.i.i, label %76, label %.loopexit.i

76:                                               ; preds = %75
  %uglygep75 = getelementptr i8, ptr %lsr.iv, i64 %.061.i.i
  %77 = load i8, ptr %uglygep75, align 1, !noalias !339
  %78 = icmp sgt i8 %77, -1
  br i1 %78, label %unicode.utf8ByteSequenceLength.exit72.i.i, label %79

79:                                               ; preds = %76
  %80 = and i8 %77, -32
  %81 = icmp eq i8 %80, -64
  br i1 %81, label %unicode.utf8ByteSequenceLength.exit72.i.i, label %82

82:                                               ; preds = %79
  %83 = and i8 %77, -16
  %84 = icmp eq i8 %83, -32
  br i1 %84, label %unicode.utf8ByteSequenceLength.exit72.i.i, label %85

85:                                               ; preds = %82
  %86 = and i8 %77, -8
  %87 = icmp eq i8 %86, -16
  %spec.select.i71.i.i = select i1 %87, i32 %71, i32 20
  br label %unicode.utf8ByteSequenceLength.exit72.i.i

unicode.utf8ByteSequenceLength.exit72.i.i:        ; preds = %85, %82, %79, %76
  %.sink.i70.i.i = phi i32 [ %spec.select.i71.i.i, %85 ], [ %74, %76 ], [ %73, %79 ], [ %72, %82 ]
  %88 = and i32 %.sink.i70.i.i, 65535
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %.loopexit26.i

90:                                               ; preds = %unicode.utf8ByteSequenceLength.exit72.i.i
  %.sroa.2.0.extract.shift74.i.i = lshr i32 %.sink.i70.i.i, 16
  %91 = and i32 %.sroa.2.0.extract.shift74.i.i, 7
  %92 = zext i32 %91 to i64
  %93 = add nuw i64 %.061.i.i, %92
  %94 = icmp ugt i64 %93, %lsr.iv76
  br i1 %94, label %.loopexit26.i, label %95

95:                                               ; preds = %90
  call fastcc void @unicode.utf8Decode(ptr noalias %4, ptr nonnull readonly align 1 %uglygep75, i64 %92), !noalias !339
  %sunkaddr85 = getelementptr inbounds i8, ptr %4, i64 4
  %.val.i.i = load i16, ptr %sunkaddr85, align 4, !noalias !339
  %.not79.i.i = icmp eq i16 %.val.i.i, 0
  br i1 %.not79.i.i, label %75, label %.loopexit26.i

.loopexit.i:                                      ; preds = %75, %68, %._crit_edge.i.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4), !noalias !339
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6), !noalias !339
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7), !noalias !339
  %.sroa.1.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.1.0.copyload.i.i = load i64, ptr %.sroa.1.0..sroa_idx.i.i, align 8, !noalias !342
  %96 = icmp slt i64 %.sroa.1.0.copyload.i.i, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %.loopexit.i
  %const83 = bitcast i64 -9223372036854775808 to i64
  %98 = or i64 %.sroa.1.0.copyload.i, %const83
  %const_mat = add i64 %const83, -1
  %99 = and i64 %.sroa.1.0.copyload.i.i, %const_mat
  br label %str.fromUtf8.exit

100:                                              ; preds = %.loopexit.i
  %101 = icmp eq i8 %2, 1
  %.not.i7.i = icmp eq i64 %.sroa.1.0.copyload.i.i, 0
  %or.cond.i8.i = select i1 %101, i1 true, i1 %.not.i7.i
  br i1 %or.cond.i8.i, label %str.fromUtf8.exit, label %list.RocList.isUnique.exit.i.i

list.RocList.isUnique.exit.i.i:                   ; preds = %100
  %const82 = bitcast i64 -9223372036854775808 to i64
  %102 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -1
  %103 = load i64, ptr %102, align 8, !noalias !342
  %104 = icmp eq i64 %103, %const82
  br i1 %104, label %str.fromUtf8.exit, label %.critedge.i.i

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %105 = or i64 %.sroa.1.0.copyload.i, %const82
  %106 = ptrtoint ptr %.sroa.0.0.copyload.i to i64
  %107 = lshr i64 %106, 1
  br label %str.fromUtf8.exit

.loopexit26.i:                                    ; preds = %95, %90, %unicode.utf8ByteSequenceLength.exit72.i.i, %63, %unicode.utf8ByteSequenceLength.exit.i.i
  %108 = phi i32 [ %74, %unicode.utf8ByteSequenceLength.exit72.i.i ], [ %74, %90 ], [ %74, %95 ], [ %28, %unicode.utf8ByteSequenceLength.exit.i.i ], [ %28, %63 ]
  %109 = phi i32 [ %73, %unicode.utf8ByteSequenceLength.exit72.i.i ], [ %73, %90 ], [ %73, %95 ], [ %27, %unicode.utf8ByteSequenceLength.exit.i.i ], [ %27, %63 ]
  %110 = phi i32 [ %72, %unicode.utf8ByteSequenceLength.exit72.i.i ], [ %72, %90 ], [ %72, %95 ], [ %26, %unicode.utf8ByteSequenceLength.exit.i.i ], [ %26, %63 ]
  %111 = phi i32 [ %71, %unicode.utf8ByteSequenceLength.exit72.i.i ], [ %71, %90 ], [ %71, %95 ], [ %25, %unicode.utf8ByteSequenceLength.exit.i.i ], [ %25, %63 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4), !noalias !339
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6), !noalias !339
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7), !noalias !339
  br label %112

112:                                              ; preds = %str.numberOfNextCodepointBytes.exit.thread.i.i, %.loopexit26.i
  %.0.i.i = phi i64 [ 0, %.loopexit26.i ], [ %129, %str.numberOfNextCodepointBytes.exit.thread.i.i ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4), !noalias !345
  %113 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 %.0.i.i
  %114 = load i8, ptr %113, align 1, !noalias !348
  %115 = icmp sgt i8 %114, -1
  br i1 %115, label %unicode.utf8ByteSequenceLength.exit.i.i.i, label %116

116:                                              ; preds = %112
  %117 = and i8 %114, -32
  %118 = icmp eq i8 %117, -64
  br i1 %118, label %unicode.utf8ByteSequenceLength.exit.i.i.i, label %119

119:                                              ; preds = %116
  %120 = and i8 %114, -16
  %121 = icmp eq i8 %120, -32
  br i1 %121, label %unicode.utf8ByteSequenceLength.exit.i.i.i, label %122

122:                                              ; preds = %119
  %123 = and i8 %114, -8
  %124 = icmp eq i8 %123, -16
  %spec.select.i.i.i.i = select i1 %124, i32 %111, i32 20
  br label %unicode.utf8ByteSequenceLength.exit.i.i.i

unicode.utf8ByteSequenceLength.exit.i.i.i:        ; preds = %122, %119, %116, %112
  %.sink.i.i.i.i = phi i32 [ %spec.select.i.i.i.i, %122 ], [ %108, %112 ], [ %109, %116 ], [ %110, %119 ]
  %125 = and i32 %.sink.i.i.i.i, 65535
  %.not.i.i9.i = icmp eq i32 %125, 0
  br i1 %.not.i.i9.i, label %126, label %str.numberOfNextCodepointBytes.exit.split.loop.exit18.i.i

126:                                              ; preds = %unicode.utf8ByteSequenceLength.exit.i.i.i
  %.sroa.2.0.extract.shift.i.i.i = lshr i32 %.sink.i.i.i.i, 16
  %127 = and i32 %.sroa.2.0.extract.shift.i.i.i, 7
  %128 = zext i32 %127 to i64
  %129 = add nuw i64 %.0.i.i, %128
  %130 = icmp ugt i64 %129, %.sroa.1.0.copyload.i
  br i1 %130, label %str.numberOfNextCodepointBytes.exit.thread13.i.i, label %131

str.numberOfNextCodepointBytes.exit.thread13.i.i: ; preds = %126
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4), !noalias !345
  br label %str.errorToProblem.exit.i

131:                                              ; preds = %126
  call fastcc void @unicode.utf8Decode(ptr noalias %4, ptr nonnull readonly align 1 %113, i64 %128), !noalias !348
  %sunkaddr86 = getelementptr inbounds i8, ptr %4, i64 4
  %132 = load i16, ptr %sunkaddr86, align 4, !noalias !348
  %.not11.i.i.i = icmp eq i16 %132, 0
  br i1 %.not11.i.i.i, label %str.numberOfNextCodepointBytes.exit.thread.i.i, label %str.numberOfNextCodepointBytes.exit.i.i

str.numberOfNextCodepointBytes.exit.thread.i.i:   ; preds = %131
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4), !noalias !345
  br label %112

str.numberOfNextCodepointBytes.exit.split.loop.exit18.i.i: ; preds = %unicode.utf8ByteSequenceLength.exit.i.i.i
  %.sroa.0.0.extract.trunc.i.le.i.i = trunc i32 %.sink.i.i.i.i to i16
  br label %str.numberOfNextCodepointBytes.exit.i.i

str.numberOfNextCodepointBytes.exit.i.i:          ; preds = %str.numberOfNextCodepointBytes.exit.split.loop.exit18.i.i, %131
  %.sroa.3.0.i.i = phi i16 [ %.sroa.0.0.extract.trunc.i.le.i.i, %str.numberOfNextCodepointBytes.exit.split.loop.exit18.i.i ], [ %132, %131 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4), !noalias !345
  %switch.tableidx = add i16 %.sroa.3.0.i.i, -20
  %switch.cast = zext i16 %switch.tableidx to i64
  %switch.shiftamt = shl nuw nsw i64 %switch.cast, 3
  %switch.downshift = lshr i64 360287974551846915, %switch.shiftamt
  %switch.masked = trunc i64 %switch.downshift to i8
  br label %str.errorToProblem.exit.i

str.errorToProblem.exit.i:                        ; preds = %str.numberOfNextCodepointBytes.exit.i.i, %str.numberOfNextCodepointBytes.exit.thread13.i.i
  %.sink.i.i = phi i8 [ 5, %str.numberOfNextCodepointBytes.exit.thread13.i.i ], [ %switch.masked, %str.numberOfNextCodepointBytes.exit.i.i ]
  %const = bitcast i64 -9223372036854775808 to i64
  %.sroa.224.0..sroa_idx.i = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.224.0.copyload.i = load i64, ptr %.sroa.224.0..sroa_idx.i, align 8, !noalias !339
  %133 = ptrtoint ptr %.sroa.0.0.copyload.i to i64
  %134 = shl i64 %.sroa.224.0.copyload.i, 1
  %isneg.i.i13.i = icmp slt i64 %.sroa.224.0.copyload.i, 0
  %135 = select i1 %isneg.i.i13.i, i64 %134, i64 %133
  %136 = icmp ne i64 %.sroa.224.0.copyload.i, 0
  %137 = icmp ne i64 %135, 0
  %or.cond.i.i14.i = select i1 %136, i1 %137, i1 false
  br i1 %or.cond.i.i14.i, label %138, label %str.fromUtf8.exit

138:                                              ; preds = %str.errorToProblem.exit.i
  %139 = inttoptr i64 %135 to ptr
  %140 = getelementptr inbounds i64, ptr %139, i64 -1
  %141 = load i64, ptr %140, align 8, !noalias !339
  %.not.i.i16.i = icmp eq i64 %141, 0
  br i1 %.not.i.i16.i, label %str.fromUtf8.exit, label %142

142:                                              ; preds = %138
  %143 = add i64 %141, -1
  store i64 %143, ptr %140, align 8, !noalias !339
  %144 = icmp eq i64 %141, %const
  br i1 %144, label %145, label %str.fromUtf8.exit

145:                                              ; preds = %142
  tail call void @roc_dealloc(ptr nonnull align 1 %140, i32 8), !noalias !339
  br label %str.fromUtf8.exit

str.fromUtf8.exit:                                ; preds = %145, %142, %138, %str.errorToProblem.exit.i, %.critedge.i.i, %list.RocList.isUnique.exit.i.i, %100, %97, %22, %19, %15, %9
  %.sroa.6.0 = phi i64 [ %const84, %22 ], [ %const84, %19 ], [ %const84, %15 ], [ %const84, %9 ], [ %99, %97 ], [ %107, %.critedge.i.i ], [ %.sroa.1.0.copyload.i.i, %list.RocList.isUnique.exit.i.i ], [ %.sroa.1.0.copyload.i.i, %100 ], [ %const, %145 ], [ %const, %142 ], [ %const, %138 ], [ %const, %str.errorToProblem.exit.i ]
  %.sroa.5.0 = phi i64 [ 0, %22 ], [ 0, %19 ], [ 0, %15 ], [ 0, %9 ], [ %98, %97 ], [ %105, %.critedge.i.i ], [ %.sroa.1.0.copyload.i, %list.RocList.isUnique.exit.i.i ], [ %.sroa.1.0.copyload.i, %100 ], [ 0, %145 ], [ 0, %142 ], [ 0, %138 ], [ 0, %str.errorToProblem.exit.i ]
  %.sroa.2.0 = phi ptr [ null, %22 ], [ null, %19 ], [ null, %15 ], [ null, %9 ], [ %.sroa.0.0.copyload.i, %97 ], [ %.sroa.0.0.copyload.i, %.critedge.i.i ], [ %.sroa.0.0.copyload.i, %list.RocList.isUnique.exit.i.i ], [ %.sroa.0.0.copyload.i, %100 ], [ null, %145 ], [ null, %142 ], [ null, %138 ], [ null, %str.errorToProblem.exit.i ]
  %.sroa.7.0 = phi i1 [ true, %22 ], [ true, %19 ], [ true, %15 ], [ true, %9 ], [ true, %97 ], [ true, %.critedge.i.i ], [ true, %list.RocList.isUnique.exit.i.i ], [ true, %100 ], [ false, %145 ], [ false, %142 ], [ false, %138 ], [ false, %str.errorToProblem.exit.i ]
  %.0.i56.sink.i = phi i64 [ 0, %22 ], [ 0, %19 ], [ 0, %15 ], [ 0, %9 ], [ 0, %97 ], [ 0, %.critedge.i.i ], [ 0, %list.RocList.isUnique.exit.i.i ], [ 0, %100 ], [ %.0.i.i, %145 ], [ %.0.i.i, %142 ], [ %.0.i.i, %138 ], [ %.0.i.i, %str.errorToProblem.exit.i ]
  %.sink.i.sink.i = phi i8 [ 3, %22 ], [ 3, %19 ], [ 3, %15 ], [ 3, %9 ], [ 3, %97 ], [ 3, %.critedge.i.i ], [ 3, %list.RocList.isUnique.exit.i.i ], [ 3, %100 ], [ %.sink.i.i, %145 ], [ %.sink.i.i, %142 ], [ %.sink.i.i, %138 ], [ %.sink.i.i, %str.errorToProblem.exit.i ]
  store i64 %.0.i56.sink.i, ptr %0, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  store ptr %.sroa.2.0, ptr %.sroa.2.0..sroa_idx, align 8
  %.sroa.5.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  store i64 %.sroa.5.0, ptr %.sroa.5.0..sroa_idx, align 8
  %.sroa.6.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 24
  store i64 %.sroa.6.0, ptr %.sroa.6.0..sroa_idx, align 8
  %.sroa.7.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 32
  store i1 %.sroa.7.0, ptr %.sroa.7.0..sroa_idx, align 8
  %.sroa.10.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 33
  store i8 %.sink.i.sink.i, ptr %.sroa.10.0..sroa_idx, align 1
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal ptr @roc_builtins.str.allocation_ptr(ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %0) local_unnamed_addr #6 {
  %.sroa.0.0.copyload = load ptr, ptr %0, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  %.sroa.3.0.copyload = load i64, ptr %.sroa.3.0..sroa_idx, align 8
  %2 = ptrtoint ptr %.sroa.0.0.copyload to i64
  %3 = shl i64 %.sroa.3.0.copyload, 1
  %isneg.i = icmp slt i64 %.sroa.2.0.copyload, 0
  %4 = select i1 %isneg.i, i64 %3, i64 %2
  %5 = inttoptr i64 %4 to ptr
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.from_int.i32(ptr noalias nocapture nonnull writeonly sret(%str.RocStr) %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca [33 x i8], align 1
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))", align 8
  %6 = alloca %"io.fixed_buffer_stream.FixedBufferStream([]u8)", align 8
  %7 = alloca [11 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6)
  store ptr %7, ptr %6, align 8, !noalias !351
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %6, i64 8
  store i64 11, ptr %.sroa.2.0..sroa_idx.i, align 8, !noalias !351
  %.sroa.3.0..sroa_idx1.i = getelementptr inbounds i8, ptr %6, i64 16
  store i64 0, ptr %.sroa.3.0..sroa_idx1.i, align 8, !noalias !351
  store ptr %6, ptr %5, align 8, !alias.scope !354, !noalias !351
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %3), !noalias !351
  %common.ret.op.i.i.i.i.i.i.i = call i32 @llvm.abs.i32(i32 %1, i1 false)
  %8 = icmp ugt i32 %common.ret.op.i.i.i.i.i.i.i, 99
  br i1 %8, label %.lr.ph.i.i.i.i.i.i.preheader, label %._crit_edge.i.i.i.i.i.i

.lr.ph.i.i.i.i.i.i.preheader:                     ; preds = %2
  br label %.lr.ph.i.i.i.i.i.i

9:                                                ; preds = %25, %20
  %.024.i.i.i.i.i.i = phi i64 [ %21, %20 ], [ %26, %25 ]
  %10 = icmp slt i32 %1, 0
  br i1 %10, label %32, label %fmt.format__anon_13312.exit.i

.lr.ph.i.i.i.i.i.i:                               ; preds = %.lr.ph.i.i.i.i.i.i, %.lr.ph.i.i.i.i.i.i.preheader
  %.03.i.i.i.i.i.i = phi i32 [ %17, %.lr.ph.i.i.i.i.i.i ], [ %common.ret.op.i.i.i.i.i.i.i, %.lr.ph.i.i.i.i.i.i.preheader ]
  %.1252.i.i.i.i.i.i = phi i64 [ %11, %.lr.ph.i.i.i.i.i.i ], [ 33, %.lr.ph.i.i.i.i.i.i.preheader ]
  %11 = add i64 %.1252.i.i.i.i.i.i, -2
  %uglygep = getelementptr i8, ptr %3, i64 %.1252.i.i.i.i.i.i
  %uglygep11 = getelementptr i8, ptr %uglygep, i64 -2
  %12 = urem i32 %.03.i.i.i.i.i.i, 100
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 1
  %15 = getelementptr inbounds i8, ptr @fmt.digits2__anon_13915, i64 %14
  %16 = load i16, ptr %15, align 1, !noalias !357
  store i16 %16, ptr %uglygep11, align 1, !noalias !351
  %17 = udiv i32 %.03.i.i.i.i.i.i, 100
  %18 = icmp ugt i32 %.03.i.i.i.i.i.i, 9999
  br i1 %18, label %.lr.ph.i.i.i.i.i.i, label %._crit_edge.i.i.i.i.i.i

._crit_edge.i.i.i.i.i.i:                          ; preds = %.lr.ph.i.i.i.i.i.i, %2
  %.125.lcssa.i.i.i.i.i.i = phi i64 [ 33, %2 ], [ %11, %.lr.ph.i.i.i.i.i.i ]
  %.0.lcssa.i.i.i.i.i.i = phi i32 [ %common.ret.op.i.i.i.i.i.i.i, %2 ], [ %17, %.lr.ph.i.i.i.i.i.i ]
  %19 = icmp ult i32 %.0.lcssa.i.i.i.i.i.i, 10
  br i1 %19, label %20, label %25

20:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %21 = add i64 %.125.lcssa.i.i.i.i.i.i, -1
  %22 = getelementptr inbounds [33 x i8], ptr %3, i64 0, i64 %21
  %23 = trunc i32 %.0.lcssa.i.i.i.i.i.i to i8
  %24 = add nuw nsw i8 %23, 48
  store i8 %24, ptr %22, align 1, !noalias !351
  br label %9

25:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %26 = add i64 %.125.lcssa.i.i.i.i.i.i, -2
  %27 = getelementptr inbounds i8, ptr %3, i64 %26
  %28 = zext i32 %.0.lcssa.i.i.i.i.i.i to i64
  %29 = shl nuw nsw i64 %28, 1
  %30 = getelementptr inbounds i8, ptr @fmt.digits2__anon_13915, i64 %29
  %31 = load i16, ptr %30, align 1, !noalias !360
  store i16 %31, ptr %27, align 1, !noalias !351
  br label %9

32:                                               ; preds = %9
  %33 = add i64 %.024.i.i.i.i.i.i, -1
  %34 = getelementptr inbounds [33 x i8], ptr %3, i64 0, i64 %33
  store i8 45, ptr %34, align 1, !noalias !351
  br label %fmt.format__anon_13312.exit.i

fmt.format__anon_13312.exit.i:                    ; preds = %32, %9
  %.3.i.i.i.i.i.i = phi i64 [ %33, %32 ], [ %.024.i.i.i.i.i.i, %9 ]
  %35 = getelementptr inbounds i8, ptr %3, i64 %.3.i.i.i.i.i.i
  %36 = sub nuw i64 33, %.3.i.i.i.i.i.i
  %37 = call fastcc i16 @fmt.formatBuf__anon_13137(ptr nonnull readonly align 1 %35, i64 %36, ptr nonnull readonly align 8 @6, ptr nonnull readonly align 8 %5), !noalias !351
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %3), !noalias !351
  %sunkaddr = getelementptr inbounds i8, ptr %6, i64 16
  %.val3.i = load i64, ptr %sunkaddr, align 8, !noalias !351
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  %38 = icmp ugt i64 %.val3.i, 23
  br i1 %38, label %str.RocStr.allocate.exit.i, label %str.RocStr.allocate.exit.thread.i

str.RocStr.allocate.exit.thread.i:                ; preds = %fmt.format__anon_13312.exit.i
  %const = bitcast i64 -9223372036854775808 to i64
  %39 = shl nuw nsw i64 %.val3.i, 56
  %.sroa.3.23.insert.shift.i = or i64 %39, %const
  br label %str.RocStr.init.exit

str.RocStr.allocate.exit.i:                       ; preds = %fmt.format__anon_13312.exit.i
  %const12 = bitcast i64 -9223372036854775808 to i64
  %40 = call i64 @llvm.umax.i64(i64 %.val3.i, i64 64)
  %41 = add nuw i64 %40, 8
  %42 = call ptr @roc_alloc(i64 %41, i32 8), !noalias !363
  %43 = getelementptr inbounds i8, ptr %42, i64 8
  store i64 %const12, ptr %42, align 8, !noalias !363
  %44 = icmp slt i64 %40, 0
  %spec.select.i = select i1 %44, ptr %3, ptr %43
  br label %str.RocStr.init.exit

str.RocStr.init.exit:                             ; preds = %str.RocStr.allocate.exit.i, %str.RocStr.allocate.exit.thread.i
  %.sink7.i = phi ptr [ %43, %str.RocStr.allocate.exit.i ], [ null, %str.RocStr.allocate.exit.thread.i ]
  %.sink.i = phi i64 [ %.val3.i, %str.RocStr.allocate.exit.i ], [ 0, %str.RocStr.allocate.exit.thread.i ]
  %.sroa.3.23.insert.shift.sink.i = phi i64 [ %40, %str.RocStr.allocate.exit.i ], [ %.sroa.3.23.insert.shift.i, %str.RocStr.allocate.exit.thread.i ]
  %common.ret.op.i.i = phi ptr [ %spec.select.i, %str.RocStr.allocate.exit.i ], [ %3, %str.RocStr.allocate.exit.thread.i ]
  store ptr %.sink7.i, ptr %3, align 8, !noalias !370
  %45 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %.sink.i, ptr %45, align 8, !noalias !370
  %46 = getelementptr inbounds i8, ptr %3, i64 16
  store i64 %.sroa.3.23.insert.shift.sink.i, ptr %46, align 8, !noalias !370
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %common.ret.op.i.i, ptr nonnull align 1 %7, i64 %.val3.i, i1 false), !noalias !370
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.from_int.u64(ptr noalias nocapture nonnull writeonly sret(%str.RocStr) %0, i64 %1) local_unnamed_addr #4 {
  %3 = alloca [65 x i8], align 1
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))", align 8
  %6 = alloca %"io.fixed_buffer_stream.FixedBufferStream([]u8)", align 8
  %7 = alloca [20 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6)
  store ptr %7, ptr %6, align 8, !noalias !371
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %6, i64 8
  store i64 20, ptr %.sroa.2.0..sroa_idx.i, align 8, !noalias !371
  %.sroa.3.0..sroa_idx1.i = getelementptr inbounds i8, ptr %6, i64 16
  store i64 0, ptr %.sroa.3.0..sroa_idx1.i, align 8, !noalias !371
  store ptr %6, ptr %5, align 8, !alias.scope !374, !noalias !371
  call void @llvm.lifetime.start.p0(i64 65, ptr nonnull %3), !noalias !371
  %8 = icmp ugt i64 %1, 99
  br i1 %8, label %.lr.ph.i.i.i.i.i.i.preheader, label %._crit_edge.i.i.i.i.i.i

.lr.ph.i.i.i.i.i.i.preheader:                     ; preds = %2
  br label %.lr.ph.i.i.i.i.i.i

.lr.ph.i.i.i.i.i.i:                               ; preds = %.lr.ph.i.i.i.i.i.i, %.lr.ph.i.i.i.i.i.i.preheader
  %.03.i.i.i.i.i.i = phi i64 [ %14, %.lr.ph.i.i.i.i.i.i ], [ %1, %.lr.ph.i.i.i.i.i.i.preheader ]
  %.1212.i.i.i.i.i.i = phi i64 [ %9, %.lr.ph.i.i.i.i.i.i ], [ 65, %.lr.ph.i.i.i.i.i.i.preheader ]
  %9 = add i64 %.1212.i.i.i.i.i.i, -2
  %uglygep = getelementptr i8, ptr %3, i64 %.1212.i.i.i.i.i.i
  %uglygep11 = getelementptr i8, ptr %uglygep, i64 -2
  %10 = urem i64 %.03.i.i.i.i.i.i, 100
  %11 = shl nuw nsw i64 %10, 1
  %12 = getelementptr inbounds i8, ptr @fmt.digits2__anon_13915, i64 %11
  %13 = load i16, ptr %12, align 1, !noalias !377
  store i16 %13, ptr %uglygep11, align 1, !noalias !371
  %14 = udiv i64 %.03.i.i.i.i.i.i, 100
  %15 = icmp ugt i64 %.03.i.i.i.i.i.i, 9999
  br i1 %15, label %.lr.ph.i.i.i.i.i.i, label %._crit_edge.i.i.i.i.i.i

._crit_edge.i.i.i.i.i.i:                          ; preds = %.lr.ph.i.i.i.i.i.i, %2
  %.121.lcssa.i.i.i.i.i.i = phi i64 [ 65, %2 ], [ %9, %.lr.ph.i.i.i.i.i.i ]
  %.0.lcssa.i.i.i.i.i.i = phi i64 [ %1, %2 ], [ %14, %.lr.ph.i.i.i.i.i.i ]
  %16 = icmp ult i64 %.0.lcssa.i.i.i.i.i.i, 10
  br i1 %16, label %17, label %22

17:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %18 = add i64 %.121.lcssa.i.i.i.i.i.i, -1
  %19 = getelementptr inbounds [65 x i8], ptr %3, i64 0, i64 %18
  %20 = trunc i64 %.0.lcssa.i.i.i.i.i.i to i8
  %21 = add nuw nsw i8 %20, 48
  store i8 %21, ptr %19, align 1, !noalias !371
  br label %fmt.format__anon_13420.exit.i

22:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %23 = add i64 %.121.lcssa.i.i.i.i.i.i, -2
  %24 = getelementptr inbounds i8, ptr %3, i64 %23
  %25 = shl nuw nsw i64 %.0.lcssa.i.i.i.i.i.i, 1
  %26 = getelementptr inbounds i8, ptr @fmt.digits2__anon_13915, i64 %25
  %27 = load i16, ptr %26, align 1, !noalias !380
  store i16 %27, ptr %24, align 1, !noalias !371
  br label %fmt.format__anon_13420.exit.i

fmt.format__anon_13420.exit.i:                    ; preds = %22, %17
  %.020.i.i.i.i.i.i = phi i64 [ %18, %17 ], [ %23, %22 ]
  %const = bitcast i64 -9223372036854775808 to i64
  %28 = getelementptr inbounds i8, ptr %3, i64 %.020.i.i.i.i.i.i
  %29 = sub nuw i64 65, %.020.i.i.i.i.i.i
  %30 = call fastcc i16 @fmt.formatBuf__anon_13137(ptr nonnull readonly align 1 %28, i64 %29, ptr nonnull readonly align 8 @6, ptr nonnull readonly align 8 %5), !noalias !371
  call void @llvm.lifetime.end.p0(i64 65, ptr nonnull %3), !noalias !371
  %sunkaddr = getelementptr inbounds i8, ptr %6, i64 16
  %.val3.i = load i64, ptr %sunkaddr, align 8, !noalias !371
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  %31 = icmp ugt i64 %.val3.i, 23
  br i1 %31, label %str.RocStr.allocate.exit.i, label %str.RocStr.allocate.exit.thread.i

str.RocStr.allocate.exit.thread.i:                ; preds = %fmt.format__anon_13420.exit.i
  %32 = shl nuw nsw i64 %.val3.i, 56
  %.sroa.3.23.insert.shift.i = or i64 %32, %const
  br label %str.RocStr.init.exit

str.RocStr.allocate.exit.i:                       ; preds = %fmt.format__anon_13420.exit.i
  %33 = call i64 @llvm.umax.i64(i64 %.val3.i, i64 64)
  %34 = add nuw i64 %33, 8
  %35 = call ptr @roc_alloc(i64 %34, i32 8), !noalias !383
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  store i64 %const, ptr %35, align 8, !noalias !383
  %37 = icmp slt i64 %33, 0
  %spec.select.i = select i1 %37, ptr %3, ptr %36
  br label %str.RocStr.init.exit

str.RocStr.init.exit:                             ; preds = %str.RocStr.allocate.exit.i, %str.RocStr.allocate.exit.thread.i
  %.sink7.i = phi ptr [ %36, %str.RocStr.allocate.exit.i ], [ null, %str.RocStr.allocate.exit.thread.i ]
  %.sink.i = phi i64 [ %.val3.i, %str.RocStr.allocate.exit.i ], [ 0, %str.RocStr.allocate.exit.thread.i ]
  %.sroa.3.23.insert.shift.sink.i = phi i64 [ %33, %str.RocStr.allocate.exit.i ], [ %.sroa.3.23.insert.shift.i, %str.RocStr.allocate.exit.thread.i ]
  %common.ret.op.i.i = phi ptr [ %spec.select.i, %str.RocStr.allocate.exit.i ], [ %3, %str.RocStr.allocate.exit.thread.i ]
  store ptr %.sink7.i, ptr %3, align 8, !noalias !390
  %38 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %.sink.i, ptr %38, align 8, !noalias !390
  %39 = getelementptr inbounds i8, ptr %3, i64 16
  store i64 %.sroa.3.23.insert.shift.sink.i, ptr %39, align 8, !noalias !390
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %common.ret.op.i.i, ptr nonnull align 1 %7, i64 %.val3.i, i1 false), !noalias !390
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #3

; Function Attrs: nounwind uwtable
define internal ptr @roc_builtins.utils.allocate_with_refcount(i64 %0, i32 %1, i1 zeroext %2) local_unnamed_addr #4 {
  %4 = tail call i32 @llvm.umax.i32(i32 %1, i32 8)
  %..i = select i1 %2, i64 16, i64 8
  %5 = zext i32 %1 to i64
  %6 = tail call i64 @llvm.umax.i64(i64 %..i, i64 %5)
  %7 = add nuw i64 %6, %0
  %8 = tail call ptr @roc_alloc(i64 %7, i32 %4)
  %9 = getelementptr inbounds i8, ptr %8, i64 %6
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  store i64 -9223372036854775808, ptr %10, align 8
  ret ptr %9
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal i64 @roc_builtins.utils.dict_pseudo_seed() #9 {
  ret i64 ptrtoint (ptr @roc_builtins.utils.dict_pseudo_seed to i64)
}

; Function Attrs: noreturn nounwind uwtable
declare void @roc_panic(ptr nonnull readonly align 8, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__divti3(i128 %0, i128 %1) local_unnamed_addr #4 {
  %3 = ashr i128 %0, 127
  %4 = ashr i128 %1, 127
  %5 = xor i128 %3, %0
  %6 = sub i128 %5, %3
  %7 = xor i128 %4, %1
  %8 = sub i128 %7, %4
  %9 = icmp ugt i128 %8, %6
  br i1 %9, label %compiler_rt.udivmod.udivmod__anon_12747.exit, label %10

10:                                               ; preds = %2
  %.sroa.07.0.extract.trunc.i = trunc i128 %6 to i64
  %.sroa.2.0.extract.shift.i = lshr i128 %6, 64
  %.sroa.2.0.extract.trunc.i = trunc i128 %.sroa.2.0.extract.shift.i to i64
  %.sroa.015.0.extract.trunc.i = trunc i128 %8 to i64
  %.sroa.216.0.extract.shift.i = lshr i128 %8, 64
  %.sroa.216.0.extract.trunc.i = trunc i128 %.sroa.216.0.extract.shift.i to i64
  %11 = icmp eq i64 %.sroa.216.0.extract.trunc.i, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = icmp ult i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  br i1 %13, label %26, label %28

14:                                               ; preds = %10
  %15 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.216.0.extract.trunc.i, i1 true), !range !391
  %16 = trunc i64 %15 to i7
  %.sroa.2.0.extract.trunc.i.fr = freeze i64 %.sroa.2.0.extract.trunc.i
  %cmpz = icmp eq i64 %.sroa.2.0.extract.trunc.i.fr, 0
  br i1 %cmpz, label %cond.end, label %cond.false

cond.false:                                       ; preds = %14
  %17 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.2.0.extract.trunc.i.fr, i1 true), !range !391
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %14
  %ctz = phi i64 [ 64, %14 ], [ %17, %cond.false ]
  %18 = trunc i64 %ctz to i7
  %19 = sub nuw i7 %16, %18
  %20 = zext i7 %19 to i128
  %21 = shl i128 %8, %20
  %22 = add nuw i7 %19, 1
  %23 = zext i7 %22 to i64
  %24 = icmp eq i7 %16, %18
  br i1 %24, label %.unr-lcssa, label %.new

.new:                                             ; preds = %cond.end
  %unroll_iter = and i64 %23, 126
  br label %46

25:                                               ; preds = %42, %26
  %.pn.i = phi { i64, i64 } [ %27, %26 ], [ %45, %42 ]
  %.sroa.10.0.i = phi i64 [ 0, %26 ], [ %43, %42 ]
  %.sroa.017.0.i = extractvalue { i64, i64 } %.pn.i, 0
  %.sroa.10.0.insert.ext25.i = zext i64 %.sroa.10.0.i to i128
  %.sroa.10.0.insert.shift26.i = shl nuw i128 %.sroa.10.0.insert.ext25.i, 64
  %.sroa.017.0.insert.ext21.i = zext i64 %.sroa.017.0.i to i128
  %.sroa.017.0.insert.insert23.i = or i128 %.sroa.10.0.insert.shift26.i, %.sroa.017.0.insert.ext21.i
  br label %compiler_rt.udivmod.udivmod__anon_12747.exit

26:                                               ; preds = %12
  %27 = tail call { i64, i64 } asm "divq ${2}", "={rax},={rdx},r,{rax},{rdx},~{dirflag},~{fpsr},~{flags}"(i64 %.sroa.015.0.extract.trunc.i, i64 %.sroa.07.0.extract.trunc.i, i64 %.sroa.2.0.extract.trunc.i) #18
  br label %25

28:                                               ; preds = %12
  %29 = or i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  %30 = and i64 %29, -4294967296
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  %33 = trunc i64 %.sroa.015.0.extract.trunc.i to i32
  %34 = trunc i64 %.sroa.2.0.extract.trunc.i to i32
  %35 = udiv i32 %34, %33
  %36 = urem i32 %34, %33
  %37 = zext i32 %35 to i64
  %38 = zext i32 %36 to i64
  br label %42

39:                                               ; preds = %28
  %40 = udiv i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  %41 = urem i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  br label %42

42:                                               ; preds = %39, %32
  %43 = phi i64 [ %37, %32 ], [ %40, %39 ]
  %44 = phi i64 [ %38, %32 ], [ %41, %39 ]
  %45 = tail call { i64, i64 } asm "divq ${2}", "={rax},={rdx},r,{rax},{rdx},~{dirflag},~{fpsr},~{flags}"(i64 %.sroa.015.0.extract.trunc.i, i64 %.sroa.07.0.extract.trunc.i, i64 %44) #18
  br label %25

46:                                               ; preds = %46, %.new
  %lsr.iv = phi i64 [ %lsr.iv.next, %46 ], [ %unroll_iter, %.new ]
  %.04051.i = phi i128 [ %21, %.new ], [ %62, %46 ]
  %.04150.i = phi i128 [ %6, %.new ], [ %61, %46 ]
  %.sroa.017.149.i = phi i64 [ 0, %.new ], [ %59, %46 ]
  %47 = xor i128 %.04150.i, -1
  %48 = add i128 %.04051.i, %47
  %isneg.i = icmp slt i128 %48, 0
  %49 = select i1 %isneg.i, i128 %.04051.i, i128 0
  %50 = sub nuw i128 %.04150.i, %49
  %51 = lshr i128 %.04051.i, 1
  %52 = shl i64 %.sroa.017.149.i, 2
  %sh.diff = lshr i128 %48, 126
  %tr.sh.diff = trunc i128 %sh.diff to i64
  %53 = and i64 %tr.sh.diff, 2
  %54 = or i64 %52, %53
  %55 = xor i128 %50, -1
  %56 = add i128 %51, %55
  %57 = lshr i128 %56, 127
  %58 = trunc i128 %57 to i64
  %59 = or i64 %54, %58
  %isneg.i.1 = icmp slt i128 %56, 0
  %60 = select i1 %isneg.i.1, i128 %51, i128 0
  %61 = sub nuw i128 %50, %60
  %62 = lshr i128 %.04051.i, 2
  %lsr.iv.next = add i64 %lsr.iv, -2
  %niter.ncmp.1 = icmp eq i64 %lsr.iv.next, 0
  br i1 %niter.ncmp.1, label %.unr-lcssa.loopexit, label %46

.unr-lcssa.loopexit:                              ; preds = %46
  %63 = shl i64 %59, 1
  br label %.unr-lcssa

.unr-lcssa:                                       ; preds = %.unr-lcssa.loopexit, %cond.end
  %.lcssa.ph = phi i64 [ undef, %cond.end ], [ %59, %.unr-lcssa.loopexit ]
  %.04051.i.unr = phi i128 [ %21, %cond.end ], [ %62, %.unr-lcssa.loopexit ]
  %.04150.i.unr = phi i128 [ %6, %cond.end ], [ %61, %.unr-lcssa.loopexit ]
  %.sroa.017.149.i.unr = phi i64 [ 0, %cond.end ], [ %63, %.unr-lcssa.loopexit ]
  %64 = and i64 %23, 1
  %lcmp.mod.not = icmp eq i64 %64, 0
  %65 = xor i128 %.04150.i.unr, -1
  %66 = add i128 %.04051.i.unr, %65
  %67 = lshr i128 %66, 127
  %68 = trunc i128 %67 to i64
  %69 = or i64 %.sroa.017.149.i.unr, %68
  %.lcssa = select i1 %lcmp.mod.not, i64 %.lcssa.ph, i64 %69
  %.sroa.017.0.insert.ext.i = zext i64 %.lcssa to i128
  br label %compiler_rt.udivmod.udivmod__anon_12747.exit

compiler_rt.udivmod.udivmod__anon_12747.exit:     ; preds = %.unr-lcssa, %25, %2
  %common.ret.op.i = phi i128 [ %.sroa.017.0.insert.insert23.i, %25 ], [ %.sroa.017.0.insert.ext.i, %.unr-lcssa ], [ 0, %2 ]
  %70 = xor i128 %4, %3
  %71 = xor i128 %common.ret.op.i, %70
  %72 = sub i128 %71, %70
  ret i128 %72
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__udivti3(i128 %0, i128 %1) local_unnamed_addr #4 {
  %3 = icmp ugt i128 %1, %0
  br i1 %3, label %compiler_rt.udivmod.udivmod__anon_12747.exit, label %4

4:                                                ; preds = %2
  %.sroa.07.0.extract.trunc.i = trunc i128 %0 to i64
  %.sroa.2.0.extract.shift.i = lshr i128 %0, 64
  %.sroa.2.0.extract.trunc.i = trunc i128 %.sroa.2.0.extract.shift.i to i64
  %.sroa.015.0.extract.trunc.i = trunc i128 %1 to i64
  %.sroa.216.0.extract.shift.i = lshr i128 %1, 64
  %.sroa.216.0.extract.trunc.i = trunc i128 %.sroa.216.0.extract.shift.i to i64
  %5 = icmp eq i64 %.sroa.216.0.extract.trunc.i, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = icmp ult i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  br i1 %7, label %20, label %22

8:                                                ; preds = %4
  %9 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.216.0.extract.trunc.i, i1 true), !range !391
  %10 = trunc i64 %9 to i7
  %.sroa.2.0.extract.trunc.i.fr = freeze i64 %.sroa.2.0.extract.trunc.i
  %cmpz = icmp eq i64 %.sroa.2.0.extract.trunc.i.fr, 0
  br i1 %cmpz, label %cond.end, label %cond.false

cond.false:                                       ; preds = %8
  %11 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.2.0.extract.trunc.i.fr, i1 true), !range !391
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %8
  %ctz = phi i64 [ 64, %8 ], [ %11, %cond.false ]
  %12 = trunc i64 %ctz to i7
  %13 = sub nuw i7 %10, %12
  %14 = zext i7 %13 to i128
  %15 = shl i128 %1, %14
  %16 = add nuw i7 %13, 1
  %17 = zext i7 %16 to i64
  %18 = icmp eq i7 %10, %12
  br i1 %18, label %.unr-lcssa, label %.new

.new:                                             ; preds = %cond.end
  %unroll_iter = and i64 %17, 126
  br label %40

19:                                               ; preds = %36, %20
  %.pn.i = phi { i64, i64 } [ %21, %20 ], [ %39, %36 ]
  %.sroa.10.0.i = phi i64 [ 0, %20 ], [ %37, %36 ]
  %.sroa.017.0.i = extractvalue { i64, i64 } %.pn.i, 0
  %.sroa.10.0.insert.ext25.i = zext i64 %.sroa.10.0.i to i128
  %.sroa.10.0.insert.shift26.i = shl nuw i128 %.sroa.10.0.insert.ext25.i, 64
  %.sroa.017.0.insert.ext21.i = zext i64 %.sroa.017.0.i to i128
  %.sroa.017.0.insert.insert23.i = or i128 %.sroa.10.0.insert.shift26.i, %.sroa.017.0.insert.ext21.i
  br label %compiler_rt.udivmod.udivmod__anon_12747.exit

20:                                               ; preds = %6
  %21 = tail call { i64, i64 } asm "divq ${2}", "={rax},={rdx},r,{rax},{rdx},~{dirflag},~{fpsr},~{flags}"(i64 %.sroa.015.0.extract.trunc.i, i64 %.sroa.07.0.extract.trunc.i, i64 %.sroa.2.0.extract.trunc.i) #18
  br label %19

22:                                               ; preds = %6
  %23 = or i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  %24 = and i64 %23, -4294967296
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = trunc i64 %.sroa.015.0.extract.trunc.i to i32
  %28 = trunc i64 %.sroa.2.0.extract.trunc.i to i32
  %29 = udiv i32 %28, %27
  %30 = urem i32 %28, %27
  %31 = zext i32 %29 to i64
  %32 = zext i32 %30 to i64
  br label %36

33:                                               ; preds = %22
  %34 = udiv i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  %35 = urem i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  br label %36

36:                                               ; preds = %33, %26
  %37 = phi i64 [ %31, %26 ], [ %34, %33 ]
  %38 = phi i64 [ %32, %26 ], [ %35, %33 ]
  %39 = tail call { i64, i64 } asm "divq ${2}", "={rax},={rdx},r,{rax},{rdx},~{dirflag},~{fpsr},~{flags}"(i64 %.sroa.015.0.extract.trunc.i, i64 %.sroa.07.0.extract.trunc.i, i64 %38) #18
  br label %19

40:                                               ; preds = %40, %.new
  %lsr.iv = phi i64 [ %lsr.iv.next, %40 ], [ %unroll_iter, %.new ]
  %.04051.i = phi i128 [ %15, %.new ], [ %56, %40 ]
  %.04150.i = phi i128 [ %0, %.new ], [ %55, %40 ]
  %.sroa.017.149.i = phi i64 [ 0, %.new ], [ %53, %40 ]
  %41 = xor i128 %.04150.i, -1
  %42 = add i128 %.04051.i, %41
  %isneg.i = icmp slt i128 %42, 0
  %43 = select i1 %isneg.i, i128 %.04051.i, i128 0
  %44 = sub nuw i128 %.04150.i, %43
  %45 = lshr i128 %.04051.i, 1
  %46 = shl i64 %.sroa.017.149.i, 2
  %sh.diff = lshr i128 %42, 126
  %tr.sh.diff = trunc i128 %sh.diff to i64
  %47 = and i64 %tr.sh.diff, 2
  %48 = or i64 %46, %47
  %49 = xor i128 %44, -1
  %50 = add i128 %45, %49
  %51 = lshr i128 %50, 127
  %52 = trunc i128 %51 to i64
  %53 = or i64 %48, %52
  %isneg.i.1 = icmp slt i128 %50, 0
  %54 = select i1 %isneg.i.1, i128 %45, i128 0
  %55 = sub nuw i128 %44, %54
  %56 = lshr i128 %.04051.i, 2
  %lsr.iv.next = add i64 %lsr.iv, -2
  %niter.ncmp.1 = icmp eq i64 %lsr.iv.next, 0
  br i1 %niter.ncmp.1, label %.unr-lcssa.loopexit, label %40

.unr-lcssa.loopexit:                              ; preds = %40
  %57 = shl i64 %53, 1
  br label %.unr-lcssa

.unr-lcssa:                                       ; preds = %.unr-lcssa.loopexit, %cond.end
  %.lcssa.ph = phi i64 [ undef, %cond.end ], [ %53, %.unr-lcssa.loopexit ]
  %.04051.i.unr = phi i128 [ %15, %cond.end ], [ %56, %.unr-lcssa.loopexit ]
  %.04150.i.unr = phi i128 [ %0, %cond.end ], [ %55, %.unr-lcssa.loopexit ]
  %.sroa.017.149.i.unr = phi i64 [ 0, %cond.end ], [ %57, %.unr-lcssa.loopexit ]
  %58 = and i64 %17, 1
  %lcmp.mod.not = icmp eq i64 %58, 0
  %59 = xor i128 %.04150.i.unr, -1
  %60 = add i128 %.04051.i.unr, %59
  %61 = lshr i128 %60, 127
  %62 = trunc i128 %61 to i64
  %63 = or i64 %.sroa.017.149.i.unr, %62
  %.lcssa = select i1 %lcmp.mod.not, i64 %.lcssa.ph, i64 %63
  %.sroa.017.0.insert.ext.i = zext i64 %.lcssa to i128
  br label %compiler_rt.udivmod.udivmod__anon_12747.exit

compiler_rt.udivmod.udivmod__anon_12747.exit:     ; preds = %.unr-lcssa, %19, %2
  %common.ret.op.i = phi i128 [ %.sroa.017.0.insert.insert23.i, %19 ], [ %.sroa.017.0.insert.ext.i, %.unr-lcssa ], [ 0, %2 ]
  ret i128 %common.ret.op.i
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__modti3(i128 %0, i128 %1) local_unnamed_addr #4 {
  %3 = ashr i128 %0, 127
  %4 = xor i128 %3, %0
  %5 = sub i128 %4, %3
  %6 = tail call i128 @llvm.abs.i128(i128 %1, i1 false)
  %7 = icmp ugt i128 %6, %5
  br i1 %7, label %compiler_rt.udivmod.udivmod__anon_12747.exit, label %8

8:                                                ; preds = %2
  %.sroa.07.0.extract.trunc.i = trunc i128 %5 to i64
  %.sroa.2.0.extract.shift.i = lshr i128 %5, 64
  %.sroa.2.0.extract.trunc.i = trunc i128 %.sroa.2.0.extract.shift.i to i64
  %.sroa.015.0.extract.trunc.i = trunc i128 %6 to i64
  %.sroa.216.0.extract.shift.i = lshr i128 %6, 64
  %.sroa.216.0.extract.trunc.i = trunc i128 %.sroa.216.0.extract.shift.i to i64
  %9 = icmp eq i64 %.sroa.216.0.extract.trunc.i, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = icmp ult i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  br i1 %11, label %24, label %26

12:                                               ; preds = %8
  %13 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.216.0.extract.trunc.i, i1 true), !range !391
  %14 = trunc i64 %13 to i7
  %.sroa.2.0.extract.trunc.i.fr = freeze i64 %.sroa.2.0.extract.trunc.i
  %cmpz = icmp eq i64 %.sroa.2.0.extract.trunc.i.fr, 0
  br i1 %cmpz, label %cond.end, label %cond.false

cond.false:                                       ; preds = %12
  %15 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.2.0.extract.trunc.i.fr, i1 true), !range !391
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %12
  %ctz = phi i64 [ 64, %12 ], [ %15, %cond.false ]
  %16 = trunc i64 %ctz to i7
  %17 = sub nuw i7 %14, %16
  %18 = zext i7 %17 to i128
  %19 = shl i128 %6, %18
  %20 = add nuw i7 %17, 1
  %21 = zext i7 %20 to i64
  %22 = icmp eq i7 %14, %16
  br i1 %22, label %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.unr-lcssa, label %.new

.new:                                             ; preds = %cond.end
  %unroll_iter = and i64 %21, 126
  br label %40

23:                                               ; preds = %37, %24
  %.pn.i = phi { i64, i64 } [ %25, %24 ], [ %39, %37 ]
  %.sroa.0.0.i = extractvalue { i64, i64 } %.pn.i, 1
  %.sroa.0.0.insert.ext.i = zext i64 %.sroa.0.0.i to i128
  br label %compiler_rt.udivmod.udivmod__anon_12747.exit

24:                                               ; preds = %10
  %25 = tail call { i64, i64 } asm "divq ${2}", "={rax},={rdx},r,{rax},{rdx},~{dirflag},~{fpsr},~{flags}"(i64 %.sroa.015.0.extract.trunc.i, i64 %.sroa.07.0.extract.trunc.i, i64 %.sroa.2.0.extract.trunc.i) #18
  br label %23

26:                                               ; preds = %10
  %27 = or i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  %28 = and i64 %27, -4294967296
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = trunc i64 %.sroa.015.0.extract.trunc.i to i32
  %32 = trunc i64 %.sroa.2.0.extract.trunc.i to i32
  %33 = urem i32 %32, %31
  %34 = zext i32 %33 to i64
  br label %37

35:                                               ; preds = %26
  %36 = urem i64 %.sroa.2.0.extract.trunc.i, %.sroa.015.0.extract.trunc.i
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i64 [ %34, %30 ], [ %36, %35 ]
  %39 = tail call { i64, i64 } asm "divq ${2}", "={rax},={rdx},r,{rax},{rdx},~{dirflag},~{fpsr},~{flags}"(i64 %.sroa.015.0.extract.trunc.i, i64 %.sroa.07.0.extract.trunc.i, i64 %38) #18
  br label %23

40:                                               ; preds = %40, %.new
  %lsr.iv = phi i64 [ %lsr.iv.next, %40 ], [ %unroll_iter, %.new ]
  %.04051.i = phi i128 [ %19, %.new ], [ %50, %40 ]
  %.04150.i = phi i128 [ %5, %.new ], [ %49, %40 ]
  %41 = xor i128 %.04150.i, -1
  %42 = add i128 %.04051.i, %41
  %isneg.i = icmp slt i128 %42, 0
  %43 = select i1 %isneg.i, i128 %.04051.i, i128 0
  %44 = sub nuw i128 %.04150.i, %43
  %45 = lshr i128 %.04051.i, 1
  %46 = xor i128 %44, -1
  %47 = add i128 %45, %46
  %isneg.i.1 = icmp slt i128 %47, 0
  %48 = select i1 %isneg.i.1, i128 %45, i128 0
  %49 = sub nuw i128 %44, %48
  %50 = lshr i128 %.04051.i, 2
  %lsr.iv.next = add i64 %lsr.iv, -2
  %niter.ncmp.1 = icmp eq i64 %lsr.iv.next, 0
  br i1 %niter.ncmp.1, label %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.unr-lcssa, label %40

compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.unr-lcssa: ; preds = %40, %cond.end
  %.lcssa.ph = phi i128 [ undef, %cond.end ], [ %49, %40 ]
  %.04051.i.unr = phi i128 [ %19, %cond.end ], [ %50, %40 ]
  %.04150.i.unr = phi i128 [ %5, %cond.end ], [ %49, %40 ]
  %51 = and i64 %21, 1
  %lcmp.mod.not = icmp eq i64 %51, 0
  br i1 %lcmp.mod.not, label %compiler_rt.udivmod.udivmod__anon_12747.exit, label %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.epilog-lcssa

compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.epilog-lcssa: ; preds = %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.unr-lcssa
  %52 = xor i128 %.04150.i.unr, -1
  %53 = add i128 %.04051.i.unr, %52
  %isneg.i.epil = icmp slt i128 %53, 0
  %54 = select i1 %isneg.i.epil, i128 %.04051.i.unr, i128 0
  %55 = sub nuw i128 %.04150.i.unr, %54
  br label %compiler_rt.udivmod.udivmod__anon_12747.exit

compiler_rt.udivmod.udivmod__anon_12747.exit:     ; preds = %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.epilog-lcssa, %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.unr-lcssa, %23, %2
  %.0 = phi i128 [ %.sroa.0.0.insert.ext.i, %23 ], [ %5, %2 ], [ %.lcssa.ph, %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.unr-lcssa ], [ %55, %compiler_rt.udivmod.udivmod__anon_12747.exit.loopexit.epilog-lcssa ]
  %56 = xor i128 %.0, %3
  %57 = sub i128 %56, %3
  ret i128 %57
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__muloti4(i128 %0, i128 %1, ptr nonnull align 4 %2) local_unnamed_addr #4 {
  %.fr = freeze i128 %1
  store i32 0, ptr %2, align 4
  %mul = tail call { i128, i1 } @llvm.smul.with.overflow.i128(i128 %0, i128 %.fr)
  %4 = icmp slt i128 %0, 0
  %5 = icmp eq i128 %.fr, -170141183460469231731687303715884105728
  %6 = and i1 %4, %5
  br i1 %6, label %.critedge, label %7

.critedge2:                                       ; preds = %.critedge, %7
  %mul.val = extractvalue { i128, i1 } %mul, 0
  ret i128 %mul.val

7:                                                ; preds = %3
  %mul.ov = extractvalue { i128, i1 } %mul, 1
  br i1 %mul.ov, label %.critedge, label %.critedge2

.critedge:                                        ; preds = %7, %3
  store i32 1, ptr %2, align 4
  br label %.critedge2
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local float @floorf(float %0) local_unnamed_addr #4 {
  %2 = bitcast float %0 to i32
  %3 = lshr i32 %2, 23
  %4 = and i32 %3, 255
  %5 = add nuw nsw i32 %3, 1
  %6 = fcmp oeq float %0, 0.000000e+00
  %7 = icmp ugt i32 %4, 149
  %or.cond = select i1 %6, i1 true, i1 %7
  br i1 %or.cond, label %common.ret, label %8

common.ret:                                       ; preds = %18, %15, %10, %1
  %common.ret.op = phi float [ %23, %18 ], [ %0, %1 ], [ %., %15 ], [ %0, %10 ]
  ret float %common.ret.op

8:                                                ; preds = %1
  %9 = icmp ugt i32 %4, 126
  br i1 %9, label %10, label %15

10:                                               ; preds = %8
  %11 = and i32 %5, 31
  %12 = lshr i32 8388607, %11
  %13 = and i32 %12, %2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %common.ret, label %18

15:                                               ; preds = %8
  %16 = fadd float %0, 0x4770000000000000
  tail call void asm sideeffect "", "rm,~{dirflag},~{fpsr},~{flags}"(float %16) #18
  %17 = icmp sgt i32 %2, -1
  %. = select i1 %17, float 0.000000e+00, float -1.000000e+00
  br label %common.ret

18:                                               ; preds = %10
  %19 = fadd float %0, 0x4770000000000000
  tail call void asm sideeffect "", "rm,~{dirflag},~{fpsr},~{flags}"(float %19) #18
  %.not11 = icmp slt i32 %2, 0
  %20 = select i1 %.not11, i32 %12, i32 0
  %spec.select = add nuw i32 %20, %2
  %21 = ashr i32 -8388608, %11
  %22 = and i32 %spec.select, %21
  %23 = bitcast i32 %22 to float
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local ptr @memcpy(ptr noalias align 1 %0, ptr noalias readonly align 1 %1, i64 %2) local_unnamed_addr #4 {
  %.not = icmp eq i64 %2, 0
  br i1 %.not, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %3
  %4 = load i8, ptr %1, align 1
  store i8 %4, ptr %0, align 1
  %5 = add i64 %2, -1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %.loopexit, label %iter.check

iter.check:                                       ; preds = %.preheader
  %min.iters.check = icmp ult i64 %2, 9
  br i1 %min.iters.check, label %.lr.ph.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check11 = icmp ult i64 %2, 33
  br i1 %min.iters.check11, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %5, -32
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %sunkaddr = getelementptr i8, ptr %1, i64 %index
  %sunkaddr50 = getelementptr i8, ptr %sunkaddr, i64 1
  %wide.load = load <16 x i8>, ptr %sunkaddr50, align 1
  %sunkaddr51 = getelementptr i8, ptr %1, i64 %index
  %sunkaddr52 = getelementptr i8, ptr %sunkaddr51, i64 17
  %wide.load15 = load <16 x i8>, ptr %sunkaddr52, align 1
  %sunkaddr53 = getelementptr i8, ptr %0, i64 %index
  %sunkaddr54 = getelementptr i8, ptr %sunkaddr53, i64 1
  store <16 x i8> %wide.load, ptr %sunkaddr54, align 1
  %sunkaddr55 = getelementptr i8, ptr %0, i64 %index
  %sunkaddr56 = getelementptr i8, ptr %sunkaddr55, i64 17
  store <16 x i8> %wide.load15, ptr %sunkaddr56, align 1
  %index.next = add nuw i64 %index, 32
  %7 = icmp eq i64 %n.vec, %index.next
  br i1 %7, label %middle.block, label %vector.body, !llvm.loop !392

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %5, %n.vec
  br i1 %cmp.n, label %.loopexit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end27 = getelementptr i8, ptr %1, i64 %n.vec
  %ind.end24 = getelementptr i8, ptr %0, i64 %n.vec
  %ind.end21 = and i64 %5, 31
  %n.vec.remaining = and i64 %5, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec19 = and i64 %5, -8
  %ind.end20 = and i64 %5, 7
  %ind.end23 = getelementptr i8, ptr %0, i64 %n.vec19
  %ind.end26 = getelementptr i8, ptr %1, i64 %n.vec19
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index30 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next34, %vec.epilog.vector.body ]
  %sunkaddr57 = getelementptr i8, ptr %1, i64 %index30
  %sunkaddr58 = getelementptr i8, ptr %sunkaddr57, i64 1
  %wide.load33 = load <8 x i8>, ptr %sunkaddr58, align 1
  %sunkaddr59 = getelementptr i8, ptr %0, i64 %index30
  %sunkaddr60 = getelementptr i8, ptr %sunkaddr59, i64 1
  store <8 x i8> %wide.load33, ptr %sunkaddr60, align 1
  %index.next34 = add nuw i64 %index30, 8
  %8 = icmp eq i64 %n.vec19, %index.next34
  br i1 %8, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !393

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n29 = icmp eq i64 %5, %n.vec19
  br i1 %cmp.n29, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %iter.check
  %.ph = phi i64 [ %5, %iter.check ], [ %ind.end21, %vec.epilog.iter.check ], [ %ind.end20, %vec.epilog.middle.block ]
  %.010.ph = phi ptr [ %0, %iter.check ], [ %ind.end24, %vec.epilog.iter.check ], [ %ind.end23, %vec.epilog.middle.block ]
  %.059.ph = phi ptr [ %1, %iter.check ], [ %ind.end27, %vec.epilog.iter.check ], [ %ind.end26, %vec.epilog.middle.block ]
  br label %.lr.ph

.loopexit:                                        ; preds = %.lr.ph, %vec.epilog.middle.block, %middle.block, %.preheader, %3
  ret ptr %0

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph.preheader ], [ %lsr.iv.next, %.lr.ph ]
  %sunkaddr61 = getelementptr i8, ptr %.059.ph, i64 %lsr.iv
  %sunkaddr62 = getelementptr i8, ptr %sunkaddr61, i64 1
  %9 = load i8, ptr %sunkaddr62, align 1
  %sunkaddr63 = getelementptr i8, ptr %.010.ph, i64 %lsr.iv
  %sunkaddr64 = getelementptr i8, ptr %sunkaddr63, i64 1
  store i8 %9, ptr %sunkaddr64, align 1
  %lsr.iv.next = add i64 %lsr.iv, 1
  %10 = icmp eq i64 %.ph, %lsr.iv.next
  br i1 %10, label %.loopexit, label %.lr.ph, !llvm.loop !394
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local ptr @memset(ptr align 1 %0, i8 zeroext %1, i64 %2) local_unnamed_addr #4 {
  %.not = icmp eq i64 %2, 0
  br i1 %.not, label %.loopexit, label %iter.check

iter.check:                                       ; preds = %3
  %min.iters.check = icmp ult i64 %2, 8
  br i1 %min.iters.check, label %.preheader.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check6 = icmp ult i64 %2, 32
  br i1 %min.iters.check6, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %2, -32
  %broadcast.splatinsert = insertelement <16 x i8> poison, i8 %1, i64 0
  %broadcast.splat = shufflevector <16 x i8> %broadcast.splatinsert, <16 x i8> poison, <16 x i32> zeroinitializer
  %broadcast.splatinsert8 = insertelement <16 x i8> poison, i8 %1, i64 0
  %broadcast.splat9 = shufflevector <16 x i8> %broadcast.splatinsert8, <16 x i8> poison, <16 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %sunkaddr = getelementptr i8, ptr %0, i64 %index
  store <16 x i8> %broadcast.splat, ptr %sunkaddr, align 1
  %sunkaddr27 = getelementptr i8, ptr %0, i64 %index
  %sunkaddr28 = getelementptr i8, ptr %sunkaddr27, i64 16
  store <16 x i8> %broadcast.splat9, ptr %sunkaddr28, align 1
  %index.next = add nuw i64 %index, 32
  %4 = icmp eq i64 %n.vec, %index.next
  br i1 %4, label %middle.block, label %vector.body, !llvm.loop !395

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %2
  br i1 %cmp.n, label %.loopexit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end16 = getelementptr i8, ptr %0, i64 %n.vec
  %ind.end13 = and i64 %2, 31
  %n.vec.remaining = and i64 %2, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.preheader.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec11 = and i64 %2, -8
  %ind.end12 = and i64 %2, 7
  %ind.end15 = getelementptr i8, ptr %0, i64 %n.vec11
  %broadcast.splatinsert21 = insertelement <8 x i8> poison, i8 %1, i64 0
  %broadcast.splat22 = shufflevector <8 x i8> %broadcast.splatinsert21, <8 x i8> poison, <8 x i32> zeroinitializer
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index19 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next23, %vec.epilog.vector.body ]
  %next.gep20 = getelementptr i8, ptr %0, i64 %index19
  store <8 x i8> %broadcast.splat22, ptr %next.gep20, align 1
  %index.next23 = add nuw i64 %index19, 8
  %5 = icmp eq i64 %n.vec11, %index.next23
  br i1 %5, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !396

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n18 = icmp eq i64 %n.vec11, %2
  br i1 %cmp.n18, label %.loopexit, label %.preheader.preheader

.preheader.preheader:                             ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %iter.check
  %.03.ph = phi i64 [ %2, %iter.check ], [ %ind.end13, %vec.epilog.iter.check ], [ %ind.end12, %vec.epilog.middle.block ]
  %.0.ph = phi ptr [ %0, %iter.check ], [ %ind.end16, %vec.epilog.iter.check ], [ %ind.end15, %vec.epilog.middle.block ]
  br label %.preheader

.loopexit:                                        ; preds = %.preheader, %vec.epilog.middle.block, %middle.block, %3
  ret ptr %0

.preheader:                                       ; preds = %.preheader, %.preheader.preheader
  %lsr.iv = phi i64 [ 0, %.preheader.preheader ], [ %lsr.iv.next, %.preheader ]
  %uglygep = getelementptr i8, ptr %.0.ph, i64 %lsr.iv
  store i8 %1, ptr %uglygep, align 1
  %lsr.iv.next = add i64 %lsr.iv, 1
  %6 = icmp eq i64 %.03.ph, %lsr.iv.next
  br i1 %6, label %.loopexit, label %.preheader, !llvm.loop !397
}

; Function Attrs: nofree nosync nounwind memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define private fastcc void @unicode.utf8CountCodepoints(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 1 %1, i64 %2) unnamed_addr #10 {
  %4 = alloca { i21, i16, [2 x i8] }, align 4
  %.not56 = icmp eq i64 %2, 0
  br i1 %.not56, label %._crit_edge54, label %.preheader.lr.ph

.preheader.lr.ph:                                 ; preds = %3
  %5 = load i32, ptr @0, align 4
  %6 = load i32, ptr @4, align 4
  %7 = load i32, ptr @3, align 4
  %8 = load i32, ptr @2, align 4
  br label %.preheader

common.ret:                                       ; preds = %43, %31, %._crit_edge54
  ret void

.preheader:                                       ; preds = %15, %.preheader.lr.ph
  %.053 = phi i64 [ 0, %.preheader.lr.ph ], [ %.2, %15 ]
  %.02952 = phi i64 [ 0, %.preheader.lr.ph ], [ %.231, %15 ]
  %9 = add nuw i64 %.02952, 8
  %.not45 = icmp ugt i64 %9, %2
  br i1 %.not45, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

._crit_edge54:                                    ; preds = %15, %3
  %.0.lcssa = phi i64 [ 0, %3 ], [ %.2, %15 ]
  store i64 %.0.lcssa, ptr %0, align 8
  %.sroa.228.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  store i16 0, ptr %.sroa.228.0..sroa_idx, align 8
  br label %common.ret

._crit_edge:                                      ; preds = %12, %.lr.ph, %.preheader
  %.130.lcssa = phi i64 [ %.02952, %.preheader ], [ %lsr.iv, %.lr.ph ], [ %lsr.iv.next, %12 ]
  %.1.lcssa = phi i64 [ %.053, %.preheader ], [ %.147, %.lr.ph ], [ %13, %12 ]
  %10 = icmp ult i64 %.130.lcssa, %2
  br i1 %10, label %17, label %15

.lr.ph:                                           ; preds = %12, %.lr.ph.preheader
  %lsr.iv = phi i64 [ %.02952, %.lr.ph.preheader ], [ %lsr.iv.next, %12 ]
  %.147 = phi i64 [ %13, %12 ], [ %.053, %.lr.ph.preheader ]
  %uglygep = getelementptr i8, ptr %1, i64 %lsr.iv
  %.val = load i64, ptr %uglygep, align 1
  %11 = and i64 %.val, -9187201950435737472
  %.not39 = icmp eq i64 %11, 0
  br i1 %.not39, label %12, label %._crit_edge

12:                                               ; preds = %.lr.ph
  %13 = add i64 %.147, 8
  %lsr.iv.next = add i64 %lsr.iv, 8
  %14 = add i64 %lsr.iv.next, 8
  %.not = icmp ugt i64 %14, %2
  br i1 %.not, label %._crit_edge, label %.lr.ph

15:                                               ; preds = %39, %._crit_edge
  %.231 = phi i64 [ %34, %39 ], [ %.130.lcssa, %._crit_edge ]
  %.2 = phi i64 [ %40, %39 ], [ %.1.lcssa, %._crit_edge ]
  %16 = icmp ult i64 %.231, %2
  br i1 %16, label %.preheader, label %._crit_edge54

17:                                               ; preds = %._crit_edge
  %18 = getelementptr inbounds i8, ptr %1, i64 %.130.lcssa
  %19 = load i8, ptr %18, align 1
  %20 = icmp sgt i8 %19, -1
  br i1 %20, label %unicode.utf8ByteSequenceLength.exit, label %21

21:                                               ; preds = %17
  %22 = and i8 %19, -32
  %23 = icmp eq i8 %22, -64
  br i1 %23, label %unicode.utf8ByteSequenceLength.exit, label %24

24:                                               ; preds = %21
  %25 = and i8 %19, -16
  %26 = icmp eq i8 %25, -32
  br i1 %26, label %unicode.utf8ByteSequenceLength.exit, label %27

27:                                               ; preds = %24
  %28 = and i8 %19, -8
  %29 = icmp eq i8 %28, -16
  %spec.select.i = select i1 %29, i32 %5, i32 20
  br label %unicode.utf8ByteSequenceLength.exit

unicode.utf8ByteSequenceLength.exit:              ; preds = %27, %24, %21, %17
  %.sink.i = phi i32 [ %spec.select.i, %27 ], [ %8, %17 ], [ %7, %21 ], [ %6, %24 ]
  %30 = and i32 %.sink.i, 65535
  %.not37 = icmp eq i32 %30, 0
  br i1 %.not37, label %32, label %31

31:                                               ; preds = %unicode.utf8ByteSequenceLength.exit
  %.sroa.0.0.extract.trunc.le = trunc i32 %.sink.i to i16
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  store i16 %.sroa.0.0.extract.trunc.le, ptr %.sroa.1.0..sroa_idx, align 8
  br label %common.ret

32:                                               ; preds = %unicode.utf8ByteSequenceLength.exit
  %.sroa.2.0.extract.shift = lshr i32 %.sink.i, 16
  %.mask = and i32 %.sroa.2.0.extract.shift, 7
  %33 = zext i32 %.mask to i64
  %34 = add nuw i64 %.130.lcssa, %33
  %35 = icmp ugt i64 %34, %2
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) @1, i64 16, i1 false)
  ret void

37:                                               ; preds = %32
  %38 = and i32 %.sink.i, 458752
  %cond = icmp eq i32 %38, 65536
  br i1 %cond, label %39, label %41

39:                                               ; preds = %41, %37
  %40 = add nuw i64 %.1.lcssa, 1
  br label %15

41:                                               ; preds = %37
  call fastcc void @unicode.utf8Decode(ptr noalias %4, ptr nonnull readonly align 1 %18, i64 %33)
  %sunkaddr = getelementptr inbounds i8, ptr %4, i64 4
  %42 = load i16, ptr %sunkaddr, align 4
  %.not38 = icmp eq i16 %42, 0
  br i1 %.not38, label %39, label %43

43:                                               ; preds = %41
  %.sroa.125.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  store i16 %42, ptr %.sroa.125.0..sroa_idx, align 8
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define private fastcc void @unicode.utf8Decode(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 1 %1, i64 %2) unnamed_addr #11 {
  %.sroa.09.i.sroa.0 = alloca i24, align 4
  %.sroa.08.i.sroa.0 = alloca i24, align 4
  %.sroa.04.i.sroa.0 = alloca i24, align 4
  %.sroa.0 = alloca [3 x i8], align 4
  switch i64 %2, label %5 [
    i64 1, label %6
    i64 2, label %9
    i64 3, label %22
    i64 4, label %48
  ]

4:                                                ; preds = %unicode.utf8Decode4.exit, %unicode.utf8Decode3.exit, %unicode.utf8Decode2.exit, %6
  ret void

5:                                                ; preds = %3
  unreachable

6:                                                ; preds = %3
  %7 = load i8, ptr %1, align 1
  %8 = zext i8 %7 to i21
  store i21 %8, ptr %.sroa.0, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(3) %0, ptr noundef nonnull align 4 dereferenceable(3) %.sroa.0, i64 3, i1 false)
  %.sroa.21.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 4
  store i16 0, ptr %.sroa.21.0..sroa_idx, align 4
  br label %4

9:                                                ; preds = %3
  %const10 = bitcast i64 94489280512 to i64
  %.val = load i8, ptr %1, align 1
  %10 = getelementptr i8, ptr %1, i64 1
  %.val2 = load i8, ptr %10, align 1
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %.sroa.04.i.sroa.0)
  %11 = and i8 %.val2, -64
  %.not.i = icmp eq i8 %11, -128
  br i1 %.not.i, label %12, label %unicode.utf8Decode2.exit

12:                                               ; preds = %9
  %const13 = bitcast i64 98784247808 to i64
  %13 = and i8 %.val, 31
  %14 = zext i8 %13 to i21
  %15 = shl nuw nsw i21 %14, 6
  %16 = and i8 %.val2, 63
  %17 = zext i8 %16 to i21
  %18 = or i21 %15, %17
  %19 = icmp ult i21 %18, 128
  br i1 %19, label %unicode.utf8Decode2.exit, label %20

20:                                               ; preds = %12
  store i21 %18, ptr %.sroa.04.i.sroa.0, align 4, !noalias !398
  %.sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.05.sroa.0.0.copyload = load i24, ptr %.sroa.04.i.sroa.0, align 4
  %21 = zext i24 %.sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.05.sroa.0.0.copyload to i64
  br label %unicode.utf8Decode2.exit

unicode.utf8Decode2.exit:                         ; preds = %20, %12, %9
  %.sroa.05.sroa.0.0 = phi i64 [ %21, %20 ], [ 0, %9 ], [ 0, %12 ]
  %.sroa.4.0 = phi i64 [ 0, %20 ], [ %const10, %9 ], [ %const13, %12 ]
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %.sroa.04.i.sroa.0)
  %.sroa.05.0.insert.insert = or i64 %.sroa.4.0, %.sroa.05.sroa.0.0
  store i64 %.sroa.05.0.insert.insert, ptr %0, align 4
  br label %4

22:                                               ; preds = %3
  %const9 = bitcast i64 94489280512 to i64
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %.sroa.08.i.sroa.0)
  %23 = load i8, ptr %1, align 1, !noalias !401
  %24 = getelementptr inbounds i8, ptr %1, i64 1
  %25 = load i8, ptr %24, align 1, !noalias !401
  %26 = and i8 %25, -64
  %.not.i3 = icmp eq i8 %26, -128
  br i1 %.not.i3, label %27, label %unicode.utf8Decode3.exit

27:                                               ; preds = %22
  %28 = getelementptr inbounds i8, ptr %1, i64 2
  %29 = load i8, ptr %28, align 1, !noalias !401
  %30 = and i8 %29, -64
  %.not10.i = icmp eq i8 %30, -128
  br i1 %.not10.i, label %31, label %unicode.utf8Decode3.exit

31:                                               ; preds = %27
  %const12 = bitcast i64 98784247808 to i64
  %32 = and i8 %23, 15
  %33 = zext i8 %32 to i21
  %34 = and i8 %25, 63
  %35 = zext i8 %34 to i21
  %36 = shl nuw nsw i21 %33, 12
  %37 = shl nuw nsw i21 %35, 6
  %38 = or i21 %37, %36
  %39 = and i8 %29, 63
  %40 = zext i8 %39 to i21
  %41 = or i21 %38, %40
  %42 = icmp ult i21 %41, 2048
  br i1 %42, label %unicode.utf8Decode3.exit, label %43

43:                                               ; preds = %31
  %44 = and i21 %38, 63488
  %45 = icmp eq i21 %44, 55296
  br i1 %45, label %unicode.utf8Decode3.exit, label %46

46:                                               ; preds = %43
  store i21 %41, ptr %.sroa.08.i.sroa.0, align 4, !noalias !401
  %.sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.06.sroa.0.0.copyload = load i24, ptr %.sroa.08.i.sroa.0, align 4
  %47 = zext i24 %.sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.06.sroa.0.0.copyload to i64
  br label %unicode.utf8Decode3.exit

unicode.utf8Decode3.exit:                         ; preds = %46, %43, %31, %27, %22
  %.sroa.06.sroa.0.0 = phi i64 [ %47, %46 ], [ 0, %22 ], [ 0, %27 ], [ 0, %31 ], [ 0, %43 ]
  %.sroa.6.0 = phi i64 [ 0, %46 ], [ %const9, %22 ], [ %const9, %27 ], [ %const12, %31 ], [ 103079215104, %43 ]
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %.sroa.08.i.sroa.0)
  %.sroa.06.0.insert.insert = or i64 %.sroa.6.0, %.sroa.06.sroa.0.0
  store i64 %.sroa.06.0.insert.insert, ptr %0, align 4
  br label %4

48:                                               ; preds = %3
  %const = bitcast i64 94489280512 to i64
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %.sroa.09.i.sroa.0)
  %49 = load i8, ptr %1, align 1, !noalias !404
  %50 = getelementptr inbounds i8, ptr %1, i64 1
  %51 = load i8, ptr %50, align 1, !noalias !404
  %52 = and i8 %51, -64
  %.not.i4 = icmp eq i8 %52, -128
  br i1 %.not.i4, label %53, label %unicode.utf8Decode4.exit

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, ptr %1, i64 2
  %55 = load i8, ptr %54, align 1, !noalias !404
  %56 = and i8 %55, -64
  %.not11.i = icmp eq i8 %56, -128
  br i1 %.not11.i, label %57, label %unicode.utf8Decode4.exit

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, ptr %1, i64 3
  %59 = load i8, ptr %58, align 1, !noalias !404
  %60 = and i8 %59, -64
  %.not12.i = icmp eq i8 %60, -128
  br i1 %.not12.i, label %61, label %unicode.utf8Decode4.exit

61:                                               ; preds = %57
  %const11 = bitcast i64 98784247808 to i64
  %62 = zext i8 %49 to i21
  %63 = shl nuw nsw i21 %62, 12
  %64 = and i8 %51, 63
  %65 = zext i8 %64 to i21
  %66 = shl nuw nsw i21 %65, 6
  %67 = or i21 %66, %63
  %68 = and i8 %55, 63
  %69 = zext i8 %68 to i21
  %70 = or i21 %67, %69
  %71 = shl i21 %70, 6
  %72 = and i8 %59, 63
  %73 = zext i8 %72 to i21
  %74 = or i21 %71, %73
  %75 = icmp ult i21 %74, 65536
  br i1 %75, label %unicode.utf8Decode4.exit, label %76

76:                                               ; preds = %61
  %77 = icmp ugt i21 %74, -983041
  br i1 %77, label %unicode.utf8Decode4.exit, label %78

78:                                               ; preds = %76
  store i21 %74, ptr %.sroa.09.i.sroa.0, align 4, !noalias !404
  %.sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.07.sroa.0.0.copyload = load i24, ptr %.sroa.09.i.sroa.0, align 4
  %79 = zext i24 %.sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.07.sroa.0.0.copyload to i64
  br label %unicode.utf8Decode4.exit

unicode.utf8Decode4.exit:                         ; preds = %78, %76, %61, %57, %53, %48
  %.sroa.07.sroa.0.0 = phi i64 [ %79, %78 ], [ 0, %48 ], [ 0, %53 ], [ 0, %57 ], [ 0, %61 ], [ 0, %76 ]
  %.sroa.78.0 = phi i64 [ 0, %78 ], [ %const, %48 ], [ %const, %53 ], [ %const, %57 ], [ %const11, %61 ], [ 107374182400, %76 ]
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %.sroa.09.i.sroa.0)
  %.sroa.07.0.insert.insert = or i64 %.sroa.78.0, %.sroa.07.sroa.0.0
  store i64 %.sroa.07.0.insert.insert, ptr %0, align 4
  br label %4
}

; Function Attrs: nofree nosync nounwind uwtable
define private fastcc i16 @fmt.formatBuf__anon_13137(ptr nocapture nonnull readonly align 1 %0, i64 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull readonly align 8 %3) unnamed_addr #12 {
  %5 = alloca [256 x i8], align 1
  %6 = alloca [256 x i8], align 1
  %7 = alloca [256 x i8], align 1
  %8 = alloca %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))", align 8
  %9 = alloca { i64, i16, [6 x i8] }, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 1, i32 1
  %.sroa.2.0.copyload = load i8, ptr %.sroa.2.0..sroa_idx, align 8
  %.not = icmp eq i8 %.sroa.2.0.copyload, 0
  br i1 %.not, label %18, label %10

common.ret:                                       ; preds = %172, %.lr.ph.i90, %169, %.loopexit116, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81", %.loopexit112, %131, %.lr.ph.i63, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54", %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit", %66, %.lr.ph.i33, %43, %.lr.ph.i21, %40, %36, %25, %.lr.ph.i, %22, %18
  %common.ret.op = phi i16 [ %common.ret.op.i37, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit" ], [ 5, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54" ], [ %144, %.loopexit112 ], [ 5, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81" ], [ 0, %18 ], [ 0, %36 ], [ 0, %.loopexit116 ], [ 5, %.lr.ph.i ], [ 5, %25 ], [ 0, %22 ], [ 5, %.lr.ph.i33 ], [ 5, %66 ], [ 5, %.lr.ph.i63 ], [ 5, %131 ], [ 5, %.lr.ph.i90 ], [ 5, %172 ], [ 0, %169 ], [ 5, %.lr.ph.i21 ], [ 5, %43 ], [ 0, %40 ]
  ret i16 %common.ret.op

10:                                               ; preds = %4
  %11 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 1
  %.sroa.0.0.copyload = load i64, ptr %11, align 8
  call fastcc void @unicode.utf8CountCodepoints(ptr noalias %9, ptr nonnull readonly align 1 %0, i64 %1)
  %12 = getelementptr inbounds { i64, i16, [6 x i8] }, ptr %9, i64 0, i32 1
  %13 = load i16, ptr %12, align 8
  %14 = icmp eq i16 %13, 0
  %15 = load i64, ptr %9, align 8
  %16 = select i1 %14, i64 %15, i64 %1
  %17 = tail call i64 @llvm.usub.sat.i64(i64 %.sroa.0.0.copyload, i64 %16)
  %.not8 = icmp ugt i64 %.sroa.0.0.copyload, %16
  br i1 %.not8, label %54, label %36

18:                                               ; preds = %4
  %19 = load i64, ptr %3, align 8
  %.not15.i = icmp eq i64 %1, 0
  br i1 %.not15.i, label %common.ret, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %18
  %20 = inttoptr i64 %19 to ptr
  %21 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %20, i64 0, i32 1
  %.pre136 = load i64, ptr %21, align 8, !noalias !407
  br label %.lr.ph.i

22:                                               ; preds = %25
  %23 = add nuw i64 %31, %.016.i
  %.not.i = icmp eq i64 %23, %1
  br i1 %.not.i, label %common.ret, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %22, %.lr.ph.i.preheader
  %24 = phi i64 [ %34, %22 ], [ %.pre136, %.lr.ph.i.preheader ]
  %.016.i = phi i64 [ %23, %22 ], [ 0, %.lr.ph.i.preheader ]
  %sunkaddr = inttoptr i64 %19 to ptr
  %sunkaddr173 = getelementptr inbounds i8, ptr %sunkaddr, i64 8
  %.unpack10.i.i.i = load i64, ptr %sunkaddr173, align 8, !noalias !407
  %.not.i.i.i = icmp ugt i64 %.unpack10.i.i.i, %24
  br i1 %.not.i.i.i, label %25, label %common.ret

25:                                               ; preds = %.lr.ph.i
  %26 = inttoptr i64 %19 to ptr
  %27 = sub nuw i64 %1, %.016.i
  %28 = getelementptr inbounds i8, ptr %0, i64 %.016.i
  %29 = add nuw i64 %24, %27
  %.not11.i.i.i = icmp ugt i64 %29, %.unpack10.i.i.i
  %30 = sub nuw i64 %.unpack10.i.i.i, %24
  %31 = select i1 %.not11.i.i.i, i64 %30, i64 %27
  %.unpack.i.i.i = load ptr, ptr %26, align 8, !noalias !407
  %32 = getelementptr inbounds i8, ptr %.unpack.i.i.i, i64 %24
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %32, ptr nonnull align 1 %28, i64 %31, i1 false), !noalias !407
  %sunkaddr174 = inttoptr i64 %19 to ptr
  %sunkaddr175 = getelementptr inbounds i8, ptr %sunkaddr174, i64 16
  %33 = load i64, ptr %sunkaddr175, align 8, !noalias !407
  %34 = add nuw i64 %33, %31
  store i64 %34, ptr %sunkaddr175, align 8, !noalias !407
  %35 = icmp eq i64 %31, 0
  br i1 %35, label %common.ret, label %22

36:                                               ; preds = %10
  %37 = load i64, ptr %3, align 8
  %.not15.i13 = icmp eq i64 %1, 0
  br i1 %.not15.i13, label %common.ret, label %.lr.ph.i21.preheader

.lr.ph.i21.preheader:                             ; preds = %36
  %38 = inttoptr i64 %37 to ptr
  %39 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %38, i64 0, i32 1
  %.pre = load i64, ptr %39, align 8, !noalias !412
  br label %.lr.ph.i21

40:                                               ; preds = %43
  %41 = add nuw i64 %49, %.016.i16
  %.not.i15 = icmp eq i64 %41, %1
  br i1 %.not.i15, label %common.ret, label %.lr.ph.i21

.lr.ph.i21:                                       ; preds = %40, %.lr.ph.i21.preheader
  %42 = phi i64 [ %52, %40 ], [ %.pre, %.lr.ph.i21.preheader ]
  %.016.i16 = phi i64 [ %41, %40 ], [ 0, %.lr.ph.i21.preheader ]
  %sunkaddr176 = inttoptr i64 %37 to ptr
  %sunkaddr177 = getelementptr inbounds i8, ptr %sunkaddr176, i64 8
  %.unpack10.i.i.i19 = load i64, ptr %sunkaddr177, align 8, !noalias !412
  %.not.i.i.i20 = icmp ugt i64 %.unpack10.i.i.i19, %42
  br i1 %.not.i.i.i20, label %43, label %common.ret

43:                                               ; preds = %.lr.ph.i21
  %44 = inttoptr i64 %37 to ptr
  %45 = sub nuw i64 %1, %.016.i16
  %46 = getelementptr inbounds i8, ptr %0, i64 %.016.i16
  %47 = add nuw i64 %42, %45
  %.not11.i.i.i22 = icmp ugt i64 %47, %.unpack10.i.i.i19
  %48 = sub nuw i64 %.unpack10.i.i.i19, %42
  %49 = select i1 %.not11.i.i.i22, i64 %48, i64 %45
  %.unpack.i.i.i23 = load ptr, ptr %44, align 8, !noalias !412
  %50 = getelementptr inbounds i8, ptr %.unpack.i.i.i23, i64 %42
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %50, ptr nonnull align 1 %46, i64 %49, i1 false), !noalias !412
  %sunkaddr178 = inttoptr i64 %37 to ptr
  %sunkaddr179 = getelementptr inbounds i8, ptr %sunkaddr178, i64 16
  %51 = load i64, ptr %sunkaddr179, align 8, !noalias !412
  %52 = add nuw i64 %51, %49
  store i64 %52, ptr %sunkaddr179, align 8, !noalias !412
  %53 = icmp eq i64 %49, 0
  br i1 %53, label %common.ret, label %40

54:                                               ; preds = %10
  %55 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 2
  %56 = load i2, ptr %55, align 8
  %57 = zext i2 %56 to i32
  switch i32 %57, label %58 [
    i32 0, label %59
    i32 1, label %99
    i32 2, label %.lr.ph.i72.preheader
  ]

58:                                               ; preds = %54
  unreachable

59:                                               ; preds = %54
  %60 = load i64, ptr %3, align 8
  %.not15.i25 = icmp eq i64 %1, 0
  br i1 %.not15.i25, label %.lr.ph.i38.preheader, label %.lr.ph.i33.preheader

.lr.ph.i33.preheader:                             ; preds = %59
  %61 = inttoptr i64 %60 to ptr
  %62 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %61, i64 0, i32 1
  %.pre133 = load i64, ptr %62, align 8, !noalias !417
  br label %.lr.ph.i33

63:                                               ; preds = %66
  %64 = add nuw i64 %72, %.016.i28
  %.not.i27 = icmp eq i64 %64, %1
  br i1 %.not.i27, label %.loopexit.loopexit, label %.lr.ph.i33

.lr.ph.i33:                                       ; preds = %63, %.lr.ph.i33.preheader
  %65 = phi i64 [ %75, %63 ], [ %.pre133, %.lr.ph.i33.preheader ]
  %.016.i28 = phi i64 [ %64, %63 ], [ 0, %.lr.ph.i33.preheader ]
  %sunkaddr180 = inttoptr i64 %60 to ptr
  %sunkaddr181 = getelementptr inbounds i8, ptr %sunkaddr180, i64 8
  %.unpack10.i.i.i31 = load i64, ptr %sunkaddr181, align 8, !noalias !417
  %.not.i.i.i32 = icmp ugt i64 %.unpack10.i.i.i31, %65
  br i1 %.not.i.i.i32, label %66, label %common.ret

66:                                               ; preds = %.lr.ph.i33
  %67 = inttoptr i64 %60 to ptr
  %68 = sub nuw i64 %1, %.016.i28
  %69 = getelementptr inbounds i8, ptr %0, i64 %.016.i28
  %70 = add nuw i64 %65, %68
  %.not11.i.i.i34 = icmp ugt i64 %70, %.unpack10.i.i.i31
  %71 = sub nuw i64 %.unpack10.i.i.i31, %65
  %72 = select i1 %.not11.i.i.i34, i64 %71, i64 %68
  %.unpack.i.i.i35 = load ptr, ptr %67, align 8, !noalias !417
  %73 = getelementptr inbounds i8, ptr %.unpack.i.i.i35, i64 %65
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %73, ptr nonnull align 1 %69, i64 %72, i1 false), !noalias !417
  %sunkaddr182 = inttoptr i64 %60 to ptr
  %sunkaddr183 = getelementptr inbounds i8, ptr %sunkaddr182, i64 16
  %74 = load i64, ptr %sunkaddr183, align 8, !noalias !417
  %75 = add nuw i64 %74, %72
  store i64 %75, ptr %sunkaddr183, align 8, !noalias !417
  %76 = icmp eq i64 %72, 0
  br i1 %76, label %common.ret, label %63

.loopexit.loopexit:                               ; preds = %63
  %.pre134 = load i64, ptr %3, align 8
  br label %.lr.ph.i38.preheader

.lr.ph.i38.preheader:                             ; preds = %.loopexit.loopexit, %59
  %77 = phi i64 [ %.pre134, %.loopexit.loopexit ], [ %60, %59 ]
  %78 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 3
  %79 = load i8, ptr %78, align 1
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %5)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %5, i8 %79, i64 256, i1 false)
  %80 = inttoptr i64 %77 to ptr
  %81 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %80, i64 0, i32 1
  %.pre.i.pre = load i64, ptr %81, align 8, !noalias !422
  br label %.lr.ph.i38

.lr.ph.i38:                                       ; preds = %97, %.lr.ph.i38.preheader
  %.pre.i = phi i64 [ %95, %97 ], [ %.pre.i.pre, %.lr.ph.i38.preheader ]
  %.011.i = phi i64 [ %98, %97 ], [ %17, %.lr.ph.i38.preheader ]
  %82 = tail call i64 @llvm.umin.i64(i64 %.011.i, i64 256)
  br label %.lr.ph.i.i

83:                                               ; preds = %86
  %84 = add nuw i64 %92, %.016.i.i
  %.not.i.i = icmp eq i64 %84, %82
  br i1 %.not.i.i, label %97, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %83, %.lr.ph.i38
  %85 = phi i64 [ %95, %83 ], [ %.pre.i, %.lr.ph.i38 ]
  %.016.i.i = phi i64 [ %84, %83 ], [ 0, %.lr.ph.i38 ]
  %sunkaddr184 = inttoptr i64 %77 to ptr
  %sunkaddr185 = getelementptr inbounds i8, ptr %sunkaddr184, i64 8
  %.unpack10.i.i.i.i = load i64, ptr %sunkaddr185, align 8, !noalias !422
  %.not.i.i.i.i = icmp ugt i64 %.unpack10.i.i.i.i, %85
  br i1 %.not.i.i.i.i, label %86, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit"

86:                                               ; preds = %.lr.ph.i.i
  %87 = inttoptr i64 %77 to ptr
  %88 = sub nuw i64 %82, %.016.i.i
  %89 = getelementptr inbounds i8, ptr %5, i64 %.016.i.i
  %90 = add nuw i64 %88, %85
  %.not11.i.i.i.i = icmp ugt i64 %90, %.unpack10.i.i.i.i
  %91 = sub nuw i64 %.unpack10.i.i.i.i, %85
  %92 = select i1 %.not11.i.i.i.i, i64 %91, i64 %88
  %.unpack.i.i.i.i = load ptr, ptr %87, align 8, !noalias !422
  %93 = getelementptr inbounds i8, ptr %.unpack.i.i.i.i, i64 %85
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %93, ptr nonnull align 1 %89, i64 %92, i1 false), !noalias !422
  %sunkaddr186 = inttoptr i64 %77 to ptr
  %sunkaddr187 = getelementptr inbounds i8, ptr %sunkaddr186, i64 16
  %94 = load i64, ptr %sunkaddr187, align 8, !noalias !422
  %95 = add nuw i64 %94, %92
  store i64 %95, ptr %sunkaddr187, align 8, !noalias !422
  %96 = icmp eq i64 %92, 0
  br i1 %96, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit", label %83

97:                                               ; preds = %83
  %98 = sub nuw i64 %.011.i, %82
  %.not.i39 = icmp eq i64 %98, 0
  br i1 %.not.i39, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit", label %.lr.ph.i38

"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit": ; preds = %97, %86, %.lr.ph.i.i
  %common.ret.op.i37 = phi i16 [ 5, %86 ], [ 5, %.lr.ph.i.i ], [ 0, %97 ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  br label %common.ret

99:                                               ; preds = %54
  %100 = add nuw i64 %17, 1
  %101 = lshr i64 %100, 1
  %102 = load i64, ptr %3, align 8
  %103 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 3
  %104 = load i8, ptr %103, align 1
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %5)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %5, i8 %104, i64 256, i1 false)
  %.not10.i40 = icmp ult i64 %17, 2
  br i1 %.not10.i40, label %.loopexit113, label %.lr.ph.i45.preheader

.lr.ph.i45.preheader:                             ; preds = %99
  %105 = lshr i64 %17, 1
  %106 = inttoptr i64 %102 to ptr
  %107 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %106, i64 0, i32 1
  %.pre.i44.pre = load i64, ptr %107, align 8, !noalias !427
  br label %.lr.ph.i45

.lr.ph.i45:                                       ; preds = %123, %.lr.ph.i45.preheader
  %.pre.i44 = phi i64 [ %121, %123 ], [ %.pre.i44.pre, %.lr.ph.i45.preheader ]
  %.011.i42 = phi i64 [ %124, %123 ], [ %105, %.lr.ph.i45.preheader ]
  %108 = tail call i64 @llvm.umin.i64(i64 %.011.i42, i64 256)
  br label %.lr.ph.i.i50

109:                                              ; preds = %112
  %110 = add nuw i64 %118, %.016.i.i47
  %.not.i.i46 = icmp eq i64 %110, %108
  br i1 %.not.i.i46, label %123, label %.lr.ph.i.i50

.lr.ph.i.i50:                                     ; preds = %109, %.lr.ph.i45
  %111 = phi i64 [ %121, %109 ], [ %.pre.i44, %.lr.ph.i45 ]
  %.016.i.i47 = phi i64 [ %110, %109 ], [ 0, %.lr.ph.i45 ]
  %sunkaddr188 = inttoptr i64 %102 to ptr
  %sunkaddr189 = getelementptr inbounds i8, ptr %sunkaddr188, i64 8
  %.unpack10.i.i.i.i48 = load i64, ptr %sunkaddr189, align 8, !noalias !427
  %.not.i.i.i.i49 = icmp ugt i64 %.unpack10.i.i.i.i48, %111
  br i1 %.not.i.i.i.i49, label %112, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54"

112:                                              ; preds = %.lr.ph.i.i50
  %113 = inttoptr i64 %102 to ptr
  %114 = sub nuw i64 %108, %.016.i.i47
  %115 = getelementptr inbounds i8, ptr %5, i64 %.016.i.i47
  %116 = add nuw i64 %114, %111
  %.not11.i.i.i.i51 = icmp ugt i64 %116, %.unpack10.i.i.i.i48
  %117 = sub nuw i64 %.unpack10.i.i.i.i48, %111
  %118 = select i1 %.not11.i.i.i.i51, i64 %117, i64 %114
  %.unpack.i.i.i.i52 = load ptr, ptr %113, align 8, !noalias !427
  %119 = getelementptr inbounds i8, ptr %.unpack.i.i.i.i52, i64 %111
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %119, ptr nonnull align 1 %115, i64 %118, i1 false), !noalias !427
  %sunkaddr190 = inttoptr i64 %102 to ptr
  %sunkaddr191 = getelementptr inbounds i8, ptr %sunkaddr190, i64 16
  %120 = load i64, ptr %sunkaddr191, align 8, !noalias !427
  %121 = add nuw i64 %120, %118
  store i64 %121, ptr %sunkaddr191, align 8, !noalias !427
  %122 = icmp eq i64 %118, 0
  br i1 %122, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54", label %109

123:                                              ; preds = %109
  %124 = sub nuw i64 %.011.i42, %108
  %.not.i53 = icmp eq i64 %124, 0
  br i1 %.not.i53, label %.loopexit113.loopexit, label %.lr.ph.i45

"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54": ; preds = %112, %.lr.ph.i.i50
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  br label %common.ret

.loopexit113.loopexit:                            ; preds = %123
  %.pre130 = load i64, ptr %3, align 8
  br label %.loopexit113

.loopexit113:                                     ; preds = %.loopexit113.loopexit, %99
  %125 = phi i64 [ %.pre130, %.loopexit113.loopexit ], [ %102, %99 ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  %.not15.i55 = icmp eq i64 %1, 0
  br i1 %.not15.i55, label %.loopexit112, label %.lr.ph.i63.preheader

.lr.ph.i63.preheader:                             ; preds = %.loopexit113
  %126 = inttoptr i64 %125 to ptr
  %127 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %126, i64 0, i32 1
  %.pre131 = load i64, ptr %127, align 8, !noalias !432
  br label %.lr.ph.i63

128:                                              ; preds = %131
  %129 = add nuw i64 %137, %.016.i58
  %.not.i57 = icmp eq i64 %129, %1
  br i1 %.not.i57, label %.loopexit112.loopexit, label %.lr.ph.i63

.lr.ph.i63:                                       ; preds = %128, %.lr.ph.i63.preheader
  %130 = phi i64 [ %140, %128 ], [ %.pre131, %.lr.ph.i63.preheader ]
  %.016.i58 = phi i64 [ %129, %128 ], [ 0, %.lr.ph.i63.preheader ]
  %sunkaddr192 = inttoptr i64 %125 to ptr
  %sunkaddr193 = getelementptr inbounds i8, ptr %sunkaddr192, i64 8
  %.unpack10.i.i.i61 = load i64, ptr %sunkaddr193, align 8, !noalias !432
  %.not.i.i.i62 = icmp ugt i64 %.unpack10.i.i.i61, %130
  br i1 %.not.i.i.i62, label %131, label %common.ret

131:                                              ; preds = %.lr.ph.i63
  %132 = inttoptr i64 %125 to ptr
  %133 = sub nuw i64 %1, %.016.i58
  %134 = getelementptr inbounds i8, ptr %0, i64 %.016.i58
  %135 = add nuw i64 %130, %133
  %.not11.i.i.i64 = icmp ugt i64 %135, %.unpack10.i.i.i61
  %136 = sub nuw i64 %.unpack10.i.i.i61, %130
  %137 = select i1 %.not11.i.i.i64, i64 %136, i64 %133
  %.unpack.i.i.i65 = load ptr, ptr %132, align 8, !noalias !432
  %138 = getelementptr inbounds i8, ptr %.unpack.i.i.i65, i64 %130
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %138, ptr nonnull align 1 %134, i64 %137, i1 false), !noalias !432
  %sunkaddr194 = inttoptr i64 %125 to ptr
  %sunkaddr195 = getelementptr inbounds i8, ptr %sunkaddr194, i64 16
  %139 = load i64, ptr %sunkaddr195, align 8, !noalias !432
  %140 = add nuw i64 %139, %137
  store i64 %140, ptr %sunkaddr195, align 8, !noalias !432
  %141 = icmp eq i64 %137, 0
  br i1 %141, label %common.ret, label %128

.loopexit112.loopexit:                            ; preds = %128
  %.pre132 = load i64, ptr %3, align 8
  br label %.loopexit112

.loopexit112:                                     ; preds = %.loopexit112.loopexit, %.loopexit113
  %142 = phi i64 [ %.pre132, %.loopexit112.loopexit ], [ %125, %.loopexit113 ]
  store i64 %142, ptr %8, align 8
  %sunkaddr196 = getelementptr inbounds i8, ptr %2, i64 33
  %143 = load i8, ptr %sunkaddr196, align 1
  %144 = call fastcc i16 @"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes"(ptr nonnull readonly align 8 %8, i8 %143, i64 %101)
  br label %common.ret

.lr.ph.i72.preheader:                             ; preds = %54
  %145 = load i64, ptr %3, align 8
  %146 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 3
  %147 = load i8, ptr %146, align 1
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %5)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %5, i8 %147, i64 256, i1 false)
  %148 = inttoptr i64 %145 to ptr
  %149 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %148, i64 0, i32 1
  %.pre.i71.pre = load i64, ptr %149, align 8, !noalias !437
  br label %.lr.ph.i72

.lr.ph.i72:                                       ; preds = %165, %.lr.ph.i72.preheader
  %.pre.i71 = phi i64 [ %163, %165 ], [ %.pre.i71.pre, %.lr.ph.i72.preheader ]
  %.011.i69 = phi i64 [ %166, %165 ], [ %17, %.lr.ph.i72.preheader ]
  %150 = tail call i64 @llvm.umin.i64(i64 %.011.i69, i64 256)
  br label %.lr.ph.i.i77

151:                                              ; preds = %154
  %152 = add nuw i64 %160, %.016.i.i74
  %.not.i.i73 = icmp eq i64 %152, %150
  br i1 %.not.i.i73, label %165, label %.lr.ph.i.i77

.lr.ph.i.i77:                                     ; preds = %151, %.lr.ph.i72
  %153 = phi i64 [ %163, %151 ], [ %.pre.i71, %.lr.ph.i72 ]
  %.016.i.i74 = phi i64 [ %152, %151 ], [ 0, %.lr.ph.i72 ]
  %sunkaddr197 = inttoptr i64 %145 to ptr
  %sunkaddr198 = getelementptr inbounds i8, ptr %sunkaddr197, i64 8
  %.unpack10.i.i.i.i75 = load i64, ptr %sunkaddr198, align 8, !noalias !437
  %.not.i.i.i.i76 = icmp ugt i64 %.unpack10.i.i.i.i75, %153
  br i1 %.not.i.i.i.i76, label %154, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81"

154:                                              ; preds = %.lr.ph.i.i77
  %155 = inttoptr i64 %145 to ptr
  %156 = sub nuw i64 %150, %.016.i.i74
  %157 = getelementptr inbounds i8, ptr %5, i64 %.016.i.i74
  %158 = add nuw i64 %156, %153
  %.not11.i.i.i.i78 = icmp ugt i64 %158, %.unpack10.i.i.i.i75
  %159 = sub nuw i64 %.unpack10.i.i.i.i75, %153
  %160 = select i1 %.not11.i.i.i.i78, i64 %159, i64 %156
  %.unpack.i.i.i.i79 = load ptr, ptr %155, align 8, !noalias !437
  %161 = getelementptr inbounds i8, ptr %.unpack.i.i.i.i79, i64 %153
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %161, ptr nonnull align 1 %157, i64 %160, i1 false), !noalias !437
  %sunkaddr199 = inttoptr i64 %145 to ptr
  %sunkaddr200 = getelementptr inbounds i8, ptr %sunkaddr199, i64 16
  %162 = load i64, ptr %sunkaddr200, align 8, !noalias !437
  %163 = add nuw i64 %162, %160
  store i64 %163, ptr %sunkaddr200, align 8, !noalias !437
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81", label %151

165:                                              ; preds = %151
  %166 = sub nuw i64 %.011.i69, %150
  %.not.i80 = icmp eq i64 %166, 0
  br i1 %.not.i80, label %.loopexit116, label %.lr.ph.i72

"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81": ; preds = %154, %.lr.ph.i.i77
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  br label %common.ret

.loopexit116:                                     ; preds = %165
  %.pre127 = load i64, ptr %3, align 8
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  %.not15.i82 = icmp eq i64 %1, 0
  br i1 %.not15.i82, label %common.ret, label %.lr.ph.i90.preheader

.lr.ph.i90.preheader:                             ; preds = %.loopexit116
  %167 = inttoptr i64 %.pre127 to ptr
  %168 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %167, i64 0, i32 1
  %.pre128 = load i64, ptr %168, align 8, !noalias !442
  br label %.lr.ph.i90

169:                                              ; preds = %172
  %170 = add nuw i64 %178, %.016.i85
  %.not.i84 = icmp eq i64 %170, %1
  br i1 %.not.i84, label %common.ret, label %.lr.ph.i90

.lr.ph.i90:                                       ; preds = %169, %.lr.ph.i90.preheader
  %171 = phi i64 [ %181, %169 ], [ %.pre128, %.lr.ph.i90.preheader ]
  %.016.i85 = phi i64 [ %170, %169 ], [ 0, %.lr.ph.i90.preheader ]
  %sunkaddr201 = inttoptr i64 %.pre127 to ptr
  %sunkaddr202 = getelementptr inbounds i8, ptr %sunkaddr201, i64 8
  %.unpack10.i.i.i88 = load i64, ptr %sunkaddr202, align 8, !noalias !442
  %.not.i.i.i89 = icmp ugt i64 %.unpack10.i.i.i88, %171
  br i1 %.not.i.i.i89, label %172, label %common.ret

172:                                              ; preds = %.lr.ph.i90
  %173 = inttoptr i64 %.pre127 to ptr
  %174 = sub nuw i64 %1, %.016.i85
  %175 = getelementptr inbounds i8, ptr %0, i64 %.016.i85
  %176 = add nuw i64 %171, %174
  %.not11.i.i.i91 = icmp ugt i64 %176, %.unpack10.i.i.i88
  %177 = sub nuw i64 %.unpack10.i.i.i88, %171
  %178 = select i1 %.not11.i.i.i91, i64 %177, i64 %174
  %.unpack.i.i.i92 = load ptr, ptr %173, align 8, !noalias !442
  %179 = getelementptr inbounds i8, ptr %.unpack.i.i.i92, i64 %171
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %179, ptr nonnull align 1 %175, i64 %178, i1 false), !noalias !442
  %sunkaddr203 = inttoptr i64 %.pre127 to ptr
  %sunkaddr204 = getelementptr inbounds i8, ptr %sunkaddr203, i64 16
  %180 = load i64, ptr %sunkaddr204, align 8, !noalias !442
  %181 = add nuw i64 %180, %178
  store i64 %181, ptr %sunkaddr204, align 8, !noalias !442
  %182 = icmp eq i64 %178, 0
  br i1 %182, label %common.ret, label %169
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define private fastcc i16 @"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes"(ptr nocapture nonnull readonly align 8 %0, i8 %1, i64 %2) unnamed_addr #13 {
  %4 = alloca [256 x i8], align 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %4, i8 %1, i64 256, i1 false)
  %.not10 = icmp eq i64 %2, 0
  br i1 %.not10, label %common.ret, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

common.ret:                                       ; preds = %23, %12, %.lr.ph.i, %3
  %common.ret.op = phi i16 [ 0, %3 ], [ 5, %.lr.ph.i ], [ 5, %12 ], [ 0, %23 ]
  ret i16 %common.ret.op

.lr.ph:                                           ; preds = %23, %.lr.ph.preheader
  %.011 = phi i64 [ %24, %23 ], [ %2, %.lr.ph.preheader ]
  %5 = tail call i64 @llvm.umin.i64(i64 %.011, i64 256)
  %6 = load i64, ptr %0, align 8
  %7 = inttoptr i64 %6 to ptr
  %8 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %7, i64 0, i32 1
  %.pre = load i64, ptr %8, align 8, !noalias !447
  br label %.lr.ph.i

9:                                                ; preds = %12
  %10 = add nuw i64 %18, %.016.i
  %.not.i = icmp eq i64 %10, %5
  br i1 %.not.i, label %23, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %9, %.lr.ph
  %11 = phi i64 [ %21, %9 ], [ %.pre, %.lr.ph ]
  %.016.i = phi i64 [ %10, %9 ], [ 0, %.lr.ph ]
  %sunkaddr = inttoptr i64 %6 to ptr
  %sunkaddr17 = getelementptr inbounds i8, ptr %sunkaddr, i64 8
  %.unpack10.i.i.i = load i64, ptr %sunkaddr17, align 8, !noalias !447
  %.not.i.i.i = icmp ugt i64 %.unpack10.i.i.i, %11
  br i1 %.not.i.i.i, label %12, label %common.ret

12:                                               ; preds = %.lr.ph.i
  %13 = inttoptr i64 %6 to ptr
  %14 = sub nuw i64 %5, %.016.i
  %15 = getelementptr inbounds i8, ptr %4, i64 %.016.i
  %16 = add nuw i64 %11, %14
  %.not11.i.i.i = icmp ugt i64 %16, %.unpack10.i.i.i
  %17 = sub nuw i64 %.unpack10.i.i.i, %11
  %18 = select i1 %.not11.i.i.i, i64 %17, i64 %14
  %.unpack.i.i.i = load ptr, ptr %13, align 8, !noalias !447
  %19 = getelementptr inbounds i8, ptr %.unpack.i.i.i, i64 %11
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %19, ptr nonnull align 1 %15, i64 %18, i1 false), !noalias !447
  %sunkaddr18 = inttoptr i64 %6 to ptr
  %sunkaddr19 = getelementptr inbounds i8, ptr %sunkaddr18, i64 16
  %20 = load i64, ptr %sunkaddr19, align 8, !noalias !447
  %21 = add nuw i64 %20, %18
  store i64 %21, ptr %sunkaddr19, align 8, !noalias !447
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %common.ret, label %9

23:                                               ; preds = %9
  %24 = sub nuw i64 %.011, %5
  %.not = icmp eq i64 %24, 0
  br i1 %.not, label %common.ret, label %.lr.ph
}

; Function Attrs: nounwind uwtable
define private fastcc void @str.RocStr.reallocateFresh(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 8 %1, i64 %2) unnamed_addr #4 {
str.RocStr.len.exit:
  %const = bitcast i64 -9223372036854775808 to i64
  %3 = alloca %str.RocStr, align 8
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %str.RocStr, align 8
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %7 = icmp slt i64 %.sroa.2.0.copyload, 0
  %8 = lshr i64 %.sroa.2.0.copyload, 56
  %9 = xor i64 %8, 128
  %const_mat73 = add i64 %const, -1
  %10 = and i64 %.sroa.1.0.copyload, %const_mat73
  %common.ret.op.i = select i1 %7, i64 %9, i64 %10
  %11 = icmp ugt i64 %2, 23
  br i1 %11, label %str.RocStr.asU8ptr.exit, label %str.RocStr.asU8ptr.exit14

common.ret.sink.split:                            ; preds = %72, %50
  %.sink38 = phi ptr [ %48, %50 ], [ %70, %72 ]
  %.sink.ph = phi ptr [ %6, %50 ], [ %4, %72 ]
  tail call void @roc_dealloc(ptr nonnull align 1 %.sink38, i32 8)
  br label %common.ret

common.ret:                                       ; preds = %72, %68, %62, %mem.copyForwards__anon_9915.exit19, %50, %46, %40, %mem.copyForwards__anon_9915.exit, %common.ret.sink.split
  %.sink = phi ptr [ %6, %mem.copyForwards__anon_9915.exit ], [ %6, %40 ], [ %6, %46 ], [ %6, %50 ], [ %4, %mem.copyForwards__anon_9915.exit19 ], [ %4, %62 ], [ %4, %68 ], [ %4, %72 ], [ %.sink.ph, %common.ret.sink.split ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %.sink, i64 24, i1 false)
  ret void

str.RocStr.asU8ptr.exit:                          ; preds = %str.RocStr.len.exit
  %12 = tail call i64 @llvm.umax.i64(i64 %2, i64 64)
  %13 = add nuw i64 %12, 8
  %14 = tail call ptr @roc_alloc(i64 %13, i32 8), !noalias !452
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 %const, ptr %14, align 8, !noalias !452
  store ptr %15, ptr %6, align 8
  %.sroa.230.0..sroa_idx = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %2, ptr %.sroa.230.0..sroa_idx, align 8
  %.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %6, i64 16
  store i64 %12, ptr %.sroa.3.0..sroa_idx, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %16 = getelementptr inbounds i8, ptr %5, i64 16
  %.val.i = load i64, ptr %16, align 8
  %17 = icmp slt i64 %.val.i, 0
  %18 = load ptr, ptr %5, align 8
  %spec.select = select i1 %17, ptr %5, ptr %18
  %19 = icmp slt i64 %12, 0
  %common.ret.op.i9 = select i1 %19, ptr %6, ptr %15
  %.not.i = icmp eq i64 %common.ret.op.i, 0
  br i1 %.not.i, label %mem.copyForwards__anon_9915.exit, label %iter.check

iter.check:                                       ; preds = %str.RocStr.asU8ptr.exit
  %common.ret.op.i939 = ptrtoint ptr %common.ret.op.i9 to i64
  %spec.select40 = ptrtoint ptr %spec.select to i64
  %min.iters.check = icmp ult i64 %common.ret.op.i, 8
  %20 = sub i64 %common.ret.op.i939, %spec.select40
  %diff.check = icmp ult i64 %20, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %.lr.ph.i.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check41 = icmp ult i64 %common.ret.op.i, 32
  br i1 %min.iters.check41, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %const_mat = add i64 %const, -32
  %n.vec = and i64 %common.ret.op.i, %const_mat
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %sunkaddr = getelementptr i8, ptr %spec.select, i64 %index
  %wide.load = load <16 x i8>, ptr %sunkaddr, align 1
  %sunkaddr74 = getelementptr i8, ptr %spec.select, i64 %index
  %sunkaddr75 = getelementptr i8, ptr %sunkaddr74, i64 16
  %wide.load42 = load <16 x i8>, ptr %sunkaddr75, align 1
  %sunkaddr76 = getelementptr i8, ptr %common.ret.op.i9, i64 %index
  store <16 x i8> %wide.load, ptr %sunkaddr76, align 1
  %sunkaddr77 = getelementptr i8, ptr %common.ret.op.i9, i64 %index
  %sunkaddr78 = getelementptr i8, ptr %sunkaddr77, i64 16
  store <16 x i8> %wide.load42, ptr %sunkaddr78, align 1
  %index.next = add nuw i64 %index, 32
  %21 = icmp eq i64 %n.vec, %index.next
  br i1 %21, label %middle.block, label %vector.body, !llvm.loop !455

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %common.ret.op.i, %n.vec
  br i1 %cmp.n, label %mem.copyForwards__anon_9915.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %n.vec.remaining = and i64 %common.ret.op.i, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %const_mat72 = add i64 %const, -8
  %n.vec44 = and i64 %common.ret.op.i, %const_mat72
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index46 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next48, %vec.epilog.vector.body ]
  %22 = getelementptr inbounds i8, ptr %common.ret.op.i9, i64 %index46
  %23 = getelementptr inbounds i8, ptr %spec.select, i64 %index46
  %wide.load47 = load <8 x i8>, ptr %23, align 1
  store <8 x i8> %wide.load47, ptr %22, align 1
  %index.next48 = add nuw i64 %index46, 8
  %24 = icmp eq i64 %n.vec44, %index.next48
  br i1 %24, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !456

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n45 = icmp eq i64 %common.ret.op.i, %n.vec44
  br i1 %cmp.n45, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %iter.check
  %.03.i.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec44, %vec.epilog.middle.block ]
  %25 = xor i64 %.03.i.ph, -1
  %26 = add nsw i64 %common.ret.op.i, %25
  %xtraiter = and i64 %common.ret.op.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.lr.ph.i.prol.loopexit, label %.lr.ph.i.prol.preheader

.lr.ph.i.prol.preheader:                          ; preds = %.lr.ph.i.preheader
  br label %.lr.ph.i.prol

.lr.ph.i.prol:                                    ; preds = %.lr.ph.i.prol, %.lr.ph.i.prol.preheader
  %lsr.iv = phi i64 [ %xtraiter, %.lr.ph.i.prol.preheader ], [ %lsr.iv.next, %.lr.ph.i.prol ]
  %.03.i.prol = phi i64 [ %30, %.lr.ph.i.prol ], [ %.03.i.ph, %.lr.ph.i.prol.preheader ]
  %27 = getelementptr inbounds i8, ptr %common.ret.op.i9, i64 %.03.i.prol
  %28 = getelementptr inbounds i8, ptr %spec.select, i64 %.03.i.prol
  %29 = load i8, ptr %28, align 1
  store i8 %29, ptr %27, align 1
  %30 = add nuw nsw i64 %.03.i.prol, 1
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %prol.iter.cmp.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %prol.iter.cmp.not, label %.lr.ph.i.prol.loopexit, label %.lr.ph.i.prol, !llvm.loop !457

.lr.ph.i.prol.loopexit:                           ; preds = %.lr.ph.i.prol, %.lr.ph.i.preheader
  %.03.i.unr = phi i64 [ %.03.i.ph, %.lr.ph.i.preheader ], [ %30, %.lr.ph.i.prol ]
  %31 = icmp ult i64 %26, 3
  br i1 %31, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i.preheader49

.lr.ph.i.preheader49:                             ; preds = %.lr.ph.i.prol.loopexit
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader49
  %.03.i = phi i64 [ %36, %.lr.ph.i ], [ %.03.i.unr, %.lr.ph.i.preheader49 ]
  %sunkaddr79 = getelementptr i8, ptr %spec.select, i64 %.03.i
  %32 = load i8, ptr %sunkaddr79, align 1
  %sunkaddr80 = getelementptr i8, ptr %common.ret.op.i9, i64 %.03.i
  store i8 %32, ptr %sunkaddr80, align 1
  %sunkaddr81 = getelementptr i8, ptr %spec.select, i64 %.03.i
  %sunkaddr82 = getelementptr i8, ptr %sunkaddr81, i64 1
  %33 = load i8, ptr %sunkaddr82, align 1
  %sunkaddr83 = getelementptr i8, ptr %common.ret.op.i9, i64 %.03.i
  %sunkaddr84 = getelementptr i8, ptr %sunkaddr83, i64 1
  store i8 %33, ptr %sunkaddr84, align 1
  %sunkaddr85 = getelementptr i8, ptr %spec.select, i64 %.03.i
  %sunkaddr86 = getelementptr i8, ptr %sunkaddr85, i64 2
  %34 = load i8, ptr %sunkaddr86, align 1
  %sunkaddr87 = getelementptr i8, ptr %common.ret.op.i9, i64 %.03.i
  %sunkaddr88 = getelementptr i8, ptr %sunkaddr87, i64 2
  store i8 %34, ptr %sunkaddr88, align 1
  %sunkaddr89 = getelementptr i8, ptr %spec.select, i64 %.03.i
  %sunkaddr90 = getelementptr i8, ptr %sunkaddr89, i64 3
  %35 = load i8, ptr %sunkaddr90, align 1
  %sunkaddr91 = getelementptr i8, ptr %common.ret.op.i9, i64 %.03.i
  %sunkaddr92 = getelementptr i8, ptr %sunkaddr91, i64 3
  store i8 %35, ptr %sunkaddr92, align 1
  %36 = add nuw nsw i64 %.03.i, 4
  %exitcond.not.i.3 = icmp eq i64 %common.ret.op.i, %36
  br i1 %exitcond.not.i.3, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i, !llvm.loop !458

mem.copyForwards__anon_9915.exit:                 ; preds = %.lr.ph.i, %.lr.ph.i.prol.loopexit, %vec.epilog.middle.block, %middle.block, %str.RocStr.asU8ptr.exit
  %37 = getelementptr inbounds i8, ptr %common.ret.op.i9, i64 %common.ret.op.i
  %38 = sub nuw i64 %2, %common.ret.op.i
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %37, i8 0, i64 %38, i1 false)
  %sunkaddr93 = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.333.0.copyload = load i64, ptr %sunkaddr93, align 8
  %39 = icmp slt i64 %.sroa.333.0.copyload, 0
  br i1 %39, label %common.ret, label %40

40:                                               ; preds = %mem.copyForwards__anon_9915.exit
  %sunkaddr94 = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.232.0.copyload = load i64, ptr %sunkaddr94, align 8
  %.sroa.031.0.copyload = load ptr, ptr %1, align 8
  %41 = ptrtoint ptr %.sroa.031.0.copyload to i64
  %42 = shl nuw i64 %.sroa.333.0.copyload, 1
  %isneg.i.i = icmp slt i64 %.sroa.232.0.copyload, 0
  %43 = select i1 %isneg.i.i, i64 %42, i64 %41
  %44 = icmp ne i64 %.sroa.333.0.copyload, 0
  %45 = icmp ne i64 %43, 0
  %or.cond.i.i = select i1 %44, i1 %45, i1 false
  br i1 %or.cond.i.i, label %46, label %common.ret

46:                                               ; preds = %40
  %47 = inttoptr i64 %43 to ptr
  %48 = getelementptr inbounds i64, ptr %47, i64 -1
  %49 = load i64, ptr %48, align 8
  %.not.i.i = icmp eq i64 %49, 0
  br i1 %.not.i.i, label %common.ret, label %50

50:                                               ; preds = %46
  %51 = add i64 %49, -1
  store i64 %51, ptr %48, align 8
  %52 = icmp eq i64 %49, %const
  br i1 %52, label %common.ret.sink.split, label %common.ret

str.RocStr.asU8ptr.exit14:                        ; preds = %str.RocStr.len.exit
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) @5, i64 24, i1 false)
  %53 = getelementptr inbounds i8, ptr %4, i64 23
  %54 = trunc i64 %2 to i8
  %55 = or i8 %54, -128
  store i8 %55, ptr %53, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %.not.i15 = icmp eq i64 %common.ret.op.i, 0
  br i1 %.not.i15, label %mem.copyForwards__anon_9915.exit19, label %.lr.ph.i18.preheader

.lr.ph.i18.preheader:                             ; preds = %str.RocStr.asU8ptr.exit14
  %56 = getelementptr inbounds i8, ptr %3, i64 16
  %.val.i12 = load i64, ptr %56, align 8
  %57 = icmp slt i64 %.val.i12, 0
  %58 = load ptr, ptr %3, align 8
  %spec.select37 = select i1 %57, ptr %3, ptr %58
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %4, ptr align 1 %spec.select37, i64 %common.ret.op.i, i1 false)
  br label %mem.copyForwards__anon_9915.exit19

mem.copyForwards__anon_9915.exit19:               ; preds = %.lr.ph.i18.preheader, %str.RocStr.asU8ptr.exit14
  %59 = icmp slt i64 %.sroa.2.0.copyload, 0
  %60 = getelementptr inbounds i8, ptr %4, i64 %common.ret.op.i
  %61 = sub nuw nsw i64 %2, %common.ret.op.i
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %60, i8 0, i64 %61, i1 false)
  br i1 %59, label %common.ret, label %62

62:                                               ; preds = %mem.copyForwards__anon_9915.exit19
  %.sroa.034.0.copyload = load ptr, ptr %1, align 8
  %63 = ptrtoint ptr %.sroa.034.0.copyload to i64
  %64 = shl nuw i64 %.sroa.2.0.copyload, 1
  %isneg.i.i25 = icmp slt i64 %.sroa.1.0.copyload, 0
  %65 = select i1 %isneg.i.i25, i64 %64, i64 %63
  %66 = icmp ne i64 %.sroa.2.0.copyload, 0
  %67 = icmp ne i64 %65, 0
  %or.cond.i.i26 = select i1 %66, i1 %67, i1 false
  br i1 %or.cond.i.i26, label %68, label %common.ret

68:                                               ; preds = %62
  %69 = inttoptr i64 %65 to ptr
  %70 = getelementptr inbounds i64, ptr %69, i64 -1
  %71 = load i64, ptr %70, align 8
  %.not.i.i27 = icmp eq i64 %71, 0
  br i1 %.not.i.i27, label %common.ret, label %72

72:                                               ; preds = %68
  %73 = add i64 %71, -1
  store i64 %73, ptr %70, align 8
  %74 = icmp eq i64 %71, %const
  br i1 %74, label %common.ret.sink.split, label %common.ret
}

; Function Attrs: nounwind uwtable
declare void @roc_dealloc(ptr nonnull align 1, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_13917(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, i32 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = alloca [3072 x i8], align 8
  %10 = icmp ult i64 %1, 32
  br i1 %10, label %12, label %13

11:                                               ; preds = %13, %12
  ret void

12:                                               ; preds = %8
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %9, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  br label %11

13:                                               ; preds = %8
  %14 = tail call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %14, label %15, label %11

15:                                               ; preds = %13
  %16 = mul nuw i64 %4, %1
  %17 = tail call ptr @roc_alloc(i64 %16, i32 %5)
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %20, label %18

18:                                               ; preds = %15
  %19 = tail call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %17, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  tail call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %17, i64 %1, i64 %19, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  tail call void @roc_dealloc(ptr nonnull align 1 %17, i32 %5)
  ret void

20:                                               ; preds = %15
  tail call fastcc void @sort.quadsort_stack_swap__anon_14490(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %7, i64 %4, ptr nonnull readonly align 1 %6) #19
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_13918(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, i32 %5, ptr nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = alloca [3072 x i8], align 8
  %9 = icmp ult i64 %1, 32
  br i1 %9, label %11, label %12

10:                                               ; preds = %12, %11
  ret void

11:                                               ; preds = %7
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %8, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6)
  br label %10

12:                                               ; preds = %7
  %13 = tail call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6)
  br i1 %13, label %14, label %10

14:                                               ; preds = %12
  %15 = mul nuw i64 %4, %1
  %16 = tail call ptr @roc_alloc(i64 %15, i32 %5)
  %.not = icmp eq ptr %16, null
  br i1 %.not, label %19, label %17

17:                                               ; preds = %14
  %18 = tail call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %16, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6)
  tail call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %16, i64 %1, i64 %18, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6)
  tail call void @roc_dealloc(ptr nonnull align 1 %16, i32 %5)
  ret void

19:                                               ; preds = %14
  tail call fastcc void @sort.quadsort_stack_swap__anon_14495(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %6) #19
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_13919(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4) unnamed_addr #4 {
  %6 = alloca [3072 x i8], align 8
  %7 = icmp ult i64 %1, 32
  br i1 %7, label %9, label %10

8:                                                ; preds = %10, %9
  ret void

9:                                                ; preds = %5
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %6, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  br label %8

10:                                               ; preds = %5
  %11 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  br i1 %11, label %12, label %8

12:                                               ; preds = %10
  %13 = shl nuw i64 %1, 3
  %14 = tail call ptr @roc_alloc(i64 %13, i32 8)
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %14, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %14, i64 %1, i64 %16, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  tail call void @roc_dealloc(ptr nonnull align 1 %14, i32 8)
  ret void

17:                                               ; preds = %12
  tail call fastcc void @sort.quadsort_stack_swap__anon_14500(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4) #19
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_13920(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3) unnamed_addr #4 {
  %5 = alloca [3072 x i8], align 8
  %6 = icmp ult i64 %1, 32
  br i1 %6, label %8, label %9

7:                                                ; preds = %9, %8
  ret void

8:                                                ; preds = %4
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %5, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %7

9:                                                ; preds = %4
  %10 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br i1 %10, label %11, label %7

11:                                               ; preds = %9
  %12 = shl nuw i64 %1, 3
  %13 = tail call ptr @roc_alloc(i64 %12, i32 8)
  %.not = icmp eq ptr %13, null
  br i1 %.not, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %13, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %13, i64 %1, i64 %15, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  tail call void @roc_dealloc(ptr nonnull align 1 %13, i32 8)
  ret void

16:                                               ; preds = %11
  tail call fastcc void @sort.quadsort_stack_swap__anon_14505(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3) #19
  ret void
}

; Function Attrs: nounwind uwtable
declare ptr @roc_alloc(i64, i32) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind uwtable
declare ptr @roc_realloc(ptr nonnull align 1, i64, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = alloca [96 x i8], align 8
  %10 = icmp ult i64 %1, 8
  br i1 %10, label %11, label %319

common.ret:                                       ; preds = %343, %sort.tiny_sort__anon_16202.exit
  ret void

11:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  switch i64 %1, label %12 [
    i64 2, label %13
    i64 3, label %19
    i64 4, label %36
    i64 5, label %76
    i64 6, label %136
    i64 7, label %214
    i64 1, label %sort.tiny_sort__anon_16202.exit
    i64 0, label %sort.tiny_sort__anon_16202.exit
  ]

12:                                               ; preds = %11
  unreachable

13:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 1) #18
  %14 = getelementptr inbounds i8, ptr %0, i64 %5
  %15 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %14) #18
  %16 = icmp eq i8 %15, 1
  %..i = select i1 %16, i64 %5, i64 0
  %17 = select i1 %16, ptr %0, ptr %14
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %17) #18
  %18 = getelementptr inbounds i8, ptr %0, i64 %..i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %18) #18
  call void %6(ptr nonnull align 1 %14, ptr nonnull align 1 %9) #18
  br label %sort.tiny_sort__anon_16202.exit

19:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 3) #18
  %20 = getelementptr inbounds i8, ptr %0, i64 %5
  %21 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %20) #18
  %22 = icmp eq i8 %21, 1
  %.1.i = select i1 %22, i64 %5, i64 0
  %23 = select i1 %22, ptr %0, ptr %20
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %23) #18
  %24 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %24) #18
  call void %6(ptr nonnull align 1 %20, ptr nonnull align 1 %9) #18
  %25 = getelementptr inbounds i8, ptr %20, i64 %5
  %26 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %20, ptr nonnull align 1 %25) #18
  %27 = icmp eq i8 %26, 1
  %28 = select i1 %27, i64 %5, i64 0
  %29 = select i1 %27, ptr %20, ptr %25
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %29) #18
  %30 = getelementptr inbounds i8, ptr %20, i64 %28
  call void %6(ptr nonnull align 1 %20, ptr nonnull align 1 %30) #18
  call void %6(ptr nonnull align 1 %25, ptr nonnull align 1 %9) #18
  %31 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %20) #18
  %32 = icmp eq i8 %31, 1
  %33 = select i1 %32, i64 %5, i64 0
  %34 = select i1 %32, ptr %0, ptr %20
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %34) #18
  %35 = getelementptr inbounds i8, ptr %0, i64 %33
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %35) #18
  call void %6(ptr nonnull align 1 %20, ptr nonnull align 1 %9) #18
  br label %sort.tiny_sort__anon_16202.exit

36:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 3) #18
  %37 = getelementptr inbounds i8, ptr %0, i64 %5
  %38 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %37) #18
  %39 = icmp eq i8 %38, 1
  %..i.i = select i1 %39, i64 %5, i64 0
  %40 = select i1 %39, ptr %0, ptr %37
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %40) #18
  %41 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %41) #18
  call void %6(ptr nonnull align 1 %37, ptr nonnull align 1 %9) #18
  %42 = shl nuw i64 %5, 1
  %43 = getelementptr inbounds i8, ptr %0, i64 %42
  %44 = getelementptr inbounds i8, ptr %43, i64 %5
  %45 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %43, ptr nonnull align 1 %44) #18
  %46 = icmp eq i8 %45, 1
  %47 = select i1 %46, i64 %5, i64 0
  %48 = select i1 %46, ptr %43, ptr %44
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %48) #18
  %49 = getelementptr inbounds i8, ptr %43, i64 %47
  call void %6(ptr nonnull align 1 %43, ptr nonnull align 1 %49) #18
  call void %6(ptr nonnull align 1 %44, ptr nonnull align 1 %9) #18
  %50 = sub i64 0, %5
  %51 = getelementptr inbounds i8, ptr %43, i64 %50
  %52 = getelementptr inbounds i8, ptr %51, i64 %5
  %53 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %51, ptr nonnull align 1 %52) #18
  %54 = icmp eq i8 %53, 1
  br i1 %54, label %55, label %sort.tiny_sort__anon_16202.exit

55:                                               ; preds = %36
  call void %7(ptr align 1 %4, i64 3) #18
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %51) #18
  call void %6(ptr nonnull align 1 %51, ptr nonnull align 1 %52) #18
  call void %6(ptr nonnull align 1 %52, ptr nonnull align 1 %9) #18
  %56 = getelementptr inbounds i8, ptr %51, i64 %50
  %57 = getelementptr inbounds i8, ptr %56, i64 %5
  %58 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %56, ptr nonnull align 1 %57) #18
  %59 = icmp eq i8 %58, 1
  %.1.i.i = select i1 %59, i64 %5, i64 0
  %60 = select i1 %59, ptr %56, ptr %57
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %60) #18
  %61 = getelementptr inbounds i8, ptr %56, i64 %.1.i.i
  call void %6(ptr nonnull align 1 %56, ptr nonnull align 1 %61) #18
  call void %6(ptr nonnull align 1 %57, ptr nonnull align 1 %9) #18
  %62 = getelementptr inbounds i8, ptr %56, i64 %42
  %63 = getelementptr inbounds i8, ptr %62, i64 %5
  %64 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %62, ptr nonnull align 1 %63) #18
  %65 = icmp eq i8 %64, 1
  %66 = select i1 %65, i64 %5, i64 0
  %67 = select i1 %65, ptr %62, ptr %63
  call void %6(ptr nonnull align 1 %9, ptr align 1 %67) #18
  %68 = getelementptr inbounds i8, ptr %62, i64 %66
  call void %6(ptr nonnull align 1 %62, ptr nonnull align 1 %68) #18
  call void %6(ptr nonnull align 1 %63, ptr nonnull align 1 %9) #18
  %69 = getelementptr inbounds i8, ptr %62, i64 %50
  %70 = getelementptr inbounds i8, ptr %69, i64 %5
  %71 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %69, ptr align 1 %70) #18
  %72 = icmp eq i8 %71, 1
  %73 = select i1 %72, i64 %5, i64 0
  %74 = select i1 %72, ptr %69, ptr %70
  call void %6(ptr nonnull align 1 %9, ptr align 1 %74) #18
  %75 = getelementptr inbounds i8, ptr %69, i64 %73
  call void %6(ptr nonnull align 1 %69, ptr align 1 %75) #18
  call void %6(ptr align 1 %70, ptr nonnull align 1 %9) #18
  br label %sort.tiny_sort__anon_16202.exit

76:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 4) #18
  %77 = getelementptr inbounds i8, ptr %0, i64 %5
  %78 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %77) #18
  %79 = icmp eq i8 %78, 1
  %..i9.i = select i1 %79, i64 %5, i64 0
  %80 = select i1 %79, ptr %0, ptr %77
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %80) #18
  %81 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %81) #18
  call void %6(ptr nonnull align 1 %77, ptr nonnull align 1 %9) #18
  %82 = shl nuw i64 %5, 1
  %83 = getelementptr inbounds i8, ptr %0, i64 %82
  %84 = getelementptr inbounds i8, ptr %83, i64 %5
  %85 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %83, ptr nonnull align 1 %84) #18
  %86 = icmp eq i8 %85, 1
  %87 = select i1 %86, i64 %5, i64 0
  %88 = select i1 %86, ptr %83, ptr %84
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %88) #18
  %89 = getelementptr inbounds i8, ptr %83, i64 %87
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %89) #18
  call void %6(ptr nonnull align 1 %84, ptr nonnull align 1 %9) #18
  %90 = sub i64 0, %5
  %91 = getelementptr inbounds i8, ptr %83, i64 %90
  %92 = getelementptr inbounds i8, ptr %91, i64 %5
  %93 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %91, ptr nonnull align 1 %92) #18
  %94 = icmp eq i8 %93, 1
  %95 = select i1 %94, i64 %5, i64 0
  %96 = select i1 %94, ptr %91, ptr %92
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %96) #18
  %97 = getelementptr inbounds i8, ptr %91, i64 %95
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %97) #18
  call void %6(ptr nonnull align 1 %92, ptr nonnull align 1 %9) #18
  %98 = zext i1 %94 to i8
  %99 = getelementptr inbounds i8, ptr %91, i64 %82
  %100 = getelementptr inbounds i8, ptr %99, i64 %5
  %101 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %99, ptr nonnull align 1 %100) #18
  %102 = icmp eq i8 %101, 1
  %103 = select i1 %102, i64 %5, i64 0
  %104 = select i1 %102, ptr %99, ptr %100
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %104) #18
  %105 = getelementptr inbounds i8, ptr %99, i64 %103
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %105) #18
  call void %6(ptr nonnull align 1 %100, ptr nonnull align 1 %9) #18
  %.neg.i.i = sext i1 %102 to i8
  %.not.i.i = icmp eq i8 %98, %.neg.i.i
  br i1 %.not.i.i, label %sort.tiny_sort__anon_16202.exit, label %106

106:                                              ; preds = %76
  call void %7(ptr align 1 %4, i64 6) #18
  %107 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %77) #18
  %108 = icmp eq i8 %107, 1
  %.1.i10.i = select i1 %108, i64 %5, i64 0
  %109 = select i1 %108, ptr %0, ptr %77
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %109) #18
  %110 = getelementptr inbounds i8, ptr %0, i64 %.1.i10.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %110) #18
  call void %6(ptr nonnull align 1 %77, ptr nonnull align 1 %9) #18
  %111 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %83, ptr nonnull align 1 %84) #18
  %112 = icmp eq i8 %111, 1
  %113 = select i1 %112, i64 %5, i64 0
  %114 = select i1 %112, ptr %83, ptr %84
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %114) #18
  %115 = getelementptr inbounds i8, ptr %83, i64 %113
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %115) #18
  call void %6(ptr nonnull align 1 %84, ptr nonnull align 1 %9) #18
  %116 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %91, ptr nonnull align 1 %92) #18
  %117 = icmp eq i8 %116, 1
  %118 = select i1 %117, i64 %5, i64 0
  %119 = select i1 %117, ptr %91, ptr %92
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %119) #18
  %120 = getelementptr inbounds i8, ptr %91, i64 %118
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %120) #18
  call void %6(ptr nonnull align 1 %92, ptr nonnull align 1 %9) #18
  %121 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %99, ptr nonnull align 1 %100) #18
  %122 = icmp eq i8 %121, 1
  %123 = select i1 %122, i64 %5, i64 0
  %124 = select i1 %122, ptr %99, ptr %100
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %124) #18
  %125 = getelementptr inbounds i8, ptr %99, i64 %123
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %125) #18
  call void %6(ptr nonnull align 1 %100, ptr nonnull align 1 %9) #18
  %126 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %77) #18
  %127 = icmp eq i8 %126, 1
  %128 = select i1 %127, i64 %5, i64 0
  %129 = select i1 %127, ptr %0, ptr %77
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %129) #18
  %130 = getelementptr inbounds i8, ptr %0, i64 %128
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %130) #18
  call void %6(ptr nonnull align 1 %77, ptr nonnull align 1 %9) #18
  %131 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %83, ptr nonnull align 1 %84) #18
  %132 = icmp eq i8 %131, 1
  %133 = select i1 %132, i64 %5, i64 0
  %134 = select i1 %132, ptr %83, ptr %84
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %134) #18
  %135 = getelementptr inbounds i8, ptr %83, i64 %133
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %135) #18
  call void %6(ptr nonnull align 1 %84, ptr nonnull align 1 %9) #18
  br label %sort.tiny_sort__anon_16202.exit

136:                                              ; preds = %11
  tail call void %7(ptr align 1 %4, i64 5) #18
  %137 = getelementptr inbounds i8, ptr %0, i64 %5
  %138 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %137) #18
  %139 = icmp eq i8 %138, 1
  %..i11.i = select i1 %139, i64 %5, i64 0
  %140 = select i1 %139, ptr %0, ptr %137
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %140) #18
  %141 = getelementptr inbounds i8, ptr %0, i64 %..i11.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %141) #18
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %9) #18
  %142 = getelementptr inbounds i8, ptr %137, i64 %5
  %143 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %137, ptr nonnull align 1 %142) #18
  %144 = icmp eq i8 %143, 1
  %145 = select i1 %144, i64 %5, i64 0
  %146 = select i1 %144, ptr %137, ptr %142
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %146) #18
  %147 = getelementptr inbounds i8, ptr %137, i64 %145
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %147) #18
  call void %6(ptr nonnull align 1 %142, ptr nonnull align 1 %9) #18
  %148 = mul nuw i64 %5, 3
  %149 = getelementptr inbounds i8, ptr %137, i64 %148
  %150 = getelementptr inbounds i8, ptr %149, i64 %5
  %151 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %149, ptr nonnull align 1 %150) #18
  %152 = icmp eq i8 %151, 1
  %153 = select i1 %152, i64 %5, i64 0
  %154 = select i1 %152, ptr %149, ptr %150
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %154) #18
  %155 = getelementptr inbounds i8, ptr %149, i64 %153
  call void %6(ptr nonnull align 1 %149, ptr nonnull align 1 %155) #18
  call void %6(ptr nonnull align 1 %150, ptr nonnull align 1 %9) #18
  %156 = sub i64 0, %5
  %157 = getelementptr inbounds i8, ptr %149, i64 %156
  %158 = getelementptr inbounds i8, ptr %157, i64 %5
  %159 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %157, ptr nonnull align 1 %158) #18
  %160 = icmp eq i8 %159, 1
  %161 = select i1 %160, i64 %5, i64 0
  %162 = select i1 %160, ptr %157, ptr %158
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %162) #18
  %163 = getelementptr inbounds i8, ptr %157, i64 %161
  call void %6(ptr nonnull align 1 %157, ptr nonnull align 1 %163) #18
  call void %6(ptr nonnull align 1 %158, ptr nonnull align 1 %9) #18
  %164 = shl nuw i64 %5, 1
  %165 = getelementptr inbounds i8, ptr %0, i64 %164
  %166 = getelementptr inbounds i8, ptr %0, i64 %148
  %167 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %165, ptr nonnull align 1 %166) #18
  %.not.i12.i = icmp eq i8 %167, 1
  br i1 %.not.i12.i, label %.cont96.i.i, label %168

168:                                              ; preds = %136
  call void %7(ptr align 1 %4, i64 2) #18
  %169 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %137) #18
  %170 = icmp eq i8 %169, 1
  %.1.i13.i = select i1 %170, i64 %5, i64 0
  %171 = select i1 %170, ptr %0, ptr %137
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %171) #18
  %172 = getelementptr inbounds i8, ptr %0, i64 %.1.i13.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %172) #18
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %9) #18
  %173 = shl nuw i64 %5, 2
  %174 = getelementptr inbounds i8, ptr %0, i64 %173
  %175 = getelementptr inbounds i8, ptr %174, i64 %5
  %176 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %174, ptr nonnull align 1 %175) #18
  %177 = icmp eq i8 %176, 1
  %178 = select i1 %177, i64 %5, i64 0
  %179 = select i1 %177, ptr %174, ptr %175
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %179) #18
  %180 = getelementptr inbounds i8, ptr %174, i64 %178
  call void %6(ptr nonnull align 1 %174, ptr nonnull align 1 %180) #18
  call void %6(ptr nonnull align 1 %175, ptr nonnull align 1 %9) #18
  br label %sort.tiny_sort__anon_16202.exit

.cont96.i.i:                                      ; preds = %136
  call void %7(ptr align 1 %4, i64 8) #18
  %181 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %137) #18
  %.not113.i.i = icmp eq i8 %181, 1
  %.2.i.i = select i1 %.not113.i.i, i64 %5, i64 0
  %.3.i.i = select i1 %.not113.i.i, i64 0, i64 %5
  %182 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %182) #18
  %183 = getelementptr inbounds i8, ptr %2, i64 %5
  %184 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  call void %6(ptr nonnull align 1 %183, ptr nonnull align 1 %184) #18
  %185 = getelementptr inbounds i8, ptr %2, i64 %164
  call void %6(ptr nonnull align 1 %185, ptr nonnull align 1 %165) #18
  %186 = shl nuw i64 %5, 2
  %187 = getelementptr inbounds i8, ptr %0, i64 %186
  %188 = getelementptr inbounds i8, ptr %187, i64 %5
  %189 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %187, ptr nonnull align 1 %188) #18
  %.not114.i.i = icmp eq i8 %189, 1
  %.4.i.i = select i1 %.not114.i.i, i64 %5, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 %5
  %190 = getelementptr inbounds i8, ptr %2, i64 %186
  %191 = getelementptr inbounds i8, ptr %187, i64 %.4.i.i
  call void %6(ptr nonnull align 1 %190, ptr nonnull align 1 %191) #18
  %192 = mul nuw i64 %5, 5
  %193 = getelementptr inbounds i8, ptr %2, i64 %192
  %194 = getelementptr inbounds i8, ptr %187, i64 %.5.i.i
  call void %6(ptr nonnull align 1 %193, ptr nonnull align 1 %194) #18
  %195 = getelementptr inbounds i8, ptr %2, i64 %148
  %196 = getelementptr inbounds i8, ptr %187, i64 %156
  call void %6(ptr nonnull align 1 %195, ptr nonnull align 1 %196) #18
  %197 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %195) #18
  %.not115.i.i = icmp eq i8 %197, 1
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %195, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated92.i.i) #18
  %198 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 %5
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %198
  %.119.i.i = select i1 %.not115.i.i, ptr %198, ptr %195
  %199 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.118.i.i, ptr nonnull align 1 %.119.i.i) #18
  %.not116.i.i = icmp eq i8 %199, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %.sroa.speculated83.i.i) #18
  %200 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 %5
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %200
  %.1106.i.i = select i1 %.not116.i.i, ptr %200, ptr %.119.i.i
  %201 = call i8 %3(ptr align 1 %4, ptr align 1 %.1110.i.i, ptr align 1 %.1106.i.i) #18
  %.not117.i.i = icmp eq i8 %201, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  call void %6(ptr nonnull align 1 %142, ptr align 1 %.sroa.speculated74.i.i) #18
  %202 = getelementptr inbounds i8, ptr %0, i64 %192
  %203 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %185, ptr nonnull align 1 %193) #18
  %204 = icmp eq i8 %203, 1
  %.sroa.speculated65.i.i = select i1 %204, ptr %185, ptr %193
  call void %6(ptr nonnull align 1 %202, ptr nonnull align 1 %.sroa.speculated65.i.i) #18
  %205 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 %156
  %.2111.i.i = select i1 %204, ptr %205, ptr %185
  %.2107.i.i = select i1 %204, ptr %193, ptr %205
  %206 = getelementptr inbounds i8, ptr %202, i64 %156
  %207 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2111.i.i, ptr nonnull align 1 %.2107.i.i) #18
  %208 = icmp eq i8 %207, 1
  %.sroa.speculated.i.i = select i1 %208, ptr %.2111.i.i, ptr %.2107.i.i
  call void %6(ptr nonnull align 1 %206, ptr nonnull align 1 %.sroa.speculated.i.i) #18
  %209 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 %156
  %.3112.i.i = select i1 %208, ptr %209, ptr %.2111.i.i
  %.3108.i.i = select i1 %208, ptr %.2107.i.i, ptr %209
  %210 = getelementptr inbounds i8, ptr %206, i64 %156
  %211 = call i8 %3(ptr align 1 %4, ptr align 1 %.3112.i.i, ptr align 1 %.3108.i.i) #18
  %212 = icmp eq i8 %211, 1
  %213 = select i1 %212, ptr %.3112.i.i, ptr %.3108.i.i
  call void %6(ptr nonnull align 1 %210, ptr align 1 %213) #18
  br label %sort.tiny_sort__anon_16202.exit

214:                                              ; preds = %11
  tail call void %7(ptr align 1 %4, i64 6) #18
  %215 = getelementptr inbounds i8, ptr %0, i64 %5
  %216 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %215) #18
  %217 = icmp eq i8 %216, 1
  %..i14.i = select i1 %217, i64 %5, i64 0
  %218 = select i1 %217, ptr %0, ptr %215
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %218) #18
  %219 = getelementptr inbounds i8, ptr %0, i64 %..i14.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %219) #18
  call void %6(ptr nonnull align 1 %215, ptr nonnull align 1 %9) #18
  %220 = shl nuw i64 %5, 1
  %221 = getelementptr inbounds i8, ptr %0, i64 %220
  %222 = getelementptr inbounds i8, ptr %221, i64 %5
  %223 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %221, ptr nonnull align 1 %222) #18
  %224 = icmp eq i8 %223, 1
  %225 = select i1 %224, i64 %5, i64 0
  %226 = select i1 %224, ptr %221, ptr %222
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %226) #18
  %227 = getelementptr inbounds i8, ptr %221, i64 %225
  call void %6(ptr nonnull align 1 %221, ptr nonnull align 1 %227) #18
  call void %6(ptr nonnull align 1 %222, ptr nonnull align 1 %9) #18
  %228 = getelementptr inbounds i8, ptr %221, i64 %220
  %229 = getelementptr inbounds i8, ptr %228, i64 %5
  %230 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %228, ptr nonnull align 1 %229) #18
  %231 = icmp eq i8 %230, 1
  %232 = select i1 %231, i64 %5, i64 0
  %233 = select i1 %231, ptr %228, ptr %229
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %233) #18
  %234 = getelementptr inbounds i8, ptr %228, i64 %232
  call void %6(ptr nonnull align 1 %228, ptr nonnull align 1 %234) #18
  call void %6(ptr nonnull align 1 %229, ptr nonnull align 1 %9) #18
  %235 = mul nuw i64 %5, 3
  %236 = sub i64 0, %235
  %237 = getelementptr inbounds i8, ptr %228, i64 %236
  %238 = getelementptr inbounds i8, ptr %237, i64 %5
  %239 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %237, ptr nonnull align 1 %238) #18
  %240 = icmp eq i8 %239, 1
  %241 = select i1 %240, i64 %5, i64 0
  %242 = select i1 %240, ptr %237, ptr %238
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %242) #18
  %243 = getelementptr inbounds i8, ptr %237, i64 %241
  call void %6(ptr nonnull align 1 %237, ptr nonnull align 1 %243) #18
  call void %6(ptr nonnull align 1 %238, ptr nonnull align 1 %9) #18
  %244 = zext i1 %240 to i8
  %245 = getelementptr inbounds i8, ptr %237, i64 %220
  %246 = getelementptr inbounds i8, ptr %245, i64 %5
  %247 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %245, ptr nonnull align 1 %246) #18
  %248 = icmp eq i8 %247, 1
  %249 = select i1 %248, i64 %5, i64 0
  %250 = select i1 %248, ptr %245, ptr %246
  call void %6(ptr nonnull align 1 %9, ptr align 1 %250) #18
  %251 = getelementptr inbounds i8, ptr %245, i64 %249
  call void %6(ptr nonnull align 1 %245, ptr nonnull align 1 %251) #18
  call void %6(ptr nonnull align 1 %246, ptr nonnull align 1 %9) #18
  %252 = zext i1 %248 to i8
  %253 = add nuw nsw i8 %252, %244
  %254 = getelementptr inbounds i8, ptr %245, i64 %220
  %255 = getelementptr inbounds i8, ptr %254, i64 %5
  %256 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %254, ptr align 1 %255) #18
  %257 = icmp eq i8 %256, 1
  %258 = select i1 %257, i64 %5, i64 0
  %259 = select i1 %257, ptr %254, ptr %255
  call void %6(ptr nonnull align 1 %9, ptr align 1 %259) #18
  %260 = getelementptr inbounds i8, ptr %254, i64 %258
  call void %6(ptr nonnull align 1 %254, ptr align 1 %260) #18
  call void %6(ptr align 1 %255, ptr nonnull align 1 %9) #18
  %.neg.i15.i = sext i1 %257 to i8
  %261 = icmp eq i8 %253, %.neg.i15.i
  br i1 %261, label %sort.tiny_sort__anon_16202.exit, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %214
  %262 = sub i64 0, %5
  %263 = getelementptr inbounds i8, ptr %254, i64 %262
  call void %7(ptr align 1 %4, i64 11) #18
  %264 = getelementptr inbounds i8, ptr %263, i64 %5
  %265 = call i8 %3(ptr align 1 %4, ptr align 1 %263, ptr align 1 %264) #18
  %266 = icmp eq i8 %265, 1
  %.1.i16.i = select i1 %266, i64 %5, i64 0
  %267 = select i1 %266, ptr %263, ptr %264
  call void %6(ptr nonnull align 1 %9, ptr align 1 %267) #18
  %268 = getelementptr inbounds i8, ptr %263, i64 %.1.i16.i
  call void %6(ptr align 1 %263, ptr align 1 %268) #18
  call void %6(ptr align 1 %264, ptr nonnull align 1 %9) #18
  %269 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %215) #18
  %.not.i17.i = icmp eq i8 %269, 1
  %270 = select i1 %.not.i17.i, i64 %5, i64 0
  %271 = select i1 %.not.i17.i, i64 0, i64 %5
  %272 = getelementptr inbounds i8, ptr %0, i64 %270
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %272) #18
  %273 = getelementptr inbounds i8, ptr %2, i64 %5
  %274 = getelementptr inbounds i8, ptr %0, i64 %271
  call void %6(ptr nonnull align 1 %273, ptr nonnull align 1 %274) #18
  %275 = getelementptr inbounds i8, ptr %2, i64 %220
  call void %6(ptr nonnull align 1 %275, ptr nonnull align 1 %221) #18
  %276 = getelementptr inbounds i8, ptr %0, i64 %235
  %277 = getelementptr inbounds i8, ptr %276, i64 %5
  %278 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %276, ptr nonnull align 1 %277) #18
  %.not127.i.i = icmp eq i8 %278, 1
  %279 = select i1 %.not127.i.i, i64 %5, i64 0
  %280 = select i1 %.not127.i.i, i64 0, i64 %5
  %281 = getelementptr inbounds i8, ptr %2, i64 %235
  %282 = getelementptr inbounds i8, ptr %276, i64 %279
  call void %6(ptr nonnull align 1 %281, ptr nonnull align 1 %282) #18
  %283 = shl nuw i64 %5, 2
  %284 = getelementptr inbounds i8, ptr %2, i64 %283
  %285 = getelementptr inbounds i8, ptr %276, i64 %280
  call void %6(ptr nonnull align 1 %284, ptr nonnull align 1 %285) #18
  %286 = getelementptr inbounds i8, ptr %276, i64 %220
  %287 = getelementptr inbounds i8, ptr %286, i64 %5
  %288 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %286, ptr nonnull align 1 %287) #18
  %.not128.i.i = icmp eq i8 %288, 1
  %289 = select i1 %.not128.i.i, i64 %5, i64 0
  %290 = select i1 %.not128.i.i, i64 0, i64 %5
  %291 = mul nuw i64 %5, 5
  %292 = getelementptr inbounds i8, ptr %2, i64 %291
  %293 = getelementptr inbounds i8, ptr %286, i64 %289
  call void %6(ptr nonnull align 1 %292, ptr nonnull align 1 %293) #18
  %294 = mul nuw i64 %5, 6
  %295 = getelementptr inbounds i8, ptr %2, i64 %294
  %296 = getelementptr inbounds i8, ptr %286, i64 %290
  call void %6(ptr nonnull align 1 %295, ptr nonnull align 1 %296) #18
  %297 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %281) #18
  %.not129.i.i = icmp eq i8 %297, 1
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %281, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated106.i.i) #18
  %298 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 %5
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %298
  %.133.i.i = select i1 %.not129.i.i, ptr %298, ptr %281
  %299 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.132.i.i, ptr nonnull align 1 %.133.i.i) #18
  %.not130.i.i = icmp eq i8 %299, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  call void %6(ptr nonnull align 1 %215, ptr nonnull align 1 %.sroa.speculated97.i.i) #18
  %300 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 %5
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %300
  %.1121.i.i = select i1 %.not130.i.i, ptr %300, ptr %.133.i.i
  %301 = getelementptr inbounds i8, ptr %215, i64 %5
  %302 = call i8 %3(ptr align 1 %4, ptr align 1 %.1123.i.i, ptr align 1 %.1121.i.i) #18
  %.not131.i.i = icmp eq i8 %302, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  call void %6(ptr nonnull align 1 %301, ptr align 1 %.sroa.speculated88.i.i) #18
  %303 = getelementptr inbounds i8, ptr %0, i64 %294
  %304 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %275, ptr nonnull align 1 %295) #18
  %305 = icmp eq i8 %304, 1
  %.sroa.speculated79.i.i = select i1 %305, ptr %275, ptr %295
  call void %6(ptr nonnull align 1 %303, ptr nonnull align 1 %.sroa.speculated79.i.i) #18
  %306 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 %262
  %.2124.i.i = select i1 %305, ptr %306, ptr %275
  %.2.i18.i = select i1 %305, ptr %295, ptr %306
  %307 = getelementptr inbounds i8, ptr %303, i64 %262
  %308 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2124.i.i, ptr nonnull align 1 %.2.i18.i) #18
  %309 = icmp eq i8 %308, 1
  %.sroa.speculated70.i.i = select i1 %309, ptr %.2124.i.i, ptr %.2.i18.i
  call void %6(ptr nonnull align 1 %307, ptr nonnull align 1 %.sroa.speculated70.i.i) #18
  %310 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 %262
  %.3125.i.i = select i1 %309, ptr %310, ptr %.2124.i.i
  %.3.i19.i = select i1 %309, ptr %.2.i18.i, ptr %310
  %311 = getelementptr inbounds i8, ptr %307, i64 %262
  %312 = call i8 %3(ptr align 1 %4, ptr align 1 %.3125.i.i, ptr align 1 %.3.i19.i) #18
  %313 = icmp eq i8 %312, 1
  %.sroa.speculated.i20.i = select i1 %313, ptr %.3125.i.i, ptr %.3.i19.i
  call void %6(ptr nonnull align 1 %311, ptr align 1 %.sroa.speculated.i20.i) #18
  %314 = getelementptr inbounds i8, ptr %.sroa.speculated.i20.i, i64 %262
  %.4126.i.i = select i1 %313, ptr %314, ptr %.3125.i.i
  %.4.i21.i = select i1 %313, ptr %.3.i19.i, ptr %314
  %315 = getelementptr inbounds i8, ptr %311, i64 %262
  %316 = call i8 %3(ptr align 1 %4, ptr align 1 %.4126.i.i, ptr align 1 %.4.i21.i) #18
  %317 = icmp eq i8 %316, 1
  %318 = select i1 %317, ptr %.4126.i.i, ptr %.4.i21.i
  call void %6(ptr nonnull align 1 %315, ptr align 1 %318) #18
  br label %sort.tiny_sort__anon_16202.exit

sort.tiny_sort__anon_16202.exit:                  ; preds = %.cont110.i.i, %214, %.cont96.i.i, %168, %106, %76, %55, %36, %19, %13, %11, %11
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  br label %common.ret

319:                                              ; preds = %8
  %320 = lshr i64 %1, 1
  %321 = lshr i64 %1, 2
  %322 = sub nuw nsw i64 %320, %321
  %323 = sub nuw i64 %1, %320
  %324 = lshr i64 %323, 1
  %325 = sub nuw i64 %323, %324
  tail call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %321, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  %326 = mul nuw i64 %321, %5
  %327 = getelementptr inbounds i8, ptr %0, i64 %326
  tail call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %327, i64 %322, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  %328 = mul nuw i64 %322, %5
  %329 = getelementptr inbounds i8, ptr %327, i64 %328
  tail call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %329, i64 %324, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  %330 = mul nuw i64 %324, %5
  %331 = getelementptr inbounds i8, ptr %329, i64 %330
  tail call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %331, i64 %325, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  %332 = add nsw i64 %321, -1
  %333 = mul nuw i64 %332, %5
  %334 = getelementptr inbounds i8, ptr %0, i64 %333
  tail call void %7(ptr align 1 %4, i64 1) #18
  %335 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %334, ptr nonnull align 1 %327) #18
  %.not = icmp eq i8 %335, 1
  br i1 %.not, label %..critedge_crit_edge, label %336

..critedge_crit_edge:                             ; preds = %319
  %.pre = mul nuw i64 %320, %5
  br label %.critedge

336:                                              ; preds = %319
  %337 = add nsw i64 %320, -1
  %338 = mul nuw i64 %337, %5
  %339 = getelementptr inbounds i8, ptr %0, i64 %338
  %340 = mul nuw i64 %320, %5
  %341 = getelementptr inbounds i8, ptr %0, i64 %340
  tail call void %7(ptr align 1 %4, i64 1) #18
  %342 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %339, ptr nonnull align 1 %341) #18
  %.not11 = icmp eq i8 %342, 1
  br i1 %.not11, label %.critedge, label %343

343:                                              ; preds = %336
  %344 = sub i64 0, %5
  %345 = getelementptr inbounds i8, ptr %331, i64 %344
  tail call void %7(ptr align 1 %4, i64 1) #18
  %346 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %345, ptr nonnull align 1 %331) #18
  %.not12 = icmp eq i8 %346, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %343, %336, %..critedge_crit_edge
  %.pre-phi = phi i64 [ %.pre, %..critedge_crit_edge ], [ %340, %336 ], [ %340, %343 ]
  tail call fastcc void @sort.parity_merge__anon_16203(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %321, i64 %322, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  %347 = getelementptr inbounds i8, ptr %2, i64 %.pre-phi
  %348 = getelementptr inbounds i8, ptr %0, i64 %.pre-phi
  tail call fastcc void @sort.parity_merge__anon_16203(ptr nonnull align 1 %347, ptr nonnull align 1 %348, i64 %324, i64 %325, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  tail call fastcc void @sort.parity_merge__anon_16203(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %320, i64 %323, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %7)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 8
  %9 = alloca [96 x i8], align 8
  %10 = alloca [96 x i8], align 8
  %11 = alloca [96 x i8], align 8
  %12 = alloca [96 x i8], align 8
  %13 = alloca [96 x i8], align 8
  %14 = alloca [96 x i8], align 8
  %15 = alloca [3072 x i8], align 8
  %.not485 = icmp ult i64 %1, 8
  br i1 %.not485, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %7
  %16 = lshr i64 %1, 3
  %17 = shl nuw i64 %4, 1
  %18 = mul nuw i64 %4, 3
  %19 = shl nuw i64 %4, 2
  %20 = mul nuw i64 %4, 5
  %21 = mul nuw i64 %4, 6
  %22 = mul nuw i64 %4, 7
  %23 = shl nuw i64 %4, 3
  %24 = sub i64 0, %4
  %25 = sub i64 0, %23
  br label %26

26:                                               ; preds = %54, %.lr.ph
  %.1488 = phi ptr [ %0, %.lr.ph ], [ %55, %54 ]
  %.0279487 = phi ptr [ %0, %.lr.ph ], [ %.1280, %54 ]
  %.0284486 = phi i64 [ %16, %.lr.ph ], [ %.1285, %54 ]
  %27 = add i64 %.0284486, -1
  call void %6(ptr align 1 %3, i64 4) #18
  %28 = getelementptr inbounds i8, ptr %.1488, i64 %4
  %29 = call i8 %2(ptr align 1 %3, ptr align 1 %.1488, ptr align 1 %28) #18
  %30 = icmp eq i8 %29, 1
  %31 = zext i1 %30 to i4
  %32 = getelementptr inbounds i8, ptr %.1488, i64 %17
  %33 = getelementptr inbounds i8, ptr %.1488, i64 %18
  %34 = call i8 %2(ptr align 1 %3, ptr align 1 %32, ptr align 1 %33) #18
  %35 = icmp eq i8 %34, 1
  %36 = zext i1 %35 to i4
  %37 = getelementptr inbounds i8, ptr %.1488, i64 %19
  %38 = getelementptr inbounds i8, ptr %.1488, i64 %20
  %39 = call i8 %2(ptr align 1 %3, ptr align 1 %37, ptr align 1 %38) #18
  %40 = icmp eq i8 %39, 1
  %41 = zext i1 %40 to i4
  %42 = getelementptr inbounds i8, ptr %.1488, i64 %21
  %43 = getelementptr inbounds i8, ptr %.1488, i64 %22
  %44 = call i8 %2(ptr align 1 %3, ptr align 1 %42, ptr align 1 %43) #18
  %45 = icmp eq i8 %44, 1
  %46 = zext i1 %45 to i4
  %47 = select i1 %35, i4 2, i4 0
  %48 = select i1 %40, i4 4, i4 0
  %49 = select i1 %45, i4 -8, i4 0
  %50 = or i4 %47, %48
  %51 = or i4 %50, %49
  %52 = or i4 %51, %31
  %53 = zext i4 %52 to i32
  switch i32 %53, label %.preheader [
    i32 0, label %56
    i32 15, label %62
  ]

.sink.split:                                      ; preds = %265, %260, %.critedge37, %140, %138, %127, %74, %60, %58, %56
  %.sink597 = phi ptr [ %95, %74 ], [ %.1488, %58 ], [ %.1488, %56 ], [ %.1488, %60 ], [ %255, %260 ], [ %255, %.critedge37 ], [ %255, %265 ], [ %97, %138 ], [ %97, %127 ], [ %97, %140 ]
  %.1285.ph = phi i64 [ %.2286, %74 ], [ %27, %58 ], [ %27, %56 ], [ %27, %60 ], [ %145, %260 ], [ %145, %.critedge37 ], [ %145, %265 ], [ %99, %138 ], [ %99, %127 ], [ %99, %140 ]
  %.1280.ph = phi ptr [ %.3282.ph652, %74 ], [ %.0279487, %58 ], [ %.0279487, %56 ], [ %.0279487, %60 ], [ %.3282.ph652, %260 ], [ %.3282.ph652, %.critedge37 ], [ %.3282.ph652, %265 ], [ %.3282.ph652, %138 ], [ %.3282.ph652, %127 ], [ %.3282.ph652, %140 ]
  call void %6(ptr align 1 %3, i64 16) #18
  call fastcc void @sort.quad_swap_merge__anon_16205(ptr nonnull align 1 %.sink597, ptr nonnull align 1 %15, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5)
  br label %54

54:                                               ; preds = %265, %.sink.split
  %.sink = phi ptr [ %.sink597, %.sink.split ], [ %255, %265 ]
  %.1285 = phi i64 [ %.1285.ph, %.sink.split ], [ %145, %265 ]
  %.1280 = phi ptr [ %.1280.ph, %.sink.split ], [ %.3282.ph652, %265 ]
  %55 = getelementptr inbounds i8, ptr %.sink, i64 %23
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %26

56:                                               ; preds = %26
  call void %6(ptr align 1 %3, i64 1) #18
  %57 = call i8 %2(ptr align 1 %3, ptr align 1 %28, ptr align 1 %32) #18
  %.not328 = icmp eq i8 %57, 1
  br i1 %.not328, label %.sink.split, label %58

58:                                               ; preds = %56
  call void %6(ptr align 1 %3, i64 1) #18
  %59 = call i8 %2(ptr align 1 %3, ptr align 1 %33, ptr align 1 %37) #18
  %.not329 = icmp eq i8 %59, 1
  br i1 %.not329, label %.sink.split, label %60

60:                                               ; preds = %58
  call void %6(ptr align 1 %3, i64 1) #18
  %61 = call i8 %2(ptr align 1 %3, ptr align 1 %38, ptr align 1 %42) #18
  %.not330 = icmp eq i8 %61, 1
  br i1 %.not330, label %.sink.split, label %.preheader

62:                                               ; preds = %26
  call void %6(ptr align 1 %3, i64 1) #18
  %63 = call i8 %2(ptr align 1 %3, ptr align 1 %28, ptr align 1 %32) #18
  %64 = icmp eq i8 %63, 1
  br i1 %64, label %65, label %.critedge4

65:                                               ; preds = %62
  call void %6(ptr align 1 %3, i64 1) #18
  %66 = call i8 %2(ptr align 1 %3, ptr align 1 %33, ptr align 1 %37) #18
  %67 = icmp eq i8 %66, 1
  br i1 %67, label %68, label %.critedge4

68:                                               ; preds = %65
  call void %6(ptr align 1 %3, i64 1) #18
  %69 = call i8 %2(ptr align 1 %3, ptr align 1 %38, ptr align 1 %42) #18
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %.preheader, label %.critedge4

.critedge4:                                       ; preds = %68, %65, %62
  br label %.preheader

.preheader:                                       ; preds = %.critedge4, %68, %60, %26
  %.1299.ph = phi i2 [ 1, %68 ], [ 0, %60 ], [ -2, %26 ], [ -2, %.critedge4 ]
  %.3282.ph = phi ptr [ %.1488, %68 ], [ %.0279487, %60 ], [ %.0279487, %26 ], [ %.0279487, %.critedge4 ]
  br label %.outer

.outer:                                           ; preds = %234, %135, %.preheader
  %.1299.ph651 = phi i2 [ %.1299.ph, %.preheader ], [ 1, %234 ], [ 1, %135 ]
  %.0296.ph = phi i4 [ %46, %.preheader ], [ %164, %234 ], [ %118, %135 ]
  %.0294.ph = phi i4 [ %41, %.preheader ], [ %159, %234 ], [ %113, %135 ]
  %.0292.ph = phi i4 [ %36, %.preheader ], [ %154, %234 ], [ %108, %135 ]
  %.0290.ph = phi i4 [ %31, %.preheader ], [ %149, %234 ], [ %103, %135 ]
  %.2286.ph = phi i64 [ %27, %.preheader ], [ %145, %234 ], [ %99, %135 ]
  %.3282.ph652 = phi ptr [ %.3282.ph, %.preheader ], [ %143, %234 ], [ %97, %135 ]
  %.3.ph = phi ptr [ %.1488, %.preheader ], [ %143, %234 ], [ %97, %135 ]
  br label %71

71:                                               ; preds = %226, %219, %140, %135, %132, %129, %122, %.outer
  %.1299 = phi i2 [ %.1299.ph651, %.outer ], [ 0, %140 ], [ 1, %219 ], [ 0, %226 ], [ -2, %132 ], [ -2, %122 ], [ -2, %129 ], [ -2, %135 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %118, %140 ], [ %164, %219 ], [ %164, %226 ], [ %118, %132 ], [ %118, %122 ], [ %118, %129 ], [ %118, %135 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %113, %140 ], [ %159, %219 ], [ %159, %226 ], [ %113, %132 ], [ %113, %122 ], [ %113, %129 ], [ %113, %135 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %108, %140 ], [ %154, %219 ], [ %154, %226 ], [ %108, %132 ], [ %108, %122 ], [ %108, %129 ], [ %108, %135 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %103, %140 ], [ %149, %219 ], [ %149, %226 ], [ %103, %132 ], [ %103, %122 ], [ %103, %129 ], [ %103, %135 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %99, %140 ], [ %145, %219 ], [ %145, %226 ], [ %99, %132 ], [ %99, %122 ], [ %99, %129 ], [ %99, %135 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %97, %140 ], [ %143, %219 ], [ %143, %226 ], [ %97, %132 ], [ %97, %122 ], [ %97, %129 ], [ %97, %135 ]
  %72 = zext i2 %.1299 to i32
  switch i32 %72, label %73 [
    i32 2, label %74
    i32 0, label %96
    i32 1, label %142
  ]

73:                                               ; preds = %71
  unreachable

74:                                               ; preds = %71
  %75 = icmp eq i4 %.0290, 0
  %. = select i1 %75, i64 %4, i64 0
  %.7 = select i1 %75, i64 0, i64 %4
  %76 = getelementptr inbounds i8, ptr %.3, i64 %.
  call void %5(ptr nonnull align 1 %14, ptr align 1 %76) #18
  %77 = getelementptr inbounds i8, ptr %.3, i64 %.7
  call void %5(ptr align 1 %.3, ptr align 1 %77) #18
  %78 = getelementptr inbounds i8, ptr %.3, i64 %4
  call void %5(ptr align 1 %78, ptr nonnull align 1 %14) #18
  %79 = getelementptr inbounds i8, ptr %.3, i64 %17
  %80 = icmp eq i4 %.0292, 0
  %.8 = select i1 %80, i64 %4, i64 0
  %.9 = select i1 %80, i64 0, i64 %4
  %81 = getelementptr inbounds i8, ptr %79, i64 %.8
  call void %5(ptr nonnull align 1 %14, ptr align 1 %81) #18
  %82 = getelementptr inbounds i8, ptr %79, i64 %.9
  call void %5(ptr align 1 %79, ptr align 1 %82) #18
  %83 = getelementptr inbounds i8, ptr %79, i64 %4
  call void %5(ptr align 1 %83, ptr nonnull align 1 %14) #18
  %84 = getelementptr inbounds i8, ptr %79, i64 %17
  %85 = icmp eq i4 %.0294, 0
  %.10 = select i1 %85, i64 %4, i64 0
  %.11 = select i1 %85, i64 0, i64 %4
  %86 = getelementptr inbounds i8, ptr %84, i64 %.10
  call void %5(ptr nonnull align 1 %14, ptr align 1 %86) #18
  %87 = getelementptr inbounds i8, ptr %84, i64 %.11
  call void %5(ptr align 1 %84, ptr align 1 %87) #18
  %88 = getelementptr inbounds i8, ptr %84, i64 %4
  call void %5(ptr align 1 %88, ptr nonnull align 1 %14) #18
  %89 = getelementptr inbounds i8, ptr %84, i64 %17
  %90 = icmp eq i4 %.0296, 0
  %.12 = select i1 %90, i64 %4, i64 0
  %.13 = select i1 %90, i64 0, i64 %4
  %91 = getelementptr inbounds i8, ptr %89, i64 %.12
  call void %5(ptr nonnull align 1 %14, ptr align 1 %91) #18
  %92 = getelementptr inbounds i8, ptr %89, i64 %.13
  call void %5(ptr align 1 %89, ptr align 1 %92) #18
  %93 = getelementptr inbounds i8, ptr %89, i64 %4
  call void %5(ptr align 1 %93, ptr nonnull align 1 %14) #18
  %94 = getelementptr inbounds i8, ptr %89, i64 %17
  %95 = getelementptr inbounds i8, ptr %94, i64 %25
  br label %.sink.split

96:                                               ; preds = %71
  %97 = getelementptr inbounds i8, ptr %.3, i64 %23
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %98

98:                                               ; preds = %96
  %99 = add i64 %.2286, -1
  call void %6(ptr align 1 %3, i64 4) #18
  %100 = getelementptr inbounds i8, ptr %97, i64 %4
  %101 = call i8 %2(ptr align 1 %3, ptr align 1 %97, ptr align 1 %100) #18
  %102 = icmp eq i8 %101, 1
  %103 = zext i1 %102 to i4
  %104 = getelementptr inbounds i8, ptr %97, i64 %17
  %105 = getelementptr inbounds i8, ptr %97, i64 %18
  %106 = call i8 %2(ptr align 1 %3, ptr align 1 %104, ptr align 1 %105) #18
  %107 = icmp eq i8 %106, 1
  %108 = zext i1 %107 to i4
  %109 = getelementptr inbounds i8, ptr %97, i64 %19
  %110 = getelementptr inbounds i8, ptr %97, i64 %20
  %111 = call i8 %2(ptr align 1 %3, ptr align 1 %109, ptr align 1 %110) #18
  %112 = icmp eq i8 %111, 1
  %113 = zext i1 %112 to i4
  %114 = getelementptr inbounds i8, ptr %97, i64 %21
  %115 = getelementptr inbounds i8, ptr %97, i64 %22
  %116 = call i8 %2(ptr align 1 %3, ptr align 1 %114, ptr align 1 %115) #18
  %117 = icmp eq i8 %116, 1
  %118 = zext i1 %117 to i4
  %119 = or i4 %108, %103
  %120 = or i4 %119, %113
  %121 = or i4 %120, %118
  %.not320 = icmp eq i4 %121, 0
  br i1 %.not320, label %127, label %122

122:                                              ; preds = %98
  %123 = add nuw nsw i4 %108, %103
  %124 = add nuw nsw i4 %123, %113
  %125 = add nuw nsw i4 %124, %118
  %126 = icmp eq i4 %125, 4
  br i1 %126, label %129, label %71

127:                                              ; preds = %98
  call void %6(ptr align 1 %3, i64 1) #18
  %128 = call i8 %2(ptr align 1 %3, ptr align 1 %100, ptr align 1 %104) #18
  %.not321 = icmp eq i8 %128, 1
  br i1 %.not321, label %.sink.split, label %138

129:                                              ; preds = %122
  call void %6(ptr align 1 %3, i64 1) #18
  %130 = call i8 %2(ptr align 1 %3, ptr align 1 %100, ptr align 1 %104) #18
  %131 = icmp eq i8 %130, 1
  br i1 %131, label %132, label %71

132:                                              ; preds = %129
  call void %6(ptr align 1 %3, i64 1) #18
  %133 = call i8 %2(ptr align 1 %3, ptr align 1 %105, ptr align 1 %109) #18
  %134 = icmp eq i8 %133, 1
  br i1 %134, label %135, label %71

135:                                              ; preds = %132
  call void %6(ptr align 1 %3, i64 1) #18
  %136 = call i8 %2(ptr align 1 %3, ptr align 1 %110, ptr align 1 %114) #18
  %137 = icmp eq i8 %136, 1
  br i1 %137, label %.outer, label %71

138:                                              ; preds = %127
  call void %6(ptr align 1 %3, i64 1) #18
  %139 = call i8 %2(ptr align 1 %3, ptr align 1 %105, ptr align 1 %109) #18
  %.not322 = icmp eq i8 %139, 1
  br i1 %.not322, label %.sink.split, label %140

140:                                              ; preds = %138
  call void %6(ptr align 1 %3, i64 1) #18
  %141 = call i8 %2(ptr align 1 %3, ptr align 1 %110, ptr align 1 %114) #18
  %.not323 = icmp eq i8 %141, 1
  br i1 %.not323, label %.sink.split, label %71

142:                                              ; preds = %71
  %143 = getelementptr inbounds i8, ptr %.3, i64 %23
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %168, label %144

144:                                              ; preds = %142
  %145 = add i64 %.2286, -1
  call void %6(ptr align 1 %3, i64 4) #18
  %146 = getelementptr inbounds i8, ptr %143, i64 %4
  %147 = call i8 %2(ptr align 1 %3, ptr align 1 %143, ptr align 1 %146) #18
  %148 = icmp ne i8 %147, 1
  %149 = zext i1 %148 to i4
  %150 = getelementptr inbounds i8, ptr %143, i64 %17
  %151 = getelementptr inbounds i8, ptr %143, i64 %18
  %152 = call i8 %2(ptr align 1 %3, ptr align 1 %150, ptr align 1 %151) #18
  %153 = icmp ne i8 %152, 1
  %154 = zext i1 %153 to i4
  %155 = getelementptr inbounds i8, ptr %143, i64 %19
  %156 = getelementptr inbounds i8, ptr %143, i64 %20
  %157 = call i8 %2(ptr align 1 %3, ptr align 1 %155, ptr align 1 %156) #18
  %158 = icmp ne i8 %157, 1
  %159 = zext i1 %158 to i4
  %160 = getelementptr inbounds i8, ptr %143, i64 %21
  %161 = getelementptr inbounds i8, ptr %143, i64 %22
  %162 = call i8 %2(ptr align 1 %3, ptr align 1 %160, ptr align 1 %161) #18
  %163 = icmp ne i8 %162, 1
  %164 = zext i1 %163 to i4
  %165 = or i4 %154, %149
  %166 = or i4 %165, %159
  %167 = or i4 %166, %164
  %.not315 = icmp eq i4 %167, 0
  br i1 %.not315, label %209, label %.critedge25

168:                                              ; preds = %142
  %169 = and i64 %1, 7
  %170 = icmp eq i64 %169, 7
  br i1 %170, label %305, label %.critedge55

.critedge25:                                      ; preds = %219, %216, %213, %209, %144
  %171 = ptrtoint ptr %.3282.ph652 to i64
  %172 = getelementptr inbounds i8, ptr %143, i64 %24
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  %173 = ptrtoint ptr %172 to i64
  %174 = sub nuw i64 %173, %171
  %175 = or i64 %174, %17
  %176 = and i64 %175, -4294967296
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %183

178:                                              ; preds = %.critedge25
  %179 = trunc i64 %17 to i32
  %180 = trunc i64 %174 to i32
  %181 = udiv i32 %180, %179
  %182 = zext i32 %181 to i64
  br label %185

183:                                              ; preds = %.critedge25
  %184 = udiv i64 %174, %17
  br label %185

185:                                              ; preds = %183, %178
  %186 = phi i64 [ %182, %178 ], [ %184, %183 ]
  %187 = mul nuw i64 %186, %4
  %188 = getelementptr inbounds i8, ptr %.3282.ph652, i64 %187
  %189 = sub i64 0, %187
  %190 = getelementptr inbounds i8, ptr %172, i64 %189
  %191 = and i64 %186, 1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %194, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %194, %185
  %.027.i = phi ptr [ %196, %194 ], [ %190, %185 ]
  %.025.i = phi ptr [ %195, %194 ], [ %188, %185 ]
  %.0.i = phi i64 [ %197, %194 ], [ %186, %185 ]
  %193 = lshr i64 %.0.i, 1
  br label %198

194:                                              ; preds = %185
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %188) #18
  call void %5(ptr nonnull align 1 %188, ptr nonnull align 1 %190) #18
  %195 = getelementptr inbounds i8, ptr %188, i64 %24
  call void %5(ptr nonnull align 1 %190, ptr nonnull align 1 %8) #18
  %196 = getelementptr inbounds i8, ptr %190, i64 %4
  %197 = add i64 %186, -1
  br label %._crit_edge.i

198:                                              ; preds = %200, %._crit_edge.i
  %.029.i = phi ptr [ %172, %._crit_edge.i ], [ %203, %200 ]
  %.128.i = phi ptr [ %.027.i, %._crit_edge.i ], [ %201, %200 ]
  %.126.i = phi ptr [ %.025.i, %._crit_edge.i ], [ %202, %200 ]
  %.024.i = phi ptr [ %.3282.ph652, %._crit_edge.i ], [ %204, %200 ]
  %.1.i = phi i64 [ %193, %._crit_edge.i ], [ %math, %200 ]
  call void %5(ptr nonnull align 1 %9, ptr align 1 %.024.i) #18
  call void %5(ptr align 1 %.024.i, ptr align 1 %.029.i) #18
  call void %5(ptr align 1 %.029.i, ptr nonnull align 1 %9) #18
  call void %5(ptr nonnull align 1 %8, ptr align 1 %.126.i) #18
  call void %5(ptr align 1 %.126.i, ptr align 1 %.128.i) #18
  call void %5(ptr align 1 %.128.i, ptr nonnull align 1 %8) #18
  %199 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i, i64 1)
  %math = extractvalue { i64, i1 } %199, 0
  %ov = extractvalue { i64, i1 } %199, 1
  br i1 %ov, label %sort.quad_reversal.exit, label %200

200:                                              ; preds = %198
  %201 = getelementptr inbounds i8, ptr %.128.i, i64 %4
  %202 = getelementptr inbounds i8, ptr %.126.i, i64 %24
  %203 = getelementptr inbounds i8, ptr %.029.i, i64 %24
  %204 = getelementptr inbounds i8, ptr %.024.i, i64 %4
  br label %198

sort.quad_reversal.exit:                          ; preds = %198
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  %205 = add nuw nsw i4 %154, %149
  %206 = add nuw nsw i4 %205, %159
  %207 = add nuw i4 %206, %164
  %208 = zext i4 %207 to i32
  switch i32 %208, label %.critedge37 [
    i32 4, label %222
    i32 0, label %228
  ]

209:                                              ; preds = %144
  %210 = getelementptr inbounds i8, ptr %143, i64 %24
  call void %6(ptr align 1 %3, i64 1) #18
  %211 = call i8 %2(ptr align 1 %3, ptr align 1 %210, ptr align 1 %143) #18
  %212 = icmp eq i8 %211, 1
  br i1 %212, label %213, label %.critedge25

213:                                              ; preds = %209
  call void %6(ptr align 1 %3, i64 1) #18
  %214 = call i8 %2(ptr align 1 %3, ptr align 1 %146, ptr align 1 %150) #18
  %215 = icmp eq i8 %214, 1
  br i1 %215, label %216, label %.critedge25

216:                                              ; preds = %213
  call void %6(ptr align 1 %3, i64 1) #18
  %217 = call i8 %2(ptr align 1 %3, ptr align 1 %151, ptr align 1 %155) #18
  %218 = icmp eq i8 %217, 1
  br i1 %218, label %219, label %.critedge25

219:                                              ; preds = %216
  call void %6(ptr align 1 %3, i64 1) #18
  %220 = call i8 %2(ptr align 1 %3, ptr align 1 %156, ptr align 1 %160) #18
  %221 = icmp eq i8 %220, 1
  br i1 %221, label %71, label %.critedge25

222:                                              ; preds = %sort.quad_reversal.exit
  call void %6(ptr align 1 %3, i64 1) #18
  %223 = call i8 %2(ptr align 1 %3, ptr align 1 %146, ptr align 1 %150) #18
  %.not316 = icmp eq i8 %223, 1
  br i1 %.not316, label %.critedge37, label %224

224:                                              ; preds = %222
  call void %6(ptr align 1 %3, i64 1) #18
  %225 = call i8 %2(ptr align 1 %3, ptr align 1 %151, ptr align 1 %155) #18
  %.not317 = icmp eq i8 %225, 1
  br i1 %.not317, label %.critedge37, label %226

226:                                              ; preds = %224
  call void %6(ptr align 1 %3, i64 1) #18
  %227 = call i8 %2(ptr align 1 %3, ptr align 1 %156, ptr align 1 %160) #18
  %.not318 = icmp eq i8 %227, 1
  br i1 %.not318, label %.critedge37, label %71

228:                                              ; preds = %sort.quad_reversal.exit
  call void %6(ptr align 1 %3, i64 1) #18
  %229 = call i8 %2(ptr align 1 %3, ptr align 1 %146, ptr align 1 %150) #18
  %230 = icmp eq i8 %229, 1
  br i1 %230, label %231, label %.critedge37

231:                                              ; preds = %228
  call void %6(ptr align 1 %3, i64 1) #18
  %232 = call i8 %2(ptr align 1 %3, ptr align 1 %151, ptr align 1 %155) #18
  %233 = icmp eq i8 %232, 1
  br i1 %233, label %234, label %.critedge37

234:                                              ; preds = %231
  call void %6(ptr align 1 %3, i64 1) #18
  %235 = call i8 %2(ptr align 1 %3, ptr align 1 %156, ptr align 1 %160) #18
  %236 = icmp eq i8 %235, 1
  br i1 %236, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %234, %231, %228, %226, %224, %222, %sort.quad_reversal.exit
  %237 = icmp ne i8 %162, 1
  %238 = icmp ne i8 %157, 1
  %239 = icmp ne i8 %152, 1
  %240 = icmp ne i8 %147, 1
  %.42 = select i1 %240, i64 0, i64 %4
  %.43 = select i1 %240, i64 %4, i64 0
  %241 = getelementptr inbounds i8, ptr %143, i64 %.43
  call void %5(ptr nonnull align 1 %14, ptr align 1 %241) #18
  %242 = getelementptr inbounds i8, ptr %143, i64 %.42
  call void %5(ptr align 1 %143, ptr align 1 %242) #18
  call void %5(ptr align 1 %146, ptr nonnull align 1 %14) #18
  %.44 = select i1 %239, i64 0, i64 %4
  %.45 = select i1 %239, i64 %4, i64 0
  %243 = getelementptr inbounds i8, ptr %150, i64 %.45
  call void %5(ptr nonnull align 1 %14, ptr align 1 %243) #18
  %244 = getelementptr inbounds i8, ptr %150, i64 %.44
  call void %5(ptr align 1 %150, ptr align 1 %244) #18
  %245 = getelementptr inbounds i8, ptr %150, i64 %4
  call void %5(ptr align 1 %245, ptr nonnull align 1 %14) #18
  %246 = getelementptr inbounds i8, ptr %150, i64 %17
  %.46 = select i1 %238, i64 0, i64 %4
  %.47 = select i1 %238, i64 %4, i64 0
  %247 = getelementptr inbounds i8, ptr %246, i64 %.47
  call void %5(ptr nonnull align 1 %14, ptr align 1 %247) #18
  %248 = getelementptr inbounds i8, ptr %246, i64 %.46
  call void %5(ptr align 1 %246, ptr align 1 %248) #18
  %249 = getelementptr inbounds i8, ptr %246, i64 %4
  call void %5(ptr align 1 %249, ptr nonnull align 1 %14) #18
  %250 = getelementptr inbounds i8, ptr %246, i64 %17
  %.48 = select i1 %237, i64 0, i64 %4
  %.49 = select i1 %237, i64 %4, i64 0
  %251 = getelementptr inbounds i8, ptr %250, i64 %.49
  call void %5(ptr nonnull align 1 %14, ptr align 1 %251) #18
  %252 = getelementptr inbounds i8, ptr %250, i64 %.48
  call void %5(ptr align 1 %250, ptr align 1 %252) #18
  %253 = getelementptr inbounds i8, ptr %250, i64 %4
  call void %5(ptr align 1 %253, ptr nonnull align 1 %14) #18
  %254 = getelementptr inbounds i8, ptr %250, i64 %17
  %255 = getelementptr inbounds i8, ptr %254, i64 %25
  %256 = getelementptr inbounds i8, ptr %255, i64 %4
  %257 = getelementptr inbounds i8, ptr %255, i64 %17
  call void %6(ptr align 1 %3, i64 1) #18
  %258 = call i8 %2(ptr align 1 %3, ptr align 1 %256, ptr align 1 %257) #18
  %259 = icmp eq i8 %258, 1
  br i1 %259, label %.sink.split, label %260

260:                                              ; preds = %.critedge37
  %261 = getelementptr inbounds i8, ptr %255, i64 %18
  %262 = getelementptr inbounds i8, ptr %255, i64 %19
  call void %6(ptr align 1 %3, i64 1) #18
  %263 = call i8 %2(ptr align 1 %3, ptr align 1 %261, ptr align 1 %262) #18
  %264 = icmp eq i8 %263, 1
  br i1 %264, label %.sink.split, label %265

265:                                              ; preds = %260
  %266 = getelementptr inbounds i8, ptr %255, i64 %20
  %267 = getelementptr inbounds i8, ptr %255, i64 %21
  call void %6(ptr align 1 %3, i64 1) #18
  %268 = call i8 %2(ptr align 1 %3, ptr align 1 %266, ptr align 1 %267) #18
  %269 = icmp eq i8 %268, 1
  br i1 %269, label %.sink.split, label %54

270:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %305
  %271 = getelementptr inbounds i8, ptr %143, i64 %24
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  %272 = ptrtoint ptr %271 to i64
  %273 = ptrtoint ptr %.3282.ph652 to i64
  %274 = sub nuw i64 %272, %273
  %275 = or i64 %274, %17
  %276 = and i64 %275, -4294967296
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %283

278:                                              ; preds = %270
  %279 = trunc i64 %17 to i32
  %280 = trunc i64 %274 to i32
  %281 = udiv i32 %280, %279
  %282 = zext i32 %281 to i64
  br label %285

283:                                              ; preds = %270
  %284 = udiv i64 %274, %17
  br label %285

285:                                              ; preds = %283, %278
  %286 = phi i64 [ %282, %278 ], [ %284, %283 ]
  %287 = mul nuw i64 %286, %4
  %288 = getelementptr inbounds i8, ptr %.3282.ph652, i64 %287
  %289 = sub i64 0, %287
  %290 = getelementptr inbounds i8, ptr %271, i64 %289
  %291 = and i64 %286, 1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %294, label %._crit_edge.i332

._crit_edge.i332:                                 ; preds = %294, %285
  %.027.i334 = phi ptr [ %296, %294 ], [ %290, %285 ]
  %.025.i335 = phi ptr [ %295, %294 ], [ %288, %285 ]
  %.0.i336 = phi i64 [ %297, %294 ], [ %286, %285 ]
  %293 = lshr i64 %.0.i336, 1
  br label %298

294:                                              ; preds = %285
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %288) #18
  call void %5(ptr nonnull align 1 %288, ptr nonnull align 1 %290) #18
  %295 = getelementptr inbounds i8, ptr %288, i64 %24
  call void %5(ptr nonnull align 1 %290, ptr nonnull align 1 %8) #18
  %296 = getelementptr inbounds i8, ptr %290, i64 %4
  %297 = add i64 %286, -1
  br label %._crit_edge.i332

298:                                              ; preds = %300, %._crit_edge.i332
  %.029.i337 = phi ptr [ %271, %._crit_edge.i332 ], [ %303, %300 ]
  %.128.i338 = phi ptr [ %.027.i334, %._crit_edge.i332 ], [ %301, %300 ]
  %.126.i339 = phi ptr [ %.025.i335, %._crit_edge.i332 ], [ %302, %300 ]
  %.024.i340 = phi ptr [ %.3282.ph652, %._crit_edge.i332 ], [ %304, %300 ]
  %.1.i341 = phi i64 [ %293, %._crit_edge.i332 ], [ %math862, %300 ]
  call void %5(ptr nonnull align 1 %9, ptr align 1 %.024.i340) #18
  call void %5(ptr align 1 %.024.i340, ptr align 1 %.029.i337) #18
  call void %5(ptr align 1 %.029.i337, ptr nonnull align 1 %9) #18
  call void %5(ptr nonnull align 1 %8, ptr align 1 %.126.i339) #18
  call void %5(ptr align 1 %.126.i339, ptr align 1 %.128.i338) #18
  call void %5(ptr align 1 %.128.i338, ptr nonnull align 1 %8) #18
  %299 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i341, i64 1)
  %math862 = extractvalue { i64, i1 } %299, 0
  %ov863 = extractvalue { i64, i1 } %299, 1
  br i1 %ov863, label %sort.quad_reversal.exit342, label %300

300:                                              ; preds = %298
  %301 = getelementptr inbounds i8, ptr %.128.i338, i64 %4
  %302 = getelementptr inbounds i8, ptr %.126.i339, i64 %24
  %303 = getelementptr inbounds i8, ptr %.029.i337, i64 %24
  %304 = getelementptr inbounds i8, ptr %.024.i340, i64 %4
  br label %298

sort.quad_reversal.exit342:                       ; preds = %298
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  br label %.loopexit

305:                                              ; preds = %168
  %306 = getelementptr inbounds i8, ptr %143, i64 %20
  %307 = getelementptr inbounds i8, ptr %143, i64 %21
  call void %6(ptr align 1 %3, i64 1) #18
  %308 = call i8 %2(ptr align 1 %3, ptr align 1 %306, ptr align 1 %307) #18
  %.not314 = icmp eq i8 %308, 1
  br i1 %.not314, label %.critedge55.thread, label %270

.critedge55:                                      ; preds = %168
  %309 = icmp ugt i64 %169, 5
  br i1 %309, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %305
  %310 = getelementptr inbounds i8, ptr %143, i64 %19
  %311 = getelementptr inbounds i8, ptr %143, i64 %20
  call void %6(ptr align 1 %3, i64 1) #18
  %312 = call i8 %2(ptr align 1 %3, ptr align 1 %310, ptr align 1 %311) #18
  %.not313 = icmp eq i8 %312, 1
  br i1 %.not313, label %.critedge57.thread, label %270

.critedge57:                                      ; preds = %.critedge55
  %313 = icmp eq i64 %169, 5
  br i1 %313, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %314 = getelementptr inbounds i8, ptr %143, i64 %18
  %315 = getelementptr inbounds i8, ptr %143, i64 %19
  call void %6(ptr align 1 %3, i64 1) #18
  %316 = call i8 %2(ptr align 1 %3, ptr align 1 %314, ptr align 1 %315) #18
  %.not312 = icmp eq i8 %316, 1
  br i1 %.not312, label %.critedge59.thread, label %270

.critedge59:                                      ; preds = %.critedge57
  %317 = icmp ugt i64 %169, 3
  br i1 %317, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %318 = getelementptr inbounds i8, ptr %143, i64 %17
  %319 = getelementptr inbounds i8, ptr %143, i64 %18
  call void %6(ptr align 1 %3, i64 1) #18
  %320 = call i8 %2(ptr align 1 %3, ptr align 1 %318, ptr align 1 %319) #18
  %.not311 = icmp eq i8 %320, 1
  br i1 %.not311, label %.critedge61.thread, label %270

.critedge61:                                      ; preds = %.critedge59
  %321 = icmp eq i64 %169, 3
  br i1 %321, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %322 = getelementptr inbounds i8, ptr %143, i64 %4
  %323 = getelementptr inbounds i8, ptr %143, i64 %17
  call void %6(ptr align 1 %3, i64 1) #18
  %324 = call i8 %2(ptr align 1 %3, ptr align 1 %322, ptr align 1 %323) #18
  %.not310 = icmp eq i8 %324, 1
  br i1 %.not310, label %.critedge63.thread, label %270

.critedge63:                                      ; preds = %.critedge61
  %325 = icmp ugt i64 %169, 1
  br i1 %325, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %326 = getelementptr inbounds i8, ptr %143, i64 %4
  call void %6(ptr align 1 %3, i64 1) #18
  %327 = call i8 %2(ptr align 1 %3, ptr align 1 %143, ptr align 1 %326) #18
  %.not309 = icmp eq i8 %327, 1
  br i1 %.not309, label %.critedge65.thread, label %270

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %169, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %328 = getelementptr inbounds i8, ptr %143, i64 %24
  call void %6(ptr align 1 %3, i64 1) #18
  %329 = call i8 %2(ptr align 1 %3, ptr align 1 %328, ptr align 1 %143) #18
  %.not308 = icmp eq i8 %329, 1
  br i1 %.not308, label %.critedge67, label %270

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %330 = mul nuw i64 %169, %4
  %331 = getelementptr inbounds i8, ptr %143, i64 %330
  %332 = getelementptr inbounds i8, ptr %331, i64 %24
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  %333 = ptrtoint ptr %332 to i64
  %334 = ptrtoint ptr %.3282.ph652 to i64
  %335 = sub nuw i64 %333, %334
  %336 = or i64 %335, %17
  %337 = and i64 %336, -4294967296
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %344

339:                                              ; preds = %.critedge67
  %340 = trunc i64 %17 to i32
  %341 = trunc i64 %335 to i32
  %342 = udiv i32 %341, %340
  %343 = zext i32 %342 to i64
  br label %346

344:                                              ; preds = %.critedge67
  %345 = udiv i64 %335, %17
  br label %346

346:                                              ; preds = %344, %339
  %347 = phi i64 [ %343, %339 ], [ %345, %344 ]
  %348 = mul nuw i64 %347, %4
  %349 = getelementptr inbounds i8, ptr %.3282.ph652, i64 %348
  %350 = sub i64 0, %348
  %351 = getelementptr inbounds i8, ptr %332, i64 %350
  %352 = and i64 %347, 1
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %355, label %._crit_edge.i344

._crit_edge.i344:                                 ; preds = %355, %346
  %.027.i346 = phi ptr [ %357, %355 ], [ %351, %346 ]
  %.025.i347 = phi ptr [ %356, %355 ], [ %349, %346 ]
  %.0.i348 = phi i64 [ %358, %355 ], [ %347, %346 ]
  %354 = lshr i64 %.0.i348, 1
  br label %359

355:                                              ; preds = %346
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %349) #18
  call void %5(ptr nonnull align 1 %349, ptr nonnull align 1 %351) #18
  %356 = getelementptr inbounds i8, ptr %349, i64 %24
  call void %5(ptr nonnull align 1 %351, ptr nonnull align 1 %8) #18
  %357 = getelementptr inbounds i8, ptr %351, i64 %4
  %358 = add i64 %347, -1
  br label %._crit_edge.i344

359:                                              ; preds = %361, %._crit_edge.i344
  %.029.i349 = phi ptr [ %332, %._crit_edge.i344 ], [ %364, %361 ]
  %.128.i350 = phi ptr [ %.027.i346, %._crit_edge.i344 ], [ %362, %361 ]
  %.126.i351 = phi ptr [ %.025.i347, %._crit_edge.i344 ], [ %363, %361 ]
  %.024.i352 = phi ptr [ %.3282.ph652, %._crit_edge.i344 ], [ %365, %361 ]
  %.1.i353 = phi i64 [ %354, %._crit_edge.i344 ], [ %math868, %361 ]
  call void %5(ptr nonnull align 1 %9, ptr align 1 %.024.i352) #18
  call void %5(ptr align 1 %.024.i352, ptr align 1 %.029.i349) #18
  call void %5(ptr align 1 %.029.i349, ptr nonnull align 1 %9) #18
  call void %5(ptr nonnull align 1 %8, ptr align 1 %.126.i351) #18
  call void %5(ptr align 1 %.126.i351, ptr align 1 %.128.i350) #18
  call void %5(ptr align 1 %.128.i350, ptr nonnull align 1 %8) #18
  %360 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i353, i64 1)
  %math868 = extractvalue { i64, i1 } %360, 0
  %ov869 = extractvalue { i64, i1 } %360, 1
  br i1 %ov869, label %sort.quad_reversal.exit354, label %361

361:                                              ; preds = %359
  %362 = getelementptr inbounds i8, ptr %.128.i350, i64 %4
  %363 = getelementptr inbounds i8, ptr %.126.i351, i64 %24
  %364 = getelementptr inbounds i8, ptr %.029.i349, i64 %24
  %365 = getelementptr inbounds i8, ptr %.024.i352, i64 %4
  br label %359

sort.quad_reversal.exit354:                       ; preds = %359
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  %366 = icmp eq ptr %.3282.ph652, %0
  br i1 %366, label %common.ret, label %367

common.ret:                                       ; preds = %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit354
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit354 ], [ true, %._crit_edge ], [ true, %.loopexit.i ]
  ret i1 %common.ret.op

367:                                              ; preds = %.loopexit, %sort.quad_reversal.exit354
  %.not302490 = icmp ult i64 %1, 32
  br i1 %.not302490, label %._crit_edge, label %.lr.ph493

.lr.ph493:                                        ; preds = %367
  %368 = lshr i64 %1, 5
  %369 = mul nuw i64 %4, 7
  %370 = shl nuw i64 %4, 3
  %371 = mul nuw i64 %4, 15
  %372 = shl nuw i64 %4, 4
  %373 = mul nuw i64 %4, 23
  %374 = mul nuw i64 %4, 24
  %375 = sub i64 0, %4
  %376 = getelementptr inbounds i8, ptr %15, i64 %371
  %377 = getelementptr inbounds i8, ptr %15, i64 %372
  %378 = getelementptr inbounds i8, ptr %377, i64 %371
  %379 = getelementptr inbounds i8, ptr %377, i64 %375
  %380 = getelementptr inbounds i8, ptr %379, i64 %372
  %381 = mul nuw i64 %4, 31
  %382 = shl i64 %4, 5
  %.167.i = getelementptr inbounds i8, ptr %15, i64 %4
  %383 = getelementptr inbounds i8, ptr %376, i64 %375
  %.167.i.1 = getelementptr inbounds i8, ptr %.167.i, i64 %4
  %384 = getelementptr inbounds i8, ptr %383, i64 %375
  %.167.i.2 = getelementptr inbounds i8, ptr %.167.i.1, i64 %4
  %385 = getelementptr inbounds i8, ptr %384, i64 %375
  %.167.i.3 = getelementptr inbounds i8, ptr %.167.i.2, i64 %4
  %386 = getelementptr inbounds i8, ptr %385, i64 %375
  %.167.i.4 = getelementptr inbounds i8, ptr %.167.i.3, i64 %4
  %387 = getelementptr inbounds i8, ptr %386, i64 %375
  %.167.i.5 = getelementptr inbounds i8, ptr %.167.i.4, i64 %4
  %388 = getelementptr inbounds i8, ptr %387, i64 %375
  %.167.i.6 = getelementptr inbounds i8, ptr %.167.i.5, i64 %4
  %389 = getelementptr inbounds i8, ptr %388, i64 %375
  %.167.i370 = getelementptr inbounds i8, ptr %377, i64 %4
  %390 = getelementptr inbounds i8, ptr %378, i64 %375
  %.167.i370.1 = getelementptr inbounds i8, ptr %.167.i370, i64 %4
  %391 = getelementptr inbounds i8, ptr %390, i64 %375
  %.167.i370.2 = getelementptr inbounds i8, ptr %.167.i370.1, i64 %4
  %392 = getelementptr inbounds i8, ptr %391, i64 %375
  %.167.i370.3 = getelementptr inbounds i8, ptr %.167.i370.2, i64 %4
  %393 = getelementptr inbounds i8, ptr %392, i64 %375
  %.167.i370.4 = getelementptr inbounds i8, ptr %.167.i370.3, i64 %4
  %394 = getelementptr inbounds i8, ptr %393, i64 %375
  %.167.i370.5 = getelementptr inbounds i8, ptr %.167.i370.4, i64 %4
  %395 = getelementptr inbounds i8, ptr %394, i64 %375
  %.167.i370.6 = getelementptr inbounds i8, ptr %.167.i370.5, i64 %4
  %396 = getelementptr inbounds i8, ptr %395, i64 %375
  %uglygep852 = getelementptr i8, ptr %0, i64 %4
  br label %398

.loopexit:                                        ; preds = %sort.quad_reversal.exit342, %96, %54, %7
  %.0.ph = phi ptr [ %143, %sort.quad_reversal.exit342 ], [ %0, %7 ], [ %97, %96 ], [ %55, %54 ]
  %397 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %.0.ph, i64 %397, ptr nonnull align 1 %15, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr nonnull readonly align 1 %6)
  br label %367

398:                                              ; preds = %404, %.lr.ph493
  %lsr.iv853 = phi ptr [ %uglygep852, %.lr.ph493 ], [ %uglygep854, %404 ]
  %.5492 = phi ptr [ %0, %.lr.ph493 ], [ %406, %404 ]
  %.4288491 = phi i64 [ %368, %.lr.ph493 ], [ %405, %404 ]
  %399 = getelementptr inbounds i8, ptr %.5492, i64 %369
  %400 = getelementptr inbounds i8, ptr %.5492, i64 %370
  call void %6(ptr align 1 %3, i64 1) #18
  %401 = call i8 %2(ptr align 1 %3, ptr align 1 %399, ptr align 1 %400) #18
  %.not303 = icmp eq i8 %401, 1
  br i1 %.not303, label %.critedge69, label %407

._crit_edge:                                      ; preds = %404, %367
  %.5.lcssa = phi ptr [ %0, %367 ], [ %406, %404 ]
  %402 = and i64 %1, 31
  %403 = icmp ugt i64 %402, 8
  br i1 %403, label %.preheader.lr.ph.i, label %common.ret

404:                                              ; preds = %sort.parity_merge__anon_16203.exit406, %411
  %405 = add nsw i64 %.4288491, -1
  %406 = getelementptr inbounds i8, ptr %.5492, i64 %382
  %uglygep854 = getelementptr i8, ptr %lsr.iv853, i64 %382
  %.not302 = icmp eq i64 %405, 0
  br i1 %.not302, label %._crit_edge, label %398

407:                                              ; preds = %398
  %408 = getelementptr inbounds i8, ptr %.5492, i64 %371
  %409 = getelementptr inbounds i8, ptr %.5492, i64 %372
  call void %6(ptr align 1 %3, i64 1) #18
  %410 = call i8 %2(ptr align 1 %3, ptr align 1 %408, ptr align 1 %409) #18
  %.not304 = icmp eq i8 %410, 1
  br i1 %.not304, label %.critedge69, label %411

411:                                              ; preds = %407
  %412 = getelementptr inbounds i8, ptr %.5492, i64 %373
  %413 = getelementptr inbounds i8, ptr %.5492, i64 %374
  call void %6(ptr align 1 %3, i64 1) #18
  %414 = call i8 %2(ptr align 1 %3, ptr align 1 %412, ptr align 1 %413) #18
  %.not305 = icmp eq i8 %414, 1
  br i1 %.not305, label %.critedge69, label %404

.critedge69:                                      ; preds = %411, %407, %398
  %415 = getelementptr inbounds i8, ptr %400, i64 %375
  %416 = getelementptr inbounds i8, ptr %415, i64 %370
  call void %6(ptr align 1 %3, i64 16) #18
  %417 = call i8 %2(ptr align 1 %3, ptr align 1 %.5492, ptr nonnull align 1 %400) #18
  %.not.i = icmp eq i8 %417, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %400, ptr %.5492
  call void %5(ptr nonnull align 1 %15, ptr align 1 %.sroa.speculated21.i) #18
  %418 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 %4
  %.0..i = select i1 %.not.i, ptr %.5492, ptr %418
  %..061.i = select i1 %.not.i, ptr %418, ptr %400
  %419 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i, ptr align 1 %..061.i) #18
  %.not76.i = icmp eq i8 %419, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  call void %5(ptr nonnull align 1 %.167.i, ptr align 1 %.sroa.speculated.i) #18
  %420 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %4
  %..364.i = select i1 %.not76.i, ptr %420, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %420
  %421 = call i8 %2(ptr align 1 %3, ptr align 1 %415, ptr align 1 %416) #18
  %422 = icmp eq i8 %421, 1
  %.sroa.speculated40.i = select i1 %422, ptr %415, ptr %416
  call void %5(ptr nonnull align 1 %376, ptr align 1 %.sroa.speculated40.i) #18
  %423 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 %375
  %.171.i = select i1 %422, ptr %416, ptr %423
  %.169.i = select i1 %422, ptr %423, ptr %415
  %424 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i, ptr align 1 %..364.i) #18
  %.not76.i.1 = icmp eq i8 %424, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  call void %5(ptr nonnull align 1 %.167.i.1, ptr align 1 %.sroa.speculated.i.1) #18
  %425 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 %4
  %..364.i.1 = select i1 %.not76.i.1, ptr %425, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %425
  %426 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i, ptr align 1 %.171.i) #18
  %427 = icmp eq i8 %426, 1
  %.sroa.speculated40.i.1 = select i1 %427, ptr %.169.i, ptr %.171.i
  call void %5(ptr nonnull align 1 %383, ptr align 1 %.sroa.speculated40.i.1) #18
  %428 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 %375
  %.171.i.1 = select i1 %427, ptr %.171.i, ptr %428
  %.169.i.1 = select i1 %427, ptr %428, ptr %.169.i
  %429 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.1, ptr align 1 %..364.i.1) #18
  %.not76.i.2 = icmp eq i8 %429, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  call void %5(ptr nonnull align 1 %.167.i.2, ptr align 1 %.sroa.speculated.i.2) #18
  %430 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 %4
  %..364.i.2 = select i1 %.not76.i.2, ptr %430, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %430
  %431 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.1, ptr align 1 %.171.i.1) #18
  %432 = icmp eq i8 %431, 1
  %.sroa.speculated40.i.2 = select i1 %432, ptr %.169.i.1, ptr %.171.i.1
  call void %5(ptr nonnull align 1 %384, ptr align 1 %.sroa.speculated40.i.2) #18
  %433 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 %375
  %.171.i.2 = select i1 %432, ptr %.171.i.1, ptr %433
  %.169.i.2 = select i1 %432, ptr %433, ptr %.169.i.1
  %434 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.2, ptr align 1 %..364.i.2) #18
  %.not76.i.3 = icmp eq i8 %434, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  call void %5(ptr nonnull align 1 %.167.i.3, ptr align 1 %.sroa.speculated.i.3) #18
  %435 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 %4
  %..364.i.3 = select i1 %.not76.i.3, ptr %435, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %435
  %436 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.2, ptr align 1 %.171.i.2) #18
  %437 = icmp eq i8 %436, 1
  %.sroa.speculated40.i.3 = select i1 %437, ptr %.169.i.2, ptr %.171.i.2
  call void %5(ptr nonnull align 1 %385, ptr align 1 %.sroa.speculated40.i.3) #18
  %438 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 %375
  %.171.i.3 = select i1 %437, ptr %.171.i.2, ptr %438
  %.169.i.3 = select i1 %437, ptr %438, ptr %.169.i.2
  %439 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.3, ptr align 1 %..364.i.3) #18
  %.not76.i.4 = icmp eq i8 %439, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  call void %5(ptr nonnull align 1 %.167.i.4, ptr align 1 %.sroa.speculated.i.4) #18
  %440 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 %4
  %..364.i.4 = select i1 %.not76.i.4, ptr %440, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %440
  %441 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.3, ptr align 1 %.171.i.3) #18
  %442 = icmp eq i8 %441, 1
  %.sroa.speculated40.i.4 = select i1 %442, ptr %.169.i.3, ptr %.171.i.3
  call void %5(ptr nonnull align 1 %386, ptr align 1 %.sroa.speculated40.i.4) #18
  %443 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 %375
  %.171.i.4 = select i1 %442, ptr %.171.i.3, ptr %443
  %.169.i.4 = select i1 %442, ptr %443, ptr %.169.i.3
  %444 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.4, ptr align 1 %..364.i.4) #18
  %.not76.i.5 = icmp eq i8 %444, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  call void %5(ptr align 1 %.167.i.5, ptr align 1 %.sroa.speculated.i.5) #18
  %445 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 %4
  %..364.i.5 = select i1 %.not76.i.5, ptr %445, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %445
  %446 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.4, ptr align 1 %.171.i.4) #18
  %447 = icmp eq i8 %446, 1
  %.sroa.speculated40.i.5 = select i1 %447, ptr %.169.i.4, ptr %.171.i.4
  call void %5(ptr align 1 %387, ptr align 1 %.sroa.speculated40.i.5) #18
  %448 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 %375
  %.171.i.5 = select i1 %447, ptr %.171.i.4, ptr %448
  %.169.i.5 = select i1 %447, ptr %448, ptr %.169.i.4
  %449 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.5, ptr align 1 %..364.i.5) #18
  %.not76.i.6 = icmp eq i8 %449, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  call void %5(ptr align 1 %.167.i.6, ptr align 1 %.sroa.speculated.i.6) #18
  %450 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.5, ptr align 1 %.171.i.5) #18
  %451 = icmp eq i8 %450, 1
  %.sroa.speculated40.i.6 = select i1 %451, ptr %.169.i.5, ptr %.171.i.5
  call void %5(ptr align 1 %388, ptr align 1 %.sroa.speculated40.i.6) #18
  %452 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 %375
  %.171.i.6 = select i1 %451, ptr %.171.i.5, ptr %452
  %.169.i.6 = select i1 %451, ptr %452, ptr %.169.i.5
  %453 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.6, ptr align 1 %.171.i.6) #18
  %454 = icmp eq i8 %453, 1
  %.sroa.speculated46.i = select i1 %454, ptr %.169.i.6, ptr %.171.i.6
  call void %5(ptr align 1 %389, ptr align 1 %.sroa.speculated46.i) #18
  %455 = getelementptr inbounds i8, ptr %.5492, i64 %372
  %456 = getelementptr inbounds i8, ptr %455, i64 %370
  %457 = getelementptr inbounds i8, ptr %456, i64 %375
  %458 = getelementptr inbounds i8, ptr %457, i64 %370
  call void %6(ptr align 1 %3, i64 16) #18
  %459 = call i8 %2(ptr align 1 %3, ptr align 1 %455, ptr nonnull align 1 %456) #18
  %.not.i359 = icmp eq i8 %459, 1
  %.sroa.speculated21.i360 = select i1 %.not.i359, ptr %456, ptr %455
  call void %5(ptr nonnull align 1 %377, ptr align 1 %.sroa.speculated21.i360) #18
  %460 = getelementptr inbounds i8, ptr %.sroa.speculated21.i360, i64 %4
  %.0..i361 = select i1 %.not.i359, ptr %455, ptr %460
  %..061.i362 = select i1 %.not.i359, ptr %460, ptr %456
  %461 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i361, ptr align 1 %..061.i362) #18
  %.not76.i371 = icmp eq i8 %461, 1
  %.sroa.speculated.i372 = select i1 %.not76.i371, ptr %..061.i362, ptr %.0..i361
  call void %5(ptr nonnull align 1 %.167.i370, ptr align 1 %.sroa.speculated.i372) #18
  %462 = getelementptr inbounds i8, ptr %.sroa.speculated.i372, i64 %4
  %..364.i373 = select i1 %.not76.i371, ptr %462, ptr %..061.i362
  %.3..i374 = select i1 %.not76.i371, ptr %.0..i361, ptr %462
  %463 = call i8 %2(ptr align 1 %3, ptr align 1 %457, ptr align 1 %458) #18
  %464 = icmp eq i8 %463, 1
  %.sroa.speculated40.i375 = select i1 %464, ptr %457, ptr %458
  call void %5(ptr nonnull align 1 %378, ptr align 1 %.sroa.speculated40.i375) #18
  %465 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375, i64 %375
  %.171.i376 = select i1 %464, ptr %458, ptr %465
  %.169.i377 = select i1 %464, ptr %465, ptr %457
  %466 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374, ptr align 1 %..364.i373) #18
  %.not76.i371.1 = icmp eq i8 %466, 1
  %.sroa.speculated.i372.1 = select i1 %.not76.i371.1, ptr %..364.i373, ptr %.3..i374
  call void %5(ptr nonnull align 1 %.167.i370.1, ptr align 1 %.sroa.speculated.i372.1) #18
  %467 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.1, i64 %4
  %..364.i373.1 = select i1 %.not76.i371.1, ptr %467, ptr %..364.i373
  %.3..i374.1 = select i1 %.not76.i371.1, ptr %.3..i374, ptr %467
  %468 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377, ptr align 1 %.171.i376) #18
  %469 = icmp eq i8 %468, 1
  %.sroa.speculated40.i375.1 = select i1 %469, ptr %.169.i377, ptr %.171.i376
  call void %5(ptr nonnull align 1 %390, ptr align 1 %.sroa.speculated40.i375.1) #18
  %470 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.1, i64 %375
  %.171.i376.1 = select i1 %469, ptr %.171.i376, ptr %470
  %.169.i377.1 = select i1 %469, ptr %470, ptr %.169.i377
  %471 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.1, ptr align 1 %..364.i373.1) #18
  %.not76.i371.2 = icmp eq i8 %471, 1
  %.sroa.speculated.i372.2 = select i1 %.not76.i371.2, ptr %..364.i373.1, ptr %.3..i374.1
  call void %5(ptr nonnull align 1 %.167.i370.2, ptr align 1 %.sroa.speculated.i372.2) #18
  %472 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.2, i64 %4
  %..364.i373.2 = select i1 %.not76.i371.2, ptr %472, ptr %..364.i373.1
  %.3..i374.2 = select i1 %.not76.i371.2, ptr %.3..i374.1, ptr %472
  %473 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.1, ptr align 1 %.171.i376.1) #18
  %474 = icmp eq i8 %473, 1
  %.sroa.speculated40.i375.2 = select i1 %474, ptr %.169.i377.1, ptr %.171.i376.1
  call void %5(ptr nonnull align 1 %391, ptr align 1 %.sroa.speculated40.i375.2) #18
  %475 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.2, i64 %375
  %.171.i376.2 = select i1 %474, ptr %.171.i376.1, ptr %475
  %.169.i377.2 = select i1 %474, ptr %475, ptr %.169.i377.1
  %476 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.2, ptr align 1 %..364.i373.2) #18
  %.not76.i371.3 = icmp eq i8 %476, 1
  %.sroa.speculated.i372.3 = select i1 %.not76.i371.3, ptr %..364.i373.2, ptr %.3..i374.2
  call void %5(ptr nonnull align 1 %.167.i370.3, ptr align 1 %.sroa.speculated.i372.3) #18
  %477 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.3, i64 %4
  %..364.i373.3 = select i1 %.not76.i371.3, ptr %477, ptr %..364.i373.2
  %.3..i374.3 = select i1 %.not76.i371.3, ptr %.3..i374.2, ptr %477
  %478 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.2, ptr align 1 %.171.i376.2) #18
  %479 = icmp eq i8 %478, 1
  %.sroa.speculated40.i375.3 = select i1 %479, ptr %.169.i377.2, ptr %.171.i376.2
  call void %5(ptr nonnull align 1 %392, ptr align 1 %.sroa.speculated40.i375.3) #18
  %480 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.3, i64 %375
  %.171.i376.3 = select i1 %479, ptr %.171.i376.2, ptr %480
  %.169.i377.3 = select i1 %479, ptr %480, ptr %.169.i377.2
  %481 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.3, ptr align 1 %..364.i373.3) #18
  %.not76.i371.4 = icmp eq i8 %481, 1
  %.sroa.speculated.i372.4 = select i1 %.not76.i371.4, ptr %..364.i373.3, ptr %.3..i374.3
  call void %5(ptr align 1 %.167.i370.4, ptr align 1 %.sroa.speculated.i372.4) #18
  %482 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.4, i64 %4
  %..364.i373.4 = select i1 %.not76.i371.4, ptr %482, ptr %..364.i373.3
  %.3..i374.4 = select i1 %.not76.i371.4, ptr %.3..i374.3, ptr %482
  %483 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.3, ptr align 1 %.171.i376.3) #18
  %484 = icmp eq i8 %483, 1
  %.sroa.speculated40.i375.4 = select i1 %484, ptr %.169.i377.3, ptr %.171.i376.3
  call void %5(ptr align 1 %393, ptr align 1 %.sroa.speculated40.i375.4) #18
  %485 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.4, i64 %375
  %.171.i376.4 = select i1 %484, ptr %.171.i376.3, ptr %485
  %.169.i377.4 = select i1 %484, ptr %485, ptr %.169.i377.3
  %486 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.4, ptr align 1 %..364.i373.4) #18
  %.not76.i371.5 = icmp eq i8 %486, 1
  %.sroa.speculated.i372.5 = select i1 %.not76.i371.5, ptr %..364.i373.4, ptr %.3..i374.4
  call void %5(ptr align 1 %.167.i370.5, ptr align 1 %.sroa.speculated.i372.5) #18
  %487 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.5, i64 %4
  %..364.i373.5 = select i1 %.not76.i371.5, ptr %487, ptr %..364.i373.4
  %.3..i374.5 = select i1 %.not76.i371.5, ptr %.3..i374.4, ptr %487
  %488 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.4, ptr align 1 %.171.i376.4) #18
  %489 = icmp eq i8 %488, 1
  %.sroa.speculated40.i375.5 = select i1 %489, ptr %.169.i377.4, ptr %.171.i376.4
  call void %5(ptr align 1 %394, ptr align 1 %.sroa.speculated40.i375.5) #18
  %490 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.5, i64 %375
  %.171.i376.5 = select i1 %489, ptr %.171.i376.4, ptr %490
  %.169.i377.5 = select i1 %489, ptr %490, ptr %.169.i377.4
  %491 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.5, ptr align 1 %..364.i373.5) #18
  %.not76.i371.6 = icmp eq i8 %491, 1
  %.sroa.speculated.i372.6 = select i1 %.not76.i371.6, ptr %..364.i373.5, ptr %.3..i374.5
  call void %5(ptr align 1 %.167.i370.6, ptr align 1 %.sroa.speculated.i372.6) #18
  %492 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.5, ptr align 1 %.171.i376.5) #18
  %493 = icmp eq i8 %492, 1
  %.sroa.speculated40.i375.6 = select i1 %493, ptr %.169.i377.5, ptr %.171.i376.5
  call void %5(ptr align 1 %395, ptr align 1 %.sroa.speculated40.i375.6) #18
  %494 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.6, i64 %375
  %.171.i376.6 = select i1 %493, ptr %.171.i376.5, ptr %494
  %.169.i377.6 = select i1 %493, ptr %494, ptr %.169.i377.5
  %495 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.6, ptr align 1 %.171.i376.6) #18
  %496 = icmp eq i8 %495, 1
  %.sroa.speculated46.i380 = select i1 %496, ptr %.169.i377.6, ptr %.171.i376.6
  call void %5(ptr align 1 %396, ptr align 1 %.sroa.speculated46.i380) #18
  %497 = getelementptr inbounds i8, ptr %.5492, i64 %381
  call void %6(ptr align 1 %3, i64 32) #18
  %498 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %377) #18
  %.not.i384 = icmp eq i8 %498, 1
  %.sroa.speculated21.i385 = select i1 %.not.i384, ptr %377, ptr %15
  call void %5(ptr align 1 %.5492, ptr nonnull align 1 %.sroa.speculated21.i385) #18
  %499 = getelementptr inbounds i8, ptr %.sroa.speculated21.i385, i64 %4
  %.0..i386 = select i1 %.not.i384, ptr %15, ptr %499
  %..061.i387 = select i1 %.not.i384, ptr %499, ptr %377
  br label %.cont.i404

.cont.i404:                                       ; preds = %.cont.i404, %.critedge69
  %lsr.iv857 = phi i64 [ %lsr.iv.next858, %.cont.i404 ], [ 15, %.critedge69 ]
  %lsr.iv855 = phi ptr [ %uglygep856, %.cont.i404 ], [ %lsr.iv853, %.critedge69 ]
  %.385.i388 = phi ptr [ %.3..i399, %.cont.i404 ], [ %.0..i386, %.critedge69 ]
  %.36484.i389 = phi ptr [ %..364.i398, %.cont.i404 ], [ %..061.i387, %.critedge69 ]
  %.06882.i391 = phi ptr [ %.169.i402, %.cont.i404 ], [ %379, %.critedge69 ]
  %.07081.i392 = phi ptr [ %.171.i401, %.cont.i404 ], [ %380, %.critedge69 ]
  %.07280.i393 = phi ptr [ %505, %.cont.i404 ], [ %497, %.critedge69 ]
  %500 = call i8 %2(ptr align 1 %3, ptr align 1 %.385.i388, ptr align 1 %.36484.i389) #18
  %.not76.i396 = icmp eq i8 %500, 1
  %.sroa.speculated.i397 = select i1 %.not76.i396, ptr %.36484.i389, ptr %.385.i388
  call void %5(ptr align 1 %lsr.iv855, ptr align 1 %.sroa.speculated.i397) #18
  %501 = getelementptr inbounds i8, ptr %.sroa.speculated.i397, i64 %4
  %..364.i398 = select i1 %.not76.i396, ptr %501, ptr %.36484.i389
  %.3..i399 = select i1 %.not76.i396, ptr %.385.i388, ptr %501
  %502 = call i8 %2(ptr align 1 %3, ptr align 1 %.06882.i391, ptr align 1 %.07081.i392) #18
  %503 = icmp eq i8 %502, 1
  %.sroa.speculated40.i400 = select i1 %503, ptr %.06882.i391, ptr %.07081.i392
  call void %5(ptr align 1 %.07280.i393, ptr align 1 %.sroa.speculated40.i400) #18
  %504 = getelementptr inbounds i8, ptr %.sroa.speculated40.i400, i64 %375
  %.171.i401 = select i1 %503, ptr %.07081.i392, ptr %504
  %.169.i402 = select i1 %503, ptr %504, ptr %.06882.i391
  %505 = getelementptr inbounds i8, ptr %.07280.i393, i64 %375
  %uglygep856 = getelementptr i8, ptr %lsr.iv855, i64 %4
  %lsr.iv.next858 = add nsw i64 %lsr.iv857, -1
  %exitcond.not.i403 = icmp eq i64 %lsr.iv.next858, 0
  br i1 %exitcond.not.i403, label %sort.parity_merge__anon_16203.exit406, label %.cont.i404

sort.parity_merge__anon_16203.exit406:            ; preds = %.cont.i404
  %506 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i402, ptr align 1 %.171.i401) #18
  %507 = icmp eq i8 %506, 1
  %.sroa.speculated46.i405 = select i1 %507, ptr %.169.i402, ptr %.171.i401
  call void %5(ptr align 1 %505, ptr align 1 %.sroa.speculated46.i405) #18
  br label %404

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %508 = mul nuw i64 %402, %4
  %509 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %508
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.022.i = phi i64 [ 8, %.preheader.lr.ph.i ], [ %515, %.loopexit.i ]
  %510 = ptrtoint ptr %.5.lcssa to i64
  %511 = ptrtoint ptr %509 to i64
  %512 = mul nuw i64 %.022.i, %4
  %513 = add nuw i64 %512, %510
  %514 = icmp ult i64 %513, %511
  %515 = shl nuw nsw i64 %.022.i, 1
  br i1 %514, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %516 = ptrtoint ptr %.5.lcssa to i64
  %517 = mul nuw i64 %515, %4
  %518 = add i64 %516, %517
  %519 = add i64 %516, %512
  br label %523

.loopexit.i:                                      ; preds = %543, %527, %.preheader.i
  %520 = icmp ult i64 %515, %402
  %521 = icmp ult i64 %.022.i, 17
  %522 = and i1 %521, %520
  br i1 %522, label %.preheader.i, label %common.ret

523:                                              ; preds = %527, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %527 ], [ 0, %.lr.ph.i ]
  %524 = ptrtoint ptr %509 to i64
  %uglygep851 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %525 = add i64 %518, %lsr.iv
  %526 = icmp ult i64 %525, %524
  br i1 %526, label %527, label %531

527:                                              ; preds = %523
  %528 = ptrtoint ptr %509 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %uglygep851, i64 %515, ptr nonnull align 1 %15, i64 32, i64 %.022.i, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr nonnull readonly align 1 %6)
  %lsr.iv.next = add i64 %lsr.iv, %517
  %529 = add i64 %519, %lsr.iv.next
  %530 = icmp ult i64 %529, %528
  br i1 %530, label %523, label %.loopexit.i

531:                                              ; preds = %523
  %532 = sub i64 %508, %lsr.iv
  %533 = or i64 %532, %4
  %534 = and i64 %533, -4294967296
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %536, label %541

536:                                              ; preds = %531
  %537 = trunc i64 %4 to i32
  %538 = trunc i64 %532 to i32
  %539 = udiv i32 %538, %537
  %540 = zext i32 %539 to i64
  br label %543

541:                                              ; preds = %531
  %542 = udiv i64 %532, %4
  br label %543

543:                                              ; preds = %541, %536
  %544 = phi i64 [ %540, %536 ], [ %542, %541 ]
  %uglygep = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %uglygep, i64 %544, ptr nonnull align 1 %15, i64 32, i64 %.022.i, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr nonnull readonly align 1 %6)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 1 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = mul i64 %6, %1
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  %12 = icmp ugt i64 %1, 127
  %13 = icmp ugt i64 %3, 127
  %14 = select i1 %12, i1 %13, i1 false
  br i1 %14, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %9
  %15 = shl i64 %6, 1
  %16 = mul i64 %6, 3
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16208.exit22, %.preheader.lr.ph
  %.030 = phi i64 [ 128, %.preheader.lr.ph ], [ %150, %sort.tail_merge__anon_16208.exit22 ]
  %17 = ptrtoint ptr %0 to i64
  %18 = lshr i64 %.030, 2
  %19 = lshr exact i64 %.030, 1
  %20 = mul i64 %18, %6
  %21 = mul nuw i64 %19, %6
  %22 = shl nuw i64 %21, 1
  %23 = getelementptr inbounds i8, ptr %2, i64 %21
  %24 = mul i64 %.030, %6
  %uglygep15 = getelementptr i8, ptr %0, i64 %20
  %25 = add nsw i64 %18, -1
  %26 = mul i64 %6, %25
  %uglygep17 = getelementptr i8, ptr %0, i64 %26
  %27 = mul i64 %15, %18
  %uglygep19 = getelementptr i8, ptr %0, i64 %27
  %28 = shl nuw nsw i64 %18, 1
  %29 = add nsw i64 %28, -1
  %30 = mul i64 %6, %29
  %uglygep21 = getelementptr i8, ptr %0, i64 %30
  %31 = mul i64 %16, %18
  %uglygep23 = getelementptr i8, ptr %0, i64 %31
  %32 = mul nuw i64 %18, 3
  %33 = add i64 %32, -1
  %34 = mul i64 %6, %33
  %uglygep25 = getelementptr i8, ptr %0, i64 %34
  %35 = add i64 %17, %24
  br label %76

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16208.exit22, %9
  %.0.lcssa = phi i64 [ 128, %9 ], [ %150, %sort.tail_merge__anon_16208.exit22 ]
  %36 = lshr exact i64 %.0.lcssa, 2
  %37 = icmp ult i64 %36, %1
  %38 = icmp ule i64 %36, %3
  %39 = select i1 %37, i1 %38, i1 false
  br i1 %39, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16208.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.022.i = phi i64 [ %36, %.preheader.lr.ph.i ], [ %45, %.loopexit.i ]
  %40 = ptrtoint ptr %0 to i64
  %41 = ptrtoint ptr %11 to i64
  %42 = mul nuw i64 %.022.i, %6
  %43 = add nuw i64 %42, %40
  %44 = icmp ult i64 %43, %41
  %45 = shl nuw i64 %.022.i, 1
  br i1 %44, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %46 = ptrtoint ptr %0 to i64
  %47 = mul nuw i64 %45, %6
  %48 = add i64 %46, %47
  %49 = add i64 %46, %42
  br label %53

.loopexit.i:                                      ; preds = %73, %57, %.preheader.i
  %50 = icmp ult i64 %45, %1
  %51 = icmp ule i64 %45, %3
  %52 = select i1 %50, i1 %51, i1 false
  br i1 %52, label %.preheader.i, label %sort.tail_merge__anon_16208.exit

53:                                               ; preds = %57, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %57 ], [ 0, %.lr.ph.i ]
  %54 = ptrtoint ptr %11 to i64
  %uglygep10 = getelementptr i8, ptr %0, i64 %lsr.iv
  %55 = add i64 %48, %lsr.iv
  %56 = icmp ult i64 %55, %54
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = ptrtoint ptr %11 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %uglygep10, i64 %45, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  %lsr.iv.next = add i64 %lsr.iv, %47
  %59 = add i64 %49, %lsr.iv.next
  %60 = icmp ult i64 %59, %58
  br i1 %60, label %53, label %.loopexit.i

61:                                               ; preds = %53
  %62 = sub i64 %10, %lsr.iv
  %63 = or i64 %62, %6
  %64 = and i64 %63, -4294967296
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %61
  %67 = trunc i64 %6 to i32
  %68 = trunc i64 %62 to i32
  %69 = udiv i32 %68, %67
  %70 = zext i32 %69 to i64
  br label %73

71:                                               ; preds = %61
  %72 = udiv i64 %62, %6
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i64 [ %70, %66 ], [ %72, %71 ]
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %uglygep, i64 %74, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  br label %.loopexit.i

sort.tail_merge__anon_16208.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %75 = lshr exact i64 %.0.lcssa, 1
  ret i64 %75

76:                                               ; preds = %sort.quad_merge_block__anon_16209.exit, %.preheader
  %lsr.iv29 = phi i64 [ %35, %.preheader ], [ %lsr.iv.next30, %sort.quad_merge_block__anon_16209.exit ]
  %lsr.iv27 = phi i64 [ %10, %.preheader ], [ %lsr.iv.next28, %sort.quad_merge_block__anon_16209.exit ]
  %lsr.iv11 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next12, %sort.quad_merge_block__anon_16209.exit ]
  %.013 = phi ptr [ %93, %sort.quad_merge_block__anon_16209.exit ], [ %0, %.preheader ]
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv11
  %uglygep16 = getelementptr i8, ptr %uglygep15, i64 %lsr.iv11
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv11
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv11
  tail call void %8(ptr align 1 %5, i64 2) #18
  %uglygep18 = getelementptr i8, ptr %uglygep17, i64 %lsr.iv11
  %77 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep18, ptr nonnull align 1 %uglygep16) #18
  %78 = icmp ne i8 %77, 1
  %79 = zext i1 %78 to i2
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv11
  %80 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep26, ptr nonnull align 1 %uglygep24) #18
  %.not.i = icmp eq i8 %80, 1
  %81 = select i1 %.not.i, i2 0, i2 -2
  %82 = or i2 %81, %79
  %83 = zext i2 %82 to i32
  switch i32 %83, label %85 [
    i32 0, label %86
    i32 1, label %87
    i32 2, label %88
    i32 3, label %89
  ]

84:                                               ; preds = %91, %88, %87, %86
  tail call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %uglygep13, ptr nonnull align 1 %2, i64 %19, i64 %19, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quad_merge_block__anon_16209.exit

85:                                               ; preds = %76
  unreachable

86:                                               ; preds = %76
  tail call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %18, i64 %18, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  tail call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %23, ptr nonnull align 1 %uglygep20, i64 %18, i64 %18, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  br label %84

87:                                               ; preds = %76
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %21, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %23, ptr nonnull align 1 %uglygep20, i64 %18, i64 %18, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  br label %84

88:                                               ; preds = %76
  tail call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %18, i64 %18, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %23, ptr nonnull align 1 %uglygep20, i64 %21, i1 false)
  br label %84

89:                                               ; preds = %76
  tail call void %8(ptr align 1 %5, i64 1) #18
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv11
  %90 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep22, ptr nonnull align 1 %uglygep20) #18
  %.not6.i = icmp eq i8 %90, 1
  br i1 %.not6.i, label %91, label %sort.quad_merge_block__anon_16209.exit

91:                                               ; preds = %89
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %22, i1 false)
  br label %84

sort.quad_merge_block__anon_16209.exit:           ; preds = %89, %84
  %92 = ptrtoint ptr %11 to i64
  %93 = getelementptr inbounds i8, ptr %.013, i64 %24
  %lsr.iv.next12 = add i64 %lsr.iv11, %24
  %lsr.iv.next28 = sub i64 %lsr.iv27, %24
  %94 = add i64 %35, %lsr.iv.next12
  %95 = icmp ugt i64 %94, %92
  %lsr.iv.next30 = add i64 %lsr.iv29, %24
  br i1 %95, label %96, label %76

96:                                               ; preds = %sort.quad_merge_block__anon_16209.exit
  %97 = or i64 %lsr.iv.next28, %6
  %98 = and i64 %97, -4294967296
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %96
  %101 = trunc i64 %6 to i32
  %102 = trunc i64 %lsr.iv.next28 to i32
  %103 = udiv i32 %102, %101
  %104 = zext i32 %103 to i64
  br label %107

105:                                              ; preds = %96
  %106 = udiv i64 %lsr.iv.next28, %6
  br label %107

107:                                              ; preds = %105, %100
  %108 = phi i64 [ %104, %100 ], [ %106, %105 ]
  %109 = icmp ult i64 %18, %108
  %110 = icmp ule i64 %18, %3
  %111 = select i1 %109, i1 %110, i1 false
  %uglygep14 = getelementptr i8, ptr %0, i64 %lsr.iv.next12
  br i1 %111, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16208.exit22

.preheader.lr.ph.i16:                             ; preds = %107
  %112 = ptrtoint ptr %0 to i64
  %113 = mul nuw i64 %108, %6
  %114 = getelementptr inbounds i8, ptr %93, i64 %113
  %115 = add i64 %112, %lsr.iv.next12
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i20, %.preheader.lr.ph.i16
  %.022.i17 = phi i64 [ %18, %.preheader.lr.ph.i16 ], [ %120, %.loopexit.i20 ]
  %116 = ptrtoint ptr %114 to i64
  %117 = mul nuw i64 %.022.i17, %6
  %118 = add i64 %115, %117
  %119 = icmp ult i64 %118, %116
  %120 = shl nuw i64 %.022.i17, 1
  br i1 %119, label %.lr.ph.i19, label %.loopexit.i20

.lr.ph.i19:                                       ; preds = %.preheader.i18
  %121 = mul nuw i64 %120, %6
  %122 = add i64 %lsr.iv29, %121
  %123 = add nuw i64 %lsr.iv29, %117
  br label %127

.loopexit.i20:                                    ; preds = %148, %130, %.preheader.i18
  %124 = icmp ult i64 %120, %108
  %125 = icmp ule i64 %120, %3
  %126 = select i1 %124, i1 %125, i1 false
  br i1 %126, label %.preheader.i18, label %sort.tail_merge__anon_16208.exit22

127:                                              ; preds = %130, %.lr.ph.i19
  %lsr.iv33 = phi i64 [ %lsr.iv.next34, %130 ], [ %123, %.lr.ph.i19 ]
  %lsr.iv31 = phi i64 [ %lsr.iv.next32, %130 ], [ %122, %.lr.ph.i19 ]
  %.01421.i21 = phi ptr [ %uglygep14, %.lr.ph.i19 ], [ %132, %130 ]
  %128 = ptrtoint ptr %114 to i64
  %129 = icmp ult i64 %lsr.iv31, %128
  br i1 %129, label %130, label %134

130:                                              ; preds = %127
  %131 = ptrtoint ptr %114 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %.01421.i21, i64 %120, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  %132 = getelementptr inbounds i8, ptr %.01421.i21, i64 %121
  %lsr.iv.next32 = add i64 %lsr.iv31, %121
  %lsr.iv.next34 = add i64 %lsr.iv33, %121
  %133 = icmp ult i64 %lsr.iv.next34, %131
  br i1 %133, label %127, label %.loopexit.i20

134:                                              ; preds = %127
  %135 = ptrtoint ptr %114 to i64
  %136 = ptrtoint ptr %.01421.i21 to i64
  %137 = sub nuw i64 %135, %136
  %138 = or i64 %137, %6
  %139 = and i64 %138, -4294967296
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %146

141:                                              ; preds = %134
  %142 = trunc i64 %6 to i32
  %143 = trunc i64 %137 to i32
  %144 = udiv i32 %143, %142
  %145 = zext i32 %144 to i64
  br label %148

146:                                              ; preds = %134
  %147 = udiv i64 %137, %6
  br label %148

148:                                              ; preds = %146, %141
  %149 = phi i64 [ %145, %141 ], [ %147, %146 ]
  tail call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %.01421.i21, i64 %149, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  br label %.loopexit.i20

sort.tail_merge__anon_16208.exit22:               ; preds = %.loopexit.i20, %107
  %150 = shl nuw i64 %.030, 2
  %151 = icmp ule i64 %150, %1
  %152 = icmp ule i64 %150, %3
  %153 = select i1 %151, i1 %152, i1 false
  br i1 %153, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9) unnamed_addr #4 {
  %11 = mul i64 %7, %1
  %12 = getelementptr inbounds i8, ptr %0, i64 %11
  %13 = shl nuw i64 %4, 1
  %14 = icmp uge i64 %13, %1
  %15 = sub i64 %1, %4
  %16 = icmp ule i64 %15, %3
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %19, label %.preheader21

.preheader21:                                     ; preds = %10
  %18 = icmp ugt i64 %1, %4
  br i1 %18, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader21
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader21
  ret void

19:                                               ; preds = %10
  tail call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.01727 = phi i64 [ %4, %.preheader.lr.ph ], [ %25, %.loopexit ]
  %20 = ptrtoint ptr %0 to i64
  %21 = ptrtoint ptr %12 to i64
  %22 = mul nuw i64 %.01727, %7
  %23 = add nuw i64 %22, %20
  %24 = icmp ult i64 %23, %21
  %25 = shl nuw i64 %.01727, 1
  br i1 %24, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %26 = ptrtoint ptr %0 to i64
  %27 = mul nuw i64 %25, %7
  %28 = add i64 %26, %27
  %29 = add i64 %26, %22
  br label %31

.loopexit:                                        ; preds = %51, %35, %.preheader
  %30 = icmp ult i64 %25, %1
  br i1 %30, label %.preheader, label %common.ret

31:                                               ; preds = %35, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %35 ]
  %32 = ptrtoint ptr %12 to i64
  %uglygep34 = getelementptr i8, ptr %0, i64 %lsr.iv
  %33 = add i64 %28, %lsr.iv
  %34 = icmp ult i64 %33, %32
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = ptrtoint ptr %12 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16211(ptr nonnull align 1 %uglygep34, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %.01727, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  %lsr.iv.next = add i64 %lsr.iv, %27
  %37 = add i64 %29, %lsr.iv.next
  %38 = icmp ult i64 %37, %36
  br i1 %38, label %31, label %.loopexit

39:                                               ; preds = %31
  %40 = sub i64 %11, %lsr.iv
  %41 = or i64 %40, %7
  %42 = and i64 %41, -4294967296
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = trunc i64 %7 to i32
  %46 = trunc i64 %40 to i32
  %47 = udiv i32 %46, %45
  %48 = zext i32 %47 to i64
  br label %51

49:                                               ; preds = %39
  %50 = udiv i64 %40, %7
  br label %51

51:                                               ; preds = %49, %44
  %52 = phi i64 [ %48, %44 ], [ %50, %49 ]
  %53 = sub nuw i64 %52, %.01727
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16211(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %53, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14490(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4, i64 %5, ptr nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = alloca [49152 x i8], align 8
  %9 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %8, i64 512, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %4)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %8, i64 512, i64 %9, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %5, ptr nonnull readonly align 1 %6, ptr nonnull readonly align 1 %4)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 8
  %9 = icmp ult i64 %1, 8
  br i1 %9, label %10, label %318

common.ret:                                       ; preds = %342, %sort.tiny_sort__anon_16212.exit
  ret void

10:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  switch i64 %1, label %11 [
    i64 2, label %12
    i64 3, label %18
    i64 4, label %35
    i64 5, label %75
    i64 6, label %135
    i64 7, label %213
    i64 1, label %sort.tiny_sort__anon_16212.exit
    i64 0, label %sort.tiny_sort__anon_16212.exit
  ]

11:                                               ; preds = %10
  unreachable

12:                                               ; preds = %10
  %13 = getelementptr inbounds i8, ptr %0, i64 %5
  %14 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %13) #18
  %15 = icmp eq i8 %14, 1
  %..i = select i1 %15, i64 %5, i64 0
  %16 = select i1 %15, ptr %0, ptr %13
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %16) #18
  %17 = getelementptr inbounds i8, ptr %0, i64 %..i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %17) #18
  call void %6(ptr nonnull align 1 %13, ptr nonnull align 1 %8) #18
  br label %sort.tiny_sort__anon_16212.exit

18:                                               ; preds = %10
  %19 = getelementptr inbounds i8, ptr %0, i64 %5
  %20 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %19) #18
  %21 = icmp eq i8 %20, 1
  %.1.i = select i1 %21, i64 %5, i64 0
  %22 = select i1 %21, ptr %0, ptr %19
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %22) #18
  %23 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %23) #18
  call void %6(ptr nonnull align 1 %19, ptr nonnull align 1 %8) #18
  %24 = getelementptr inbounds i8, ptr %19, i64 %5
  %25 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %19, ptr nonnull align 1 %24) #18
  %26 = icmp eq i8 %25, 1
  %27 = select i1 %26, i64 %5, i64 0
  %28 = select i1 %26, ptr %19, ptr %24
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %28) #18
  %29 = getelementptr inbounds i8, ptr %19, i64 %27
  call void %6(ptr nonnull align 1 %19, ptr nonnull align 1 %29) #18
  call void %6(ptr nonnull align 1 %24, ptr nonnull align 1 %8) #18
  %30 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %19) #18
  %31 = icmp eq i8 %30, 1
  %32 = select i1 %31, i64 %5, i64 0
  %33 = select i1 %31, ptr %0, ptr %19
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %33) #18
  %34 = getelementptr inbounds i8, ptr %0, i64 %32
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %34) #18
  call void %6(ptr nonnull align 1 %19, ptr nonnull align 1 %8) #18
  br label %sort.tiny_sort__anon_16212.exit

35:                                               ; preds = %10
  %36 = getelementptr inbounds i8, ptr %0, i64 %5
  %37 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %36) #18
  %38 = icmp eq i8 %37, 1
  %..i.i = select i1 %38, i64 %5, i64 0
  %39 = select i1 %38, ptr %0, ptr %36
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %39) #18
  %40 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %40) #18
  call void %6(ptr nonnull align 1 %36, ptr nonnull align 1 %8) #18
  %41 = shl nuw i64 %5, 1
  %42 = getelementptr inbounds i8, ptr %0, i64 %41
  %43 = getelementptr inbounds i8, ptr %42, i64 %5
  %44 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %42, ptr nonnull align 1 %43) #18
  %45 = icmp eq i8 %44, 1
  %46 = select i1 %45, i64 %5, i64 0
  %47 = select i1 %45, ptr %42, ptr %43
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %47) #18
  %48 = getelementptr inbounds i8, ptr %42, i64 %46
  call void %6(ptr nonnull align 1 %42, ptr nonnull align 1 %48) #18
  call void %6(ptr nonnull align 1 %43, ptr nonnull align 1 %8) #18
  %49 = sub i64 0, %5
  %50 = getelementptr inbounds i8, ptr %42, i64 %49
  %51 = getelementptr inbounds i8, ptr %50, i64 %5
  %52 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %50, ptr nonnull align 1 %51) #18
  %53 = icmp eq i8 %52, 1
  br i1 %53, label %54, label %sort.tiny_sort__anon_16212.exit

54:                                               ; preds = %35
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %50) #18
  call void %6(ptr nonnull align 1 %50, ptr nonnull align 1 %51) #18
  call void %6(ptr nonnull align 1 %51, ptr nonnull align 1 %8) #18
  %55 = getelementptr inbounds i8, ptr %50, i64 %49
  %56 = getelementptr inbounds i8, ptr %55, i64 %5
  %57 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %55, ptr nonnull align 1 %56) #18
  %58 = icmp eq i8 %57, 1
  %.1.i.i = select i1 %58, i64 %5, i64 0
  %59 = select i1 %58, ptr %55, ptr %56
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %59) #18
  %60 = getelementptr inbounds i8, ptr %55, i64 %.1.i.i
  call void %6(ptr nonnull align 1 %55, ptr nonnull align 1 %60) #18
  call void %6(ptr nonnull align 1 %56, ptr nonnull align 1 %8) #18
  %61 = getelementptr inbounds i8, ptr %55, i64 %41
  %62 = getelementptr inbounds i8, ptr %61, i64 %5
  %63 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %61, ptr nonnull align 1 %62) #18
  %64 = icmp eq i8 %63, 1
  %65 = select i1 %64, i64 %5, i64 0
  %66 = select i1 %64, ptr %61, ptr %62
  call void %6(ptr nonnull align 1 %8, ptr align 1 %66) #18
  %67 = getelementptr inbounds i8, ptr %61, i64 %65
  call void %6(ptr nonnull align 1 %61, ptr nonnull align 1 %67) #18
  call void %6(ptr nonnull align 1 %62, ptr nonnull align 1 %8) #18
  %68 = getelementptr inbounds i8, ptr %61, i64 %49
  %69 = getelementptr inbounds i8, ptr %68, i64 %5
  %70 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %68, ptr align 1 %69) #18
  %71 = icmp eq i8 %70, 1
  %72 = select i1 %71, i64 %5, i64 0
  %73 = select i1 %71, ptr %68, ptr %69
  call void %6(ptr nonnull align 1 %8, ptr align 1 %73) #18
  %74 = getelementptr inbounds i8, ptr %68, i64 %72
  call void %6(ptr nonnull align 1 %68, ptr align 1 %74) #18
  call void %6(ptr align 1 %69, ptr nonnull align 1 %8) #18
  br label %sort.tiny_sort__anon_16212.exit

75:                                               ; preds = %10
  %76 = getelementptr inbounds i8, ptr %0, i64 %5
  %77 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %76) #18
  %78 = icmp eq i8 %77, 1
  %..i9.i = select i1 %78, i64 %5, i64 0
  %79 = select i1 %78, ptr %0, ptr %76
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %79) #18
  %80 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %80) #18
  call void %6(ptr nonnull align 1 %76, ptr nonnull align 1 %8) #18
  %81 = shl nuw i64 %5, 1
  %82 = getelementptr inbounds i8, ptr %0, i64 %81
  %83 = getelementptr inbounds i8, ptr %82, i64 %5
  %84 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %82, ptr nonnull align 1 %83) #18
  %85 = icmp eq i8 %84, 1
  %86 = select i1 %85, i64 %5, i64 0
  %87 = select i1 %85, ptr %82, ptr %83
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %87) #18
  %88 = getelementptr inbounds i8, ptr %82, i64 %86
  call void %6(ptr nonnull align 1 %82, ptr nonnull align 1 %88) #18
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %8) #18
  %89 = sub i64 0, %5
  %90 = getelementptr inbounds i8, ptr %82, i64 %89
  %91 = getelementptr inbounds i8, ptr %90, i64 %5
  %92 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %90, ptr nonnull align 1 %91) #18
  %93 = icmp eq i8 %92, 1
  %94 = select i1 %93, i64 %5, i64 0
  %95 = select i1 %93, ptr %90, ptr %91
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %95) #18
  %96 = getelementptr inbounds i8, ptr %90, i64 %94
  call void %6(ptr nonnull align 1 %90, ptr nonnull align 1 %96) #18
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %8) #18
  %97 = zext i1 %93 to i8
  %98 = getelementptr inbounds i8, ptr %90, i64 %81
  %99 = getelementptr inbounds i8, ptr %98, i64 %5
  %100 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %98, ptr nonnull align 1 %99) #18
  %101 = icmp eq i8 %100, 1
  %102 = select i1 %101, i64 %5, i64 0
  %103 = select i1 %101, ptr %98, ptr %99
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %103) #18
  %104 = getelementptr inbounds i8, ptr %98, i64 %102
  call void %6(ptr nonnull align 1 %98, ptr nonnull align 1 %104) #18
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %8) #18
  %.neg.i.i = sext i1 %101 to i8
  %.not.i.i = icmp eq i8 %97, %.neg.i.i
  br i1 %.not.i.i, label %sort.tiny_sort__anon_16212.exit, label %105

105:                                              ; preds = %75
  %106 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %76) #18
  %107 = icmp eq i8 %106, 1
  %.1.i10.i = select i1 %107, i64 %5, i64 0
  %108 = select i1 %107, ptr %0, ptr %76
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %108) #18
  %109 = getelementptr inbounds i8, ptr %0, i64 %.1.i10.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %109) #18
  call void %6(ptr nonnull align 1 %76, ptr nonnull align 1 %8) #18
  %110 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %82, ptr nonnull align 1 %83) #18
  %111 = icmp eq i8 %110, 1
  %112 = select i1 %111, i64 %5, i64 0
  %113 = select i1 %111, ptr %82, ptr %83
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %113) #18
  %114 = getelementptr inbounds i8, ptr %82, i64 %112
  call void %6(ptr nonnull align 1 %82, ptr nonnull align 1 %114) #18
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %8) #18
  %115 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %90, ptr nonnull align 1 %91) #18
  %116 = icmp eq i8 %115, 1
  %117 = select i1 %116, i64 %5, i64 0
  %118 = select i1 %116, ptr %90, ptr %91
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %118) #18
  %119 = getelementptr inbounds i8, ptr %90, i64 %117
  call void %6(ptr nonnull align 1 %90, ptr nonnull align 1 %119) #18
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %8) #18
  %120 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %98, ptr nonnull align 1 %99) #18
  %121 = icmp eq i8 %120, 1
  %122 = select i1 %121, i64 %5, i64 0
  %123 = select i1 %121, ptr %98, ptr %99
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %123) #18
  %124 = getelementptr inbounds i8, ptr %98, i64 %122
  call void %6(ptr nonnull align 1 %98, ptr nonnull align 1 %124) #18
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %8) #18
  %125 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %76) #18
  %126 = icmp eq i8 %125, 1
  %127 = select i1 %126, i64 %5, i64 0
  %128 = select i1 %126, ptr %0, ptr %76
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %128) #18
  %129 = getelementptr inbounds i8, ptr %0, i64 %127
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %129) #18
  call void %6(ptr nonnull align 1 %76, ptr nonnull align 1 %8) #18
  %130 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %82, ptr nonnull align 1 %83) #18
  %131 = icmp eq i8 %130, 1
  %132 = select i1 %131, i64 %5, i64 0
  %133 = select i1 %131, ptr %82, ptr %83
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %133) #18
  %134 = getelementptr inbounds i8, ptr %82, i64 %132
  call void %6(ptr nonnull align 1 %82, ptr nonnull align 1 %134) #18
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %8) #18
  br label %sort.tiny_sort__anon_16212.exit

135:                                              ; preds = %10
  %136 = getelementptr inbounds i8, ptr %0, i64 %5
  %137 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %136) #18
  %138 = icmp eq i8 %137, 1
  %..i11.i = select i1 %138, i64 %5, i64 0
  %139 = select i1 %138, ptr %0, ptr %136
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %139) #18
  %140 = getelementptr inbounds i8, ptr %0, i64 %..i11.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %140) #18
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %8) #18
  %141 = getelementptr inbounds i8, ptr %136, i64 %5
  %142 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %136, ptr nonnull align 1 %141) #18
  %143 = icmp eq i8 %142, 1
  %144 = select i1 %143, i64 %5, i64 0
  %145 = select i1 %143, ptr %136, ptr %141
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %145) #18
  %146 = getelementptr inbounds i8, ptr %136, i64 %144
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %146) #18
  call void %6(ptr nonnull align 1 %141, ptr nonnull align 1 %8) #18
  %147 = mul nuw i64 %5, 3
  %148 = getelementptr inbounds i8, ptr %136, i64 %147
  %149 = getelementptr inbounds i8, ptr %148, i64 %5
  %150 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %148, ptr nonnull align 1 %149) #18
  %151 = icmp eq i8 %150, 1
  %152 = select i1 %151, i64 %5, i64 0
  %153 = select i1 %151, ptr %148, ptr %149
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %153) #18
  %154 = getelementptr inbounds i8, ptr %148, i64 %152
  call void %6(ptr nonnull align 1 %148, ptr nonnull align 1 %154) #18
  call void %6(ptr nonnull align 1 %149, ptr nonnull align 1 %8) #18
  %155 = sub i64 0, %5
  %156 = getelementptr inbounds i8, ptr %148, i64 %155
  %157 = getelementptr inbounds i8, ptr %156, i64 %5
  %158 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %156, ptr nonnull align 1 %157) #18
  %159 = icmp eq i8 %158, 1
  %160 = select i1 %159, i64 %5, i64 0
  %161 = select i1 %159, ptr %156, ptr %157
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %161) #18
  %162 = getelementptr inbounds i8, ptr %156, i64 %160
  call void %6(ptr nonnull align 1 %156, ptr nonnull align 1 %162) #18
  call void %6(ptr nonnull align 1 %157, ptr nonnull align 1 %8) #18
  %163 = shl nuw i64 %5, 1
  %164 = getelementptr inbounds i8, ptr %0, i64 %163
  %165 = getelementptr inbounds i8, ptr %0, i64 %147
  %166 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %164, ptr nonnull align 1 %165) #18
  %.not.i12.i = icmp eq i8 %166, 1
  %167 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %136) #18
  %.not113.i.i = icmp eq i8 %167, 1
  %.2.i.i = select i1 %.not113.i.i, i64 %5, i64 0
  br i1 %.not.i12.i, label %.cont96.i.i, label %168

168:                                              ; preds = %135
  %169 = icmp eq i8 %167, 1
  %170 = select i1 %169, ptr %0, ptr %136
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %170) #18
  %171 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %171) #18
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %8) #18
  %172 = shl nuw i64 %5, 2
  %173 = getelementptr inbounds i8, ptr %0, i64 %172
  %174 = getelementptr inbounds i8, ptr %173, i64 %5
  %175 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %173, ptr nonnull align 1 %174) #18
  %176 = icmp eq i8 %175, 1
  %177 = select i1 %176, i64 %5, i64 0
  %178 = select i1 %176, ptr %173, ptr %174
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %178) #18
  %179 = getelementptr inbounds i8, ptr %173, i64 %177
  call void %6(ptr nonnull align 1 %173, ptr nonnull align 1 %179) #18
  call void %6(ptr nonnull align 1 %174, ptr nonnull align 1 %8) #18
  br label %sort.tiny_sort__anon_16212.exit

.cont96.i.i:                                      ; preds = %135
  %180 = icmp eq i8 %167, 1
  %.3.i.i = select i1 %180, i64 0, i64 %5
  %181 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %181) #18
  %182 = getelementptr inbounds i8, ptr %2, i64 %5
  %183 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  call void %6(ptr nonnull align 1 %182, ptr nonnull align 1 %183) #18
  %184 = getelementptr inbounds i8, ptr %2, i64 %163
  call void %6(ptr nonnull align 1 %184, ptr nonnull align 1 %164) #18
  %185 = shl nuw i64 %5, 2
  %186 = getelementptr inbounds i8, ptr %0, i64 %185
  %187 = getelementptr inbounds i8, ptr %186, i64 %5
  %188 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %186, ptr nonnull align 1 %187) #18
  %.not114.i.i = icmp eq i8 %188, 1
  %.4.i.i = select i1 %.not114.i.i, i64 %5, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 %5
  %189 = getelementptr inbounds i8, ptr %2, i64 %185
  %190 = getelementptr inbounds i8, ptr %186, i64 %.4.i.i
  call void %6(ptr nonnull align 1 %189, ptr nonnull align 1 %190) #18
  %191 = mul nuw i64 %5, 5
  %192 = getelementptr inbounds i8, ptr %2, i64 %191
  %193 = getelementptr inbounds i8, ptr %186, i64 %.5.i.i
  call void %6(ptr nonnull align 1 %192, ptr nonnull align 1 %193) #18
  %194 = getelementptr inbounds i8, ptr %2, i64 %147
  %195 = getelementptr inbounds i8, ptr %186, i64 %155
  call void %6(ptr nonnull align 1 %194, ptr nonnull align 1 %195) #18
  %196 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %194) #18
  %.not115.i.i = icmp eq i8 %196, 1
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %194, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated92.i.i) #18
  %197 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 %5
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %197
  %.119.i.i = select i1 %.not115.i.i, ptr %197, ptr %194
  %198 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.118.i.i, ptr nonnull align 1 %.119.i.i) #18
  %.not116.i.i = icmp eq i8 %198, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %.sroa.speculated83.i.i) #18
  %199 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 %5
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %199
  %.1106.i.i = select i1 %.not116.i.i, ptr %199, ptr %.119.i.i
  %200 = call i8 %3(ptr align 1 %4, ptr align 1 %.1110.i.i, ptr align 1 %.1106.i.i) #18
  %.not117.i.i = icmp eq i8 %200, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  call void %6(ptr nonnull align 1 %141, ptr align 1 %.sroa.speculated74.i.i) #18
  %201 = getelementptr inbounds i8, ptr %0, i64 %191
  %202 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %184, ptr nonnull align 1 %192) #18
  %203 = icmp eq i8 %202, 1
  %.sroa.speculated65.i.i = select i1 %203, ptr %184, ptr %192
  call void %6(ptr nonnull align 1 %201, ptr nonnull align 1 %.sroa.speculated65.i.i) #18
  %204 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 %155
  %.2111.i.i = select i1 %203, ptr %204, ptr %184
  %.2107.i.i = select i1 %203, ptr %192, ptr %204
  %205 = getelementptr inbounds i8, ptr %201, i64 %155
  %206 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2111.i.i, ptr nonnull align 1 %.2107.i.i) #18
  %207 = icmp eq i8 %206, 1
  %.sroa.speculated.i.i = select i1 %207, ptr %.2111.i.i, ptr %.2107.i.i
  call void %6(ptr nonnull align 1 %205, ptr nonnull align 1 %.sroa.speculated.i.i) #18
  %208 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 %155
  %.3112.i.i = select i1 %207, ptr %208, ptr %.2111.i.i
  %.3108.i.i = select i1 %207, ptr %.2107.i.i, ptr %208
  %209 = getelementptr inbounds i8, ptr %205, i64 %155
  %210 = call i8 %3(ptr align 1 %4, ptr align 1 %.3112.i.i, ptr align 1 %.3108.i.i) #18
  %211 = icmp eq i8 %210, 1
  %212 = select i1 %211, ptr %.3112.i.i, ptr %.3108.i.i
  call void %6(ptr nonnull align 1 %209, ptr align 1 %212) #18
  br label %sort.tiny_sort__anon_16212.exit

213:                                              ; preds = %10
  %214 = getelementptr inbounds i8, ptr %0, i64 %5
  %215 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %214) #18
  %216 = icmp eq i8 %215, 1
  %..i13.i = select i1 %216, i64 %5, i64 0
  %217 = select i1 %216, ptr %0, ptr %214
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %217) #18
  %218 = getelementptr inbounds i8, ptr %0, i64 %..i13.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %218) #18
  call void %6(ptr nonnull align 1 %214, ptr nonnull align 1 %8) #18
  %219 = shl nuw i64 %5, 1
  %220 = getelementptr inbounds i8, ptr %0, i64 %219
  %221 = getelementptr inbounds i8, ptr %220, i64 %5
  %222 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %220, ptr nonnull align 1 %221) #18
  %223 = icmp eq i8 %222, 1
  %224 = select i1 %223, i64 %5, i64 0
  %225 = select i1 %223, ptr %220, ptr %221
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %225) #18
  %226 = getelementptr inbounds i8, ptr %220, i64 %224
  call void %6(ptr nonnull align 1 %220, ptr nonnull align 1 %226) #18
  call void %6(ptr nonnull align 1 %221, ptr nonnull align 1 %8) #18
  %227 = getelementptr inbounds i8, ptr %220, i64 %219
  %228 = getelementptr inbounds i8, ptr %227, i64 %5
  %229 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %227, ptr nonnull align 1 %228) #18
  %230 = icmp eq i8 %229, 1
  %231 = select i1 %230, i64 %5, i64 0
  %232 = select i1 %230, ptr %227, ptr %228
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %232) #18
  %233 = getelementptr inbounds i8, ptr %227, i64 %231
  call void %6(ptr nonnull align 1 %227, ptr nonnull align 1 %233) #18
  call void %6(ptr nonnull align 1 %228, ptr nonnull align 1 %8) #18
  %234 = mul nuw i64 %5, 3
  %235 = sub i64 0, %234
  %236 = getelementptr inbounds i8, ptr %227, i64 %235
  %237 = getelementptr inbounds i8, ptr %236, i64 %5
  %238 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %236, ptr nonnull align 1 %237) #18
  %239 = icmp eq i8 %238, 1
  %240 = select i1 %239, i64 %5, i64 0
  %241 = select i1 %239, ptr %236, ptr %237
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %241) #18
  %242 = getelementptr inbounds i8, ptr %236, i64 %240
  call void %6(ptr nonnull align 1 %236, ptr nonnull align 1 %242) #18
  call void %6(ptr nonnull align 1 %237, ptr nonnull align 1 %8) #18
  %243 = zext i1 %239 to i8
  %244 = getelementptr inbounds i8, ptr %236, i64 %219
  %245 = getelementptr inbounds i8, ptr %244, i64 %5
  %246 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %244, ptr nonnull align 1 %245) #18
  %247 = icmp eq i8 %246, 1
  %248 = select i1 %247, i64 %5, i64 0
  %249 = select i1 %247, ptr %244, ptr %245
  call void %6(ptr nonnull align 1 %8, ptr align 1 %249) #18
  %250 = getelementptr inbounds i8, ptr %244, i64 %248
  call void %6(ptr nonnull align 1 %244, ptr nonnull align 1 %250) #18
  call void %6(ptr nonnull align 1 %245, ptr nonnull align 1 %8) #18
  %251 = zext i1 %247 to i8
  %252 = add nuw nsw i8 %251, %243
  %253 = getelementptr inbounds i8, ptr %244, i64 %219
  %254 = getelementptr inbounds i8, ptr %253, i64 %5
  %255 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %253, ptr align 1 %254) #18
  %256 = icmp eq i8 %255, 1
  %257 = select i1 %256, i64 %5, i64 0
  %258 = select i1 %256, ptr %253, ptr %254
  call void %6(ptr nonnull align 1 %8, ptr align 1 %258) #18
  %259 = getelementptr inbounds i8, ptr %253, i64 %257
  call void %6(ptr nonnull align 1 %253, ptr align 1 %259) #18
  call void %6(ptr align 1 %254, ptr nonnull align 1 %8) #18
  %.neg.i14.i = sext i1 %256 to i8
  %260 = icmp eq i8 %252, %.neg.i14.i
  br i1 %260, label %sort.tiny_sort__anon_16212.exit, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %213
  %261 = sub i64 0, %5
  %262 = getelementptr inbounds i8, ptr %253, i64 %261
  %263 = getelementptr inbounds i8, ptr %262, i64 %5
  %264 = call i8 %3(ptr align 1 %4, ptr align 1 %262, ptr align 1 %263) #18
  %265 = icmp eq i8 %264, 1
  %.1.i15.i = select i1 %265, i64 %5, i64 0
  %266 = select i1 %265, ptr %262, ptr %263
  call void %6(ptr nonnull align 1 %8, ptr align 1 %266) #18
  %267 = getelementptr inbounds i8, ptr %262, i64 %.1.i15.i
  call void %6(ptr align 1 %262, ptr align 1 %267) #18
  call void %6(ptr align 1 %263, ptr nonnull align 1 %8) #18
  %268 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %214) #18
  %.not.i16.i = icmp eq i8 %268, 1
  %269 = select i1 %.not.i16.i, i64 %5, i64 0
  %270 = select i1 %.not.i16.i, i64 0, i64 %5
  %271 = getelementptr inbounds i8, ptr %0, i64 %269
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %271) #18
  %272 = getelementptr inbounds i8, ptr %2, i64 %5
  %273 = getelementptr inbounds i8, ptr %0, i64 %270
  call void %6(ptr nonnull align 1 %272, ptr nonnull align 1 %273) #18
  %274 = getelementptr inbounds i8, ptr %2, i64 %219
  call void %6(ptr nonnull align 1 %274, ptr nonnull align 1 %220) #18
  %275 = getelementptr inbounds i8, ptr %0, i64 %234
  %276 = getelementptr inbounds i8, ptr %275, i64 %5
  %277 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %275, ptr nonnull align 1 %276) #18
  %.not127.i.i = icmp eq i8 %277, 1
  %278 = select i1 %.not127.i.i, i64 %5, i64 0
  %279 = select i1 %.not127.i.i, i64 0, i64 %5
  %280 = getelementptr inbounds i8, ptr %2, i64 %234
  %281 = getelementptr inbounds i8, ptr %275, i64 %278
  call void %6(ptr nonnull align 1 %280, ptr nonnull align 1 %281) #18
  %282 = shl nuw i64 %5, 2
  %283 = getelementptr inbounds i8, ptr %2, i64 %282
  %284 = getelementptr inbounds i8, ptr %275, i64 %279
  call void %6(ptr nonnull align 1 %283, ptr nonnull align 1 %284) #18
  %285 = getelementptr inbounds i8, ptr %275, i64 %219
  %286 = getelementptr inbounds i8, ptr %285, i64 %5
  %287 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %285, ptr nonnull align 1 %286) #18
  %.not128.i.i = icmp eq i8 %287, 1
  %288 = select i1 %.not128.i.i, i64 %5, i64 0
  %289 = select i1 %.not128.i.i, i64 0, i64 %5
  %290 = mul nuw i64 %5, 5
  %291 = getelementptr inbounds i8, ptr %2, i64 %290
  %292 = getelementptr inbounds i8, ptr %285, i64 %288
  call void %6(ptr nonnull align 1 %291, ptr nonnull align 1 %292) #18
  %293 = mul nuw i64 %5, 6
  %294 = getelementptr inbounds i8, ptr %2, i64 %293
  %295 = getelementptr inbounds i8, ptr %285, i64 %289
  call void %6(ptr nonnull align 1 %294, ptr nonnull align 1 %295) #18
  %296 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %280) #18
  %.not129.i.i = icmp eq i8 %296, 1
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %280, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated106.i.i) #18
  %297 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 %5
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %297
  %.133.i.i = select i1 %.not129.i.i, ptr %297, ptr %280
  %298 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.132.i.i, ptr nonnull align 1 %.133.i.i) #18
  %.not130.i.i = icmp eq i8 %298, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  call void %6(ptr nonnull align 1 %214, ptr nonnull align 1 %.sroa.speculated97.i.i) #18
  %299 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 %5
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %299
  %.1121.i.i = select i1 %.not130.i.i, ptr %299, ptr %.133.i.i
  %300 = getelementptr inbounds i8, ptr %214, i64 %5
  %301 = call i8 %3(ptr align 1 %4, ptr align 1 %.1123.i.i, ptr align 1 %.1121.i.i) #18
  %.not131.i.i = icmp eq i8 %301, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  call void %6(ptr nonnull align 1 %300, ptr align 1 %.sroa.speculated88.i.i) #18
  %302 = getelementptr inbounds i8, ptr %0, i64 %293
  %303 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %274, ptr nonnull align 1 %294) #18
  %304 = icmp eq i8 %303, 1
  %.sroa.speculated79.i.i = select i1 %304, ptr %274, ptr %294
  call void %6(ptr nonnull align 1 %302, ptr nonnull align 1 %.sroa.speculated79.i.i) #18
  %305 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 %261
  %.2124.i.i = select i1 %304, ptr %305, ptr %274
  %.2.i17.i = select i1 %304, ptr %294, ptr %305
  %306 = getelementptr inbounds i8, ptr %302, i64 %261
  %307 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2124.i.i, ptr nonnull align 1 %.2.i17.i) #18
  %308 = icmp eq i8 %307, 1
  %.sroa.speculated70.i.i = select i1 %308, ptr %.2124.i.i, ptr %.2.i17.i
  call void %6(ptr nonnull align 1 %306, ptr nonnull align 1 %.sroa.speculated70.i.i) #18
  %309 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 %261
  %.3125.i.i = select i1 %308, ptr %309, ptr %.2124.i.i
  %.3.i18.i = select i1 %308, ptr %.2.i17.i, ptr %309
  %310 = getelementptr inbounds i8, ptr %306, i64 %261
  %311 = call i8 %3(ptr align 1 %4, ptr align 1 %.3125.i.i, ptr align 1 %.3.i18.i) #18
  %312 = icmp eq i8 %311, 1
  %.sroa.speculated.i19.i = select i1 %312, ptr %.3125.i.i, ptr %.3.i18.i
  call void %6(ptr nonnull align 1 %310, ptr align 1 %.sroa.speculated.i19.i) #18
  %313 = getelementptr inbounds i8, ptr %.sroa.speculated.i19.i, i64 %261
  %.4126.i.i = select i1 %312, ptr %313, ptr %.3125.i.i
  %.4.i20.i = select i1 %312, ptr %.3.i18.i, ptr %313
  %314 = getelementptr inbounds i8, ptr %310, i64 %261
  %315 = call i8 %3(ptr align 1 %4, ptr align 1 %.4126.i.i, ptr align 1 %.4.i20.i) #18
  %316 = icmp eq i8 %315, 1
  %317 = select i1 %316, ptr %.4126.i.i, ptr %.4.i20.i
  call void %6(ptr nonnull align 1 %314, ptr align 1 %317) #18
  br label %sort.tiny_sort__anon_16212.exit

sort.tiny_sort__anon_16212.exit:                  ; preds = %.cont110.i.i, %213, %.cont96.i.i, %168, %105, %75, %54, %35, %18, %12, %10, %10
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  br label %common.ret

318:                                              ; preds = %7
  %319 = lshr i64 %1, 1
  %320 = lshr i64 %1, 2
  %321 = sub nuw nsw i64 %319, %320
  %322 = sub nuw i64 %1, %319
  %323 = lshr i64 %322, 1
  %324 = sub nuw i64 %322, %323
  tail call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %320, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6)
  %325 = mul nuw i64 %320, %5
  %326 = getelementptr inbounds i8, ptr %0, i64 %325
  tail call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %326, i64 %321, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6)
  %327 = mul nuw i64 %321, %5
  %328 = getelementptr inbounds i8, ptr %326, i64 %327
  tail call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %328, i64 %323, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6)
  %329 = mul nuw i64 %323, %5
  %330 = getelementptr inbounds i8, ptr %328, i64 %329
  tail call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %330, i64 %324, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6)
  %331 = add nsw i64 %320, -1
  %332 = mul nuw i64 %331, %5
  %333 = getelementptr inbounds i8, ptr %0, i64 %332
  %334 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %333, ptr nonnull align 1 %326) #18
  %.not = icmp eq i8 %334, 1
  br i1 %.not, label %..critedge_crit_edge, label %335

..critedge_crit_edge:                             ; preds = %318
  %.pre = mul nuw i64 %319, %5
  br label %.critedge

335:                                              ; preds = %318
  %336 = add nsw i64 %319, -1
  %337 = mul nuw i64 %336, %5
  %338 = getelementptr inbounds i8, ptr %0, i64 %337
  %339 = mul nuw i64 %319, %5
  %340 = getelementptr inbounds i8, ptr %0, i64 %339
  %341 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %338, ptr nonnull align 1 %340) #18
  %.not11 = icmp eq i8 %341, 1
  br i1 %.not11, label %.critedge, label %342

342:                                              ; preds = %335
  %343 = sub i64 0, %5
  %344 = getelementptr inbounds i8, ptr %330, i64 %343
  %345 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %344, ptr nonnull align 1 %330) #18
  %.not12 = icmp eq i8 %345, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %342, %335, %..critedge_crit_edge
  %.pre-phi = phi i64 [ %.pre, %..critedge_crit_edge ], [ %339, %335 ], [ %339, %342 ]
  tail call fastcc void @sort.parity_merge__anon_16213(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %320, i64 %321, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6)
  %346 = getelementptr inbounds i8, ptr %2, i64 %.pre-phi
  %347 = getelementptr inbounds i8, ptr %0, i64 %.pre-phi
  tail call fastcc void @sort.parity_merge__anon_16213(ptr nonnull align 1 %346, ptr nonnull align 1 %347, i64 %323, i64 %324, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6)
  tail call fastcc void @sort.parity_merge__anon_16213(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %319, i64 %322, ptr nonnull readonly align 1 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 1 %6)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5) unnamed_addr #4 {
  %7 = alloca [96 x i8], align 8
  %8 = alloca [96 x i8], align 8
  %9 = alloca [96 x i8], align 8
  %10 = alloca [96 x i8], align 8
  %11 = alloca [96 x i8], align 8
  %12 = alloca [96 x i8], align 8
  %13 = alloca [96 x i8], align 8
  %14 = alloca [3072 x i8], align 8
  %.not485 = icmp ult i64 %1, 8
  br i1 %.not485, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %6
  %15 = lshr i64 %1, 3
  %16 = shl nuw i64 %4, 1
  %17 = mul nuw i64 %4, 3
  %18 = shl nuw i64 %4, 2
  %19 = mul nuw i64 %4, 5
  %20 = mul nuw i64 %4, 6
  %21 = mul nuw i64 %4, 7
  %22 = shl nuw i64 %4, 3
  %23 = sub i64 0, %4
  %24 = sub i64 0, %22
  br label %25

25:                                               ; preds = %53, %.lr.ph
  %.1488 = phi ptr [ %0, %.lr.ph ], [ %54, %53 ]
  %.0279487 = phi ptr [ %0, %.lr.ph ], [ %.1280, %53 ]
  %.0284486 = phi i64 [ %15, %.lr.ph ], [ %.1285, %53 ]
  %26 = add i64 %.0284486, -1
  %27 = getelementptr inbounds i8, ptr %.1488, i64 %4
  %28 = call i8 %2(ptr align 1 %3, ptr align 1 %.1488, ptr align 1 %27) #18
  %29 = icmp eq i8 %28, 1
  %30 = zext i1 %29 to i4
  %31 = getelementptr inbounds i8, ptr %.1488, i64 %16
  %32 = getelementptr inbounds i8, ptr %.1488, i64 %17
  %33 = call i8 %2(ptr align 1 %3, ptr align 1 %31, ptr align 1 %32) #18
  %34 = icmp eq i8 %33, 1
  %35 = zext i1 %34 to i4
  %36 = getelementptr inbounds i8, ptr %.1488, i64 %18
  %37 = getelementptr inbounds i8, ptr %.1488, i64 %19
  %38 = call i8 %2(ptr align 1 %3, ptr align 1 %36, ptr align 1 %37) #18
  %39 = icmp eq i8 %38, 1
  %40 = zext i1 %39 to i4
  %41 = getelementptr inbounds i8, ptr %.1488, i64 %20
  %42 = getelementptr inbounds i8, ptr %.1488, i64 %21
  %43 = call i8 %2(ptr align 1 %3, ptr align 1 %41, ptr align 1 %42) #18
  %44 = icmp eq i8 %43, 1
  %45 = zext i1 %44 to i4
  %46 = select i1 %34, i4 2, i4 0
  %47 = select i1 %39, i4 4, i4 0
  %48 = select i1 %44, i4 -8, i4 0
  %49 = or i4 %46, %47
  %50 = or i4 %49, %48
  %51 = or i4 %50, %30
  %52 = zext i4 %51 to i32
  switch i32 %52, label %.preheader [
    i32 0, label %55
    i32 15, label %61
  ]

.sink.split:                                      ; preds = %264, %259, %.critedge37, %139, %137, %126, %73, %59, %57, %55
  %.sink597 = phi ptr [ %94, %73 ], [ %.1488, %57 ], [ %.1488, %55 ], [ %.1488, %59 ], [ %254, %259 ], [ %254, %.critedge37 ], [ %254, %264 ], [ %96, %137 ], [ %96, %126 ], [ %96, %139 ]
  %.1285.ph = phi i64 [ %.2286, %73 ], [ %26, %57 ], [ %26, %55 ], [ %26, %59 ], [ %144, %259 ], [ %144, %.critedge37 ], [ %144, %264 ], [ %98, %137 ], [ %98, %126 ], [ %98, %139 ]
  %.1280.ph = phi ptr [ %.3282.ph55, %73 ], [ %.0279487, %57 ], [ %.0279487, %55 ], [ %.0279487, %59 ], [ %.3282.ph55, %259 ], [ %.3282.ph55, %.critedge37 ], [ %.3282.ph55, %264 ], [ %.3282.ph55, %137 ], [ %.3282.ph55, %126 ], [ %.3282.ph55, %139 ]
  call fastcc void @sort.quad_swap_merge__anon_16205(ptr nonnull align 1 %.sink597, ptr nonnull align 1 %14, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5)
  br label %53

53:                                               ; preds = %264, %.sink.split
  %.sink = phi ptr [ %.sink597, %.sink.split ], [ %254, %264 ]
  %.1285 = phi i64 [ %.1285.ph, %.sink.split ], [ %144, %264 ]
  %.1280 = phi ptr [ %.1280.ph, %.sink.split ], [ %.3282.ph55, %264 ]
  %54 = getelementptr inbounds i8, ptr %.sink, i64 %22
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %25

55:                                               ; preds = %25
  %56 = call i8 %2(ptr align 1 %3, ptr align 1 %27, ptr align 1 %31) #18
  %.not328 = icmp eq i8 %56, 1
  br i1 %.not328, label %.sink.split, label %57

57:                                               ; preds = %55
  %58 = call i8 %2(ptr align 1 %3, ptr align 1 %32, ptr align 1 %36) #18
  %.not329 = icmp eq i8 %58, 1
  br i1 %.not329, label %.sink.split, label %59

59:                                               ; preds = %57
  %60 = call i8 %2(ptr align 1 %3, ptr align 1 %37, ptr align 1 %41) #18
  %.not330 = icmp eq i8 %60, 1
  br i1 %.not330, label %.sink.split, label %.preheader

61:                                               ; preds = %25
  %62 = call i8 %2(ptr align 1 %3, ptr align 1 %27, ptr align 1 %31) #18
  %63 = icmp eq i8 %62, 1
  br i1 %63, label %64, label %.critedge4

64:                                               ; preds = %61
  %65 = call i8 %2(ptr align 1 %3, ptr align 1 %32, ptr align 1 %36) #18
  %66 = icmp eq i8 %65, 1
  br i1 %66, label %67, label %.critedge4

67:                                               ; preds = %64
  %68 = call i8 %2(ptr align 1 %3, ptr align 1 %37, ptr align 1 %41) #18
  %69 = icmp eq i8 %68, 1
  br i1 %69, label %.preheader, label %.critedge4

.critedge4:                                       ; preds = %67, %64, %61
  br label %.preheader

.preheader:                                       ; preds = %.critedge4, %67, %59, %25
  %.1299.ph = phi i2 [ 1, %67 ], [ 0, %59 ], [ -2, %25 ], [ -2, %.critedge4 ]
  %.3282.ph = phi ptr [ %.1488, %67 ], [ %.0279487, %59 ], [ %.0279487, %25 ], [ %.0279487, %.critedge4 ]
  br label %.outer

.outer:                                           ; preds = %233, %134, %.preheader
  %.1299.ph54 = phi i2 [ %.1299.ph, %.preheader ], [ 1, %233 ], [ 1, %134 ]
  %.0296.ph = phi i4 [ %45, %.preheader ], [ %163, %233 ], [ %117, %134 ]
  %.0294.ph = phi i4 [ %40, %.preheader ], [ %158, %233 ], [ %112, %134 ]
  %.0292.ph = phi i4 [ %35, %.preheader ], [ %153, %233 ], [ %107, %134 ]
  %.0290.ph = phi i4 [ %30, %.preheader ], [ %148, %233 ], [ %102, %134 ]
  %.2286.ph = phi i64 [ %26, %.preheader ], [ %144, %233 ], [ %98, %134 ]
  %.3282.ph55 = phi ptr [ %.3282.ph, %.preheader ], [ %142, %233 ], [ %96, %134 ]
  %.3.ph = phi ptr [ %.1488, %.preheader ], [ %142, %233 ], [ %96, %134 ]
  br label %70

70:                                               ; preds = %225, %218, %139, %134, %131, %128, %121, %.outer
  %.1299 = phi i2 [ %.1299.ph54, %.outer ], [ 0, %139 ], [ 1, %218 ], [ 0, %225 ], [ -2, %131 ], [ -2, %121 ], [ -2, %128 ], [ -2, %134 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %117, %139 ], [ %163, %218 ], [ %163, %225 ], [ %117, %131 ], [ %117, %121 ], [ %117, %128 ], [ %117, %134 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %112, %139 ], [ %158, %218 ], [ %158, %225 ], [ %112, %131 ], [ %112, %121 ], [ %112, %128 ], [ %112, %134 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %107, %139 ], [ %153, %218 ], [ %153, %225 ], [ %107, %131 ], [ %107, %121 ], [ %107, %128 ], [ %107, %134 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %102, %139 ], [ %148, %218 ], [ %148, %225 ], [ %102, %131 ], [ %102, %121 ], [ %102, %128 ], [ %102, %134 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %98, %139 ], [ %144, %218 ], [ %144, %225 ], [ %98, %131 ], [ %98, %121 ], [ %98, %128 ], [ %98, %134 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %96, %139 ], [ %142, %218 ], [ %142, %225 ], [ %96, %131 ], [ %96, %121 ], [ %96, %128 ], [ %96, %134 ]
  %71 = zext i2 %.1299 to i32
  switch i32 %71, label %72 [
    i32 2, label %73
    i32 0, label %95
    i32 1, label %141
  ]

72:                                               ; preds = %70
  unreachable

73:                                               ; preds = %70
  %74 = icmp eq i4 %.0290, 0
  %. = select i1 %74, i64 %4, i64 0
  %.7 = select i1 %74, i64 0, i64 %4
  %75 = getelementptr inbounds i8, ptr %.3, i64 %.
  call void %5(ptr nonnull align 1 %13, ptr align 1 %75) #18
  %76 = getelementptr inbounds i8, ptr %.3, i64 %.7
  call void %5(ptr align 1 %.3, ptr align 1 %76) #18
  %77 = getelementptr inbounds i8, ptr %.3, i64 %4
  call void %5(ptr align 1 %77, ptr nonnull align 1 %13) #18
  %78 = getelementptr inbounds i8, ptr %.3, i64 %16
  %79 = icmp eq i4 %.0292, 0
  %.8 = select i1 %79, i64 %4, i64 0
  %.9 = select i1 %79, i64 0, i64 %4
  %80 = getelementptr inbounds i8, ptr %78, i64 %.8
  call void %5(ptr nonnull align 1 %13, ptr align 1 %80) #18
  %81 = getelementptr inbounds i8, ptr %78, i64 %.9
  call void %5(ptr align 1 %78, ptr align 1 %81) #18
  %82 = getelementptr inbounds i8, ptr %78, i64 %4
  call void %5(ptr align 1 %82, ptr nonnull align 1 %13) #18
  %83 = getelementptr inbounds i8, ptr %78, i64 %16
  %84 = icmp eq i4 %.0294, 0
  %.10 = select i1 %84, i64 %4, i64 0
  %.11 = select i1 %84, i64 0, i64 %4
  %85 = getelementptr inbounds i8, ptr %83, i64 %.10
  call void %5(ptr nonnull align 1 %13, ptr align 1 %85) #18
  %86 = getelementptr inbounds i8, ptr %83, i64 %.11
  call void %5(ptr align 1 %83, ptr align 1 %86) #18
  %87 = getelementptr inbounds i8, ptr %83, i64 %4
  call void %5(ptr align 1 %87, ptr nonnull align 1 %13) #18
  %88 = getelementptr inbounds i8, ptr %83, i64 %16
  %89 = icmp eq i4 %.0296, 0
  %.12 = select i1 %89, i64 %4, i64 0
  %.13 = select i1 %89, i64 0, i64 %4
  %90 = getelementptr inbounds i8, ptr %88, i64 %.12
  call void %5(ptr nonnull align 1 %13, ptr align 1 %90) #18
  %91 = getelementptr inbounds i8, ptr %88, i64 %.13
  call void %5(ptr align 1 %88, ptr align 1 %91) #18
  %92 = getelementptr inbounds i8, ptr %88, i64 %4
  call void %5(ptr align 1 %92, ptr nonnull align 1 %13) #18
  %93 = getelementptr inbounds i8, ptr %88, i64 %16
  %94 = getelementptr inbounds i8, ptr %93, i64 %24
  br label %.sink.split

95:                                               ; preds = %70
  %96 = getelementptr inbounds i8, ptr %.3, i64 %22
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %97

97:                                               ; preds = %95
  %98 = add i64 %.2286, -1
  %99 = getelementptr inbounds i8, ptr %96, i64 %4
  %100 = call i8 %2(ptr align 1 %3, ptr align 1 %96, ptr align 1 %99) #18
  %101 = icmp eq i8 %100, 1
  %102 = zext i1 %101 to i4
  %103 = getelementptr inbounds i8, ptr %96, i64 %16
  %104 = getelementptr inbounds i8, ptr %96, i64 %17
  %105 = call i8 %2(ptr align 1 %3, ptr align 1 %103, ptr align 1 %104) #18
  %106 = icmp eq i8 %105, 1
  %107 = zext i1 %106 to i4
  %108 = getelementptr inbounds i8, ptr %96, i64 %18
  %109 = getelementptr inbounds i8, ptr %96, i64 %19
  %110 = call i8 %2(ptr align 1 %3, ptr align 1 %108, ptr align 1 %109) #18
  %111 = icmp eq i8 %110, 1
  %112 = zext i1 %111 to i4
  %113 = getelementptr inbounds i8, ptr %96, i64 %20
  %114 = getelementptr inbounds i8, ptr %96, i64 %21
  %115 = call i8 %2(ptr align 1 %3, ptr align 1 %113, ptr align 1 %114) #18
  %116 = icmp eq i8 %115, 1
  %117 = zext i1 %116 to i4
  %118 = or i4 %107, %102
  %119 = or i4 %118, %112
  %120 = or i4 %119, %117
  %.not320 = icmp eq i4 %120, 0
  br i1 %.not320, label %126, label %121

121:                                              ; preds = %97
  %122 = add nuw nsw i4 %107, %102
  %123 = add nuw nsw i4 %122, %112
  %124 = add nuw nsw i4 %123, %117
  %125 = icmp eq i4 %124, 4
  br i1 %125, label %128, label %70

126:                                              ; preds = %97
  %127 = call i8 %2(ptr align 1 %3, ptr align 1 %99, ptr align 1 %103) #18
  %.not321 = icmp eq i8 %127, 1
  br i1 %.not321, label %.sink.split, label %137

128:                                              ; preds = %121
  %129 = call i8 %2(ptr align 1 %3, ptr align 1 %99, ptr align 1 %103) #18
  %130 = icmp eq i8 %129, 1
  br i1 %130, label %131, label %70

131:                                              ; preds = %128
  %132 = call i8 %2(ptr align 1 %3, ptr align 1 %104, ptr align 1 %108) #18
  %133 = icmp eq i8 %132, 1
  br i1 %133, label %134, label %70

134:                                              ; preds = %131
  %135 = call i8 %2(ptr align 1 %3, ptr align 1 %109, ptr align 1 %113) #18
  %136 = icmp eq i8 %135, 1
  br i1 %136, label %.outer, label %70

137:                                              ; preds = %126
  %138 = call i8 %2(ptr align 1 %3, ptr align 1 %104, ptr align 1 %108) #18
  %.not322 = icmp eq i8 %138, 1
  br i1 %.not322, label %.sink.split, label %139

139:                                              ; preds = %137
  %140 = call i8 %2(ptr align 1 %3, ptr align 1 %109, ptr align 1 %113) #18
  %.not323 = icmp eq i8 %140, 1
  br i1 %.not323, label %.sink.split, label %70

141:                                              ; preds = %70
  %142 = getelementptr inbounds i8, ptr %.3, i64 %22
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %167, label %143

143:                                              ; preds = %141
  %144 = add i64 %.2286, -1
  %145 = getelementptr inbounds i8, ptr %142, i64 %4
  %146 = call i8 %2(ptr align 1 %3, ptr align 1 %142, ptr align 1 %145) #18
  %147 = icmp ne i8 %146, 1
  %148 = zext i1 %147 to i4
  %149 = getelementptr inbounds i8, ptr %142, i64 %16
  %150 = getelementptr inbounds i8, ptr %142, i64 %17
  %151 = call i8 %2(ptr align 1 %3, ptr align 1 %149, ptr align 1 %150) #18
  %152 = icmp ne i8 %151, 1
  %153 = zext i1 %152 to i4
  %154 = getelementptr inbounds i8, ptr %142, i64 %18
  %155 = getelementptr inbounds i8, ptr %142, i64 %19
  %156 = call i8 %2(ptr align 1 %3, ptr align 1 %154, ptr align 1 %155) #18
  %157 = icmp ne i8 %156, 1
  %158 = zext i1 %157 to i4
  %159 = getelementptr inbounds i8, ptr %142, i64 %20
  %160 = getelementptr inbounds i8, ptr %142, i64 %21
  %161 = call i8 %2(ptr align 1 %3, ptr align 1 %159, ptr align 1 %160) #18
  %162 = icmp ne i8 %161, 1
  %163 = zext i1 %162 to i4
  %164 = or i4 %153, %148
  %165 = or i4 %164, %158
  %166 = or i4 %165, %163
  %.not315 = icmp eq i4 %166, 0
  br i1 %.not315, label %208, label %.critedge25

167:                                              ; preds = %141
  %168 = and i64 %1, 7
  %169 = icmp eq i64 %168, 7
  br i1 %169, label %304, label %.critedge55

.critedge25:                                      ; preds = %218, %215, %212, %208, %143
  %170 = ptrtoint ptr %.3282.ph55 to i64
  %171 = getelementptr inbounds i8, ptr %142, i64 %23
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %172 = ptrtoint ptr %171 to i64
  %173 = sub nuw i64 %172, %170
  %174 = or i64 %173, %16
  %175 = and i64 %174, -4294967296
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %182

177:                                              ; preds = %.critedge25
  %178 = trunc i64 %16 to i32
  %179 = trunc i64 %173 to i32
  %180 = udiv i32 %179, %178
  %181 = zext i32 %180 to i64
  br label %184

182:                                              ; preds = %.critedge25
  %183 = udiv i64 %173, %16
  br label %184

184:                                              ; preds = %182, %177
  %185 = phi i64 [ %181, %177 ], [ %183, %182 ]
  %186 = mul nuw i64 %185, %4
  %187 = getelementptr inbounds i8, ptr %.3282.ph55, i64 %186
  %188 = sub i64 0, %186
  %189 = getelementptr inbounds i8, ptr %171, i64 %188
  %190 = and i64 %185, 1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %193, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %193, %184
  %.027.i = phi ptr [ %195, %193 ], [ %189, %184 ]
  %.025.i = phi ptr [ %194, %193 ], [ %187, %184 ]
  %.0.i = phi i64 [ %196, %193 ], [ %185, %184 ]
  %192 = lshr i64 %.0.i, 1
  br label %197

193:                                              ; preds = %184
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %187) #18
  call void %5(ptr nonnull align 1 %187, ptr nonnull align 1 %189) #18
  %194 = getelementptr inbounds i8, ptr %187, i64 %23
  call void %5(ptr nonnull align 1 %189, ptr nonnull align 1 %7) #18
  %195 = getelementptr inbounds i8, ptr %189, i64 %4
  %196 = add i64 %185, -1
  br label %._crit_edge.i

197:                                              ; preds = %199, %._crit_edge.i
  %.029.i = phi ptr [ %171, %._crit_edge.i ], [ %202, %199 ]
  %.128.i = phi ptr [ %.027.i, %._crit_edge.i ], [ %200, %199 ]
  %.126.i = phi ptr [ %.025.i, %._crit_edge.i ], [ %201, %199 ]
  %.024.i = phi ptr [ %.3282.ph55, %._crit_edge.i ], [ %203, %199 ]
  %.1.i = phi i64 [ %192, %._crit_edge.i ], [ %math, %199 ]
  call void %5(ptr nonnull align 1 %8, ptr align 1 %.024.i) #18
  call void %5(ptr align 1 %.024.i, ptr align 1 %.029.i) #18
  call void %5(ptr align 1 %.029.i, ptr nonnull align 1 %8) #18
  call void %5(ptr nonnull align 1 %7, ptr align 1 %.126.i) #18
  call void %5(ptr align 1 %.126.i, ptr align 1 %.128.i) #18
  call void %5(ptr align 1 %.128.i, ptr nonnull align 1 %7) #18
  %198 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i, i64 1)
  %math = extractvalue { i64, i1 } %198, 0
  %ov = extractvalue { i64, i1 } %198, 1
  br i1 %ov, label %sort.quad_reversal.exit, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds i8, ptr %.128.i, i64 %4
  %201 = getelementptr inbounds i8, ptr %.126.i, i64 %23
  %202 = getelementptr inbounds i8, ptr %.029.i, i64 %23
  %203 = getelementptr inbounds i8, ptr %.024.i, i64 %4
  br label %197

sort.quad_reversal.exit:                          ; preds = %197
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  %204 = add nuw nsw i4 %153, %148
  %205 = add nuw nsw i4 %204, %158
  %206 = add nuw i4 %205, %163
  %207 = zext i4 %206 to i32
  switch i32 %207, label %.critedge37 [
    i32 4, label %221
    i32 0, label %227
  ]

208:                                              ; preds = %143
  %209 = getelementptr inbounds i8, ptr %142, i64 %23
  %210 = call i8 %2(ptr align 1 %3, ptr align 1 %209, ptr align 1 %142) #18
  %211 = icmp eq i8 %210, 1
  br i1 %211, label %212, label %.critedge25

212:                                              ; preds = %208
  %213 = call i8 %2(ptr align 1 %3, ptr align 1 %145, ptr align 1 %149) #18
  %214 = icmp eq i8 %213, 1
  br i1 %214, label %215, label %.critedge25

215:                                              ; preds = %212
  %216 = call i8 %2(ptr align 1 %3, ptr align 1 %150, ptr align 1 %154) #18
  %217 = icmp eq i8 %216, 1
  br i1 %217, label %218, label %.critedge25

218:                                              ; preds = %215
  %219 = call i8 %2(ptr align 1 %3, ptr align 1 %155, ptr align 1 %159) #18
  %220 = icmp eq i8 %219, 1
  br i1 %220, label %70, label %.critedge25

221:                                              ; preds = %sort.quad_reversal.exit
  %222 = call i8 %2(ptr align 1 %3, ptr align 1 %145, ptr align 1 %149) #18
  %.not316 = icmp eq i8 %222, 1
  br i1 %.not316, label %.critedge37, label %223

223:                                              ; preds = %221
  %224 = call i8 %2(ptr align 1 %3, ptr align 1 %150, ptr align 1 %154) #18
  %.not317 = icmp eq i8 %224, 1
  br i1 %.not317, label %.critedge37, label %225

225:                                              ; preds = %223
  %226 = call i8 %2(ptr align 1 %3, ptr align 1 %155, ptr align 1 %159) #18
  %.not318 = icmp eq i8 %226, 1
  br i1 %.not318, label %.critedge37, label %70

227:                                              ; preds = %sort.quad_reversal.exit
  %228 = call i8 %2(ptr align 1 %3, ptr align 1 %145, ptr align 1 %149) #18
  %229 = icmp eq i8 %228, 1
  br i1 %229, label %230, label %.critedge37

230:                                              ; preds = %227
  %231 = call i8 %2(ptr align 1 %3, ptr align 1 %150, ptr align 1 %154) #18
  %232 = icmp eq i8 %231, 1
  br i1 %232, label %233, label %.critedge37

233:                                              ; preds = %230
  %234 = call i8 %2(ptr align 1 %3, ptr align 1 %155, ptr align 1 %159) #18
  %235 = icmp eq i8 %234, 1
  br i1 %235, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %233, %230, %227, %225, %223, %221, %sort.quad_reversal.exit
  %236 = icmp ne i8 %161, 1
  %237 = icmp ne i8 %156, 1
  %238 = icmp ne i8 %151, 1
  %239 = icmp ne i8 %146, 1
  %.42 = select i1 %239, i64 0, i64 %4
  %.43 = select i1 %239, i64 %4, i64 0
  %240 = getelementptr inbounds i8, ptr %142, i64 %.43
  call void %5(ptr nonnull align 1 %13, ptr align 1 %240) #18
  %241 = getelementptr inbounds i8, ptr %142, i64 %.42
  call void %5(ptr align 1 %142, ptr align 1 %241) #18
  call void %5(ptr align 1 %145, ptr nonnull align 1 %13) #18
  %.44 = select i1 %238, i64 0, i64 %4
  %.45 = select i1 %238, i64 %4, i64 0
  %242 = getelementptr inbounds i8, ptr %149, i64 %.45
  call void %5(ptr nonnull align 1 %13, ptr align 1 %242) #18
  %243 = getelementptr inbounds i8, ptr %149, i64 %.44
  call void %5(ptr align 1 %149, ptr align 1 %243) #18
  %244 = getelementptr inbounds i8, ptr %149, i64 %4
  call void %5(ptr align 1 %244, ptr nonnull align 1 %13) #18
  %245 = getelementptr inbounds i8, ptr %149, i64 %16
  %.46 = select i1 %237, i64 0, i64 %4
  %.47 = select i1 %237, i64 %4, i64 0
  %246 = getelementptr inbounds i8, ptr %245, i64 %.47
  call void %5(ptr nonnull align 1 %13, ptr align 1 %246) #18
  %247 = getelementptr inbounds i8, ptr %245, i64 %.46
  call void %5(ptr align 1 %245, ptr align 1 %247) #18
  %248 = getelementptr inbounds i8, ptr %245, i64 %4
  call void %5(ptr align 1 %248, ptr nonnull align 1 %13) #18
  %249 = getelementptr inbounds i8, ptr %245, i64 %16
  %.48 = select i1 %236, i64 0, i64 %4
  %.49 = select i1 %236, i64 %4, i64 0
  %250 = getelementptr inbounds i8, ptr %249, i64 %.49
  call void %5(ptr nonnull align 1 %13, ptr align 1 %250) #18
  %251 = getelementptr inbounds i8, ptr %249, i64 %.48
  call void %5(ptr align 1 %249, ptr align 1 %251) #18
  %252 = getelementptr inbounds i8, ptr %249, i64 %4
  call void %5(ptr align 1 %252, ptr nonnull align 1 %13) #18
  %253 = getelementptr inbounds i8, ptr %249, i64 %16
  %254 = getelementptr inbounds i8, ptr %253, i64 %24
  %255 = getelementptr inbounds i8, ptr %254, i64 %4
  %256 = getelementptr inbounds i8, ptr %254, i64 %16
  %257 = call i8 %2(ptr align 1 %3, ptr align 1 %255, ptr align 1 %256) #18
  %258 = icmp eq i8 %257, 1
  br i1 %258, label %.sink.split, label %259

259:                                              ; preds = %.critedge37
  %260 = getelementptr inbounds i8, ptr %254, i64 %17
  %261 = getelementptr inbounds i8, ptr %254, i64 %18
  %262 = call i8 %2(ptr align 1 %3, ptr align 1 %260, ptr align 1 %261) #18
  %263 = icmp eq i8 %262, 1
  br i1 %263, label %.sink.split, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds i8, ptr %254, i64 %19
  %266 = getelementptr inbounds i8, ptr %254, i64 %20
  %267 = call i8 %2(ptr align 1 %3, ptr align 1 %265, ptr align 1 %266) #18
  %268 = icmp eq i8 %267, 1
  br i1 %268, label %.sink.split, label %53

269:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %304
  %270 = getelementptr inbounds i8, ptr %142, i64 %23
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %271 = ptrtoint ptr %270 to i64
  %272 = ptrtoint ptr %.3282.ph55 to i64
  %273 = sub nuw i64 %271, %272
  %274 = or i64 %273, %16
  %275 = and i64 %274, -4294967296
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %277, label %282

277:                                              ; preds = %269
  %278 = trunc i64 %16 to i32
  %279 = trunc i64 %273 to i32
  %280 = udiv i32 %279, %278
  %281 = zext i32 %280 to i64
  br label %284

282:                                              ; preds = %269
  %283 = udiv i64 %273, %16
  br label %284

284:                                              ; preds = %282, %277
  %285 = phi i64 [ %281, %277 ], [ %283, %282 ]
  %286 = mul nuw i64 %285, %4
  %287 = getelementptr inbounds i8, ptr %.3282.ph55, i64 %286
  %288 = sub i64 0, %286
  %289 = getelementptr inbounds i8, ptr %270, i64 %288
  %290 = and i64 %285, 1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %293, label %._crit_edge.i332

._crit_edge.i332:                                 ; preds = %293, %284
  %.027.i334 = phi ptr [ %295, %293 ], [ %289, %284 ]
  %.025.i335 = phi ptr [ %294, %293 ], [ %287, %284 ]
  %.0.i336 = phi i64 [ %296, %293 ], [ %285, %284 ]
  %292 = lshr i64 %.0.i336, 1
  br label %297

293:                                              ; preds = %284
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %287) #18
  call void %5(ptr nonnull align 1 %287, ptr nonnull align 1 %289) #18
  %294 = getelementptr inbounds i8, ptr %287, i64 %23
  call void %5(ptr nonnull align 1 %289, ptr nonnull align 1 %7) #18
  %295 = getelementptr inbounds i8, ptr %289, i64 %4
  %296 = add i64 %285, -1
  br label %._crit_edge.i332

297:                                              ; preds = %299, %._crit_edge.i332
  %.029.i337 = phi ptr [ %270, %._crit_edge.i332 ], [ %302, %299 ]
  %.128.i338 = phi ptr [ %.027.i334, %._crit_edge.i332 ], [ %300, %299 ]
  %.126.i339 = phi ptr [ %.025.i335, %._crit_edge.i332 ], [ %301, %299 ]
  %.024.i340 = phi ptr [ %.3282.ph55, %._crit_edge.i332 ], [ %303, %299 ]
  %.1.i341 = phi i64 [ %292, %._crit_edge.i332 ], [ %math265, %299 ]
  call void %5(ptr nonnull align 1 %8, ptr align 1 %.024.i340) #18
  call void %5(ptr align 1 %.024.i340, ptr align 1 %.029.i337) #18
  call void %5(ptr align 1 %.029.i337, ptr nonnull align 1 %8) #18
  call void %5(ptr nonnull align 1 %7, ptr align 1 %.126.i339) #18
  call void %5(ptr align 1 %.126.i339, ptr align 1 %.128.i338) #18
  call void %5(ptr align 1 %.128.i338, ptr nonnull align 1 %7) #18
  %298 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i341, i64 1)
  %math265 = extractvalue { i64, i1 } %298, 0
  %ov266 = extractvalue { i64, i1 } %298, 1
  br i1 %ov266, label %sort.quad_reversal.exit342, label %299

299:                                              ; preds = %297
  %300 = getelementptr inbounds i8, ptr %.128.i338, i64 %4
  %301 = getelementptr inbounds i8, ptr %.126.i339, i64 %23
  %302 = getelementptr inbounds i8, ptr %.029.i337, i64 %23
  %303 = getelementptr inbounds i8, ptr %.024.i340, i64 %4
  br label %297

sort.quad_reversal.exit342:                       ; preds = %297
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  br label %.loopexit

304:                                              ; preds = %167
  %305 = getelementptr inbounds i8, ptr %142, i64 %19
  %306 = getelementptr inbounds i8, ptr %142, i64 %20
  %307 = call i8 %2(ptr align 1 %3, ptr align 1 %305, ptr align 1 %306) #18
  %.not314 = icmp eq i8 %307, 1
  br i1 %.not314, label %.critedge55.thread, label %269

.critedge55:                                      ; preds = %167
  %308 = icmp ugt i64 %168, 5
  br i1 %308, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %304
  %309 = getelementptr inbounds i8, ptr %142, i64 %18
  %310 = getelementptr inbounds i8, ptr %142, i64 %19
  %311 = call i8 %2(ptr align 1 %3, ptr align 1 %309, ptr align 1 %310) #18
  %.not313 = icmp eq i8 %311, 1
  br i1 %.not313, label %.critedge57.thread, label %269

.critedge57:                                      ; preds = %.critedge55
  %312 = icmp eq i64 %168, 5
  br i1 %312, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %313 = getelementptr inbounds i8, ptr %142, i64 %17
  %314 = getelementptr inbounds i8, ptr %142, i64 %18
  %315 = call i8 %2(ptr align 1 %3, ptr align 1 %313, ptr align 1 %314) #18
  %.not312 = icmp eq i8 %315, 1
  br i1 %.not312, label %.critedge59.thread, label %269

.critedge59:                                      ; preds = %.critedge57
  %316 = icmp ugt i64 %168, 3
  br i1 %316, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %317 = getelementptr inbounds i8, ptr %142, i64 %16
  %318 = getelementptr inbounds i8, ptr %142, i64 %17
  %319 = call i8 %2(ptr align 1 %3, ptr align 1 %317, ptr align 1 %318) #18
  %.not311 = icmp eq i8 %319, 1
  br i1 %.not311, label %.critedge61.thread, label %269

.critedge61:                                      ; preds = %.critedge59
  %320 = icmp eq i64 %168, 3
  br i1 %320, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %321 = getelementptr inbounds i8, ptr %142, i64 %4
  %322 = getelementptr inbounds i8, ptr %142, i64 %16
  %323 = call i8 %2(ptr align 1 %3, ptr align 1 %321, ptr align 1 %322) #18
  %.not310 = icmp eq i8 %323, 1
  br i1 %.not310, label %.critedge63.thread, label %269

.critedge63:                                      ; preds = %.critedge61
  %324 = icmp ugt i64 %168, 1
  br i1 %324, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %325 = getelementptr inbounds i8, ptr %142, i64 %4
  %326 = call i8 %2(ptr align 1 %3, ptr align 1 %142, ptr align 1 %325) #18
  %.not309 = icmp eq i8 %326, 1
  br i1 %.not309, label %.critedge65.thread, label %269

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %168, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %327 = getelementptr inbounds i8, ptr %142, i64 %23
  %328 = call i8 %2(ptr align 1 %3, ptr align 1 %327, ptr align 1 %142) #18
  %.not308 = icmp eq i8 %328, 1
  br i1 %.not308, label %.critedge67, label %269

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %329 = mul nuw i64 %168, %4
  %330 = getelementptr inbounds i8, ptr %142, i64 %329
  %331 = getelementptr inbounds i8, ptr %330, i64 %23
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %332 = ptrtoint ptr %331 to i64
  %333 = ptrtoint ptr %.3282.ph55 to i64
  %334 = sub nuw i64 %332, %333
  %335 = or i64 %334, %16
  %336 = and i64 %335, -4294967296
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %343

338:                                              ; preds = %.critedge67
  %339 = trunc i64 %16 to i32
  %340 = trunc i64 %334 to i32
  %341 = udiv i32 %340, %339
  %342 = zext i32 %341 to i64
  br label %345

343:                                              ; preds = %.critedge67
  %344 = udiv i64 %334, %16
  br label %345

345:                                              ; preds = %343, %338
  %346 = phi i64 [ %342, %338 ], [ %344, %343 ]
  %347 = mul nuw i64 %346, %4
  %348 = getelementptr inbounds i8, ptr %.3282.ph55, i64 %347
  %349 = sub i64 0, %347
  %350 = getelementptr inbounds i8, ptr %331, i64 %349
  %351 = and i64 %346, 1
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %354, label %._crit_edge.i344

._crit_edge.i344:                                 ; preds = %354, %345
  %.027.i346 = phi ptr [ %356, %354 ], [ %350, %345 ]
  %.025.i347 = phi ptr [ %355, %354 ], [ %348, %345 ]
  %.0.i348 = phi i64 [ %357, %354 ], [ %346, %345 ]
  %353 = lshr i64 %.0.i348, 1
  br label %358

354:                                              ; preds = %345
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %348) #18
  call void %5(ptr nonnull align 1 %348, ptr nonnull align 1 %350) #18
  %355 = getelementptr inbounds i8, ptr %348, i64 %23
  call void %5(ptr nonnull align 1 %350, ptr nonnull align 1 %7) #18
  %356 = getelementptr inbounds i8, ptr %350, i64 %4
  %357 = add i64 %346, -1
  br label %._crit_edge.i344

358:                                              ; preds = %360, %._crit_edge.i344
  %.029.i349 = phi ptr [ %331, %._crit_edge.i344 ], [ %363, %360 ]
  %.128.i350 = phi ptr [ %.027.i346, %._crit_edge.i344 ], [ %361, %360 ]
  %.126.i351 = phi ptr [ %.025.i347, %._crit_edge.i344 ], [ %362, %360 ]
  %.024.i352 = phi ptr [ %.3282.ph55, %._crit_edge.i344 ], [ %364, %360 ]
  %.1.i353 = phi i64 [ %353, %._crit_edge.i344 ], [ %math271, %360 ]
  call void %5(ptr nonnull align 1 %8, ptr align 1 %.024.i352) #18
  call void %5(ptr align 1 %.024.i352, ptr align 1 %.029.i349) #18
  call void %5(ptr align 1 %.029.i349, ptr nonnull align 1 %8) #18
  call void %5(ptr nonnull align 1 %7, ptr align 1 %.126.i351) #18
  call void %5(ptr align 1 %.126.i351, ptr align 1 %.128.i350) #18
  call void %5(ptr align 1 %.128.i350, ptr nonnull align 1 %7) #18
  %359 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %.1.i353, i64 1)
  %math271 = extractvalue { i64, i1 } %359, 0
  %ov272 = extractvalue { i64, i1 } %359, 1
  br i1 %ov272, label %sort.quad_reversal.exit354, label %360

360:                                              ; preds = %358
  %361 = getelementptr inbounds i8, ptr %.128.i350, i64 %4
  %362 = getelementptr inbounds i8, ptr %.126.i351, i64 %23
  %363 = getelementptr inbounds i8, ptr %.029.i349, i64 %23
  %364 = getelementptr inbounds i8, ptr %.024.i352, i64 %4
  br label %358

sort.quad_reversal.exit354:                       ; preds = %358
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  %365 = icmp eq ptr %.3282.ph55, %0
  br i1 %365, label %common.ret, label %366

common.ret:                                       ; preds = %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit354
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit354 ], [ true, %._crit_edge ], [ true, %.loopexit.i ]
  ret i1 %common.ret.op

366:                                              ; preds = %.loopexit, %sort.quad_reversal.exit354
  %.not302490 = icmp ult i64 %1, 32
  br i1 %.not302490, label %._crit_edge, label %.lr.ph493

.lr.ph493:                                        ; preds = %366
  %367 = lshr i64 %1, 5
  %368 = mul nuw i64 %4, 7
  %369 = shl nuw i64 %4, 3
  %370 = mul nuw i64 %4, 15
  %371 = shl nuw i64 %4, 4
  %372 = mul nuw i64 %4, 23
  %373 = mul nuw i64 %4, 24
  %374 = sub i64 0, %4
  %375 = getelementptr inbounds i8, ptr %14, i64 %370
  %376 = getelementptr inbounds i8, ptr %14, i64 %371
  %377 = getelementptr inbounds i8, ptr %376, i64 %370
  %378 = getelementptr inbounds i8, ptr %376, i64 %374
  %379 = getelementptr inbounds i8, ptr %378, i64 %371
  %380 = mul nuw i64 %4, 31
  %381 = shl i64 %4, 5
  %.167.i = getelementptr inbounds i8, ptr %14, i64 %4
  %382 = getelementptr inbounds i8, ptr %375, i64 %374
  %.167.i.1 = getelementptr inbounds i8, ptr %.167.i, i64 %4
  %383 = getelementptr inbounds i8, ptr %382, i64 %374
  %.167.i.2 = getelementptr inbounds i8, ptr %.167.i.1, i64 %4
  %384 = getelementptr inbounds i8, ptr %383, i64 %374
  %.167.i.3 = getelementptr inbounds i8, ptr %.167.i.2, i64 %4
  %385 = getelementptr inbounds i8, ptr %384, i64 %374
  %.167.i.4 = getelementptr inbounds i8, ptr %.167.i.3, i64 %4
  %386 = getelementptr inbounds i8, ptr %385, i64 %374
  %.167.i.5 = getelementptr inbounds i8, ptr %.167.i.4, i64 %4
  %387 = getelementptr inbounds i8, ptr %386, i64 %374
  %.167.i.6 = getelementptr inbounds i8, ptr %.167.i.5, i64 %4
  %388 = getelementptr inbounds i8, ptr %387, i64 %374
  %.167.i370 = getelementptr inbounds i8, ptr %376, i64 %4
  %389 = getelementptr inbounds i8, ptr %377, i64 %374
  %.167.i370.1 = getelementptr inbounds i8, ptr %.167.i370, i64 %4
  %390 = getelementptr inbounds i8, ptr %389, i64 %374
  %.167.i370.2 = getelementptr inbounds i8, ptr %.167.i370.1, i64 %4
  %391 = getelementptr inbounds i8, ptr %390, i64 %374
  %.167.i370.3 = getelementptr inbounds i8, ptr %.167.i370.2, i64 %4
  %392 = getelementptr inbounds i8, ptr %391, i64 %374
  %.167.i370.4 = getelementptr inbounds i8, ptr %.167.i370.3, i64 %4
  %393 = getelementptr inbounds i8, ptr %392, i64 %374
  %.167.i370.5 = getelementptr inbounds i8, ptr %.167.i370.4, i64 %4
  %394 = getelementptr inbounds i8, ptr %393, i64 %374
  %.167.i370.6 = getelementptr inbounds i8, ptr %.167.i370.5, i64 %4
  %395 = getelementptr inbounds i8, ptr %394, i64 %374
  %uglygep255 = getelementptr i8, ptr %0, i64 %4
  br label %397

.loopexit:                                        ; preds = %sort.quad_reversal.exit342, %95, %53, %6
  %.0.ph = phi ptr [ %142, %sort.quad_reversal.exit342 ], [ %0, %6 ], [ %96, %95 ], [ %54, %53 ]
  %396 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %.0.ph, i64 %396, ptr nonnull align 1 %14, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5)
  br label %366

397:                                              ; preds = %403, %.lr.ph493
  %lsr.iv256 = phi ptr [ %uglygep255, %.lr.ph493 ], [ %uglygep257, %403 ]
  %.5492 = phi ptr [ %0, %.lr.ph493 ], [ %405, %403 ]
  %.4288491 = phi i64 [ %367, %.lr.ph493 ], [ %404, %403 ]
  %398 = getelementptr inbounds i8, ptr %.5492, i64 %368
  %399 = getelementptr inbounds i8, ptr %.5492, i64 %369
  %400 = call i8 %2(ptr align 1 %3, ptr align 1 %398, ptr align 1 %399) #18
  %.not303 = icmp eq i8 %400, 1
  br i1 %.not303, label %.critedge69, label %406

._crit_edge:                                      ; preds = %403, %366
  %.5.lcssa = phi ptr [ %0, %366 ], [ %405, %403 ]
  %401 = and i64 %1, 31
  %402 = icmp ugt i64 %401, 8
  br i1 %402, label %.preheader.lr.ph.i, label %common.ret

403:                                              ; preds = %sort.parity_merge__anon_16213.exit406, %410
  %404 = add nsw i64 %.4288491, -1
  %405 = getelementptr inbounds i8, ptr %.5492, i64 %381
  %uglygep257 = getelementptr i8, ptr %lsr.iv256, i64 %381
  %.not302 = icmp eq i64 %404, 0
  br i1 %.not302, label %._crit_edge, label %397

406:                                              ; preds = %397
  %407 = getelementptr inbounds i8, ptr %.5492, i64 %370
  %408 = getelementptr inbounds i8, ptr %.5492, i64 %371
  %409 = call i8 %2(ptr align 1 %3, ptr align 1 %407, ptr align 1 %408) #18
  %.not304 = icmp eq i8 %409, 1
  br i1 %.not304, label %.critedge69, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds i8, ptr %.5492, i64 %372
  %412 = getelementptr inbounds i8, ptr %.5492, i64 %373
  %413 = call i8 %2(ptr align 1 %3, ptr align 1 %411, ptr align 1 %412) #18
  %.not305 = icmp eq i8 %413, 1
  br i1 %.not305, label %.critedge69, label %403

.critedge69:                                      ; preds = %410, %406, %397
  %414 = getelementptr inbounds i8, ptr %399, i64 %374
  %415 = getelementptr inbounds i8, ptr %414, i64 %369
  %416 = call i8 %2(ptr align 1 %3, ptr align 1 %.5492, ptr nonnull align 1 %399) #18
  %.not.i = icmp eq i8 %416, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %399, ptr %.5492
  call void %5(ptr nonnull align 1 %14, ptr align 1 %.sroa.speculated21.i) #18
  %417 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 %4
  %.0..i = select i1 %.not.i, ptr %.5492, ptr %417
  %..061.i = select i1 %.not.i, ptr %417, ptr %399
  %418 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i, ptr align 1 %..061.i) #18
  %.not76.i = icmp eq i8 %418, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  call void %5(ptr nonnull align 1 %.167.i, ptr align 1 %.sroa.speculated.i) #18
  %419 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %4
  %..364.i = select i1 %.not76.i, ptr %419, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %419
  %420 = call i8 %2(ptr align 1 %3, ptr align 1 %414, ptr align 1 %415) #18
  %421 = icmp eq i8 %420, 1
  %.sroa.speculated40.i = select i1 %421, ptr %414, ptr %415
  call void %5(ptr nonnull align 1 %375, ptr align 1 %.sroa.speculated40.i) #18
  %422 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 %374
  %.171.i = select i1 %421, ptr %415, ptr %422
  %.169.i = select i1 %421, ptr %422, ptr %414
  %423 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i, ptr align 1 %..364.i) #18
  %.not76.i.1 = icmp eq i8 %423, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  call void %5(ptr nonnull align 1 %.167.i.1, ptr align 1 %.sroa.speculated.i.1) #18
  %424 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 %4
  %..364.i.1 = select i1 %.not76.i.1, ptr %424, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %424
  %425 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i, ptr align 1 %.171.i) #18
  %426 = icmp eq i8 %425, 1
  %.sroa.speculated40.i.1 = select i1 %426, ptr %.169.i, ptr %.171.i
  call void %5(ptr nonnull align 1 %382, ptr align 1 %.sroa.speculated40.i.1) #18
  %427 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 %374
  %.171.i.1 = select i1 %426, ptr %.171.i, ptr %427
  %.169.i.1 = select i1 %426, ptr %427, ptr %.169.i
  %428 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.1, ptr align 1 %..364.i.1) #18
  %.not76.i.2 = icmp eq i8 %428, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  call void %5(ptr nonnull align 1 %.167.i.2, ptr align 1 %.sroa.speculated.i.2) #18
  %429 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 %4
  %..364.i.2 = select i1 %.not76.i.2, ptr %429, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %429
  %430 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.1, ptr align 1 %.171.i.1) #18
  %431 = icmp eq i8 %430, 1
  %.sroa.speculated40.i.2 = select i1 %431, ptr %.169.i.1, ptr %.171.i.1
  call void %5(ptr nonnull align 1 %383, ptr align 1 %.sroa.speculated40.i.2) #18
  %432 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 %374
  %.171.i.2 = select i1 %431, ptr %.171.i.1, ptr %432
  %.169.i.2 = select i1 %431, ptr %432, ptr %.169.i.1
  %433 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.2, ptr align 1 %..364.i.2) #18
  %.not76.i.3 = icmp eq i8 %433, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  call void %5(ptr nonnull align 1 %.167.i.3, ptr align 1 %.sroa.speculated.i.3) #18
  %434 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 %4
  %..364.i.3 = select i1 %.not76.i.3, ptr %434, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %434
  %435 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.2, ptr align 1 %.171.i.2) #18
  %436 = icmp eq i8 %435, 1
  %.sroa.speculated40.i.3 = select i1 %436, ptr %.169.i.2, ptr %.171.i.2
  call void %5(ptr nonnull align 1 %384, ptr align 1 %.sroa.speculated40.i.3) #18
  %437 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 %374
  %.171.i.3 = select i1 %436, ptr %.171.i.2, ptr %437
  %.169.i.3 = select i1 %436, ptr %437, ptr %.169.i.2
  %438 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.3, ptr align 1 %..364.i.3) #18
  %.not76.i.4 = icmp eq i8 %438, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  call void %5(ptr nonnull align 1 %.167.i.4, ptr align 1 %.sroa.speculated.i.4) #18
  %439 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 %4
  %..364.i.4 = select i1 %.not76.i.4, ptr %439, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %439
  %440 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.3, ptr align 1 %.171.i.3) #18
  %441 = icmp eq i8 %440, 1
  %.sroa.speculated40.i.4 = select i1 %441, ptr %.169.i.3, ptr %.171.i.3
  call void %5(ptr nonnull align 1 %385, ptr align 1 %.sroa.speculated40.i.4) #18
  %442 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 %374
  %.171.i.4 = select i1 %441, ptr %.171.i.3, ptr %442
  %.169.i.4 = select i1 %441, ptr %442, ptr %.169.i.3
  %443 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.4, ptr align 1 %..364.i.4) #18
  %.not76.i.5 = icmp eq i8 %443, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  call void %5(ptr align 1 %.167.i.5, ptr align 1 %.sroa.speculated.i.5) #18
  %444 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 %4
  %..364.i.5 = select i1 %.not76.i.5, ptr %444, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %444
  %445 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.4, ptr align 1 %.171.i.4) #18
  %446 = icmp eq i8 %445, 1
  %.sroa.speculated40.i.5 = select i1 %446, ptr %.169.i.4, ptr %.171.i.4
  call void %5(ptr align 1 %386, ptr align 1 %.sroa.speculated40.i.5) #18
  %447 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 %374
  %.171.i.5 = select i1 %446, ptr %.171.i.4, ptr %447
  %.169.i.5 = select i1 %446, ptr %447, ptr %.169.i.4
  %448 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.5, ptr align 1 %..364.i.5) #18
  %.not76.i.6 = icmp eq i8 %448, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  call void %5(ptr align 1 %.167.i.6, ptr align 1 %.sroa.speculated.i.6) #18
  %449 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.5, ptr align 1 %.171.i.5) #18
  %450 = icmp eq i8 %449, 1
  %.sroa.speculated40.i.6 = select i1 %450, ptr %.169.i.5, ptr %.171.i.5
  call void %5(ptr align 1 %387, ptr align 1 %.sroa.speculated40.i.6) #18
  %451 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 %374
  %.171.i.6 = select i1 %450, ptr %.171.i.5, ptr %451
  %.169.i.6 = select i1 %450, ptr %451, ptr %.169.i.5
  %452 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.6, ptr align 1 %.171.i.6) #18
  %453 = icmp eq i8 %452, 1
  %.sroa.speculated46.i = select i1 %453, ptr %.169.i.6, ptr %.171.i.6
  call void %5(ptr align 1 %388, ptr align 1 %.sroa.speculated46.i) #18
  %454 = getelementptr inbounds i8, ptr %.5492, i64 %371
  %455 = getelementptr inbounds i8, ptr %454, i64 %369
  %456 = getelementptr inbounds i8, ptr %455, i64 %374
  %457 = getelementptr inbounds i8, ptr %456, i64 %369
  %458 = call i8 %2(ptr align 1 %3, ptr align 1 %454, ptr nonnull align 1 %455) #18
  %.not.i359 = icmp eq i8 %458, 1
  %.sroa.speculated21.i360 = select i1 %.not.i359, ptr %455, ptr %454
  call void %5(ptr nonnull align 1 %376, ptr align 1 %.sroa.speculated21.i360) #18
  %459 = getelementptr inbounds i8, ptr %.sroa.speculated21.i360, i64 %4
  %.0..i361 = select i1 %.not.i359, ptr %454, ptr %459
  %..061.i362 = select i1 %.not.i359, ptr %459, ptr %455
  %460 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i361, ptr align 1 %..061.i362) #18
  %.not76.i371 = icmp eq i8 %460, 1
  %.sroa.speculated.i372 = select i1 %.not76.i371, ptr %..061.i362, ptr %.0..i361
  call void %5(ptr nonnull align 1 %.167.i370, ptr align 1 %.sroa.speculated.i372) #18
  %461 = getelementptr inbounds i8, ptr %.sroa.speculated.i372, i64 %4
  %..364.i373 = select i1 %.not76.i371, ptr %461, ptr %..061.i362
  %.3..i374 = select i1 %.not76.i371, ptr %.0..i361, ptr %461
  %462 = call i8 %2(ptr align 1 %3, ptr align 1 %456, ptr align 1 %457) #18
  %463 = icmp eq i8 %462, 1
  %.sroa.speculated40.i375 = select i1 %463, ptr %456, ptr %457
  call void %5(ptr nonnull align 1 %377, ptr align 1 %.sroa.speculated40.i375) #18
  %464 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375, i64 %374
  %.171.i376 = select i1 %463, ptr %457, ptr %464
  %.169.i377 = select i1 %463, ptr %464, ptr %456
  %465 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374, ptr align 1 %..364.i373) #18
  %.not76.i371.1 = icmp eq i8 %465, 1
  %.sroa.speculated.i372.1 = select i1 %.not76.i371.1, ptr %..364.i373, ptr %.3..i374
  call void %5(ptr nonnull align 1 %.167.i370.1, ptr align 1 %.sroa.speculated.i372.1) #18
  %466 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.1, i64 %4
  %..364.i373.1 = select i1 %.not76.i371.1, ptr %466, ptr %..364.i373
  %.3..i374.1 = select i1 %.not76.i371.1, ptr %.3..i374, ptr %466
  %467 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377, ptr align 1 %.171.i376) #18
  %468 = icmp eq i8 %467, 1
  %.sroa.speculated40.i375.1 = select i1 %468, ptr %.169.i377, ptr %.171.i376
  call void %5(ptr nonnull align 1 %389, ptr align 1 %.sroa.speculated40.i375.1) #18
  %469 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.1, i64 %374
  %.171.i376.1 = select i1 %468, ptr %.171.i376, ptr %469
  %.169.i377.1 = select i1 %468, ptr %469, ptr %.169.i377
  %470 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.1, ptr align 1 %..364.i373.1) #18
  %.not76.i371.2 = icmp eq i8 %470, 1
  %.sroa.speculated.i372.2 = select i1 %.not76.i371.2, ptr %..364.i373.1, ptr %.3..i374.1
  call void %5(ptr nonnull align 1 %.167.i370.2, ptr align 1 %.sroa.speculated.i372.2) #18
  %471 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.2, i64 %4
  %..364.i373.2 = select i1 %.not76.i371.2, ptr %471, ptr %..364.i373.1
  %.3..i374.2 = select i1 %.not76.i371.2, ptr %.3..i374.1, ptr %471
  %472 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.1, ptr align 1 %.171.i376.1) #18
  %473 = icmp eq i8 %472, 1
  %.sroa.speculated40.i375.2 = select i1 %473, ptr %.169.i377.1, ptr %.171.i376.1
  call void %5(ptr nonnull align 1 %390, ptr align 1 %.sroa.speculated40.i375.2) #18
  %474 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.2, i64 %374
  %.171.i376.2 = select i1 %473, ptr %.171.i376.1, ptr %474
  %.169.i377.2 = select i1 %473, ptr %474, ptr %.169.i377.1
  %475 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.2, ptr align 1 %..364.i373.2) #18
  %.not76.i371.3 = icmp eq i8 %475, 1
  %.sroa.speculated.i372.3 = select i1 %.not76.i371.3, ptr %..364.i373.2, ptr %.3..i374.2
  call void %5(ptr nonnull align 1 %.167.i370.3, ptr align 1 %.sroa.speculated.i372.3) #18
  %476 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.3, i64 %4
  %..364.i373.3 = select i1 %.not76.i371.3, ptr %476, ptr %..364.i373.2
  %.3..i374.3 = select i1 %.not76.i371.3, ptr %.3..i374.2, ptr %476
  %477 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.2, ptr align 1 %.171.i376.2) #18
  %478 = icmp eq i8 %477, 1
  %.sroa.speculated40.i375.3 = select i1 %478, ptr %.169.i377.2, ptr %.171.i376.2
  call void %5(ptr nonnull align 1 %391, ptr align 1 %.sroa.speculated40.i375.3) #18
  %479 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.3, i64 %374
  %.171.i376.3 = select i1 %478, ptr %.171.i376.2, ptr %479
  %.169.i377.3 = select i1 %478, ptr %479, ptr %.169.i377.2
  %480 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.3, ptr align 1 %..364.i373.3) #18
  %.not76.i371.4 = icmp eq i8 %480, 1
  %.sroa.speculated.i372.4 = select i1 %.not76.i371.4, ptr %..364.i373.3, ptr %.3..i374.3
  call void %5(ptr align 1 %.167.i370.4, ptr align 1 %.sroa.speculated.i372.4) #18
  %481 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.4, i64 %4
  %..364.i373.4 = select i1 %.not76.i371.4, ptr %481, ptr %..364.i373.3
  %.3..i374.4 = select i1 %.not76.i371.4, ptr %.3..i374.3, ptr %481
  %482 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.3, ptr align 1 %.171.i376.3) #18
  %483 = icmp eq i8 %482, 1
  %.sroa.speculated40.i375.4 = select i1 %483, ptr %.169.i377.3, ptr %.171.i376.3
  call void %5(ptr align 1 %392, ptr align 1 %.sroa.speculated40.i375.4) #18
  %484 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.4, i64 %374
  %.171.i376.4 = select i1 %483, ptr %.171.i376.3, ptr %484
  %.169.i377.4 = select i1 %483, ptr %484, ptr %.169.i377.3
  %485 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.4, ptr align 1 %..364.i373.4) #18
  %.not76.i371.5 = icmp eq i8 %485, 1
  %.sroa.speculated.i372.5 = select i1 %.not76.i371.5, ptr %..364.i373.4, ptr %.3..i374.4
  call void %5(ptr align 1 %.167.i370.5, ptr align 1 %.sroa.speculated.i372.5) #18
  %486 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.5, i64 %4
  %..364.i373.5 = select i1 %.not76.i371.5, ptr %486, ptr %..364.i373.4
  %.3..i374.5 = select i1 %.not76.i371.5, ptr %.3..i374.4, ptr %486
  %487 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.4, ptr align 1 %.171.i376.4) #18
  %488 = icmp eq i8 %487, 1
  %.sroa.speculated40.i375.5 = select i1 %488, ptr %.169.i377.4, ptr %.171.i376.4
  call void %5(ptr align 1 %393, ptr align 1 %.sroa.speculated40.i375.5) #18
  %489 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.5, i64 %374
  %.171.i376.5 = select i1 %488, ptr %.171.i376.4, ptr %489
  %.169.i377.5 = select i1 %488, ptr %489, ptr %.169.i377.4
  %490 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.5, ptr align 1 %..364.i373.5) #18
  %.not76.i371.6 = icmp eq i8 %490, 1
  %.sroa.speculated.i372.6 = select i1 %.not76.i371.6, ptr %..364.i373.5, ptr %.3..i374.5
  call void %5(ptr align 1 %.167.i370.6, ptr align 1 %.sroa.speculated.i372.6) #18
  %491 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.5, ptr align 1 %.171.i376.5) #18
  %492 = icmp eq i8 %491, 1
  %.sroa.speculated40.i375.6 = select i1 %492, ptr %.169.i377.5, ptr %.171.i376.5
  call void %5(ptr align 1 %394, ptr align 1 %.sroa.speculated40.i375.6) #18
  %493 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.6, i64 %374
  %.171.i376.6 = select i1 %492, ptr %.171.i376.5, ptr %493
  %.169.i377.6 = select i1 %492, ptr %493, ptr %.169.i377.5
  %494 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.6, ptr align 1 %.171.i376.6) #18
  %495 = icmp eq i8 %494, 1
  %.sroa.speculated46.i380 = select i1 %495, ptr %.169.i377.6, ptr %.171.i376.6
  call void %5(ptr align 1 %395, ptr align 1 %.sroa.speculated46.i380) #18
  %496 = getelementptr inbounds i8, ptr %.5492, i64 %380
  %497 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %14, ptr nonnull align 1 %376) #18
  %.not.i384 = icmp eq i8 %497, 1
  %.sroa.speculated21.i385 = select i1 %.not.i384, ptr %376, ptr %14
  call void %5(ptr align 1 %.5492, ptr nonnull align 1 %.sroa.speculated21.i385) #18
  %498 = getelementptr inbounds i8, ptr %.sroa.speculated21.i385, i64 %4
  %.0..i386 = select i1 %.not.i384, ptr %14, ptr %498
  %..061.i387 = select i1 %.not.i384, ptr %498, ptr %376
  br label %.cont.i404

.cont.i404:                                       ; preds = %.cont.i404, %.critedge69
  %lsr.iv260 = phi i64 [ %lsr.iv.next261, %.cont.i404 ], [ 15, %.critedge69 ]
  %lsr.iv258 = phi ptr [ %uglygep259, %.cont.i404 ], [ %lsr.iv256, %.critedge69 ]
  %.37.i388 = phi ptr [ %.3..i399, %.cont.i404 ], [ %.0..i386, %.critedge69 ]
  %.3646.i389 = phi ptr [ %..364.i398, %.cont.i404 ], [ %..061.i387, %.critedge69 ]
  %.0684.i391 = phi ptr [ %.169.i402, %.cont.i404 ], [ %378, %.critedge69 ]
  %.0703.i392 = phi ptr [ %.171.i401, %.cont.i404 ], [ %379, %.critedge69 ]
  %.0722.i393 = phi ptr [ %504, %.cont.i404 ], [ %496, %.critedge69 ]
  %499 = call i8 %2(ptr align 1 %3, ptr align 1 %.37.i388, ptr align 1 %.3646.i389) #18
  %.not76.i396 = icmp eq i8 %499, 1
  %.sroa.speculated.i397 = select i1 %.not76.i396, ptr %.3646.i389, ptr %.37.i388
  call void %5(ptr align 1 %lsr.iv258, ptr align 1 %.sroa.speculated.i397) #18
  %500 = getelementptr inbounds i8, ptr %.sroa.speculated.i397, i64 %4
  %..364.i398 = select i1 %.not76.i396, ptr %500, ptr %.3646.i389
  %.3..i399 = select i1 %.not76.i396, ptr %.37.i388, ptr %500
  %501 = call i8 %2(ptr align 1 %3, ptr align 1 %.0684.i391, ptr align 1 %.0703.i392) #18
  %502 = icmp eq i8 %501, 1
  %.sroa.speculated40.i400 = select i1 %502, ptr %.0684.i391, ptr %.0703.i392
  call void %5(ptr align 1 %.0722.i393, ptr align 1 %.sroa.speculated40.i400) #18
  %503 = getelementptr inbounds i8, ptr %.sroa.speculated40.i400, i64 %374
  %.171.i401 = select i1 %502, ptr %.0703.i392, ptr %503
  %.169.i402 = select i1 %502, ptr %503, ptr %.0684.i391
  %504 = getelementptr inbounds i8, ptr %.0722.i393, i64 %374
  %uglygep259 = getelementptr i8, ptr %lsr.iv258, i64 %4
  %lsr.iv.next261 = add nsw i64 %lsr.iv260, -1
  %exitcond.not.i403 = icmp eq i64 %lsr.iv.next261, 0
  br i1 %exitcond.not.i403, label %sort.parity_merge__anon_16213.exit406, label %.cont.i404

sort.parity_merge__anon_16213.exit406:            ; preds = %.cont.i404
  %505 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i402, ptr align 1 %.171.i401) #18
  %506 = icmp eq i8 %505, 1
  %.sroa.speculated46.i405 = select i1 %506, ptr %.169.i402, ptr %.171.i401
  call void %5(ptr align 1 %504, ptr align 1 %.sroa.speculated46.i405) #18
  br label %403

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %507 = mul nuw i64 %401, %4
  %508 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %507
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.022.i = phi i64 [ 8, %.preheader.lr.ph.i ], [ %514, %.loopexit.i ]
  %509 = ptrtoint ptr %.5.lcssa to i64
  %510 = ptrtoint ptr %508 to i64
  %511 = mul nuw i64 %.022.i, %4
  %512 = add nuw i64 %511, %509
  %513 = icmp ult i64 %512, %510
  %514 = shl nuw nsw i64 %.022.i, 1
  br i1 %513, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %515 = ptrtoint ptr %.5.lcssa to i64
  %516 = mul nuw i64 %514, %4
  %517 = add i64 %515, %516
  %518 = add i64 %515, %511
  br label %522

.loopexit.i:                                      ; preds = %542, %526, %.preheader.i
  %519 = icmp ult i64 %514, %401
  %520 = icmp ult i64 %.022.i, 17
  %521 = and i1 %520, %519
  br i1 %521, label %.preheader.i, label %common.ret

522:                                              ; preds = %526, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %526 ], [ 0, %.lr.ph.i ]
  %523 = ptrtoint ptr %508 to i64
  %uglygep254 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %524 = add i64 %517, %lsr.iv
  %525 = icmp ult i64 %524, %523
  br i1 %525, label %526, label %530

526:                                              ; preds = %522
  %527 = ptrtoint ptr %508 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %uglygep254, i64 %514, ptr nonnull align 1 %14, i64 32, i64 %.022.i, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5)
  %lsr.iv.next = add i64 %lsr.iv, %516
  %528 = add i64 %518, %lsr.iv.next
  %529 = icmp ult i64 %528, %527
  br i1 %529, label %522, label %.loopexit.i

530:                                              ; preds = %522
  %531 = sub i64 %507, %lsr.iv
  %532 = or i64 %531, %4
  %533 = and i64 %532, -4294967296
  %534 = icmp eq i64 %533, 0
  br i1 %534, label %535, label %540

535:                                              ; preds = %530
  %536 = trunc i64 %4 to i32
  %537 = trunc i64 %531 to i32
  %538 = udiv i32 %537, %536
  %539 = zext i32 %538 to i64
  br label %542

540:                                              ; preds = %530
  %541 = udiv i64 %531, %4
  br label %542

542:                                              ; preds = %540, %535
  %543 = phi i64 [ %539, %535 ], [ %541, %540 ]
  %uglygep = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %uglygep, i64 %543, ptr nonnull align 1 %14, i64 32, i64 %.022.i, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = mul i64 %6, %1
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  %11 = icmp ugt i64 %1, 127
  %12 = icmp ugt i64 %3, 127
  %13 = select i1 %11, i1 %12, i1 false
  br i1 %13, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %8
  %14 = shl i64 %6, 1
  %15 = mul i64 %6, 3
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16217.exit22, %.preheader.lr.ph
  %.030 = phi i64 [ 128, %.preheader.lr.ph ], [ %149, %sort.tail_merge__anon_16217.exit22 ]
  %16 = ptrtoint ptr %0 to i64
  %17 = lshr i64 %.030, 2
  %18 = lshr exact i64 %.030, 1
  %19 = mul i64 %17, %6
  %20 = mul nuw i64 %18, %6
  %21 = shl nuw i64 %20, 1
  %22 = getelementptr inbounds i8, ptr %2, i64 %20
  %23 = mul i64 %.030, %6
  %uglygep15 = getelementptr i8, ptr %0, i64 %19
  %24 = add nsw i64 %17, -1
  %25 = mul i64 %6, %24
  %uglygep17 = getelementptr i8, ptr %0, i64 %25
  %26 = mul i64 %14, %17
  %uglygep19 = getelementptr i8, ptr %0, i64 %26
  %27 = shl nuw nsw i64 %17, 1
  %28 = add nsw i64 %27, -1
  %29 = mul i64 %6, %28
  %uglygep21 = getelementptr i8, ptr %0, i64 %29
  %30 = mul i64 %15, %17
  %uglygep23 = getelementptr i8, ptr %0, i64 %30
  %31 = mul nuw i64 %17, 3
  %32 = add i64 %31, -1
  %33 = mul i64 %6, %32
  %uglygep25 = getelementptr i8, ptr %0, i64 %33
  %34 = add i64 %16, %23
  br label %75

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16217.exit22, %8
  %.0.lcssa = phi i64 [ 128, %8 ], [ %149, %sort.tail_merge__anon_16217.exit22 ]
  %35 = lshr exact i64 %.0.lcssa, 2
  %36 = icmp ult i64 %35, %1
  %37 = icmp ule i64 %35, %3
  %38 = select i1 %36, i1 %37, i1 false
  br i1 %38, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16217.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.022.i = phi i64 [ %35, %.preheader.lr.ph.i ], [ %44, %.loopexit.i ]
  %39 = ptrtoint ptr %0 to i64
  %40 = ptrtoint ptr %10 to i64
  %41 = mul nuw i64 %.022.i, %6
  %42 = add nuw i64 %41, %39
  %43 = icmp ult i64 %42, %40
  %44 = shl nuw i64 %.022.i, 1
  br i1 %43, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %45 = ptrtoint ptr %0 to i64
  %46 = mul nuw i64 %44, %6
  %47 = add i64 %45, %46
  %48 = add i64 %45, %41
  br label %52

.loopexit.i:                                      ; preds = %72, %56, %.preheader.i
  %49 = icmp ult i64 %44, %1
  %50 = icmp ule i64 %44, %3
  %51 = select i1 %49, i1 %50, i1 false
  br i1 %51, label %.preheader.i, label %sort.tail_merge__anon_16217.exit

52:                                               ; preds = %56, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %56 ], [ 0, %.lr.ph.i ]
  %53 = ptrtoint ptr %10 to i64
  %uglygep10 = getelementptr i8, ptr %0, i64 %lsr.iv
  %54 = add i64 %47, %lsr.iv
  %55 = icmp ult i64 %54, %53
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = ptrtoint ptr %10 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %uglygep10, i64 %44, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  %lsr.iv.next = add i64 %lsr.iv, %46
  %58 = add i64 %48, %lsr.iv.next
  %59 = icmp ult i64 %58, %57
  br i1 %59, label %52, label %.loopexit.i

60:                                               ; preds = %52
  %61 = sub i64 %9, %lsr.iv
  %62 = or i64 %61, %6
  %63 = and i64 %62, -4294967296
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = trunc i64 %6 to i32
  %67 = trunc i64 %61 to i32
  %68 = udiv i32 %67, %66
  %69 = zext i32 %68 to i64
  br label %72

70:                                               ; preds = %60
  %71 = udiv i64 %61, %6
  br label %72

72:                                               ; preds = %70, %65
  %73 = phi i64 [ %69, %65 ], [ %71, %70 ]
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %uglygep, i64 %73, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  br label %.loopexit.i

sort.tail_merge__anon_16217.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %74 = lshr exact i64 %.0.lcssa, 1
  ret i64 %74

75:                                               ; preds = %sort.quad_merge_block__anon_16218.exit, %.preheader
  %lsr.iv29 = phi i64 [ %34, %.preheader ], [ %lsr.iv.next30, %sort.quad_merge_block__anon_16218.exit ]
  %lsr.iv27 = phi i64 [ %9, %.preheader ], [ %lsr.iv.next28, %sort.quad_merge_block__anon_16218.exit ]
  %lsr.iv11 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next12, %sort.quad_merge_block__anon_16218.exit ]
  %.013 = phi ptr [ %92, %sort.quad_merge_block__anon_16218.exit ], [ %0, %.preheader ]
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv11
  %uglygep16 = getelementptr i8, ptr %uglygep15, i64 %lsr.iv11
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv11
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv11
  %uglygep18 = getelementptr i8, ptr %uglygep17, i64 %lsr.iv11
  %76 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep18, ptr nonnull align 1 %uglygep16) #18
  %77 = icmp ne i8 %76, 1
  %78 = zext i1 %77 to i2
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv11
  %79 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep26, ptr nonnull align 1 %uglygep24) #18
  %.not.i = icmp eq i8 %79, 1
  %80 = select i1 %.not.i, i2 0, i2 -2
  %81 = or i2 %80, %78
  %82 = zext i2 %81 to i32
  switch i32 %82, label %84 [
    i32 0, label %85
    i32 1, label %86
    i32 2, label %87
    i32 3, label %88
  ]

83:                                               ; preds = %90, %87, %86, %85
  tail call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %uglygep13, ptr nonnull align 1 %2, i64 %18, i64 %18, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quad_merge_block__anon_16218.exit

84:                                               ; preds = %75
  unreachable

85:                                               ; preds = %75
  tail call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %17, i64 %17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  tail call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %22, ptr nonnull align 1 %uglygep20, i64 %17, i64 %17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  br label %83

86:                                               ; preds = %75
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %20, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %22, ptr nonnull align 1 %uglygep20, i64 %17, i64 %17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  br label %83

87:                                               ; preds = %75
  tail call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %17, i64 %17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %22, ptr nonnull align 1 %uglygep20, i64 %20, i1 false)
  br label %83

88:                                               ; preds = %75
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv11
  %89 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep22, ptr nonnull align 1 %uglygep20) #18
  %.not6.i = icmp eq i8 %89, 1
  br i1 %.not6.i, label %90, label %sort.quad_merge_block__anon_16218.exit

90:                                               ; preds = %88
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %21, i1 false)
  br label %83

sort.quad_merge_block__anon_16218.exit:           ; preds = %88, %83
  %91 = ptrtoint ptr %10 to i64
  %92 = getelementptr inbounds i8, ptr %.013, i64 %23
  %lsr.iv.next12 = add i64 %lsr.iv11, %23
  %lsr.iv.next28 = sub i64 %lsr.iv27, %23
  %93 = add i64 %34, %lsr.iv.next12
  %94 = icmp ugt i64 %93, %91
  %lsr.iv.next30 = add i64 %lsr.iv29, %23
  br i1 %94, label %95, label %75

95:                                               ; preds = %sort.quad_merge_block__anon_16218.exit
  %96 = or i64 %lsr.iv.next28, %6
  %97 = and i64 %96, -4294967296
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %95
  %100 = trunc i64 %6 to i32
  %101 = trunc i64 %lsr.iv.next28 to i32
  %102 = udiv i32 %101, %100
  %103 = zext i32 %102 to i64
  br label %106

104:                                              ; preds = %95
  %105 = udiv i64 %lsr.iv.next28, %6
  br label %106

106:                                              ; preds = %104, %99
  %107 = phi i64 [ %103, %99 ], [ %105, %104 ]
  %108 = icmp ult i64 %17, %107
  %109 = icmp ule i64 %17, %3
  %110 = select i1 %108, i1 %109, i1 false
  %uglygep14 = getelementptr i8, ptr %0, i64 %lsr.iv.next12
  br i1 %110, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16217.exit22

.preheader.lr.ph.i16:                             ; preds = %106
  %111 = ptrtoint ptr %0 to i64
  %112 = mul nuw i64 %107, %6
  %113 = getelementptr inbounds i8, ptr %92, i64 %112
  %114 = add i64 %111, %lsr.iv.next12
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i20, %.preheader.lr.ph.i16
  %.022.i17 = phi i64 [ %17, %.preheader.lr.ph.i16 ], [ %119, %.loopexit.i20 ]
  %115 = ptrtoint ptr %113 to i64
  %116 = mul nuw i64 %.022.i17, %6
  %117 = add i64 %114, %116
  %118 = icmp ult i64 %117, %115
  %119 = shl nuw i64 %.022.i17, 1
  br i1 %118, label %.lr.ph.i19, label %.loopexit.i20

.lr.ph.i19:                                       ; preds = %.preheader.i18
  %120 = mul nuw i64 %119, %6
  %121 = add i64 %lsr.iv29, %120
  %122 = add nuw i64 %lsr.iv29, %116
  br label %126

.loopexit.i20:                                    ; preds = %147, %129, %.preheader.i18
  %123 = icmp ult i64 %119, %107
  %124 = icmp ule i64 %119, %3
  %125 = select i1 %123, i1 %124, i1 false
  br i1 %125, label %.preheader.i18, label %sort.tail_merge__anon_16217.exit22

126:                                              ; preds = %129, %.lr.ph.i19
  %lsr.iv33 = phi i64 [ %lsr.iv.next34, %129 ], [ %122, %.lr.ph.i19 ]
  %lsr.iv31 = phi i64 [ %lsr.iv.next32, %129 ], [ %121, %.lr.ph.i19 ]
  %.01421.i21 = phi ptr [ %uglygep14, %.lr.ph.i19 ], [ %131, %129 ]
  %127 = ptrtoint ptr %113 to i64
  %128 = icmp ult i64 %lsr.iv31, %127
  br i1 %128, label %129, label %133

129:                                              ; preds = %126
  %130 = ptrtoint ptr %113 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %.01421.i21, i64 %119, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  %131 = getelementptr inbounds i8, ptr %.01421.i21, i64 %120
  %lsr.iv.next32 = add i64 %lsr.iv31, %120
  %lsr.iv.next34 = add i64 %lsr.iv33, %120
  %132 = icmp ult i64 %lsr.iv.next34, %130
  br i1 %132, label %126, label %.loopexit.i20

133:                                              ; preds = %126
  %134 = ptrtoint ptr %113 to i64
  %135 = ptrtoint ptr %.01421.i21 to i64
  %136 = sub nuw i64 %134, %135
  %137 = or i64 %136, %6
  %138 = and i64 %137, -4294967296
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %145

140:                                              ; preds = %133
  %141 = trunc i64 %6 to i32
  %142 = trunc i64 %136 to i32
  %143 = udiv i32 %142, %141
  %144 = zext i32 %143 to i64
  br label %147

145:                                              ; preds = %133
  %146 = udiv i64 %136, %6
  br label %147

147:                                              ; preds = %145, %140
  %148 = phi i64 [ %144, %140 ], [ %146, %145 ]
  tail call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %.01421.i21, i64 %148, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  br label %.loopexit.i20

sort.tail_merge__anon_16217.exit22:               ; preds = %.loopexit.i20, %106
  %149 = shl nuw i64 %.030, 2
  %150 = icmp ule i64 %149, %1
  %151 = icmp ule i64 %149, %3
  %152 = select i1 %150, i1 %151, i1 false
  br i1 %152, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = mul i64 %7, %1
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  %12 = shl nuw i64 %4, 1
  %13 = icmp uge i64 %12, %1
  %14 = sub i64 %1, %4
  %15 = icmp ule i64 %14, %3
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %18, label %.preheader21

.preheader21:                                     ; preds = %9
  %17 = icmp ugt i64 %1, %4
  br i1 %17, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader21
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader21
  ret void

18:                                               ; preds = %9
  tail call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.01727 = phi i64 [ %4, %.preheader.lr.ph ], [ %24, %.loopexit ]
  %19 = ptrtoint ptr %0 to i64
  %20 = ptrtoint ptr %11 to i64
  %21 = mul nuw i64 %.01727, %7
  %22 = add nuw i64 %21, %19
  %23 = icmp ult i64 %22, %20
  %24 = shl nuw i64 %.01727, 1
  br i1 %23, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %25 = ptrtoint ptr %0 to i64
  %26 = mul nuw i64 %24, %7
  %27 = add i64 %25, %26
  %28 = add i64 %25, %21
  br label %30

.loopexit:                                        ; preds = %50, %34, %.preheader
  %29 = icmp ult i64 %24, %1
  br i1 %29, label %.preheader, label %common.ret

30:                                               ; preds = %34, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %34 ]
  %31 = ptrtoint ptr %11 to i64
  %uglygep4 = getelementptr i8, ptr %0, i64 %lsr.iv
  %32 = add i64 %27, %lsr.iv
  %33 = icmp ult i64 %32, %31
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = ptrtoint ptr %11 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16220(ptr nonnull align 1 %uglygep4, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %.01727, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  %lsr.iv.next = add i64 %lsr.iv, %26
  %36 = add i64 %28, %lsr.iv.next
  %37 = icmp ult i64 %36, %35
  br i1 %37, label %30, label %.loopexit

38:                                               ; preds = %30
  %39 = sub i64 %10, %lsr.iv
  %40 = or i64 %39, %7
  %41 = and i64 %40, -4294967296
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = trunc i64 %7 to i32
  %45 = trunc i64 %39 to i32
  %46 = udiv i32 %45, %44
  %47 = zext i32 %46 to i64
  br label %50

48:                                               ; preds = %38
  %49 = udiv i64 %39, %7
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i64 [ %47, %43 ], [ %49, %48 ]
  %52 = sub nuw i64 %51, %.01727
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16220(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %52, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14495(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5) unnamed_addr #4 {
  %7 = alloca [49152 x i8], align 8
  %8 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %7, i64 512, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %7, i64 512, i64 %8, ptr nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 1 %5)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5) unnamed_addr #4 {
  %7 = icmp ult i64 %1, 8
  br i1 %7, label %8, label %431

common.ret:                                       ; preds = %456, %.cont110.i.i, %292, %sort.parity_swap_six__anon_16487.exit.i, %136, %96, %71, %47, %20, %10, %8, %8
  ret void

8:                                                ; preds = %6
  switch i64 %1, label %9 [
    i64 2, label %10
    i64 3, label %20
    i64 4, label %47
    i64 5, label %96
    i64 6, label %185
    i64 7, label %292
    i64 1, label %common.ret
    i64 0, label %common.ret
  ]

9:                                                ; preds = %8
  unreachable

10:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 1) #18
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load ptr, ptr %0, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %3(ptr align 1 %4, ptr align 1 %12, ptr align 1 %13) #18
  %15 = icmp eq i8 %14, 1
  %..i = select i1 %15, i64 8, i64 0
  %16 = select i1 %15, i64 0, i64 8
  %sunkaddr = getelementptr inbounds i8, ptr %0, i64 %16
  %17 = load i64, ptr %sunkaddr, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 %..i
  %19 = load i64, ptr %18, align 8
  store i64 %19, ptr %0, align 8
  store i64 %17, ptr %11, align 8
  br label %common.ret

20:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 3) #18
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  %22 = load ptr, ptr %0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call i8 %3(ptr align 1 %4, ptr align 1 %22, ptr align 1 %23) #18
  %25 = icmp eq i8 %24, 1
  %.1.i = select i1 %25, i64 8, i64 0
  %26 = select i1 %25, i64 0, i64 8
  %sunkaddr1 = getelementptr inbounds i8, ptr %0, i64 %26
  %27 = load i64, ptr %sunkaddr1, align 8
  %28 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  %29 = load i64, ptr %28, align 8
  store i64 %29, ptr %0, align 8
  store i64 %27, ptr %21, align 8
  %30 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i = inttoptr i64 %27 to ptr
  %31 = load ptr, ptr %30, align 8
  %32 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i, ptr align 1 %31) #18
  %33 = icmp eq i8 %32, 1
  %34 = select i1 %33, i64 8, i64 0
  %35 = select i1 %33, i64 8, i64 16
  %sunkaddr2 = getelementptr inbounds i8, ptr %0, i64 %35
  %36 = load i64, ptr %sunkaddr2, align 8
  %37 = getelementptr inbounds i8, ptr %21, i64 %34
  %38 = load i64, ptr %37, align 8
  store i64 %38, ptr %21, align 8
  store i64 %36, ptr %30, align 8
  %39 = load ptr, ptr %0, align 8
  %.cast64.i = inttoptr i64 %38 to ptr
  %40 = tail call i8 %3(ptr align 1 %4, ptr align 1 %39, ptr align 1 %.cast64.i) #18
  %41 = icmp eq i8 %40, 1
  %42 = select i1 %41, i64 8, i64 0
  %43 = select i1 %41, i64 0, i64 8
  %sunkaddr3 = getelementptr inbounds i8, ptr %0, i64 %43
  %44 = load i64, ptr %sunkaddr3, align 8
  %45 = getelementptr inbounds i8, ptr %0, i64 %42
  %46 = load i64, ptr %45, align 8
  store i64 %46, ptr %0, align 8
  store i64 %44, ptr %21, align 8
  br label %common.ret

47:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 3) #18
  %48 = getelementptr inbounds i8, ptr %0, i64 8
  %49 = load ptr, ptr %0, align 8
  %50 = load ptr, ptr %48, align 8
  %51 = tail call i8 %3(ptr align 1 %4, ptr align 1 %49, ptr align 1 %50) #18
  %52 = icmp eq i8 %51, 1
  %..i.i = select i1 %52, i64 8, i64 0
  %53 = select i1 %52, i64 0, i64 8
  %sunkaddr4 = getelementptr inbounds i8, ptr %0, i64 %53
  %54 = load i64, ptr %sunkaddr4, align 8
  %55 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  %56 = load i64, ptr %55, align 8
  store i64 %56, ptr %0, align 8
  store i64 %54, ptr %48, align 8
  %57 = getelementptr inbounds i8, ptr %0, i64 16
  %58 = getelementptr inbounds i8, ptr %0, i64 24
  %59 = load ptr, ptr %57, align 8
  %60 = load ptr, ptr %58, align 8
  %61 = tail call i8 %3(ptr align 1 %4, ptr align 1 %59, ptr align 1 %60) #18
  %62 = icmp eq i8 %61, 1
  %63 = select i1 %62, i64 8, i64 0
  %64 = select i1 %62, i64 16, i64 24
  %sunkaddr5 = getelementptr inbounds i8, ptr %0, i64 %64
  %65 = load i64, ptr %sunkaddr5, align 8
  %66 = getelementptr inbounds i8, ptr %57, i64 %63
  %67 = load i64, ptr %66, align 8
  store i64 %67, ptr %57, align 8
  store i64 %65, ptr %58, align 8
  %68 = load ptr, ptr %48, align 8
  %.cast.i.i = inttoptr i64 %67 to ptr
  %69 = tail call i8 %3(ptr align 1 %4, ptr align 1 %68, ptr align 1 %.cast.i.i) #18
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %71, label %common.ret

71:                                               ; preds = %47
  tail call void %5(ptr align 1 %4, i64 3) #18
  %sunkaddr6 = getelementptr inbounds i8, ptr %0, i64 8
  %72 = load i64, ptr %sunkaddr6, align 8
  %sunkaddr7 = getelementptr inbounds i8, ptr %0, i64 16
  %73 = load i64, ptr %sunkaddr7, align 8
  store i64 %73, ptr %sunkaddr6, align 8
  store i64 %72, ptr %sunkaddr7, align 8
  %74 = load ptr, ptr %0, align 8
  %.cast1.i.i = inttoptr i64 %73 to ptr
  %75 = tail call i8 %3(ptr align 1 %4, ptr align 1 %74, ptr align 1 %.cast1.i.i) #18
  %76 = icmp eq i8 %75, 1
  %.1.i.i = select i1 %76, i64 8, i64 0
  %77 = select i1 %76, i64 0, i64 8
  %sunkaddr8 = getelementptr inbounds i8, ptr %0, i64 %77
  %78 = load i64, ptr %sunkaddr8, align 8
  %79 = getelementptr inbounds i8, ptr %0, i64 %.1.i.i
  %80 = load i64, ptr %79, align 8
  store i64 %80, ptr %0, align 8
  store i64 %78, ptr %sunkaddr6, align 8
  %81 = load ptr, ptr %sunkaddr7, align 8
  %sunkaddr9 = getelementptr inbounds i8, ptr %0, i64 24
  %82 = load ptr, ptr %sunkaddr9, align 8
  %83 = tail call i8 %3(ptr align 1 %4, ptr align 1 %81, ptr align 1 %82) #18
  %84 = icmp eq i8 %83, 1
  %85 = select i1 %84, i64 8, i64 0
  %86 = select i1 %84, i64 16, i64 24
  %sunkaddr10 = getelementptr inbounds i8, ptr %0, i64 %86
  %87 = load i64, ptr %sunkaddr10, align 8
  %sunkaddr11 = getelementptr inbounds i8, ptr %0, i64 %85
  %sunkaddr12 = getelementptr inbounds i8, ptr %sunkaddr11, i64 16
  %88 = load i64, ptr %sunkaddr12, align 8
  store i64 %88, ptr %sunkaddr7, align 8
  store i64 %87, ptr %sunkaddr9, align 8
  %89 = load ptr, ptr %sunkaddr6, align 8
  %.cast2.i.i = inttoptr i64 %88 to ptr
  %90 = tail call i8 %3(ptr align 1 %4, ptr align 1 %89, ptr align 1 %.cast2.i.i) #18
  %91 = icmp eq i8 %90, 1
  %92 = select i1 %91, i64 8, i64 0
  %93 = select i1 %91, i64 8, i64 16
  %sunkaddr13 = getelementptr inbounds i8, ptr %0, i64 %93
  %94 = load i64, ptr %sunkaddr13, align 8
  %sunkaddr14 = getelementptr inbounds i8, ptr %0, i64 %92
  %sunkaddr15 = getelementptr inbounds i8, ptr %sunkaddr14, i64 8
  %95 = load i64, ptr %sunkaddr15, align 8
  store i64 %95, ptr %sunkaddr6, align 8
  store i64 %94, ptr %sunkaddr7, align 8
  br label %common.ret

96:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 4) #18
  %97 = getelementptr inbounds i8, ptr %0, i64 8
  %98 = load ptr, ptr %0, align 8
  %99 = load ptr, ptr %97, align 8
  %100 = tail call i8 %3(ptr align 1 %4, ptr align 1 %98, ptr align 1 %99) #18
  %101 = icmp eq i8 %100, 1
  %..i9.i = select i1 %101, i64 8, i64 0
  %102 = select i1 %101, i64 0, i64 8
  %sunkaddr16 = getelementptr inbounds i8, ptr %0, i64 %102
  %103 = load i64, ptr %sunkaddr16, align 8
  %104 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  %105 = load i64, ptr %104, align 8
  store i64 %105, ptr %0, align 8
  store i64 %103, ptr %97, align 8
  %106 = getelementptr inbounds i8, ptr %0, i64 16
  %107 = getelementptr inbounds i8, ptr %0, i64 24
  %108 = load ptr, ptr %106, align 8
  %109 = load ptr, ptr %107, align 8
  %110 = tail call i8 %3(ptr align 1 %4, ptr align 1 %108, ptr align 1 %109) #18
  %111 = icmp eq i8 %110, 1
  %112 = select i1 %111, i64 8, i64 0
  %113 = select i1 %111, i64 16, i64 24
  %sunkaddr17 = getelementptr inbounds i8, ptr %0, i64 %113
  %114 = load i64, ptr %sunkaddr17, align 8
  %115 = getelementptr inbounds i8, ptr %106, i64 %112
  %116 = load i64, ptr %115, align 8
  store i64 %116, ptr %106, align 8
  store i64 %114, ptr %107, align 8
  %117 = load ptr, ptr %97, align 8
  %.cast.i10.i = inttoptr i64 %116 to ptr
  %118 = tail call i8 %3(ptr align 1 %4, ptr align 1 %117, ptr align 1 %.cast.i10.i) #18
  %119 = icmp eq i8 %118, 1
  %120 = select i1 %119, i64 8, i64 0
  %121 = select i1 %119, i64 8, i64 16
  %sunkaddr18 = getelementptr inbounds i8, ptr %0, i64 %121
  %122 = load i64, ptr %sunkaddr18, align 8
  %123 = getelementptr inbounds i8, ptr %97, i64 %120
  %124 = load i64, ptr %123, align 8
  store i64 %124, ptr %97, align 8
  store i64 %122, ptr %106, align 8
  %125 = zext i1 %119 to i8
  %126 = getelementptr inbounds i8, ptr %0, i64 32
  %127 = load ptr, ptr %107, align 8
  %128 = load ptr, ptr %126, align 8
  %129 = tail call i8 %3(ptr align 1 %4, ptr align 1 %127, ptr align 1 %128) #18
  %130 = icmp eq i8 %129, 1
  %131 = select i1 %130, i64 8, i64 0
  %132 = select i1 %130, i64 24, i64 32
  %sunkaddr19 = getelementptr inbounds i8, ptr %0, i64 %132
  %133 = load i64, ptr %sunkaddr19, align 8
  %134 = getelementptr inbounds i8, ptr %107, i64 %131
  %135 = load i64, ptr %134, align 8
  store i64 %135, ptr %107, align 8
  store i64 %133, ptr %126, align 8
  %.neg.i.i = sext i1 %130 to i8
  %.not.i.i = icmp eq i8 %125, %.neg.i.i
  br i1 %.not.i.i, label %common.ret, label %136

136:                                              ; preds = %96
  tail call void %5(ptr align 1 %4, i64 6) #18
  %137 = load ptr, ptr %0, align 8
  %sunkaddr20 = getelementptr inbounds i8, ptr %0, i64 8
  %138 = load ptr, ptr %sunkaddr20, align 8
  %139 = tail call i8 %3(ptr align 1 %4, ptr align 1 %137, ptr align 1 %138) #18
  %140 = icmp eq i8 %139, 1
  %.1.i11.i = select i1 %140, i64 8, i64 0
  %141 = select i1 %140, i64 0, i64 8
  %sunkaddr21 = getelementptr inbounds i8, ptr %0, i64 %141
  %142 = load i64, ptr %sunkaddr21, align 8
  %143 = getelementptr inbounds i8, ptr %0, i64 %.1.i11.i
  %144 = load i64, ptr %143, align 8
  store i64 %144, ptr %0, align 8
  store i64 %142, ptr %sunkaddr20, align 8
  %sunkaddr22 = getelementptr inbounds i8, ptr %0, i64 16
  %145 = load ptr, ptr %sunkaddr22, align 8
  %sunkaddr23 = getelementptr inbounds i8, ptr %0, i64 24
  %146 = load ptr, ptr %sunkaddr23, align 8
  %147 = tail call i8 %3(ptr align 1 %4, ptr align 1 %145, ptr align 1 %146) #18
  %148 = icmp eq i8 %147, 1
  %149 = select i1 %148, i64 8, i64 0
  %150 = select i1 %148, i64 16, i64 24
  %sunkaddr24 = getelementptr inbounds i8, ptr %0, i64 %150
  %151 = load i64, ptr %sunkaddr24, align 8
  %sunkaddr25 = getelementptr inbounds i8, ptr %0, i64 %149
  %sunkaddr26 = getelementptr inbounds i8, ptr %sunkaddr25, i64 16
  %152 = load i64, ptr %sunkaddr26, align 8
  store i64 %152, ptr %sunkaddr22, align 8
  store i64 %151, ptr %sunkaddr23, align 8
  %153 = load ptr, ptr %sunkaddr20, align 8
  %.cast1.i12.i = inttoptr i64 %152 to ptr
  %154 = tail call i8 %3(ptr align 1 %4, ptr align 1 %153, ptr align 1 %.cast1.i12.i) #18
  %155 = icmp eq i8 %154, 1
  %156 = select i1 %155, i64 8, i64 0
  %157 = select i1 %155, i64 8, i64 16
  %sunkaddr27 = getelementptr inbounds i8, ptr %0, i64 %157
  %158 = load i64, ptr %sunkaddr27, align 8
  %sunkaddr28 = getelementptr inbounds i8, ptr %0, i64 %156
  %sunkaddr29 = getelementptr inbounds i8, ptr %sunkaddr28, i64 8
  %159 = load i64, ptr %sunkaddr29, align 8
  store i64 %159, ptr %sunkaddr20, align 8
  store i64 %158, ptr %sunkaddr22, align 8
  %160 = load ptr, ptr %sunkaddr23, align 8
  %sunkaddr30 = getelementptr inbounds i8, ptr %0, i64 32
  %161 = load ptr, ptr %sunkaddr30, align 8
  %162 = tail call i8 %3(ptr align 1 %4, ptr align 1 %160, ptr align 1 %161) #18
  %163 = icmp eq i8 %162, 1
  %164 = select i1 %163, i64 8, i64 0
  %165 = select i1 %163, i64 24, i64 32
  %sunkaddr31 = getelementptr inbounds i8, ptr %0, i64 %165
  %166 = load i64, ptr %sunkaddr31, align 8
  %sunkaddr32 = getelementptr inbounds i8, ptr %0, i64 %164
  %sunkaddr33 = getelementptr inbounds i8, ptr %sunkaddr32, i64 24
  %167 = load i64, ptr %sunkaddr33, align 8
  store i64 %167, ptr %sunkaddr23, align 8
  store i64 %166, ptr %sunkaddr30, align 8
  %168 = load ptr, ptr %0, align 8
  %169 = load ptr, ptr %sunkaddr20, align 8
  %170 = tail call i8 %3(ptr align 1 %4, ptr align 1 %168, ptr align 1 %169) #18
  %171 = icmp eq i8 %170, 1
  %172 = select i1 %171, i64 8, i64 0
  %173 = select i1 %171, i64 0, i64 8
  %sunkaddr34 = getelementptr inbounds i8, ptr %0, i64 %173
  %174 = load i64, ptr %sunkaddr34, align 8
  %175 = getelementptr inbounds i8, ptr %0, i64 %172
  %176 = load i64, ptr %175, align 8
  store i64 %176, ptr %0, align 8
  store i64 %174, ptr %sunkaddr20, align 8
  %177 = load ptr, ptr %sunkaddr22, align 8
  %178 = load ptr, ptr %sunkaddr23, align 8
  %179 = tail call i8 %3(ptr align 1 %4, ptr align 1 %177, ptr align 1 %178) #18
  %180 = icmp eq i8 %179, 1
  %181 = select i1 %180, i64 8, i64 0
  %182 = select i1 %180, i64 16, i64 24
  %sunkaddr35 = getelementptr inbounds i8, ptr %0, i64 %182
  %183 = load i64, ptr %sunkaddr35, align 8
  %sunkaddr36 = getelementptr inbounds i8, ptr %0, i64 %181
  %sunkaddr37 = getelementptr inbounds i8, ptr %sunkaddr36, i64 16
  %184 = load i64, ptr %sunkaddr37, align 8
  store i64 %184, ptr %sunkaddr22, align 8
  store i64 %183, ptr %sunkaddr23, align 8
  br label %common.ret

185:                                              ; preds = %8
  tail call void %5(ptr align 1 %4, i64 5) #18
  %186 = getelementptr inbounds i8, ptr %0, i64 8
  %187 = load ptr, ptr %0, align 8
  %188 = load ptr, ptr %186, align 8
  %189 = tail call i8 %3(ptr align 1 %4, ptr align 1 %187, ptr align 1 %188) #18
  %190 = icmp eq i8 %189, 1
  %..i13.i = select i1 %190, i64 8, i64 0
  %191 = select i1 %190, i64 0, i64 8
  %sunkaddr38 = getelementptr inbounds i8, ptr %0, i64 %191
  %192 = load i64, ptr %sunkaddr38, align 8
  %193 = getelementptr inbounds i8, ptr %0, i64 %..i13.i
  %194 = load i64, ptr %193, align 8
  store i64 %194, ptr %0, align 8
  store i64 %192, ptr %186, align 8
  %195 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i14.i = inttoptr i64 %192 to ptr
  %196 = load ptr, ptr %195, align 8
  %197 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i14.i, ptr align 1 %196) #18
  %198 = icmp eq i8 %197, 1
  %199 = select i1 %198, i64 8, i64 0
  %200 = select i1 %198, i64 8, i64 16
  %sunkaddr39 = getelementptr inbounds i8, ptr %0, i64 %200
  %201 = load i64, ptr %sunkaddr39, align 8
  %202 = getelementptr inbounds i8, ptr %186, i64 %199
  %203 = load i64, ptr %202, align 8
  store i64 %203, ptr %186, align 8
  store i64 %201, ptr %195, align 8
  %204 = getelementptr inbounds i8, ptr %0, i64 32
  %205 = getelementptr inbounds i8, ptr %0, i64 40
  %206 = load ptr, ptr %204, align 8
  %207 = load ptr, ptr %205, align 8
  %208 = tail call i8 %3(ptr align 1 %4, ptr align 1 %206, ptr align 1 %207) #18
  %209 = icmp eq i8 %208, 1
  %210 = select i1 %209, i64 8, i64 0
  %211 = select i1 %209, i64 32, i64 40
  %sunkaddr40 = getelementptr inbounds i8, ptr %0, i64 %211
  %212 = load i64, ptr %sunkaddr40, align 8
  %213 = getelementptr inbounds i8, ptr %204, i64 %210
  %214 = load i64, ptr %213, align 8
  store i64 %214, ptr %204, align 8
  store i64 %212, ptr %205, align 8
  %215 = getelementptr inbounds i8, ptr %0, i64 24
  %216 = load ptr, ptr %215, align 8
  %.cast1.i15.i = inttoptr i64 %214 to ptr
  %217 = tail call i8 %3(ptr align 1 %4, ptr align 1 %216, ptr align 1 %.cast1.i15.i) #18
  %218 = icmp eq i8 %217, 1
  %219 = select i1 %218, i64 8, i64 0
  %220 = select i1 %218, i64 24, i64 32
  %sunkaddr41 = getelementptr inbounds i8, ptr %0, i64 %220
  %221 = load i64, ptr %sunkaddr41, align 8
  %222 = getelementptr inbounds i8, ptr %215, i64 %219
  %223 = load i64, ptr %222, align 8
  store i64 %223, ptr %215, align 8
  store i64 %221, ptr %204, align 8
  %224 = load ptr, ptr %195, align 8
  %.cast2.i16.i = inttoptr i64 %223 to ptr
  %225 = tail call i8 %3(ptr align 1 %4, ptr align 1 %224, ptr align 1 %.cast2.i16.i) #18
  %.not.i17.i = icmp eq i8 %225, 1
  br i1 %.not.i17.i, label %.cont96.i.i, label %226

226:                                              ; preds = %185
  tail call void %5(ptr align 1 %4, i64 2) #18
  %227 = load ptr, ptr %0, align 8
  %sunkaddr42 = getelementptr inbounds i8, ptr %0, i64 8
  %228 = load ptr, ptr %sunkaddr42, align 8
  %229 = tail call i8 %3(ptr align 1 %4, ptr align 1 %227, ptr align 1 %228) #18
  %230 = icmp eq i8 %229, 1
  %.1.i18.i = select i1 %230, i64 8, i64 0
  %231 = select i1 %230, i64 0, i64 8
  %sunkaddr43 = getelementptr inbounds i8, ptr %0, i64 %231
  %232 = load i64, ptr %sunkaddr43, align 8
  %233 = getelementptr inbounds i8, ptr %0, i64 %.1.i18.i
  %234 = load i64, ptr %233, align 8
  store i64 %234, ptr %0, align 8
  store i64 %232, ptr %sunkaddr42, align 8
  %sunkaddr44 = getelementptr inbounds i8, ptr %0, i64 32
  %235 = load ptr, ptr %sunkaddr44, align 8
  %sunkaddr45 = getelementptr inbounds i8, ptr %0, i64 40
  %236 = load ptr, ptr %sunkaddr45, align 8
  %237 = tail call i8 %3(ptr align 1 %4, ptr align 1 %235, ptr align 1 %236) #18
  %238 = icmp eq i8 %237, 1
  %239 = select i1 %238, i64 8, i64 0
  %240 = select i1 %238, i64 32, i64 40
  %sunkaddr46 = getelementptr inbounds i8, ptr %0, i64 %240
  %241 = load i64, ptr %sunkaddr46, align 8
  %sunkaddr47 = getelementptr inbounds i8, ptr %0, i64 %239
  %sunkaddr48 = getelementptr inbounds i8, ptr %sunkaddr47, i64 32
  %242 = load i64, ptr %sunkaddr48, align 8
  store i64 %242, ptr %sunkaddr44, align 8
  br label %sort.parity_swap_six__anon_16487.exit.i

.cont96.i.i:                                      ; preds = %185
  tail call void %5(ptr align 1 %4, i64 8) #18
  %243 = load ptr, ptr %0, align 8
  %sunkaddr49 = getelementptr inbounds i8, ptr %0, i64 8
  %244 = load ptr, ptr %sunkaddr49, align 8
  %245 = tail call i8 %3(ptr align 1 %4, ptr align 1 %243, ptr align 1 %244) #18
  %.not113.i.i = icmp eq i8 %245, 1
  %.2.i.i = select i1 %.not113.i.i, i64 8, i64 0
  %.3.i.i = select i1 %.not113.i.i, i64 0, i64 8
  %246 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  %247 = load i64, ptr %246, align 8
  store i64 %247, ptr %2, align 8
  %248 = getelementptr inbounds i8, ptr %2, i64 8
  %249 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  %250 = load i64, ptr %249, align 8
  store i64 %250, ptr %248, align 8
  %251 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr50 = getelementptr inbounds i8, ptr %0, i64 16
  %252 = load i64, ptr %sunkaddr50, align 8
  store i64 %252, ptr %251, align 8
  %sunkaddr51 = getelementptr inbounds i8, ptr %0, i64 32
  %253 = load ptr, ptr %sunkaddr51, align 8
  %sunkaddr52 = getelementptr inbounds i8, ptr %0, i64 40
  %254 = load ptr, ptr %sunkaddr52, align 8
  %255 = tail call i8 %3(ptr align 1 %4, ptr align 1 %253, ptr align 1 %254) #18
  %.not114.i.i = icmp eq i8 %255, 1
  %.4.i.i = select i1 %.not114.i.i, i64 8, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 8
  %256 = getelementptr inbounds i8, ptr %2, i64 32
  %sunkaddr53 = getelementptr inbounds i8, ptr %0, i64 %.4.i.i
  %sunkaddr54 = getelementptr inbounds i8, ptr %sunkaddr53, i64 32
  %257 = load i64, ptr %sunkaddr54, align 8
  store i64 %257, ptr %256, align 8
  %258 = getelementptr inbounds i8, ptr %2, i64 40
  %sunkaddr55 = getelementptr inbounds i8, ptr %0, i64 %.5.i.i
  %sunkaddr56 = getelementptr inbounds i8, ptr %sunkaddr55, i64 32
  %259 = load i64, ptr %sunkaddr56, align 8
  store i64 %259, ptr %258, align 8
  %260 = getelementptr inbounds i8, ptr %2, i64 24
  %sunkaddr57 = getelementptr inbounds i8, ptr %0, i64 24
  %261 = load i64, ptr %sunkaddr57, align 8
  store i64 %261, ptr %260, align 8
  %262 = load ptr, ptr %2, align 8
  %.cast3.i.i = inttoptr i64 %261 to ptr
  %263 = tail call i8 %3(ptr align 1 %4, ptr align 1 %262, ptr align 1 %.cast3.i.i) #18
  %.not115.i.i = icmp eq i8 %263, 1
  %.sroa.speculated92.i.i58 = select i1 %.not115.i.i, i64 24, i64 0
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %260, ptr %2
  %sunkaddr59 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated92.i.i58
  %264 = load i64, ptr %sunkaddr59, align 8
  store i64 %264, ptr %0, align 8
  %265 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 8
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %265
  %.119.i.i = select i1 %.not115.i.i, ptr %265, ptr %260
  %266 = load ptr, ptr %.118.i.i, align 8
  %267 = load ptr, ptr %.119.i.i, align 8
  %268 = tail call i8 %3(ptr align 1 %4, ptr align 1 %266, ptr align 1 %267) #18
  %.not116.i.i = icmp eq i8 %268, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  %269 = load i64, ptr %.sroa.speculated83.i.i, align 8
  store i64 %269, ptr %sunkaddr49, align 8
  %270 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 8
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %270
  %.1106.i.i = select i1 %.not116.i.i, ptr %270, ptr %.119.i.i
  %271 = load ptr, ptr %.1110.i.i, align 8
  %272 = load ptr, ptr %.1106.i.i, align 8
  %273 = tail call i8 %3(ptr align 1 %4, ptr align 1 %271, ptr align 1 %272) #18
  %.not117.i.i = icmp eq i8 %273, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  %274 = load i64, ptr %.sroa.speculated74.i.i, align 8
  store i64 %274, ptr %sunkaddr50, align 8
  %275 = load ptr, ptr %251, align 8
  %276 = load ptr, ptr %258, align 8
  %277 = tail call i8 %3(ptr align 1 %4, ptr align 1 %275, ptr align 1 %276) #18
  %278 = icmp eq i8 %277, 1
  %.sroa.speculated65.i.i60 = select i1 %278, i64 16, i64 40
  %.sroa.speculated65.i.i = select i1 %278, ptr %251, ptr %258
  %sunkaddr61 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated65.i.i60
  %279 = load i64, ptr %sunkaddr61, align 8
  store i64 %279, ptr %sunkaddr52, align 8
  %280 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 -8
  %.2111.i.i = select i1 %278, ptr %280, ptr %251
  %.2107.i.i = select i1 %278, ptr %258, ptr %280
  %281 = load ptr, ptr %.2111.i.i, align 8
  %282 = load ptr, ptr %.2107.i.i, align 8
  %283 = tail call i8 %3(ptr align 1 %4, ptr align 1 %281, ptr align 1 %282) #18
  %284 = icmp eq i8 %283, 1
  %.sroa.speculated.i.i = select i1 %284, ptr %.2111.i.i, ptr %.2107.i.i
  %285 = load i64, ptr %.sroa.speculated.i.i, align 8
  store i64 %285, ptr %sunkaddr51, align 8
  %286 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 -8
  %.3112.i.i = select i1 %284, ptr %286, ptr %.2111.i.i
  %.3108.i.i = select i1 %284, ptr %.2107.i.i, ptr %286
  %287 = load ptr, ptr %.3112.i.i, align 8
  %288 = load ptr, ptr %.3108.i.i, align 8
  %289 = tail call i8 %3(ptr align 1 %4, ptr align 1 %287, ptr align 1 %288) #18
  %290 = icmp eq i8 %289, 1
  %291 = select i1 %290, ptr %.3112.i.i, ptr %.3108.i.i
  %.sink5.i.sroa.speculate.load..cont96.i.i = load i64, ptr %291, align 8
  br label %sort.parity_swap_six__anon_16487.exit.i

sort.parity_swap_six__anon_16487.exit.i:          ; preds = %.cont96.i.i, %226
  %.sink5.i.sroa.speculated.i = phi i64 [ %.sink5.i.sroa.speculate.load..cont96.i.i, %.cont96.i.i ], [ %241, %226 ]
  %.sink4.i.i = phi ptr [ %215, %.cont96.i.i ], [ %205, %226 ]
  store i64 %.sink5.i.sroa.speculated.i, ptr %.sink4.i.i, align 8
  br label %common.ret

292:                                              ; preds = %8
  tail call void %5(ptr align 1 %4, i64 6) #18
  %293 = getelementptr inbounds i8, ptr %0, i64 8
  %294 = load ptr, ptr %0, align 8
  %295 = load ptr, ptr %293, align 8
  %296 = tail call i8 %3(ptr align 1 %4, ptr align 1 %294, ptr align 1 %295) #18
  %297 = icmp eq i8 %296, 1
  %..i19.i = select i1 %297, i64 8, i64 0
  %298 = select i1 %297, i64 0, i64 8
  %sunkaddr62 = getelementptr inbounds i8, ptr %0, i64 %298
  %299 = load i64, ptr %sunkaddr62, align 8
  %300 = getelementptr inbounds i8, ptr %0, i64 %..i19.i
  %301 = load i64, ptr %300, align 8
  store i64 %301, ptr %0, align 8
  store i64 %299, ptr %293, align 8
  %302 = getelementptr inbounds i8, ptr %0, i64 16
  %303 = getelementptr inbounds i8, ptr %0, i64 24
  %304 = load ptr, ptr %302, align 8
  %305 = load ptr, ptr %303, align 8
  %306 = tail call i8 %3(ptr align 1 %4, ptr align 1 %304, ptr align 1 %305) #18
  %307 = icmp eq i8 %306, 1
  %308 = select i1 %307, i64 8, i64 0
  %309 = select i1 %307, i64 16, i64 24
  %sunkaddr63 = getelementptr inbounds i8, ptr %0, i64 %309
  %310 = load i64, ptr %sunkaddr63, align 8
  %311 = getelementptr inbounds i8, ptr %302, i64 %308
  %312 = load i64, ptr %311, align 8
  store i64 %312, ptr %302, align 8
  store i64 %310, ptr %303, align 8
  %313 = getelementptr inbounds i8, ptr %0, i64 32
  %314 = getelementptr inbounds i8, ptr %0, i64 40
  %315 = load ptr, ptr %313, align 8
  %316 = load ptr, ptr %314, align 8
  %317 = tail call i8 %3(ptr align 1 %4, ptr align 1 %315, ptr align 1 %316) #18
  %318 = icmp eq i8 %317, 1
  %319 = select i1 %318, i64 8, i64 0
  %320 = select i1 %318, i64 32, i64 40
  %sunkaddr64 = getelementptr inbounds i8, ptr %0, i64 %320
  %321 = load i64, ptr %sunkaddr64, align 8
  %322 = getelementptr inbounds i8, ptr %313, i64 %319
  %323 = load i64, ptr %322, align 8
  store i64 %323, ptr %313, align 8
  store i64 %321, ptr %314, align 8
  %324 = load ptr, ptr %293, align 8
  %325 = load ptr, ptr %302, align 8
  %326 = tail call i8 %3(ptr align 1 %4, ptr align 1 %324, ptr align 1 %325) #18
  %327 = icmp eq i8 %326, 1
  %328 = select i1 %327, i64 8, i64 0
  %329 = select i1 %327, i64 8, i64 16
  %sunkaddr65 = getelementptr inbounds i8, ptr %0, i64 %329
  %330 = load i64, ptr %sunkaddr65, align 8
  %331 = getelementptr inbounds i8, ptr %293, i64 %328
  %332 = load i64, ptr %331, align 8
  store i64 %332, ptr %293, align 8
  store i64 %330, ptr %302, align 8
  %333 = zext i1 %327 to i8
  %334 = load ptr, ptr %303, align 8
  %335 = load ptr, ptr %313, align 8
  %336 = tail call i8 %3(ptr align 1 %4, ptr align 1 %334, ptr align 1 %335) #18
  %337 = icmp eq i8 %336, 1
  %338 = select i1 %337, i64 8, i64 0
  %339 = select i1 %337, i64 24, i64 32
  %sunkaddr66 = getelementptr inbounds i8, ptr %0, i64 %339
  %340 = load i64, ptr %sunkaddr66, align 8
  %341 = getelementptr inbounds i8, ptr %303, i64 %338
  %342 = load i64, ptr %341, align 8
  store i64 %342, ptr %303, align 8
  store i64 %340, ptr %313, align 8
  %343 = zext i1 %337 to i8
  %344 = add nuw nsw i8 %343, %333
  %345 = getelementptr inbounds i8, ptr %0, i64 48
  %346 = load ptr, ptr %314, align 8
  %347 = load ptr, ptr %345, align 8
  %348 = tail call i8 %3(ptr align 1 %4, ptr align 1 %346, ptr align 1 %347) #18
  %349 = icmp eq i8 %348, 1
  %350 = select i1 %349, i64 8, i64 0
  %351 = select i1 %349, i64 40, i64 48
  %sunkaddr67 = getelementptr inbounds i8, ptr %0, i64 %351
  %352 = load i64, ptr %sunkaddr67, align 8
  %353 = getelementptr inbounds i8, ptr %314, i64 %350
  %354 = load i64, ptr %353, align 8
  store i64 %354, ptr %314, align 8
  store i64 %352, ptr %345, align 8
  %.neg.i20.i = sext i1 %349 to i8
  %355 = icmp eq i8 %344, %.neg.i20.i
  br i1 %355, label %common.ret, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %292
  tail call void %5(ptr align 1 %4, i64 11) #18
  %sunkaddr68 = getelementptr inbounds i8, ptr %0, i64 32
  %356 = load ptr, ptr %sunkaddr68, align 8
  %sunkaddr69 = getelementptr inbounds i8, ptr %0, i64 40
  %357 = load ptr, ptr %sunkaddr69, align 8
  %358 = tail call i8 %3(ptr align 1 %4, ptr align 1 %356, ptr align 1 %357) #18
  %359 = icmp eq i8 %358, 1
  %.1.i21.i = select i1 %359, i64 8, i64 0
  %360 = select i1 %359, i64 32, i64 40
  %sunkaddr70 = getelementptr inbounds i8, ptr %0, i64 %360
  %361 = load i64, ptr %sunkaddr70, align 8
  %sunkaddr71 = getelementptr inbounds i8, ptr %0, i64 %.1.i21.i
  %sunkaddr72 = getelementptr inbounds i8, ptr %sunkaddr71, i64 32
  %362 = load i64, ptr %sunkaddr72, align 8
  store i64 %362, ptr %sunkaddr68, align 8
  store i64 %361, ptr %sunkaddr69, align 8
  %363 = load ptr, ptr %0, align 8
  %sunkaddr73 = getelementptr inbounds i8, ptr %0, i64 8
  %364 = load ptr, ptr %sunkaddr73, align 8
  %365 = tail call i8 %3(ptr align 1 %4, ptr align 1 %363, ptr align 1 %364) #18
  %.not.i22.i = icmp eq i8 %365, 1
  %366 = select i1 %.not.i22.i, i64 8, i64 0
  %367 = select i1 %.not.i22.i, i64 0, i64 8
  %368 = getelementptr inbounds i8, ptr %0, i64 %366
  %369 = load i64, ptr %368, align 8
  store i64 %369, ptr %2, align 8
  %370 = getelementptr inbounds i8, ptr %2, i64 8
  %371 = getelementptr inbounds i8, ptr %0, i64 %367
  %372 = load i64, ptr %371, align 8
  store i64 %372, ptr %370, align 8
  %373 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr74 = getelementptr inbounds i8, ptr %0, i64 16
  %374 = load i64, ptr %sunkaddr74, align 8
  store i64 %374, ptr %373, align 8
  %sunkaddr75 = getelementptr inbounds i8, ptr %0, i64 24
  %375 = load ptr, ptr %sunkaddr75, align 8
  %376 = load ptr, ptr %sunkaddr68, align 8
  %377 = tail call i8 %3(ptr align 1 %4, ptr align 1 %375, ptr align 1 %376) #18
  %.not127.i.i = icmp eq i8 %377, 1
  %378 = select i1 %.not127.i.i, i64 8, i64 0
  %379 = select i1 %.not127.i.i, i64 0, i64 8
  %380 = getelementptr inbounds i8, ptr %2, i64 24
  %sunkaddr76 = getelementptr inbounds i8, ptr %0, i64 %378
  %sunkaddr77 = getelementptr inbounds i8, ptr %sunkaddr76, i64 24
  %381 = load i64, ptr %sunkaddr77, align 8
  store i64 %381, ptr %380, align 8
  %382 = getelementptr inbounds i8, ptr %2, i64 32
  %sunkaddr78 = getelementptr inbounds i8, ptr %0, i64 %379
  %sunkaddr79 = getelementptr inbounds i8, ptr %sunkaddr78, i64 24
  %383 = load i64, ptr %sunkaddr79, align 8
  store i64 %383, ptr %382, align 8
  %384 = load ptr, ptr %sunkaddr69, align 8
  %sunkaddr80 = getelementptr inbounds i8, ptr %0, i64 48
  %385 = load ptr, ptr %sunkaddr80, align 8
  %386 = tail call i8 %3(ptr align 1 %4, ptr align 1 %384, ptr align 1 %385) #18
  %.not128.i.i = icmp eq i8 %386, 1
  %387 = select i1 %.not128.i.i, i64 8, i64 0
  %388 = select i1 %.not128.i.i, i64 0, i64 8
  %389 = getelementptr inbounds i8, ptr %2, i64 40
  %sunkaddr81 = getelementptr inbounds i8, ptr %0, i64 %387
  %sunkaddr82 = getelementptr inbounds i8, ptr %sunkaddr81, i64 40
  %390 = load i64, ptr %sunkaddr82, align 8
  store i64 %390, ptr %389, align 8
  %391 = getelementptr inbounds i8, ptr %2, i64 48
  %sunkaddr83 = getelementptr inbounds i8, ptr %0, i64 %388
  %sunkaddr84 = getelementptr inbounds i8, ptr %sunkaddr83, i64 40
  %392 = load i64, ptr %sunkaddr84, align 8
  store i64 %392, ptr %391, align 8
  %393 = load ptr, ptr %2, align 8
  %394 = load ptr, ptr %380, align 8
  %395 = tail call i8 %3(ptr align 1 %4, ptr align 1 %393, ptr align 1 %394) #18
  %.not129.i.i = icmp eq i8 %395, 1
  %.sroa.speculated106.i.i85 = select i1 %.not129.i.i, i64 24, i64 0
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %380, ptr %2
  %sunkaddr86 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated106.i.i85
  %396 = load i64, ptr %sunkaddr86, align 8
  store i64 %396, ptr %0, align 8
  %397 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 8
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %397
  %.133.i.i = select i1 %.not129.i.i, ptr %397, ptr %380
  %398 = load ptr, ptr %.132.i.i, align 8
  %399 = load ptr, ptr %.133.i.i, align 8
  %400 = tail call i8 %3(ptr align 1 %4, ptr align 1 %398, ptr align 1 %399) #18
  %.not130.i.i = icmp eq i8 %400, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  %401 = load i64, ptr %.sroa.speculated97.i.i, align 8
  store i64 %401, ptr %sunkaddr73, align 8
  %402 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 8
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %402
  %.1121.i.i = select i1 %.not130.i.i, ptr %402, ptr %.133.i.i
  %403 = load ptr, ptr %.1123.i.i, align 8
  %404 = load ptr, ptr %.1121.i.i, align 8
  %405 = tail call i8 %3(ptr align 1 %4, ptr align 1 %403, ptr align 1 %404) #18
  %.not131.i.i = icmp eq i8 %405, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  %406 = load i64, ptr %.sroa.speculated88.i.i, align 8
  store i64 %406, ptr %sunkaddr74, align 8
  %407 = load ptr, ptr %373, align 8
  %408 = load ptr, ptr %391, align 8
  %409 = tail call i8 %3(ptr align 1 %4, ptr align 1 %407, ptr align 1 %408) #18
  %410 = icmp eq i8 %409, 1
  %.sroa.speculated79.i.i87 = select i1 %410, i64 16, i64 48
  %.sroa.speculated79.i.i = select i1 %410, ptr %373, ptr %391
  %sunkaddr88 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated79.i.i87
  %411 = load i64, ptr %sunkaddr88, align 8
  store i64 %411, ptr %sunkaddr80, align 8
  %412 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 -8
  %.2124.i.i = select i1 %410, ptr %412, ptr %373
  %.2.i23.i = select i1 %410, ptr %391, ptr %412
  %413 = load ptr, ptr %.2124.i.i, align 8
  %414 = load ptr, ptr %.2.i23.i, align 8
  %415 = tail call i8 %3(ptr align 1 %4, ptr align 1 %413, ptr align 1 %414) #18
  %416 = icmp eq i8 %415, 1
  %.sroa.speculated70.i.i = select i1 %416, ptr %.2124.i.i, ptr %.2.i23.i
  %417 = load i64, ptr %.sroa.speculated70.i.i, align 8
  store i64 %417, ptr %sunkaddr69, align 8
  %418 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 -8
  %.3125.i.i = select i1 %416, ptr %418, ptr %.2124.i.i
  %.3.i24.i = select i1 %416, ptr %.2.i23.i, ptr %418
  %419 = load ptr, ptr %.3125.i.i, align 8
  %420 = load ptr, ptr %.3.i24.i, align 8
  %421 = tail call i8 %3(ptr align 1 %4, ptr align 1 %419, ptr align 1 %420) #18
  %422 = icmp eq i8 %421, 1
  %.sroa.speculated.i25.i = select i1 %422, ptr %.3125.i.i, ptr %.3.i24.i
  %423 = load i64, ptr %.sroa.speculated.i25.i, align 8
  store i64 %423, ptr %sunkaddr68, align 8
  %424 = getelementptr inbounds i8, ptr %.sroa.speculated.i25.i, i64 -8
  %.4126.i.i = select i1 %422, ptr %424, ptr %.3125.i.i
  %.4.i26.i = select i1 %422, ptr %.3.i24.i, ptr %424
  %425 = load ptr, ptr %.4126.i.i, align 8
  %426 = load ptr, ptr %.4.i26.i, align 8
  %427 = tail call i8 %3(ptr align 1 %4, ptr align 1 %425, ptr align 1 %426) #18
  %428 = icmp eq i8 %427, 1
  %429 = select i1 %428, ptr %.4126.i.i, ptr %.4.i26.i
  %430 = load i64, ptr %429, align 8
  store i64 %430, ptr %sunkaddr75, align 8
  br label %common.ret

431:                                              ; preds = %6
  %432 = lshr i64 %1, 1
  %433 = lshr i64 %1, 2
  %434 = sub nuw nsw i64 %432, %433
  %435 = sub nuw i64 %1, %432
  %436 = lshr i64 %435, 1
  %437 = sub nuw i64 %435, %436
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %0, i64 %433, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5)
  %438 = shl i64 %433, 3
  %439 = getelementptr inbounds i8, ptr %0, i64 %438
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %439, i64 %434, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5)
  %440 = shl nuw i64 %434, 3
  %441 = getelementptr inbounds i8, ptr %439, i64 %440
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %441, i64 %436, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5)
  %442 = shl nuw i64 %436, 3
  %443 = getelementptr inbounds i8, ptr %441, i64 %442
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %443, i64 %437, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5)
  %444 = add i64 %438, -8
  %445 = getelementptr inbounds i8, ptr %0, i64 %444
  tail call void %5(ptr align 1 %4, i64 1) #18
  %446 = load ptr, ptr %445, align 8
  %447 = load ptr, ptr %439, align 8
  %448 = tail call i8 %3(ptr align 1 %4, ptr align 1 %446, ptr align 1 %447) #18
  %.not = icmp eq i8 %448, 1
  %.pre = shl i64 %432, 3
  br i1 %.not, label %.critedge, label %449

449:                                              ; preds = %431
  %450 = add i64 %.pre, -8
  %451 = getelementptr inbounds i8, ptr %0, i64 %450
  %452 = getelementptr inbounds i8, ptr %0, i64 %.pre
  tail call void %5(ptr align 1 %4, i64 1) #18
  %453 = load ptr, ptr %451, align 8
  %454 = load ptr, ptr %452, align 8
  %455 = tail call i8 %3(ptr align 1 %4, ptr align 1 %453, ptr align 1 %454) #18
  %.not11 = icmp eq i8 %455, 1
  br i1 %.not11, label %.critedge, label %456

456:                                              ; preds = %449
  %457 = getelementptr inbounds i8, ptr %443, i64 -8
  tail call void %5(ptr align 1 %4, i64 1) #18
  %458 = load ptr, ptr %457, align 8
  %459 = load ptr, ptr %443, align 8
  %460 = tail call i8 %3(ptr align 1 %4, ptr align 1 %458, ptr align 1 %459) #18
  %.not12 = icmp eq i8 %460, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %456, %449, %431
  tail call fastcc void @sort.parity_merge__anon_16222(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %433, i64 %434, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5)
  %461 = getelementptr inbounds i8, ptr %2, i64 %.pre
  %462 = getelementptr inbounds i8, ptr %0, i64 %.pre
  tail call fastcc void @sort.parity_merge__anon_16222(ptr nonnull align 1 %461, ptr nonnull align 1 %462, i64 %436, i64 %437, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5)
  tail call fastcc void @sort.parity_merge__anon_16222(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %432, i64 %435, ptr nonnull readonly align 1 %3, ptr align 1 %4, ptr nonnull readonly align 1 %5)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4) unnamed_addr #4 {
  %6 = alloca [3072 x i8], align 8
  %.not95 = icmp ult i64 %1, 8
  br i1 %.not95, label %.loopexit, label %.lr.ph100.preheader

.lr.ph100.preheader:                              ; preds = %5
  %const = bitcast i64 2305843009213693951 to i64
  %7 = lshr i64 %1, 3
  br label %.lr.ph100

.lr.ph100:                                        ; preds = %43, %.lr.ph100.preheader
  %.198 = phi ptr [ %.2, %43 ], [ %0, %.lr.ph100.preheader ]
  %.027997 = phi ptr [ %.1280, %43 ], [ %0, %.lr.ph100.preheader ]
  %.028496 = phi i64 [ %.1285, %43 ], [ %7, %.lr.ph100.preheader ]
  %8 = add i64 %.028496, -1
  tail call void %4(ptr align 1 %3, i64 4) #18
  %9 = getelementptr inbounds i8, ptr %.198, i64 8
  %10 = load ptr, ptr %.198, align 8
  %11 = load ptr, ptr %9, align 8
  %12 = tail call i8 %2(ptr align 1 %3, ptr align 1 %10, ptr align 1 %11) #18
  %13 = icmp eq i8 %12, 1
  %14 = zext i1 %13 to i4
  %15 = getelementptr inbounds i8, ptr %.198, i64 16
  %16 = getelementptr inbounds i8, ptr %.198, i64 24
  %17 = load ptr, ptr %15, align 8
  %18 = load ptr, ptr %16, align 8
  %19 = tail call i8 %2(ptr align 1 %3, ptr align 1 %17, ptr align 1 %18) #18
  %20 = icmp eq i8 %19, 1
  %21 = zext i1 %20 to i4
  %22 = getelementptr inbounds i8, ptr %.198, i64 32
  %23 = getelementptr inbounds i8, ptr %.198, i64 40
  %24 = load ptr, ptr %22, align 8
  %25 = load ptr, ptr %23, align 8
  %26 = tail call i8 %2(ptr align 1 %3, ptr align 1 %24, ptr align 1 %25) #18
  %27 = icmp eq i8 %26, 1
  %28 = zext i1 %27 to i4
  %29 = getelementptr inbounds i8, ptr %.198, i64 48
  %30 = getelementptr inbounds i8, ptr %.198, i64 56
  %31 = load ptr, ptr %29, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %2(ptr align 1 %3, ptr align 1 %31, ptr align 1 %32) #18
  %34 = icmp eq i8 %33, 1
  %35 = zext i1 %34 to i4
  %36 = select i1 %20, i4 2, i4 0
  %37 = select i1 %27, i4 4, i4 0
  %38 = select i1 %34, i4 -8, i4 0
  %39 = or i4 %36, %37
  %40 = or i4 %39, %38
  %41 = or i4 %40, %14
  %42 = zext i4 %41 to i32
  switch i32 %42, label %.preheader [
    i32 0, label %44
    i32 15, label %57
  ]

43:                                               ; preds = %337, %.critedge21, %75, %.critedge
  %.1285 = phi i64 [ %174, %337 ], [ %107, %.critedge21 ], [ %.2286, %75 ], [ %8, %.critedge ]
  %.1280 = phi ptr [ %.3282.ph264, %337 ], [ %.3282.ph264, %.critedge21 ], [ %.3282.ph264, %75 ], [ %.027997, %.critedge ]
  %.2 = phi ptr [ %338, %337 ], [ %170, %.critedge21 ], [ %103, %75 ], [ %56, %.critedge ]
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %.lr.ph100

44:                                               ; preds = %.lr.ph100
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr = getelementptr inbounds i8, ptr %.198, i64 8
  %45 = load ptr, ptr %sunkaddr, align 8
  %sunkaddr571 = getelementptr inbounds i8, ptr %.198, i64 16
  %46 = load ptr, ptr %sunkaddr571, align 8
  %47 = tail call i8 %2(ptr align 1 %3, ptr align 1 %45, ptr align 1 %46) #18
  %.not328 = icmp eq i8 %47, 1
  br i1 %.not328, label %.critedge, label %48

48:                                               ; preds = %44
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr572 = getelementptr inbounds i8, ptr %.198, i64 24
  %49 = load ptr, ptr %sunkaddr572, align 8
  %sunkaddr573 = getelementptr inbounds i8, ptr %.198, i64 32
  %50 = load ptr, ptr %sunkaddr573, align 8
  %51 = tail call i8 %2(ptr align 1 %3, ptr align 1 %49, ptr align 1 %50) #18
  %.not329 = icmp eq i8 %51, 1
  br i1 %.not329, label %.critedge, label %52

52:                                               ; preds = %48
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr574 = getelementptr inbounds i8, ptr %.198, i64 40
  %53 = load ptr, ptr %sunkaddr574, align 8
  %sunkaddr575 = getelementptr inbounds i8, ptr %.198, i64 48
  %54 = load ptr, ptr %sunkaddr575, align 8
  %55 = tail call i8 %2(ptr align 1 %3, ptr align 1 %53, ptr align 1 %54) #18
  %.not330 = icmp eq i8 %55, 1
  br i1 %.not330, label %.critedge, label %.preheader

.critedge:                                        ; preds = %52, %48, %44
  tail call void %4(ptr align 1 %3, i64 16) #18
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %.198, ptr nonnull align 1 %6, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %56 = getelementptr inbounds i8, ptr %.198, i64 64
  br label %43

57:                                               ; preds = %.lr.ph100
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr576 = getelementptr inbounds i8, ptr %.198, i64 8
  %58 = load ptr, ptr %sunkaddr576, align 8
  %sunkaddr577 = getelementptr inbounds i8, ptr %.198, i64 16
  %59 = load ptr, ptr %sunkaddr577, align 8
  %60 = tail call i8 %2(ptr align 1 %3, ptr align 1 %58, ptr align 1 %59) #18
  %61 = icmp eq i8 %60, 1
  br i1 %61, label %62, label %.critedge4

62:                                               ; preds = %57
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr578 = getelementptr inbounds i8, ptr %.198, i64 24
  %63 = load ptr, ptr %sunkaddr578, align 8
  %sunkaddr579 = getelementptr inbounds i8, ptr %.198, i64 32
  %64 = load ptr, ptr %sunkaddr579, align 8
  %65 = tail call i8 %2(ptr align 1 %3, ptr align 1 %63, ptr align 1 %64) #18
  %66 = icmp eq i8 %65, 1
  br i1 %66, label %67, label %.critedge4

67:                                               ; preds = %62
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr580 = getelementptr inbounds i8, ptr %.198, i64 40
  %68 = load ptr, ptr %sunkaddr580, align 8
  %sunkaddr581 = getelementptr inbounds i8, ptr %.198, i64 48
  %69 = load ptr, ptr %sunkaddr581, align 8
  %70 = tail call i8 %2(ptr align 1 %3, ptr align 1 %68, ptr align 1 %69) #18
  %71 = icmp eq i8 %70, 1
  br i1 %71, label %.preheader, label %.critedge4

.critedge4:                                       ; preds = %67, %62, %57
  br label %.preheader

.preheader:                                       ; preds = %.critedge4, %67, %52, %.lr.ph100
  %.1299.ph = phi i2 [ 1, %67 ], [ 0, %52 ], [ -2, %.lr.ph100 ], [ -2, %.critedge4 ]
  %.3282.ph = phi ptr [ %.198, %67 ], [ %.027997, %52 ], [ %.027997, %.lr.ph100 ], [ %.027997, %.critedge4 ]
  br label %.outer

.outer:                                           ; preds = %315, %157, %.preheader
  %.1299.ph263 = phi i2 [ %.1299.ph, %.preheader ], [ 1, %315 ], [ 1, %157 ]
  %.0296.ph = phi i4 [ %35, %.preheader ], [ %201, %315 ], [ %134, %157 ]
  %.0294.ph = phi i4 [ %28, %.preheader ], [ %194, %315 ], [ %127, %157 ]
  %.0292.ph = phi i4 [ %21, %.preheader ], [ %187, %315 ], [ %120, %157 ]
  %.0290.ph = phi i4 [ %14, %.preheader ], [ %180, %315 ], [ %113, %157 ]
  %.2286.ph = phi i64 [ %8, %.preheader ], [ %174, %315 ], [ %107, %157 ]
  %.3282.ph264 = phi ptr [ %.3282.ph, %.preheader ], [ %172, %315 ], [ %105, %157 ]
  %.3.ph = phi ptr [ %.198, %.preheader ], [ %172, %315 ], [ %105, %157 ]
  %uglygep60 = getelementptr i8, ptr %.3282.ph264, i64 8
  br label %72

72:                                               ; preds = %301, %288, %166, %157, %152, %147, %138, %.outer
  %.1299 = phi i2 [ %.1299.ph263, %.outer ], [ 0, %166 ], [ 1, %288 ], [ 0, %301 ], [ -2, %152 ], [ -2, %138 ], [ -2, %147 ], [ -2, %157 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %134, %166 ], [ %201, %288 ], [ %201, %301 ], [ %134, %152 ], [ %134, %138 ], [ %134, %147 ], [ %134, %157 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %127, %166 ], [ %194, %288 ], [ %194, %301 ], [ %127, %152 ], [ %127, %138 ], [ %127, %147 ], [ %127, %157 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %120, %166 ], [ %187, %288 ], [ %187, %301 ], [ %120, %152 ], [ %120, %138 ], [ %120, %147 ], [ %120, %157 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %113, %166 ], [ %180, %288 ], [ %180, %301 ], [ %113, %152 ], [ %113, %138 ], [ %113, %147 ], [ %113, %157 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %107, %166 ], [ %174, %288 ], [ %174, %301 ], [ %107, %152 ], [ %107, %138 ], [ %107, %147 ], [ %107, %157 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %105, %166 ], [ %172, %288 ], [ %172, %301 ], [ %105, %152 ], [ %105, %138 ], [ %105, %147 ], [ %105, %157 ]
  %73 = zext i2 %.1299 to i32
  switch i32 %73, label %74 [
    i32 2, label %75
    i32 0, label %104
    i32 1, label %171
  ]

74:                                               ; preds = %72
  unreachable

75:                                               ; preds = %72
  %76 = icmp eq i4 %.0290, 0
  %. = select i1 %76, i64 8, i64 0
  %.7 = select i1 %76, i64 0, i64 8
  %77 = getelementptr inbounds i8, ptr %.3, i64 %.
  %78 = load i64, ptr %77, align 8
  %79 = getelementptr inbounds i8, ptr %.3, i64 %.7
  %80 = load i64, ptr %79, align 8
  store i64 %80, ptr %.3, align 8
  %81 = getelementptr inbounds i8, ptr %.3, i64 8
  store i64 %78, ptr %81, align 8
  %82 = getelementptr inbounds i8, ptr %.3, i64 16
  %83 = icmp eq i4 %.0292, 0
  %.8 = select i1 %83, i64 8, i64 0
  %.9 = select i1 %83, i64 0, i64 8
  %84 = getelementptr inbounds i8, ptr %82, i64 %.8
  %85 = load i64, ptr %84, align 8
  %86 = getelementptr inbounds i8, ptr %82, i64 %.9
  %87 = load i64, ptr %86, align 8
  store i64 %87, ptr %82, align 8
  %88 = getelementptr inbounds i8, ptr %.3, i64 24
  store i64 %85, ptr %88, align 8
  %89 = getelementptr inbounds i8, ptr %.3, i64 32
  %90 = icmp eq i4 %.0294, 0
  %.10 = select i1 %90, i64 8, i64 0
  %.11 = select i1 %90, i64 0, i64 8
  %91 = getelementptr inbounds i8, ptr %89, i64 %.10
  %92 = load i64, ptr %91, align 8
  %93 = getelementptr inbounds i8, ptr %89, i64 %.11
  %94 = load i64, ptr %93, align 8
  store i64 %94, ptr %89, align 8
  %95 = getelementptr inbounds i8, ptr %.3, i64 40
  store i64 %92, ptr %95, align 8
  %96 = getelementptr inbounds i8, ptr %.3, i64 48
  %97 = icmp eq i4 %.0296, 0
  %.12 = select i1 %97, i64 8, i64 0
  %.13 = select i1 %97, i64 0, i64 8
  %98 = getelementptr inbounds i8, ptr %96, i64 %.12
  %99 = load i64, ptr %98, align 8
  %100 = getelementptr inbounds i8, ptr %96, i64 %.13
  %101 = load i64, ptr %100, align 8
  store i64 %101, ptr %96, align 8
  %102 = getelementptr inbounds i8, ptr %.3, i64 56
  store i64 %99, ptr %102, align 8
  tail call void %4(ptr align 1 %3, i64 16) #18
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %.3, ptr nonnull align 1 %6, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %103 = getelementptr inbounds i8, ptr %.3, i64 64
  br label %43

104:                                              ; preds = %72
  %105 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %106

106:                                              ; preds = %104
  %107 = add i64 %.2286, -1
  tail call void %4(ptr align 1 %3, i64 4) #18
  %108 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr582 = getelementptr inbounds i8, ptr %.3, i64 64
  %109 = load ptr, ptr %sunkaddr582, align 8
  %110 = load ptr, ptr %108, align 8
  %111 = tail call i8 %2(ptr align 1 %3, ptr align 1 %109, ptr align 1 %110) #18
  %112 = icmp eq i8 %111, 1
  %113 = zext i1 %112 to i4
  %114 = getelementptr inbounds i8, ptr %.3, i64 80
  %115 = getelementptr inbounds i8, ptr %.3, i64 88
  %116 = load ptr, ptr %114, align 8
  %117 = load ptr, ptr %115, align 8
  %118 = tail call i8 %2(ptr align 1 %3, ptr align 1 %116, ptr align 1 %117) #18
  %119 = icmp eq i8 %118, 1
  %120 = zext i1 %119 to i4
  %121 = getelementptr inbounds i8, ptr %.3, i64 96
  %122 = getelementptr inbounds i8, ptr %.3, i64 104
  %123 = load ptr, ptr %121, align 8
  %124 = load ptr, ptr %122, align 8
  %125 = tail call i8 %2(ptr align 1 %3, ptr align 1 %123, ptr align 1 %124) #18
  %126 = icmp eq i8 %125, 1
  %127 = zext i1 %126 to i4
  %128 = getelementptr inbounds i8, ptr %.3, i64 112
  %129 = getelementptr inbounds i8, ptr %.3, i64 120
  %130 = load ptr, ptr %128, align 8
  %131 = load ptr, ptr %129, align 8
  %132 = tail call i8 %2(ptr align 1 %3, ptr align 1 %130, ptr align 1 %131) #18
  %133 = icmp eq i8 %132, 1
  %134 = zext i1 %133 to i4
  %135 = or i4 %120, %113
  %136 = or i4 %135, %127
  %137 = or i4 %136, %134
  %.not320 = icmp eq i4 %137, 0
  br i1 %.not320, label %143, label %138

138:                                              ; preds = %106
  %139 = add nuw nsw i4 %120, %113
  %140 = add nuw nsw i4 %139, %127
  %141 = add nuw nsw i4 %140, %134
  %142 = icmp eq i4 %141, 4
  br i1 %142, label %147, label %72

143:                                              ; preds = %106
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr583 = getelementptr inbounds i8, ptr %.3, i64 72
  %144 = load ptr, ptr %sunkaddr583, align 8
  %sunkaddr584 = getelementptr inbounds i8, ptr %.3, i64 80
  %145 = load ptr, ptr %sunkaddr584, align 8
  %146 = tail call i8 %2(ptr align 1 %3, ptr align 1 %144, ptr align 1 %145) #18
  %.not321 = icmp eq i8 %146, 1
  br i1 %.not321, label %.critedge21, label %162

147:                                              ; preds = %138
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr585 = getelementptr inbounds i8, ptr %.3, i64 72
  %148 = load ptr, ptr %sunkaddr585, align 8
  %sunkaddr586 = getelementptr inbounds i8, ptr %.3, i64 80
  %149 = load ptr, ptr %sunkaddr586, align 8
  %150 = tail call i8 %2(ptr align 1 %3, ptr align 1 %148, ptr align 1 %149) #18
  %151 = icmp eq i8 %150, 1
  br i1 %151, label %152, label %72

152:                                              ; preds = %147
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr587 = getelementptr inbounds i8, ptr %.3, i64 88
  %153 = load ptr, ptr %sunkaddr587, align 8
  %sunkaddr588 = getelementptr inbounds i8, ptr %.3, i64 96
  %154 = load ptr, ptr %sunkaddr588, align 8
  %155 = tail call i8 %2(ptr align 1 %3, ptr align 1 %153, ptr align 1 %154) #18
  %156 = icmp eq i8 %155, 1
  br i1 %156, label %157, label %72

157:                                              ; preds = %152
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr589 = getelementptr inbounds i8, ptr %.3, i64 104
  %158 = load ptr, ptr %sunkaddr589, align 8
  %sunkaddr590 = getelementptr inbounds i8, ptr %.3, i64 112
  %159 = load ptr, ptr %sunkaddr590, align 8
  %160 = tail call i8 %2(ptr align 1 %3, ptr align 1 %158, ptr align 1 %159) #18
  %161 = icmp eq i8 %160, 1
  br i1 %161, label %.outer, label %72

162:                                              ; preds = %143
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr591 = getelementptr inbounds i8, ptr %.3, i64 88
  %163 = load ptr, ptr %sunkaddr591, align 8
  %sunkaddr592 = getelementptr inbounds i8, ptr %.3, i64 96
  %164 = load ptr, ptr %sunkaddr592, align 8
  %165 = tail call i8 %2(ptr align 1 %3, ptr align 1 %163, ptr align 1 %164) #18
  %.not322 = icmp eq i8 %165, 1
  br i1 %.not322, label %.critedge21, label %166

166:                                              ; preds = %162
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr593 = getelementptr inbounds i8, ptr %.3, i64 104
  %167 = load ptr, ptr %sunkaddr593, align 8
  %sunkaddr594 = getelementptr inbounds i8, ptr %.3, i64 112
  %168 = load ptr, ptr %sunkaddr594, align 8
  %169 = tail call i8 %2(ptr align 1 %3, ptr align 1 %167, ptr align 1 %168) #18
  %.not323 = icmp eq i8 %169, 1
  br i1 %.not323, label %.critedge21, label %72

.critedge21:                                      ; preds = %166, %162, %143
  tail call void %4(ptr align 1 %3, i64 16) #18
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %105, ptr nonnull align 1 %6, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %170 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %43

171:                                              ; preds = %72
  %172 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %205, label %173

173:                                              ; preds = %171
  %174 = add i64 %.2286, -1
  tail call void %4(ptr align 1 %3, i64 4) #18
  %175 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr595 = getelementptr inbounds i8, ptr %.3, i64 64
  %176 = load ptr, ptr %sunkaddr595, align 8
  %177 = load ptr, ptr %175, align 8
  %178 = tail call i8 %2(ptr align 1 %3, ptr align 1 %176, ptr align 1 %177) #18
  %179 = icmp ne i8 %178, 1
  %180 = zext i1 %179 to i4
  %181 = getelementptr inbounds i8, ptr %.3, i64 80
  %182 = getelementptr inbounds i8, ptr %.3, i64 88
  %183 = load ptr, ptr %181, align 8
  %184 = load ptr, ptr %182, align 8
  %185 = tail call i8 %2(ptr align 1 %3, ptr align 1 %183, ptr align 1 %184) #18
  %186 = icmp ne i8 %185, 1
  %187 = zext i1 %186 to i4
  %188 = getelementptr inbounds i8, ptr %.3, i64 96
  %189 = getelementptr inbounds i8, ptr %.3, i64 104
  %190 = load ptr, ptr %188, align 8
  %191 = load ptr, ptr %189, align 8
  %192 = tail call i8 %2(ptr align 1 %3, ptr align 1 %190, ptr align 1 %191) #18
  %193 = icmp ne i8 %192, 1
  %194 = zext i1 %193 to i4
  %195 = getelementptr inbounds i8, ptr %.3, i64 112
  %196 = getelementptr inbounds i8, ptr %.3, i64 120
  %197 = load ptr, ptr %195, align 8
  %198 = load ptr, ptr %196, align 8
  %199 = tail call i8 %2(ptr align 1 %3, ptr align 1 %197, ptr align 1 %198) #18
  %200 = icmp ne i8 %199, 1
  %201 = zext i1 %200 to i4
  %202 = or i4 %187, %180
  %203 = or i4 %202, %194
  %204 = or i4 %203, %201
  %.not315 = icmp eq i4 %204, 0
  br i1 %.not315, label %272, label %.critedge25

205:                                              ; preds = %171
  %206 = and i64 %1, 7
  %207 = icmp eq i64 %206, 7
  br i1 %207, label %412, label %.critedge55

.critedge25:                                      ; preds = %288, %283, %278, %272, %173
  %208 = ptrtoint ptr %.3282.ph264 to i64
  %209 = getelementptr inbounds i8, ptr %.3, i64 56
  %210 = ptrtoint ptr %209 to i64
  %211 = sub nuw i64 %210, %208
  %212 = lshr i64 %211, 4
  %213 = shl nuw nsw i64 %212, 3
  %214 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %213
  %215 = sub nsw i64 0, %213
  %216 = getelementptr inbounds i8, ptr %209, i64 %215
  %217 = and i64 %211, 16
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %251, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %251, %.critedge25
  %.027.i = phi ptr [ %255, %251 ], [ %216, %.critedge25 ]
  %.025.i = phi ptr [ %254, %251 ], [ %214, %.critedge25 ]
  %.0.i = phi i64 [ %256, %251 ], [ %212, %.critedge25 ]
  %219 = load i64, ptr %.3282.ph264, align 8
  %220 = load i64, ptr %209, align 8
  store i64 %220, ptr %.3282.ph264, align 8
  store i64 %219, ptr %209, align 8
  %221 = load i64, ptr %.025.i, align 8
  %222 = load i64, ptr %.027.i, align 8
  store i64 %222, ptr %.025.i, align 8
  store i64 %221, ptr %.027.i, align 8
  %223 = icmp ult i64 %.0.i, 2
  br i1 %223, label %sort.quad_reversal.exit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %._crit_edge.i
  %224 = lshr i64 %.0.i, 1
  %min.iters.check = icmp ult i64 %.0.i, 76
  br i1 %min.iters.check, label %.lr.ph.preheader261, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %.lr.ph.preheader
  %225 = add nsw i64 %224, -1
  %uglygep = getelementptr i8, ptr %.3, i64 48
  %mul.result.neg = mul i64 %225, -8
  %226 = getelementptr i8, ptr %uglygep, i64 %mul.result.neg
  %227 = icmp ugt ptr %226, %uglygep
  %uglygep56 = getelementptr i8, ptr %.025.i, i64 -8
  %mul.result58.neg = mul i64 %225, -8
  %mul.overflow59 = icmp ugt i64 %225, %const
  %228 = getelementptr i8, ptr %uglygep56, i64 %mul.result58.neg
  %229 = icmp ugt ptr %228, %uglygep56
  %230 = or i1 %229, %mul.overflow59
  %231 = or i1 %227, %230
  br i1 %231, label %.lr.ph.preheader261, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %232 = shl i64 %224, 3
  %uglygep61 = getelementptr i8, ptr %uglygep60, i64 %232
  %uglygep62 = getelementptr i8, ptr %.027.i, i64 8
  %uglygep63 = getelementptr i8, ptr %uglygep62, i64 %232
  %uglygep64 = getelementptr i8, ptr %.3, i64 56
  %233 = mul i64 %224, -8
  %uglygep65 = getelementptr i8, ptr %uglygep64, i64 %233
  %uglygep66 = getelementptr i8, ptr %.025.i, i64 %233
  %bound0 = icmp ult ptr %uglygep60, %uglygep63
  %bound1 = icmp ult ptr %uglygep62, %uglygep61
  %found.conflict = and i1 %bound0, %bound1
  %bound067 = icmp ult ptr %uglygep60, %209
  %bound168 = icmp ult ptr %uglygep65, %uglygep61
  %found.conflict69 = and i1 %bound067, %bound168
  %conflict.rdx = or i1 %found.conflict, %found.conflict69
  %bound070 = icmp ult ptr %uglygep60, %.025.i
  %bound171 = icmp ult ptr %uglygep66, %uglygep61
  %found.conflict72 = and i1 %bound070, %bound171
  %conflict.rdx73 = or i1 %conflict.rdx, %found.conflict72
  %bound074 = icmp ult ptr %uglygep62, %209
  %bound175 = icmp ult ptr %uglygep65, %uglygep63
  %found.conflict76 = and i1 %bound074, %bound175
  %conflict.rdx77 = or i1 %conflict.rdx73, %found.conflict76
  %bound078 = icmp ult ptr %uglygep62, %.025.i
  %bound179 = icmp ult ptr %uglygep66, %uglygep63
  %found.conflict80 = and i1 %bound078, %bound179
  %conflict.rdx81 = or i1 %conflict.rdx77, %found.conflict80
  %bound082 = icmp ult ptr %uglygep65, %.025.i
  %bound183 = icmp ult ptr %uglygep66, %209
  %found.conflict84 = and i1 %bound082, %bound183
  %conflict.rdx85 = or i1 %conflict.rdx81, %found.conflict84
  br i1 %conflict.rdx85, label %.lr.ph.preheader261, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %const568 = bitcast i64 9223372036854775806 to i64
  %n.vec = and i64 %224, %const568
  %ind.end = and i64 %224, 1
  %234 = shl i64 %n.vec, 3
  %ind.end86 = getelementptr i8, ptr %.3282.ph264, i64 %234
  %235 = mul i64 %n.vec, -8
  %ind.end88 = getelementptr i8, ptr %.025.i, i64 %235
  %236 = shl i64 %n.vec, 3
  %ind.end90 = getelementptr i8, ptr %.027.i, i64 %236
  %237 = mul i64 %n.vec, -8
  %ind.end92 = getelementptr i8, ptr %209, i64 %237
  %238 = lshr i64 %.0.i, 2
  %239 = mul nsw i64 %238, -2
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv544 = phi i64 [ %lsr.iv.next545, %vector.body ], [ 8, %vector.ph ]
  %lsr.iv541 = phi i64 [ %lsr.iv.next542, %vector.body ], [ 0, %vector.ph ]
  %uglygep546 = getelementptr i8, ptr %.027.i, i64 %lsr.iv544
  %uglygep549 = getelementptr i8, ptr %.3282.ph264, i64 %lsr.iv544
  %wide.load = load <2 x i64>, ptr %uglygep549, align 8, !alias.scope !459, !noalias !462
  %sunkaddr596 = mul i64 %lsr.iv541, 8
  %sunkaddr597 = getelementptr i8, ptr %.3, i64 %sunkaddr596
  %sunkaddr598 = getelementptr i8, ptr %sunkaddr597, i64 40
  %wide.load97 = load <2 x i64>, ptr %sunkaddr598, align 8, !alias.scope !466, !noalias !467
  %reverse = shufflevector <2 x i64> %wide.load97, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse, ptr %uglygep549, align 8, !alias.scope !459, !noalias !462
  %reverse98 = shufflevector <2 x i64> %wide.load, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse98, ptr %sunkaddr598, align 8, !alias.scope !466, !noalias !467
  %sunkaddr599 = mul i64 %lsr.iv541, 8
  %sunkaddr600 = getelementptr i8, ptr %.025.i, i64 %sunkaddr599
  %sunkaddr601 = getelementptr i8, ptr %sunkaddr600, i64 -16
  %wide.load99 = load <2 x i64>, ptr %sunkaddr601, align 8, !alias.scope !467
  %reverse100 = shufflevector <2 x i64> %wide.load99, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load101 = load <2 x i64>, ptr %uglygep546, align 8, !alias.scope !468, !noalias !469
  %reverse102 = shufflevector <2 x i64> %wide.load101, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse102, ptr %sunkaddr601, align 8, !alias.scope !467
  store <2 x i64> %reverse100, ptr %uglygep546, align 8, !alias.scope !468, !noalias !469
  %lsr.iv.next542 = add nsw i64 %lsr.iv541, -2
  %lsr.iv.next545 = add i64 %lsr.iv544, 16
  %240 = icmp eq i64 %239, %lsr.iv.next542
  br i1 %240, label %middle.block, label %vector.body, !llvm.loop !470

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %224, %n.vec
  br i1 %cmp.n, label %sort.quad_reversal.exit, label %.lr.ph.preheader261

.lr.ph.preheader261:                              ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %.lr.ph.preheader
  %.1.i94.ph = phi i64 [ %224, %vector.memcheck ], [ %224, %vector.scevcheck ], [ %224, %.lr.ph.preheader ], [ %ind.end, %middle.block ]
  %.024.i93.ph = phi ptr [ %.3282.ph264, %vector.memcheck ], [ %.3282.ph264, %vector.scevcheck ], [ %.3282.ph264, %.lr.ph.preheader ], [ %ind.end86, %middle.block ]
  %.126.i92.ph = phi ptr [ %.025.i, %vector.memcheck ], [ %.025.i, %vector.scevcheck ], [ %.025.i, %.lr.ph.preheader ], [ %ind.end88, %middle.block ]
  %.128.i91.ph = phi ptr [ %.027.i, %vector.memcheck ], [ %.027.i, %vector.scevcheck ], [ %.027.i, %.lr.ph.preheader ], [ %ind.end90, %middle.block ]
  %.029.i90.ph = phi ptr [ %209, %vector.memcheck ], [ %209, %vector.scevcheck ], [ %209, %.lr.ph.preheader ], [ %ind.end92, %middle.block ]
  %xtraiter = and i64 %.1.i94.ph, 1
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.lr.ph.prol.loopexit, label %.lr.ph.prol

.lr.ph.prol:                                      ; preds = %.lr.ph.preheader261
  %241 = getelementptr inbounds i8, ptr %.128.i91.ph, i64 8
  %242 = getelementptr inbounds i8, ptr %.126.i92.ph, i64 -8
  %243 = getelementptr inbounds i8, ptr %.029.i90.ph, i64 -8
  %244 = getelementptr inbounds i8, ptr %.024.i93.ph, i64 8
  %245 = add nsw i64 %.1.i94.ph, -1
  %246 = load i64, ptr %244, align 8
  %247 = load i64, ptr %243, align 8
  store i64 %247, ptr %244, align 8
  store i64 %246, ptr %243, align 8
  %248 = load i64, ptr %242, align 8
  %249 = load i64, ptr %241, align 8
  store i64 %249, ptr %242, align 8
  store i64 %248, ptr %241, align 8
  br label %.lr.ph.prol.loopexit

.lr.ph.prol.loopexit:                             ; preds = %.lr.ph.prol, %.lr.ph.preheader261
  %.1.i94.unr = phi i64 [ %.1.i94.ph, %.lr.ph.preheader261 ], [ %245, %.lr.ph.prol ]
  %.024.i93.unr = phi ptr [ %.024.i93.ph, %.lr.ph.preheader261 ], [ %244, %.lr.ph.prol ]
  %.126.i92.unr = phi ptr [ %.126.i92.ph, %.lr.ph.preheader261 ], [ %242, %.lr.ph.prol ]
  %.128.i91.unr = phi ptr [ %.128.i91.ph, %.lr.ph.preheader261 ], [ %241, %.lr.ph.prol ]
  %.029.i90.unr = phi ptr [ %.029.i90.ph, %.lr.ph.preheader261 ], [ %243, %.lr.ph.prol ]
  %250 = icmp eq i64 %.1.i94.ph, 1
  br i1 %250, label %sort.quad_reversal.exit, label %.lr.ph.preheader469

.lr.ph.preheader469:                              ; preds = %.lr.ph.prol.loopexit
  br label %.lr.ph

251:                                              ; preds = %.critedge25
  %252 = load i64, ptr %214, align 8
  %253 = load i64, ptr %216, align 8
  store i64 %253, ptr %214, align 8
  %254 = getelementptr inbounds i8, ptr %214, i64 -8
  store i64 %252, ptr %216, align 8
  %255 = getelementptr inbounds i8, ptr %216, i64 8
  %256 = add nsw i64 %212, -1
  br label %._crit_edge.i

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader469
  %lsr.iv556 = phi i64 [ -1, %.lr.ph.preheader469 ], [ %lsr.iv.next557, %.lr.ph ]
  %lsr.iv550 = phi i64 [ 0, %.lr.ph.preheader469 ], [ %lsr.iv.next551, %.lr.ph ]
  %257 = shl i64 %lsr.iv556, 3
  %uglygep560 = getelementptr i8, ptr %.126.i92.unr, i64 %257
  %uglygep567 = getelementptr i8, ptr %.029.i90.unr, i64 %257
  %sunkaddr602 = mul i64 %lsr.iv550, 8
  %sunkaddr603 = getelementptr i8, ptr %.024.i93.unr, i64 %sunkaddr602
  %sunkaddr604 = getelementptr i8, ptr %sunkaddr603, i64 8
  %258 = load i64, ptr %sunkaddr604, align 8
  %259 = load i64, ptr %uglygep567, align 8
  store i64 %259, ptr %sunkaddr604, align 8
  store i64 %258, ptr %uglygep567, align 8
  %260 = load i64, ptr %uglygep560, align 8
  %sunkaddr605 = mul i64 %lsr.iv550, 8
  %sunkaddr606 = getelementptr i8, ptr %.128.i91.unr, i64 %sunkaddr605
  %sunkaddr607 = getelementptr i8, ptr %sunkaddr606, i64 8
  %261 = load i64, ptr %sunkaddr607, align 8
  store i64 %261, ptr %uglygep560, align 8
  store i64 %260, ptr %sunkaddr607, align 8
  %262 = shl i64 %lsr.iv556, 3
  %uglygep558 = getelementptr i8, ptr %.126.i92.unr, i64 %262
  %uglygep559 = getelementptr i8, ptr %uglygep558, i64 -8
  %uglygep565 = getelementptr i8, ptr %.029.i90.unr, i64 %262
  %uglygep566 = getelementptr i8, ptr %uglygep565, i64 -8
  %sunkaddr608 = mul i64 %lsr.iv550, 8
  %sunkaddr609 = getelementptr i8, ptr %.024.i93.unr, i64 %sunkaddr608
  %sunkaddr610 = getelementptr i8, ptr %sunkaddr609, i64 16
  %263 = load i64, ptr %sunkaddr610, align 8
  %264 = load i64, ptr %uglygep566, align 8
  store i64 %264, ptr %sunkaddr610, align 8
  store i64 %263, ptr %uglygep566, align 8
  %265 = load i64, ptr %uglygep559, align 8
  %sunkaddr611 = mul i64 %lsr.iv550, 8
  %sunkaddr612 = getelementptr i8, ptr %.128.i91.unr, i64 %sunkaddr611
  %sunkaddr613 = getelementptr i8, ptr %sunkaddr612, i64 16
  %266 = load i64, ptr %sunkaddr613, align 8
  store i64 %266, ptr %uglygep559, align 8
  store i64 %265, ptr %sunkaddr613, align 8
  %lsr.iv.next551 = add i64 %lsr.iv550, 2
  %lsr.iv.next557 = add i64 %lsr.iv556, -2
  %267 = icmp eq i64 %.1.i94.unr, %lsr.iv.next551
  br i1 %267, label %sort.quad_reversal.exit, label %.lr.ph, !llvm.loop !471

sort.quad_reversal.exit:                          ; preds = %.lr.ph, %.lr.ph.prol.loopexit, %middle.block, %._crit_edge.i
  %268 = add nuw nsw i4 %187, %180
  %269 = add nuw nsw i4 %268, %194
  %270 = add nuw i4 %269, %201
  %271 = zext i4 %270 to i32
  switch i32 %271, label %.critedge37 [
    i32 4, label %293
    i32 0, label %305
  ]

272:                                              ; preds = %173
  %273 = getelementptr inbounds i8, ptr %.3, i64 56
  tail call void %4(ptr align 1 %3, i64 1) #18
  %274 = load ptr, ptr %273, align 8
  %sunkaddr614 = getelementptr inbounds i8, ptr %.3, i64 64
  %275 = load ptr, ptr %sunkaddr614, align 8
  %276 = tail call i8 %2(ptr align 1 %3, ptr align 1 %274, ptr align 1 %275) #18
  %277 = icmp eq i8 %276, 1
  br i1 %277, label %278, label %.critedge25

278:                                              ; preds = %272
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr615 = getelementptr inbounds i8, ptr %.3, i64 72
  %279 = load ptr, ptr %sunkaddr615, align 8
  %sunkaddr616 = getelementptr inbounds i8, ptr %.3, i64 80
  %280 = load ptr, ptr %sunkaddr616, align 8
  %281 = tail call i8 %2(ptr align 1 %3, ptr align 1 %279, ptr align 1 %280) #18
  %282 = icmp eq i8 %281, 1
  br i1 %282, label %283, label %.critedge25

283:                                              ; preds = %278
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr617 = getelementptr inbounds i8, ptr %.3, i64 88
  %284 = load ptr, ptr %sunkaddr617, align 8
  %sunkaddr618 = getelementptr inbounds i8, ptr %.3, i64 96
  %285 = load ptr, ptr %sunkaddr618, align 8
  %286 = tail call i8 %2(ptr align 1 %3, ptr align 1 %284, ptr align 1 %285) #18
  %287 = icmp eq i8 %286, 1
  br i1 %287, label %288, label %.critedge25

288:                                              ; preds = %283
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr619 = getelementptr inbounds i8, ptr %.3, i64 104
  %289 = load ptr, ptr %sunkaddr619, align 8
  %sunkaddr620 = getelementptr inbounds i8, ptr %.3, i64 112
  %290 = load ptr, ptr %sunkaddr620, align 8
  %291 = tail call i8 %2(ptr align 1 %3, ptr align 1 %289, ptr align 1 %290) #18
  %292 = icmp eq i8 %291, 1
  br i1 %292, label %72, label %.critedge25

293:                                              ; preds = %sort.quad_reversal.exit
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr621 = getelementptr inbounds i8, ptr %.3, i64 72
  %294 = load ptr, ptr %sunkaddr621, align 8
  %sunkaddr622 = getelementptr inbounds i8, ptr %.3, i64 80
  %295 = load ptr, ptr %sunkaddr622, align 8
  %296 = tail call i8 %2(ptr align 1 %3, ptr align 1 %294, ptr align 1 %295) #18
  %.not316 = icmp eq i8 %296, 1
  br i1 %.not316, label %.critedge37, label %297

297:                                              ; preds = %293
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr623 = getelementptr inbounds i8, ptr %.3, i64 88
  %298 = load ptr, ptr %sunkaddr623, align 8
  %sunkaddr624 = getelementptr inbounds i8, ptr %.3, i64 96
  %299 = load ptr, ptr %sunkaddr624, align 8
  %300 = tail call i8 %2(ptr align 1 %3, ptr align 1 %298, ptr align 1 %299) #18
  %.not317 = icmp eq i8 %300, 1
  br i1 %.not317, label %.critedge37, label %301

301:                                              ; preds = %297
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr625 = getelementptr inbounds i8, ptr %.3, i64 104
  %302 = load ptr, ptr %sunkaddr625, align 8
  %sunkaddr626 = getelementptr inbounds i8, ptr %.3, i64 112
  %303 = load ptr, ptr %sunkaddr626, align 8
  %304 = tail call i8 %2(ptr align 1 %3, ptr align 1 %302, ptr align 1 %303) #18
  %.not318 = icmp eq i8 %304, 1
  br i1 %.not318, label %.critedge37, label %72

305:                                              ; preds = %sort.quad_reversal.exit
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr627 = getelementptr inbounds i8, ptr %.3, i64 72
  %306 = load ptr, ptr %sunkaddr627, align 8
  %sunkaddr628 = getelementptr inbounds i8, ptr %.3, i64 80
  %307 = load ptr, ptr %sunkaddr628, align 8
  %308 = tail call i8 %2(ptr align 1 %3, ptr align 1 %306, ptr align 1 %307) #18
  %309 = icmp eq i8 %308, 1
  br i1 %309, label %310, label %.critedge37

310:                                              ; preds = %305
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr629 = getelementptr inbounds i8, ptr %.3, i64 88
  %311 = load ptr, ptr %sunkaddr629, align 8
  %sunkaddr630 = getelementptr inbounds i8, ptr %.3, i64 96
  %312 = load ptr, ptr %sunkaddr630, align 8
  %313 = tail call i8 %2(ptr align 1 %3, ptr align 1 %311, ptr align 1 %312) #18
  %314 = icmp eq i8 %313, 1
  br i1 %314, label %315, label %.critedge37

315:                                              ; preds = %310
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr631 = getelementptr inbounds i8, ptr %.3, i64 104
  %316 = load ptr, ptr %sunkaddr631, align 8
  %sunkaddr632 = getelementptr inbounds i8, ptr %.3, i64 112
  %317 = load ptr, ptr %sunkaddr632, align 8
  %318 = tail call i8 %2(ptr align 1 %3, ptr align 1 %316, ptr align 1 %317) #18
  %319 = icmp eq i8 %318, 1
  br i1 %319, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %315, %310, %305, %301, %297, %293, %sort.quad_reversal.exit
  %320 = icmp ne i8 %199, 1
  %321 = icmp ne i8 %192, 1
  %322 = icmp ne i8 %185, 1
  %323 = icmp ne i8 %178, 1
  %324 = getelementptr inbounds i8, ptr %.3, i64 120
  %.42 = select i1 %323, i64 0, i64 8
  %.43 = select i1 %323, i64 8, i64 0
  %sunkaddr633 = getelementptr inbounds i8, ptr %.3, i64 %.43
  %sunkaddr634 = getelementptr inbounds i8, ptr %sunkaddr633, i64 64
  %325 = load i64, ptr %sunkaddr634, align 8
  %sunkaddr635 = getelementptr inbounds i8, ptr %.3, i64 %.42
  %sunkaddr636 = getelementptr inbounds i8, ptr %sunkaddr635, i64 64
  %326 = load i64, ptr %sunkaddr636, align 8
  %sunkaddr637 = getelementptr inbounds i8, ptr %.3, i64 64
  store i64 %326, ptr %sunkaddr637, align 8
  %sunkaddr638 = getelementptr inbounds i8, ptr %.3, i64 72
  store i64 %325, ptr %sunkaddr638, align 8
  %.44 = select i1 %322, i64 0, i64 8
  %.45 = select i1 %322, i64 8, i64 0
  %sunkaddr639 = getelementptr inbounds i8, ptr %.3, i64 %.45
  %sunkaddr640 = getelementptr inbounds i8, ptr %sunkaddr639, i64 80
  %327 = load i64, ptr %sunkaddr640, align 8
  %sunkaddr641 = getelementptr inbounds i8, ptr %.3, i64 %.44
  %sunkaddr642 = getelementptr inbounds i8, ptr %sunkaddr641, i64 80
  %328 = load i64, ptr %sunkaddr642, align 8
  %sunkaddr643 = getelementptr inbounds i8, ptr %.3, i64 80
  store i64 %328, ptr %sunkaddr643, align 8
  %sunkaddr644 = getelementptr inbounds i8, ptr %.3, i64 88
  store i64 %327, ptr %sunkaddr644, align 8
  %.46 = select i1 %321, i64 0, i64 8
  %.47 = select i1 %321, i64 8, i64 0
  %sunkaddr645 = getelementptr inbounds i8, ptr %.3, i64 %.47
  %sunkaddr646 = getelementptr inbounds i8, ptr %sunkaddr645, i64 96
  %329 = load i64, ptr %sunkaddr646, align 8
  %sunkaddr647 = getelementptr inbounds i8, ptr %.3, i64 %.46
  %sunkaddr648 = getelementptr inbounds i8, ptr %sunkaddr647, i64 96
  %330 = load i64, ptr %sunkaddr648, align 8
  %sunkaddr649 = getelementptr inbounds i8, ptr %.3, i64 96
  store i64 %330, ptr %sunkaddr649, align 8
  %sunkaddr650 = getelementptr inbounds i8, ptr %.3, i64 104
  store i64 %329, ptr %sunkaddr650, align 8
  %.48 = select i1 %320, i64 0, i64 8
  %.49 = select i1 %320, i64 8, i64 0
  %sunkaddr651 = getelementptr inbounds i8, ptr %.3, i64 %.49
  %sunkaddr652 = getelementptr inbounds i8, ptr %sunkaddr651, i64 112
  %331 = load i64, ptr %sunkaddr652, align 8
  %sunkaddr653 = getelementptr inbounds i8, ptr %.3, i64 %.48
  %sunkaddr654 = getelementptr inbounds i8, ptr %sunkaddr653, i64 112
  %332 = load i64, ptr %sunkaddr654, align 8
  %sunkaddr655 = getelementptr inbounds i8, ptr %.3, i64 112
  store i64 %332, ptr %sunkaddr655, align 8
  store i64 %331, ptr %324, align 8
  tail call void %4(ptr align 1 %3, i64 1) #18
  %333 = load ptr, ptr %sunkaddr638, align 8
  %334 = load ptr, ptr %sunkaddr643, align 8
  %335 = tail call i8 %2(ptr align 1 %3, ptr align 1 %333, ptr align 1 %334) #18
  %336 = icmp eq i8 %335, 1
  br i1 %336, label %.critedge51, label %339

337:                                              ; preds = %.critedge51, %344
  %338 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %43

339:                                              ; preds = %.critedge37
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr656 = getelementptr inbounds i8, ptr %.3, i64 88
  %340 = load ptr, ptr %sunkaddr656, align 8
  %sunkaddr657 = getelementptr inbounds i8, ptr %.3, i64 96
  %341 = load ptr, ptr %sunkaddr657, align 8
  %342 = tail call i8 %2(ptr align 1 %3, ptr align 1 %340, ptr align 1 %341) #18
  %343 = icmp eq i8 %342, 1
  br i1 %343, label %.critedge51, label %344

344:                                              ; preds = %339
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr658 = getelementptr inbounds i8, ptr %.3, i64 104
  %345 = load ptr, ptr %sunkaddr658, align 8
  %sunkaddr659 = getelementptr inbounds i8, ptr %.3, i64 112
  %346 = load ptr, ptr %sunkaddr659, align 8
  %347 = tail call i8 %2(ptr align 1 %3, ptr align 1 %345, ptr align 1 %346) #18
  %348 = icmp eq i8 %347, 1
  br i1 %348, label %.critedge51, label %337

.critedge51:                                      ; preds = %344, %339, %.critedge37
  tail call void %4(ptr align 1 %3, i64 16) #18
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %172, ptr nonnull align 1 %6, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %337

349:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %412
  %350 = getelementptr inbounds i8, ptr %.3, i64 56
  %351 = ptrtoint ptr %350 to i64
  %352 = ptrtoint ptr %.3282.ph264 to i64
  %353 = sub nuw i64 %351, %352
  %354 = lshr i64 %353, 4
  %355 = shl nuw nsw i64 %354, 3
  %356 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %355
  %357 = sub nsw i64 0, %355
  %358 = getelementptr inbounds i8, ptr %350, i64 %357
  %359 = and i64 %353, 16
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %395, label %._crit_edge.i331

._crit_edge.i331:                                 ; preds = %395, %349
  %.027.i332 = phi ptr [ %399, %395 ], [ %358, %349 ]
  %.025.i333 = phi ptr [ %398, %395 ], [ %356, %349 ]
  %.0.i334 = phi i64 [ %400, %395 ], [ %354, %349 ]
  %361 = load i64, ptr %.3282.ph264, align 8
  %362 = load i64, ptr %350, align 8
  store i64 %362, ptr %.3282.ph264, align 8
  store i64 %361, ptr %350, align 8
  %363 = load i64, ptr %.025.i333, align 8
  %364 = load i64, ptr %.027.i332, align 8
  store i64 %364, ptr %.025.i333, align 8
  store i64 %363, ptr %.027.i332, align 8
  %365 = icmp ult i64 %.0.i334, 2
  br i1 %365, label %.loopexit, label %.lr.ph106.preheader

.lr.ph106.preheader:                              ; preds = %._crit_edge.i331
  %366 = lshr i64 %.0.i334, 1
  %min.iters.check144 = icmp ult i64 %.0.i334, 80
  br i1 %min.iters.check144, label %.lr.ph106.preheader260, label %vector.scevcheck103

vector.scevcheck103:                              ; preds = %.lr.ph106.preheader
  %367 = add nsw i64 %366, -1
  %uglygep104 = getelementptr i8, ptr %.3, i64 48
  %mul.result106.neg = mul i64 %367, -8
  %368 = getelementptr i8, ptr %uglygep104, i64 %mul.result106.neg
  %369 = icmp ugt ptr %368, %uglygep104
  %uglygep108 = getelementptr i8, ptr %.025.i333, i64 -8
  %mul.result110.neg = mul i64 %367, -8
  %mul.overflow111 = icmp ugt i64 %367, %const
  %370 = getelementptr i8, ptr %uglygep108, i64 %mul.result110.neg
  %371 = icmp ugt ptr %370, %uglygep108
  %372 = or i1 %371, %mul.overflow111
  %373 = or i1 %369, %372
  br i1 %373, label %.lr.ph106.preheader260, label %vector.memcheck112

vector.memcheck112:                               ; preds = %vector.scevcheck103
  %uglygep113 = getelementptr i8, ptr %.3282.ph264, i64 8
  %374 = shl i64 %366, 3
  %375 = add i64 %374, 8
  %uglygep114 = getelementptr i8, ptr %.3282.ph264, i64 %375
  %uglygep115 = getelementptr i8, ptr %.027.i332, i64 8
  %uglygep116 = getelementptr i8, ptr %.027.i332, i64 %375
  %376 = sub i64 56, %374
  %uglygep117 = getelementptr i8, ptr %.3, i64 %376
  %377 = mul i64 %366, -8
  %uglygep118 = getelementptr i8, ptr %.025.i333, i64 %377
  %bound0119 = icmp ult ptr %uglygep113, %uglygep116
  %bound1120 = icmp ult ptr %uglygep115, %uglygep114
  %found.conflict121 = and i1 %bound0119, %bound1120
  %bound0122 = icmp ult ptr %uglygep113, %350
  %bound1123 = icmp ult ptr %uglygep117, %uglygep114
  %found.conflict124 = and i1 %bound0122, %bound1123
  %conflict.rdx125 = or i1 %found.conflict121, %found.conflict124
  %bound0126 = icmp ult ptr %uglygep113, %.025.i333
  %bound1127 = icmp ult ptr %uglygep118, %uglygep114
  %found.conflict128 = and i1 %bound0126, %bound1127
  %conflict.rdx129 = or i1 %conflict.rdx125, %found.conflict128
  %bound0130 = icmp ult ptr %uglygep115, %350
  %bound1131 = icmp ult ptr %uglygep117, %uglygep116
  %found.conflict132 = and i1 %bound0130, %bound1131
  %conflict.rdx133 = or i1 %conflict.rdx129, %found.conflict132
  %bound0134 = icmp ult ptr %uglygep115, %.025.i333
  %bound1135 = icmp ult ptr %uglygep118, %uglygep116
  %found.conflict136 = and i1 %bound0134, %bound1135
  %conflict.rdx137 = or i1 %conflict.rdx133, %found.conflict136
  %bound0138 = icmp ult ptr %uglygep117, %.025.i333
  %bound1139 = icmp ult ptr %uglygep118, %350
  %found.conflict140 = and i1 %bound0138, %bound1139
  %conflict.rdx141 = or i1 %conflict.rdx137, %found.conflict140
  br i1 %conflict.rdx141, label %.lr.ph106.preheader260, label %vector.ph145

vector.ph145:                                     ; preds = %vector.memcheck112
  %const569 = bitcast i64 9223372036854775806 to i64
  %n.vec147 = and i64 %366, %const569
  %ind.end148 = and i64 %366, 1
  %378 = shl i64 %n.vec147, 3
  %ind.end150 = getelementptr i8, ptr %.3282.ph264, i64 %378
  %379 = mul i64 %n.vec147, -8
  %ind.end152 = getelementptr i8, ptr %.025.i333, i64 %379
  %380 = shl i64 %n.vec147, 3
  %ind.end154 = getelementptr i8, ptr %.027.i332, i64 %380
  %381 = mul i64 %n.vec147, -8
  %ind.end156 = getelementptr i8, ptr %350, i64 %381
  %382 = lshr i64 %.0.i334, 2
  %383 = mul nsw i64 %382, -2
  br label %vector.body159

vector.body159:                                   ; preds = %vector.body159, %vector.ph145
  %lsr.iv534 = phi i64 [ %lsr.iv.next535, %vector.body159 ], [ 8, %vector.ph145 ]
  %lsr.iv531 = phi i64 [ %lsr.iv.next532, %vector.body159 ], [ 0, %vector.ph145 ]
  %uglygep536 = getelementptr i8, ptr %.027.i332, i64 %lsr.iv534
  %uglygep539 = getelementptr i8, ptr %.3282.ph264, i64 %lsr.iv534
  %wide.load165 = load <2 x i64>, ptr %uglygep539, align 8, !alias.scope !472, !noalias !475
  %sunkaddr660 = mul i64 %lsr.iv531, 8
  %sunkaddr661 = getelementptr i8, ptr %.3, i64 %sunkaddr660
  %sunkaddr662 = getelementptr i8, ptr %sunkaddr661, i64 40
  %wide.load166 = load <2 x i64>, ptr %sunkaddr662, align 8, !alias.scope !479, !noalias !480
  %reverse167 = shufflevector <2 x i64> %wide.load166, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse167, ptr %uglygep539, align 8, !alias.scope !472, !noalias !475
  %reverse168 = shufflevector <2 x i64> %wide.load165, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse168, ptr %sunkaddr662, align 8, !alias.scope !479, !noalias !480
  %sunkaddr663 = mul i64 %lsr.iv531, 8
  %sunkaddr664 = getelementptr i8, ptr %.025.i333, i64 %sunkaddr663
  %sunkaddr665 = getelementptr i8, ptr %sunkaddr664, i64 -16
  %wide.load169 = load <2 x i64>, ptr %sunkaddr665, align 8, !alias.scope !480
  %reverse170 = shufflevector <2 x i64> %wide.load169, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load171 = load <2 x i64>, ptr %uglygep536, align 8, !alias.scope !481, !noalias !482
  %reverse172 = shufflevector <2 x i64> %wide.load171, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse172, ptr %sunkaddr665, align 8, !alias.scope !480
  store <2 x i64> %reverse170, ptr %uglygep536, align 8, !alias.scope !481, !noalias !482
  %lsr.iv.next532 = add nsw i64 %lsr.iv531, -2
  %lsr.iv.next535 = add i64 %lsr.iv534, 16
  %384 = icmp eq i64 %383, %lsr.iv.next532
  br i1 %384, label %middle.block142, label %vector.body159, !llvm.loop !483

middle.block142:                                  ; preds = %vector.body159
  %cmp.n158 = icmp eq i64 %366, %n.vec147
  br i1 %cmp.n158, label %.loopexit, label %.lr.ph106.preheader260

.lr.ph106.preheader260:                           ; preds = %middle.block142, %vector.memcheck112, %vector.scevcheck103, %.lr.ph106.preheader
  %.1.i339105.ph = phi i64 [ %366, %vector.memcheck112 ], [ %366, %vector.scevcheck103 ], [ %366, %.lr.ph106.preheader ], [ %ind.end148, %middle.block142 ]
  %.024.i338104.ph = phi ptr [ %.3282.ph264, %vector.memcheck112 ], [ %.3282.ph264, %vector.scevcheck103 ], [ %.3282.ph264, %.lr.ph106.preheader ], [ %ind.end150, %middle.block142 ]
  %.126.i337103.ph = phi ptr [ %.025.i333, %vector.memcheck112 ], [ %.025.i333, %vector.scevcheck103 ], [ %.025.i333, %.lr.ph106.preheader ], [ %ind.end152, %middle.block142 ]
  %.128.i336102.ph = phi ptr [ %.027.i332, %vector.memcheck112 ], [ %.027.i332, %vector.scevcheck103 ], [ %.027.i332, %.lr.ph106.preheader ], [ %ind.end154, %middle.block142 ]
  %.029.i335101.ph = phi ptr [ %350, %vector.memcheck112 ], [ %350, %vector.scevcheck103 ], [ %350, %.lr.ph106.preheader ], [ %ind.end156, %middle.block142 ]
  %xtraiter364 = and i64 %.1.i339105.ph, 1
  %lcmp.mod365.not = icmp eq i64 %xtraiter364, 0
  br i1 %lcmp.mod365.not, label %.lr.ph106.prol.loopexit, label %.lr.ph106.prol

.lr.ph106.prol:                                   ; preds = %.lr.ph106.preheader260
  %385 = getelementptr inbounds i8, ptr %.128.i336102.ph, i64 8
  %386 = getelementptr inbounds i8, ptr %.126.i337103.ph, i64 -8
  %387 = getelementptr inbounds i8, ptr %.029.i335101.ph, i64 -8
  %388 = getelementptr inbounds i8, ptr %.024.i338104.ph, i64 8
  %389 = add nsw i64 %.1.i339105.ph, -1
  %390 = load i64, ptr %388, align 8
  %391 = load i64, ptr %387, align 8
  store i64 %391, ptr %388, align 8
  store i64 %390, ptr %387, align 8
  %392 = load i64, ptr %386, align 8
  %393 = load i64, ptr %385, align 8
  store i64 %393, ptr %386, align 8
  store i64 %392, ptr %385, align 8
  br label %.lr.ph106.prol.loopexit

.lr.ph106.prol.loopexit:                          ; preds = %.lr.ph106.prol, %.lr.ph106.preheader260
  %.1.i339105.unr = phi i64 [ %.1.i339105.ph, %.lr.ph106.preheader260 ], [ %389, %.lr.ph106.prol ]
  %.024.i338104.unr = phi ptr [ %.024.i338104.ph, %.lr.ph106.preheader260 ], [ %388, %.lr.ph106.prol ]
  %.126.i337103.unr = phi ptr [ %.126.i337103.ph, %.lr.ph106.preheader260 ], [ %386, %.lr.ph106.prol ]
  %.128.i336102.unr = phi ptr [ %.128.i336102.ph, %.lr.ph106.preheader260 ], [ %385, %.lr.ph106.prol ]
  %.029.i335101.unr = phi ptr [ %.029.i335101.ph, %.lr.ph106.preheader260 ], [ %387, %.lr.ph106.prol ]
  %394 = icmp eq i64 %.1.i339105.ph, 1
  br i1 %394, label %.loopexit, label %.lr.ph106.preheader468

.lr.ph106.preheader468:                           ; preds = %.lr.ph106.prol.loopexit
  br label %.lr.ph106

395:                                              ; preds = %349
  %396 = load i64, ptr %356, align 8
  %397 = load i64, ptr %358, align 8
  store i64 %397, ptr %356, align 8
  %398 = getelementptr inbounds i8, ptr %356, i64 -8
  store i64 %396, ptr %358, align 8
  %399 = getelementptr inbounds i8, ptr %358, i64 8
  %400 = add nsw i64 %354, -1
  br label %._crit_edge.i331

.lr.ph106:                                        ; preds = %.lr.ph106, %.lr.ph106.preheader468
  %lsr.iv518 = phi i64 [ -1, %.lr.ph106.preheader468 ], [ %lsr.iv.next519, %.lr.ph106 ]
  %lsr.iv512 = phi i64 [ 0, %.lr.ph106.preheader468 ], [ %lsr.iv.next513, %.lr.ph106 ]
  %401 = shl i64 %lsr.iv518, 3
  %uglygep522 = getelementptr i8, ptr %.126.i337103.unr, i64 %401
  %uglygep529 = getelementptr i8, ptr %.029.i335101.unr, i64 %401
  %sunkaddr666 = mul i64 %lsr.iv512, 8
  %sunkaddr667 = getelementptr i8, ptr %.024.i338104.unr, i64 %sunkaddr666
  %sunkaddr668 = getelementptr i8, ptr %sunkaddr667, i64 8
  %402 = load i64, ptr %sunkaddr668, align 8
  %403 = load i64, ptr %uglygep529, align 8
  store i64 %403, ptr %sunkaddr668, align 8
  store i64 %402, ptr %uglygep529, align 8
  %404 = load i64, ptr %uglygep522, align 8
  %sunkaddr669 = mul i64 %lsr.iv512, 8
  %sunkaddr670 = getelementptr i8, ptr %.128.i336102.unr, i64 %sunkaddr669
  %sunkaddr671 = getelementptr i8, ptr %sunkaddr670, i64 8
  %405 = load i64, ptr %sunkaddr671, align 8
  store i64 %405, ptr %uglygep522, align 8
  store i64 %404, ptr %sunkaddr671, align 8
  %406 = shl i64 %lsr.iv518, 3
  %uglygep520 = getelementptr i8, ptr %.126.i337103.unr, i64 %406
  %uglygep521 = getelementptr i8, ptr %uglygep520, i64 -8
  %uglygep527 = getelementptr i8, ptr %.029.i335101.unr, i64 %406
  %uglygep528 = getelementptr i8, ptr %uglygep527, i64 -8
  %sunkaddr672 = mul i64 %lsr.iv512, 8
  %sunkaddr673 = getelementptr i8, ptr %.024.i338104.unr, i64 %sunkaddr672
  %sunkaddr674 = getelementptr i8, ptr %sunkaddr673, i64 16
  %407 = load i64, ptr %sunkaddr674, align 8
  %408 = load i64, ptr %uglygep528, align 8
  store i64 %408, ptr %sunkaddr674, align 8
  store i64 %407, ptr %uglygep528, align 8
  %409 = load i64, ptr %uglygep521, align 8
  %sunkaddr675 = mul i64 %lsr.iv512, 8
  %sunkaddr676 = getelementptr i8, ptr %.128.i336102.unr, i64 %sunkaddr675
  %sunkaddr677 = getelementptr i8, ptr %sunkaddr676, i64 16
  %410 = load i64, ptr %sunkaddr677, align 8
  store i64 %410, ptr %uglygep521, align 8
  store i64 %409, ptr %sunkaddr677, align 8
  %lsr.iv.next513 = add i64 %lsr.iv512, 2
  %lsr.iv.next519 = add i64 %lsr.iv518, -2
  %411 = icmp eq i64 %.1.i339105.unr, %lsr.iv.next513
  br i1 %411, label %.loopexit, label %.lr.ph106, !llvm.loop !484

412:                                              ; preds = %205
  %413 = getelementptr inbounds i8, ptr %.3, i64 104
  %414 = getelementptr inbounds i8, ptr %.3, i64 112
  tail call void %4(ptr align 1 %3, i64 1) #18
  %415 = load ptr, ptr %413, align 8
  %416 = load ptr, ptr %414, align 8
  %417 = tail call i8 %2(ptr align 1 %3, ptr align 1 %415, ptr align 1 %416) #18
  %.not314 = icmp eq i8 %417, 1
  br i1 %.not314, label %.critedge55.thread, label %349

.critedge55:                                      ; preds = %205
  %418 = icmp ugt i64 %206, 5
  br i1 %418, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %412
  %419 = getelementptr inbounds i8, ptr %.3, i64 96
  %420 = getelementptr inbounds i8, ptr %.3, i64 104
  tail call void %4(ptr align 1 %3, i64 1) #18
  %421 = load ptr, ptr %419, align 8
  %422 = load ptr, ptr %420, align 8
  %423 = tail call i8 %2(ptr align 1 %3, ptr align 1 %421, ptr align 1 %422) #18
  %.not313 = icmp eq i8 %423, 1
  br i1 %.not313, label %.critedge57.thread, label %349

.critedge57:                                      ; preds = %.critedge55
  %424 = icmp eq i64 %206, 5
  br i1 %424, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %425 = getelementptr inbounds i8, ptr %.3, i64 88
  %426 = getelementptr inbounds i8, ptr %.3, i64 96
  tail call void %4(ptr align 1 %3, i64 1) #18
  %427 = load ptr, ptr %425, align 8
  %428 = load ptr, ptr %426, align 8
  %429 = tail call i8 %2(ptr align 1 %3, ptr align 1 %427, ptr align 1 %428) #18
  %.not312 = icmp eq i8 %429, 1
  br i1 %.not312, label %.critedge59.thread, label %349

.critedge59:                                      ; preds = %.critedge57
  %430 = icmp ugt i64 %206, 3
  br i1 %430, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %431 = getelementptr inbounds i8, ptr %.3, i64 80
  %432 = getelementptr inbounds i8, ptr %.3, i64 88
  tail call void %4(ptr align 1 %3, i64 1) #18
  %433 = load ptr, ptr %431, align 8
  %434 = load ptr, ptr %432, align 8
  %435 = tail call i8 %2(ptr align 1 %3, ptr align 1 %433, ptr align 1 %434) #18
  %.not311 = icmp eq i8 %435, 1
  br i1 %.not311, label %.critedge61.thread, label %349

.critedge61:                                      ; preds = %.critedge59
  %436 = icmp eq i64 %206, 3
  br i1 %436, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %437 = getelementptr inbounds i8, ptr %.3, i64 72
  %438 = getelementptr inbounds i8, ptr %.3, i64 80
  tail call void %4(ptr align 1 %3, i64 1) #18
  %439 = load ptr, ptr %437, align 8
  %440 = load ptr, ptr %438, align 8
  %441 = tail call i8 %2(ptr align 1 %3, ptr align 1 %439, ptr align 1 %440) #18
  %.not310 = icmp eq i8 %441, 1
  br i1 %.not310, label %.critedge63.thread, label %349

.critedge63:                                      ; preds = %.critedge61
  %442 = icmp ugt i64 %206, 1
  br i1 %442, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %443 = getelementptr inbounds i8, ptr %.3, i64 72
  tail call void %4(ptr align 1 %3, i64 1) #18
  %sunkaddr678 = getelementptr inbounds i8, ptr %.3, i64 64
  %444 = load ptr, ptr %sunkaddr678, align 8
  %445 = load ptr, ptr %443, align 8
  %446 = tail call i8 %2(ptr align 1 %3, ptr align 1 %444, ptr align 1 %445) #18
  %.not309 = icmp eq i8 %446, 1
  br i1 %.not309, label %.critedge65.thread, label %349

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %206, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %447 = getelementptr inbounds i8, ptr %.3, i64 56
  tail call void %4(ptr align 1 %3, i64 1) #18
  %448 = load ptr, ptr %447, align 8
  %sunkaddr679 = getelementptr inbounds i8, ptr %.3, i64 64
  %449 = load ptr, ptr %sunkaddr679, align 8
  %450 = tail call i8 %2(ptr align 1 %3, ptr align 1 %448, ptr align 1 %449) #18
  %.not308 = icmp eq i8 %450, 1
  br i1 %.not308, label %.critedge67, label %349

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %451 = shl nuw nsw i64 %206, 3
  %452 = getelementptr inbounds i8, ptr %172, i64 %451
  %453 = getelementptr inbounds i8, ptr %452, i64 -8
  %454 = ptrtoint ptr %453 to i64
  %455 = ptrtoint ptr %.3282.ph264 to i64
  %456 = sub nuw i64 %454, %455
  %457 = lshr i64 %456, 4
  %458 = shl nuw nsw i64 %457, 3
  %459 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %458
  %460 = sub nsw i64 0, %458
  %461 = getelementptr inbounds i8, ptr %453, i64 %460
  %462 = and i64 %456, 16
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %502, label %._crit_edge.i341

._crit_edge.i341:                                 ; preds = %502, %.critedge67
  %.027.i342 = phi ptr [ %506, %502 ], [ %461, %.critedge67 ]
  %.025.i343 = phi ptr [ %505, %502 ], [ %459, %.critedge67 ]
  %.0.i344 = phi i64 [ %507, %502 ], [ %457, %.critedge67 ]
  %464 = load i64, ptr %.3282.ph264, align 8
  %465 = load i64, ptr %453, align 8
  store i64 %465, ptr %.3282.ph264, align 8
  store i64 %464, ptr %453, align 8
  %466 = load i64, ptr %.025.i343, align 8
  %467 = load i64, ptr %.027.i342, align 8
  store i64 %467, ptr %.025.i343, align 8
  store i64 %466, ptr %.027.i342, align 8
  %468 = icmp ult i64 %.0.i344, 2
  br i1 %468, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader

.lr.ph112.preheader:                              ; preds = %._crit_edge.i341
  %469 = lshr i64 %.0.i344, 1
  %min.iters.check215 = icmp ult i64 %.0.i344, 84
  br i1 %min.iters.check215, label %.lr.ph112.preheader259, label %vector.scevcheck174

vector.scevcheck174:                              ; preds = %.lr.ph112.preheader
  %470 = add nsw i64 %469, -1
  %471 = add nuw nsw i64 %451, 48
  %uglygep175 = getelementptr i8, ptr %.3, i64 %471
  %mul.result177.neg = mul i64 %470, -8
  %472 = getelementptr i8, ptr %uglygep175, i64 %mul.result177.neg
  %473 = icmp ugt ptr %472, %uglygep175
  %uglygep179 = getelementptr i8, ptr %.025.i343, i64 -8
  %mul.result181.neg = mul i64 %470, -8
  %mul.overflow182 = icmp ugt i64 %470, %const
  %474 = getelementptr i8, ptr %uglygep179, i64 %mul.result181.neg
  %475 = icmp ugt ptr %474, %uglygep179
  %476 = or i1 %475, %mul.overflow182
  %477 = or i1 %473, %476
  br i1 %477, label %.lr.ph112.preheader259, label %vector.memcheck183

vector.memcheck183:                               ; preds = %vector.scevcheck174
  %uglygep184 = getelementptr i8, ptr %.3282.ph264, i64 8
  %478 = shl i64 %469, 3
  %479 = add i64 %478, 8
  %uglygep185 = getelementptr i8, ptr %.3282.ph264, i64 %479
  %uglygep186 = getelementptr i8, ptr %.027.i342, i64 8
  %uglygep187 = getelementptr i8, ptr %.027.i342, i64 %479
  %480 = add nuw nsw i64 %451, 56
  %481 = sub i64 %480, %478
  %uglygep188 = getelementptr i8, ptr %.3, i64 %481
  %482 = mul i64 %469, -8
  %uglygep189 = getelementptr i8, ptr %.025.i343, i64 %482
  %bound0190 = icmp ult ptr %uglygep184, %uglygep187
  %bound1191 = icmp ult ptr %uglygep186, %uglygep185
  %found.conflict192 = and i1 %bound0190, %bound1191
  %bound0193 = icmp ult ptr %uglygep184, %453
  %bound1194 = icmp ult ptr %uglygep188, %uglygep185
  %found.conflict195 = and i1 %bound0193, %bound1194
  %conflict.rdx196 = or i1 %found.conflict192, %found.conflict195
  %bound0197 = icmp ult ptr %uglygep184, %.025.i343
  %bound1198 = icmp ult ptr %uglygep189, %uglygep185
  %found.conflict199 = and i1 %bound0197, %bound1198
  %conflict.rdx200 = or i1 %conflict.rdx196, %found.conflict199
  %bound0201 = icmp ult ptr %uglygep186, %453
  %bound1202 = icmp ult ptr %uglygep188, %uglygep187
  %found.conflict203 = and i1 %bound0201, %bound1202
  %conflict.rdx204 = or i1 %conflict.rdx200, %found.conflict203
  %bound0205 = icmp ult ptr %uglygep186, %.025.i343
  %bound1206 = icmp ult ptr %uglygep189, %uglygep187
  %found.conflict207 = and i1 %bound0205, %bound1206
  %conflict.rdx208 = or i1 %conflict.rdx204, %found.conflict207
  %bound0209 = icmp ult ptr %uglygep188, %.025.i343
  %bound1210 = icmp ult ptr %uglygep189, %453
  %found.conflict211 = and i1 %bound0209, %bound1210
  %conflict.rdx212 = or i1 %conflict.rdx208, %found.conflict211
  br i1 %conflict.rdx212, label %.lr.ph112.preheader259, label %vector.ph216

vector.ph216:                                     ; preds = %vector.memcheck183
  %const570 = bitcast i64 9223372036854775806 to i64
  %n.vec218 = and i64 %469, %const570
  %ind.end219 = and i64 %469, 1
  %483 = shl i64 %n.vec218, 3
  %ind.end221 = getelementptr i8, ptr %.3282.ph264, i64 %483
  %484 = mul i64 %n.vec218, -8
  %ind.end223 = getelementptr i8, ptr %.025.i343, i64 %484
  %485 = shl i64 %n.vec218, 3
  %ind.end225 = getelementptr i8, ptr %.027.i342, i64 %485
  %486 = mul i64 %n.vec218, -8
  %ind.end227 = getelementptr i8, ptr %453, i64 %486
  %487 = add nuw nsw i64 %451, 40
  %uglygep502 = getelementptr i8, ptr %.3, i64 %487
  %488 = lshr i64 %.0.i344, 2
  %489 = mul nsw i64 %488, -2
  br label %vector.body230

vector.body230:                                   ; preds = %vector.body230, %vector.ph216
  %lsr.iv506 = phi i64 [ %lsr.iv.next507, %vector.body230 ], [ 8, %vector.ph216 ]
  %lsr.iv503 = phi i64 [ %lsr.iv.next504, %vector.body230 ], [ 0, %vector.ph216 ]
  %uglygep508 = getelementptr i8, ptr %.027.i342, i64 %lsr.iv506
  %uglygep511 = getelementptr i8, ptr %.3282.ph264, i64 %lsr.iv506
  %wide.load236 = load <2 x i64>, ptr %uglygep511, align 8, !alias.scope !485, !noalias !488
  %490 = shl i64 %lsr.iv503, 3
  %uglygep505 = getelementptr i8, ptr %uglygep502, i64 %490
  %wide.load237 = load <2 x i64>, ptr %uglygep505, align 8, !alias.scope !492, !noalias !493
  %reverse238 = shufflevector <2 x i64> %wide.load237, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse238, ptr %uglygep511, align 8, !alias.scope !485, !noalias !488
  %reverse239 = shufflevector <2 x i64> %wide.load236, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse239, ptr %uglygep505, align 8, !alias.scope !492, !noalias !493
  %sunkaddr680 = mul i64 %lsr.iv503, 8
  %sunkaddr681 = getelementptr i8, ptr %.025.i343, i64 %sunkaddr680
  %sunkaddr682 = getelementptr i8, ptr %sunkaddr681, i64 -16
  %wide.load240 = load <2 x i64>, ptr %sunkaddr682, align 8, !alias.scope !493
  %reverse241 = shufflevector <2 x i64> %wide.load240, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load242 = load <2 x i64>, ptr %uglygep508, align 8, !alias.scope !494, !noalias !495
  %reverse243 = shufflevector <2 x i64> %wide.load242, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse243, ptr %sunkaddr682, align 8, !alias.scope !493
  store <2 x i64> %reverse241, ptr %uglygep508, align 8, !alias.scope !494, !noalias !495
  %lsr.iv.next504 = add nsw i64 %lsr.iv503, -2
  %lsr.iv.next507 = add i64 %lsr.iv506, 16
  %491 = icmp eq i64 %489, %lsr.iv.next504
  br i1 %491, label %middle.block213, label %vector.body230, !llvm.loop !496

middle.block213:                                  ; preds = %vector.body230
  %cmp.n229 = icmp eq i64 %469, %n.vec218
  br i1 %cmp.n229, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader259

.lr.ph112.preheader259:                           ; preds = %middle.block213, %vector.memcheck183, %vector.scevcheck174, %.lr.ph112.preheader
  %.1.i349111.ph = phi i64 [ %469, %vector.memcheck183 ], [ %469, %vector.scevcheck174 ], [ %469, %.lr.ph112.preheader ], [ %ind.end219, %middle.block213 ]
  %.024.i348110.ph = phi ptr [ %.3282.ph264, %vector.memcheck183 ], [ %.3282.ph264, %vector.scevcheck174 ], [ %.3282.ph264, %.lr.ph112.preheader ], [ %ind.end221, %middle.block213 ]
  %.126.i347109.ph = phi ptr [ %.025.i343, %vector.memcheck183 ], [ %.025.i343, %vector.scevcheck174 ], [ %.025.i343, %.lr.ph112.preheader ], [ %ind.end223, %middle.block213 ]
  %.128.i346108.ph = phi ptr [ %.027.i342, %vector.memcheck183 ], [ %.027.i342, %vector.scevcheck174 ], [ %.027.i342, %.lr.ph112.preheader ], [ %ind.end225, %middle.block213 ]
  %.029.i345107.ph = phi ptr [ %453, %vector.memcheck183 ], [ %453, %vector.scevcheck174 ], [ %453, %.lr.ph112.preheader ], [ %ind.end227, %middle.block213 ]
  %xtraiter366 = and i64 %.1.i349111.ph, 1
  %lcmp.mod367.not = icmp eq i64 %xtraiter366, 0
  br i1 %lcmp.mod367.not, label %.lr.ph112.prol.loopexit, label %.lr.ph112.prol

.lr.ph112.prol:                                   ; preds = %.lr.ph112.preheader259
  %492 = getelementptr inbounds i8, ptr %.128.i346108.ph, i64 8
  %493 = getelementptr inbounds i8, ptr %.126.i347109.ph, i64 -8
  %494 = getelementptr inbounds i8, ptr %.029.i345107.ph, i64 -8
  %495 = getelementptr inbounds i8, ptr %.024.i348110.ph, i64 8
  %496 = add nsw i64 %.1.i349111.ph, -1
  %497 = load i64, ptr %495, align 8
  %498 = load i64, ptr %494, align 8
  store i64 %498, ptr %495, align 8
  store i64 %497, ptr %494, align 8
  %499 = load i64, ptr %493, align 8
  %500 = load i64, ptr %492, align 8
  store i64 %500, ptr %493, align 8
  store i64 %499, ptr %492, align 8
  br label %.lr.ph112.prol.loopexit

.lr.ph112.prol.loopexit:                          ; preds = %.lr.ph112.prol, %.lr.ph112.preheader259
  %.1.i349111.unr = phi i64 [ %.1.i349111.ph, %.lr.ph112.preheader259 ], [ %496, %.lr.ph112.prol ]
  %.024.i348110.unr = phi ptr [ %.024.i348110.ph, %.lr.ph112.preheader259 ], [ %495, %.lr.ph112.prol ]
  %.126.i347109.unr = phi ptr [ %.126.i347109.ph, %.lr.ph112.preheader259 ], [ %493, %.lr.ph112.prol ]
  %.128.i346108.unr = phi ptr [ %.128.i346108.ph, %.lr.ph112.preheader259 ], [ %492, %.lr.ph112.prol ]
  %.029.i345107.unr = phi ptr [ %.029.i345107.ph, %.lr.ph112.preheader259 ], [ %494, %.lr.ph112.prol ]
  %501 = icmp eq i64 %.1.i349111.ph, 1
  br i1 %501, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader467

.lr.ph112.preheader467:                           ; preds = %.lr.ph112.prol.loopexit
  br label %.lr.ph112

502:                                              ; preds = %.critedge67
  %503 = load i64, ptr %459, align 8
  %504 = load i64, ptr %461, align 8
  store i64 %504, ptr %459, align 8
  %505 = getelementptr inbounds i8, ptr %459, i64 -8
  store i64 %503, ptr %461, align 8
  %506 = getelementptr inbounds i8, ptr %461, i64 8
  %507 = add nsw i64 %457, -1
  br label %._crit_edge.i341

.lr.ph112:                                        ; preds = %.lr.ph112, %.lr.ph112.preheader467
  %lsr.iv490 = phi i64 [ -1, %.lr.ph112.preheader467 ], [ %lsr.iv.next491, %.lr.ph112 ]
  %lsr.iv484 = phi i64 [ 0, %.lr.ph112.preheader467 ], [ %lsr.iv.next485, %.lr.ph112 ]
  %508 = shl i64 %lsr.iv490, 3
  %uglygep494 = getelementptr i8, ptr %.126.i347109.unr, i64 %508
  %uglygep501 = getelementptr i8, ptr %.029.i345107.unr, i64 %508
  %sunkaddr683 = mul i64 %lsr.iv484, 8
  %sunkaddr684 = getelementptr i8, ptr %.024.i348110.unr, i64 %sunkaddr683
  %sunkaddr685 = getelementptr i8, ptr %sunkaddr684, i64 8
  %509 = load i64, ptr %sunkaddr685, align 8
  %510 = load i64, ptr %uglygep501, align 8
  store i64 %510, ptr %sunkaddr685, align 8
  store i64 %509, ptr %uglygep501, align 8
  %511 = load i64, ptr %uglygep494, align 8
  %sunkaddr686 = mul i64 %lsr.iv484, 8
  %sunkaddr687 = getelementptr i8, ptr %.128.i346108.unr, i64 %sunkaddr686
  %sunkaddr688 = getelementptr i8, ptr %sunkaddr687, i64 8
  %512 = load i64, ptr %sunkaddr688, align 8
  store i64 %512, ptr %uglygep494, align 8
  store i64 %511, ptr %sunkaddr688, align 8
  %513 = shl i64 %lsr.iv490, 3
  %uglygep492 = getelementptr i8, ptr %.126.i347109.unr, i64 %513
  %uglygep493 = getelementptr i8, ptr %uglygep492, i64 -8
  %uglygep499 = getelementptr i8, ptr %.029.i345107.unr, i64 %513
  %uglygep500 = getelementptr i8, ptr %uglygep499, i64 -8
  %sunkaddr689 = mul i64 %lsr.iv484, 8
  %sunkaddr690 = getelementptr i8, ptr %.024.i348110.unr, i64 %sunkaddr689
  %sunkaddr691 = getelementptr i8, ptr %sunkaddr690, i64 16
  %514 = load i64, ptr %sunkaddr691, align 8
  %515 = load i64, ptr %uglygep500, align 8
  store i64 %515, ptr %sunkaddr691, align 8
  store i64 %514, ptr %uglygep500, align 8
  %516 = load i64, ptr %uglygep493, align 8
  %sunkaddr692 = mul i64 %lsr.iv484, 8
  %sunkaddr693 = getelementptr i8, ptr %.128.i346108.unr, i64 %sunkaddr692
  %sunkaddr694 = getelementptr i8, ptr %sunkaddr693, i64 16
  %517 = load i64, ptr %sunkaddr694, align 8
  store i64 %517, ptr %uglygep493, align 8
  store i64 %516, ptr %sunkaddr694, align 8
  %lsr.iv.next485 = add i64 %lsr.iv484, 2
  %lsr.iv.next491 = add i64 %lsr.iv490, -2
  %518 = icmp eq i64 %.1.i349111.unr, %lsr.iv.next485
  br i1 %518, label %sort.quad_reversal.exit350, label %.lr.ph112, !llvm.loop !497

sort.quad_reversal.exit350:                       ; preds = %.lr.ph112, %.lr.ph112.prol.loopexit, %middle.block213, %._crit_edge.i341
  %519 = icmp eq ptr %.3282.ph264, %0
  br i1 %519, label %common.ret, label %520

common.ret:                                       ; preds = %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit350
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit350 ], [ true, %._crit_edge ], [ true, %.loopexit.i ]
  ret i1 %common.ret.op

520:                                              ; preds = %.loopexit, %sort.quad_reversal.exit350
  %.not302113 = icmp ult i64 %1, 32
  br i1 %.not302113, label %._crit_edge, label %.lr.ph116

.lr.ph116:                                        ; preds = %520
  %521 = lshr i64 %1, 5
  %522 = getelementptr inbounds i8, ptr %6, i64 120
  %523 = getelementptr inbounds i8, ptr %6, i64 128
  %524 = getelementptr inbounds i8, ptr %6, i64 248
  %.sroa.gep2 = getelementptr inbounds i8, ptr %6, i64 136
  %.sroa.gep3 = getelementptr inbounds i8, ptr %6, i64 8
  %.167.i.1 = getelementptr inbounds i8, ptr %6, i64 16
  %.167.i.1.sroa.gep = getelementptr inbounds i8, ptr %6, i64 24
  %uglygep475 = getelementptr i8, ptr %0, i64 8
  br label %526

.loopexit:                                        ; preds = %.lr.ph106, %.lr.ph106.prol.loopexit, %middle.block142, %._crit_edge.i331, %104, %43, %5
  %.0.ph = phi ptr [ %172, %._crit_edge.i331 ], [ %0, %5 ], [ %172, %middle.block142 ], [ %172, %.lr.ph106.prol.loopexit ], [ %172, %.lr.ph106 ], [ %105, %104 ], [ %.2, %43 ]
  %525 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %.0.ph, i64 %525, ptr nonnull align 1 %6, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  br label %520

526:                                              ; preds = %534, %.lr.ph116
  %lsr.iv476 = phi ptr [ %uglygep475, %.lr.ph116 ], [ %uglygep477, %534 ]
  %.5115 = phi ptr [ %0, %.lr.ph116 ], [ %536, %534 ]
  %.4288114 = phi i64 [ %521, %.lr.ph116 ], [ %535, %534 ]
  %527 = getelementptr inbounds i8, ptr %.5115, i64 56
  %528 = getelementptr inbounds i8, ptr %.5115, i64 64
  call void %4(ptr align 1 %3, i64 1) #18
  %529 = load ptr, ptr %527, align 8
  %530 = load ptr, ptr %528, align 8
  %531 = call i8 %2(ptr align 1 %3, ptr align 1 %529, ptr align 1 %530) #18
  %.not303 = icmp eq i8 %531, 1
  br i1 %.not303, label %.critedge69, label %537

._crit_edge:                                      ; preds = %534, %520
  %.5.lcssa = phi ptr [ %0, %520 ], [ %536, %534 ]
  %532 = and i64 %1, 31
  %533 = icmp ugt i64 %532, 8
  br i1 %533, label %.preheader.lr.ph.i, label %common.ret

534:                                              ; preds = %sort.parity_merge__anon_16222.exit399, %543
  %535 = add nsw i64 %.4288114, -1
  %536 = getelementptr inbounds i8, ptr %.5115, i64 256
  %uglygep477 = getelementptr i8, ptr %lsr.iv476, i64 256
  %.not302 = icmp eq i64 %535, 0
  br i1 %.not302, label %._crit_edge, label %526

537:                                              ; preds = %526
  %538 = getelementptr inbounds i8, ptr %.5115, i64 120
  %539 = getelementptr inbounds i8, ptr %.5115, i64 128
  call void %4(ptr align 1 %3, i64 1) #18
  %540 = load ptr, ptr %538, align 8
  %541 = load ptr, ptr %539, align 8
  %542 = call i8 %2(ptr align 1 %3, ptr align 1 %540, ptr align 1 %541) #18
  %.not304 = icmp eq i8 %542, 1
  br i1 %.not304, label %.critedge69, label %543

543:                                              ; preds = %537
  %544 = getelementptr inbounds i8, ptr %.5115, i64 184
  %545 = getelementptr inbounds i8, ptr %.5115, i64 192
  call void %4(ptr align 1 %3, i64 1) #18
  %546 = load ptr, ptr %544, align 8
  %547 = load ptr, ptr %545, align 8
  %548 = call i8 %2(ptr align 1 %3, ptr align 1 %546, ptr align 1 %547) #18
  %.not305 = icmp eq i8 %548, 1
  br i1 %.not305, label %.critedge69, label %534

.critedge69:                                      ; preds = %543, %537, %526
  %549 = getelementptr inbounds i8, ptr %.5115, i64 120
  call void %4(ptr align 1 %3, i64 16) #18
  %550 = load ptr, ptr %.5115, align 8
  %sunkaddr695 = getelementptr inbounds i8, ptr %.5115, i64 64
  %551 = load ptr, ptr %sunkaddr695, align 8
  %552 = call i8 %2(ptr align 1 %3, ptr align 1 %550, ptr align 1 %551) #18
  %.not.i = icmp eq i8 %552, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %528, ptr %.5115
  %553 = load i64, ptr %.sroa.speculated21.i, align 8
  store i64 %553, ptr %6, align 8
  %554 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 8
  %.0..i = select i1 %.not.i, ptr %.5115, ptr %554
  %..061.i = select i1 %.not.i, ptr %554, ptr %528
  %555 = load ptr, ptr %.0..i, align 8
  %556 = load ptr, ptr %..061.i, align 8
  %557 = call i8 %2(ptr align 1 %3, ptr align 1 %555, ptr align 1 %556) #18
  %.not76.i = icmp eq i8 %557, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  %558 = load i64, ptr %.sroa.speculated.i, align 8
  %sunkaddr696 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %558, ptr %sunkaddr696, align 8
  %559 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %..364.i = select i1 %.not76.i, ptr %559, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %559
  %sunkaddr697 = getelementptr inbounds i8, ptr %.5115, i64 56
  %560 = load ptr, ptr %sunkaddr697, align 8
  %561 = load ptr, ptr %549, align 8
  %562 = call i8 %2(ptr align 1 %3, ptr align 1 %560, ptr align 1 %561) #18
  %563 = icmp eq i8 %562, 1
  %.sroa.speculated40.i698 = select i1 %563, i64 56, i64 120
  %.sroa.speculated40.i = select i1 %563, ptr %527, ptr %549
  %sunkaddr699 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i698
  %564 = load i64, ptr %sunkaddr699, align 8
  %sunkaddr700 = getelementptr inbounds i8, ptr %6, i64 120
  store i64 %564, ptr %sunkaddr700, align 8
  %565 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 -8
  %.171.i = select i1 %563, ptr %549, ptr %565
  %.169.i = select i1 %563, ptr %565, ptr %527
  %566 = load ptr, ptr %.3..i, align 8
  %567 = load ptr, ptr %..364.i, align 8
  %568 = call i8 %2(ptr align 1 %3, ptr align 1 %566, ptr align 1 %567) #18
  %.not76.i.1 = icmp eq i8 %568, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  %569 = load i64, ptr %.sroa.speculated.i.1, align 8
  %sunkaddr701 = getelementptr inbounds i8, ptr %6, i64 16
  store i64 %569, ptr %sunkaddr701, align 8
  %570 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 8
  %..364.i.1 = select i1 %.not76.i.1, ptr %570, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %570
  %571 = load ptr, ptr %.169.i, align 8
  %572 = load ptr, ptr %.171.i, align 8
  %573 = call i8 %2(ptr align 1 %3, ptr align 1 %571, ptr align 1 %572) #18
  %574 = icmp eq i8 %573, 1
  %.sroa.speculated40.i.1 = select i1 %574, ptr %.169.i, ptr %.171.i
  %575 = load i64, ptr %.sroa.speculated40.i.1, align 8
  %sunkaddr702 = getelementptr inbounds i8, ptr %6, i64 112
  store i64 %575, ptr %sunkaddr702, align 8
  %576 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 -8
  %.171.i.1 = select i1 %574, ptr %.171.i, ptr %576
  %.169.i.1 = select i1 %574, ptr %576, ptr %.169.i
  %577 = load ptr, ptr %.3..i.1, align 8
  %578 = load ptr, ptr %..364.i.1, align 8
  %579 = call i8 %2(ptr align 1 %3, ptr align 1 %577, ptr align 1 %578) #18
  %.not76.i.2 = icmp eq i8 %579, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  %580 = load i64, ptr %.sroa.speculated.i.2, align 8
  %sunkaddr703 = getelementptr inbounds i8, ptr %6, i64 24
  store i64 %580, ptr %sunkaddr703, align 8
  %581 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 8
  %..364.i.2 = select i1 %.not76.i.2, ptr %581, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %581
  %582 = load ptr, ptr %.169.i.1, align 8
  %583 = load ptr, ptr %.171.i.1, align 8
  %584 = call i8 %2(ptr align 1 %3, ptr align 1 %582, ptr align 1 %583) #18
  %585 = icmp eq i8 %584, 1
  %.sroa.speculated40.i.2 = select i1 %585, ptr %.169.i.1, ptr %.171.i.1
  %586 = load i64, ptr %.sroa.speculated40.i.2, align 8
  %sunkaddr704 = getelementptr inbounds i8, ptr %6, i64 104
  store i64 %586, ptr %sunkaddr704, align 8
  %587 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 -8
  %.171.i.2 = select i1 %585, ptr %.171.i.1, ptr %587
  %.169.i.2 = select i1 %585, ptr %587, ptr %.169.i.1
  %588 = load ptr, ptr %.3..i.2, align 8
  %589 = load ptr, ptr %..364.i.2, align 8
  %590 = call i8 %2(ptr align 1 %3, ptr align 1 %588, ptr align 1 %589) #18
  %.not76.i.3 = icmp eq i8 %590, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  %591 = load i64, ptr %.sroa.speculated.i.3, align 8
  %sunkaddr705 = getelementptr inbounds i8, ptr %6, i64 32
  store i64 %591, ptr %sunkaddr705, align 8
  %592 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 8
  %..364.i.3 = select i1 %.not76.i.3, ptr %592, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %592
  %593 = load ptr, ptr %.169.i.2, align 8
  %594 = load ptr, ptr %.171.i.2, align 8
  %595 = call i8 %2(ptr align 1 %3, ptr align 1 %593, ptr align 1 %594) #18
  %596 = icmp eq i8 %595, 1
  %.sroa.speculated40.i.3 = select i1 %596, ptr %.169.i.2, ptr %.171.i.2
  %597 = load i64, ptr %.sroa.speculated40.i.3, align 8
  %sunkaddr706 = getelementptr inbounds i8, ptr %6, i64 96
  store i64 %597, ptr %sunkaddr706, align 8
  %598 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 -8
  %.171.i.3 = select i1 %596, ptr %.171.i.2, ptr %598
  %.169.i.3 = select i1 %596, ptr %598, ptr %.169.i.2
  %599 = load ptr, ptr %.3..i.3, align 8
  %600 = load ptr, ptr %..364.i.3, align 8
  %601 = call i8 %2(ptr align 1 %3, ptr align 1 %599, ptr align 1 %600) #18
  %.not76.i.4 = icmp eq i8 %601, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  %602 = load i64, ptr %.sroa.speculated.i.4, align 8
  %sunkaddr707 = getelementptr inbounds i8, ptr %6, i64 40
  store i64 %602, ptr %sunkaddr707, align 8
  %603 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 8
  %..364.i.4 = select i1 %.not76.i.4, ptr %603, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %603
  %604 = load ptr, ptr %.169.i.3, align 8
  %605 = load ptr, ptr %.171.i.3, align 8
  %606 = call i8 %2(ptr align 1 %3, ptr align 1 %604, ptr align 1 %605) #18
  %607 = icmp eq i8 %606, 1
  %.sroa.speculated40.i.4 = select i1 %607, ptr %.169.i.3, ptr %.171.i.3
  %608 = load i64, ptr %.sroa.speculated40.i.4, align 8
  %sunkaddr708 = getelementptr inbounds i8, ptr %6, i64 88
  store i64 %608, ptr %sunkaddr708, align 8
  %609 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 -8
  %.171.i.4 = select i1 %607, ptr %.171.i.3, ptr %609
  %.169.i.4 = select i1 %607, ptr %609, ptr %.169.i.3
  %610 = load ptr, ptr %.3..i.4, align 8
  %611 = load ptr, ptr %..364.i.4, align 8
  %612 = call i8 %2(ptr align 1 %3, ptr align 1 %610, ptr align 1 %611) #18
  %.not76.i.5 = icmp eq i8 %612, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  %613 = load i64, ptr %.sroa.speculated.i.5, align 8
  %sunkaddr709 = getelementptr inbounds i8, ptr %6, i64 48
  store i64 %613, ptr %sunkaddr709, align 8
  %614 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 8
  %..364.i.5 = select i1 %.not76.i.5, ptr %614, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %614
  %615 = load ptr, ptr %.169.i.4, align 8
  %616 = load ptr, ptr %.171.i.4, align 8
  %617 = call i8 %2(ptr align 1 %3, ptr align 1 %615, ptr align 1 %616) #18
  %618 = icmp eq i8 %617, 1
  %.sroa.speculated40.i.5 = select i1 %618, ptr %.169.i.4, ptr %.171.i.4
  %619 = load i64, ptr %.sroa.speculated40.i.5, align 8
  %sunkaddr710 = getelementptr inbounds i8, ptr %6, i64 80
  store i64 %619, ptr %sunkaddr710, align 8
  %620 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 -8
  %.171.i.5 = select i1 %618, ptr %.171.i.4, ptr %620
  %.169.i.5 = select i1 %618, ptr %620, ptr %.169.i.4
  %621 = load ptr, ptr %.3..i.5, align 8
  %622 = load ptr, ptr %..364.i.5, align 8
  %623 = call i8 %2(ptr align 1 %3, ptr align 1 %621, ptr align 1 %622) #18
  %.not76.i.6 = icmp eq i8 %623, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  %624 = load i64, ptr %.sroa.speculated.i.6, align 8
  %sunkaddr711 = getelementptr inbounds i8, ptr %6, i64 56
  store i64 %624, ptr %sunkaddr711, align 8
  %625 = load ptr, ptr %.169.i.5, align 8
  %626 = load ptr, ptr %.171.i.5, align 8
  %627 = call i8 %2(ptr align 1 %3, ptr align 1 %625, ptr align 1 %626) #18
  %628 = icmp eq i8 %627, 1
  %.sroa.speculated40.i.6 = select i1 %628, ptr %.169.i.5, ptr %.171.i.5
  %629 = load i64, ptr %.sroa.speculated40.i.6, align 8
  %sunkaddr712 = getelementptr inbounds i8, ptr %6, i64 72
  store i64 %629, ptr %sunkaddr712, align 8
  %630 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 -8
  %.171.i.6 = select i1 %628, ptr %.171.i.5, ptr %630
  %.169.i.6 = select i1 %628, ptr %630, ptr %.169.i.5
  %631 = load ptr, ptr %.169.i.6, align 8
  %632 = load ptr, ptr %.171.i.6, align 8
  %633 = call i8 %2(ptr align 1 %3, ptr align 1 %631, ptr align 1 %632) #18
  %634 = icmp eq i8 %633, 1
  %.sroa.speculated46.i = select i1 %634, ptr %.169.i.6, ptr %.171.i.6
  %635 = load i64, ptr %.sroa.speculated46.i, align 8
  %sunkaddr713 = getelementptr inbounds i8, ptr %6, i64 64
  store i64 %635, ptr %sunkaddr713, align 8
  %636 = getelementptr inbounds i8, ptr %.5115, i64 128
  %637 = getelementptr inbounds i8, ptr %.5115, i64 192
  %638 = getelementptr inbounds i8, ptr %.5115, i64 184
  %639 = getelementptr inbounds i8, ptr %.5115, i64 248
  call void %4(ptr align 1 %3, i64 16) #18
  %640 = load ptr, ptr %636, align 8
  %641 = load ptr, ptr %637, align 8
  %642 = call i8 %2(ptr align 1 %3, ptr align 1 %640, ptr align 1 %641) #18
  %.not.i353 = icmp eq i8 %642, 1
  %.sroa.speculated21.i354714 = select i1 %.not.i353, i64 192, i64 128
  %.sroa.speculated21.i354 = select i1 %.not.i353, ptr %637, ptr %636
  %sunkaddr715 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated21.i354714
  %643 = load i64, ptr %sunkaddr715, align 8
  %sunkaddr716 = getelementptr inbounds i8, ptr %6, i64 128
  store i64 %643, ptr %sunkaddr716, align 8
  %644 = getelementptr inbounds i8, ptr %.sroa.speculated21.i354, i64 8
  %.0..i355 = select i1 %.not.i353, ptr %636, ptr %644
  %..061.i356 = select i1 %.not.i353, ptr %644, ptr %637
  %645 = load ptr, ptr %.0..i355, align 8
  %646 = load ptr, ptr %..061.i356, align 8
  %647 = call i8 %2(ptr align 1 %3, ptr align 1 %645, ptr align 1 %646) #18
  %.not76.i365 = icmp eq i8 %647, 1
  %.sroa.speculated.i366 = select i1 %.not76.i365, ptr %..061.i356, ptr %.0..i355
  %648 = load i64, ptr %.sroa.speculated.i366, align 8
  %sunkaddr717 = getelementptr inbounds i8, ptr %6, i64 136
  store i64 %648, ptr %sunkaddr717, align 8
  %649 = getelementptr inbounds i8, ptr %.sroa.speculated.i366, i64 8
  %..364.i367 = select i1 %.not76.i365, ptr %649, ptr %..061.i356
  %.3..i368 = select i1 %.not76.i365, ptr %.0..i355, ptr %649
  %650 = load ptr, ptr %638, align 8
  %651 = load ptr, ptr %639, align 8
  %652 = call i8 %2(ptr align 1 %3, ptr align 1 %650, ptr align 1 %651) #18
  %653 = icmp eq i8 %652, 1
  %.sroa.speculated40.i369718 = select i1 %653, i64 184, i64 248
  %.sroa.speculated40.i369 = select i1 %653, ptr %638, ptr %639
  %sunkaddr719 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i369718
  %654 = load i64, ptr %sunkaddr719, align 8
  %sunkaddr720 = getelementptr inbounds i8, ptr %6, i64 248
  store i64 %654, ptr %sunkaddr720, align 8
  %655 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369, i64 -8
  %.171.i370 = select i1 %653, ptr %639, ptr %655
  %.169.i371 = select i1 %653, ptr %655, ptr %638
  %656 = load ptr, ptr %.3..i368, align 8
  %657 = load ptr, ptr %..364.i367, align 8
  %658 = call i8 %2(ptr align 1 %3, ptr align 1 %656, ptr align 1 %657) #18
  %.not76.i365.1 = icmp eq i8 %658, 1
  %.sroa.speculated.i366.1 = select i1 %.not76.i365.1, ptr %..364.i367, ptr %.3..i368
  %659 = load i64, ptr %.sroa.speculated.i366.1, align 8
  %sunkaddr721 = getelementptr inbounds i8, ptr %6, i64 144
  store i64 %659, ptr %sunkaddr721, align 8
  %660 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.1, i64 8
  %..364.i367.1 = select i1 %.not76.i365.1, ptr %660, ptr %..364.i367
  %.3..i368.1 = select i1 %.not76.i365.1, ptr %.3..i368, ptr %660
  %661 = load ptr, ptr %.169.i371, align 8
  %662 = load ptr, ptr %.171.i370, align 8
  %663 = call i8 %2(ptr align 1 %3, ptr align 1 %661, ptr align 1 %662) #18
  %664 = icmp eq i8 %663, 1
  %.sroa.speculated40.i369.1 = select i1 %664, ptr %.169.i371, ptr %.171.i370
  %665 = load i64, ptr %.sroa.speculated40.i369.1, align 8
  %sunkaddr722 = getelementptr inbounds i8, ptr %6, i64 240
  store i64 %665, ptr %sunkaddr722, align 8
  %666 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.1, i64 -8
  %.171.i370.1 = select i1 %664, ptr %.171.i370, ptr %666
  %.169.i371.1 = select i1 %664, ptr %666, ptr %.169.i371
  %667 = load ptr, ptr %.3..i368.1, align 8
  %668 = load ptr, ptr %..364.i367.1, align 8
  %669 = call i8 %2(ptr align 1 %3, ptr align 1 %667, ptr align 1 %668) #18
  %.not76.i365.2 = icmp eq i8 %669, 1
  %.sroa.speculated.i366.2 = select i1 %.not76.i365.2, ptr %..364.i367.1, ptr %.3..i368.1
  %670 = load i64, ptr %.sroa.speculated.i366.2, align 8
  %sunkaddr723 = getelementptr inbounds i8, ptr %6, i64 152
  store i64 %670, ptr %sunkaddr723, align 8
  %671 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.2, i64 8
  %..364.i367.2 = select i1 %.not76.i365.2, ptr %671, ptr %..364.i367.1
  %.3..i368.2 = select i1 %.not76.i365.2, ptr %.3..i368.1, ptr %671
  %672 = load ptr, ptr %.169.i371.1, align 8
  %673 = load ptr, ptr %.171.i370.1, align 8
  %674 = call i8 %2(ptr align 1 %3, ptr align 1 %672, ptr align 1 %673) #18
  %675 = icmp eq i8 %674, 1
  %.sroa.speculated40.i369.2 = select i1 %675, ptr %.169.i371.1, ptr %.171.i370.1
  %676 = load i64, ptr %.sroa.speculated40.i369.2, align 8
  %sunkaddr724 = getelementptr inbounds i8, ptr %6, i64 232
  store i64 %676, ptr %sunkaddr724, align 8
  %677 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.2, i64 -8
  %.171.i370.2 = select i1 %675, ptr %.171.i370.1, ptr %677
  %.169.i371.2 = select i1 %675, ptr %677, ptr %.169.i371.1
  %678 = load ptr, ptr %.3..i368.2, align 8
  %679 = load ptr, ptr %..364.i367.2, align 8
  %680 = call i8 %2(ptr align 1 %3, ptr align 1 %678, ptr align 1 %679) #18
  %.not76.i365.3 = icmp eq i8 %680, 1
  %.sroa.speculated.i366.3 = select i1 %.not76.i365.3, ptr %..364.i367.2, ptr %.3..i368.2
  %681 = load i64, ptr %.sroa.speculated.i366.3, align 8
  %sunkaddr725 = getelementptr inbounds i8, ptr %6, i64 160
  store i64 %681, ptr %sunkaddr725, align 8
  %682 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.3, i64 8
  %..364.i367.3 = select i1 %.not76.i365.3, ptr %682, ptr %..364.i367.2
  %.3..i368.3 = select i1 %.not76.i365.3, ptr %.3..i368.2, ptr %682
  %683 = load ptr, ptr %.169.i371.2, align 8
  %684 = load ptr, ptr %.171.i370.2, align 8
  %685 = call i8 %2(ptr align 1 %3, ptr align 1 %683, ptr align 1 %684) #18
  %686 = icmp eq i8 %685, 1
  %.sroa.speculated40.i369.3 = select i1 %686, ptr %.169.i371.2, ptr %.171.i370.2
  %687 = load i64, ptr %.sroa.speculated40.i369.3, align 8
  %sunkaddr726 = getelementptr inbounds i8, ptr %6, i64 224
  store i64 %687, ptr %sunkaddr726, align 8
  %688 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.3, i64 -8
  %.171.i370.3 = select i1 %686, ptr %.171.i370.2, ptr %688
  %.169.i371.3 = select i1 %686, ptr %688, ptr %.169.i371.2
  %689 = load ptr, ptr %.3..i368.3, align 8
  %690 = load ptr, ptr %..364.i367.3, align 8
  %691 = call i8 %2(ptr align 1 %3, ptr align 1 %689, ptr align 1 %690) #18
  %.not76.i365.4 = icmp eq i8 %691, 1
  %.sroa.speculated.i366.4 = select i1 %.not76.i365.4, ptr %..364.i367.3, ptr %.3..i368.3
  %692 = load i64, ptr %.sroa.speculated.i366.4, align 8
  %sunkaddr727 = getelementptr inbounds i8, ptr %6, i64 168
  store i64 %692, ptr %sunkaddr727, align 8
  %693 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.4, i64 8
  %..364.i367.4 = select i1 %.not76.i365.4, ptr %693, ptr %..364.i367.3
  %.3..i368.4 = select i1 %.not76.i365.4, ptr %.3..i368.3, ptr %693
  %694 = load ptr, ptr %.169.i371.3, align 8
  %695 = load ptr, ptr %.171.i370.3, align 8
  %696 = call i8 %2(ptr align 1 %3, ptr align 1 %694, ptr align 1 %695) #18
  %697 = icmp eq i8 %696, 1
  %.sroa.speculated40.i369.4 = select i1 %697, ptr %.169.i371.3, ptr %.171.i370.3
  %698 = load i64, ptr %.sroa.speculated40.i369.4, align 8
  %sunkaddr728 = getelementptr inbounds i8, ptr %6, i64 216
  store i64 %698, ptr %sunkaddr728, align 8
  %699 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.4, i64 -8
  %.171.i370.4 = select i1 %697, ptr %.171.i370.3, ptr %699
  %.169.i371.4 = select i1 %697, ptr %699, ptr %.169.i371.3
  %700 = load ptr, ptr %.3..i368.4, align 8
  %701 = load ptr, ptr %..364.i367.4, align 8
  %702 = call i8 %2(ptr align 1 %3, ptr align 1 %700, ptr align 1 %701) #18
  %.not76.i365.5 = icmp eq i8 %702, 1
  %.sroa.speculated.i366.5 = select i1 %.not76.i365.5, ptr %..364.i367.4, ptr %.3..i368.4
  %703 = load i64, ptr %.sroa.speculated.i366.5, align 8
  %sunkaddr729 = getelementptr inbounds i8, ptr %6, i64 176
  store i64 %703, ptr %sunkaddr729, align 8
  %704 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.5, i64 8
  %..364.i367.5 = select i1 %.not76.i365.5, ptr %704, ptr %..364.i367.4
  %.3..i368.5 = select i1 %.not76.i365.5, ptr %.3..i368.4, ptr %704
  %705 = load ptr, ptr %.169.i371.4, align 8
  %706 = load ptr, ptr %.171.i370.4, align 8
  %707 = call i8 %2(ptr align 1 %3, ptr align 1 %705, ptr align 1 %706) #18
  %708 = icmp eq i8 %707, 1
  %.sroa.speculated40.i369.5 = select i1 %708, ptr %.169.i371.4, ptr %.171.i370.4
  %709 = load i64, ptr %.sroa.speculated40.i369.5, align 8
  %sunkaddr730 = getelementptr inbounds i8, ptr %6, i64 208
  store i64 %709, ptr %sunkaddr730, align 8
  %710 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.5, i64 -8
  %.171.i370.5 = select i1 %708, ptr %.171.i370.4, ptr %710
  %.169.i371.5 = select i1 %708, ptr %710, ptr %.169.i371.4
  %711 = load ptr, ptr %.3..i368.5, align 8
  %712 = load ptr, ptr %..364.i367.5, align 8
  %713 = call i8 %2(ptr align 1 %3, ptr align 1 %711, ptr align 1 %712) #18
  %.not76.i365.6 = icmp eq i8 %713, 1
  %.sroa.speculated.i366.6 = select i1 %.not76.i365.6, ptr %..364.i367.5, ptr %.3..i368.5
  %714 = load i64, ptr %.sroa.speculated.i366.6, align 8
  %sunkaddr731 = getelementptr inbounds i8, ptr %6, i64 184
  store i64 %714, ptr %sunkaddr731, align 8
  %715 = load ptr, ptr %.169.i371.5, align 8
  %716 = load ptr, ptr %.171.i370.5, align 8
  %717 = call i8 %2(ptr align 1 %3, ptr align 1 %715, ptr align 1 %716) #18
  %718 = icmp eq i8 %717, 1
  %.sroa.speculated40.i369.6 = select i1 %718, ptr %.169.i371.5, ptr %.171.i370.5
  %719 = load i64, ptr %.sroa.speculated40.i369.6, align 8
  %sunkaddr732 = getelementptr inbounds i8, ptr %6, i64 200
  store i64 %719, ptr %sunkaddr732, align 8
  %720 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.6, i64 -8
  %.171.i370.6 = select i1 %718, ptr %.171.i370.5, ptr %720
  %.169.i371.6 = select i1 %718, ptr %720, ptr %.169.i371.5
  %721 = load ptr, ptr %.169.i371.6, align 8
  %722 = load ptr, ptr %.171.i370.6, align 8
  %723 = call i8 %2(ptr align 1 %3, ptr align 1 %721, ptr align 1 %722) #18
  %724 = icmp eq i8 %723, 1
  %.sroa.speculated46.i374 = select i1 %724, ptr %.169.i371.6, ptr %.171.i370.6
  %725 = load i64, ptr %.sroa.speculated46.i374, align 8
  %sunkaddr733 = getelementptr inbounds i8, ptr %6, i64 192
  store i64 %725, ptr %sunkaddr733, align 8
  call void %4(ptr align 1 %3, i64 32) #18
  %726 = load ptr, ptr %6, align 8
  %727 = load ptr, ptr %sunkaddr716, align 8
  %728 = call i8 %2(ptr align 1 %3, ptr align 1 %726, ptr align 1 %727) #18
  %.not.i377 = icmp eq i8 %728, 1
  %.val = load i64, ptr %sunkaddr716, align 8
  %.val28 = load i64, ptr %6, align 8
  %729 = select i1 %.not.i377, i64 %.val, i64 %.val28
  store i64 %729, ptr %.5115, align 8
  %.0..i379 = select i1 %.not.i377, ptr %6, ptr %.sroa.gep3
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.v = select i1 %.not.i377, i64 144, i64 16
  %.sroa.speculated21.i378.sroa.sel.sroa.sel = getelementptr inbounds i8, ptr %6, i64 %.sroa.speculated21.i378.sroa.sel.sroa.sel.v
  %.0..i379.sroa.sel = select i1 %.not.i377, ptr %.sroa.gep3, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel, i64 8
  %.0..i379.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep, i64 8
  %.0..i379.sroa.sel.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1.sroa.gep, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep
  %..061.i380 = select i1 %.not.i377, ptr %.sroa.gep2, ptr %523
  br label %.cont.i397

.cont.i397:                                       ; preds = %.cont.i397, %.critedge69
  %lsr.iv480 = phi i64 [ %lsr.iv.next481, %.cont.i397 ], [ 31, %.critedge69 ]
  %lsr.iv478 = phi ptr [ %uglygep479, %.cont.i397 ], [ %lsr.iv476, %.critedge69 ]
  %.37.i381 = phi ptr [ %.3..i392, %.cont.i397 ], [ %.0..i379, %.critedge69 ]
  %.3646.i382 = phi ptr [ %..364.i391, %.cont.i397 ], [ %..061.i380, %.critedge69 ]
  %.0684.i384 = phi ptr [ %.169.i395, %.cont.i397 ], [ %522, %.critedge69 ]
  %.0703.i385 = phi ptr [ %.171.i394, %.cont.i397 ], [ %524, %.critedge69 ]
  %.37.i381.sroa.phi = phi ptr [ %.3..i392.sroa.sel, %.cont.i397 ], [ %.0..i379.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel, %.cont.i397 ], [ %.0..i379.sroa.sel.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel.sroa.gep, %.cont.i397 ], [ %.0..i379.sroa.sel.sroa.sel.sroa.sel, %.critedge69 ]
  %730 = shl nuw nsw i64 %lsr.iv480, 3
  %uglygep483 = getelementptr i8, ptr %.5115, i64 %730
  %.37.i381.sroa.phi368 = getelementptr inbounds i8, ptr %.37.i381, i64 8
  %731 = load ptr, ptr %.37.i381, align 8
  %732 = load ptr, ptr %.3646.i382, align 8
  %733 = call i8 %2(ptr align 1 %3, ptr align 1 %731, ptr align 1 %732) #18
  %.not76.i389 = icmp eq i8 %733, 1
  %.sroa.speculated.i390 = select i1 %.not76.i389, ptr %.3646.i382, ptr %.37.i381
  %734 = load i64, ptr %.sroa.speculated.i390, align 8
  store i64 %734, ptr %lsr.iv478, align 8
  %..364.i391.idx = select i1 %.not76.i389, i64 8, i64 0
  %..364.i391 = getelementptr i8, ptr %.3646.i382, i64 %..364.i391.idx
  %.3..i392 = select i1 %.not76.i389, ptr %.37.i381, ptr %.37.i381.sroa.phi
  %.3..i392.sroa.sel = select i1 %.not76.i389, ptr %.37.i381.sroa.phi368, ptr %.37.i381.sroa.phi.sroa.phi
  %.37.i381.sroa.phi368.sroa.gep = getelementptr inbounds i8, ptr %.37.i381, i64 16
  %.3..i392.sroa.sel.sroa.sel = select i1 %.not76.i389, ptr %.37.i381.sroa.phi368.sroa.gep, ptr %.37.i381.sroa.phi.sroa.phi.sroa.phi
  %.3..i392.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.3..i392.sroa.sel.sroa.sel, i64 8
  %735 = load ptr, ptr %.0684.i384, align 8
  %736 = load ptr, ptr %.0703.i385, align 8
  %737 = call i8 %2(ptr align 1 %3, ptr align 1 %735, ptr align 1 %736) #18
  %738 = icmp eq i8 %737, 1
  %.sroa.speculated40.i393 = select i1 %738, ptr %.0684.i384, ptr %.0703.i385
  %739 = load i64, ptr %.sroa.speculated40.i393, align 8
  store i64 %739, ptr %uglygep483, align 8
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %738, ptr %.0684.i384, ptr %.0703.i385
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 -8
  %.171.i394 = select i1 %738, ptr %.0703.i385, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel
  %.169.i395 = select i1 %738, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel, ptr %.0684.i384
  %uglygep479 = getelementptr i8, ptr %lsr.iv478, i64 8
  %lsr.iv.next481 = add nsw i64 %lsr.iv480, -1
  %exitcond.not.i396 = icmp eq i64 %lsr.iv.next481, 16
  br i1 %exitcond.not.i396, label %sort.parity_merge__anon_16222.exit399, label %.cont.i397

sort.parity_merge__anon_16222.exit399:            ; preds = %.cont.i397
  %740 = load ptr, ptr %.169.i395, align 8
  %741 = load ptr, ptr %.171.i394, align 8
  %742 = call i8 %2(ptr align 1 %3, ptr align 1 %740, ptr align 1 %741) #18
  %743 = icmp eq i8 %742, 1
  %.sroa.speculated46.i398 = select i1 %743, ptr %.169.i395, ptr %.171.i394
  %744 = load i64, ptr %.sroa.speculated46.i398, align 8
  %745 = shl i64 %lsr.iv.next481, 3
  %uglygep482 = getelementptr i8, ptr %.5115, i64 %745
  store i64 %744, ptr %uglygep482, align 8
  br label %534

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %746 = shl nuw nsw i64 %532, 3
  %747 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %746
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ 8, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %748 = ptrtoint ptr %.5.lcssa to i64
  %749 = ptrtoint ptr %747 to i64
  %750 = shl nuw nsw i64 %.06.i, 3
  %751 = add nuw i64 %750, %748
  %752 = icmp ult i64 %751, %749
  br i1 %752, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw nsw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %753 = ptrtoint ptr %.5.lcssa to i64
  %754 = shl nuw nsw i64 %.06.i, 4
  %755 = shl nuw nsw i64 %.06.i, 1
  %756 = add i64 %753, %754
  %757 = add i64 %753, %750
  br label %761

.loopexit.i:                                      ; preds = %769, %765, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %755, %769 ], [ %755, %765 ]
  %758 = icmp ult i64 %.pre-phi.i, %532
  %759 = icmp ult i64 %.pre-phi.i, 33
  %760 = and i1 %758, %759
  br i1 %760, label %.preheader.i, label %common.ret

761:                                              ; preds = %765, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %765 ], [ 0, %.lr.ph.i ]
  %762 = ptrtoint ptr %747 to i64
  %uglygep474 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %763 = add i64 %756, %lsr.iv
  %764 = icmp ult i64 %763, %762
  br i1 %764, label %765, label %769

765:                                              ; preds = %761
  %766 = ptrtoint ptr %747 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %uglygep474, i64 %755, ptr nonnull align 1 %6, i64 32, i64 %.06.i, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  %lsr.iv.next = add i64 %lsr.iv, %754
  %767 = add i64 %757, %lsr.iv.next
  %768 = icmp ult i64 %767, %766
  br i1 %768, label %761, label %.loopexit.i

769:                                              ; preds = %761
  %770 = sub i64 %746, %lsr.iv
  %771 = lshr i64 %770, 3
  %uglygep473 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %uglygep473, i64 %771, ptr nonnull align 1 %6, i64 32, i64 %.06.i, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, ptr nocapture nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = shl i64 %1, 3
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  %10 = icmp ugt i64 %1, 127
  %11 = icmp ugt i64 %3, 127
  %12 = select i1 %10, i1 %11, i1 false
  br i1 %12, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %7
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16227.exit25, %.preheader.lr.ph
  %.08 = phi i64 [ 128, %.preheader.lr.ph ], [ %18, %sort.tail_merge__anon_16227.exit25 ]
  %13 = ptrtoint ptr %0 to i64
  %14 = lshr exact i64 %.08, 2
  %15 = lshr exact i64 %.08, 1
  %16 = shl i64 %.08, 1
  %17 = shl i64 %.08, 3
  %18 = shl i64 %.08, 2
  %19 = getelementptr inbounds i8, ptr %2, i64 %18
  %uglygep18 = getelementptr i8, ptr %0, i64 %16
  %uglygep21 = getelementptr i8, ptr %0, i64 %18
  %20 = mul i64 %.08, 6
  %uglygep25 = getelementptr i8, ptr %0, i64 %20
  %21 = add i64 %13, %17
  br label %51

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16227.exit25, %7
  %.0.lcssa = phi i64 [ 128, %7 ], [ %18, %sort.tail_merge__anon_16227.exit25 ]
  %22 = lshr exact i64 %.0.lcssa, 2
  %23 = icmp ult i64 %22, %1
  %24 = icmp ule i64 %22, %3
  %25 = select i1 %23, i1 %24, i1 false
  br i1 %25, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16227.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ %22, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %26 = ptrtoint ptr %0 to i64
  %27 = ptrtoint ptr %9 to i64
  %28 = shl nuw i64 %.06.i, 3
  %29 = add nuw i64 %28, %26
  %30 = icmp ult i64 %29, %27
  br i1 %30, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %31 = ptrtoint ptr %0 to i64
  %32 = shl nuw i64 %.06.i, 4
  %33 = shl nuw i64 %.06.i, 1
  %34 = add i64 %31, %32
  %35 = add i64 %31, %28
  br label %39

.loopexit.i:                                      ; preds = %47, %43, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %33, %47 ], [ %33, %43 ]
  %36 = icmp ult i64 %.pre-phi.i, %1
  %37 = icmp ule i64 %.pre-phi.i, %3
  %38 = select i1 %36, i1 %37, i1 false
  br i1 %38, label %.preheader.i, label %sort.tail_merge__anon_16227.exit

39:                                               ; preds = %43, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %43 ], [ 0, %.lr.ph.i ]
  %40 = ptrtoint ptr %9 to i64
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv
  %41 = add i64 %34, %lsr.iv
  %42 = icmp ult i64 %41, %40
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = ptrtoint ptr %9 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %uglygep13, i64 %33, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  %lsr.iv.next = add i64 %lsr.iv, %32
  %45 = add i64 %35, %lsr.iv.next
  %46 = icmp ult i64 %45, %44
  br i1 %46, label %39, label %.loopexit.i

47:                                               ; preds = %39
  %48 = sub i64 %8, %lsr.iv
  %49 = lshr i64 %48, 3
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %uglygep, i64 %49, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  br label %.loopexit.i

sort.tail_merge__anon_16227.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %50 = lshr exact i64 %.0.lcssa, 1
  ret i64 %50

51:                                               ; preds = %sort.quad_merge_block__anon_16228.exit, %.preheader
  %lsr.iv33 = phi i64 [ %21, %.preheader ], [ %lsr.iv.next34, %sort.quad_merge_block__anon_16228.exit ]
  %lsr.iv29 = phi i64 [ %8, %.preheader ], [ %lsr.iv.next30, %sort.quad_merge_block__anon_16228.exit ]
  %lsr.iv14 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next15, %sort.quad_merge_block__anon_16228.exit ]
  %uglygep16 = getelementptr i8, ptr %0, i64 %lsr.iv14
  %uglygep19 = getelementptr i8, ptr %uglygep18, i64 %lsr.iv14
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv14
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv14
  tail call void %6(ptr align 1 %5, i64 2) #18
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 -8
  %52 = load ptr, ptr %uglygep20, align 8
  %53 = load ptr, ptr %uglygep19, align 8
  %54 = tail call i8 %4(ptr align 1 %5, ptr align 1 %52, ptr align 1 %53) #18
  %55 = icmp ne i8 %54, 1
  %56 = zext i1 %55 to i2
  %uglygep27 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv14
  %uglygep28 = getelementptr i8, ptr %uglygep27, i64 -8
  %57 = load ptr, ptr %uglygep28, align 8
  %58 = load ptr, ptr %uglygep26, align 8
  %59 = tail call i8 %4(ptr align 1 %5, ptr align 1 %57, ptr align 1 %58) #18
  %.not.i = icmp eq i8 %59, 1
  %60 = select i1 %.not.i, i2 0, i2 -2
  %61 = or i2 %60, %56
  %62 = zext i2 %61 to i32
  switch i32 %62, label %64 [
    i32 0, label %65
    i32 1, label %66
    i32 2, label %67
    i32 3, label %68
  ]

63:                                               ; preds = %72, %67, %66, %65
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %uglygep16, ptr nonnull align 1 %2, i64 %15, i64 %15, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  br label %sort.quad_merge_block__anon_16228.exit

64:                                               ; preds = %51
  unreachable

65:                                               ; preds = %51
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %14, i64 %14, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %19, ptr nonnull align 1 %uglygep22, i64 %14, i64 %14, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  br label %63

66:                                               ; preds = %51
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %18, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %19, ptr nonnull align 1 %uglygep22, i64 %14, i64 %14, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  br label %63

67:                                               ; preds = %51
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %14, i64 %14, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %19, ptr noundef nonnull align 1 dereferenceable(1) %uglygep22, i64 %18, i1 false)
  br label %63

68:                                               ; preds = %51
  tail call void %6(ptr align 1 %5, i64 1) #18
  %uglygep23 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv14
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 -8
  %69 = load ptr, ptr %uglygep24, align 8
  %sunkaddr = getelementptr i8, ptr %uglygep21, i64 %lsr.iv14
  %70 = load ptr, ptr %sunkaddr, align 8
  %71 = tail call i8 %4(ptr align 1 %5, ptr align 1 %69, ptr align 1 %70) #18
  %.not6.i = icmp eq i8 %71, 1
  br i1 %.not6.i, label %72, label %sort.quad_merge_block__anon_16228.exit

72:                                               ; preds = %68
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %17, i1 false)
  br label %63

sort.quad_merge_block__anon_16228.exit:           ; preds = %68, %63
  %73 = ptrtoint ptr %9 to i64
  %lsr.iv.next15 = add i64 %lsr.iv14, %17
  %lsr.iv.next30 = sub i64 %lsr.iv29, %17
  %74 = add i64 %21, %lsr.iv.next15
  %75 = icmp ugt i64 %74, %73
  %lsr.iv.next34 = add i64 %lsr.iv33, %17
  br i1 %75, label %76, label %51

76:                                               ; preds = %sort.quad_merge_block__anon_16228.exit
  %77 = sub i64 %8, %lsr.iv.next15
  %78 = lshr i64 %77, 3
  %79 = icmp ult i64 %14, %78
  %80 = icmp ule i64 %14, %3
  %81 = select i1 %79, i1 %80, i1 false
  %uglygep17 = getelementptr i8, ptr %0, i64 %lsr.iv.next15
  br i1 %81, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16227.exit25

.preheader.lr.ph.i16:                             ; preds = %76
  %82 = ptrtoint ptr %0 to i64
  %83 = lshr i64 %lsr.iv.next30, 3
  %84 = shl nuw i64 %83, 3
  %uglygep31 = getelementptr i8, ptr %0, i64 %84
  %uglygep32 = getelementptr i8, ptr %uglygep31, i64 %lsr.iv.next15
  %85 = lshr i64 %lsr.iv.next30, 3
  %86 = shl nuw i64 %85, 3
  %87 = add i64 %82, %86
  %88 = add i64 %87, %lsr.iv.next15
  %89 = add i64 %82, %lsr.iv.next15
  %90 = shl nuw i64 %85, 3
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i23, %.preheader.lr.ph.i16
  %.06.i17 = phi i64 [ %14, %.preheader.lr.ph.i16 ], [ %.pre-phi.i22, %.loopexit.i23 ]
  %91 = ptrtoint ptr %uglygep32 to i64
  %92 = shl nuw i64 %.06.i17, 3
  %93 = add i64 %89, %92
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %.lr.ph.i21, label %.preheader..loopexit_crit_edge.i20

.preheader..loopexit_crit_edge.i20:               ; preds = %.preheader.i18
  %.pre.i19 = shl nuw i64 %.06.i17, 1
  br label %.loopexit.i23

.lr.ph.i21:                                       ; preds = %.preheader.i18
  %95 = shl nuw i64 %.06.i17, 4
  %96 = shl nuw i64 %.06.i17, 1
  %97 = add i64 %lsr.iv33, %95
  %98 = add nuw i64 %lsr.iv33, %92
  br label %102

.loopexit.i23:                                    ; preds = %109, %105, %.preheader..loopexit_crit_edge.i20
  %.pre-phi.i22 = phi i64 [ %.pre.i19, %.preheader..loopexit_crit_edge.i20 ], [ %96, %109 ], [ %96, %105 ]
  %99 = icmp ult i64 %.pre-phi.i22, %78
  %100 = icmp ule i64 %.pre-phi.i22, %3
  %101 = select i1 %99, i1 %100, i1 false
  br i1 %101, label %.preheader.i18, label %sort.tail_merge__anon_16227.exit25

102:                                              ; preds = %105, %.lr.ph.i21
  %lsr.iv37 = phi i64 [ %lsr.iv.next38, %105 ], [ 0, %.lr.ph.i21 ]
  %lsr.iv35 = phi i64 [ %lsr.iv.next36, %105 ], [ %97, %.lr.ph.i21 ]
  %.0145.i24 = phi ptr [ %uglygep17, %.lr.ph.i21 ], [ %106, %105 ]
  %103 = ptrtoint ptr %uglygep32 to i64
  %104 = icmp ult i64 %lsr.iv35, %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  tail call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %.0145.i24, i64 %96, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  %106 = getelementptr inbounds i8, ptr %.0145.i24, i64 %95
  %lsr.iv.next36 = add i64 %lsr.iv35, %95
  %lsr.iv.next38 = add i64 %lsr.iv37, %95
  %107 = add i64 %98, %lsr.iv.next38
  %108 = icmp ult i64 %107, %88
  br i1 %108, label %102, label %.loopexit.i23

109:                                              ; preds = %102
  %110 = sub i64 %90, %lsr.iv37
  %111 = lshr i64 %110, 3
  tail call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %.0145.i24, i64 %111, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  br label %.loopexit.i23

sort.tail_merge__anon_16227.exit25:               ; preds = %.loopexit.i23, %76
  %112 = icmp ule i64 %18, %1
  %113 = icmp ule i64 %18, %3
  %114 = select i1 %112, i1 %113, i1 false
  br i1 %114, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = shl i64 %1, 3
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  %11 = shl nuw i64 %4, 1
  %12 = icmp uge i64 %11, %1
  %13 = sub i64 %1, %4
  %14 = icmp ule i64 %13, %3
  %15 = select i1 %12, i1 %14, i1 false
  br i1 %15, label %17, label %.preheader1

.preheader1:                                      ; preds = %8
  %16 = icmp ugt i64 %1, %4
  br i1 %16, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader1
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader1
  ret void

17:                                               ; preds = %8
  tail call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.0177 = phi i64 [ %4, %.preheader.lr.ph ], [ %27, %.loopexit ]
  %18 = ptrtoint ptr %0 to i64
  %19 = ptrtoint ptr %10 to i64
  %20 = shl nuw i64 %.0177, 3
  %21 = add nuw i64 %20, %18
  %22 = icmp ult i64 %21, %19
  br i1 %22, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %23 = ptrtoint ptr %0 to i64
  %24 = shl nuw i64 %.0177, 4
  %25 = add i64 %23, %24
  %26 = add i64 %23, %20
  br label %29

.loopexit:                                        ; preds = %37, %33, %.preheader
  %27 = shl nuw i64 %.0177, 1
  %28 = icmp ult i64 %27, %1
  br i1 %28, label %.preheader, label %common.ret

29:                                               ; preds = %33, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %33 ]
  %30 = ptrtoint ptr %10 to i64
  %uglygep4 = getelementptr i8, ptr %0, i64 %lsr.iv
  %31 = add i64 %25, %lsr.iv
  %32 = icmp ult i64 %31, %30
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = ptrtoint ptr %10 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16230(ptr nonnull align 1 %uglygep4, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %.0177, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  %lsr.iv.next = add i64 %lsr.iv, %24
  %35 = add i64 %26, %lsr.iv.next
  %36 = icmp ult i64 %35, %34
  br i1 %36, label %29, label %.loopexit

37:                                               ; preds = %29
  %38 = sub i64 %9, %lsr.iv
  %39 = lshr i64 %38, 3
  %40 = sub nuw i64 %39, %.0177
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16230(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %40, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14500(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4) unnamed_addr #4 {
  %6 = alloca [49152 x i8], align 8
  %7 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %6, i64 512, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %6, i64 512, i64 %7, ptr nonnull readonly align 1 %2, ptr align 1 %3, ptr nonnull readonly align 1 %4)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4) unnamed_addr #4 {
  %6 = icmp ult i64 %1, 8
  br i1 %6, label %7, label %428

common.ret:                                       ; preds = %453, %.cont110.i.i, %289, %sort.parity_swap_six__anon_16498.exit.i, %135, %95, %70, %46, %19, %9, %7, %7
  ret void

7:                                                ; preds = %5
  switch i64 %1, label %8 [
    i64 2, label %9
    i64 3, label %19
    i64 4, label %46
    i64 5, label %95
    i64 6, label %184
    i64 7, label %289
    i64 1, label %common.ret
    i64 0, label %common.ret
  ]

8:                                                ; preds = %7
  unreachable

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load ptr, ptr %0, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %3(ptr align 1 %4, ptr align 1 %11, ptr align 1 %12) #18
  %14 = icmp eq i8 %13, 1
  %..i = select i1 %14, i64 8, i64 0
  %15 = select i1 %14, i64 0, i64 8
  %sunkaddr = getelementptr inbounds i8, ptr %0, i64 %15
  %16 = load i64, ptr %sunkaddr, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 %..i
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %0, align 8
  store i64 %16, ptr %10, align 8
  br label %common.ret

19:                                               ; preds = %7
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  %21 = load ptr, ptr %0, align 8
  %22 = load ptr, ptr %20, align 8
  %23 = tail call i8 %3(ptr align 1 %4, ptr align 1 %21, ptr align 1 %22) #18
  %24 = icmp eq i8 %23, 1
  %.1.i = select i1 %24, i64 8, i64 0
  %25 = select i1 %24, i64 0, i64 8
  %sunkaddr1 = getelementptr inbounds i8, ptr %0, i64 %25
  %26 = load i64, ptr %sunkaddr1, align 8
  %27 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  %28 = load i64, ptr %27, align 8
  store i64 %28, ptr %0, align 8
  store i64 %26, ptr %20, align 8
  %29 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i = inttoptr i64 %26 to ptr
  %30 = load ptr, ptr %29, align 8
  %31 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i, ptr align 1 %30) #18
  %32 = icmp eq i8 %31, 1
  %33 = select i1 %32, i64 8, i64 0
  %34 = select i1 %32, i64 8, i64 16
  %sunkaddr2 = getelementptr inbounds i8, ptr %0, i64 %34
  %35 = load i64, ptr %sunkaddr2, align 8
  %36 = getelementptr inbounds i8, ptr %20, i64 %33
  %37 = load i64, ptr %36, align 8
  store i64 %37, ptr %20, align 8
  store i64 %35, ptr %29, align 8
  %38 = load ptr, ptr %0, align 8
  %.cast64.i = inttoptr i64 %37 to ptr
  %39 = tail call i8 %3(ptr align 1 %4, ptr align 1 %38, ptr align 1 %.cast64.i) #18
  %40 = icmp eq i8 %39, 1
  %41 = select i1 %40, i64 8, i64 0
  %42 = select i1 %40, i64 0, i64 8
  %sunkaddr3 = getelementptr inbounds i8, ptr %0, i64 %42
  %43 = load i64, ptr %sunkaddr3, align 8
  %44 = getelementptr inbounds i8, ptr %0, i64 %41
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %0, align 8
  store i64 %43, ptr %20, align 8
  br label %common.ret

46:                                               ; preds = %7
  %47 = getelementptr inbounds i8, ptr %0, i64 8
  %48 = load ptr, ptr %0, align 8
  %49 = load ptr, ptr %47, align 8
  %50 = tail call i8 %3(ptr align 1 %4, ptr align 1 %48, ptr align 1 %49) #18
  %51 = icmp eq i8 %50, 1
  %..i.i = select i1 %51, i64 8, i64 0
  %52 = select i1 %51, i64 0, i64 8
  %sunkaddr4 = getelementptr inbounds i8, ptr %0, i64 %52
  %53 = load i64, ptr %sunkaddr4, align 8
  %54 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  %55 = load i64, ptr %54, align 8
  store i64 %55, ptr %0, align 8
  store i64 %53, ptr %47, align 8
  %56 = getelementptr inbounds i8, ptr %0, i64 16
  %57 = getelementptr inbounds i8, ptr %0, i64 24
  %58 = load ptr, ptr %56, align 8
  %59 = load ptr, ptr %57, align 8
  %60 = tail call i8 %3(ptr align 1 %4, ptr align 1 %58, ptr align 1 %59) #18
  %61 = icmp eq i8 %60, 1
  %62 = select i1 %61, i64 8, i64 0
  %63 = select i1 %61, i64 16, i64 24
  %sunkaddr5 = getelementptr inbounds i8, ptr %0, i64 %63
  %64 = load i64, ptr %sunkaddr5, align 8
  %65 = getelementptr inbounds i8, ptr %56, i64 %62
  %66 = load i64, ptr %65, align 8
  store i64 %66, ptr %56, align 8
  store i64 %64, ptr %57, align 8
  %67 = load ptr, ptr %47, align 8
  %.cast.i.i = inttoptr i64 %66 to ptr
  %68 = tail call i8 %3(ptr align 1 %4, ptr align 1 %67, ptr align 1 %.cast.i.i) #18
  %69 = icmp eq i8 %68, 1
  br i1 %69, label %70, label %common.ret

70:                                               ; preds = %46
  %sunkaddr6 = getelementptr inbounds i8, ptr %0, i64 8
  %71 = load i64, ptr %sunkaddr6, align 8
  %sunkaddr7 = getelementptr inbounds i8, ptr %0, i64 16
  %72 = load i64, ptr %sunkaddr7, align 8
  store i64 %72, ptr %sunkaddr6, align 8
  store i64 %71, ptr %sunkaddr7, align 8
  %73 = load ptr, ptr %0, align 8
  %.cast1.i.i = inttoptr i64 %72 to ptr
  %74 = tail call i8 %3(ptr align 1 %4, ptr align 1 %73, ptr align 1 %.cast1.i.i) #18
  %75 = icmp eq i8 %74, 1
  %.1.i.i = select i1 %75, i64 8, i64 0
  %76 = select i1 %75, i64 0, i64 8
  %sunkaddr8 = getelementptr inbounds i8, ptr %0, i64 %76
  %77 = load i64, ptr %sunkaddr8, align 8
  %78 = getelementptr inbounds i8, ptr %0, i64 %.1.i.i
  %79 = load i64, ptr %78, align 8
  store i64 %79, ptr %0, align 8
  store i64 %77, ptr %sunkaddr6, align 8
  %80 = load ptr, ptr %sunkaddr7, align 8
  %sunkaddr9 = getelementptr inbounds i8, ptr %0, i64 24
  %81 = load ptr, ptr %sunkaddr9, align 8
  %82 = tail call i8 %3(ptr align 1 %4, ptr align 1 %80, ptr align 1 %81) #18
  %83 = icmp eq i8 %82, 1
  %84 = select i1 %83, i64 8, i64 0
  %85 = select i1 %83, i64 16, i64 24
  %sunkaddr10 = getelementptr inbounds i8, ptr %0, i64 %85
  %86 = load i64, ptr %sunkaddr10, align 8
  %sunkaddr11 = getelementptr inbounds i8, ptr %0, i64 %84
  %sunkaddr12 = getelementptr inbounds i8, ptr %sunkaddr11, i64 16
  %87 = load i64, ptr %sunkaddr12, align 8
  store i64 %87, ptr %sunkaddr7, align 8
  store i64 %86, ptr %sunkaddr9, align 8
  %88 = load ptr, ptr %sunkaddr6, align 8
  %.cast2.i.i = inttoptr i64 %87 to ptr
  %89 = tail call i8 %3(ptr align 1 %4, ptr align 1 %88, ptr align 1 %.cast2.i.i) #18
  %90 = icmp eq i8 %89, 1
  %91 = select i1 %90, i64 8, i64 0
  %92 = select i1 %90, i64 8, i64 16
  %sunkaddr13 = getelementptr inbounds i8, ptr %0, i64 %92
  %93 = load i64, ptr %sunkaddr13, align 8
  %sunkaddr14 = getelementptr inbounds i8, ptr %0, i64 %91
  %sunkaddr15 = getelementptr inbounds i8, ptr %sunkaddr14, i64 8
  %94 = load i64, ptr %sunkaddr15, align 8
  store i64 %94, ptr %sunkaddr6, align 8
  store i64 %93, ptr %sunkaddr7, align 8
  br label %common.ret

95:                                               ; preds = %7
  %96 = getelementptr inbounds i8, ptr %0, i64 8
  %97 = load ptr, ptr %0, align 8
  %98 = load ptr, ptr %96, align 8
  %99 = tail call i8 %3(ptr align 1 %4, ptr align 1 %97, ptr align 1 %98) #18
  %100 = icmp eq i8 %99, 1
  %..i9.i = select i1 %100, i64 8, i64 0
  %101 = select i1 %100, i64 0, i64 8
  %sunkaddr16 = getelementptr inbounds i8, ptr %0, i64 %101
  %102 = load i64, ptr %sunkaddr16, align 8
  %103 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  %104 = load i64, ptr %103, align 8
  store i64 %104, ptr %0, align 8
  store i64 %102, ptr %96, align 8
  %105 = getelementptr inbounds i8, ptr %0, i64 16
  %106 = getelementptr inbounds i8, ptr %0, i64 24
  %107 = load ptr, ptr %105, align 8
  %108 = load ptr, ptr %106, align 8
  %109 = tail call i8 %3(ptr align 1 %4, ptr align 1 %107, ptr align 1 %108) #18
  %110 = icmp eq i8 %109, 1
  %111 = select i1 %110, i64 8, i64 0
  %112 = select i1 %110, i64 16, i64 24
  %sunkaddr17 = getelementptr inbounds i8, ptr %0, i64 %112
  %113 = load i64, ptr %sunkaddr17, align 8
  %114 = getelementptr inbounds i8, ptr %105, i64 %111
  %115 = load i64, ptr %114, align 8
  store i64 %115, ptr %105, align 8
  store i64 %113, ptr %106, align 8
  %116 = load ptr, ptr %96, align 8
  %.cast.i10.i = inttoptr i64 %115 to ptr
  %117 = tail call i8 %3(ptr align 1 %4, ptr align 1 %116, ptr align 1 %.cast.i10.i) #18
  %118 = icmp eq i8 %117, 1
  %119 = select i1 %118, i64 8, i64 0
  %120 = select i1 %118, i64 8, i64 16
  %sunkaddr18 = getelementptr inbounds i8, ptr %0, i64 %120
  %121 = load i64, ptr %sunkaddr18, align 8
  %122 = getelementptr inbounds i8, ptr %96, i64 %119
  %123 = load i64, ptr %122, align 8
  store i64 %123, ptr %96, align 8
  store i64 %121, ptr %105, align 8
  %124 = zext i1 %118 to i8
  %125 = getelementptr inbounds i8, ptr %0, i64 32
  %126 = load ptr, ptr %106, align 8
  %127 = load ptr, ptr %125, align 8
  %128 = tail call i8 %3(ptr align 1 %4, ptr align 1 %126, ptr align 1 %127) #18
  %129 = icmp eq i8 %128, 1
  %130 = select i1 %129, i64 8, i64 0
  %131 = select i1 %129, i64 24, i64 32
  %sunkaddr19 = getelementptr inbounds i8, ptr %0, i64 %131
  %132 = load i64, ptr %sunkaddr19, align 8
  %133 = getelementptr inbounds i8, ptr %106, i64 %130
  %134 = load i64, ptr %133, align 8
  store i64 %134, ptr %106, align 8
  store i64 %132, ptr %125, align 8
  %.neg.i.i = sext i1 %129 to i8
  %.not.i.i = icmp eq i8 %124, %.neg.i.i
  br i1 %.not.i.i, label %common.ret, label %135

135:                                              ; preds = %95
  %136 = load ptr, ptr %0, align 8
  %sunkaddr20 = getelementptr inbounds i8, ptr %0, i64 8
  %137 = load ptr, ptr %sunkaddr20, align 8
  %138 = tail call i8 %3(ptr align 1 %4, ptr align 1 %136, ptr align 1 %137) #18
  %139 = icmp eq i8 %138, 1
  %.1.i11.i = select i1 %139, i64 8, i64 0
  %140 = select i1 %139, i64 0, i64 8
  %sunkaddr21 = getelementptr inbounds i8, ptr %0, i64 %140
  %141 = load i64, ptr %sunkaddr21, align 8
  %142 = getelementptr inbounds i8, ptr %0, i64 %.1.i11.i
  %143 = load i64, ptr %142, align 8
  store i64 %143, ptr %0, align 8
  store i64 %141, ptr %sunkaddr20, align 8
  %sunkaddr22 = getelementptr inbounds i8, ptr %0, i64 16
  %144 = load ptr, ptr %sunkaddr22, align 8
  %sunkaddr23 = getelementptr inbounds i8, ptr %0, i64 24
  %145 = load ptr, ptr %sunkaddr23, align 8
  %146 = tail call i8 %3(ptr align 1 %4, ptr align 1 %144, ptr align 1 %145) #18
  %147 = icmp eq i8 %146, 1
  %148 = select i1 %147, i64 8, i64 0
  %149 = select i1 %147, i64 16, i64 24
  %sunkaddr24 = getelementptr inbounds i8, ptr %0, i64 %149
  %150 = load i64, ptr %sunkaddr24, align 8
  %sunkaddr25 = getelementptr inbounds i8, ptr %0, i64 %148
  %sunkaddr26 = getelementptr inbounds i8, ptr %sunkaddr25, i64 16
  %151 = load i64, ptr %sunkaddr26, align 8
  store i64 %151, ptr %sunkaddr22, align 8
  store i64 %150, ptr %sunkaddr23, align 8
  %152 = load ptr, ptr %sunkaddr20, align 8
  %.cast1.i12.i = inttoptr i64 %151 to ptr
  %153 = tail call i8 %3(ptr align 1 %4, ptr align 1 %152, ptr align 1 %.cast1.i12.i) #18
  %154 = icmp eq i8 %153, 1
  %155 = select i1 %154, i64 8, i64 0
  %156 = select i1 %154, i64 8, i64 16
  %sunkaddr27 = getelementptr inbounds i8, ptr %0, i64 %156
  %157 = load i64, ptr %sunkaddr27, align 8
  %sunkaddr28 = getelementptr inbounds i8, ptr %0, i64 %155
  %sunkaddr29 = getelementptr inbounds i8, ptr %sunkaddr28, i64 8
  %158 = load i64, ptr %sunkaddr29, align 8
  store i64 %158, ptr %sunkaddr20, align 8
  store i64 %157, ptr %sunkaddr22, align 8
  %159 = load ptr, ptr %sunkaddr23, align 8
  %sunkaddr30 = getelementptr inbounds i8, ptr %0, i64 32
  %160 = load ptr, ptr %sunkaddr30, align 8
  %161 = tail call i8 %3(ptr align 1 %4, ptr align 1 %159, ptr align 1 %160) #18
  %162 = icmp eq i8 %161, 1
  %163 = select i1 %162, i64 8, i64 0
  %164 = select i1 %162, i64 24, i64 32
  %sunkaddr31 = getelementptr inbounds i8, ptr %0, i64 %164
  %165 = load i64, ptr %sunkaddr31, align 8
  %sunkaddr32 = getelementptr inbounds i8, ptr %0, i64 %163
  %sunkaddr33 = getelementptr inbounds i8, ptr %sunkaddr32, i64 24
  %166 = load i64, ptr %sunkaddr33, align 8
  store i64 %166, ptr %sunkaddr23, align 8
  store i64 %165, ptr %sunkaddr30, align 8
  %167 = load ptr, ptr %0, align 8
  %168 = load ptr, ptr %sunkaddr20, align 8
  %169 = tail call i8 %3(ptr align 1 %4, ptr align 1 %167, ptr align 1 %168) #18
  %170 = icmp eq i8 %169, 1
  %171 = select i1 %170, i64 8, i64 0
  %172 = select i1 %170, i64 0, i64 8
  %sunkaddr34 = getelementptr inbounds i8, ptr %0, i64 %172
  %173 = load i64, ptr %sunkaddr34, align 8
  %174 = getelementptr inbounds i8, ptr %0, i64 %171
  %175 = load i64, ptr %174, align 8
  store i64 %175, ptr %0, align 8
  store i64 %173, ptr %sunkaddr20, align 8
  %176 = load ptr, ptr %sunkaddr22, align 8
  %177 = load ptr, ptr %sunkaddr23, align 8
  %178 = tail call i8 %3(ptr align 1 %4, ptr align 1 %176, ptr align 1 %177) #18
  %179 = icmp eq i8 %178, 1
  %180 = select i1 %179, i64 8, i64 0
  %181 = select i1 %179, i64 16, i64 24
  %sunkaddr35 = getelementptr inbounds i8, ptr %0, i64 %181
  %182 = load i64, ptr %sunkaddr35, align 8
  %sunkaddr36 = getelementptr inbounds i8, ptr %0, i64 %180
  %sunkaddr37 = getelementptr inbounds i8, ptr %sunkaddr36, i64 16
  %183 = load i64, ptr %sunkaddr37, align 8
  store i64 %183, ptr %sunkaddr22, align 8
  store i64 %182, ptr %sunkaddr23, align 8
  br label %common.ret

184:                                              ; preds = %7
  %185 = getelementptr inbounds i8, ptr %0, i64 8
  %186 = load ptr, ptr %0, align 8
  %187 = load ptr, ptr %185, align 8
  %188 = tail call i8 %3(ptr align 1 %4, ptr align 1 %186, ptr align 1 %187) #18
  %189 = icmp eq i8 %188, 1
  %..i13.i = select i1 %189, i64 8, i64 0
  %190 = select i1 %189, i64 0, i64 8
  %sunkaddr38 = getelementptr inbounds i8, ptr %0, i64 %190
  %191 = load i64, ptr %sunkaddr38, align 8
  %192 = getelementptr inbounds i8, ptr %0, i64 %..i13.i
  %193 = load i64, ptr %192, align 8
  store i64 %193, ptr %0, align 8
  store i64 %191, ptr %185, align 8
  %194 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i14.i = inttoptr i64 %191 to ptr
  %195 = load ptr, ptr %194, align 8
  %196 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i14.i, ptr align 1 %195) #18
  %197 = icmp eq i8 %196, 1
  %198 = select i1 %197, i64 8, i64 0
  %199 = select i1 %197, i64 8, i64 16
  %sunkaddr39 = getelementptr inbounds i8, ptr %0, i64 %199
  %200 = load i64, ptr %sunkaddr39, align 8
  %201 = getelementptr inbounds i8, ptr %185, i64 %198
  %202 = load i64, ptr %201, align 8
  store i64 %202, ptr %185, align 8
  store i64 %200, ptr %194, align 8
  %203 = getelementptr inbounds i8, ptr %0, i64 32
  %204 = getelementptr inbounds i8, ptr %0, i64 40
  %205 = load ptr, ptr %203, align 8
  %206 = load ptr, ptr %204, align 8
  %207 = tail call i8 %3(ptr align 1 %4, ptr align 1 %205, ptr align 1 %206) #18
  %208 = icmp eq i8 %207, 1
  %209 = select i1 %208, i64 8, i64 0
  %210 = select i1 %208, i64 32, i64 40
  %sunkaddr40 = getelementptr inbounds i8, ptr %0, i64 %210
  %211 = load i64, ptr %sunkaddr40, align 8
  %212 = getelementptr inbounds i8, ptr %203, i64 %209
  %213 = load i64, ptr %212, align 8
  store i64 %213, ptr %203, align 8
  store i64 %211, ptr %204, align 8
  %214 = getelementptr inbounds i8, ptr %0, i64 24
  %215 = load ptr, ptr %214, align 8
  %.cast1.i15.i = inttoptr i64 %213 to ptr
  %216 = tail call i8 %3(ptr align 1 %4, ptr align 1 %215, ptr align 1 %.cast1.i15.i) #18
  %217 = icmp eq i8 %216, 1
  %218 = select i1 %217, i64 8, i64 0
  %219 = select i1 %217, i64 24, i64 32
  %sunkaddr41 = getelementptr inbounds i8, ptr %0, i64 %219
  %220 = load i64, ptr %sunkaddr41, align 8
  %221 = getelementptr inbounds i8, ptr %214, i64 %218
  %222 = load i64, ptr %221, align 8
  store i64 %222, ptr %214, align 8
  store i64 %220, ptr %203, align 8
  %223 = load ptr, ptr %194, align 8
  %.cast2.i16.i = inttoptr i64 %222 to ptr
  %224 = tail call i8 %3(ptr align 1 %4, ptr align 1 %223, ptr align 1 %.cast2.i16.i) #18
  %.not.i17.i = icmp eq i8 %224, 1
  %225 = load ptr, ptr %0, align 8
  %226 = load ptr, ptr %185, align 8
  %227 = tail call i8 %3(ptr align 1 %4, ptr align 1 %225, ptr align 1 %226) #18
  %.not113.i.i = icmp eq i8 %227, 1
  %.2.i.i = select i1 %.not113.i.i, i64 8, i64 0
  br i1 %.not.i17.i, label %.cont96.i.i, label %228

228:                                              ; preds = %184
  %229 = icmp eq i8 %227, 1
  %230 = select i1 %229, i64 0, i64 8
  %sunkaddr42 = getelementptr inbounds i8, ptr %0, i64 %230
  %231 = load i64, ptr %sunkaddr42, align 8
  %232 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  %233 = load i64, ptr %232, align 8
  store i64 %233, ptr %0, align 8
  %sunkaddr43 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %231, ptr %sunkaddr43, align 8
  %sunkaddr44 = getelementptr inbounds i8, ptr %0, i64 32
  %234 = load ptr, ptr %sunkaddr44, align 8
  %sunkaddr45 = getelementptr inbounds i8, ptr %0, i64 40
  %235 = load ptr, ptr %sunkaddr45, align 8
  %236 = tail call i8 %3(ptr align 1 %4, ptr align 1 %234, ptr align 1 %235) #18
  %237 = icmp eq i8 %236, 1
  %238 = select i1 %237, i64 8, i64 0
  %239 = select i1 %237, i64 32, i64 40
  %sunkaddr46 = getelementptr inbounds i8, ptr %0, i64 %239
  %240 = load i64, ptr %sunkaddr46, align 8
  %sunkaddr47 = getelementptr inbounds i8, ptr %0, i64 %238
  %sunkaddr48 = getelementptr inbounds i8, ptr %sunkaddr47, i64 32
  %241 = load i64, ptr %sunkaddr48, align 8
  store i64 %241, ptr %sunkaddr44, align 8
  br label %sort.parity_swap_six__anon_16498.exit.i

.cont96.i.i:                                      ; preds = %184
  %242 = icmp eq i8 %227, 1
  %.3.i.i = select i1 %242, i64 0, i64 8
  %243 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  %244 = load i64, ptr %243, align 8
  store i64 %244, ptr %2, align 8
  %245 = getelementptr inbounds i8, ptr %2, i64 8
  %246 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  %247 = load i64, ptr %246, align 8
  store i64 %247, ptr %245, align 8
  %248 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr49 = getelementptr inbounds i8, ptr %0, i64 16
  %249 = load i64, ptr %sunkaddr49, align 8
  store i64 %249, ptr %248, align 8
  %sunkaddr50 = getelementptr inbounds i8, ptr %0, i64 32
  %250 = load ptr, ptr %sunkaddr50, align 8
  %sunkaddr51 = getelementptr inbounds i8, ptr %0, i64 40
  %251 = load ptr, ptr %sunkaddr51, align 8
  %252 = tail call i8 %3(ptr align 1 %4, ptr align 1 %250, ptr align 1 %251) #18
  %.not114.i.i = icmp eq i8 %252, 1
  %.4.i.i = select i1 %.not114.i.i, i64 8, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 8
  %253 = getelementptr inbounds i8, ptr %2, i64 32
  %sunkaddr52 = getelementptr inbounds i8, ptr %0, i64 %.4.i.i
  %sunkaddr53 = getelementptr inbounds i8, ptr %sunkaddr52, i64 32
  %254 = load i64, ptr %sunkaddr53, align 8
  store i64 %254, ptr %253, align 8
  %255 = getelementptr inbounds i8, ptr %2, i64 40
  %sunkaddr54 = getelementptr inbounds i8, ptr %0, i64 %.5.i.i
  %sunkaddr55 = getelementptr inbounds i8, ptr %sunkaddr54, i64 32
  %256 = load i64, ptr %sunkaddr55, align 8
  store i64 %256, ptr %255, align 8
  %257 = getelementptr inbounds i8, ptr %2, i64 24
  %sunkaddr56 = getelementptr inbounds i8, ptr %0, i64 24
  %258 = load i64, ptr %sunkaddr56, align 8
  store i64 %258, ptr %257, align 8
  %259 = load ptr, ptr %2, align 8
  %.cast3.i.i = inttoptr i64 %258 to ptr
  %260 = tail call i8 %3(ptr align 1 %4, ptr align 1 %259, ptr align 1 %.cast3.i.i) #18
  %.not115.i.i = icmp eq i8 %260, 1
  %.sroa.speculated92.i.i57 = select i1 %.not115.i.i, i64 24, i64 0
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %257, ptr %2
  %sunkaddr58 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated92.i.i57
  %261 = load i64, ptr %sunkaddr58, align 8
  store i64 %261, ptr %0, align 8
  %262 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 8
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %262
  %.119.i.i = select i1 %.not115.i.i, ptr %262, ptr %257
  %263 = load ptr, ptr %.118.i.i, align 8
  %264 = load ptr, ptr %.119.i.i, align 8
  %265 = tail call i8 %3(ptr align 1 %4, ptr align 1 %263, ptr align 1 %264) #18
  %.not116.i.i = icmp eq i8 %265, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  %266 = load i64, ptr %.sroa.speculated83.i.i, align 8
  %sunkaddr59 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %266, ptr %sunkaddr59, align 8
  %267 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 8
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %267
  %.1106.i.i = select i1 %.not116.i.i, ptr %267, ptr %.119.i.i
  %268 = load ptr, ptr %.1110.i.i, align 8
  %269 = load ptr, ptr %.1106.i.i, align 8
  %270 = tail call i8 %3(ptr align 1 %4, ptr align 1 %268, ptr align 1 %269) #18
  %.not117.i.i = icmp eq i8 %270, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  %271 = load i64, ptr %.sroa.speculated74.i.i, align 8
  store i64 %271, ptr %sunkaddr49, align 8
  %272 = load ptr, ptr %248, align 8
  %273 = load ptr, ptr %255, align 8
  %274 = tail call i8 %3(ptr align 1 %4, ptr align 1 %272, ptr align 1 %273) #18
  %275 = icmp eq i8 %274, 1
  %.sroa.speculated65.i.i60 = select i1 %275, i64 16, i64 40
  %.sroa.speculated65.i.i = select i1 %275, ptr %248, ptr %255
  %sunkaddr61 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated65.i.i60
  %276 = load i64, ptr %sunkaddr61, align 8
  store i64 %276, ptr %sunkaddr51, align 8
  %277 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 -8
  %.2111.i.i = select i1 %275, ptr %277, ptr %248
  %.2107.i.i = select i1 %275, ptr %255, ptr %277
  %278 = load ptr, ptr %.2111.i.i, align 8
  %279 = load ptr, ptr %.2107.i.i, align 8
  %280 = tail call i8 %3(ptr align 1 %4, ptr align 1 %278, ptr align 1 %279) #18
  %281 = icmp eq i8 %280, 1
  %.sroa.speculated.i.i = select i1 %281, ptr %.2111.i.i, ptr %.2107.i.i
  %282 = load i64, ptr %.sroa.speculated.i.i, align 8
  store i64 %282, ptr %sunkaddr50, align 8
  %283 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 -8
  %.3112.i.i = select i1 %281, ptr %283, ptr %.2111.i.i
  %.3108.i.i = select i1 %281, ptr %.2107.i.i, ptr %283
  %284 = load ptr, ptr %.3112.i.i, align 8
  %285 = load ptr, ptr %.3108.i.i, align 8
  %286 = tail call i8 %3(ptr align 1 %4, ptr align 1 %284, ptr align 1 %285) #18
  %287 = icmp eq i8 %286, 1
  %288 = select i1 %287, ptr %.3112.i.i, ptr %.3108.i.i
  %.sink5.i.sroa.speculate.load..cont96.i.i = load i64, ptr %288, align 8
  br label %sort.parity_swap_six__anon_16498.exit.i

sort.parity_swap_six__anon_16498.exit.i:          ; preds = %.cont96.i.i, %228
  %.sink5.i.sroa.speculated.i = phi i64 [ %.sink5.i.sroa.speculate.load..cont96.i.i, %.cont96.i.i ], [ %240, %228 ]
  %.sink4.i.i = phi ptr [ %214, %.cont96.i.i ], [ %204, %228 ]
  store i64 %.sink5.i.sroa.speculated.i, ptr %.sink4.i.i, align 8
  br label %common.ret

289:                                              ; preds = %7
  %290 = getelementptr inbounds i8, ptr %0, i64 8
  %291 = load ptr, ptr %0, align 8
  %292 = load ptr, ptr %290, align 8
  %293 = tail call i8 %3(ptr align 1 %4, ptr align 1 %291, ptr align 1 %292) #18
  %294 = icmp eq i8 %293, 1
  %..i18.i = select i1 %294, i64 8, i64 0
  %295 = select i1 %294, i64 0, i64 8
  %sunkaddr62 = getelementptr inbounds i8, ptr %0, i64 %295
  %296 = load i64, ptr %sunkaddr62, align 8
  %297 = getelementptr inbounds i8, ptr %0, i64 %..i18.i
  %298 = load i64, ptr %297, align 8
  store i64 %298, ptr %0, align 8
  store i64 %296, ptr %290, align 8
  %299 = getelementptr inbounds i8, ptr %0, i64 16
  %300 = getelementptr inbounds i8, ptr %0, i64 24
  %301 = load ptr, ptr %299, align 8
  %302 = load ptr, ptr %300, align 8
  %303 = tail call i8 %3(ptr align 1 %4, ptr align 1 %301, ptr align 1 %302) #18
  %304 = icmp eq i8 %303, 1
  %305 = select i1 %304, i64 8, i64 0
  %306 = select i1 %304, i64 16, i64 24
  %sunkaddr63 = getelementptr inbounds i8, ptr %0, i64 %306
  %307 = load i64, ptr %sunkaddr63, align 8
  %308 = getelementptr inbounds i8, ptr %299, i64 %305
  %309 = load i64, ptr %308, align 8
  store i64 %309, ptr %299, align 8
  store i64 %307, ptr %300, align 8
  %310 = getelementptr inbounds i8, ptr %0, i64 32
  %311 = getelementptr inbounds i8, ptr %0, i64 40
  %312 = load ptr, ptr %310, align 8
  %313 = load ptr, ptr %311, align 8
  %314 = tail call i8 %3(ptr align 1 %4, ptr align 1 %312, ptr align 1 %313) #18
  %315 = icmp eq i8 %314, 1
  %316 = select i1 %315, i64 8, i64 0
  %317 = select i1 %315, i64 32, i64 40
  %sunkaddr64 = getelementptr inbounds i8, ptr %0, i64 %317
  %318 = load i64, ptr %sunkaddr64, align 8
  %319 = getelementptr inbounds i8, ptr %310, i64 %316
  %320 = load i64, ptr %319, align 8
  store i64 %320, ptr %310, align 8
  store i64 %318, ptr %311, align 8
  %321 = load ptr, ptr %290, align 8
  %322 = load ptr, ptr %299, align 8
  %323 = tail call i8 %3(ptr align 1 %4, ptr align 1 %321, ptr align 1 %322) #18
  %324 = icmp eq i8 %323, 1
  %325 = select i1 %324, i64 8, i64 0
  %326 = select i1 %324, i64 8, i64 16
  %sunkaddr65 = getelementptr inbounds i8, ptr %0, i64 %326
  %327 = load i64, ptr %sunkaddr65, align 8
  %328 = getelementptr inbounds i8, ptr %290, i64 %325
  %329 = load i64, ptr %328, align 8
  store i64 %329, ptr %290, align 8
  store i64 %327, ptr %299, align 8
  %330 = zext i1 %324 to i8
  %331 = load ptr, ptr %300, align 8
  %332 = load ptr, ptr %310, align 8
  %333 = tail call i8 %3(ptr align 1 %4, ptr align 1 %331, ptr align 1 %332) #18
  %334 = icmp eq i8 %333, 1
  %335 = select i1 %334, i64 8, i64 0
  %336 = select i1 %334, i64 24, i64 32
  %sunkaddr66 = getelementptr inbounds i8, ptr %0, i64 %336
  %337 = load i64, ptr %sunkaddr66, align 8
  %338 = getelementptr inbounds i8, ptr %300, i64 %335
  %339 = load i64, ptr %338, align 8
  store i64 %339, ptr %300, align 8
  store i64 %337, ptr %310, align 8
  %340 = zext i1 %334 to i8
  %341 = add nuw nsw i8 %340, %330
  %342 = getelementptr inbounds i8, ptr %0, i64 48
  %343 = load ptr, ptr %311, align 8
  %344 = load ptr, ptr %342, align 8
  %345 = tail call i8 %3(ptr align 1 %4, ptr align 1 %343, ptr align 1 %344) #18
  %346 = icmp eq i8 %345, 1
  %347 = select i1 %346, i64 8, i64 0
  %348 = select i1 %346, i64 40, i64 48
  %sunkaddr67 = getelementptr inbounds i8, ptr %0, i64 %348
  %349 = load i64, ptr %sunkaddr67, align 8
  %350 = getelementptr inbounds i8, ptr %311, i64 %347
  %351 = load i64, ptr %350, align 8
  store i64 %351, ptr %311, align 8
  store i64 %349, ptr %342, align 8
  %.neg.i19.i = sext i1 %346 to i8
  %352 = icmp eq i8 %341, %.neg.i19.i
  br i1 %352, label %common.ret, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %289
  %353 = inttoptr i64 %351 to ptr
  %sunkaddr68 = getelementptr inbounds i8, ptr %0, i64 32
  %354 = load ptr, ptr %sunkaddr68, align 8
  %355 = tail call i8 %3(ptr align 1 %4, ptr align 1 %354, ptr align 1 %353) #18
  %356 = icmp eq i8 %355, 1
  %.1.i20.i = select i1 %356, i64 8, i64 0
  %357 = select i1 %356, i64 32, i64 40
  %sunkaddr69 = getelementptr inbounds i8, ptr %0, i64 %357
  %358 = load i64, ptr %sunkaddr69, align 8
  %sunkaddr70 = getelementptr inbounds i8, ptr %0, i64 %.1.i20.i
  %sunkaddr71 = getelementptr inbounds i8, ptr %sunkaddr70, i64 32
  %359 = load i64, ptr %sunkaddr71, align 8
  store i64 %359, ptr %sunkaddr68, align 8
  %sunkaddr72 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 %358, ptr %sunkaddr72, align 8
  %360 = load ptr, ptr %0, align 8
  %sunkaddr73 = getelementptr inbounds i8, ptr %0, i64 8
  %361 = load ptr, ptr %sunkaddr73, align 8
  %362 = tail call i8 %3(ptr align 1 %4, ptr align 1 %360, ptr align 1 %361) #18
  %.not.i21.i = icmp eq i8 %362, 1
  %363 = select i1 %.not.i21.i, i64 8, i64 0
  %364 = select i1 %.not.i21.i, i64 0, i64 8
  %365 = getelementptr inbounds i8, ptr %0, i64 %363
  %366 = load i64, ptr %365, align 8
  store i64 %366, ptr %2, align 8
  %367 = getelementptr inbounds i8, ptr %2, i64 8
  %368 = getelementptr inbounds i8, ptr %0, i64 %364
  %369 = load i64, ptr %368, align 8
  store i64 %369, ptr %367, align 8
  %370 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr74 = getelementptr inbounds i8, ptr %0, i64 16
  %371 = load i64, ptr %sunkaddr74, align 8
  store i64 %371, ptr %370, align 8
  %sunkaddr75 = getelementptr inbounds i8, ptr %0, i64 24
  %372 = load ptr, ptr %sunkaddr75, align 8
  %373 = load ptr, ptr %sunkaddr68, align 8
  %374 = tail call i8 %3(ptr align 1 %4, ptr align 1 %372, ptr align 1 %373) #18
  %.not127.i.i = icmp eq i8 %374, 1
  %375 = select i1 %.not127.i.i, i64 8, i64 0
  %376 = select i1 %.not127.i.i, i64 0, i64 8
  %377 = getelementptr inbounds i8, ptr %2, i64 24
  %sunkaddr76 = getelementptr inbounds i8, ptr %0, i64 %375
  %sunkaddr77 = getelementptr inbounds i8, ptr %sunkaddr76, i64 24
  %378 = load i64, ptr %sunkaddr77, align 8
  store i64 %378, ptr %377, align 8
  %379 = getelementptr inbounds i8, ptr %2, i64 32
  %sunkaddr78 = getelementptr inbounds i8, ptr %0, i64 %376
  %sunkaddr79 = getelementptr inbounds i8, ptr %sunkaddr78, i64 24
  %380 = load i64, ptr %sunkaddr79, align 8
  store i64 %380, ptr %379, align 8
  %381 = load ptr, ptr %sunkaddr72, align 8
  %sunkaddr80 = getelementptr inbounds i8, ptr %0, i64 48
  %382 = load ptr, ptr %sunkaddr80, align 8
  %383 = tail call i8 %3(ptr align 1 %4, ptr align 1 %381, ptr align 1 %382) #18
  %.not128.i.i = icmp eq i8 %383, 1
  %384 = select i1 %.not128.i.i, i64 8, i64 0
  %385 = select i1 %.not128.i.i, i64 0, i64 8
  %386 = getelementptr inbounds i8, ptr %2, i64 40
  %sunkaddr81 = getelementptr inbounds i8, ptr %0, i64 %384
  %sunkaddr82 = getelementptr inbounds i8, ptr %sunkaddr81, i64 40
  %387 = load i64, ptr %sunkaddr82, align 8
  store i64 %387, ptr %386, align 8
  %388 = getelementptr inbounds i8, ptr %2, i64 48
  %sunkaddr83 = getelementptr inbounds i8, ptr %0, i64 %385
  %sunkaddr84 = getelementptr inbounds i8, ptr %sunkaddr83, i64 40
  %389 = load i64, ptr %sunkaddr84, align 8
  store i64 %389, ptr %388, align 8
  %390 = load ptr, ptr %2, align 8
  %391 = load ptr, ptr %377, align 8
  %392 = tail call i8 %3(ptr align 1 %4, ptr align 1 %390, ptr align 1 %391) #18
  %.not129.i.i = icmp eq i8 %392, 1
  %.sroa.speculated106.i.i85 = select i1 %.not129.i.i, i64 24, i64 0
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %377, ptr %2
  %sunkaddr86 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated106.i.i85
  %393 = load i64, ptr %sunkaddr86, align 8
  store i64 %393, ptr %0, align 8
  %394 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 8
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %394
  %.133.i.i = select i1 %.not129.i.i, ptr %394, ptr %377
  %395 = load ptr, ptr %.132.i.i, align 8
  %396 = load ptr, ptr %.133.i.i, align 8
  %397 = tail call i8 %3(ptr align 1 %4, ptr align 1 %395, ptr align 1 %396) #18
  %.not130.i.i = icmp eq i8 %397, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  %398 = load i64, ptr %.sroa.speculated97.i.i, align 8
  store i64 %398, ptr %sunkaddr73, align 8
  %399 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 8
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %399
  %.1121.i.i = select i1 %.not130.i.i, ptr %399, ptr %.133.i.i
  %400 = load ptr, ptr %.1123.i.i, align 8
  %401 = load ptr, ptr %.1121.i.i, align 8
  %402 = tail call i8 %3(ptr align 1 %4, ptr align 1 %400, ptr align 1 %401) #18
  %.not131.i.i = icmp eq i8 %402, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  %403 = load i64, ptr %.sroa.speculated88.i.i, align 8
  store i64 %403, ptr %sunkaddr74, align 8
  %404 = load ptr, ptr %370, align 8
  %405 = load ptr, ptr %388, align 8
  %406 = tail call i8 %3(ptr align 1 %4, ptr align 1 %404, ptr align 1 %405) #18
  %407 = icmp eq i8 %406, 1
  %.sroa.speculated79.i.i87 = select i1 %407, i64 16, i64 48
  %.sroa.speculated79.i.i = select i1 %407, ptr %370, ptr %388
  %sunkaddr88 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated79.i.i87
  %408 = load i64, ptr %sunkaddr88, align 8
  store i64 %408, ptr %sunkaddr80, align 8
  %409 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 -8
  %.2124.i.i = select i1 %407, ptr %409, ptr %370
  %.2.i22.i = select i1 %407, ptr %388, ptr %409
  %410 = load ptr, ptr %.2124.i.i, align 8
  %411 = load ptr, ptr %.2.i22.i, align 8
  %412 = tail call i8 %3(ptr align 1 %4, ptr align 1 %410, ptr align 1 %411) #18
  %413 = icmp eq i8 %412, 1
  %.sroa.speculated70.i.i = select i1 %413, ptr %.2124.i.i, ptr %.2.i22.i
  %414 = load i64, ptr %.sroa.speculated70.i.i, align 8
  store i64 %414, ptr %sunkaddr72, align 8
  %415 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 -8
  %.3125.i.i = select i1 %413, ptr %415, ptr %.2124.i.i
  %.3.i23.i = select i1 %413, ptr %.2.i22.i, ptr %415
  %416 = load ptr, ptr %.3125.i.i, align 8
  %417 = load ptr, ptr %.3.i23.i, align 8
  %418 = tail call i8 %3(ptr align 1 %4, ptr align 1 %416, ptr align 1 %417) #18
  %419 = icmp eq i8 %418, 1
  %.sroa.speculated.i24.i = select i1 %419, ptr %.3125.i.i, ptr %.3.i23.i
  %420 = load i64, ptr %.sroa.speculated.i24.i, align 8
  store i64 %420, ptr %sunkaddr68, align 8
  %421 = getelementptr inbounds i8, ptr %.sroa.speculated.i24.i, i64 -8
  %.4126.i.i = select i1 %419, ptr %421, ptr %.3125.i.i
  %.4.i25.i = select i1 %419, ptr %.3.i23.i, ptr %421
  %422 = load ptr, ptr %.4126.i.i, align 8
  %423 = load ptr, ptr %.4.i25.i, align 8
  %424 = tail call i8 %3(ptr align 1 %4, ptr align 1 %422, ptr align 1 %423) #18
  %425 = icmp eq i8 %424, 1
  %426 = select i1 %425, ptr %.4126.i.i, ptr %.4.i25.i
  %427 = load i64, ptr %426, align 8
  store i64 %427, ptr %sunkaddr75, align 8
  br label %common.ret

428:                                              ; preds = %5
  %429 = lshr i64 %1, 1
  %430 = lshr i64 %1, 2
  %431 = sub nuw nsw i64 %429, %430
  %432 = sub nuw i64 %1, %429
  %433 = lshr i64 %432, 1
  %434 = sub nuw i64 %432, %433
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %0, i64 %430, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4)
  %435 = shl i64 %430, 3
  %436 = getelementptr inbounds i8, ptr %0, i64 %435
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %436, i64 %431, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4)
  %437 = shl nuw i64 %431, 3
  %438 = getelementptr inbounds i8, ptr %436, i64 %437
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %438, i64 %433, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4)
  %439 = shl nuw i64 %433, 3
  %440 = getelementptr inbounds i8, ptr %438, i64 %439
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %440, i64 %434, ptr nonnull align 1 %2, ptr nonnull readonly align 1 %3, ptr align 1 %4)
  %441 = add i64 %435, -8
  %442 = getelementptr inbounds i8, ptr %0, i64 %441
  %443 = load ptr, ptr %442, align 8
  %444 = load ptr, ptr %436, align 8
  %445 = tail call i8 %3(ptr align 1 %4, ptr align 1 %443, ptr align 1 %444) #18
  %.not = icmp eq i8 %445, 1
  %.pre = shl i64 %429, 3
  br i1 %.not, label %.critedge, label %446

446:                                              ; preds = %428
  %447 = add i64 %.pre, -8
  %448 = getelementptr inbounds i8, ptr %0, i64 %447
  %449 = getelementptr inbounds i8, ptr %0, i64 %.pre
  %450 = load ptr, ptr %448, align 8
  %451 = load ptr, ptr %449, align 8
  %452 = tail call i8 %3(ptr align 1 %4, ptr align 1 %450, ptr align 1 %451) #18
  %.not11 = icmp eq i8 %452, 1
  br i1 %.not11, label %.critedge, label %453

453:                                              ; preds = %446
  %454 = getelementptr inbounds i8, ptr %440, i64 -8
  %455 = load ptr, ptr %454, align 8
  %456 = load ptr, ptr %440, align 8
  %457 = tail call i8 %3(ptr align 1 %4, ptr align 1 %455, ptr align 1 %456) #18
  %.not12 = icmp eq i8 %457, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %453, %446, %428
  tail call fastcc void @sort.parity_merge__anon_16232(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %430, i64 %431, ptr nonnull readonly align 1 %3, ptr align 1 %4)
  %458 = getelementptr inbounds i8, ptr %2, i64 %.pre
  %459 = getelementptr inbounds i8, ptr %0, i64 %.pre
  tail call fastcc void @sort.parity_merge__anon_16232(ptr nonnull align 1 %458, ptr nonnull align 1 %459, i64 %433, i64 %434, ptr nonnull readonly align 1 %3, ptr align 1 %4)
  tail call fastcc void @sort.parity_merge__anon_16232(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %429, i64 %432, ptr nonnull readonly align 1 %3, ptr align 1 %4)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3) unnamed_addr #4 {
  %5 = alloca [3072 x i8], align 8
  %.not95 = icmp ult i64 %1, 8
  br i1 %.not95, label %.loopexit, label %.lr.ph100.preheader

.lr.ph100.preheader:                              ; preds = %4
  %const = bitcast i64 2305843009213693951 to i64
  %6 = lshr i64 %1, 3
  br label %.lr.ph100

.lr.ph100:                                        ; preds = %42, %.lr.ph100.preheader
  %.198 = phi ptr [ %.2, %42 ], [ %0, %.lr.ph100.preheader ]
  %.027997 = phi ptr [ %.1280, %42 ], [ %0, %.lr.ph100.preheader ]
  %.028496 = phi i64 [ %.1285, %42 ], [ %6, %.lr.ph100.preheader ]
  %7 = add i64 %.028496, -1
  %8 = getelementptr inbounds i8, ptr %.198, i64 8
  %9 = load ptr, ptr %.198, align 8
  %10 = load ptr, ptr %8, align 8
  %11 = tail call i8 %2(ptr align 1 %3, ptr align 1 %9, ptr align 1 %10) #18
  %12 = icmp eq i8 %11, 1
  %13 = zext i1 %12 to i4
  %14 = getelementptr inbounds i8, ptr %.198, i64 16
  %15 = getelementptr inbounds i8, ptr %.198, i64 24
  %16 = load ptr, ptr %14, align 8
  %17 = load ptr, ptr %15, align 8
  %18 = tail call i8 %2(ptr align 1 %3, ptr align 1 %16, ptr align 1 %17) #18
  %19 = icmp eq i8 %18, 1
  %20 = zext i1 %19 to i4
  %21 = getelementptr inbounds i8, ptr %.198, i64 32
  %22 = getelementptr inbounds i8, ptr %.198, i64 40
  %23 = load ptr, ptr %21, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i8 %2(ptr align 1 %3, ptr align 1 %23, ptr align 1 %24) #18
  %26 = icmp eq i8 %25, 1
  %27 = zext i1 %26 to i4
  %28 = getelementptr inbounds i8, ptr %.198, i64 48
  %29 = getelementptr inbounds i8, ptr %.198, i64 56
  %30 = load ptr, ptr %28, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i8 %2(ptr align 1 %3, ptr align 1 %30, ptr align 1 %31) #18
  %33 = icmp eq i8 %32, 1
  %34 = zext i1 %33 to i4
  %35 = select i1 %19, i4 2, i4 0
  %36 = select i1 %26, i4 4, i4 0
  %37 = select i1 %33, i4 -8, i4 0
  %38 = or i4 %35, %36
  %39 = or i4 %38, %37
  %40 = or i4 %39, %13
  %41 = zext i4 %40 to i32
  switch i32 %41, label %.preheader [
    i32 0, label %43
    i32 15, label %56
  ]

42:                                               ; preds = %336, %.critedge21, %74, %.critedge
  %.1285 = phi i64 [ %173, %336 ], [ %106, %.critedge21 ], [ %.2286, %74 ], [ %7, %.critedge ]
  %.1280 = phi ptr [ %.3282.ph264, %336 ], [ %.3282.ph264, %.critedge21 ], [ %.3282.ph264, %74 ], [ %.027997, %.critedge ]
  %.2 = phi ptr [ %337, %336 ], [ %169, %.critedge21 ], [ %102, %74 ], [ %55, %.critedge ]
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %.lr.ph100

43:                                               ; preds = %.lr.ph100
  %sunkaddr = getelementptr inbounds i8, ptr %.198, i64 8
  %44 = load ptr, ptr %sunkaddr, align 8
  %sunkaddr571 = getelementptr inbounds i8, ptr %.198, i64 16
  %45 = load ptr, ptr %sunkaddr571, align 8
  %46 = tail call i8 %2(ptr align 1 %3, ptr align 1 %44, ptr align 1 %45) #18
  %.not328 = icmp eq i8 %46, 1
  br i1 %.not328, label %.critedge, label %47

47:                                               ; preds = %43
  %sunkaddr572 = getelementptr inbounds i8, ptr %.198, i64 24
  %48 = load ptr, ptr %sunkaddr572, align 8
  %sunkaddr573 = getelementptr inbounds i8, ptr %.198, i64 32
  %49 = load ptr, ptr %sunkaddr573, align 8
  %50 = tail call i8 %2(ptr align 1 %3, ptr align 1 %48, ptr align 1 %49) #18
  %.not329 = icmp eq i8 %50, 1
  br i1 %.not329, label %.critedge, label %51

51:                                               ; preds = %47
  %sunkaddr574 = getelementptr inbounds i8, ptr %.198, i64 40
  %52 = load ptr, ptr %sunkaddr574, align 8
  %sunkaddr575 = getelementptr inbounds i8, ptr %.198, i64 48
  %53 = load ptr, ptr %sunkaddr575, align 8
  %54 = tail call i8 %2(ptr align 1 %3, ptr align 1 %52, ptr align 1 %53) #18
  %.not330 = icmp eq i8 %54, 1
  br i1 %.not330, label %.critedge, label %.preheader

.critedge:                                        ; preds = %51, %47, %43
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %.198, ptr nonnull align 1 %5, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %55 = getelementptr inbounds i8, ptr %.198, i64 64
  br label %42

56:                                               ; preds = %.lr.ph100
  %sunkaddr576 = getelementptr inbounds i8, ptr %.198, i64 8
  %57 = load ptr, ptr %sunkaddr576, align 8
  %sunkaddr577 = getelementptr inbounds i8, ptr %.198, i64 16
  %58 = load ptr, ptr %sunkaddr577, align 8
  %59 = tail call i8 %2(ptr align 1 %3, ptr align 1 %57, ptr align 1 %58) #18
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %61, label %.critedge4

61:                                               ; preds = %56
  %sunkaddr578 = getelementptr inbounds i8, ptr %.198, i64 24
  %62 = load ptr, ptr %sunkaddr578, align 8
  %sunkaddr579 = getelementptr inbounds i8, ptr %.198, i64 32
  %63 = load ptr, ptr %sunkaddr579, align 8
  %64 = tail call i8 %2(ptr align 1 %3, ptr align 1 %62, ptr align 1 %63) #18
  %65 = icmp eq i8 %64, 1
  br i1 %65, label %66, label %.critedge4

66:                                               ; preds = %61
  %sunkaddr580 = getelementptr inbounds i8, ptr %.198, i64 40
  %67 = load ptr, ptr %sunkaddr580, align 8
  %sunkaddr581 = getelementptr inbounds i8, ptr %.198, i64 48
  %68 = load ptr, ptr %sunkaddr581, align 8
  %69 = tail call i8 %2(ptr align 1 %3, ptr align 1 %67, ptr align 1 %68) #18
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %.preheader, label %.critedge4

.critedge4:                                       ; preds = %66, %61, %56
  br label %.preheader

.preheader:                                       ; preds = %.critedge4, %66, %51, %.lr.ph100
  %.1299.ph = phi i2 [ 1, %66 ], [ 0, %51 ], [ -2, %.lr.ph100 ], [ -2, %.critedge4 ]
  %.3282.ph = phi ptr [ %.198, %66 ], [ %.027997, %51 ], [ %.027997, %.lr.ph100 ], [ %.027997, %.critedge4 ]
  br label %.outer

.outer:                                           ; preds = %314, %156, %.preheader
  %.1299.ph263 = phi i2 [ %.1299.ph, %.preheader ], [ 1, %314 ], [ 1, %156 ]
  %.0296.ph = phi i4 [ %34, %.preheader ], [ %200, %314 ], [ %133, %156 ]
  %.0294.ph = phi i4 [ %27, %.preheader ], [ %193, %314 ], [ %126, %156 ]
  %.0292.ph = phi i4 [ %20, %.preheader ], [ %186, %314 ], [ %119, %156 ]
  %.0290.ph = phi i4 [ %13, %.preheader ], [ %179, %314 ], [ %112, %156 ]
  %.2286.ph = phi i64 [ %7, %.preheader ], [ %173, %314 ], [ %106, %156 ]
  %.3282.ph264 = phi ptr [ %.3282.ph, %.preheader ], [ %171, %314 ], [ %104, %156 ]
  %.3.ph = phi ptr [ %.198, %.preheader ], [ %171, %314 ], [ %104, %156 ]
  %uglygep60 = getelementptr i8, ptr %.3282.ph264, i64 8
  br label %71

71:                                               ; preds = %300, %287, %165, %156, %151, %146, %137, %.outer
  %.1299 = phi i2 [ %.1299.ph263, %.outer ], [ 0, %165 ], [ 1, %287 ], [ 0, %300 ], [ -2, %151 ], [ -2, %137 ], [ -2, %146 ], [ -2, %156 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %133, %165 ], [ %200, %287 ], [ %200, %300 ], [ %133, %151 ], [ %133, %137 ], [ %133, %146 ], [ %133, %156 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %126, %165 ], [ %193, %287 ], [ %193, %300 ], [ %126, %151 ], [ %126, %137 ], [ %126, %146 ], [ %126, %156 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %119, %165 ], [ %186, %287 ], [ %186, %300 ], [ %119, %151 ], [ %119, %137 ], [ %119, %146 ], [ %119, %156 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %112, %165 ], [ %179, %287 ], [ %179, %300 ], [ %112, %151 ], [ %112, %137 ], [ %112, %146 ], [ %112, %156 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %106, %165 ], [ %173, %287 ], [ %173, %300 ], [ %106, %151 ], [ %106, %137 ], [ %106, %146 ], [ %106, %156 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %104, %165 ], [ %171, %287 ], [ %171, %300 ], [ %104, %151 ], [ %104, %137 ], [ %104, %146 ], [ %104, %156 ]
  %72 = zext i2 %.1299 to i32
  switch i32 %72, label %73 [
    i32 2, label %74
    i32 0, label %103
    i32 1, label %170
  ]

73:                                               ; preds = %71
  unreachable

74:                                               ; preds = %71
  %75 = icmp eq i4 %.0290, 0
  %. = select i1 %75, i64 8, i64 0
  %.7 = select i1 %75, i64 0, i64 8
  %76 = getelementptr inbounds i8, ptr %.3, i64 %.
  %77 = load i64, ptr %76, align 8
  %78 = getelementptr inbounds i8, ptr %.3, i64 %.7
  %79 = load i64, ptr %78, align 8
  store i64 %79, ptr %.3, align 8
  %80 = getelementptr inbounds i8, ptr %.3, i64 8
  store i64 %77, ptr %80, align 8
  %81 = getelementptr inbounds i8, ptr %.3, i64 16
  %82 = icmp eq i4 %.0292, 0
  %.8 = select i1 %82, i64 8, i64 0
  %.9 = select i1 %82, i64 0, i64 8
  %83 = getelementptr inbounds i8, ptr %81, i64 %.8
  %84 = load i64, ptr %83, align 8
  %85 = getelementptr inbounds i8, ptr %81, i64 %.9
  %86 = load i64, ptr %85, align 8
  store i64 %86, ptr %81, align 8
  %87 = getelementptr inbounds i8, ptr %.3, i64 24
  store i64 %84, ptr %87, align 8
  %88 = getelementptr inbounds i8, ptr %.3, i64 32
  %89 = icmp eq i4 %.0294, 0
  %.10 = select i1 %89, i64 8, i64 0
  %.11 = select i1 %89, i64 0, i64 8
  %90 = getelementptr inbounds i8, ptr %88, i64 %.10
  %91 = load i64, ptr %90, align 8
  %92 = getelementptr inbounds i8, ptr %88, i64 %.11
  %93 = load i64, ptr %92, align 8
  store i64 %93, ptr %88, align 8
  %94 = getelementptr inbounds i8, ptr %.3, i64 40
  store i64 %91, ptr %94, align 8
  %95 = getelementptr inbounds i8, ptr %.3, i64 48
  %96 = icmp eq i4 %.0296, 0
  %.12 = select i1 %96, i64 8, i64 0
  %.13 = select i1 %96, i64 0, i64 8
  %97 = getelementptr inbounds i8, ptr %95, i64 %.12
  %98 = load i64, ptr %97, align 8
  %99 = getelementptr inbounds i8, ptr %95, i64 %.13
  %100 = load i64, ptr %99, align 8
  store i64 %100, ptr %95, align 8
  %101 = getelementptr inbounds i8, ptr %.3, i64 56
  store i64 %98, ptr %101, align 8
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %.3, ptr nonnull align 1 %5, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %102 = getelementptr inbounds i8, ptr %.3, i64 64
  br label %42

103:                                              ; preds = %71
  %104 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %105

105:                                              ; preds = %103
  %106 = add i64 %.2286, -1
  %107 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr582 = getelementptr inbounds i8, ptr %.3, i64 64
  %108 = load ptr, ptr %sunkaddr582, align 8
  %109 = load ptr, ptr %107, align 8
  %110 = tail call i8 %2(ptr align 1 %3, ptr align 1 %108, ptr align 1 %109) #18
  %111 = icmp eq i8 %110, 1
  %112 = zext i1 %111 to i4
  %113 = getelementptr inbounds i8, ptr %.3, i64 80
  %114 = getelementptr inbounds i8, ptr %.3, i64 88
  %115 = load ptr, ptr %113, align 8
  %116 = load ptr, ptr %114, align 8
  %117 = tail call i8 %2(ptr align 1 %3, ptr align 1 %115, ptr align 1 %116) #18
  %118 = icmp eq i8 %117, 1
  %119 = zext i1 %118 to i4
  %120 = getelementptr inbounds i8, ptr %.3, i64 96
  %121 = getelementptr inbounds i8, ptr %.3, i64 104
  %122 = load ptr, ptr %120, align 8
  %123 = load ptr, ptr %121, align 8
  %124 = tail call i8 %2(ptr align 1 %3, ptr align 1 %122, ptr align 1 %123) #18
  %125 = icmp eq i8 %124, 1
  %126 = zext i1 %125 to i4
  %127 = getelementptr inbounds i8, ptr %.3, i64 112
  %128 = getelementptr inbounds i8, ptr %.3, i64 120
  %129 = load ptr, ptr %127, align 8
  %130 = load ptr, ptr %128, align 8
  %131 = tail call i8 %2(ptr align 1 %3, ptr align 1 %129, ptr align 1 %130) #18
  %132 = icmp eq i8 %131, 1
  %133 = zext i1 %132 to i4
  %134 = or i4 %119, %112
  %135 = or i4 %134, %126
  %136 = or i4 %135, %133
  %.not320 = icmp eq i4 %136, 0
  br i1 %.not320, label %142, label %137

137:                                              ; preds = %105
  %138 = add nuw nsw i4 %119, %112
  %139 = add nuw nsw i4 %138, %126
  %140 = add nuw nsw i4 %139, %133
  %141 = icmp eq i4 %140, 4
  br i1 %141, label %146, label %71

142:                                              ; preds = %105
  %sunkaddr583 = getelementptr inbounds i8, ptr %.3, i64 72
  %143 = load ptr, ptr %sunkaddr583, align 8
  %sunkaddr584 = getelementptr inbounds i8, ptr %.3, i64 80
  %144 = load ptr, ptr %sunkaddr584, align 8
  %145 = tail call i8 %2(ptr align 1 %3, ptr align 1 %143, ptr align 1 %144) #18
  %.not321 = icmp eq i8 %145, 1
  br i1 %.not321, label %.critedge21, label %161

146:                                              ; preds = %137
  %sunkaddr585 = getelementptr inbounds i8, ptr %.3, i64 72
  %147 = load ptr, ptr %sunkaddr585, align 8
  %sunkaddr586 = getelementptr inbounds i8, ptr %.3, i64 80
  %148 = load ptr, ptr %sunkaddr586, align 8
  %149 = tail call i8 %2(ptr align 1 %3, ptr align 1 %147, ptr align 1 %148) #18
  %150 = icmp eq i8 %149, 1
  br i1 %150, label %151, label %71

151:                                              ; preds = %146
  %sunkaddr587 = getelementptr inbounds i8, ptr %.3, i64 88
  %152 = load ptr, ptr %sunkaddr587, align 8
  %sunkaddr588 = getelementptr inbounds i8, ptr %.3, i64 96
  %153 = load ptr, ptr %sunkaddr588, align 8
  %154 = tail call i8 %2(ptr align 1 %3, ptr align 1 %152, ptr align 1 %153) #18
  %155 = icmp eq i8 %154, 1
  br i1 %155, label %156, label %71

156:                                              ; preds = %151
  %sunkaddr589 = getelementptr inbounds i8, ptr %.3, i64 104
  %157 = load ptr, ptr %sunkaddr589, align 8
  %sunkaddr590 = getelementptr inbounds i8, ptr %.3, i64 112
  %158 = load ptr, ptr %sunkaddr590, align 8
  %159 = tail call i8 %2(ptr align 1 %3, ptr align 1 %157, ptr align 1 %158) #18
  %160 = icmp eq i8 %159, 1
  br i1 %160, label %.outer, label %71

161:                                              ; preds = %142
  %sunkaddr591 = getelementptr inbounds i8, ptr %.3, i64 88
  %162 = load ptr, ptr %sunkaddr591, align 8
  %sunkaddr592 = getelementptr inbounds i8, ptr %.3, i64 96
  %163 = load ptr, ptr %sunkaddr592, align 8
  %164 = tail call i8 %2(ptr align 1 %3, ptr align 1 %162, ptr align 1 %163) #18
  %.not322 = icmp eq i8 %164, 1
  br i1 %.not322, label %.critedge21, label %165

165:                                              ; preds = %161
  %sunkaddr593 = getelementptr inbounds i8, ptr %.3, i64 104
  %166 = load ptr, ptr %sunkaddr593, align 8
  %sunkaddr594 = getelementptr inbounds i8, ptr %.3, i64 112
  %167 = load ptr, ptr %sunkaddr594, align 8
  %168 = tail call i8 %2(ptr align 1 %3, ptr align 1 %166, ptr align 1 %167) #18
  %.not323 = icmp eq i8 %168, 1
  br i1 %.not323, label %.critedge21, label %71

.critedge21:                                      ; preds = %165, %161, %142
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %104, ptr nonnull align 1 %5, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %169 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %42

170:                                              ; preds = %71
  %171 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %204, label %172

172:                                              ; preds = %170
  %173 = add i64 %.2286, -1
  %174 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr595 = getelementptr inbounds i8, ptr %.3, i64 64
  %175 = load ptr, ptr %sunkaddr595, align 8
  %176 = load ptr, ptr %174, align 8
  %177 = tail call i8 %2(ptr align 1 %3, ptr align 1 %175, ptr align 1 %176) #18
  %178 = icmp ne i8 %177, 1
  %179 = zext i1 %178 to i4
  %180 = getelementptr inbounds i8, ptr %.3, i64 80
  %181 = getelementptr inbounds i8, ptr %.3, i64 88
  %182 = load ptr, ptr %180, align 8
  %183 = load ptr, ptr %181, align 8
  %184 = tail call i8 %2(ptr align 1 %3, ptr align 1 %182, ptr align 1 %183) #18
  %185 = icmp ne i8 %184, 1
  %186 = zext i1 %185 to i4
  %187 = getelementptr inbounds i8, ptr %.3, i64 96
  %188 = getelementptr inbounds i8, ptr %.3, i64 104
  %189 = load ptr, ptr %187, align 8
  %190 = load ptr, ptr %188, align 8
  %191 = tail call i8 %2(ptr align 1 %3, ptr align 1 %189, ptr align 1 %190) #18
  %192 = icmp ne i8 %191, 1
  %193 = zext i1 %192 to i4
  %194 = getelementptr inbounds i8, ptr %.3, i64 112
  %195 = getelementptr inbounds i8, ptr %.3, i64 120
  %196 = load ptr, ptr %194, align 8
  %197 = load ptr, ptr %195, align 8
  %198 = tail call i8 %2(ptr align 1 %3, ptr align 1 %196, ptr align 1 %197) #18
  %199 = icmp ne i8 %198, 1
  %200 = zext i1 %199 to i4
  %201 = or i4 %186, %179
  %202 = or i4 %201, %193
  %203 = or i4 %202, %200
  %.not315 = icmp eq i4 %203, 0
  br i1 %.not315, label %271, label %.critedge25

204:                                              ; preds = %170
  %205 = and i64 %1, 7
  %206 = icmp eq i64 %205, 7
  br i1 %206, label %411, label %.critedge55

.critedge25:                                      ; preds = %287, %282, %277, %271, %172
  %207 = ptrtoint ptr %.3282.ph264 to i64
  %208 = getelementptr inbounds i8, ptr %.3, i64 56
  %209 = ptrtoint ptr %208 to i64
  %210 = sub nuw i64 %209, %207
  %211 = lshr i64 %210, 4
  %212 = shl nuw nsw i64 %211, 3
  %213 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %212
  %214 = sub nsw i64 0, %212
  %215 = getelementptr inbounds i8, ptr %208, i64 %214
  %216 = and i64 %210, 16
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %250, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %250, %.critedge25
  %.027.i = phi ptr [ %254, %250 ], [ %215, %.critedge25 ]
  %.025.i = phi ptr [ %253, %250 ], [ %213, %.critedge25 ]
  %.0.i = phi i64 [ %255, %250 ], [ %211, %.critedge25 ]
  %218 = load i64, ptr %.3282.ph264, align 8
  %219 = load i64, ptr %208, align 8
  store i64 %219, ptr %.3282.ph264, align 8
  store i64 %218, ptr %208, align 8
  %220 = load i64, ptr %.025.i, align 8
  %221 = load i64, ptr %.027.i, align 8
  store i64 %221, ptr %.025.i, align 8
  store i64 %220, ptr %.027.i, align 8
  %222 = icmp ult i64 %.0.i, 2
  br i1 %222, label %sort.quad_reversal.exit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %._crit_edge.i
  %223 = lshr i64 %.0.i, 1
  %min.iters.check = icmp ult i64 %.0.i, 76
  br i1 %min.iters.check, label %.lr.ph.preheader261, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %.lr.ph.preheader
  %224 = add nsw i64 %223, -1
  %uglygep = getelementptr i8, ptr %.3, i64 48
  %mul.result.neg = mul i64 %224, -8
  %225 = getelementptr i8, ptr %uglygep, i64 %mul.result.neg
  %226 = icmp ugt ptr %225, %uglygep
  %uglygep56 = getelementptr i8, ptr %.025.i, i64 -8
  %mul.result58.neg = mul i64 %224, -8
  %mul.overflow59 = icmp ugt i64 %224, %const
  %227 = getelementptr i8, ptr %uglygep56, i64 %mul.result58.neg
  %228 = icmp ugt ptr %227, %uglygep56
  %229 = or i1 %228, %mul.overflow59
  %230 = or i1 %226, %229
  br i1 %230, label %.lr.ph.preheader261, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %231 = shl i64 %223, 3
  %uglygep61 = getelementptr i8, ptr %uglygep60, i64 %231
  %uglygep62 = getelementptr i8, ptr %.027.i, i64 8
  %uglygep63 = getelementptr i8, ptr %uglygep62, i64 %231
  %uglygep64 = getelementptr i8, ptr %.3, i64 56
  %232 = mul i64 %223, -8
  %uglygep65 = getelementptr i8, ptr %uglygep64, i64 %232
  %uglygep66 = getelementptr i8, ptr %.025.i, i64 %232
  %bound0 = icmp ult ptr %uglygep60, %uglygep63
  %bound1 = icmp ult ptr %uglygep62, %uglygep61
  %found.conflict = and i1 %bound0, %bound1
  %bound067 = icmp ult ptr %uglygep60, %208
  %bound168 = icmp ult ptr %uglygep65, %uglygep61
  %found.conflict69 = and i1 %bound067, %bound168
  %conflict.rdx = or i1 %found.conflict, %found.conflict69
  %bound070 = icmp ult ptr %uglygep60, %.025.i
  %bound171 = icmp ult ptr %uglygep66, %uglygep61
  %found.conflict72 = and i1 %bound070, %bound171
  %conflict.rdx73 = or i1 %conflict.rdx, %found.conflict72
  %bound074 = icmp ult ptr %uglygep62, %208
  %bound175 = icmp ult ptr %uglygep65, %uglygep63
  %found.conflict76 = and i1 %bound074, %bound175
  %conflict.rdx77 = or i1 %conflict.rdx73, %found.conflict76
  %bound078 = icmp ult ptr %uglygep62, %.025.i
  %bound179 = icmp ult ptr %uglygep66, %uglygep63
  %found.conflict80 = and i1 %bound078, %bound179
  %conflict.rdx81 = or i1 %conflict.rdx77, %found.conflict80
  %bound082 = icmp ult ptr %uglygep65, %.025.i
  %bound183 = icmp ult ptr %uglygep66, %208
  %found.conflict84 = and i1 %bound082, %bound183
  %conflict.rdx85 = or i1 %conflict.rdx81, %found.conflict84
  br i1 %conflict.rdx85, label %.lr.ph.preheader261, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %const568 = bitcast i64 9223372036854775806 to i64
  %n.vec = and i64 %223, %const568
  %ind.end = and i64 %223, 1
  %233 = shl i64 %n.vec, 3
  %ind.end86 = getelementptr i8, ptr %.3282.ph264, i64 %233
  %234 = mul i64 %n.vec, -8
  %ind.end88 = getelementptr i8, ptr %.025.i, i64 %234
  %235 = shl i64 %n.vec, 3
  %ind.end90 = getelementptr i8, ptr %.027.i, i64 %235
  %236 = mul i64 %n.vec, -8
  %ind.end92 = getelementptr i8, ptr %208, i64 %236
  %237 = lshr i64 %.0.i, 2
  %238 = mul nsw i64 %237, -2
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv544 = phi i64 [ %lsr.iv.next545, %vector.body ], [ 8, %vector.ph ]
  %lsr.iv541 = phi i64 [ %lsr.iv.next542, %vector.body ], [ 0, %vector.ph ]
  %uglygep546 = getelementptr i8, ptr %.027.i, i64 %lsr.iv544
  %uglygep549 = getelementptr i8, ptr %.3282.ph264, i64 %lsr.iv544
  %wide.load = load <2 x i64>, ptr %uglygep549, align 8, !alias.scope !498, !noalias !501
  %sunkaddr596 = mul i64 %lsr.iv541, 8
  %sunkaddr597 = getelementptr i8, ptr %.3, i64 %sunkaddr596
  %sunkaddr598 = getelementptr i8, ptr %sunkaddr597, i64 40
  %wide.load97 = load <2 x i64>, ptr %sunkaddr598, align 8, !alias.scope !505, !noalias !506
  %reverse = shufflevector <2 x i64> %wide.load97, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse, ptr %uglygep549, align 8, !alias.scope !498, !noalias !501
  %reverse98 = shufflevector <2 x i64> %wide.load, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse98, ptr %sunkaddr598, align 8, !alias.scope !505, !noalias !506
  %sunkaddr599 = mul i64 %lsr.iv541, 8
  %sunkaddr600 = getelementptr i8, ptr %.025.i, i64 %sunkaddr599
  %sunkaddr601 = getelementptr i8, ptr %sunkaddr600, i64 -16
  %wide.load99 = load <2 x i64>, ptr %sunkaddr601, align 8, !alias.scope !506
  %reverse100 = shufflevector <2 x i64> %wide.load99, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load101 = load <2 x i64>, ptr %uglygep546, align 8, !alias.scope !507, !noalias !508
  %reverse102 = shufflevector <2 x i64> %wide.load101, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse102, ptr %sunkaddr601, align 8, !alias.scope !506
  store <2 x i64> %reverse100, ptr %uglygep546, align 8, !alias.scope !507, !noalias !508
  %lsr.iv.next542 = add nsw i64 %lsr.iv541, -2
  %lsr.iv.next545 = add i64 %lsr.iv544, 16
  %239 = icmp eq i64 %238, %lsr.iv.next542
  br i1 %239, label %middle.block, label %vector.body, !llvm.loop !509

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %223, %n.vec
  br i1 %cmp.n, label %sort.quad_reversal.exit, label %.lr.ph.preheader261

.lr.ph.preheader261:                              ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %.lr.ph.preheader
  %.1.i94.ph = phi i64 [ %223, %vector.memcheck ], [ %223, %vector.scevcheck ], [ %223, %.lr.ph.preheader ], [ %ind.end, %middle.block ]
  %.024.i93.ph = phi ptr [ %.3282.ph264, %vector.memcheck ], [ %.3282.ph264, %vector.scevcheck ], [ %.3282.ph264, %.lr.ph.preheader ], [ %ind.end86, %middle.block ]
  %.126.i92.ph = phi ptr [ %.025.i, %vector.memcheck ], [ %.025.i, %vector.scevcheck ], [ %.025.i, %.lr.ph.preheader ], [ %ind.end88, %middle.block ]
  %.128.i91.ph = phi ptr [ %.027.i, %vector.memcheck ], [ %.027.i, %vector.scevcheck ], [ %.027.i, %.lr.ph.preheader ], [ %ind.end90, %middle.block ]
  %.029.i90.ph = phi ptr [ %208, %vector.memcheck ], [ %208, %vector.scevcheck ], [ %208, %.lr.ph.preheader ], [ %ind.end92, %middle.block ]
  %xtraiter = and i64 %.1.i94.ph, 1
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.lr.ph.prol.loopexit, label %.lr.ph.prol

.lr.ph.prol:                                      ; preds = %.lr.ph.preheader261
  %240 = getelementptr inbounds i8, ptr %.128.i91.ph, i64 8
  %241 = getelementptr inbounds i8, ptr %.126.i92.ph, i64 -8
  %242 = getelementptr inbounds i8, ptr %.029.i90.ph, i64 -8
  %243 = getelementptr inbounds i8, ptr %.024.i93.ph, i64 8
  %244 = add nsw i64 %.1.i94.ph, -1
  %245 = load i64, ptr %243, align 8
  %246 = load i64, ptr %242, align 8
  store i64 %246, ptr %243, align 8
  store i64 %245, ptr %242, align 8
  %247 = load i64, ptr %241, align 8
  %248 = load i64, ptr %240, align 8
  store i64 %248, ptr %241, align 8
  store i64 %247, ptr %240, align 8
  br label %.lr.ph.prol.loopexit

.lr.ph.prol.loopexit:                             ; preds = %.lr.ph.prol, %.lr.ph.preheader261
  %.1.i94.unr = phi i64 [ %.1.i94.ph, %.lr.ph.preheader261 ], [ %244, %.lr.ph.prol ]
  %.024.i93.unr = phi ptr [ %.024.i93.ph, %.lr.ph.preheader261 ], [ %243, %.lr.ph.prol ]
  %.126.i92.unr = phi ptr [ %.126.i92.ph, %.lr.ph.preheader261 ], [ %241, %.lr.ph.prol ]
  %.128.i91.unr = phi ptr [ %.128.i91.ph, %.lr.ph.preheader261 ], [ %240, %.lr.ph.prol ]
  %.029.i90.unr = phi ptr [ %.029.i90.ph, %.lr.ph.preheader261 ], [ %242, %.lr.ph.prol ]
  %249 = icmp eq i64 %.1.i94.ph, 1
  br i1 %249, label %sort.quad_reversal.exit, label %.lr.ph.preheader469

.lr.ph.preheader469:                              ; preds = %.lr.ph.prol.loopexit
  br label %.lr.ph

250:                                              ; preds = %.critedge25
  %251 = load i64, ptr %213, align 8
  %252 = load i64, ptr %215, align 8
  store i64 %252, ptr %213, align 8
  %253 = getelementptr inbounds i8, ptr %213, i64 -8
  store i64 %251, ptr %215, align 8
  %254 = getelementptr inbounds i8, ptr %215, i64 8
  %255 = add nsw i64 %211, -1
  br label %._crit_edge.i

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader469
  %lsr.iv556 = phi i64 [ -1, %.lr.ph.preheader469 ], [ %lsr.iv.next557, %.lr.ph ]
  %lsr.iv550 = phi i64 [ 0, %.lr.ph.preheader469 ], [ %lsr.iv.next551, %.lr.ph ]
  %256 = shl i64 %lsr.iv556, 3
  %uglygep560 = getelementptr i8, ptr %.126.i92.unr, i64 %256
  %uglygep567 = getelementptr i8, ptr %.029.i90.unr, i64 %256
  %sunkaddr602 = mul i64 %lsr.iv550, 8
  %sunkaddr603 = getelementptr i8, ptr %.024.i93.unr, i64 %sunkaddr602
  %sunkaddr604 = getelementptr i8, ptr %sunkaddr603, i64 8
  %257 = load i64, ptr %sunkaddr604, align 8
  %258 = load i64, ptr %uglygep567, align 8
  store i64 %258, ptr %sunkaddr604, align 8
  store i64 %257, ptr %uglygep567, align 8
  %259 = load i64, ptr %uglygep560, align 8
  %sunkaddr605 = mul i64 %lsr.iv550, 8
  %sunkaddr606 = getelementptr i8, ptr %.128.i91.unr, i64 %sunkaddr605
  %sunkaddr607 = getelementptr i8, ptr %sunkaddr606, i64 8
  %260 = load i64, ptr %sunkaddr607, align 8
  store i64 %260, ptr %uglygep560, align 8
  store i64 %259, ptr %sunkaddr607, align 8
  %261 = shl i64 %lsr.iv556, 3
  %uglygep558 = getelementptr i8, ptr %.126.i92.unr, i64 %261
  %uglygep559 = getelementptr i8, ptr %uglygep558, i64 -8
  %uglygep565 = getelementptr i8, ptr %.029.i90.unr, i64 %261
  %uglygep566 = getelementptr i8, ptr %uglygep565, i64 -8
  %sunkaddr608 = mul i64 %lsr.iv550, 8
  %sunkaddr609 = getelementptr i8, ptr %.024.i93.unr, i64 %sunkaddr608
  %sunkaddr610 = getelementptr i8, ptr %sunkaddr609, i64 16
  %262 = load i64, ptr %sunkaddr610, align 8
  %263 = load i64, ptr %uglygep566, align 8
  store i64 %263, ptr %sunkaddr610, align 8
  store i64 %262, ptr %uglygep566, align 8
  %264 = load i64, ptr %uglygep559, align 8
  %sunkaddr611 = mul i64 %lsr.iv550, 8
  %sunkaddr612 = getelementptr i8, ptr %.128.i91.unr, i64 %sunkaddr611
  %sunkaddr613 = getelementptr i8, ptr %sunkaddr612, i64 16
  %265 = load i64, ptr %sunkaddr613, align 8
  store i64 %265, ptr %uglygep559, align 8
  store i64 %264, ptr %sunkaddr613, align 8
  %lsr.iv.next551 = add i64 %lsr.iv550, 2
  %lsr.iv.next557 = add i64 %lsr.iv556, -2
  %266 = icmp eq i64 %.1.i94.unr, %lsr.iv.next551
  br i1 %266, label %sort.quad_reversal.exit, label %.lr.ph, !llvm.loop !510

sort.quad_reversal.exit:                          ; preds = %.lr.ph, %.lr.ph.prol.loopexit, %middle.block, %._crit_edge.i
  %267 = add nuw nsw i4 %186, %179
  %268 = add nuw nsw i4 %267, %193
  %269 = add nuw i4 %268, %200
  %270 = zext i4 %269 to i32
  switch i32 %270, label %.critedge37 [
    i32 4, label %292
    i32 0, label %304
  ]

271:                                              ; preds = %172
  %272 = getelementptr inbounds i8, ptr %.3, i64 56
  %273 = load ptr, ptr %272, align 8
  %sunkaddr614 = getelementptr inbounds i8, ptr %.3, i64 64
  %274 = load ptr, ptr %sunkaddr614, align 8
  %275 = tail call i8 %2(ptr align 1 %3, ptr align 1 %273, ptr align 1 %274) #18
  %276 = icmp eq i8 %275, 1
  br i1 %276, label %277, label %.critedge25

277:                                              ; preds = %271
  %sunkaddr615 = getelementptr inbounds i8, ptr %.3, i64 72
  %278 = load ptr, ptr %sunkaddr615, align 8
  %sunkaddr616 = getelementptr inbounds i8, ptr %.3, i64 80
  %279 = load ptr, ptr %sunkaddr616, align 8
  %280 = tail call i8 %2(ptr align 1 %3, ptr align 1 %278, ptr align 1 %279) #18
  %281 = icmp eq i8 %280, 1
  br i1 %281, label %282, label %.critedge25

282:                                              ; preds = %277
  %sunkaddr617 = getelementptr inbounds i8, ptr %.3, i64 88
  %283 = load ptr, ptr %sunkaddr617, align 8
  %sunkaddr618 = getelementptr inbounds i8, ptr %.3, i64 96
  %284 = load ptr, ptr %sunkaddr618, align 8
  %285 = tail call i8 %2(ptr align 1 %3, ptr align 1 %283, ptr align 1 %284) #18
  %286 = icmp eq i8 %285, 1
  br i1 %286, label %287, label %.critedge25

287:                                              ; preds = %282
  %sunkaddr619 = getelementptr inbounds i8, ptr %.3, i64 104
  %288 = load ptr, ptr %sunkaddr619, align 8
  %sunkaddr620 = getelementptr inbounds i8, ptr %.3, i64 112
  %289 = load ptr, ptr %sunkaddr620, align 8
  %290 = tail call i8 %2(ptr align 1 %3, ptr align 1 %288, ptr align 1 %289) #18
  %291 = icmp eq i8 %290, 1
  br i1 %291, label %71, label %.critedge25

292:                                              ; preds = %sort.quad_reversal.exit
  %sunkaddr621 = getelementptr inbounds i8, ptr %.3, i64 72
  %293 = load ptr, ptr %sunkaddr621, align 8
  %sunkaddr622 = getelementptr inbounds i8, ptr %.3, i64 80
  %294 = load ptr, ptr %sunkaddr622, align 8
  %295 = tail call i8 %2(ptr align 1 %3, ptr align 1 %293, ptr align 1 %294) #18
  %.not316 = icmp eq i8 %295, 1
  br i1 %.not316, label %.critedge37, label %296

296:                                              ; preds = %292
  %sunkaddr623 = getelementptr inbounds i8, ptr %.3, i64 88
  %297 = load ptr, ptr %sunkaddr623, align 8
  %sunkaddr624 = getelementptr inbounds i8, ptr %.3, i64 96
  %298 = load ptr, ptr %sunkaddr624, align 8
  %299 = tail call i8 %2(ptr align 1 %3, ptr align 1 %297, ptr align 1 %298) #18
  %.not317 = icmp eq i8 %299, 1
  br i1 %.not317, label %.critedge37, label %300

300:                                              ; preds = %296
  %sunkaddr625 = getelementptr inbounds i8, ptr %.3, i64 104
  %301 = load ptr, ptr %sunkaddr625, align 8
  %sunkaddr626 = getelementptr inbounds i8, ptr %.3, i64 112
  %302 = load ptr, ptr %sunkaddr626, align 8
  %303 = tail call i8 %2(ptr align 1 %3, ptr align 1 %301, ptr align 1 %302) #18
  %.not318 = icmp eq i8 %303, 1
  br i1 %.not318, label %.critedge37, label %71

304:                                              ; preds = %sort.quad_reversal.exit
  %sunkaddr627 = getelementptr inbounds i8, ptr %.3, i64 72
  %305 = load ptr, ptr %sunkaddr627, align 8
  %sunkaddr628 = getelementptr inbounds i8, ptr %.3, i64 80
  %306 = load ptr, ptr %sunkaddr628, align 8
  %307 = tail call i8 %2(ptr align 1 %3, ptr align 1 %305, ptr align 1 %306) #18
  %308 = icmp eq i8 %307, 1
  br i1 %308, label %309, label %.critedge37

309:                                              ; preds = %304
  %sunkaddr629 = getelementptr inbounds i8, ptr %.3, i64 88
  %310 = load ptr, ptr %sunkaddr629, align 8
  %sunkaddr630 = getelementptr inbounds i8, ptr %.3, i64 96
  %311 = load ptr, ptr %sunkaddr630, align 8
  %312 = tail call i8 %2(ptr align 1 %3, ptr align 1 %310, ptr align 1 %311) #18
  %313 = icmp eq i8 %312, 1
  br i1 %313, label %314, label %.critedge37

314:                                              ; preds = %309
  %sunkaddr631 = getelementptr inbounds i8, ptr %.3, i64 104
  %315 = load ptr, ptr %sunkaddr631, align 8
  %sunkaddr632 = getelementptr inbounds i8, ptr %.3, i64 112
  %316 = load ptr, ptr %sunkaddr632, align 8
  %317 = tail call i8 %2(ptr align 1 %3, ptr align 1 %315, ptr align 1 %316) #18
  %318 = icmp eq i8 %317, 1
  br i1 %318, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %314, %309, %304, %300, %296, %292, %sort.quad_reversal.exit
  %319 = icmp ne i8 %198, 1
  %320 = icmp ne i8 %191, 1
  %321 = icmp ne i8 %184, 1
  %322 = icmp ne i8 %177, 1
  %323 = getelementptr inbounds i8, ptr %.3, i64 120
  %.42 = select i1 %322, i64 0, i64 8
  %.43 = select i1 %322, i64 8, i64 0
  %sunkaddr633 = getelementptr inbounds i8, ptr %.3, i64 %.43
  %sunkaddr634 = getelementptr inbounds i8, ptr %sunkaddr633, i64 64
  %324 = load i64, ptr %sunkaddr634, align 8
  %sunkaddr635 = getelementptr inbounds i8, ptr %.3, i64 %.42
  %sunkaddr636 = getelementptr inbounds i8, ptr %sunkaddr635, i64 64
  %325 = load i64, ptr %sunkaddr636, align 8
  %sunkaddr637 = getelementptr inbounds i8, ptr %.3, i64 64
  store i64 %325, ptr %sunkaddr637, align 8
  %sunkaddr638 = getelementptr inbounds i8, ptr %.3, i64 72
  store i64 %324, ptr %sunkaddr638, align 8
  %.44 = select i1 %321, i64 0, i64 8
  %.45 = select i1 %321, i64 8, i64 0
  %sunkaddr639 = getelementptr inbounds i8, ptr %.3, i64 %.45
  %sunkaddr640 = getelementptr inbounds i8, ptr %sunkaddr639, i64 80
  %326 = load i64, ptr %sunkaddr640, align 8
  %sunkaddr641 = getelementptr inbounds i8, ptr %.3, i64 %.44
  %sunkaddr642 = getelementptr inbounds i8, ptr %sunkaddr641, i64 80
  %327 = load i64, ptr %sunkaddr642, align 8
  %sunkaddr643 = getelementptr inbounds i8, ptr %.3, i64 80
  store i64 %327, ptr %sunkaddr643, align 8
  %sunkaddr644 = getelementptr inbounds i8, ptr %.3, i64 88
  store i64 %326, ptr %sunkaddr644, align 8
  %.46 = select i1 %320, i64 0, i64 8
  %.47 = select i1 %320, i64 8, i64 0
  %sunkaddr645 = getelementptr inbounds i8, ptr %.3, i64 %.47
  %sunkaddr646 = getelementptr inbounds i8, ptr %sunkaddr645, i64 96
  %328 = load i64, ptr %sunkaddr646, align 8
  %sunkaddr647 = getelementptr inbounds i8, ptr %.3, i64 %.46
  %sunkaddr648 = getelementptr inbounds i8, ptr %sunkaddr647, i64 96
  %329 = load i64, ptr %sunkaddr648, align 8
  %sunkaddr649 = getelementptr inbounds i8, ptr %.3, i64 96
  store i64 %329, ptr %sunkaddr649, align 8
  %sunkaddr650 = getelementptr inbounds i8, ptr %.3, i64 104
  store i64 %328, ptr %sunkaddr650, align 8
  %.48 = select i1 %319, i64 0, i64 8
  %.49 = select i1 %319, i64 8, i64 0
  %sunkaddr651 = getelementptr inbounds i8, ptr %.3, i64 %.49
  %sunkaddr652 = getelementptr inbounds i8, ptr %sunkaddr651, i64 112
  %330 = load i64, ptr %sunkaddr652, align 8
  %sunkaddr653 = getelementptr inbounds i8, ptr %.3, i64 %.48
  %sunkaddr654 = getelementptr inbounds i8, ptr %sunkaddr653, i64 112
  %331 = load i64, ptr %sunkaddr654, align 8
  %sunkaddr655 = getelementptr inbounds i8, ptr %.3, i64 112
  store i64 %331, ptr %sunkaddr655, align 8
  store i64 %330, ptr %323, align 8
  %332 = inttoptr i64 %324 to ptr
  %333 = inttoptr i64 %327 to ptr
  %334 = tail call i8 %2(ptr align 1 %3, ptr align 1 %332, ptr align 1 %333) #18
  %335 = icmp eq i8 %334, 1
  br i1 %335, label %.critedge51, label %338

336:                                              ; preds = %.critedge51, %343
  %337 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %42

338:                                              ; preds = %.critedge37
  %sunkaddr656 = getelementptr inbounds i8, ptr %.3, i64 88
  %339 = load ptr, ptr %sunkaddr656, align 8
  %sunkaddr657 = getelementptr inbounds i8, ptr %.3, i64 96
  %340 = load ptr, ptr %sunkaddr657, align 8
  %341 = tail call i8 %2(ptr align 1 %3, ptr align 1 %339, ptr align 1 %340) #18
  %342 = icmp eq i8 %341, 1
  br i1 %342, label %.critedge51, label %343

343:                                              ; preds = %338
  %sunkaddr658 = getelementptr inbounds i8, ptr %.3, i64 104
  %344 = load ptr, ptr %sunkaddr658, align 8
  %sunkaddr659 = getelementptr inbounds i8, ptr %.3, i64 112
  %345 = load ptr, ptr %sunkaddr659, align 8
  %346 = tail call i8 %2(ptr align 1 %3, ptr align 1 %344, ptr align 1 %345) #18
  %347 = icmp eq i8 %346, 1
  br i1 %347, label %.critedge51, label %336

.critedge51:                                      ; preds = %343, %338, %.critedge37
  call fastcc void @sort.quad_swap_merge__anon_16224(ptr nonnull align 1 %171, ptr nonnull align 1 %5, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %336

348:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %411
  %349 = getelementptr inbounds i8, ptr %.3, i64 56
  %350 = ptrtoint ptr %349 to i64
  %351 = ptrtoint ptr %.3282.ph264 to i64
  %352 = sub nuw i64 %350, %351
  %353 = lshr i64 %352, 4
  %354 = shl nuw nsw i64 %353, 3
  %355 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %354
  %356 = sub nsw i64 0, %354
  %357 = getelementptr inbounds i8, ptr %349, i64 %356
  %358 = and i64 %352, 16
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %394, label %._crit_edge.i331

._crit_edge.i331:                                 ; preds = %394, %348
  %.027.i332 = phi ptr [ %398, %394 ], [ %357, %348 ]
  %.025.i333 = phi ptr [ %397, %394 ], [ %355, %348 ]
  %.0.i334 = phi i64 [ %399, %394 ], [ %353, %348 ]
  %360 = load i64, ptr %.3282.ph264, align 8
  %361 = load i64, ptr %349, align 8
  store i64 %361, ptr %.3282.ph264, align 8
  store i64 %360, ptr %349, align 8
  %362 = load i64, ptr %.025.i333, align 8
  %363 = load i64, ptr %.027.i332, align 8
  store i64 %363, ptr %.025.i333, align 8
  store i64 %362, ptr %.027.i332, align 8
  %364 = icmp ult i64 %.0.i334, 2
  br i1 %364, label %.loopexit, label %.lr.ph106.preheader

.lr.ph106.preheader:                              ; preds = %._crit_edge.i331
  %365 = lshr i64 %.0.i334, 1
  %min.iters.check144 = icmp ult i64 %.0.i334, 80
  br i1 %min.iters.check144, label %.lr.ph106.preheader260, label %vector.scevcheck103

vector.scevcheck103:                              ; preds = %.lr.ph106.preheader
  %366 = add nsw i64 %365, -1
  %uglygep104 = getelementptr i8, ptr %.3, i64 48
  %mul.result106.neg = mul i64 %366, -8
  %367 = getelementptr i8, ptr %uglygep104, i64 %mul.result106.neg
  %368 = icmp ugt ptr %367, %uglygep104
  %uglygep108 = getelementptr i8, ptr %.025.i333, i64 -8
  %mul.result110.neg = mul i64 %366, -8
  %mul.overflow111 = icmp ugt i64 %366, %const
  %369 = getelementptr i8, ptr %uglygep108, i64 %mul.result110.neg
  %370 = icmp ugt ptr %369, %uglygep108
  %371 = or i1 %370, %mul.overflow111
  %372 = or i1 %368, %371
  br i1 %372, label %.lr.ph106.preheader260, label %vector.memcheck112

vector.memcheck112:                               ; preds = %vector.scevcheck103
  %uglygep113 = getelementptr i8, ptr %.3282.ph264, i64 8
  %373 = shl i64 %365, 3
  %374 = add i64 %373, 8
  %uglygep114 = getelementptr i8, ptr %.3282.ph264, i64 %374
  %uglygep115 = getelementptr i8, ptr %.027.i332, i64 8
  %uglygep116 = getelementptr i8, ptr %.027.i332, i64 %374
  %375 = sub i64 56, %373
  %uglygep117 = getelementptr i8, ptr %.3, i64 %375
  %376 = mul i64 %365, -8
  %uglygep118 = getelementptr i8, ptr %.025.i333, i64 %376
  %bound0119 = icmp ult ptr %uglygep113, %uglygep116
  %bound1120 = icmp ult ptr %uglygep115, %uglygep114
  %found.conflict121 = and i1 %bound0119, %bound1120
  %bound0122 = icmp ult ptr %uglygep113, %349
  %bound1123 = icmp ult ptr %uglygep117, %uglygep114
  %found.conflict124 = and i1 %bound0122, %bound1123
  %conflict.rdx125 = or i1 %found.conflict121, %found.conflict124
  %bound0126 = icmp ult ptr %uglygep113, %.025.i333
  %bound1127 = icmp ult ptr %uglygep118, %uglygep114
  %found.conflict128 = and i1 %bound0126, %bound1127
  %conflict.rdx129 = or i1 %conflict.rdx125, %found.conflict128
  %bound0130 = icmp ult ptr %uglygep115, %349
  %bound1131 = icmp ult ptr %uglygep117, %uglygep116
  %found.conflict132 = and i1 %bound0130, %bound1131
  %conflict.rdx133 = or i1 %conflict.rdx129, %found.conflict132
  %bound0134 = icmp ult ptr %uglygep115, %.025.i333
  %bound1135 = icmp ult ptr %uglygep118, %uglygep116
  %found.conflict136 = and i1 %bound0134, %bound1135
  %conflict.rdx137 = or i1 %conflict.rdx133, %found.conflict136
  %bound0138 = icmp ult ptr %uglygep117, %.025.i333
  %bound1139 = icmp ult ptr %uglygep118, %349
  %found.conflict140 = and i1 %bound0138, %bound1139
  %conflict.rdx141 = or i1 %conflict.rdx137, %found.conflict140
  br i1 %conflict.rdx141, label %.lr.ph106.preheader260, label %vector.ph145

vector.ph145:                                     ; preds = %vector.memcheck112
  %const569 = bitcast i64 9223372036854775806 to i64
  %n.vec147 = and i64 %365, %const569
  %ind.end148 = and i64 %365, 1
  %377 = shl i64 %n.vec147, 3
  %ind.end150 = getelementptr i8, ptr %.3282.ph264, i64 %377
  %378 = mul i64 %n.vec147, -8
  %ind.end152 = getelementptr i8, ptr %.025.i333, i64 %378
  %379 = shl i64 %n.vec147, 3
  %ind.end154 = getelementptr i8, ptr %.027.i332, i64 %379
  %380 = mul i64 %n.vec147, -8
  %ind.end156 = getelementptr i8, ptr %349, i64 %380
  %381 = lshr i64 %.0.i334, 2
  %382 = mul nsw i64 %381, -2
  br label %vector.body159

vector.body159:                                   ; preds = %vector.body159, %vector.ph145
  %lsr.iv534 = phi i64 [ %lsr.iv.next535, %vector.body159 ], [ 8, %vector.ph145 ]
  %lsr.iv531 = phi i64 [ %lsr.iv.next532, %vector.body159 ], [ 0, %vector.ph145 ]
  %uglygep536 = getelementptr i8, ptr %.027.i332, i64 %lsr.iv534
  %uglygep539 = getelementptr i8, ptr %.3282.ph264, i64 %lsr.iv534
  %wide.load165 = load <2 x i64>, ptr %uglygep539, align 8, !alias.scope !511, !noalias !514
  %sunkaddr660 = mul i64 %lsr.iv531, 8
  %sunkaddr661 = getelementptr i8, ptr %.3, i64 %sunkaddr660
  %sunkaddr662 = getelementptr i8, ptr %sunkaddr661, i64 40
  %wide.load166 = load <2 x i64>, ptr %sunkaddr662, align 8, !alias.scope !518, !noalias !519
  %reverse167 = shufflevector <2 x i64> %wide.load166, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse167, ptr %uglygep539, align 8, !alias.scope !511, !noalias !514
  %reverse168 = shufflevector <2 x i64> %wide.load165, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse168, ptr %sunkaddr662, align 8, !alias.scope !518, !noalias !519
  %sunkaddr663 = mul i64 %lsr.iv531, 8
  %sunkaddr664 = getelementptr i8, ptr %.025.i333, i64 %sunkaddr663
  %sunkaddr665 = getelementptr i8, ptr %sunkaddr664, i64 -16
  %wide.load169 = load <2 x i64>, ptr %sunkaddr665, align 8, !alias.scope !519
  %reverse170 = shufflevector <2 x i64> %wide.load169, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load171 = load <2 x i64>, ptr %uglygep536, align 8, !alias.scope !520, !noalias !521
  %reverse172 = shufflevector <2 x i64> %wide.load171, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse172, ptr %sunkaddr665, align 8, !alias.scope !519
  store <2 x i64> %reverse170, ptr %uglygep536, align 8, !alias.scope !520, !noalias !521
  %lsr.iv.next532 = add nsw i64 %lsr.iv531, -2
  %lsr.iv.next535 = add i64 %lsr.iv534, 16
  %383 = icmp eq i64 %382, %lsr.iv.next532
  br i1 %383, label %middle.block142, label %vector.body159, !llvm.loop !522

middle.block142:                                  ; preds = %vector.body159
  %cmp.n158 = icmp eq i64 %365, %n.vec147
  br i1 %cmp.n158, label %.loopexit, label %.lr.ph106.preheader260

.lr.ph106.preheader260:                           ; preds = %middle.block142, %vector.memcheck112, %vector.scevcheck103, %.lr.ph106.preheader
  %.1.i339105.ph = phi i64 [ %365, %vector.memcheck112 ], [ %365, %vector.scevcheck103 ], [ %365, %.lr.ph106.preheader ], [ %ind.end148, %middle.block142 ]
  %.024.i338104.ph = phi ptr [ %.3282.ph264, %vector.memcheck112 ], [ %.3282.ph264, %vector.scevcheck103 ], [ %.3282.ph264, %.lr.ph106.preheader ], [ %ind.end150, %middle.block142 ]
  %.126.i337103.ph = phi ptr [ %.025.i333, %vector.memcheck112 ], [ %.025.i333, %vector.scevcheck103 ], [ %.025.i333, %.lr.ph106.preheader ], [ %ind.end152, %middle.block142 ]
  %.128.i336102.ph = phi ptr [ %.027.i332, %vector.memcheck112 ], [ %.027.i332, %vector.scevcheck103 ], [ %.027.i332, %.lr.ph106.preheader ], [ %ind.end154, %middle.block142 ]
  %.029.i335101.ph = phi ptr [ %349, %vector.memcheck112 ], [ %349, %vector.scevcheck103 ], [ %349, %.lr.ph106.preheader ], [ %ind.end156, %middle.block142 ]
  %xtraiter364 = and i64 %.1.i339105.ph, 1
  %lcmp.mod365.not = icmp eq i64 %xtraiter364, 0
  br i1 %lcmp.mod365.not, label %.lr.ph106.prol.loopexit, label %.lr.ph106.prol

.lr.ph106.prol:                                   ; preds = %.lr.ph106.preheader260
  %384 = getelementptr inbounds i8, ptr %.128.i336102.ph, i64 8
  %385 = getelementptr inbounds i8, ptr %.126.i337103.ph, i64 -8
  %386 = getelementptr inbounds i8, ptr %.029.i335101.ph, i64 -8
  %387 = getelementptr inbounds i8, ptr %.024.i338104.ph, i64 8
  %388 = add nsw i64 %.1.i339105.ph, -1
  %389 = load i64, ptr %387, align 8
  %390 = load i64, ptr %386, align 8
  store i64 %390, ptr %387, align 8
  store i64 %389, ptr %386, align 8
  %391 = load i64, ptr %385, align 8
  %392 = load i64, ptr %384, align 8
  store i64 %392, ptr %385, align 8
  store i64 %391, ptr %384, align 8
  br label %.lr.ph106.prol.loopexit

.lr.ph106.prol.loopexit:                          ; preds = %.lr.ph106.prol, %.lr.ph106.preheader260
  %.1.i339105.unr = phi i64 [ %.1.i339105.ph, %.lr.ph106.preheader260 ], [ %388, %.lr.ph106.prol ]
  %.024.i338104.unr = phi ptr [ %.024.i338104.ph, %.lr.ph106.preheader260 ], [ %387, %.lr.ph106.prol ]
  %.126.i337103.unr = phi ptr [ %.126.i337103.ph, %.lr.ph106.preheader260 ], [ %385, %.lr.ph106.prol ]
  %.128.i336102.unr = phi ptr [ %.128.i336102.ph, %.lr.ph106.preheader260 ], [ %384, %.lr.ph106.prol ]
  %.029.i335101.unr = phi ptr [ %.029.i335101.ph, %.lr.ph106.preheader260 ], [ %386, %.lr.ph106.prol ]
  %393 = icmp eq i64 %.1.i339105.ph, 1
  br i1 %393, label %.loopexit, label %.lr.ph106.preheader468

.lr.ph106.preheader468:                           ; preds = %.lr.ph106.prol.loopexit
  br label %.lr.ph106

394:                                              ; preds = %348
  %395 = load i64, ptr %355, align 8
  %396 = load i64, ptr %357, align 8
  store i64 %396, ptr %355, align 8
  %397 = getelementptr inbounds i8, ptr %355, i64 -8
  store i64 %395, ptr %357, align 8
  %398 = getelementptr inbounds i8, ptr %357, i64 8
  %399 = add nsw i64 %353, -1
  br label %._crit_edge.i331

.lr.ph106:                                        ; preds = %.lr.ph106, %.lr.ph106.preheader468
  %lsr.iv518 = phi i64 [ -1, %.lr.ph106.preheader468 ], [ %lsr.iv.next519, %.lr.ph106 ]
  %lsr.iv512 = phi i64 [ 0, %.lr.ph106.preheader468 ], [ %lsr.iv.next513, %.lr.ph106 ]
  %400 = shl i64 %lsr.iv518, 3
  %uglygep522 = getelementptr i8, ptr %.126.i337103.unr, i64 %400
  %uglygep529 = getelementptr i8, ptr %.029.i335101.unr, i64 %400
  %sunkaddr666 = mul i64 %lsr.iv512, 8
  %sunkaddr667 = getelementptr i8, ptr %.024.i338104.unr, i64 %sunkaddr666
  %sunkaddr668 = getelementptr i8, ptr %sunkaddr667, i64 8
  %401 = load i64, ptr %sunkaddr668, align 8
  %402 = load i64, ptr %uglygep529, align 8
  store i64 %402, ptr %sunkaddr668, align 8
  store i64 %401, ptr %uglygep529, align 8
  %403 = load i64, ptr %uglygep522, align 8
  %sunkaddr669 = mul i64 %lsr.iv512, 8
  %sunkaddr670 = getelementptr i8, ptr %.128.i336102.unr, i64 %sunkaddr669
  %sunkaddr671 = getelementptr i8, ptr %sunkaddr670, i64 8
  %404 = load i64, ptr %sunkaddr671, align 8
  store i64 %404, ptr %uglygep522, align 8
  store i64 %403, ptr %sunkaddr671, align 8
  %405 = shl i64 %lsr.iv518, 3
  %uglygep520 = getelementptr i8, ptr %.126.i337103.unr, i64 %405
  %uglygep521 = getelementptr i8, ptr %uglygep520, i64 -8
  %uglygep527 = getelementptr i8, ptr %.029.i335101.unr, i64 %405
  %uglygep528 = getelementptr i8, ptr %uglygep527, i64 -8
  %sunkaddr672 = mul i64 %lsr.iv512, 8
  %sunkaddr673 = getelementptr i8, ptr %.024.i338104.unr, i64 %sunkaddr672
  %sunkaddr674 = getelementptr i8, ptr %sunkaddr673, i64 16
  %406 = load i64, ptr %sunkaddr674, align 8
  %407 = load i64, ptr %uglygep528, align 8
  store i64 %407, ptr %sunkaddr674, align 8
  store i64 %406, ptr %uglygep528, align 8
  %408 = load i64, ptr %uglygep521, align 8
  %sunkaddr675 = mul i64 %lsr.iv512, 8
  %sunkaddr676 = getelementptr i8, ptr %.128.i336102.unr, i64 %sunkaddr675
  %sunkaddr677 = getelementptr i8, ptr %sunkaddr676, i64 16
  %409 = load i64, ptr %sunkaddr677, align 8
  store i64 %409, ptr %uglygep521, align 8
  store i64 %408, ptr %sunkaddr677, align 8
  %lsr.iv.next513 = add i64 %lsr.iv512, 2
  %lsr.iv.next519 = add i64 %lsr.iv518, -2
  %410 = icmp eq i64 %.1.i339105.unr, %lsr.iv.next513
  br i1 %410, label %.loopexit, label %.lr.ph106, !llvm.loop !523

411:                                              ; preds = %204
  %412 = getelementptr inbounds i8, ptr %.3, i64 104
  %413 = getelementptr inbounds i8, ptr %.3, i64 112
  %414 = load ptr, ptr %412, align 8
  %415 = load ptr, ptr %413, align 8
  %416 = tail call i8 %2(ptr align 1 %3, ptr align 1 %414, ptr align 1 %415) #18
  %.not314 = icmp eq i8 %416, 1
  br i1 %.not314, label %.critedge55.thread, label %348

.critedge55:                                      ; preds = %204
  %417 = icmp ugt i64 %205, 5
  br i1 %417, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %411
  %418 = getelementptr inbounds i8, ptr %.3, i64 96
  %419 = getelementptr inbounds i8, ptr %.3, i64 104
  %420 = load ptr, ptr %418, align 8
  %421 = load ptr, ptr %419, align 8
  %422 = tail call i8 %2(ptr align 1 %3, ptr align 1 %420, ptr align 1 %421) #18
  %.not313 = icmp eq i8 %422, 1
  br i1 %.not313, label %.critedge57.thread, label %348

.critedge57:                                      ; preds = %.critedge55
  %423 = icmp eq i64 %205, 5
  br i1 %423, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %424 = getelementptr inbounds i8, ptr %.3, i64 88
  %425 = getelementptr inbounds i8, ptr %.3, i64 96
  %426 = load ptr, ptr %424, align 8
  %427 = load ptr, ptr %425, align 8
  %428 = tail call i8 %2(ptr align 1 %3, ptr align 1 %426, ptr align 1 %427) #18
  %.not312 = icmp eq i8 %428, 1
  br i1 %.not312, label %.critedge59.thread, label %348

.critedge59:                                      ; preds = %.critedge57
  %429 = icmp ugt i64 %205, 3
  br i1 %429, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %430 = getelementptr inbounds i8, ptr %.3, i64 80
  %431 = getelementptr inbounds i8, ptr %.3, i64 88
  %432 = load ptr, ptr %430, align 8
  %433 = load ptr, ptr %431, align 8
  %434 = tail call i8 %2(ptr align 1 %3, ptr align 1 %432, ptr align 1 %433) #18
  %.not311 = icmp eq i8 %434, 1
  br i1 %.not311, label %.critedge61.thread, label %348

.critedge61:                                      ; preds = %.critedge59
  %435 = icmp eq i64 %205, 3
  br i1 %435, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %436 = getelementptr inbounds i8, ptr %.3, i64 72
  %437 = getelementptr inbounds i8, ptr %.3, i64 80
  %438 = load ptr, ptr %436, align 8
  %439 = load ptr, ptr %437, align 8
  %440 = tail call i8 %2(ptr align 1 %3, ptr align 1 %438, ptr align 1 %439) #18
  %.not310 = icmp eq i8 %440, 1
  br i1 %.not310, label %.critedge63.thread, label %348

.critedge63:                                      ; preds = %.critedge61
  %441 = icmp ugt i64 %205, 1
  br i1 %441, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %442 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr678 = getelementptr inbounds i8, ptr %.3, i64 64
  %443 = load ptr, ptr %sunkaddr678, align 8
  %444 = load ptr, ptr %442, align 8
  %445 = tail call i8 %2(ptr align 1 %3, ptr align 1 %443, ptr align 1 %444) #18
  %.not309 = icmp eq i8 %445, 1
  br i1 %.not309, label %.critedge65.thread, label %348

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %205, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %446 = getelementptr inbounds i8, ptr %.3, i64 56
  %447 = load ptr, ptr %446, align 8
  %sunkaddr679 = getelementptr inbounds i8, ptr %.3, i64 64
  %448 = load ptr, ptr %sunkaddr679, align 8
  %449 = tail call i8 %2(ptr align 1 %3, ptr align 1 %447, ptr align 1 %448) #18
  %.not308 = icmp eq i8 %449, 1
  br i1 %.not308, label %.critedge67, label %348

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %450 = shl nuw nsw i64 %205, 3
  %451 = getelementptr inbounds i8, ptr %171, i64 %450
  %452 = getelementptr inbounds i8, ptr %451, i64 -8
  %453 = ptrtoint ptr %452 to i64
  %454 = ptrtoint ptr %.3282.ph264 to i64
  %455 = sub nuw i64 %453, %454
  %456 = lshr i64 %455, 4
  %457 = shl nuw nsw i64 %456, 3
  %458 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %457
  %459 = sub nsw i64 0, %457
  %460 = getelementptr inbounds i8, ptr %452, i64 %459
  %461 = and i64 %455, 16
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %501, label %._crit_edge.i341

._crit_edge.i341:                                 ; preds = %501, %.critedge67
  %.027.i342 = phi ptr [ %505, %501 ], [ %460, %.critedge67 ]
  %.025.i343 = phi ptr [ %504, %501 ], [ %458, %.critedge67 ]
  %.0.i344 = phi i64 [ %506, %501 ], [ %456, %.critedge67 ]
  %463 = load i64, ptr %.3282.ph264, align 8
  %464 = load i64, ptr %452, align 8
  store i64 %464, ptr %.3282.ph264, align 8
  store i64 %463, ptr %452, align 8
  %465 = load i64, ptr %.025.i343, align 8
  %466 = load i64, ptr %.027.i342, align 8
  store i64 %466, ptr %.025.i343, align 8
  store i64 %465, ptr %.027.i342, align 8
  %467 = icmp ult i64 %.0.i344, 2
  br i1 %467, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader

.lr.ph112.preheader:                              ; preds = %._crit_edge.i341
  %468 = lshr i64 %.0.i344, 1
  %min.iters.check215 = icmp ult i64 %.0.i344, 84
  br i1 %min.iters.check215, label %.lr.ph112.preheader259, label %vector.scevcheck174

vector.scevcheck174:                              ; preds = %.lr.ph112.preheader
  %469 = add nsw i64 %468, -1
  %470 = add nuw nsw i64 %450, 48
  %uglygep175 = getelementptr i8, ptr %.3, i64 %470
  %mul.result177.neg = mul i64 %469, -8
  %471 = getelementptr i8, ptr %uglygep175, i64 %mul.result177.neg
  %472 = icmp ugt ptr %471, %uglygep175
  %uglygep179 = getelementptr i8, ptr %.025.i343, i64 -8
  %mul.result181.neg = mul i64 %469, -8
  %mul.overflow182 = icmp ugt i64 %469, %const
  %473 = getelementptr i8, ptr %uglygep179, i64 %mul.result181.neg
  %474 = icmp ugt ptr %473, %uglygep179
  %475 = or i1 %474, %mul.overflow182
  %476 = or i1 %472, %475
  br i1 %476, label %.lr.ph112.preheader259, label %vector.memcheck183

vector.memcheck183:                               ; preds = %vector.scevcheck174
  %uglygep184 = getelementptr i8, ptr %.3282.ph264, i64 8
  %477 = shl i64 %468, 3
  %478 = add i64 %477, 8
  %uglygep185 = getelementptr i8, ptr %.3282.ph264, i64 %478
  %uglygep186 = getelementptr i8, ptr %.027.i342, i64 8
  %uglygep187 = getelementptr i8, ptr %.027.i342, i64 %478
  %479 = add nuw nsw i64 %450, 56
  %480 = sub i64 %479, %477
  %uglygep188 = getelementptr i8, ptr %.3, i64 %480
  %481 = mul i64 %468, -8
  %uglygep189 = getelementptr i8, ptr %.025.i343, i64 %481
  %bound0190 = icmp ult ptr %uglygep184, %uglygep187
  %bound1191 = icmp ult ptr %uglygep186, %uglygep185
  %found.conflict192 = and i1 %bound0190, %bound1191
  %bound0193 = icmp ult ptr %uglygep184, %452
  %bound1194 = icmp ult ptr %uglygep188, %uglygep185
  %found.conflict195 = and i1 %bound0193, %bound1194
  %conflict.rdx196 = or i1 %found.conflict192, %found.conflict195
  %bound0197 = icmp ult ptr %uglygep184, %.025.i343
  %bound1198 = icmp ult ptr %uglygep189, %uglygep185
  %found.conflict199 = and i1 %bound0197, %bound1198
  %conflict.rdx200 = or i1 %conflict.rdx196, %found.conflict199
  %bound0201 = icmp ult ptr %uglygep186, %452
  %bound1202 = icmp ult ptr %uglygep188, %uglygep187
  %found.conflict203 = and i1 %bound0201, %bound1202
  %conflict.rdx204 = or i1 %conflict.rdx200, %found.conflict203
  %bound0205 = icmp ult ptr %uglygep186, %.025.i343
  %bound1206 = icmp ult ptr %uglygep189, %uglygep187
  %found.conflict207 = and i1 %bound0205, %bound1206
  %conflict.rdx208 = or i1 %conflict.rdx204, %found.conflict207
  %bound0209 = icmp ult ptr %uglygep188, %.025.i343
  %bound1210 = icmp ult ptr %uglygep189, %452
  %found.conflict211 = and i1 %bound0209, %bound1210
  %conflict.rdx212 = or i1 %conflict.rdx208, %found.conflict211
  br i1 %conflict.rdx212, label %.lr.ph112.preheader259, label %vector.ph216

vector.ph216:                                     ; preds = %vector.memcheck183
  %const570 = bitcast i64 9223372036854775806 to i64
  %n.vec218 = and i64 %468, %const570
  %ind.end219 = and i64 %468, 1
  %482 = shl i64 %n.vec218, 3
  %ind.end221 = getelementptr i8, ptr %.3282.ph264, i64 %482
  %483 = mul i64 %n.vec218, -8
  %ind.end223 = getelementptr i8, ptr %.025.i343, i64 %483
  %484 = shl i64 %n.vec218, 3
  %ind.end225 = getelementptr i8, ptr %.027.i342, i64 %484
  %485 = mul i64 %n.vec218, -8
  %ind.end227 = getelementptr i8, ptr %452, i64 %485
  %486 = add nuw nsw i64 %450, 40
  %uglygep502 = getelementptr i8, ptr %.3, i64 %486
  %487 = lshr i64 %.0.i344, 2
  %488 = mul nsw i64 %487, -2
  br label %vector.body230

vector.body230:                                   ; preds = %vector.body230, %vector.ph216
  %lsr.iv506 = phi i64 [ %lsr.iv.next507, %vector.body230 ], [ 8, %vector.ph216 ]
  %lsr.iv503 = phi i64 [ %lsr.iv.next504, %vector.body230 ], [ 0, %vector.ph216 ]
  %uglygep508 = getelementptr i8, ptr %.027.i342, i64 %lsr.iv506
  %uglygep511 = getelementptr i8, ptr %.3282.ph264, i64 %lsr.iv506
  %wide.load236 = load <2 x i64>, ptr %uglygep511, align 8, !alias.scope !524, !noalias !527
  %489 = shl i64 %lsr.iv503, 3
  %uglygep505 = getelementptr i8, ptr %uglygep502, i64 %489
  %wide.load237 = load <2 x i64>, ptr %uglygep505, align 8, !alias.scope !531, !noalias !532
  %reverse238 = shufflevector <2 x i64> %wide.load237, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse238, ptr %uglygep511, align 8, !alias.scope !524, !noalias !527
  %reverse239 = shufflevector <2 x i64> %wide.load236, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse239, ptr %uglygep505, align 8, !alias.scope !531, !noalias !532
  %sunkaddr680 = mul i64 %lsr.iv503, 8
  %sunkaddr681 = getelementptr i8, ptr %.025.i343, i64 %sunkaddr680
  %sunkaddr682 = getelementptr i8, ptr %sunkaddr681, i64 -16
  %wide.load240 = load <2 x i64>, ptr %sunkaddr682, align 8, !alias.scope !532
  %reverse241 = shufflevector <2 x i64> %wide.load240, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load242 = load <2 x i64>, ptr %uglygep508, align 8, !alias.scope !533, !noalias !534
  %reverse243 = shufflevector <2 x i64> %wide.load242, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse243, ptr %sunkaddr682, align 8, !alias.scope !532
  store <2 x i64> %reverse241, ptr %uglygep508, align 8, !alias.scope !533, !noalias !534
  %lsr.iv.next504 = add nsw i64 %lsr.iv503, -2
  %lsr.iv.next507 = add i64 %lsr.iv506, 16
  %490 = icmp eq i64 %488, %lsr.iv.next504
  br i1 %490, label %middle.block213, label %vector.body230, !llvm.loop !535

middle.block213:                                  ; preds = %vector.body230
  %cmp.n229 = icmp eq i64 %468, %n.vec218
  br i1 %cmp.n229, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader259

.lr.ph112.preheader259:                           ; preds = %middle.block213, %vector.memcheck183, %vector.scevcheck174, %.lr.ph112.preheader
  %.1.i349111.ph = phi i64 [ %468, %vector.memcheck183 ], [ %468, %vector.scevcheck174 ], [ %468, %.lr.ph112.preheader ], [ %ind.end219, %middle.block213 ]
  %.024.i348110.ph = phi ptr [ %.3282.ph264, %vector.memcheck183 ], [ %.3282.ph264, %vector.scevcheck174 ], [ %.3282.ph264, %.lr.ph112.preheader ], [ %ind.end221, %middle.block213 ]
  %.126.i347109.ph = phi ptr [ %.025.i343, %vector.memcheck183 ], [ %.025.i343, %vector.scevcheck174 ], [ %.025.i343, %.lr.ph112.preheader ], [ %ind.end223, %middle.block213 ]
  %.128.i346108.ph = phi ptr [ %.027.i342, %vector.memcheck183 ], [ %.027.i342, %vector.scevcheck174 ], [ %.027.i342, %.lr.ph112.preheader ], [ %ind.end225, %middle.block213 ]
  %.029.i345107.ph = phi ptr [ %452, %vector.memcheck183 ], [ %452, %vector.scevcheck174 ], [ %452, %.lr.ph112.preheader ], [ %ind.end227, %middle.block213 ]
  %xtraiter366 = and i64 %.1.i349111.ph, 1
  %lcmp.mod367.not = icmp eq i64 %xtraiter366, 0
  br i1 %lcmp.mod367.not, label %.lr.ph112.prol.loopexit, label %.lr.ph112.prol

.lr.ph112.prol:                                   ; preds = %.lr.ph112.preheader259
  %491 = getelementptr inbounds i8, ptr %.128.i346108.ph, i64 8
  %492 = getelementptr inbounds i8, ptr %.126.i347109.ph, i64 -8
  %493 = getelementptr inbounds i8, ptr %.029.i345107.ph, i64 -8
  %494 = getelementptr inbounds i8, ptr %.024.i348110.ph, i64 8
  %495 = add nsw i64 %.1.i349111.ph, -1
  %496 = load i64, ptr %494, align 8
  %497 = load i64, ptr %493, align 8
  store i64 %497, ptr %494, align 8
  store i64 %496, ptr %493, align 8
  %498 = load i64, ptr %492, align 8
  %499 = load i64, ptr %491, align 8
  store i64 %499, ptr %492, align 8
  store i64 %498, ptr %491, align 8
  br label %.lr.ph112.prol.loopexit

.lr.ph112.prol.loopexit:                          ; preds = %.lr.ph112.prol, %.lr.ph112.preheader259
  %.1.i349111.unr = phi i64 [ %.1.i349111.ph, %.lr.ph112.preheader259 ], [ %495, %.lr.ph112.prol ]
  %.024.i348110.unr = phi ptr [ %.024.i348110.ph, %.lr.ph112.preheader259 ], [ %494, %.lr.ph112.prol ]
  %.126.i347109.unr = phi ptr [ %.126.i347109.ph, %.lr.ph112.preheader259 ], [ %492, %.lr.ph112.prol ]
  %.128.i346108.unr = phi ptr [ %.128.i346108.ph, %.lr.ph112.preheader259 ], [ %491, %.lr.ph112.prol ]
  %.029.i345107.unr = phi ptr [ %.029.i345107.ph, %.lr.ph112.preheader259 ], [ %493, %.lr.ph112.prol ]
  %500 = icmp eq i64 %.1.i349111.ph, 1
  br i1 %500, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader467

.lr.ph112.preheader467:                           ; preds = %.lr.ph112.prol.loopexit
  br label %.lr.ph112

501:                                              ; preds = %.critedge67
  %502 = load i64, ptr %458, align 8
  %503 = load i64, ptr %460, align 8
  store i64 %503, ptr %458, align 8
  %504 = getelementptr inbounds i8, ptr %458, i64 -8
  store i64 %502, ptr %460, align 8
  %505 = getelementptr inbounds i8, ptr %460, i64 8
  %506 = add nsw i64 %456, -1
  br label %._crit_edge.i341

.lr.ph112:                                        ; preds = %.lr.ph112, %.lr.ph112.preheader467
  %lsr.iv490 = phi i64 [ -1, %.lr.ph112.preheader467 ], [ %lsr.iv.next491, %.lr.ph112 ]
  %lsr.iv484 = phi i64 [ 0, %.lr.ph112.preheader467 ], [ %lsr.iv.next485, %.lr.ph112 ]
  %507 = shl i64 %lsr.iv490, 3
  %uglygep494 = getelementptr i8, ptr %.126.i347109.unr, i64 %507
  %uglygep501 = getelementptr i8, ptr %.029.i345107.unr, i64 %507
  %sunkaddr683 = mul i64 %lsr.iv484, 8
  %sunkaddr684 = getelementptr i8, ptr %.024.i348110.unr, i64 %sunkaddr683
  %sunkaddr685 = getelementptr i8, ptr %sunkaddr684, i64 8
  %508 = load i64, ptr %sunkaddr685, align 8
  %509 = load i64, ptr %uglygep501, align 8
  store i64 %509, ptr %sunkaddr685, align 8
  store i64 %508, ptr %uglygep501, align 8
  %510 = load i64, ptr %uglygep494, align 8
  %sunkaddr686 = mul i64 %lsr.iv484, 8
  %sunkaddr687 = getelementptr i8, ptr %.128.i346108.unr, i64 %sunkaddr686
  %sunkaddr688 = getelementptr i8, ptr %sunkaddr687, i64 8
  %511 = load i64, ptr %sunkaddr688, align 8
  store i64 %511, ptr %uglygep494, align 8
  store i64 %510, ptr %sunkaddr688, align 8
  %512 = shl i64 %lsr.iv490, 3
  %uglygep492 = getelementptr i8, ptr %.126.i347109.unr, i64 %512
  %uglygep493 = getelementptr i8, ptr %uglygep492, i64 -8
  %uglygep499 = getelementptr i8, ptr %.029.i345107.unr, i64 %512
  %uglygep500 = getelementptr i8, ptr %uglygep499, i64 -8
  %sunkaddr689 = mul i64 %lsr.iv484, 8
  %sunkaddr690 = getelementptr i8, ptr %.024.i348110.unr, i64 %sunkaddr689
  %sunkaddr691 = getelementptr i8, ptr %sunkaddr690, i64 16
  %513 = load i64, ptr %sunkaddr691, align 8
  %514 = load i64, ptr %uglygep500, align 8
  store i64 %514, ptr %sunkaddr691, align 8
  store i64 %513, ptr %uglygep500, align 8
  %515 = load i64, ptr %uglygep493, align 8
  %sunkaddr692 = mul i64 %lsr.iv484, 8
  %sunkaddr693 = getelementptr i8, ptr %.128.i346108.unr, i64 %sunkaddr692
  %sunkaddr694 = getelementptr i8, ptr %sunkaddr693, i64 16
  %516 = load i64, ptr %sunkaddr694, align 8
  store i64 %516, ptr %uglygep493, align 8
  store i64 %515, ptr %sunkaddr694, align 8
  %lsr.iv.next485 = add i64 %lsr.iv484, 2
  %lsr.iv.next491 = add i64 %lsr.iv490, -2
  %517 = icmp eq i64 %.1.i349111.unr, %lsr.iv.next485
  br i1 %517, label %sort.quad_reversal.exit350, label %.lr.ph112, !llvm.loop !536

sort.quad_reversal.exit350:                       ; preds = %.lr.ph112, %.lr.ph112.prol.loopexit, %middle.block213, %._crit_edge.i341
  %518 = icmp eq ptr %.3282.ph264, %0
  br i1 %518, label %common.ret, label %519

common.ret:                                       ; preds = %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit350
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit350 ], [ true, %._crit_edge ], [ true, %.loopexit.i ]
  ret i1 %common.ret.op

519:                                              ; preds = %.loopexit, %sort.quad_reversal.exit350
  %.not302113 = icmp ult i64 %1, 32
  br i1 %.not302113, label %._crit_edge, label %.lr.ph116

.lr.ph116:                                        ; preds = %519
  %520 = lshr i64 %1, 5
  %521 = getelementptr inbounds i8, ptr %5, i64 120
  %522 = getelementptr inbounds i8, ptr %5, i64 128
  %523 = getelementptr inbounds i8, ptr %5, i64 248
  %.sroa.gep2 = getelementptr inbounds i8, ptr %5, i64 136
  %.sroa.gep3 = getelementptr inbounds i8, ptr %5, i64 8
  %.167.i.1 = getelementptr inbounds i8, ptr %5, i64 16
  %.167.i.1.sroa.gep = getelementptr inbounds i8, ptr %5, i64 24
  %uglygep475 = getelementptr i8, ptr %0, i64 8
  br label %525

.loopexit:                                        ; preds = %.lr.ph106, %.lr.ph106.prol.loopexit, %middle.block142, %._crit_edge.i331, %103, %42, %4
  %.0.ph = phi ptr [ %171, %._crit_edge.i331 ], [ %0, %4 ], [ %171, %middle.block142 ], [ %171, %.lr.ph106.prol.loopexit ], [ %171, %.lr.ph106 ], [ %104, %103 ], [ %.2, %42 ]
  %524 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %.0.ph, i64 %524, ptr nonnull align 1 %5, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %519

525:                                              ; preds = %533, %.lr.ph116
  %lsr.iv476 = phi ptr [ %uglygep475, %.lr.ph116 ], [ %uglygep477, %533 ]
  %.5115 = phi ptr [ %0, %.lr.ph116 ], [ %535, %533 ]
  %.4288114 = phi i64 [ %520, %.lr.ph116 ], [ %534, %533 ]
  %526 = getelementptr inbounds i8, ptr %.5115, i64 56
  %527 = getelementptr inbounds i8, ptr %.5115, i64 64
  %528 = load ptr, ptr %526, align 8
  %529 = load ptr, ptr %527, align 8
  %530 = call i8 %2(ptr align 1 %3, ptr align 1 %528, ptr align 1 %529) #18
  %.not303 = icmp eq i8 %530, 1
  br i1 %.not303, label %.critedge69, label %536

._crit_edge:                                      ; preds = %533, %519
  %.5.lcssa = phi ptr [ %0, %519 ], [ %535, %533 ]
  %531 = and i64 %1, 31
  %532 = icmp ugt i64 %531, 8
  br i1 %532, label %.preheader.lr.ph.i, label %common.ret

533:                                              ; preds = %sort.parity_merge__anon_16232.exit399, %542
  %534 = add nsw i64 %.4288114, -1
  %535 = getelementptr inbounds i8, ptr %.5115, i64 256
  %uglygep477 = getelementptr i8, ptr %lsr.iv476, i64 256
  %.not302 = icmp eq i64 %534, 0
  br i1 %.not302, label %._crit_edge, label %525

536:                                              ; preds = %525
  %537 = getelementptr inbounds i8, ptr %.5115, i64 120
  %538 = getelementptr inbounds i8, ptr %.5115, i64 128
  %539 = load ptr, ptr %537, align 8
  %540 = load ptr, ptr %538, align 8
  %541 = call i8 %2(ptr align 1 %3, ptr align 1 %539, ptr align 1 %540) #18
  %.not304 = icmp eq i8 %541, 1
  br i1 %.not304, label %.critedge69, label %542

542:                                              ; preds = %536
  %543 = getelementptr inbounds i8, ptr %.5115, i64 184
  %544 = getelementptr inbounds i8, ptr %.5115, i64 192
  %545 = load ptr, ptr %543, align 8
  %546 = load ptr, ptr %544, align 8
  %547 = call i8 %2(ptr align 1 %3, ptr align 1 %545, ptr align 1 %546) #18
  %.not305 = icmp eq i8 %547, 1
  br i1 %.not305, label %.critedge69, label %533

.critedge69:                                      ; preds = %542, %536, %525
  %548 = getelementptr inbounds i8, ptr %.5115, i64 120
  %549 = load ptr, ptr %.5115, align 8
  %sunkaddr695 = getelementptr inbounds i8, ptr %.5115, i64 64
  %550 = load ptr, ptr %sunkaddr695, align 8
  %551 = call i8 %2(ptr align 1 %3, ptr align 1 %549, ptr align 1 %550) #18
  %.not.i = icmp eq i8 %551, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %527, ptr %.5115
  %552 = load i64, ptr %.sroa.speculated21.i, align 8
  store i64 %552, ptr %5, align 8
  %553 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 8
  %.0..i = select i1 %.not.i, ptr %.5115, ptr %553
  %..061.i = select i1 %.not.i, ptr %553, ptr %527
  %554 = load ptr, ptr %.0..i, align 8
  %555 = load ptr, ptr %..061.i, align 8
  %556 = call i8 %2(ptr align 1 %3, ptr align 1 %554, ptr align 1 %555) #18
  %.not76.i = icmp eq i8 %556, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  %557 = load i64, ptr %.sroa.speculated.i, align 8
  %sunkaddr696 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %557, ptr %sunkaddr696, align 8
  %558 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %..364.i = select i1 %.not76.i, ptr %558, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %558
  %sunkaddr697 = getelementptr inbounds i8, ptr %.5115, i64 56
  %559 = load ptr, ptr %sunkaddr697, align 8
  %560 = load ptr, ptr %548, align 8
  %561 = call i8 %2(ptr align 1 %3, ptr align 1 %559, ptr align 1 %560) #18
  %562 = icmp eq i8 %561, 1
  %.sroa.speculated40.i698 = select i1 %562, i64 56, i64 120
  %.sroa.speculated40.i = select i1 %562, ptr %526, ptr %548
  %sunkaddr699 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i698
  %563 = load i64, ptr %sunkaddr699, align 8
  %sunkaddr700 = getelementptr inbounds i8, ptr %5, i64 120
  store i64 %563, ptr %sunkaddr700, align 8
  %564 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 -8
  %.171.i = select i1 %562, ptr %548, ptr %564
  %.169.i = select i1 %562, ptr %564, ptr %526
  %565 = load ptr, ptr %.3..i, align 8
  %566 = load ptr, ptr %..364.i, align 8
  %567 = call i8 %2(ptr align 1 %3, ptr align 1 %565, ptr align 1 %566) #18
  %.not76.i.1 = icmp eq i8 %567, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  %568 = load i64, ptr %.sroa.speculated.i.1, align 8
  %sunkaddr701 = getelementptr inbounds i8, ptr %5, i64 16
  store i64 %568, ptr %sunkaddr701, align 8
  %569 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 8
  %..364.i.1 = select i1 %.not76.i.1, ptr %569, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %569
  %570 = load ptr, ptr %.169.i, align 8
  %571 = load ptr, ptr %.171.i, align 8
  %572 = call i8 %2(ptr align 1 %3, ptr align 1 %570, ptr align 1 %571) #18
  %573 = icmp eq i8 %572, 1
  %.sroa.speculated40.i.1 = select i1 %573, ptr %.169.i, ptr %.171.i
  %574 = load i64, ptr %.sroa.speculated40.i.1, align 8
  %sunkaddr702 = getelementptr inbounds i8, ptr %5, i64 112
  store i64 %574, ptr %sunkaddr702, align 8
  %575 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 -8
  %.171.i.1 = select i1 %573, ptr %.171.i, ptr %575
  %.169.i.1 = select i1 %573, ptr %575, ptr %.169.i
  %576 = load ptr, ptr %.3..i.1, align 8
  %577 = load ptr, ptr %..364.i.1, align 8
  %578 = call i8 %2(ptr align 1 %3, ptr align 1 %576, ptr align 1 %577) #18
  %.not76.i.2 = icmp eq i8 %578, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  %579 = load i64, ptr %.sroa.speculated.i.2, align 8
  %sunkaddr703 = getelementptr inbounds i8, ptr %5, i64 24
  store i64 %579, ptr %sunkaddr703, align 8
  %580 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 8
  %..364.i.2 = select i1 %.not76.i.2, ptr %580, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %580
  %581 = load ptr, ptr %.169.i.1, align 8
  %582 = load ptr, ptr %.171.i.1, align 8
  %583 = call i8 %2(ptr align 1 %3, ptr align 1 %581, ptr align 1 %582) #18
  %584 = icmp eq i8 %583, 1
  %.sroa.speculated40.i.2 = select i1 %584, ptr %.169.i.1, ptr %.171.i.1
  %585 = load i64, ptr %.sroa.speculated40.i.2, align 8
  %sunkaddr704 = getelementptr inbounds i8, ptr %5, i64 104
  store i64 %585, ptr %sunkaddr704, align 8
  %586 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 -8
  %.171.i.2 = select i1 %584, ptr %.171.i.1, ptr %586
  %.169.i.2 = select i1 %584, ptr %586, ptr %.169.i.1
  %587 = load ptr, ptr %.3..i.2, align 8
  %588 = load ptr, ptr %..364.i.2, align 8
  %589 = call i8 %2(ptr align 1 %3, ptr align 1 %587, ptr align 1 %588) #18
  %.not76.i.3 = icmp eq i8 %589, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  %590 = load i64, ptr %.sroa.speculated.i.3, align 8
  %sunkaddr705 = getelementptr inbounds i8, ptr %5, i64 32
  store i64 %590, ptr %sunkaddr705, align 8
  %591 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 8
  %..364.i.3 = select i1 %.not76.i.3, ptr %591, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %591
  %592 = load ptr, ptr %.169.i.2, align 8
  %593 = load ptr, ptr %.171.i.2, align 8
  %594 = call i8 %2(ptr align 1 %3, ptr align 1 %592, ptr align 1 %593) #18
  %595 = icmp eq i8 %594, 1
  %.sroa.speculated40.i.3 = select i1 %595, ptr %.169.i.2, ptr %.171.i.2
  %596 = load i64, ptr %.sroa.speculated40.i.3, align 8
  %sunkaddr706 = getelementptr inbounds i8, ptr %5, i64 96
  store i64 %596, ptr %sunkaddr706, align 8
  %597 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 -8
  %.171.i.3 = select i1 %595, ptr %.171.i.2, ptr %597
  %.169.i.3 = select i1 %595, ptr %597, ptr %.169.i.2
  %598 = load ptr, ptr %.3..i.3, align 8
  %599 = load ptr, ptr %..364.i.3, align 8
  %600 = call i8 %2(ptr align 1 %3, ptr align 1 %598, ptr align 1 %599) #18
  %.not76.i.4 = icmp eq i8 %600, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  %601 = load i64, ptr %.sroa.speculated.i.4, align 8
  %sunkaddr707 = getelementptr inbounds i8, ptr %5, i64 40
  store i64 %601, ptr %sunkaddr707, align 8
  %602 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 8
  %..364.i.4 = select i1 %.not76.i.4, ptr %602, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %602
  %603 = load ptr, ptr %.169.i.3, align 8
  %604 = load ptr, ptr %.171.i.3, align 8
  %605 = call i8 %2(ptr align 1 %3, ptr align 1 %603, ptr align 1 %604) #18
  %606 = icmp eq i8 %605, 1
  %.sroa.speculated40.i.4 = select i1 %606, ptr %.169.i.3, ptr %.171.i.3
  %607 = load i64, ptr %.sroa.speculated40.i.4, align 8
  %sunkaddr708 = getelementptr inbounds i8, ptr %5, i64 88
  store i64 %607, ptr %sunkaddr708, align 8
  %608 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 -8
  %.171.i.4 = select i1 %606, ptr %.171.i.3, ptr %608
  %.169.i.4 = select i1 %606, ptr %608, ptr %.169.i.3
  %609 = load ptr, ptr %.3..i.4, align 8
  %610 = load ptr, ptr %..364.i.4, align 8
  %611 = call i8 %2(ptr align 1 %3, ptr align 1 %609, ptr align 1 %610) #18
  %.not76.i.5 = icmp eq i8 %611, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  %612 = load i64, ptr %.sroa.speculated.i.5, align 8
  %sunkaddr709 = getelementptr inbounds i8, ptr %5, i64 48
  store i64 %612, ptr %sunkaddr709, align 8
  %613 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 8
  %..364.i.5 = select i1 %.not76.i.5, ptr %613, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %613
  %614 = load ptr, ptr %.169.i.4, align 8
  %615 = load ptr, ptr %.171.i.4, align 8
  %616 = call i8 %2(ptr align 1 %3, ptr align 1 %614, ptr align 1 %615) #18
  %617 = icmp eq i8 %616, 1
  %.sroa.speculated40.i.5 = select i1 %617, ptr %.169.i.4, ptr %.171.i.4
  %618 = load i64, ptr %.sroa.speculated40.i.5, align 8
  %sunkaddr710 = getelementptr inbounds i8, ptr %5, i64 80
  store i64 %618, ptr %sunkaddr710, align 8
  %619 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 -8
  %.171.i.5 = select i1 %617, ptr %.171.i.4, ptr %619
  %.169.i.5 = select i1 %617, ptr %619, ptr %.169.i.4
  %620 = load ptr, ptr %.3..i.5, align 8
  %621 = load ptr, ptr %..364.i.5, align 8
  %622 = call i8 %2(ptr align 1 %3, ptr align 1 %620, ptr align 1 %621) #18
  %.not76.i.6 = icmp eq i8 %622, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  %623 = load i64, ptr %.sroa.speculated.i.6, align 8
  %sunkaddr711 = getelementptr inbounds i8, ptr %5, i64 56
  store i64 %623, ptr %sunkaddr711, align 8
  %624 = load ptr, ptr %.169.i.5, align 8
  %625 = load ptr, ptr %.171.i.5, align 8
  %626 = call i8 %2(ptr align 1 %3, ptr align 1 %624, ptr align 1 %625) #18
  %627 = icmp eq i8 %626, 1
  %.sroa.speculated40.i.6 = select i1 %627, ptr %.169.i.5, ptr %.171.i.5
  %628 = load i64, ptr %.sroa.speculated40.i.6, align 8
  %sunkaddr712 = getelementptr inbounds i8, ptr %5, i64 72
  store i64 %628, ptr %sunkaddr712, align 8
  %629 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 -8
  %.171.i.6 = select i1 %627, ptr %.171.i.5, ptr %629
  %.169.i.6 = select i1 %627, ptr %629, ptr %.169.i.5
  %630 = load ptr, ptr %.169.i.6, align 8
  %631 = load ptr, ptr %.171.i.6, align 8
  %632 = call i8 %2(ptr align 1 %3, ptr align 1 %630, ptr align 1 %631) #18
  %633 = icmp eq i8 %632, 1
  %.sroa.speculated46.i = select i1 %633, ptr %.169.i.6, ptr %.171.i.6
  %634 = load i64, ptr %.sroa.speculated46.i, align 8
  %sunkaddr713 = getelementptr inbounds i8, ptr %5, i64 64
  store i64 %634, ptr %sunkaddr713, align 8
  %635 = getelementptr inbounds i8, ptr %.5115, i64 128
  %636 = getelementptr inbounds i8, ptr %.5115, i64 192
  %637 = getelementptr inbounds i8, ptr %.5115, i64 184
  %638 = getelementptr inbounds i8, ptr %.5115, i64 248
  %639 = load ptr, ptr %635, align 8
  %640 = load ptr, ptr %636, align 8
  %641 = call i8 %2(ptr align 1 %3, ptr align 1 %639, ptr align 1 %640) #18
  %.not.i353 = icmp eq i8 %641, 1
  %.sroa.speculated21.i354714 = select i1 %.not.i353, i64 192, i64 128
  %.sroa.speculated21.i354 = select i1 %.not.i353, ptr %636, ptr %635
  %sunkaddr715 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated21.i354714
  %642 = load i64, ptr %sunkaddr715, align 8
  %sunkaddr716 = getelementptr inbounds i8, ptr %5, i64 128
  store i64 %642, ptr %sunkaddr716, align 8
  %643 = getelementptr inbounds i8, ptr %.sroa.speculated21.i354, i64 8
  %.0..i355 = select i1 %.not.i353, ptr %635, ptr %643
  %..061.i356 = select i1 %.not.i353, ptr %643, ptr %636
  %644 = load ptr, ptr %.0..i355, align 8
  %645 = load ptr, ptr %..061.i356, align 8
  %646 = call i8 %2(ptr align 1 %3, ptr align 1 %644, ptr align 1 %645) #18
  %.not76.i365 = icmp eq i8 %646, 1
  %.sroa.speculated.i366 = select i1 %.not76.i365, ptr %..061.i356, ptr %.0..i355
  %647 = load i64, ptr %.sroa.speculated.i366, align 8
  %sunkaddr717 = getelementptr inbounds i8, ptr %5, i64 136
  store i64 %647, ptr %sunkaddr717, align 8
  %648 = getelementptr inbounds i8, ptr %.sroa.speculated.i366, i64 8
  %..364.i367 = select i1 %.not76.i365, ptr %648, ptr %..061.i356
  %.3..i368 = select i1 %.not76.i365, ptr %.0..i355, ptr %648
  %649 = load ptr, ptr %637, align 8
  %650 = load ptr, ptr %638, align 8
  %651 = call i8 %2(ptr align 1 %3, ptr align 1 %649, ptr align 1 %650) #18
  %652 = icmp eq i8 %651, 1
  %.sroa.speculated40.i369718 = select i1 %652, i64 184, i64 248
  %.sroa.speculated40.i369 = select i1 %652, ptr %637, ptr %638
  %sunkaddr719 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i369718
  %653 = load i64, ptr %sunkaddr719, align 8
  %sunkaddr720 = getelementptr inbounds i8, ptr %5, i64 248
  store i64 %653, ptr %sunkaddr720, align 8
  %654 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369, i64 -8
  %.171.i370 = select i1 %652, ptr %638, ptr %654
  %.169.i371 = select i1 %652, ptr %654, ptr %637
  %655 = load ptr, ptr %.3..i368, align 8
  %656 = load ptr, ptr %..364.i367, align 8
  %657 = call i8 %2(ptr align 1 %3, ptr align 1 %655, ptr align 1 %656) #18
  %.not76.i365.1 = icmp eq i8 %657, 1
  %.sroa.speculated.i366.1 = select i1 %.not76.i365.1, ptr %..364.i367, ptr %.3..i368
  %658 = load i64, ptr %.sroa.speculated.i366.1, align 8
  %sunkaddr721 = getelementptr inbounds i8, ptr %5, i64 144
  store i64 %658, ptr %sunkaddr721, align 8
  %659 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.1, i64 8
  %..364.i367.1 = select i1 %.not76.i365.1, ptr %659, ptr %..364.i367
  %.3..i368.1 = select i1 %.not76.i365.1, ptr %.3..i368, ptr %659
  %660 = load ptr, ptr %.169.i371, align 8
  %661 = load ptr, ptr %.171.i370, align 8
  %662 = call i8 %2(ptr align 1 %3, ptr align 1 %660, ptr align 1 %661) #18
  %663 = icmp eq i8 %662, 1
  %.sroa.speculated40.i369.1 = select i1 %663, ptr %.169.i371, ptr %.171.i370
  %664 = load i64, ptr %.sroa.speculated40.i369.1, align 8
  %sunkaddr722 = getelementptr inbounds i8, ptr %5, i64 240
  store i64 %664, ptr %sunkaddr722, align 8
  %665 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.1, i64 -8
  %.171.i370.1 = select i1 %663, ptr %.171.i370, ptr %665
  %.169.i371.1 = select i1 %663, ptr %665, ptr %.169.i371
  %666 = load ptr, ptr %.3..i368.1, align 8
  %667 = load ptr, ptr %..364.i367.1, align 8
  %668 = call i8 %2(ptr align 1 %3, ptr align 1 %666, ptr align 1 %667) #18
  %.not76.i365.2 = icmp eq i8 %668, 1
  %.sroa.speculated.i366.2 = select i1 %.not76.i365.2, ptr %..364.i367.1, ptr %.3..i368.1
  %669 = load i64, ptr %.sroa.speculated.i366.2, align 8
  %sunkaddr723 = getelementptr inbounds i8, ptr %5, i64 152
  store i64 %669, ptr %sunkaddr723, align 8
  %670 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.2, i64 8
  %..364.i367.2 = select i1 %.not76.i365.2, ptr %670, ptr %..364.i367.1
  %.3..i368.2 = select i1 %.not76.i365.2, ptr %.3..i368.1, ptr %670
  %671 = load ptr, ptr %.169.i371.1, align 8
  %672 = load ptr, ptr %.171.i370.1, align 8
  %673 = call i8 %2(ptr align 1 %3, ptr align 1 %671, ptr align 1 %672) #18
  %674 = icmp eq i8 %673, 1
  %.sroa.speculated40.i369.2 = select i1 %674, ptr %.169.i371.1, ptr %.171.i370.1
  %675 = load i64, ptr %.sroa.speculated40.i369.2, align 8
  %sunkaddr724 = getelementptr inbounds i8, ptr %5, i64 232
  store i64 %675, ptr %sunkaddr724, align 8
  %676 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.2, i64 -8
  %.171.i370.2 = select i1 %674, ptr %.171.i370.1, ptr %676
  %.169.i371.2 = select i1 %674, ptr %676, ptr %.169.i371.1
  %677 = load ptr, ptr %.3..i368.2, align 8
  %678 = load ptr, ptr %..364.i367.2, align 8
  %679 = call i8 %2(ptr align 1 %3, ptr align 1 %677, ptr align 1 %678) #18
  %.not76.i365.3 = icmp eq i8 %679, 1
  %.sroa.speculated.i366.3 = select i1 %.not76.i365.3, ptr %..364.i367.2, ptr %.3..i368.2
  %680 = load i64, ptr %.sroa.speculated.i366.3, align 8
  %sunkaddr725 = getelementptr inbounds i8, ptr %5, i64 160
  store i64 %680, ptr %sunkaddr725, align 8
  %681 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.3, i64 8
  %..364.i367.3 = select i1 %.not76.i365.3, ptr %681, ptr %..364.i367.2
  %.3..i368.3 = select i1 %.not76.i365.3, ptr %.3..i368.2, ptr %681
  %682 = load ptr, ptr %.169.i371.2, align 8
  %683 = load ptr, ptr %.171.i370.2, align 8
  %684 = call i8 %2(ptr align 1 %3, ptr align 1 %682, ptr align 1 %683) #18
  %685 = icmp eq i8 %684, 1
  %.sroa.speculated40.i369.3 = select i1 %685, ptr %.169.i371.2, ptr %.171.i370.2
  %686 = load i64, ptr %.sroa.speculated40.i369.3, align 8
  %sunkaddr726 = getelementptr inbounds i8, ptr %5, i64 224
  store i64 %686, ptr %sunkaddr726, align 8
  %687 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.3, i64 -8
  %.171.i370.3 = select i1 %685, ptr %.171.i370.2, ptr %687
  %.169.i371.3 = select i1 %685, ptr %687, ptr %.169.i371.2
  %688 = load ptr, ptr %.3..i368.3, align 8
  %689 = load ptr, ptr %..364.i367.3, align 8
  %690 = call i8 %2(ptr align 1 %3, ptr align 1 %688, ptr align 1 %689) #18
  %.not76.i365.4 = icmp eq i8 %690, 1
  %.sroa.speculated.i366.4 = select i1 %.not76.i365.4, ptr %..364.i367.3, ptr %.3..i368.3
  %691 = load i64, ptr %.sroa.speculated.i366.4, align 8
  %sunkaddr727 = getelementptr inbounds i8, ptr %5, i64 168
  store i64 %691, ptr %sunkaddr727, align 8
  %692 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.4, i64 8
  %..364.i367.4 = select i1 %.not76.i365.4, ptr %692, ptr %..364.i367.3
  %.3..i368.4 = select i1 %.not76.i365.4, ptr %.3..i368.3, ptr %692
  %693 = load ptr, ptr %.169.i371.3, align 8
  %694 = load ptr, ptr %.171.i370.3, align 8
  %695 = call i8 %2(ptr align 1 %3, ptr align 1 %693, ptr align 1 %694) #18
  %696 = icmp eq i8 %695, 1
  %.sroa.speculated40.i369.4 = select i1 %696, ptr %.169.i371.3, ptr %.171.i370.3
  %697 = load i64, ptr %.sroa.speculated40.i369.4, align 8
  %sunkaddr728 = getelementptr inbounds i8, ptr %5, i64 216
  store i64 %697, ptr %sunkaddr728, align 8
  %698 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.4, i64 -8
  %.171.i370.4 = select i1 %696, ptr %.171.i370.3, ptr %698
  %.169.i371.4 = select i1 %696, ptr %698, ptr %.169.i371.3
  %699 = load ptr, ptr %.3..i368.4, align 8
  %700 = load ptr, ptr %..364.i367.4, align 8
  %701 = call i8 %2(ptr align 1 %3, ptr align 1 %699, ptr align 1 %700) #18
  %.not76.i365.5 = icmp eq i8 %701, 1
  %.sroa.speculated.i366.5 = select i1 %.not76.i365.5, ptr %..364.i367.4, ptr %.3..i368.4
  %702 = load i64, ptr %.sroa.speculated.i366.5, align 8
  %sunkaddr729 = getelementptr inbounds i8, ptr %5, i64 176
  store i64 %702, ptr %sunkaddr729, align 8
  %703 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.5, i64 8
  %..364.i367.5 = select i1 %.not76.i365.5, ptr %703, ptr %..364.i367.4
  %.3..i368.5 = select i1 %.not76.i365.5, ptr %.3..i368.4, ptr %703
  %704 = load ptr, ptr %.169.i371.4, align 8
  %705 = load ptr, ptr %.171.i370.4, align 8
  %706 = call i8 %2(ptr align 1 %3, ptr align 1 %704, ptr align 1 %705) #18
  %707 = icmp eq i8 %706, 1
  %.sroa.speculated40.i369.5 = select i1 %707, ptr %.169.i371.4, ptr %.171.i370.4
  %708 = load i64, ptr %.sroa.speculated40.i369.5, align 8
  %sunkaddr730 = getelementptr inbounds i8, ptr %5, i64 208
  store i64 %708, ptr %sunkaddr730, align 8
  %709 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.5, i64 -8
  %.171.i370.5 = select i1 %707, ptr %.171.i370.4, ptr %709
  %.169.i371.5 = select i1 %707, ptr %709, ptr %.169.i371.4
  %710 = load ptr, ptr %.3..i368.5, align 8
  %711 = load ptr, ptr %..364.i367.5, align 8
  %712 = call i8 %2(ptr align 1 %3, ptr align 1 %710, ptr align 1 %711) #18
  %.not76.i365.6 = icmp eq i8 %712, 1
  %.sroa.speculated.i366.6 = select i1 %.not76.i365.6, ptr %..364.i367.5, ptr %.3..i368.5
  %713 = load i64, ptr %.sroa.speculated.i366.6, align 8
  %sunkaddr731 = getelementptr inbounds i8, ptr %5, i64 184
  store i64 %713, ptr %sunkaddr731, align 8
  %714 = load ptr, ptr %.169.i371.5, align 8
  %715 = load ptr, ptr %.171.i370.5, align 8
  %716 = call i8 %2(ptr align 1 %3, ptr align 1 %714, ptr align 1 %715) #18
  %717 = icmp eq i8 %716, 1
  %.sroa.speculated40.i369.6 = select i1 %717, ptr %.169.i371.5, ptr %.171.i370.5
  %718 = load i64, ptr %.sroa.speculated40.i369.6, align 8
  %sunkaddr732 = getelementptr inbounds i8, ptr %5, i64 200
  store i64 %718, ptr %sunkaddr732, align 8
  %719 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.6, i64 -8
  %.171.i370.6 = select i1 %717, ptr %.171.i370.5, ptr %719
  %.169.i371.6 = select i1 %717, ptr %719, ptr %.169.i371.5
  %720 = load ptr, ptr %.169.i371.6, align 8
  %721 = load ptr, ptr %.171.i370.6, align 8
  %722 = call i8 %2(ptr align 1 %3, ptr align 1 %720, ptr align 1 %721) #18
  %723 = icmp eq i8 %722, 1
  %.sroa.speculated46.i374 = select i1 %723, ptr %.169.i371.6, ptr %.171.i370.6
  %724 = load i64, ptr %.sroa.speculated46.i374, align 8
  %sunkaddr733 = getelementptr inbounds i8, ptr %5, i64 192
  store i64 %724, ptr %sunkaddr733, align 8
  %725 = load ptr, ptr %5, align 8
  %726 = load ptr, ptr %sunkaddr716, align 8
  %727 = call i8 %2(ptr align 1 %3, ptr align 1 %725, ptr align 1 %726) #18
  %.not.i377 = icmp eq i8 %727, 1
  %.val = load i64, ptr %sunkaddr716, align 8
  %.val28 = load i64, ptr %5, align 8
  %728 = select i1 %.not.i377, i64 %.val, i64 %.val28
  store i64 %728, ptr %.5115, align 8
  %.0..i379 = select i1 %.not.i377, ptr %5, ptr %.sroa.gep3
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.v = select i1 %.not.i377, i64 144, i64 16
  %.sroa.speculated21.i378.sroa.sel.sroa.sel = getelementptr inbounds i8, ptr %5, i64 %.sroa.speculated21.i378.sroa.sel.sroa.sel.v
  %.0..i379.sroa.sel = select i1 %.not.i377, ptr %.sroa.gep3, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel, i64 8
  %.0..i379.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep, i64 8
  %.0..i379.sroa.sel.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1.sroa.gep, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep
  %..061.i380 = select i1 %.not.i377, ptr %.sroa.gep2, ptr %522
  br label %.cont.i397

.cont.i397:                                       ; preds = %.cont.i397, %.critedge69
  %lsr.iv480 = phi i64 [ %lsr.iv.next481, %.cont.i397 ], [ 31, %.critedge69 ]
  %lsr.iv478 = phi ptr [ %uglygep479, %.cont.i397 ], [ %lsr.iv476, %.critedge69 ]
  %.37.i381 = phi ptr [ %.3..i392, %.cont.i397 ], [ %.0..i379, %.critedge69 ]
  %.3646.i382 = phi ptr [ %..364.i391, %.cont.i397 ], [ %..061.i380, %.critedge69 ]
  %.0684.i384 = phi ptr [ %.169.i395, %.cont.i397 ], [ %521, %.critedge69 ]
  %.0703.i385 = phi ptr [ %.171.i394, %.cont.i397 ], [ %523, %.critedge69 ]
  %.37.i381.sroa.phi = phi ptr [ %.3..i392.sroa.sel, %.cont.i397 ], [ %.0..i379.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel, %.cont.i397 ], [ %.0..i379.sroa.sel.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel.sroa.gep, %.cont.i397 ], [ %.0..i379.sroa.sel.sroa.sel.sroa.sel, %.critedge69 ]
  %729 = shl nuw nsw i64 %lsr.iv480, 3
  %uglygep483 = getelementptr i8, ptr %.5115, i64 %729
  %.37.i381.sroa.phi368 = getelementptr inbounds i8, ptr %.37.i381, i64 8
  %730 = load ptr, ptr %.37.i381, align 8
  %731 = load ptr, ptr %.3646.i382, align 8
  %732 = call i8 %2(ptr align 1 %3, ptr align 1 %730, ptr align 1 %731) #18
  %.not76.i389 = icmp eq i8 %732, 1
  %.sroa.speculated.i390 = select i1 %.not76.i389, ptr %.3646.i382, ptr %.37.i381
  %733 = load i64, ptr %.sroa.speculated.i390, align 8
  store i64 %733, ptr %lsr.iv478, align 8
  %..364.i391.idx = select i1 %.not76.i389, i64 8, i64 0
  %..364.i391 = getelementptr i8, ptr %.3646.i382, i64 %..364.i391.idx
  %.3..i392 = select i1 %.not76.i389, ptr %.37.i381, ptr %.37.i381.sroa.phi
  %.3..i392.sroa.sel = select i1 %.not76.i389, ptr %.37.i381.sroa.phi368, ptr %.37.i381.sroa.phi.sroa.phi
  %.37.i381.sroa.phi368.sroa.gep = getelementptr inbounds i8, ptr %.37.i381, i64 16
  %.3..i392.sroa.sel.sroa.sel = select i1 %.not76.i389, ptr %.37.i381.sroa.phi368.sroa.gep, ptr %.37.i381.sroa.phi.sroa.phi.sroa.phi
  %.3..i392.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.3..i392.sroa.sel.sroa.sel, i64 8
  %734 = load ptr, ptr %.0684.i384, align 8
  %735 = load ptr, ptr %.0703.i385, align 8
  %736 = call i8 %2(ptr align 1 %3, ptr align 1 %734, ptr align 1 %735) #18
  %737 = icmp eq i8 %736, 1
  %.sroa.speculated40.i393 = select i1 %737, ptr %.0684.i384, ptr %.0703.i385
  %738 = load i64, ptr %.sroa.speculated40.i393, align 8
  store i64 %738, ptr %uglygep483, align 8
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %737, ptr %.0684.i384, ptr %.0703.i385
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 -8
  %.171.i394 = select i1 %737, ptr %.0703.i385, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel
  %.169.i395 = select i1 %737, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel, ptr %.0684.i384
  %uglygep479 = getelementptr i8, ptr %lsr.iv478, i64 8
  %lsr.iv.next481 = add nsw i64 %lsr.iv480, -1
  %exitcond.not.i396 = icmp eq i64 %lsr.iv.next481, 16
  br i1 %exitcond.not.i396, label %sort.parity_merge__anon_16232.exit399, label %.cont.i397

sort.parity_merge__anon_16232.exit399:            ; preds = %.cont.i397
  %739 = load ptr, ptr %.169.i395, align 8
  %740 = load ptr, ptr %.171.i394, align 8
  %741 = call i8 %2(ptr align 1 %3, ptr align 1 %739, ptr align 1 %740) #18
  %742 = icmp eq i8 %741, 1
  %.sroa.speculated46.i398 = select i1 %742, ptr %.169.i395, ptr %.171.i394
  %743 = load i64, ptr %.sroa.speculated46.i398, align 8
  %744 = shl i64 %lsr.iv.next481, 3
  %uglygep482 = getelementptr i8, ptr %.5115, i64 %744
  store i64 %743, ptr %uglygep482, align 8
  br label %533

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %745 = shl nuw nsw i64 %531, 3
  %746 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %745
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ 8, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %747 = ptrtoint ptr %.5.lcssa to i64
  %748 = ptrtoint ptr %746 to i64
  %749 = shl nuw nsw i64 %.06.i, 3
  %750 = add nuw i64 %749, %747
  %751 = icmp ult i64 %750, %748
  br i1 %751, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw nsw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %752 = ptrtoint ptr %.5.lcssa to i64
  %753 = shl nuw nsw i64 %.06.i, 4
  %754 = shl nuw nsw i64 %.06.i, 1
  %755 = add i64 %752, %753
  %756 = add i64 %752, %749
  br label %760

.loopexit.i:                                      ; preds = %768, %764, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %754, %768 ], [ %754, %764 ]
  %757 = icmp ult i64 %.pre-phi.i, %531
  %758 = icmp ult i64 %.pre-phi.i, 33
  %759 = and i1 %757, %758
  br i1 %759, label %.preheader.i, label %common.ret

760:                                              ; preds = %764, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %764 ], [ 0, %.lr.ph.i ]
  %761 = ptrtoint ptr %746 to i64
  %uglygep474 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %762 = add i64 %755, %lsr.iv
  %763 = icmp ult i64 %762, %761
  br i1 %763, label %764, label %768

764:                                              ; preds = %760
  %765 = ptrtoint ptr %746 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %uglygep474, i64 %754, ptr nonnull align 1 %5, i64 32, i64 %.06.i, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  %lsr.iv.next = add i64 %lsr.iv, %753
  %766 = add i64 %756, %lsr.iv.next
  %767 = icmp ult i64 %766, %765
  br i1 %767, label %760, label %.loopexit.i

768:                                              ; preds = %760
  %769 = sub i64 %745, %lsr.iv
  %770 = lshr i64 %769, 3
  %uglygep473 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %uglygep473, i64 %770, ptr nonnull align 1 %5, i64 32, i64 %.06.i, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5) unnamed_addr #4 {
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  %9 = icmp ugt i64 %1, 127
  %10 = icmp ugt i64 %3, 127
  %11 = select i1 %9, i1 %10, i1 false
  br i1 %11, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %6
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16236.exit25, %.preheader.lr.ph
  %.08 = phi i64 [ 128, %.preheader.lr.ph ], [ %17, %sort.tail_merge__anon_16236.exit25 ]
  %12 = ptrtoint ptr %0 to i64
  %13 = lshr exact i64 %.08, 2
  %14 = lshr exact i64 %.08, 1
  %15 = shl nuw i64 %.08, 1
  %16 = shl i64 %.08, 3
  %17 = shl i64 %.08, 2
  %18 = getelementptr inbounds i8, ptr %2, i64 %17
  %uglygep18 = getelementptr i8, ptr %0, i64 %15
  %uglygep21 = getelementptr i8, ptr %0, i64 %17
  %19 = mul i64 %.08, 6
  %uglygep25 = getelementptr i8, ptr %0, i64 %19
  %20 = add i64 %12, %16
  br label %50

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16236.exit25, %6
  %.0.lcssa = phi i64 [ 128, %6 ], [ %17, %sort.tail_merge__anon_16236.exit25 ]
  %21 = lshr exact i64 %.0.lcssa, 2
  %22 = icmp ult i64 %21, %1
  %23 = icmp ule i64 %21, %3
  %24 = select i1 %22, i1 %23, i1 false
  br i1 %24, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16236.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ %21, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %25 = ptrtoint ptr %0 to i64
  %26 = ptrtoint ptr %8 to i64
  %27 = shl nuw i64 %.06.i, 3
  %28 = add nuw i64 %27, %25
  %29 = icmp ult i64 %28, %26
  br i1 %29, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %30 = ptrtoint ptr %0 to i64
  %31 = shl nuw i64 %.06.i, 4
  %32 = shl nuw i64 %.06.i, 1
  %33 = add i64 %30, %31
  %34 = add i64 %30, %27
  br label %38

.loopexit.i:                                      ; preds = %46, %42, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %32, %46 ], [ %32, %42 ]
  %35 = icmp ult i64 %.pre-phi.i, %1
  %36 = icmp ule i64 %.pre-phi.i, %3
  %37 = select i1 %35, i1 %36, i1 false
  br i1 %37, label %.preheader.i, label %sort.tail_merge__anon_16236.exit

38:                                               ; preds = %42, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %42 ], [ 0, %.lr.ph.i ]
  %39 = ptrtoint ptr %8 to i64
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv
  %40 = add i64 %33, %lsr.iv
  %41 = icmp ult i64 %40, %39
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = ptrtoint ptr %8 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %uglygep13, i64 %32, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  %lsr.iv.next = add i64 %lsr.iv, %31
  %44 = add i64 %34, %lsr.iv.next
  %45 = icmp ult i64 %44, %43
  br i1 %45, label %38, label %.loopexit.i

46:                                               ; preds = %38
  %47 = sub i64 %7, %lsr.iv
  %48 = lshr i64 %47, 3
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %uglygep, i64 %48, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  br label %.loopexit.i

sort.tail_merge__anon_16236.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %49 = lshr exact i64 %.0.lcssa, 1
  ret i64 %49

50:                                               ; preds = %sort.quad_merge_block__anon_16237.exit, %.preheader
  %lsr.iv33 = phi i64 [ %20, %.preheader ], [ %lsr.iv.next34, %sort.quad_merge_block__anon_16237.exit ]
  %lsr.iv29 = phi i64 [ %7, %.preheader ], [ %lsr.iv.next30, %sort.quad_merge_block__anon_16237.exit ]
  %lsr.iv14 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next15, %sort.quad_merge_block__anon_16237.exit ]
  %uglygep16 = getelementptr i8, ptr %0, i64 %lsr.iv14
  %uglygep19 = getelementptr i8, ptr %uglygep18, i64 %lsr.iv14
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv14
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv14
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 -8
  %51 = load ptr, ptr %uglygep20, align 8
  %52 = load ptr, ptr %uglygep19, align 8
  %53 = tail call i8 %4(ptr align 1 %5, ptr align 1 %51, ptr align 1 %52) #18
  %54 = icmp ne i8 %53, 1
  %55 = zext i1 %54 to i2
  %uglygep27 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv14
  %uglygep28 = getelementptr i8, ptr %uglygep27, i64 -8
  %56 = load ptr, ptr %uglygep28, align 8
  %57 = load ptr, ptr %uglygep26, align 8
  %58 = tail call i8 %4(ptr align 1 %5, ptr align 1 %56, ptr align 1 %57) #18
  %.not.i = icmp eq i8 %58, 1
  %59 = select i1 %.not.i, i2 0, i2 -2
  %60 = or i2 %59, %55
  %61 = zext i2 %60 to i32
  switch i32 %61, label %63 [
    i32 0, label %64
    i32 1, label %65
    i32 2, label %66
    i32 3, label %67
  ]

62:                                               ; preds = %71, %66, %65, %64
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %uglygep16, ptr nonnull align 1 %2, i64 %14, i64 %14, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  br label %sort.quad_merge_block__anon_16237.exit

63:                                               ; preds = %50
  unreachable

64:                                               ; preds = %50
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %13, i64 %13, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %18, ptr nonnull align 1 %uglygep22, i64 %13, i64 %13, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  br label %62

65:                                               ; preds = %50
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %17, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %18, ptr nonnull align 1 %uglygep22, i64 %13, i64 %13, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  br label %62

66:                                               ; preds = %50
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %13, i64 %13, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %18, ptr noundef nonnull align 1 dereferenceable(1) %uglygep22, i64 %17, i1 false)
  br label %62

67:                                               ; preds = %50
  %uglygep23 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv14
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 -8
  %68 = load ptr, ptr %uglygep24, align 8
  %sunkaddr = getelementptr i8, ptr %uglygep21, i64 %lsr.iv14
  %69 = load ptr, ptr %sunkaddr, align 8
  %70 = tail call i8 %4(ptr align 1 %5, ptr align 1 %68, ptr align 1 %69) #18
  %.not6.i = icmp eq i8 %70, 1
  br i1 %.not6.i, label %71, label %sort.quad_merge_block__anon_16237.exit

71:                                               ; preds = %67
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %16, i1 false)
  br label %62

sort.quad_merge_block__anon_16237.exit:           ; preds = %67, %62
  %72 = ptrtoint ptr %8 to i64
  %lsr.iv.next15 = add i64 %lsr.iv14, %16
  %lsr.iv.next30 = sub i64 %lsr.iv29, %16
  %73 = add i64 %20, %lsr.iv.next15
  %74 = icmp ugt i64 %73, %72
  %lsr.iv.next34 = add i64 %lsr.iv33, %16
  br i1 %74, label %75, label %50

75:                                               ; preds = %sort.quad_merge_block__anon_16237.exit
  %76 = sub i64 %7, %lsr.iv.next15
  %77 = lshr i64 %76, 3
  %78 = icmp ult i64 %13, %77
  %79 = icmp ule i64 %13, %3
  %80 = select i1 %78, i1 %79, i1 false
  %uglygep17 = getelementptr i8, ptr %0, i64 %lsr.iv.next15
  br i1 %80, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16236.exit25

.preheader.lr.ph.i16:                             ; preds = %75
  %81 = ptrtoint ptr %0 to i64
  %82 = lshr i64 %lsr.iv.next30, 3
  %83 = shl nuw i64 %82, 3
  %uglygep31 = getelementptr i8, ptr %0, i64 %83
  %uglygep32 = getelementptr i8, ptr %uglygep31, i64 %lsr.iv.next15
  %84 = lshr i64 %lsr.iv.next30, 3
  %85 = shl nuw i64 %84, 3
  %86 = add i64 %81, %85
  %87 = add i64 %86, %lsr.iv.next15
  %88 = add i64 %81, %lsr.iv.next15
  %89 = shl nuw i64 %84, 3
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i23, %.preheader.lr.ph.i16
  %.06.i17 = phi i64 [ %13, %.preheader.lr.ph.i16 ], [ %.pre-phi.i22, %.loopexit.i23 ]
  %90 = ptrtoint ptr %uglygep32 to i64
  %91 = shl nuw i64 %.06.i17, 3
  %92 = add i64 %88, %91
  %93 = icmp ult i64 %92, %90
  br i1 %93, label %.lr.ph.i21, label %.preheader..loopexit_crit_edge.i20

.preheader..loopexit_crit_edge.i20:               ; preds = %.preheader.i18
  %.pre.i19 = shl nuw i64 %.06.i17, 1
  br label %.loopexit.i23

.lr.ph.i21:                                       ; preds = %.preheader.i18
  %94 = shl nuw i64 %.06.i17, 4
  %95 = shl nuw i64 %.06.i17, 1
  %96 = add i64 %lsr.iv33, %94
  %97 = add nuw i64 %lsr.iv33, %91
  br label %101

.loopexit.i23:                                    ; preds = %108, %104, %.preheader..loopexit_crit_edge.i20
  %.pre-phi.i22 = phi i64 [ %.pre.i19, %.preheader..loopexit_crit_edge.i20 ], [ %95, %108 ], [ %95, %104 ]
  %98 = icmp ult i64 %.pre-phi.i22, %77
  %99 = icmp ule i64 %.pre-phi.i22, %3
  %100 = select i1 %98, i1 %99, i1 false
  br i1 %100, label %.preheader.i18, label %sort.tail_merge__anon_16236.exit25

101:                                              ; preds = %104, %.lr.ph.i21
  %lsr.iv37 = phi i64 [ %lsr.iv.next38, %104 ], [ 0, %.lr.ph.i21 ]
  %lsr.iv35 = phi i64 [ %lsr.iv.next36, %104 ], [ %96, %.lr.ph.i21 ]
  %.0145.i24 = phi ptr [ %uglygep17, %.lr.ph.i21 ], [ %105, %104 ]
  %102 = ptrtoint ptr %uglygep32 to i64
  %103 = icmp ult i64 %lsr.iv35, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %101
  tail call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %.0145.i24, i64 %95, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  %105 = getelementptr inbounds i8, ptr %.0145.i24, i64 %94
  %lsr.iv.next36 = add i64 %lsr.iv35, %94
  %lsr.iv.next38 = add i64 %lsr.iv37, %94
  %106 = add i64 %97, %lsr.iv.next38
  %107 = icmp ult i64 %106, %87
  br i1 %107, label %101, label %.loopexit.i23

108:                                              ; preds = %101
  %109 = sub i64 %89, %lsr.iv37
  %110 = lshr i64 %109, 3
  tail call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %.0145.i24, i64 %110, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  br label %.loopexit.i23

sort.tail_merge__anon_16236.exit25:               ; preds = %.loopexit.i23, %75
  %111 = icmp ule i64 %17, %1
  %112 = icmp ule i64 %17, %3
  %113 = select i1 %111, i1 %112, i1 false
  br i1 %113, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = shl i64 %1, 3
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  %10 = shl nuw i64 %4, 1
  %11 = icmp uge i64 %10, %1
  %12 = sub i64 %1, %4
  %13 = icmp ule i64 %12, %3
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %16, label %.preheader1

.preheader1:                                      ; preds = %7
  %15 = icmp ugt i64 %1, %4
  br i1 %15, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader1
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader1
  ret void

16:                                               ; preds = %7
  tail call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.0177 = phi i64 [ %4, %.preheader.lr.ph ], [ %26, %.loopexit ]
  %17 = ptrtoint ptr %0 to i64
  %18 = ptrtoint ptr %9 to i64
  %19 = shl nuw i64 %.0177, 3
  %20 = add nuw i64 %19, %17
  %21 = icmp ult i64 %20, %18
  br i1 %21, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %22 = ptrtoint ptr %0 to i64
  %23 = shl nuw i64 %.0177, 4
  %24 = add i64 %22, %23
  %25 = add i64 %22, %19
  br label %28

.loopexit:                                        ; preds = %36, %32, %.preheader
  %26 = shl nuw i64 %.0177, 1
  %27 = icmp ult i64 %26, %1
  br i1 %27, label %.preheader, label %common.ret

28:                                               ; preds = %32, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %32 ]
  %29 = ptrtoint ptr %9 to i64
  %uglygep4 = getelementptr i8, ptr %0, i64 %lsr.iv
  %30 = add i64 %24, %lsr.iv
  %31 = icmp ult i64 %30, %29
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = ptrtoint ptr %9 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16239(ptr nonnull align 1 %uglygep4, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %.0177, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  %lsr.iv.next = add i64 %lsr.iv, %23
  %34 = add i64 %25, %lsr.iv.next
  %35 = icmp ult i64 %34, %33
  br i1 %35, label %28, label %.loopexit

36:                                               ; preds = %28
  %37 = sub i64 %8, %lsr.iv
  %38 = lshr i64 %37, 3
  %39 = sub nuw i64 %38, %.0177
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16239(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %39, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14505(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 1 %2, ptr align 1 %3) unnamed_addr #4 {
  %5 = alloca [49152 x i8], align 8
  %6 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %5, i64 512, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %5, i64 512, i64 %6, ptr nonnull readonly align 1 %2, ptr align 1 %3)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9) unnamed_addr #4 {
  %11 = alloca i64, align 8
  %12 = sub i64 0, %7
  %13 = ptrtoint ptr %11 to i64
  %14 = lshr i64 %13, 4
  br label %15

15:                                               ; preds = %sort.quadsort_swap__anon_14508.exit61, %10
  %.053 = phi i64 [ 0, %10 ], [ %155, %sort.quadsort_swap__anon_14508.exit61 ]
  %.052 = phi i64 [ %4, %10 ], [ %155, %sort.quadsort_swap__anon_14508.exit61 ]
  %.051 = phi ptr [ %2, %10 ], [ %0, %sort.quadsort_swap__anon_14508.exit61 ]
  %.0 = phi ptr [ %3, %10 ], [ %16, %sort.quadsort_swap__anon_14508.exit61 ]
  %16 = getelementptr inbounds i8, ptr %.0, i64 %12
  %17 = icmp ult i64 %.052, 2049
  br i1 %17, label %19, label %20

18:                                               ; preds = %sort.median_of_cube_root__anon_16241.exit, %19
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %106

19:                                               ; preds = %15
  call fastcc void @sort.median_of_nine__anon_16240(ptr nonnull align 1 %.051, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9, ptr nonnull align 1 %16)
  br label %18

20:                                               ; preds = %15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  br label %21

21:                                               ; preds = %21, %20
  %.0.i = phi i64 [ 32, %20 ], [ %25, %21 ]
  %22 = mul nuw i64 %.0.i, %.0.i
  %23 = mul nuw i64 %22, %.0.i
  %24 = icmp ult i64 %23, %.052
  %25 = shl nuw i64 %.0.i, 1
  br i1 %24, label %21, label %26

26:                                               ; preds = %21
  %27 = or i64 %.052, %.0.i
  %28 = and i64 %27, -4294967296
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = trunc i64 %.0.i to i32
  %32 = trunc i64 %.052 to i32
  %33 = udiv i32 %32, %31
  %34 = zext i32 %33 to i64
  br label %37

35:                                               ; preds = %26
  %36 = udiv i64 %.052, %.0.i
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i64 [ %34, %30 ], [ %36, %35 ]
  store i64 %38, ptr %11, align 8
  %39 = or i64 %14, %38
  %40 = and i64 %39, -4294967296
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %37
  %43 = trunc i64 %38 to i32
  %44 = trunc i64 %14 to i32
  %45 = urem i32 %44, %43
  %46 = zext i32 %45 to i64
  br label %49

47:                                               ; preds = %37
  %48 = urem i64 %14, %38
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i64 [ %46, %42 ], [ %48, %47 ]
  %51 = mul nuw i64 %50, %7
  %52 = getelementptr inbounds i8, ptr %.051, i64 %51
  %53 = icmp eq ptr %.051, %0
  %..i = select i1 %53, ptr %1, ptr %0
  %54 = mul nuw i64 %38, %7
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  br label %55

55:                                               ; preds = %55, %49
  %lsr.iv202 = phi ptr [ %uglygep, %55 ], [ %..i, %49 ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %55 ], [ %umax.i, %49 ]
  %.03136.i = phi ptr [ %52, %49 ], [ %56, %55 ]
  call void %8(ptr nonnull align 1 %lsr.iv202, ptr align 1 %.03136.i) #18
  %56 = getelementptr inbounds i8, ptr %.03136.i, i64 %54
  %lsr.iv.next = add i64 %lsr.iv, -1
  %uglygep = getelementptr i8, ptr %lsr.iv202, i64 %7
  %exitcond.not.i = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not.i, label %57, label %55

57:                                               ; preds = %55
  %58 = lshr exact i64 %.0.i, 1
  %59 = mul nuw i64 %.0.i, %7
  %60 = getelementptr inbounds i8, ptr %..i, i64 %59
  %61 = icmp ult i64 %.0.i, 192
  br i1 %61, label %66, label %62

62:                                               ; preds = %57
  %63 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %..i, i64 %58, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %63, label %64, label %69

64:                                               ; preds = %62
  %65 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %..i, i64 %58, ptr nonnull align 1 %60, i64 %58, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %..i, i64 %58, ptr nonnull align 1 %60, i64 %58, i64 %65, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %69

66:                                               ; preds = %57
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %..i, i64 %58, ptr nonnull align 1 %60, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  %67 = mul nuw i64 %58, %7
  %68 = getelementptr inbounds i8, ptr %..i, i64 %67
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %68, i64 %58, ptr nonnull align 1 %60, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %sort.quadsort_swap__anon_14508.exit34.i

69:                                               ; preds = %64, %62
  %70 = mul nuw i64 %58, %7
  %71 = getelementptr inbounds i8, ptr %..i, i64 %70
  %72 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %71, i64 %58, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %72, label %73, label %sort.quadsort_swap__anon_14508.exit34.i

73:                                               ; preds = %69
  %74 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %71, i64 %58, ptr nonnull align 1 %60, i64 %58, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %71, i64 %58, ptr nonnull align 1 %60, i64 %58, i64 %74, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %sort.quadsort_swap__anon_14508.exit34.i

sort.quadsort_swap__anon_14508.exit34.i:          ; preds = %73, %69, %66
  %75 = phi ptr [ %68, %66 ], [ %71, %69 ], [ %71, %73 ]
  %76 = add i64 %.0.i, -1
  %77 = mul nuw i64 %76, %7
  %78 = getelementptr inbounds i8, ptr %..i, i64 %77
  call void %9(ptr align 1 %6, i64 1) #18
  %79 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %78, ptr nonnull align 1 %..i) #18
  %.not.i = icmp eq i8 %79, 1
  br i1 %.not.i, label %80, label %86

80:                                               ; preds = %86, %sort.quadsort_swap__anon_14508.exit34.i
  %81 = phi i1 [ %91, %86 ], [ false, %sort.quadsort_swap__anon_14508.exit34.i ]
  %82 = call i64 @llvm.ctlz.i64(i64 %58, i1 true), !range !391
  %83 = sub nuw nsw i64 64, %82
  call void %9(ptr align 1 %6, i64 %83) #18
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %80
  %.0.in21.i.i = phi i64 [ %.0.i.i, %.lr.ph.i.i ], [ %58, %80 ]
  %.01420.i.i = phi ptr [ %.1.i.i, %.lr.ph.i.i ], [ %..i, %80 ]
  %.01519.i.i = phi ptr [ %.116.i.i, %.lr.ph.i.i ], [ %75, %80 ]
  %.0.i.i = lshr i64 %.0.in21.i.i, 1
  %84 = call i8 %5(ptr align 1 %6, ptr align 1 %.01420.i.i, ptr align 1 %.01519.i.i) #18
  %.not17.i.i = icmp eq i8 %84, 1
  %85 = mul nuw i64 %.0.i.i, %7
  %.116.idx.i.i = select i1 %.not17.i.i, i64 %85, i64 0
  %.116.i.i = getelementptr i8, ptr %.01519.i.i, i64 %.116.idx.i.i
  %.1.idx.i.i = select i1 %.not17.i.i, i64 0, i64 %85
  %.1.i.i = getelementptr i8, ptr %.01420.i.i, i64 %.1.idx.i.i
  %.not.i.i = icmp ult i64 %.0.in21.i.i, 4
  br i1 %.not.i.i, label %sort.median_of_cube_root__anon_16241.exit, label %.lr.ph.i.i

86:                                               ; preds = %sort.quadsort_swap__anon_14508.exit34.i
  %87 = add nsw i64 %58, -1
  %88 = mul nuw i64 %87, %7
  %89 = getelementptr inbounds i8, ptr %..i, i64 %88
  call void %9(ptr align 1 %6, i64 1) #18
  %90 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %89, ptr nonnull align 1 %..i) #18
  %91 = icmp ne i8 %90, 1
  br label %80

sort.median_of_cube_root__anon_16241.exit:        ; preds = %.lr.ph.i.i
  %92 = call i8 %5(ptr align 1 %6, ptr align 1 %.1.i.i, ptr align 1 %.116.i.i) #18
  %93 = icmp eq i8 %92, 1
  %94 = select i1 %93, ptr %.1.i.i, ptr %.116.i.i
  call void %8(ptr nonnull align 1 %16, ptr align 1 %94) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  br i1 %81, label %95, label %18

95:                                               ; preds = %sort.median_of_cube_root__anon_16241.exit
  %96 = icmp eq ptr %.051, %1
  br i1 %96, label %104, label %97

common.ret:                                       ; preds = %210, %208, %206, %205, %191, %184, %174, %172, %171, %108, %102, %100, %99
  ret void

97:                                               ; preds = %104, %95
  %98 = icmp ult i64 %.052, 96
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

100:                                              ; preds = %97
  %101 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %101, label %102, label %common.ret

102:                                              ; preds = %100
  %103 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %103, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

104:                                              ; preds = %95
  %105 = mul nuw i64 %.052, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %105, i1 false)
  br label %97

106:                                              ; preds = %18
  call void %9(ptr align 1 %6, i64 1) #18
  %107 = call i8 %5(ptr align 1 %6, ptr align 1 %.0, ptr align 1 %16) #18
  %.not58 = icmp eq i8 %107, 1
  br i1 %.not58, label %.critedge, label %108

108:                                              ; preds = %106
  call fastcc void @sort.flux_reverse_partition__anon_16242(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %16, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

.critedge:                                        ; preds = %106, %18
  call void %9(ptr align 1 %6, i64 %.052) #18
  %.not160.i = icmp ult i64 %.052, 8
  br i1 %.not160.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.0165.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.0131164.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.0143163.i = phi ptr [ %uglygep203, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.0145162.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.0147161.i = phi i64 [ %136, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %109 = call i8 %5(ptr align 1 %6, ptr align 1 %.0143163.i, ptr nonnull align 1 %16) #18
  %.not151.i = icmp eq i8 %109, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.0131164.i, ptr %.0165.i
  call void %8(ptr align 1 %.sroa.speculated78.i, ptr align 1 %.0143163.i) #18
  %110 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 %7
  %..0131.i = select i1 %.not151.i, ptr %110, ptr %.0131164.i
  %.0..i = select i1 %.not151.i, ptr %.0165.i, ptr %110
  %111 = getelementptr inbounds i8, ptr %.0143163.i, i64 %7
  %112 = call i8 %5(ptr align 1 %6, ptr align 1 %111, ptr nonnull align 1 %16) #18
  %.not152.i = icmp eq i8 %112, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  call void %8(ptr align 1 %.sroa.speculated69.i, ptr align 1 %111) #18
  %113 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 %7
  %.2133.i = select i1 %.not152.i, ptr %113, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %113
  %114 = getelementptr inbounds i8, ptr %111, i64 %7
  %115 = call i8 %5(ptr align 1 %6, ptr align 1 %114, ptr nonnull align 1 %16) #18
  %.not153.i = icmp eq i8 %115, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  call void %8(ptr align 1 %.sroa.speculated60.i, ptr align 1 %114) #18
  %116 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 %7
  %.3134.i = select i1 %.not153.i, ptr %116, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %116
  %117 = getelementptr inbounds i8, ptr %114, i64 %7
  %118 = call i8 %5(ptr align 1 %6, ptr align 1 %117, ptr nonnull align 1 %16) #18
  %.not154.i = icmp eq i8 %118, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  call void %8(ptr align 1 %.sroa.speculated51.i, ptr align 1 %117) #18
  %119 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 %7
  %.4135.i = select i1 %.not154.i, ptr %119, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %119
  %120 = getelementptr inbounds i8, ptr %117, i64 %7
  %121 = call i8 %5(ptr align 1 %6, ptr align 1 %120, ptr nonnull align 1 %16) #18
  %.not155.i = icmp eq i8 %121, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  call void %8(ptr align 1 %.sroa.speculated42.i, ptr align 1 %120) #18
  %122 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 %7
  %.5136.i = select i1 %.not155.i, ptr %122, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %122
  %123 = getelementptr inbounds i8, ptr %120, i64 %7
  %124 = call i8 %5(ptr align 1 %6, ptr align 1 %123, ptr nonnull align 1 %16) #18
  %.not156.i = icmp eq i8 %124, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  call void %8(ptr align 1 %.sroa.speculated33.i, ptr align 1 %123) #18
  %125 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 %7
  %.6137.i = select i1 %.not156.i, ptr %125, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %125
  %126 = getelementptr inbounds i8, ptr %123, i64 %7
  %127 = call i8 %5(ptr align 1 %6, ptr align 1 %126, ptr nonnull align 1 %16) #18
  %.not157.i = icmp eq i8 %127, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  call void %8(ptr align 1 %.sroa.speculated24.i, ptr align 1 %126) #18
  %128 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 %7
  %.7138.i = select i1 %.not157.i, ptr %128, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %128
  %129 = getelementptr inbounds i8, ptr %126, i64 %7
  %130 = call i8 %5(ptr align 1 %6, ptr align 1 %129, ptr nonnull align 1 %16) #18
  %.not158.i = icmp eq i8 %130, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  call void %8(ptr align 1 %.sroa.speculated15.i, ptr align 1 %129) #18
  %131 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 %7
  %.8139.i = select i1 %.not158.i, ptr %131, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %131
  %132 = getelementptr inbounds i8, ptr %129, i64 %7
  %133 = icmp eq ptr %.8.i, %0
  %134 = icmp eq ptr %.8139.i, %1
  %135 = select i1 %133, i1 true, i1 %134
  %.1146.i = select i1 %135, i64 %.0147161.i, i64 %.0145162.i
  %136 = add i64 %.0147161.i, 8
  %.not.i59 = icmp ugt i64 %136, %.052
  %uglygep203 = getelementptr i8, ptr %129, i64 %7
  br i1 %.not.i59, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %132, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %137 = and i64 %.052, 7
  %.not175.i = icmp eq i64 %137, 0
  br i1 %.not175.i, label %._crit_edge173.i, label %.cont.i.preheader

.cont.i.preheader:                                ; preds = %._crit_edge.i
  br label %.cont.i

.cont.i:                                          ; preds = %.cont.i, %.cont.i.preheader
  %lsr.iv204 = phi i64 [ %137, %.cont.i.preheader ], [ %lsr.iv.next205, %.cont.i ]
  %.9172.i = phi ptr [ %.9..i, %.cont.i ], [ %.0.lcssa.i, %.cont.i.preheader ]
  %.9140171.i = phi ptr [ %..9140.i, %.cont.i ], [ %.0131.lcssa.i, %.cont.i.preheader ]
  %.1144169.i = phi ptr [ %140, %.cont.i ], [ %.0143.lcssa.i, %.cont.i.preheader ]
  %138 = call i8 %5(ptr align 1 %6, ptr align 1 %.1144169.i, ptr nonnull align 1 %16) #18
  %.not150.i = icmp eq i8 %138, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.9140171.i, ptr %.9172.i
  call void %8(ptr align 1 %.sroa.speculated.i, ptr align 1 %.1144169.i) #18
  %139 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %7
  %..9140.i = select i1 %.not150.i, ptr %139, ptr %.9140171.i
  %.9..i = select i1 %.not150.i, ptr %.9172.i, ptr %139
  %140 = getelementptr inbounds i8, ptr %.1144169.i, i64 %7
  %lsr.iv.next205 = add nsw i64 %lsr.iv204, -1
  %exitcond.not.i60 = icmp eq i64 %lsr.iv.next205, 0
  br i1 %exitcond.not.i60, label %._crit_edge173.i, label %.cont.i

._crit_edge173.i:                                 ; preds = %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ]
  %141 = ptrtoint ptr %0 to i64
  %142 = ptrtoint ptr %.9.lcssa.i to i64
  %143 = sub nuw i64 %142, %141
  %144 = or i64 %143, %7
  %145 = and i64 %144, -4294967296
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %152

147:                                              ; preds = %._crit_edge173.i
  %148 = trunc i64 %7 to i32
  %149 = trunc i64 %143 to i32
  %150 = udiv i32 %149, %148
  %151 = zext i32 %150 to i64
  br label %154

152:                                              ; preds = %._crit_edge173.i
  %153 = udiv i64 %143, %7
  br label %154

154:                                              ; preds = %152, %147
  %155 = phi i64 [ %151, %147 ], [ %153, %152 ]
  %156 = lshr i64 %.052, 2
  %157 = icmp ule i64 %.0145.lcssa.i, %156
  %158 = icmp eq i64 %.052, %155
  %or.cond.i = select i1 %157, i1 true, i1 %158
  %159 = sub nuw i64 %.052, %155
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16243.exit, label %160

160:                                              ; preds = %154
  %161 = mul nuw i64 %155, %7
  %162 = getelementptr inbounds i8, ptr %0, i64 %161
  %163 = mul nuw i64 %159, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %162, ptr nonnull align 1 %1, i64 %163, i1 false)
  %164 = icmp ult i64 %159, 96
  br i1 %164, label %165, label %166

165:                                              ; preds = %160
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %162, i64 %159, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %sort.quadsort_swap__anon_14508.exit.i

166:                                              ; preds = %160
  %167 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %162, i64 %159, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %167, label %168, label %sort.quadsort_swap__anon_14508.exit.i

168:                                              ; preds = %166
  %169 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %162, i64 %159, ptr nonnull align 1 %1, i64 %159, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %162, i64 %159, ptr nonnull align 1 %1, i64 %159, i64 %169, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %sort.quadsort_swap__anon_14508.exit.i

sort.quadsort_swap__anon_14508.exit.i:            ; preds = %168, %166, %165
  %170 = icmp ult i64 %155, 96
  br i1 %170, label %171, label %172

171:                                              ; preds = %sort.quadsort_swap__anon_14508.exit.i
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %155, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

172:                                              ; preds = %sort.quadsort_swap__anon_14508.exit.i
  %173 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %155, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %173, label %174, label %common.ret

174:                                              ; preds = %172
  %175 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %155, ptr nonnull align 1 %1, i64 %155, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %155, ptr nonnull align 1 %1, i64 %155, i64 %175, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

sort.flux_default_partition__anon_16243.exit:     ; preds = %154
  %176 = lshr i64 %159, 5
  %177 = icmp ule i64 %155, %176
  %178 = icmp ult i64 %159, 97
  %179 = or i1 %178, %177
  br i1 %179, label %184, label %186

sort.quadsort_swap__anon_14508.exit61:            ; preds = %200, %198, %197, %186
  %180 = lshr i64 %155, 5
  %181 = icmp ule i64 %159, %180
  %182 = icmp ult i64 %155, 97
  %183 = or i1 %182, %181
  br i1 %183, label %202, label %15

184:                                              ; preds = %sort.flux_default_partition__anon_16243.exit
  %185 = icmp ult i64 %143, %7
  br i1 %185, label %common.ret, label %189

186:                                              ; preds = %sort.flux_default_partition__anon_16243.exit
  %187 = mul nuw i64 %155, %7
  %188 = getelementptr inbounds i8, ptr %0, i64 %187
  call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %188, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %16, i64 %159, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %sort.quadsort_swap__anon_14508.exit61

189:                                              ; preds = %184
  %190 = icmp eq i64 %.052, %155
  br i1 %190, label %191, label %192

191:                                              ; preds = %189
  call fastcc void @sort.flux_reverse_partition__anon_16242(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %16, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

192:                                              ; preds = %189
  %193 = mul nuw i64 %155, %7
  %194 = getelementptr inbounds i8, ptr %0, i64 %193
  %195 = mul nuw i64 %159, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %194, ptr nonnull align 1 %1, i64 %195, i1 false)
  %196 = icmp ult i64 %159, 96
  br i1 %196, label %197, label %198

197:                                              ; preds = %192
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %194, i64 %159, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %sort.quadsort_swap__anon_14508.exit61

198:                                              ; preds = %192
  %199 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %194, i64 %159, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %199, label %200, label %sort.quadsort_swap__anon_14508.exit61

200:                                              ; preds = %198
  %201 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %194, i64 %159, ptr nonnull align 1 %1, i64 %159, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %194, i64 %159, ptr nonnull align 1 %1, i64 %159, i64 %201, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %sort.quadsort_swap__anon_14508.exit61

202:                                              ; preds = %sort.quadsort_swap__anon_14508.exit61
  %203 = icmp ult i64 %155, 97
  br i1 %203, label %204, label %210

204:                                              ; preds = %202
  %.not67 = icmp eq i64 %155, 96
  br i1 %.not67, label %206, label %205

205:                                              ; preds = %204
  call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %155, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

206:                                              ; preds = %204
  %207 = call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 96, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %207, label %208, label %common.ret

208:                                              ; preds = %206
  %209 = call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, i64 %209, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret

210:                                              ; preds = %202
  call fastcc void @sort.flux_reverse_partition__anon_16242(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %16, i64 %155, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 1 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = mul nuw i64 %6, %2
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = sub i64 0, %6
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = mul nuw i64 %6, %3
  %15 = getelementptr inbounds i8, ptr %13, i64 %14
  %16 = add nuw i64 %2, 1
  %17 = icmp uge i64 %16, %3
  %18 = add nuw i64 %3, 1
  %19 = icmp uge i64 %18, %2
  %20 = select i1 %17, i1 %19, i1 false
  %21 = icmp ugt i64 %2, 31
  %or.cond = select i1 %20, i1 %21, i1 false
  br i1 %or.cond, label %35, label %.critedge

.critedge:                                        ; preds = %48, %43, %40, %35, %9
  %22 = add i64 %2, -1
  %23 = add i64 %22, %3
  %24 = mul nuw i64 %23, %6
  %25 = getelementptr inbounds i8, ptr %0, i64 %24
  %26 = shl nuw i64 %6, 3
  %27 = mul nuw i64 %6, 7
  %28 = sub i64 0, %27
  %29 = shl nuw i64 %6, 4
  %30 = mul i64 %6, -6
  %31 = mul i64 %6, -5
  %32 = mul i64 %6, -4
  %33 = mul i64 %6, -3
  %34 = mul i64 %6, -2
  br label %.loopexit.outer.outer

35:                                               ; preds = %9
  %36 = mul nuw i64 %6, 15
  %37 = getelementptr inbounds i8, ptr %1, i64 %36
  tail call void %8(ptr align 1 %5, i64 1) #18
  %38 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %37, ptr nonnull align 1 %11) #18
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %.critedge

40:                                               ; preds = %35
  %41 = getelementptr inbounds i8, ptr %11, i64 %36
  tail call void %8(ptr align 1 %5, i64 1) #18
  %42 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %41) #18
  %.not262 = icmp eq i8 %42, 1
  br i1 %.not262, label %.critedge, label %43

43:                                               ; preds = %40
  %44 = sub i64 0, %36
  %45 = getelementptr inbounds i8, ptr %15, i64 %44
  tail call void %8(ptr align 1 %5, i64 1) #18
  %46 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %13, ptr nonnull align 1 %45) #18
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %48, label %.critedge

48:                                               ; preds = %43
  %49 = getelementptr inbounds i8, ptr %13, i64 %44
  tail call void %8(ptr align 1 %5, i64 1) #18
  %50 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %49, ptr nonnull align 1 %15) #18
  %.not263 = icmp eq i8 %50, 1
  br i1 %.not263, label %.critedge, label %51

common.ret:                                       ; preds = %.lr.ph314, %.preheader
  ret void

51:                                               ; preds = %48
  tail call fastcc void @sort.parity_merge__anon_16203(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7, ptr nonnull readonly align 1 %8)
  ret void

.loopexit.outer.outer.backedge.loopexit:          ; preds = %124
  %uglygep488 = getelementptr i8, ptr %.2245, i64 %lsr.iv.next486
  %uglygep505 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv.next486
  br label %.loopexit.outer.outer

.loopexit.outer.outer:                            ; preds = %.cont46, %.loopexit.outer.outer.backedge.loopexit, %.critedge
  %.0243.ph.ph = phi ptr [ %25, %.critedge ], [ %180, %.cont46 ], [ %uglygep488, %.loopexit.outer.outer.backedge.loopexit ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %176, %.cont46 ], [ %.5239, %.loopexit.outer.outer.backedge.loopexit ]
  %.0228.ph.ph = phi ptr [ %15, %.critedge ], [ %.5233.7, %.cont46 ], [ %uglygep505, %.loopexit.outer.outer.backedge.loopexit ]
  %.0222.ph.ph = phi ptr [ %13, %.critedge ], [ %.5227.7, %.cont46 ], [ %.2224, %.loopexit.outer.outer.backedge.loopexit ]
  %.0213.ph.ph = phi ptr [ %11, %.critedge ], [ %..4217.7, %.cont46 ], [ %.3216, %.loopexit.outer.outer.backedge.loopexit ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46 ], [ %.2, %.loopexit.outer.outer.backedge.loopexit ]
  br label %.loopexit.outer.outer384

.loopexit.outer.outer384:                         ; preds = %102, %.loopexit.outer.outer
  %.0243.ph.ph385 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %102 ]
  %.0234.ph.ph386 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %118, %102 ]
  %.0222.ph.ph387 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %102 ]
  %.0213.ph.ph388 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %119, %102 ]
  %.0.ph.ph389 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %102 ]
  br label %.loopexit.outer

.loopexit.outer.loopexit:                         ; preds = %91
  %uglygep447 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv.next
  %uglygep464 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv.next
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %.loopexit.outer.loopexit, %.loopexit.outer.outer384
  %.0243.ph = phi ptr [ %.0243.ph.ph385, %.loopexit.outer.outer384 ], [ %uglygep447, %.loopexit.outer.loopexit ]
  %.0234.ph = phi ptr [ %.0234.ph.ph386, %.loopexit.outer.outer384 ], [ %.3237, %.loopexit.outer.loopexit ]
  %.0222.ph = phi ptr [ %.0222.ph.ph387, %.loopexit.outer.outer384 ], [ %uglygep464, %.loopexit.outer.loopexit ]
  %.0.ph = phi ptr [ %.0.ph.ph389, %.loopexit.outer.outer384 ], [ %.3, %.loopexit.outer.loopexit ]
  br label %.loopexit

.loopexit:                                        ; preds = %68, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %84, %68 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %85, %68 ]
  %52 = ptrtoint ptr %.0222.ph to i64
  %53 = ptrtoint ptr %.0 to i64
  %54 = sub nsw i64 %52, %53
  %55 = icmp sgt i64 %54, %26
  br i1 %55, label %.preheader274.preheader, label %.loopexit272

.preheader274.preheader:                          ; preds = %.loopexit
  %56 = ptrtoint ptr %.0 to i64
  %57 = ptrtoint ptr %.0222.ph to i64
  %58 = sub i64 %57, %56
  br label %.preheader274

.loopexit272.loopexit:                            ; preds = %88
  %uglygep = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv
  %uglygep463 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv
  br label %.loopexit272

.loopexit272:                                     ; preds = %.loopexit272.loopexit, %.loopexit
  %.2245 = phi ptr [ %uglygep, %.loopexit272.loopexit ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %.loopexit272.loopexit ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %uglygep463, %.loopexit272.loopexit ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %.loopexit272.loopexit ], [ %.0, %.loopexit ]
  %59 = ptrtoint ptr %.0228.ph.ph to i64
  %60 = ptrtoint ptr %.0213.ph.ph388 to i64
  %61 = sub nsw i64 %59, %60
  %62 = icmp sgt i64 %61, %26
  br i1 %62, label %.preheader269.preheader, label %.loopexit267

.preheader269.preheader:                          ; preds = %.loopexit272
  %63 = ptrtoint ptr %.0213.ph.ph388 to i64
  %64 = ptrtoint ptr %.0228.ph.ph to i64
  %65 = sub i64 %64, %63
  br label %.preheader269

.preheader274:                                    ; preds = %68, %.preheader274.preheader
  %lsr.iv466 = phi i64 [ %58, %.preheader274.preheader ], [ %lsr.iv.next467, %68 ]
  %.3237 = phi ptr [ %84, %68 ], [ %.0234, %.preheader274.preheader ]
  %.3 = phi ptr [ %85, %68 ], [ %.0, %.preheader274.preheader ]
  %66 = getelementptr inbounds i8, ptr %.3, i64 %27
  tail call void %8(ptr align 1 %5, i64 1) #18
  %67 = tail call i8 %4(ptr align 1 %5, ptr align 1 %66, ptr align 1 %.0213.ph.ph388) #18
  %.not259 = icmp eq i8 %67, 1
  br i1 %.not259, label %.preheader271, label %68

.preheader271:                                    ; preds = %.preheader274
  %uglygep449 = getelementptr i8, ptr %.0243.ph, i64 %28
  %uglygep451 = getelementptr i8, ptr %.0243.ph, i64 %30
  %uglygep453 = getelementptr i8, ptr %.0243.ph, i64 %31
  %uglygep455 = getelementptr i8, ptr %.0243.ph, i64 %32
  %uglygep457 = getelementptr i8, ptr %.0243.ph, i64 %33
  %uglygep459 = getelementptr i8, ptr %.0243.ph, i64 %34
  %uglygep461 = getelementptr i8, ptr %.0243.ph, i64 %12
  %uglygep470 = getelementptr i8, ptr %.0222.ph, i64 %28
  %uglygep473 = getelementptr i8, ptr %.0222.ph, i64 %30
  %uglygep475 = getelementptr i8, ptr %.0222.ph, i64 %31
  %uglygep477 = getelementptr i8, ptr %.0222.ph, i64 %32
  %uglygep479 = getelementptr i8, ptr %.0222.ph, i64 %33
  %uglygep481 = getelementptr i8, ptr %.0222.ph, i64 %34
  %uglygep483 = getelementptr i8, ptr %.0222.ph, i64 %12
  br label %88

68:                                               ; preds = %.preheader274
  %69 = ptrtoint ptr %.0222.ph to i64
  tail call void %7(ptr align 1 %.3237, ptr align 1 %.3) #18
  %70 = getelementptr inbounds i8, ptr %.3237, i64 %6
  %71 = getelementptr inbounds i8, ptr %.3, i64 %6
  tail call void %7(ptr align 1 %70, ptr align 1 %71) #18
  %72 = getelementptr inbounds i8, ptr %70, i64 %6
  %73 = getelementptr inbounds i8, ptr %71, i64 %6
  tail call void %7(ptr align 1 %72, ptr align 1 %73) #18
  %74 = getelementptr inbounds i8, ptr %72, i64 %6
  %75 = getelementptr inbounds i8, ptr %73, i64 %6
  tail call void %7(ptr align 1 %74, ptr align 1 %75) #18
  %76 = getelementptr inbounds i8, ptr %74, i64 %6
  %77 = getelementptr inbounds i8, ptr %75, i64 %6
  tail call void %7(ptr align 1 %76, ptr align 1 %77) #18
  %78 = getelementptr inbounds i8, ptr %76, i64 %6
  %79 = getelementptr inbounds i8, ptr %77, i64 %6
  tail call void %7(ptr align 1 %78, ptr align 1 %79) #18
  %80 = getelementptr inbounds i8, ptr %78, i64 %6
  %81 = getelementptr inbounds i8, ptr %79, i64 %6
  tail call void %7(ptr align 1 %80, ptr align 1 %81) #18
  %82 = getelementptr inbounds i8, ptr %80, i64 %6
  %83 = getelementptr inbounds i8, ptr %81, i64 %6
  tail call void %7(ptr align 1 %82, ptr align 1 %83) #18
  %84 = getelementptr inbounds i8, ptr %82, i64 %6
  %85 = getelementptr inbounds i8, ptr %83, i64 %6
  %86 = ptrtoint ptr %85 to i64
  %87 = sub nuw i64 %69, %86
  %.not261 = icmp ugt i64 %87, %26
  %lsr.iv.next467 = sub i64 %lsr.iv466, %26
  br i1 %.not261, label %.preheader274, label %.loopexit

88:                                               ; preds = %91, %.preheader271
  %lsr.iv468 = phi i64 [ %lsr.iv466, %.preheader271 ], [ %lsr.iv.next469, %91 ]
  %lsr.iv = phi i64 [ 0, %.preheader271 ], [ %lsr.iv.next, %91 ]
  %uglygep448 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv
  %uglygep465 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv
  %uglygep472 = getelementptr i8, ptr %uglygep470, i64 %lsr.iv
  tail call void %8(ptr align 1 %5, i64 1) #18
  %89 = tail call i8 %4(ptr align 1 %5, ptr align 1 %uglygep472, ptr align 1 %.0228.ph.ph) #18
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %.loopexit272.loopexit

91:                                               ; preds = %88
  tail call void %7(ptr align 1 %uglygep448, ptr align 1 %uglygep465) #18
  %uglygep462 = getelementptr i8, ptr %uglygep461, i64 %lsr.iv
  %uglygep484 = getelementptr i8, ptr %uglygep483, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep462, ptr align 1 %uglygep484) #18
  %uglygep460 = getelementptr i8, ptr %uglygep459, i64 %lsr.iv
  %uglygep482 = getelementptr i8, ptr %uglygep481, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep460, ptr align 1 %uglygep482) #18
  %uglygep458 = getelementptr i8, ptr %uglygep457, i64 %lsr.iv
  %uglygep480 = getelementptr i8, ptr %uglygep479, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep458, ptr align 1 %uglygep480) #18
  %uglygep456 = getelementptr i8, ptr %uglygep455, i64 %lsr.iv
  %uglygep478 = getelementptr i8, ptr %uglygep477, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep456, ptr align 1 %uglygep478) #18
  %uglygep454 = getelementptr i8, ptr %uglygep453, i64 %lsr.iv
  %uglygep476 = getelementptr i8, ptr %uglygep475, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep454, ptr align 1 %uglygep476) #18
  %uglygep452 = getelementptr i8, ptr %uglygep451, i64 %lsr.iv
  %uglygep474 = getelementptr i8, ptr %uglygep473, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep452, ptr align 1 %uglygep474) #18
  %uglygep450 = getelementptr i8, ptr %uglygep449, i64 %lsr.iv
  %uglygep471 = getelementptr i8, ptr %uglygep470, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep450, ptr align 1 %uglygep471) #18
  %lsr.iv.next = sub i64 %lsr.iv, %26
  %lsr.iv.next469 = sub i64 %lsr.iv468, %26
  %.not260 = icmp ugt i64 %lsr.iv.next469, %26
  br i1 %.not260, label %88, label %.loopexit.outer.loopexit

.loopexit267.loopexit:                            ; preds = %122
  %uglygep487 = getelementptr i8, ptr %.2245, i64 %lsr.iv485
  %uglygep504 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv485
  br label %.loopexit267

.loopexit267:                                     ; preds = %.loopexit267.loopexit, %.loopexit272
  %.4247 = phi ptr [ %uglygep487, %.loopexit267.loopexit ], [ %.2245, %.loopexit272 ]
  %.4238 = phi ptr [ %.5239, %.loopexit267.loopexit ], [ %.2236, %.loopexit272 ]
  %.2230 = phi ptr [ %uglygep504, %.loopexit267.loopexit ], [ %.0228.ph.ph, %.loopexit272 ]
  %.2215 = phi ptr [ %.3216, %.loopexit267.loopexit ], [ %.0213.ph.ph388, %.loopexit272 ]
  %92 = ptrtoint ptr %.4247 to i64
  %93 = ptrtoint ptr %.4238 to i64
  %94 = sub nuw i64 %92, %93
  %95 = icmp ult i64 %94, %29
  br i1 %95, label %.preheader265, label %.cont46

.preheader265:                                    ; preds = %.loopexit267
  %96 = icmp ule ptr %.2, %.2224
  %97 = icmp ule ptr %.2215, %.2230
  %98 = select i1 %96, i1 %97, i1 false
  br i1 %98, label %.cont.preheader, label %.preheader264

.cont.preheader:                                  ; preds = %.preheader265
  br label %.cont

.preheader269:                                    ; preds = %102, %.preheader269.preheader
  %lsr.iv508 = phi i64 [ %65, %.preheader269.preheader ], [ %lsr.iv.next509, %102 ]
  %.5239 = phi ptr [ %118, %102 ], [ %.2236, %.preheader269.preheader ]
  %.3216 = phi ptr [ %119, %102 ], [ %.0213.ph.ph388, %.preheader269.preheader ]
  %99 = getelementptr inbounds i8, ptr %.3216, i64 %27
  tail call void %8(ptr align 1 %5, i64 1) #18
  %100 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %99) #18
  %101 = icmp eq i8 %100, 1
  br i1 %101, label %102, label %.preheader266

.preheader266:                                    ; preds = %.preheader269
  %uglygep490 = getelementptr i8, ptr %.2245, i64 %28
  %uglygep492 = getelementptr i8, ptr %.2245, i64 %30
  %uglygep494 = getelementptr i8, ptr %.2245, i64 %31
  %uglygep496 = getelementptr i8, ptr %.2245, i64 %32
  %uglygep498 = getelementptr i8, ptr %.2245, i64 %33
  %uglygep500 = getelementptr i8, ptr %.2245, i64 %34
  %uglygep502 = getelementptr i8, ptr %.2245, i64 %12
  %uglygep512 = getelementptr i8, ptr %.0228.ph.ph, i64 %28
  %uglygep515 = getelementptr i8, ptr %.0228.ph.ph, i64 %30
  %uglygep517 = getelementptr i8, ptr %.0228.ph.ph, i64 %31
  %uglygep519 = getelementptr i8, ptr %.0228.ph.ph, i64 %32
  %uglygep521 = getelementptr i8, ptr %.0228.ph.ph, i64 %33
  %uglygep523 = getelementptr i8, ptr %.0228.ph.ph, i64 %34
  %uglygep525 = getelementptr i8, ptr %.0228.ph.ph, i64 %12
  br label %122

102:                                              ; preds = %.preheader269
  %103 = ptrtoint ptr %.0228.ph.ph to i64
  tail call void %7(ptr align 1 %.5239, ptr align 1 %.3216) #18
  %104 = getelementptr inbounds i8, ptr %.5239, i64 %6
  %105 = getelementptr inbounds i8, ptr %.3216, i64 %6
  tail call void %7(ptr align 1 %104, ptr align 1 %105) #18
  %106 = getelementptr inbounds i8, ptr %104, i64 %6
  %107 = getelementptr inbounds i8, ptr %105, i64 %6
  tail call void %7(ptr align 1 %106, ptr align 1 %107) #18
  %108 = getelementptr inbounds i8, ptr %106, i64 %6
  %109 = getelementptr inbounds i8, ptr %107, i64 %6
  tail call void %7(ptr align 1 %108, ptr align 1 %109) #18
  %110 = getelementptr inbounds i8, ptr %108, i64 %6
  %111 = getelementptr inbounds i8, ptr %109, i64 %6
  tail call void %7(ptr align 1 %110, ptr align 1 %111) #18
  %112 = getelementptr inbounds i8, ptr %110, i64 %6
  %113 = getelementptr inbounds i8, ptr %111, i64 %6
  tail call void %7(ptr align 1 %112, ptr align 1 %113) #18
  %114 = getelementptr inbounds i8, ptr %112, i64 %6
  %115 = getelementptr inbounds i8, ptr %113, i64 %6
  tail call void %7(ptr align 1 %114, ptr align 1 %115) #18
  %116 = getelementptr inbounds i8, ptr %114, i64 %6
  %117 = getelementptr inbounds i8, ptr %115, i64 %6
  tail call void %7(ptr align 1 %116, ptr align 1 %117) #18
  %118 = getelementptr inbounds i8, ptr %116, i64 %6
  %119 = getelementptr inbounds i8, ptr %117, i64 %6
  %120 = ptrtoint ptr %119 to i64
  %121 = sub nuw i64 %103, %120
  %.not258 = icmp ugt i64 %121, %26
  %lsr.iv.next509 = sub i64 %lsr.iv508, %26
  br i1 %.not258, label %.preheader269, label %.loopexit.outer.outer384

122:                                              ; preds = %124, %.preheader266
  %lsr.iv510 = phi i64 [ %lsr.iv508, %.preheader266 ], [ %lsr.iv.next511, %124 ]
  %lsr.iv485 = phi i64 [ 0, %.preheader266 ], [ %lsr.iv.next486, %124 ]
  %uglygep489 = getelementptr i8, ptr %.2245, i64 %lsr.iv485
  %uglygep506 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv485
  %uglygep514 = getelementptr i8, ptr %uglygep512, i64 %lsr.iv485
  tail call void %8(ptr align 1 %5, i64 1) #18
  %123 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %uglygep514) #18
  %.not256 = icmp eq i8 %123, 1
  br i1 %.not256, label %.loopexit267.loopexit, label %124

124:                                              ; preds = %122
  tail call void %7(ptr align 1 %uglygep489, ptr align 1 %uglygep506) #18
  %uglygep503 = getelementptr i8, ptr %uglygep502, i64 %lsr.iv485
  %uglygep526 = getelementptr i8, ptr %uglygep525, i64 %lsr.iv485
  tail call void %7(ptr align 1 %uglygep503, ptr align 1 %uglygep526) #18
  %uglygep501 = getelementptr i8, ptr %uglygep500, i64 %lsr.iv485
  %uglygep524 = getelementptr i8, ptr %uglygep523, i64 %lsr.iv485
  tail call void %7(ptr align 1 %uglygep501, ptr align 1 %uglygep524) #18
  %uglygep499 = getelementptr i8, ptr %uglygep498, i64 %lsr.iv485
  %uglygep522 = getelementptr i8, ptr %uglygep521, i64 %lsr.iv485
  tail call void %7(ptr align 1 %uglygep499, ptr align 1 %uglygep522) #18
  %uglygep497 = getelementptr i8, ptr %uglygep496, i64 %lsr.iv485
  %uglygep520 = getelementptr i8, ptr %uglygep519, i64 %lsr.iv485
  tail call void %7(ptr align 1 %uglygep497, ptr align 1 %uglygep520) #18
  %uglygep495 = getelementptr i8, ptr %uglygep494, i64 %lsr.iv485
  %uglygep518 = getelementptr i8, ptr %uglygep517, i64 %lsr.iv485
  tail call void %7(ptr align 1 %uglygep495, ptr align 1 %uglygep518) #18
  %uglygep493 = getelementptr i8, ptr %uglygep492, i64 %lsr.iv485
  %uglygep516 = getelementptr i8, ptr %uglygep515, i64 %lsr.iv485
  tail call void %7(ptr align 1 %uglygep493, ptr align 1 %uglygep516) #18
  %uglygep491 = getelementptr i8, ptr %uglygep490, i64 %lsr.iv485
  %uglygep513 = getelementptr i8, ptr %uglygep512, i64 %lsr.iv485
  tail call void %7(ptr align 1 %uglygep491, ptr align 1 %uglygep513) #18
  %lsr.iv.next486 = sub i64 %lsr.iv485, %26
  %lsr.iv.next511 = sub i64 %lsr.iv510, %26
  %.not257 = icmp ugt i64 %lsr.iv.next511, %26
  br i1 %.not257, label %122, label %.loopexit.outer.outer.backedge.loopexit

.cont46:                                          ; preds = %.loopexit267
  tail call void %8(ptr align 1 %5, i64 16) #18
  %125 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %.2215) #18
  %.not = icmp eq i8 %125, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  tail call void %7(ptr align 1 %.4238, ptr align 1 %.sroa.speculated42) #18
  %126 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 %6
  %..4217 = select i1 %.not, ptr %126, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %126
  %127 = getelementptr inbounds i8, ptr %.4238, i64 %6
  %128 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %.2230) #18
  %129 = icmp eq i8 %128, 1
  %.sroa.speculated105 = select i1 %129, ptr %.2224, ptr %.2230
  tail call void %7(ptr align 1 %.4247, ptr align 1 %.sroa.speculated105) #18
  %130 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 %12
  %.5233 = select i1 %129, ptr %.2230, ptr %130
  %.5227 = select i1 %129, ptr %130, ptr %.2224
  %131 = getelementptr inbounds i8, ptr %.4247, i64 %12
  %132 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4., ptr align 1 %..4217) #18
  %.not.1 = icmp eq i8 %132, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  tail call void %7(ptr align 1 %127, ptr align 1 %.sroa.speculated42.1) #18
  %133 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 %6
  %..4217.1 = select i1 %.not.1, ptr %133, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %133
  %134 = getelementptr inbounds i8, ptr %127, i64 %6
  %135 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227, ptr align 1 %.5233) #18
  %136 = icmp eq i8 %135, 1
  %.sroa.speculated105.1 = select i1 %136, ptr %.5227, ptr %.5233
  tail call void %7(ptr align 1 %131, ptr align 1 %.sroa.speculated105.1) #18
  %137 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 %12
  %.5233.1 = select i1 %136, ptr %.5233, ptr %137
  %.5227.1 = select i1 %136, ptr %137, ptr %.5227
  %138 = getelementptr inbounds i8, ptr %131, i64 %12
  %139 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..1, ptr align 1 %..4217.1) #18
  %.not.2 = icmp eq i8 %139, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  tail call void %7(ptr align 1 %134, ptr align 1 %.sroa.speculated42.2) #18
  %140 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 %6
  %..4217.2 = select i1 %.not.2, ptr %140, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %140
  %141 = getelementptr inbounds i8, ptr %134, i64 %6
  %142 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.1, ptr align 1 %.5233.1) #18
  %143 = icmp eq i8 %142, 1
  %.sroa.speculated105.2 = select i1 %143, ptr %.5227.1, ptr %.5233.1
  tail call void %7(ptr align 1 %138, ptr align 1 %.sroa.speculated105.2) #18
  %144 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 %12
  %.5233.2 = select i1 %143, ptr %.5233.1, ptr %144
  %.5227.2 = select i1 %143, ptr %144, ptr %.5227.1
  %145 = getelementptr inbounds i8, ptr %138, i64 %12
  %146 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..2, ptr align 1 %..4217.2) #18
  %.not.3 = icmp eq i8 %146, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  tail call void %7(ptr align 1 %141, ptr align 1 %.sroa.speculated42.3) #18
  %147 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 %6
  %..4217.3 = select i1 %.not.3, ptr %147, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %147
  %148 = getelementptr inbounds i8, ptr %141, i64 %6
  %149 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.2, ptr align 1 %.5233.2) #18
  %150 = icmp eq i8 %149, 1
  %.sroa.speculated105.3 = select i1 %150, ptr %.5227.2, ptr %.5233.2
  tail call void %7(ptr align 1 %145, ptr align 1 %.sroa.speculated105.3) #18
  %151 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 %12
  %.5233.3 = select i1 %150, ptr %.5233.2, ptr %151
  %.5227.3 = select i1 %150, ptr %151, ptr %.5227.2
  %152 = getelementptr inbounds i8, ptr %145, i64 %12
  %153 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..3, ptr align 1 %..4217.3) #18
  %.not.4 = icmp eq i8 %153, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  tail call void %7(ptr align 1 %148, ptr align 1 %.sroa.speculated42.4) #18
  %154 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 %6
  %..4217.4 = select i1 %.not.4, ptr %154, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %154
  %155 = getelementptr inbounds i8, ptr %148, i64 %6
  %156 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.3, ptr align 1 %.5233.3) #18
  %157 = icmp eq i8 %156, 1
  %.sroa.speculated105.4 = select i1 %157, ptr %.5227.3, ptr %.5233.3
  tail call void %7(ptr align 1 %152, ptr align 1 %.sroa.speculated105.4) #18
  %158 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 %12
  %.5233.4 = select i1 %157, ptr %.5233.3, ptr %158
  %.5227.4 = select i1 %157, ptr %158, ptr %.5227.3
  %159 = getelementptr inbounds i8, ptr %152, i64 %12
  %160 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..4, ptr align 1 %..4217.4) #18
  %.not.5 = icmp eq i8 %160, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  tail call void %7(ptr align 1 %155, ptr align 1 %.sroa.speculated42.5) #18
  %161 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 %6
  %..4217.5 = select i1 %.not.5, ptr %161, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %161
  %162 = getelementptr inbounds i8, ptr %155, i64 %6
  %163 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.4, ptr align 1 %.5233.4) #18
  %164 = icmp eq i8 %163, 1
  %.sroa.speculated105.5 = select i1 %164, ptr %.5227.4, ptr %.5233.4
  tail call void %7(ptr align 1 %159, ptr align 1 %.sroa.speculated105.5) #18
  %165 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 %12
  %.5233.5 = select i1 %164, ptr %.5233.4, ptr %165
  %.5227.5 = select i1 %164, ptr %165, ptr %.5227.4
  %166 = getelementptr inbounds i8, ptr %159, i64 %12
  %167 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..5, ptr align 1 %..4217.5) #18
  %.not.6 = icmp eq i8 %167, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  tail call void %7(ptr align 1 %162, ptr align 1 %.sroa.speculated42.6) #18
  %168 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 %6
  %..4217.6 = select i1 %.not.6, ptr %168, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %168
  %169 = getelementptr inbounds i8, ptr %162, i64 %6
  %170 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.5, ptr align 1 %.5233.5) #18
  %171 = icmp eq i8 %170, 1
  %.sroa.speculated105.6 = select i1 %171, ptr %.5227.5, ptr %.5233.5
  tail call void %7(ptr align 1 %166, ptr align 1 %.sroa.speculated105.6) #18
  %172 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 %12
  %.5233.6 = select i1 %171, ptr %.5233.5, ptr %172
  %.5227.6 = select i1 %171, ptr %172, ptr %.5227.5
  %173 = getelementptr inbounds i8, ptr %166, i64 %12
  %174 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..6, ptr align 1 %..4217.6) #18
  %.not.7 = icmp eq i8 %174, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  tail call void %7(ptr align 1 %169, ptr align 1 %.sroa.speculated42.7) #18
  %175 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 %6
  %..4217.7 = select i1 %.not.7, ptr %175, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %175
  %176 = getelementptr inbounds i8, ptr %169, i64 %6
  %177 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.6, ptr align 1 %.5233.6) #18
  %178 = icmp eq i8 %177, 1
  %.sroa.speculated105.7 = select i1 %178, ptr %.5227.6, ptr %.5233.6
  tail call void %7(ptr align 1 %173, ptr align 1 %.sroa.speculated105.7) #18
  %179 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 %12
  %.5233.7 = select i1 %178, ptr %.5233.6, ptr %179
  %.5227.7 = select i1 %178, ptr %179, ptr %.5227.6
  %180 = getelementptr inbounds i8, ptr %173, i64 %12
  br label %.loopexit.outer.outer

.preheader264:                                    ; preds = %.cont, %.preheader265
  %.7241.lcssa = phi ptr [ %.4238, %.preheader265 ], [ %183, %.cont ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader265 ], [ %..6219, %.cont ]
  %.6.lcssa = phi ptr [ %.2, %.preheader265 ], [ %.6., %.cont ]
  %.not253307 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not253307, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader264
  br label %.lr.ph

.cont:                                            ; preds = %.cont, %.cont.preheader
  %.6304 = phi ptr [ %.6., %.cont ], [ %.2, %.cont.preheader ]
  %.6219303 = phi ptr [ %..6219, %.cont ], [ %.2215, %.cont.preheader ]
  %.7241302 = phi ptr [ %183, %.cont ], [ %.4238, %.cont.preheader ]
  tail call void %8(ptr align 1 %5, i64 1) #18
  %181 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.6304, ptr align 1 %.6219303) #18
  %.not255 = icmp eq i8 %181, 1
  %.sroa.speculated = select i1 %.not255, ptr %.6219303, ptr %.6304
  tail call void %7(ptr align 1 %.7241302, ptr align 1 %.sroa.speculated) #18
  %182 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  %..6219 = select i1 %.not255, ptr %182, ptr %.6219303
  %.6. = select i1 %.not255, ptr %.6304, ptr %182
  %183 = getelementptr inbounds i8, ptr %.7241302, i64 %6
  %184 = icmp ule ptr %.6., %.2224
  %185 = icmp ule ptr %..6219, %.2230
  %186 = select i1 %184, i1 %185, i1 false
  br i1 %186, label %.cont, label %.preheader264

.preheader:                                       ; preds = %.lr.ph, %.preheader264
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader264 ], [ %187, %.lr.ph ]
  %.not254311 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not254311, label %common.ret, label %.lr.ph314.preheader

.lr.ph314.preheader:                              ; preds = %.preheader
  br label %.lr.ph314

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.8309 = phi ptr [ %188, %.lr.ph ], [ %.6.lcssa, %.lr.ph.preheader ]
  %.8242308 = phi ptr [ %187, %.lr.ph ], [ %.7241.lcssa, %.lr.ph.preheader ]
  tail call void %7(ptr align 1 %.8242308, ptr align 1 %.8309) #18
  %187 = getelementptr inbounds i8, ptr %.8242308, i64 %6
  %188 = getelementptr inbounds i8, ptr %.8309, i64 %6
  %.not253 = icmp ugt ptr %188, %.2224
  br i1 %.not253, label %.preheader, label %.lr.ph

.lr.ph314:                                        ; preds = %.lr.ph314, %.lr.ph314.preheader
  %.8221313 = phi ptr [ %190, %.lr.ph314 ], [ %.6219.lcssa, %.lr.ph314.preheader ]
  %.9312 = phi ptr [ %189, %.lr.ph314 ], [ %.8242.lcssa, %.lr.ph314.preheader ]
  tail call void %7(ptr align 1 %.9312, ptr align 1 %.8221313) #18
  %189 = getelementptr inbounds i8, ptr %.9312, i64 %6
  %190 = getelementptr inbounds i8, ptr %.8221313, i64 %6
  %.not254 = icmp ugt ptr %190, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph314
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = alloca i64, align 8
  %11 = sub i64 0, %7
  %12 = ptrtoint ptr %10 to i64
  %13 = lshr i64 %12, 4
  br label %14

14:                                               ; preds = %sort.quadsort_swap__anon_14511.exit61, %9
  %.053 = phi i64 [ 0, %9 ], [ %152, %sort.quadsort_swap__anon_14511.exit61 ]
  %.052 = phi i64 [ %4, %9 ], [ %152, %sort.quadsort_swap__anon_14511.exit61 ]
  %.051 = phi ptr [ %2, %9 ], [ %0, %sort.quadsort_swap__anon_14511.exit61 ]
  %.0 = phi ptr [ %3, %9 ], [ %15, %sort.quadsort_swap__anon_14511.exit61 ]
  %15 = getelementptr inbounds i8, ptr %.0, i64 %11
  %16 = icmp ult i64 %.052, 2049
  br i1 %16, label %18, label %19

17:                                               ; preds = %sort.median_of_cube_root__anon_16249.exit, %18
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %103

18:                                               ; preds = %14
  call fastcc void @sort.median_of_nine__anon_16248(ptr nonnull align 1 %.051, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull align 1 %15)
  br label %17

19:                                               ; preds = %14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10)
  br label %20

20:                                               ; preds = %20, %19
  %.0.i = phi i64 [ 32, %19 ], [ %24, %20 ]
  %21 = mul nuw i64 %.0.i, %.0.i
  %22 = mul nuw i64 %21, %.0.i
  %23 = icmp ult i64 %22, %.052
  %24 = shl nuw i64 %.0.i, 1
  br i1 %23, label %20, label %25

25:                                               ; preds = %20
  %26 = or i64 %.052, %.0.i
  %27 = and i64 %26, -4294967296
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %25
  %30 = trunc i64 %.0.i to i32
  %31 = trunc i64 %.052 to i32
  %32 = udiv i32 %31, %30
  %33 = zext i32 %32 to i64
  br label %36

34:                                               ; preds = %25
  %35 = udiv i64 %.052, %.0.i
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i64 [ %33, %29 ], [ %35, %34 ]
  store i64 %37, ptr %10, align 8
  %38 = or i64 %13, %37
  %39 = and i64 %38, -4294967296
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = trunc i64 %37 to i32
  %43 = trunc i64 %13 to i32
  %44 = urem i32 %43, %42
  %45 = zext i32 %44 to i64
  br label %48

46:                                               ; preds = %36
  %47 = urem i64 %13, %37
  br label %48

48:                                               ; preds = %46, %41
  %49 = phi i64 [ %45, %41 ], [ %47, %46 ]
  %50 = mul nuw i64 %49, %7
  %51 = getelementptr inbounds i8, ptr %.051, i64 %50
  %52 = icmp eq ptr %.051, %0
  %..i = select i1 %52, ptr %1, ptr %0
  %53 = mul nuw i64 %37, %7
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  br label %54

54:                                               ; preds = %54, %48
  %lsr.iv72 = phi ptr [ %uglygep, %54 ], [ %..i, %48 ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %54 ], [ %umax.i, %48 ]
  %.03136.i = phi ptr [ %51, %48 ], [ %55, %54 ]
  call void %8(ptr nonnull align 1 %lsr.iv72, ptr align 1 %.03136.i) #18
  %55 = getelementptr inbounds i8, ptr %.03136.i, i64 %53
  %lsr.iv.next = add i64 %lsr.iv, -1
  %uglygep = getelementptr i8, ptr %lsr.iv72, i64 %7
  %exitcond.not.i = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not.i, label %56, label %54

56:                                               ; preds = %54
  %57 = lshr exact i64 %.0.i, 1
  %58 = mul nuw i64 %.0.i, %7
  %59 = getelementptr inbounds i8, ptr %..i, i64 %58
  %60 = icmp ult i64 %.0.i, 192
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %..i, i64 %57, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %62, label %63, label %68

63:                                               ; preds = %61
  %64 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %..i, i64 %57, ptr nonnull align 1 %59, i64 %57, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %..i, i64 %57, ptr nonnull align 1 %59, i64 %57, i64 %64, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %68

65:                                               ; preds = %56
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %..i, i64 %57, ptr nonnull align 1 %59, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  %66 = mul nuw i64 %57, %7
  %67 = getelementptr inbounds i8, ptr %..i, i64 %66
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %67, i64 %57, ptr nonnull align 1 %59, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit34.i

68:                                               ; preds = %63, %61
  %69 = mul nuw i64 %57, %7
  %70 = getelementptr inbounds i8, ptr %..i, i64 %69
  %71 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %70, i64 %57, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %71, label %72, label %sort.quadsort_swap__anon_14511.exit34.i

72:                                               ; preds = %68
  %73 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %70, i64 %57, ptr nonnull align 1 %59, i64 %57, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %70, i64 %57, ptr nonnull align 1 %59, i64 %57, i64 %73, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit34.i

sort.quadsort_swap__anon_14511.exit34.i:          ; preds = %72, %68, %65
  %74 = phi ptr [ %67, %65 ], [ %70, %68 ], [ %70, %72 ]
  %75 = add i64 %.0.i, -1
  %76 = mul nuw i64 %75, %7
  %77 = getelementptr inbounds i8, ptr %..i, i64 %76
  %78 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %77, ptr nonnull align 1 %..i) #18
  %.not.i = icmp eq i8 %78, 1
  br i1 %.not.i, label %79, label %83

79:                                               ; preds = %83, %sort.quadsort_swap__anon_14511.exit34.i
  %80 = phi i1 [ %88, %83 ], [ false, %sort.quadsort_swap__anon_14511.exit34.i ]
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %79
  %.0.in4.i.i = phi i64 [ %.0.i.i, %.lr.ph.i.i ], [ %57, %79 ]
  %.0133.i.i = phi ptr [ %.1.i.i, %.lr.ph.i.i ], [ %..i, %79 ]
  %.0142.i.i = phi ptr [ %.115.i.i, %.lr.ph.i.i ], [ %74, %79 ]
  %.0.i.i = lshr i64 %.0.in4.i.i, 1
  %81 = call i8 %5(ptr align 1 %6, ptr align 1 %.0133.i.i, ptr align 1 %.0142.i.i) #18
  %.not16.i.i = icmp eq i8 %81, 1
  %82 = mul nuw i64 %.0.i.i, %7
  %.115.idx.i.i = select i1 %.not16.i.i, i64 %82, i64 0
  %.115.i.i = getelementptr i8, ptr %.0142.i.i, i64 %.115.idx.i.i
  %.1.idx.i.i = select i1 %.not16.i.i, i64 0, i64 %82
  %.1.i.i = getelementptr i8, ptr %.0133.i.i, i64 %.1.idx.i.i
  %.not.i.i = icmp ult i64 %.0.in4.i.i, 4
  br i1 %.not.i.i, label %sort.median_of_cube_root__anon_16249.exit, label %.lr.ph.i.i

83:                                               ; preds = %sort.quadsort_swap__anon_14511.exit34.i
  %84 = add nsw i64 %57, -1
  %85 = mul nuw i64 %84, %7
  %86 = getelementptr inbounds i8, ptr %..i, i64 %85
  %87 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %86, ptr nonnull align 1 %..i) #18
  %88 = icmp ne i8 %87, 1
  br label %79

sort.median_of_cube_root__anon_16249.exit:        ; preds = %.lr.ph.i.i
  %89 = call i8 %5(ptr align 1 %6, ptr align 1 %.1.i.i, ptr align 1 %.115.i.i) #18
  %90 = icmp eq i8 %89, 1
  %91 = select i1 %90, ptr %.1.i.i, ptr %.115.i.i
  call void %8(ptr nonnull align 1 %15, ptr align 1 %91) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  br i1 %80, label %92, label %17

92:                                               ; preds = %sort.median_of_cube_root__anon_16249.exit
  %93 = icmp eq ptr %.051, %1
  br i1 %93, label %101, label %94

common.ret:                                       ; preds = %207, %205, %203, %202, %188, %181, %171, %169, %168, %105, %99, %97, %96
  ret void

94:                                               ; preds = %101, %92
  %95 = icmp ult i64 %.052, 96
  br i1 %95, label %96, label %97

96:                                               ; preds = %94
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

97:                                               ; preds = %94
  %98 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %98, label %99, label %common.ret

99:                                               ; preds = %97
  %100 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %100, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

101:                                              ; preds = %92
  %102 = mul nuw i64 %.052, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %102, i1 false)
  br label %94

103:                                              ; preds = %17
  %104 = call i8 %5(ptr align 1 %6, ptr align 1 %.0, ptr align 1 %15) #18
  %.not58 = icmp eq i8 %104, 1
  br i1 %.not58, label %.critedge, label %105

105:                                              ; preds = %103
  call fastcc void @sort.flux_reverse_partition__anon_16250(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %15, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

.critedge:                                        ; preds = %103, %17
  %.not160.i = icmp ult i64 %.052, 8
  br i1 %.not160.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.0165.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.0131164.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.0143163.i = phi ptr [ %uglygep73, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.0145162.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.0147161.i = phi i64 [ %133, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %106 = call i8 %5(ptr align 1 %6, ptr align 1 %.0143163.i, ptr nonnull align 1 %15) #18
  %.not151.i = icmp eq i8 %106, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.0131164.i, ptr %.0165.i
  call void %8(ptr align 1 %.sroa.speculated78.i, ptr align 1 %.0143163.i) #18
  %107 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 %7
  %..0131.i = select i1 %.not151.i, ptr %107, ptr %.0131164.i
  %.0..i = select i1 %.not151.i, ptr %.0165.i, ptr %107
  %108 = getelementptr inbounds i8, ptr %.0143163.i, i64 %7
  %109 = call i8 %5(ptr align 1 %6, ptr align 1 %108, ptr nonnull align 1 %15) #18
  %.not152.i = icmp eq i8 %109, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  call void %8(ptr align 1 %.sroa.speculated69.i, ptr align 1 %108) #18
  %110 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 %7
  %.2133.i = select i1 %.not152.i, ptr %110, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %110
  %111 = getelementptr inbounds i8, ptr %108, i64 %7
  %112 = call i8 %5(ptr align 1 %6, ptr align 1 %111, ptr nonnull align 1 %15) #18
  %.not153.i = icmp eq i8 %112, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  call void %8(ptr align 1 %.sroa.speculated60.i, ptr align 1 %111) #18
  %113 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 %7
  %.3134.i = select i1 %.not153.i, ptr %113, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %113
  %114 = getelementptr inbounds i8, ptr %111, i64 %7
  %115 = call i8 %5(ptr align 1 %6, ptr align 1 %114, ptr nonnull align 1 %15) #18
  %.not154.i = icmp eq i8 %115, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  call void %8(ptr align 1 %.sroa.speculated51.i, ptr align 1 %114) #18
  %116 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 %7
  %.4135.i = select i1 %.not154.i, ptr %116, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %116
  %117 = getelementptr inbounds i8, ptr %114, i64 %7
  %118 = call i8 %5(ptr align 1 %6, ptr align 1 %117, ptr nonnull align 1 %15) #18
  %.not155.i = icmp eq i8 %118, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  call void %8(ptr align 1 %.sroa.speculated42.i, ptr align 1 %117) #18
  %119 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 %7
  %.5136.i = select i1 %.not155.i, ptr %119, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %119
  %120 = getelementptr inbounds i8, ptr %117, i64 %7
  %121 = call i8 %5(ptr align 1 %6, ptr align 1 %120, ptr nonnull align 1 %15) #18
  %.not156.i = icmp eq i8 %121, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  call void %8(ptr align 1 %.sroa.speculated33.i, ptr align 1 %120) #18
  %122 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 %7
  %.6137.i = select i1 %.not156.i, ptr %122, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %122
  %123 = getelementptr inbounds i8, ptr %120, i64 %7
  %124 = call i8 %5(ptr align 1 %6, ptr align 1 %123, ptr nonnull align 1 %15) #18
  %.not157.i = icmp eq i8 %124, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  call void %8(ptr align 1 %.sroa.speculated24.i, ptr align 1 %123) #18
  %125 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 %7
  %.7138.i = select i1 %.not157.i, ptr %125, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %125
  %126 = getelementptr inbounds i8, ptr %123, i64 %7
  %127 = call i8 %5(ptr align 1 %6, ptr align 1 %126, ptr nonnull align 1 %15) #18
  %.not158.i = icmp eq i8 %127, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  call void %8(ptr align 1 %.sroa.speculated15.i, ptr align 1 %126) #18
  %128 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 %7
  %.8139.i = select i1 %.not158.i, ptr %128, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %128
  %129 = getelementptr inbounds i8, ptr %126, i64 %7
  %130 = icmp eq ptr %.8.i, %0
  %131 = icmp eq ptr %.8139.i, %1
  %132 = select i1 %130, i1 true, i1 %131
  %.1146.i = select i1 %132, i64 %.0147161.i, i64 %.0145162.i
  %133 = add i64 %.0147161.i, 8
  %.not.i59 = icmp ugt i64 %133, %.052
  %uglygep73 = getelementptr i8, ptr %126, i64 %7
  br i1 %.not.i59, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %129, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %134 = and i64 %.052, 7
  %.not175.i = icmp eq i64 %134, 0
  br i1 %.not175.i, label %._crit_edge173.i, label %.cont.i.preheader

.cont.i.preheader:                                ; preds = %._crit_edge.i
  br label %.cont.i

.cont.i:                                          ; preds = %.cont.i, %.cont.i.preheader
  %lsr.iv74 = phi i64 [ %134, %.cont.i.preheader ], [ %lsr.iv.next75, %.cont.i ]
  %.9172.i = phi ptr [ %.9..i, %.cont.i ], [ %.0.lcssa.i, %.cont.i.preheader ]
  %.9140171.i = phi ptr [ %..9140.i, %.cont.i ], [ %.0131.lcssa.i, %.cont.i.preheader ]
  %.1144169.i = phi ptr [ %137, %.cont.i ], [ %.0143.lcssa.i, %.cont.i.preheader ]
  %135 = call i8 %5(ptr align 1 %6, ptr align 1 %.1144169.i, ptr nonnull align 1 %15) #18
  %.not150.i = icmp eq i8 %135, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.9140171.i, ptr %.9172.i
  call void %8(ptr align 1 %.sroa.speculated.i, ptr align 1 %.1144169.i) #18
  %136 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %7
  %..9140.i = select i1 %.not150.i, ptr %136, ptr %.9140171.i
  %.9..i = select i1 %.not150.i, ptr %.9172.i, ptr %136
  %137 = getelementptr inbounds i8, ptr %.1144169.i, i64 %7
  %lsr.iv.next75 = add nsw i64 %lsr.iv74, -1
  %exitcond.not.i60 = icmp eq i64 %lsr.iv.next75, 0
  br i1 %exitcond.not.i60, label %._crit_edge173.i, label %.cont.i

._crit_edge173.i:                                 ; preds = %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ]
  %138 = ptrtoint ptr %0 to i64
  %139 = ptrtoint ptr %.9.lcssa.i to i64
  %140 = sub nuw i64 %139, %138
  %141 = or i64 %140, %7
  %142 = and i64 %141, -4294967296
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %149

144:                                              ; preds = %._crit_edge173.i
  %145 = trunc i64 %7 to i32
  %146 = trunc i64 %140 to i32
  %147 = udiv i32 %146, %145
  %148 = zext i32 %147 to i64
  br label %151

149:                                              ; preds = %._crit_edge173.i
  %150 = udiv i64 %140, %7
  br label %151

151:                                              ; preds = %149, %144
  %152 = phi i64 [ %148, %144 ], [ %150, %149 ]
  %153 = lshr i64 %.052, 2
  %154 = icmp ule i64 %.0145.lcssa.i, %153
  %155 = icmp eq i64 %.052, %152
  %or.cond.i = select i1 %154, i1 true, i1 %155
  %156 = sub nuw i64 %.052, %152
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16251.exit, label %157

157:                                              ; preds = %151
  %158 = mul nuw i64 %152, %7
  %159 = getelementptr inbounds i8, ptr %0, i64 %158
  %160 = mul nuw i64 %156, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %159, ptr nonnull align 1 %1, i64 %160, i1 false)
  %161 = icmp ult i64 %156, 96
  br i1 %161, label %162, label %163

162:                                              ; preds = %157
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %159, i64 %156, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit.i

163:                                              ; preds = %157
  %164 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %159, i64 %156, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %164, label %165, label %sort.quadsort_swap__anon_14511.exit.i

165:                                              ; preds = %163
  %166 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %159, i64 %156, ptr nonnull align 1 %1, i64 %156, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %159, i64 %156, ptr nonnull align 1 %1, i64 %156, i64 %166, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit.i

sort.quadsort_swap__anon_14511.exit.i:            ; preds = %165, %163, %162
  %167 = icmp ult i64 %152, 96
  br i1 %167, label %168, label %169

168:                                              ; preds = %sort.quadsort_swap__anon_14511.exit.i
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %152, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

169:                                              ; preds = %sort.quadsort_swap__anon_14511.exit.i
  %170 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %152, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %170, label %171, label %common.ret

171:                                              ; preds = %169
  %172 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %152, ptr nonnull align 1 %1, i64 %152, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %152, ptr nonnull align 1 %1, i64 %152, i64 %172, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

sort.flux_default_partition__anon_16251.exit:     ; preds = %151
  %173 = lshr i64 %156, 5
  %174 = icmp ule i64 %152, %173
  %175 = icmp ult i64 %156, 97
  %176 = or i1 %175, %174
  br i1 %176, label %181, label %183

sort.quadsort_swap__anon_14511.exit61:            ; preds = %197, %195, %194, %183
  %177 = lshr i64 %152, 5
  %178 = icmp ule i64 %156, %177
  %179 = icmp ult i64 %152, 97
  %180 = or i1 %179, %178
  br i1 %180, label %199, label %14

181:                                              ; preds = %sort.flux_default_partition__anon_16251.exit
  %182 = icmp ult i64 %140, %7
  br i1 %182, label %common.ret, label %186

183:                                              ; preds = %sort.flux_default_partition__anon_16251.exit
  %184 = mul nuw i64 %152, %7
  %185 = getelementptr inbounds i8, ptr %0, i64 %184
  call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %185, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %15, i64 %156, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit61

186:                                              ; preds = %181
  %187 = icmp eq i64 %.052, %152
  br i1 %187, label %188, label %189

188:                                              ; preds = %186
  call fastcc void @sort.flux_reverse_partition__anon_16250(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %15, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

189:                                              ; preds = %186
  %190 = mul nuw i64 %152, %7
  %191 = getelementptr inbounds i8, ptr %0, i64 %190
  %192 = mul nuw i64 %156, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %191, ptr nonnull align 1 %1, i64 %192, i1 false)
  %193 = icmp ult i64 %156, 96
  br i1 %193, label %194, label %195

194:                                              ; preds = %189
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %191, i64 %156, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit61

195:                                              ; preds = %189
  %196 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %191, i64 %156, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %196, label %197, label %sort.quadsort_swap__anon_14511.exit61

197:                                              ; preds = %195
  %198 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %191, i64 %156, ptr nonnull align 1 %1, i64 %156, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %191, i64 %156, ptr nonnull align 1 %1, i64 %156, i64 %198, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %sort.quadsort_swap__anon_14511.exit61

199:                                              ; preds = %sort.quadsort_swap__anon_14511.exit61
  %200 = icmp ult i64 %152, 97
  br i1 %200, label %201, label %207

201:                                              ; preds = %199
  %.not67 = icmp eq i64 %152, 96
  br i1 %.not67, label %203, label %202

202:                                              ; preds = %201
  call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %152, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

203:                                              ; preds = %201
  %204 = call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 96, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %204, label %205, label %common.ret

205:                                              ; preds = %203
  %206 = call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, i64 %206, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret

207:                                              ; preds = %199
  call fastcc void @sort.flux_reverse_partition__anon_16250(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %15, i64 %152, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = mul nuw i64 %6, %2
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = sub i64 0, %6
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = mul nuw i64 %6, %3
  %14 = getelementptr inbounds i8, ptr %12, i64 %13
  %15 = add nuw i64 %2, 1
  %16 = icmp uge i64 %15, %3
  %17 = add nuw i64 %3, 1
  %18 = icmp uge i64 %17, %2
  %19 = select i1 %16, i1 %18, i1 false
  %20 = icmp ugt i64 %2, 31
  %or.cond = select i1 %19, i1 %20, i1 false
  br i1 %or.cond, label %34, label %.critedge

.critedge:                                        ; preds = %47, %42, %39, %34, %8
  %21 = add i64 %2, -1
  %22 = add i64 %21, %3
  %23 = mul nuw i64 %22, %6
  %24 = getelementptr inbounds i8, ptr %0, i64 %23
  %25 = shl nuw i64 %6, 3
  %26 = mul nuw i64 %6, 7
  %27 = sub i64 0, %26
  %28 = shl nuw i64 %6, 4
  %29 = mul i64 %6, -6
  %30 = mul i64 %6, -5
  %31 = mul i64 %6, -4
  %32 = mul i64 %6, -3
  %33 = mul i64 %6, -2
  br label %.loopexit.outer.outer

34:                                               ; preds = %8
  %35 = mul nuw i64 %6, 15
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %36, ptr nonnull align 1 %10) #18
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %.critedge

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8, ptr %10, i64 %35
  %41 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %40) #18
  %.not262 = icmp eq i8 %41, 1
  br i1 %.not262, label %.critedge, label %42

42:                                               ; preds = %39
  %43 = sub i64 0, %35
  %44 = getelementptr inbounds i8, ptr %14, i64 %43
  %45 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %12, ptr nonnull align 1 %44) #18
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %47, label %.critedge

47:                                               ; preds = %42
  %48 = getelementptr inbounds i8, ptr %12, i64 %43
  %49 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %48, ptr nonnull align 1 %14) #18
  %.not263 = icmp eq i8 %49, 1
  br i1 %.not263, label %.critedge, label %50

common.ret:                                       ; preds = %.lr.ph52, %.preheader
  ret void

50:                                               ; preds = %47
  tail call fastcc void @sort.parity_merge__anon_16213(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 1 %7)
  ret void

.loopexit.outer.outer.backedge.loopexit:          ; preds = %179
  %uglygep226 = getelementptr i8, ptr %.2245, i64 %lsr.iv.next224
  %uglygep243 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv.next224
  br label %.loopexit.outer.outer

.loopexit.outer.outer:                            ; preds = %.cont46.preheader, %.loopexit.outer.outer.backedge.loopexit, %.critedge
  %.0243.ph.ph = phi ptr [ %24, %.critedge ], [ %150, %.cont46.preheader ], [ %uglygep226, %.loopexit.outer.outer.backedge.loopexit ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %146, %.cont46.preheader ], [ %.5239, %.loopexit.outer.outer.backedge.loopexit ]
  %.0228.ph.ph = phi ptr [ %14, %.critedge ], [ %.5233.7, %.cont46.preheader ], [ %uglygep243, %.loopexit.outer.outer.backedge.loopexit ]
  %.0222.ph.ph = phi ptr [ %12, %.critedge ], [ %.5227.7, %.cont46.preheader ], [ %.2224, %.loopexit.outer.outer.backedge.loopexit ]
  %.0213.ph.ph = phi ptr [ %10, %.critedge ], [ %..4217.7, %.cont46.preheader ], [ %.3216, %.loopexit.outer.outer.backedge.loopexit ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46.preheader ], [ %.2, %.loopexit.outer.outer.backedge.loopexit ]
  br label %.loopexit.outer.outer122

.loopexit.outer.outer122:                         ; preds = %157, %.loopexit.outer.outer
  %.0243.ph.ph123 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %157 ]
  %.0234.ph.ph124 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %173, %157 ]
  %.0222.ph.ph125 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %157 ]
  %.0213.ph.ph126 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %174, %157 ]
  %.0.ph.ph127 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %157 ]
  br label %.loopexit.outer

.loopexit.outer.loopexit:                         ; preds = %90
  %uglygep185 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv.next
  %uglygep202 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv.next
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %.loopexit.outer.loopexit, %.loopexit.outer.outer122
  %.0243.ph = phi ptr [ %.0243.ph.ph123, %.loopexit.outer.outer122 ], [ %uglygep185, %.loopexit.outer.loopexit ]
  %.0234.ph = phi ptr [ %.0234.ph.ph124, %.loopexit.outer.outer122 ], [ %.3237, %.loopexit.outer.loopexit ]
  %.0222.ph = phi ptr [ %.0222.ph.ph125, %.loopexit.outer.outer122 ], [ %uglygep202, %.loopexit.outer.loopexit ]
  %.0.ph = phi ptr [ %.0.ph.ph127, %.loopexit.outer.outer122 ], [ %.3, %.loopexit.outer.loopexit ]
  br label %.loopexit

.loopexit:                                        ; preds = %67, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %83, %67 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %84, %67 ]
  %51 = ptrtoint ptr %.0222.ph to i64
  %52 = ptrtoint ptr %.0 to i64
  %53 = sub nsw i64 %51, %52
  %54 = icmp sgt i64 %53, %25
  br i1 %54, label %.preheader12.preheader, label %.loopexit10

.preheader12.preheader:                           ; preds = %.loopexit
  %55 = ptrtoint ptr %.0 to i64
  %56 = ptrtoint ptr %.0222.ph to i64
  %57 = sub i64 %56, %55
  br label %.preheader12

.loopexit10.loopexit:                             ; preds = %87
  %uglygep = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv
  %uglygep201 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv
  br label %.loopexit10

.loopexit10:                                      ; preds = %.loopexit10.loopexit, %.loopexit
  %.2245 = phi ptr [ %uglygep, %.loopexit10.loopexit ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %.loopexit10.loopexit ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %uglygep201, %.loopexit10.loopexit ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %.loopexit10.loopexit ], [ %.0, %.loopexit ]
  %58 = ptrtoint ptr %.0228.ph.ph to i64
  %59 = ptrtoint ptr %.0213.ph.ph126 to i64
  %60 = sub nsw i64 %58, %59
  %61 = icmp sgt i64 %60, %25
  br i1 %61, label %.preheader7.preheader, label %.loopexit5

.preheader7.preheader:                            ; preds = %.loopexit10
  %62 = ptrtoint ptr %.0213.ph.ph126 to i64
  %63 = ptrtoint ptr %.0228.ph.ph to i64
  %64 = sub i64 %63, %62
  br label %.preheader7

.preheader12:                                     ; preds = %67, %.preheader12.preheader
  %lsr.iv204 = phi i64 [ %57, %.preheader12.preheader ], [ %lsr.iv.next205, %67 ]
  %.3237 = phi ptr [ %83, %67 ], [ %.0234, %.preheader12.preheader ]
  %.3 = phi ptr [ %84, %67 ], [ %.0, %.preheader12.preheader ]
  %65 = getelementptr inbounds i8, ptr %.3, i64 %26
  %66 = tail call i8 %4(ptr align 1 %5, ptr align 1 %65, ptr align 1 %.0213.ph.ph126) #18
  %.not259 = icmp eq i8 %66, 1
  br i1 %.not259, label %.preheader9, label %67

.preheader9:                                      ; preds = %.preheader12
  %uglygep187 = getelementptr i8, ptr %.0243.ph, i64 %27
  %uglygep189 = getelementptr i8, ptr %.0243.ph, i64 %29
  %uglygep191 = getelementptr i8, ptr %.0243.ph, i64 %30
  %uglygep193 = getelementptr i8, ptr %.0243.ph, i64 %31
  %uglygep195 = getelementptr i8, ptr %.0243.ph, i64 %32
  %uglygep197 = getelementptr i8, ptr %.0243.ph, i64 %33
  %uglygep199 = getelementptr i8, ptr %.0243.ph, i64 %11
  %uglygep208 = getelementptr i8, ptr %.0222.ph, i64 %27
  %uglygep211 = getelementptr i8, ptr %.0222.ph, i64 %29
  %uglygep213 = getelementptr i8, ptr %.0222.ph, i64 %30
  %uglygep215 = getelementptr i8, ptr %.0222.ph, i64 %31
  %uglygep217 = getelementptr i8, ptr %.0222.ph, i64 %32
  %uglygep219 = getelementptr i8, ptr %.0222.ph, i64 %33
  %uglygep221 = getelementptr i8, ptr %.0222.ph, i64 %11
  br label %87

67:                                               ; preds = %.preheader12
  %68 = ptrtoint ptr %.0222.ph to i64
  tail call void %7(ptr align 1 %.3237, ptr align 1 %.3) #18
  %69 = getelementptr inbounds i8, ptr %.3237, i64 %6
  %70 = getelementptr inbounds i8, ptr %.3, i64 %6
  tail call void %7(ptr align 1 %69, ptr align 1 %70) #18
  %71 = getelementptr inbounds i8, ptr %69, i64 %6
  %72 = getelementptr inbounds i8, ptr %70, i64 %6
  tail call void %7(ptr align 1 %71, ptr align 1 %72) #18
  %73 = getelementptr inbounds i8, ptr %71, i64 %6
  %74 = getelementptr inbounds i8, ptr %72, i64 %6
  tail call void %7(ptr align 1 %73, ptr align 1 %74) #18
  %75 = getelementptr inbounds i8, ptr %73, i64 %6
  %76 = getelementptr inbounds i8, ptr %74, i64 %6
  tail call void %7(ptr align 1 %75, ptr align 1 %76) #18
  %77 = getelementptr inbounds i8, ptr %75, i64 %6
  %78 = getelementptr inbounds i8, ptr %76, i64 %6
  tail call void %7(ptr align 1 %77, ptr align 1 %78) #18
  %79 = getelementptr inbounds i8, ptr %77, i64 %6
  %80 = getelementptr inbounds i8, ptr %78, i64 %6
  tail call void %7(ptr align 1 %79, ptr align 1 %80) #18
  %81 = getelementptr inbounds i8, ptr %79, i64 %6
  %82 = getelementptr inbounds i8, ptr %80, i64 %6
  tail call void %7(ptr align 1 %81, ptr align 1 %82) #18
  %83 = getelementptr inbounds i8, ptr %81, i64 %6
  %84 = getelementptr inbounds i8, ptr %82, i64 %6
  %85 = ptrtoint ptr %84 to i64
  %86 = sub nuw i64 %68, %85
  %.not261 = icmp ugt i64 %86, %25
  %lsr.iv.next205 = sub i64 %lsr.iv204, %25
  br i1 %.not261, label %.preheader12, label %.loopexit

87:                                               ; preds = %90, %.preheader9
  %lsr.iv206 = phi i64 [ %lsr.iv204, %.preheader9 ], [ %lsr.iv.next207, %90 ]
  %lsr.iv = phi i64 [ 0, %.preheader9 ], [ %lsr.iv.next, %90 ]
  %uglygep186 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv
  %uglygep203 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv
  %uglygep210 = getelementptr i8, ptr %uglygep208, i64 %lsr.iv
  %88 = tail call i8 %4(ptr align 1 %5, ptr align 1 %uglygep210, ptr align 1 %.0228.ph.ph) #18
  %89 = icmp eq i8 %88, 1
  br i1 %89, label %90, label %.loopexit10.loopexit

90:                                               ; preds = %87
  tail call void %7(ptr align 1 %uglygep186, ptr align 1 %uglygep203) #18
  %uglygep200 = getelementptr i8, ptr %uglygep199, i64 %lsr.iv
  %uglygep222 = getelementptr i8, ptr %uglygep221, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep200, ptr align 1 %uglygep222) #18
  %uglygep198 = getelementptr i8, ptr %uglygep197, i64 %lsr.iv
  %uglygep220 = getelementptr i8, ptr %uglygep219, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep198, ptr align 1 %uglygep220) #18
  %uglygep196 = getelementptr i8, ptr %uglygep195, i64 %lsr.iv
  %uglygep218 = getelementptr i8, ptr %uglygep217, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep196, ptr align 1 %uglygep218) #18
  %uglygep194 = getelementptr i8, ptr %uglygep193, i64 %lsr.iv
  %uglygep216 = getelementptr i8, ptr %uglygep215, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep194, ptr align 1 %uglygep216) #18
  %uglygep192 = getelementptr i8, ptr %uglygep191, i64 %lsr.iv
  %uglygep214 = getelementptr i8, ptr %uglygep213, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep192, ptr align 1 %uglygep214) #18
  %uglygep190 = getelementptr i8, ptr %uglygep189, i64 %lsr.iv
  %uglygep212 = getelementptr i8, ptr %uglygep211, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep190, ptr align 1 %uglygep212) #18
  %uglygep188 = getelementptr i8, ptr %uglygep187, i64 %lsr.iv
  %uglygep209 = getelementptr i8, ptr %uglygep208, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep188, ptr align 1 %uglygep209) #18
  %lsr.iv.next = sub i64 %lsr.iv, %25
  %lsr.iv.next207 = sub i64 %lsr.iv206, %25
  %.not260 = icmp ugt i64 %lsr.iv.next207, %25
  br i1 %.not260, label %87, label %.loopexit.outer.loopexit

.loopexit5.loopexit:                              ; preds = %177
  %uglygep225 = getelementptr i8, ptr %.2245, i64 %lsr.iv223
  %uglygep242 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv223
  br label %.loopexit5

.loopexit5:                                       ; preds = %.loopexit5.loopexit, %.loopexit10
  %.4247 = phi ptr [ %uglygep225, %.loopexit5.loopexit ], [ %.2245, %.loopexit10 ]
  %.4238 = phi ptr [ %.5239, %.loopexit5.loopexit ], [ %.2236, %.loopexit10 ]
  %.2230 = phi ptr [ %uglygep242, %.loopexit5.loopexit ], [ %.0228.ph.ph, %.loopexit10 ]
  %.2215 = phi ptr [ %.3216, %.loopexit5.loopexit ], [ %.0213.ph.ph126, %.loopexit10 ]
  %91 = ptrtoint ptr %.4247 to i64
  %92 = ptrtoint ptr %.4238 to i64
  %93 = sub nuw i64 %91, %92
  %94 = icmp ult i64 %93, %28
  br i1 %94, label %.preheader2, label %.cont46.preheader

.cont46.preheader:                                ; preds = %.loopexit5
  %95 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %.2215) #18
  %.not = icmp eq i8 %95, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  tail call void %7(ptr align 1 %.4238, ptr align 1 %.sroa.speculated42) #18
  %96 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 %6
  %..4217 = select i1 %.not, ptr %96, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %96
  %97 = getelementptr inbounds i8, ptr %.4238, i64 %6
  %98 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %.2230) #18
  %99 = icmp eq i8 %98, 1
  %.sroa.speculated105 = select i1 %99, ptr %.2224, ptr %.2230
  tail call void %7(ptr align 1 %.4247, ptr align 1 %.sroa.speculated105) #18
  %100 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 %11
  %.5233 = select i1 %99, ptr %.2230, ptr %100
  %.5227 = select i1 %99, ptr %100, ptr %.2224
  %101 = getelementptr inbounds i8, ptr %.4247, i64 %11
  %102 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4., ptr align 1 %..4217) #18
  %.not.1 = icmp eq i8 %102, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  tail call void %7(ptr align 1 %97, ptr align 1 %.sroa.speculated42.1) #18
  %103 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 %6
  %..4217.1 = select i1 %.not.1, ptr %103, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %103
  %104 = getelementptr inbounds i8, ptr %97, i64 %6
  %105 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227, ptr align 1 %.5233) #18
  %106 = icmp eq i8 %105, 1
  %.sroa.speculated105.1 = select i1 %106, ptr %.5227, ptr %.5233
  tail call void %7(ptr align 1 %101, ptr align 1 %.sroa.speculated105.1) #18
  %107 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 %11
  %.5233.1 = select i1 %106, ptr %.5233, ptr %107
  %.5227.1 = select i1 %106, ptr %107, ptr %.5227
  %108 = getelementptr inbounds i8, ptr %101, i64 %11
  %109 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..1, ptr align 1 %..4217.1) #18
  %.not.2 = icmp eq i8 %109, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  tail call void %7(ptr align 1 %104, ptr align 1 %.sroa.speculated42.2) #18
  %110 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 %6
  %..4217.2 = select i1 %.not.2, ptr %110, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %110
  %111 = getelementptr inbounds i8, ptr %104, i64 %6
  %112 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.1, ptr align 1 %.5233.1) #18
  %113 = icmp eq i8 %112, 1
  %.sroa.speculated105.2 = select i1 %113, ptr %.5227.1, ptr %.5233.1
  tail call void %7(ptr align 1 %108, ptr align 1 %.sroa.speculated105.2) #18
  %114 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 %11
  %.5233.2 = select i1 %113, ptr %.5233.1, ptr %114
  %.5227.2 = select i1 %113, ptr %114, ptr %.5227.1
  %115 = getelementptr inbounds i8, ptr %108, i64 %11
  %116 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..2, ptr align 1 %..4217.2) #18
  %.not.3 = icmp eq i8 %116, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  tail call void %7(ptr align 1 %111, ptr align 1 %.sroa.speculated42.3) #18
  %117 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 %6
  %..4217.3 = select i1 %.not.3, ptr %117, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %117
  %118 = getelementptr inbounds i8, ptr %111, i64 %6
  %119 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.2, ptr align 1 %.5233.2) #18
  %120 = icmp eq i8 %119, 1
  %.sroa.speculated105.3 = select i1 %120, ptr %.5227.2, ptr %.5233.2
  tail call void %7(ptr align 1 %115, ptr align 1 %.sroa.speculated105.3) #18
  %121 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 %11
  %.5233.3 = select i1 %120, ptr %.5233.2, ptr %121
  %.5227.3 = select i1 %120, ptr %121, ptr %.5227.2
  %122 = getelementptr inbounds i8, ptr %115, i64 %11
  %123 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..3, ptr align 1 %..4217.3) #18
  %.not.4 = icmp eq i8 %123, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  tail call void %7(ptr align 1 %118, ptr align 1 %.sroa.speculated42.4) #18
  %124 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 %6
  %..4217.4 = select i1 %.not.4, ptr %124, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %124
  %125 = getelementptr inbounds i8, ptr %118, i64 %6
  %126 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.3, ptr align 1 %.5233.3) #18
  %127 = icmp eq i8 %126, 1
  %.sroa.speculated105.4 = select i1 %127, ptr %.5227.3, ptr %.5233.3
  tail call void %7(ptr align 1 %122, ptr align 1 %.sroa.speculated105.4) #18
  %128 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 %11
  %.5233.4 = select i1 %127, ptr %.5233.3, ptr %128
  %.5227.4 = select i1 %127, ptr %128, ptr %.5227.3
  %129 = getelementptr inbounds i8, ptr %122, i64 %11
  %130 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..4, ptr align 1 %..4217.4) #18
  %.not.5 = icmp eq i8 %130, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  tail call void %7(ptr align 1 %125, ptr align 1 %.sroa.speculated42.5) #18
  %131 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 %6
  %..4217.5 = select i1 %.not.5, ptr %131, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %131
  %132 = getelementptr inbounds i8, ptr %125, i64 %6
  %133 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.4, ptr align 1 %.5233.4) #18
  %134 = icmp eq i8 %133, 1
  %.sroa.speculated105.5 = select i1 %134, ptr %.5227.4, ptr %.5233.4
  tail call void %7(ptr align 1 %129, ptr align 1 %.sroa.speculated105.5) #18
  %135 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 %11
  %.5233.5 = select i1 %134, ptr %.5233.4, ptr %135
  %.5227.5 = select i1 %134, ptr %135, ptr %.5227.4
  %136 = getelementptr inbounds i8, ptr %129, i64 %11
  %137 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..5, ptr align 1 %..4217.5) #18
  %.not.6 = icmp eq i8 %137, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  tail call void %7(ptr align 1 %132, ptr align 1 %.sroa.speculated42.6) #18
  %138 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 %6
  %..4217.6 = select i1 %.not.6, ptr %138, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %138
  %139 = getelementptr inbounds i8, ptr %132, i64 %6
  %140 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.5, ptr align 1 %.5233.5) #18
  %141 = icmp eq i8 %140, 1
  %.sroa.speculated105.6 = select i1 %141, ptr %.5227.5, ptr %.5233.5
  tail call void %7(ptr align 1 %136, ptr align 1 %.sroa.speculated105.6) #18
  %142 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 %11
  %.5233.6 = select i1 %141, ptr %.5233.5, ptr %142
  %.5227.6 = select i1 %141, ptr %142, ptr %.5227.5
  %143 = getelementptr inbounds i8, ptr %136, i64 %11
  %144 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..6, ptr align 1 %..4217.6) #18
  %.not.7 = icmp eq i8 %144, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  tail call void %7(ptr align 1 %139, ptr align 1 %.sroa.speculated42.7) #18
  %145 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 %6
  %..4217.7 = select i1 %.not.7, ptr %145, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %145
  %146 = getelementptr inbounds i8, ptr %139, i64 %6
  %147 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.6, ptr align 1 %.5233.6) #18
  %148 = icmp eq i8 %147, 1
  %.sroa.speculated105.7 = select i1 %148, ptr %.5227.6, ptr %.5233.6
  tail call void %7(ptr align 1 %143, ptr align 1 %.sroa.speculated105.7) #18
  %149 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 %11
  %.5233.7 = select i1 %148, ptr %.5233.6, ptr %149
  %.5227.7 = select i1 %148, ptr %149, ptr %.5227.6
  %150 = getelementptr inbounds i8, ptr %143, i64 %11
  br label %.loopexit.outer.outer

.preheader2:                                      ; preds = %.loopexit5
  %151 = icmp ule ptr %.2, %.2224
  %152 = icmp ule ptr %.2215, %.2230
  %153 = select i1 %151, i1 %152, i1 false
  br i1 %153, label %.cont.preheader, label %.preheader1

.cont.preheader:                                  ; preds = %.preheader2
  br label %.cont

.preheader7:                                      ; preds = %157, %.preheader7.preheader
  %lsr.iv246 = phi i64 [ %64, %.preheader7.preheader ], [ %lsr.iv.next247, %157 ]
  %.5239 = phi ptr [ %173, %157 ], [ %.2236, %.preheader7.preheader ]
  %.3216 = phi ptr [ %174, %157 ], [ %.0213.ph.ph126, %.preheader7.preheader ]
  %154 = getelementptr inbounds i8, ptr %.3216, i64 %26
  %155 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %154) #18
  %156 = icmp eq i8 %155, 1
  br i1 %156, label %157, label %.preheader4

.preheader4:                                      ; preds = %.preheader7
  %uglygep228 = getelementptr i8, ptr %.2245, i64 %27
  %uglygep230 = getelementptr i8, ptr %.2245, i64 %29
  %uglygep232 = getelementptr i8, ptr %.2245, i64 %30
  %uglygep234 = getelementptr i8, ptr %.2245, i64 %31
  %uglygep236 = getelementptr i8, ptr %.2245, i64 %32
  %uglygep238 = getelementptr i8, ptr %.2245, i64 %33
  %uglygep240 = getelementptr i8, ptr %.2245, i64 %11
  %uglygep250 = getelementptr i8, ptr %.0228.ph.ph, i64 %27
  %uglygep253 = getelementptr i8, ptr %.0228.ph.ph, i64 %29
  %uglygep255 = getelementptr i8, ptr %.0228.ph.ph, i64 %30
  %uglygep257 = getelementptr i8, ptr %.0228.ph.ph, i64 %31
  %uglygep259 = getelementptr i8, ptr %.0228.ph.ph, i64 %32
  %uglygep261 = getelementptr i8, ptr %.0228.ph.ph, i64 %33
  %uglygep263 = getelementptr i8, ptr %.0228.ph.ph, i64 %11
  br label %177

157:                                              ; preds = %.preheader7
  %158 = ptrtoint ptr %.0228.ph.ph to i64
  tail call void %7(ptr align 1 %.5239, ptr align 1 %.3216) #18
  %159 = getelementptr inbounds i8, ptr %.5239, i64 %6
  %160 = getelementptr inbounds i8, ptr %.3216, i64 %6
  tail call void %7(ptr align 1 %159, ptr align 1 %160) #18
  %161 = getelementptr inbounds i8, ptr %159, i64 %6
  %162 = getelementptr inbounds i8, ptr %160, i64 %6
  tail call void %7(ptr align 1 %161, ptr align 1 %162) #18
  %163 = getelementptr inbounds i8, ptr %161, i64 %6
  %164 = getelementptr inbounds i8, ptr %162, i64 %6
  tail call void %7(ptr align 1 %163, ptr align 1 %164) #18
  %165 = getelementptr inbounds i8, ptr %163, i64 %6
  %166 = getelementptr inbounds i8, ptr %164, i64 %6
  tail call void %7(ptr align 1 %165, ptr align 1 %166) #18
  %167 = getelementptr inbounds i8, ptr %165, i64 %6
  %168 = getelementptr inbounds i8, ptr %166, i64 %6
  tail call void %7(ptr align 1 %167, ptr align 1 %168) #18
  %169 = getelementptr inbounds i8, ptr %167, i64 %6
  %170 = getelementptr inbounds i8, ptr %168, i64 %6
  tail call void %7(ptr align 1 %169, ptr align 1 %170) #18
  %171 = getelementptr inbounds i8, ptr %169, i64 %6
  %172 = getelementptr inbounds i8, ptr %170, i64 %6
  tail call void %7(ptr align 1 %171, ptr align 1 %172) #18
  %173 = getelementptr inbounds i8, ptr %171, i64 %6
  %174 = getelementptr inbounds i8, ptr %172, i64 %6
  %175 = ptrtoint ptr %174 to i64
  %176 = sub nuw i64 %158, %175
  %.not258 = icmp ugt i64 %176, %25
  %lsr.iv.next247 = sub i64 %lsr.iv246, %25
  br i1 %.not258, label %.preheader7, label %.loopexit.outer.outer122

177:                                              ; preds = %179, %.preheader4
  %lsr.iv248 = phi i64 [ %lsr.iv246, %.preheader4 ], [ %lsr.iv.next249, %179 ]
  %lsr.iv223 = phi i64 [ 0, %.preheader4 ], [ %lsr.iv.next224, %179 ]
  %uglygep227 = getelementptr i8, ptr %.2245, i64 %lsr.iv223
  %uglygep244 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv223
  %uglygep252 = getelementptr i8, ptr %uglygep250, i64 %lsr.iv223
  %178 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %uglygep252) #18
  %.not256 = icmp eq i8 %178, 1
  br i1 %.not256, label %.loopexit5.loopexit, label %179

179:                                              ; preds = %177
  tail call void %7(ptr align 1 %uglygep227, ptr align 1 %uglygep244) #18
  %uglygep241 = getelementptr i8, ptr %uglygep240, i64 %lsr.iv223
  %uglygep264 = getelementptr i8, ptr %uglygep263, i64 %lsr.iv223
  tail call void %7(ptr align 1 %uglygep241, ptr align 1 %uglygep264) #18
  %uglygep239 = getelementptr i8, ptr %uglygep238, i64 %lsr.iv223
  %uglygep262 = getelementptr i8, ptr %uglygep261, i64 %lsr.iv223
  tail call void %7(ptr align 1 %uglygep239, ptr align 1 %uglygep262) #18
  %uglygep237 = getelementptr i8, ptr %uglygep236, i64 %lsr.iv223
  %uglygep260 = getelementptr i8, ptr %uglygep259, i64 %lsr.iv223
  tail call void %7(ptr align 1 %uglygep237, ptr align 1 %uglygep260) #18
  %uglygep235 = getelementptr i8, ptr %uglygep234, i64 %lsr.iv223
  %uglygep258 = getelementptr i8, ptr %uglygep257, i64 %lsr.iv223
  tail call void %7(ptr align 1 %uglygep235, ptr align 1 %uglygep258) #18
  %uglygep233 = getelementptr i8, ptr %uglygep232, i64 %lsr.iv223
  %uglygep256 = getelementptr i8, ptr %uglygep255, i64 %lsr.iv223
  tail call void %7(ptr align 1 %uglygep233, ptr align 1 %uglygep256) #18
  %uglygep231 = getelementptr i8, ptr %uglygep230, i64 %lsr.iv223
  %uglygep254 = getelementptr i8, ptr %uglygep253, i64 %lsr.iv223
  tail call void %7(ptr align 1 %uglygep231, ptr align 1 %uglygep254) #18
  %uglygep229 = getelementptr i8, ptr %uglygep228, i64 %lsr.iv223
  %uglygep251 = getelementptr i8, ptr %uglygep250, i64 %lsr.iv223
  tail call void %7(ptr align 1 %uglygep229, ptr align 1 %uglygep251) #18
  %lsr.iv.next224 = sub i64 %lsr.iv223, %25
  %lsr.iv.next249 = sub i64 %lsr.iv248, %25
  %.not257 = icmp ugt i64 %lsr.iv.next249, %25
  br i1 %.not257, label %177, label %.loopexit.outer.outer.backedge.loopexit

.preheader1:                                      ; preds = %.cont, %.preheader2
  %.7241.lcssa = phi ptr [ %.4238, %.preheader2 ], [ %182, %.cont ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader2 ], [ %..6219, %.cont ]
  %.6.lcssa = phi ptr [ %.2, %.preheader2 ], [ %.6., %.cont ]
  %.not25345 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not25345, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader1
  br label %.lr.ph

.cont:                                            ; preds = %.cont, %.cont.preheader
  %.642 = phi ptr [ %.6., %.cont ], [ %.2, %.cont.preheader ]
  %.621941 = phi ptr [ %..6219, %.cont ], [ %.2215, %.cont.preheader ]
  %.724140 = phi ptr [ %182, %.cont ], [ %.4238, %.cont.preheader ]
  %180 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.642, ptr align 1 %.621941) #18
  %.not255 = icmp eq i8 %180, 1
  %.sroa.speculated = select i1 %.not255, ptr %.621941, ptr %.642
  tail call void %7(ptr align 1 %.724140, ptr align 1 %.sroa.speculated) #18
  %181 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  %..6219 = select i1 %.not255, ptr %181, ptr %.621941
  %.6. = select i1 %.not255, ptr %.642, ptr %181
  %182 = getelementptr inbounds i8, ptr %.724140, i64 %6
  %183 = icmp ule ptr %.6., %.2224
  %184 = icmp ule ptr %..6219, %.2230
  %185 = select i1 %183, i1 %184, i1 false
  br i1 %185, label %.cont, label %.preheader1

.preheader:                                       ; preds = %.lr.ph, %.preheader1
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader1 ], [ %186, %.lr.ph ]
  %.not25449 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not25449, label %common.ret, label %.lr.ph52.preheader

.lr.ph52.preheader:                               ; preds = %.preheader
  br label %.lr.ph52

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.847 = phi ptr [ %187, %.lr.ph ], [ %.6.lcssa, %.lr.ph.preheader ]
  %.824246 = phi ptr [ %186, %.lr.ph ], [ %.7241.lcssa, %.lr.ph.preheader ]
  tail call void %7(ptr align 1 %.824246, ptr align 1 %.847) #18
  %186 = getelementptr inbounds i8, ptr %.824246, i64 %6
  %187 = getelementptr inbounds i8, ptr %.847, i64 %6
  %.not253 = icmp ugt ptr %187, %.2224
  br i1 %.not253, label %.preheader, label %.lr.ph

.lr.ph52:                                         ; preds = %.lr.ph52, %.lr.ph52.preheader
  %.822151 = phi ptr [ %189, %.lr.ph52 ], [ %.6219.lcssa, %.lr.ph52.preheader ]
  %.950 = phi ptr [ %188, %.lr.ph52 ], [ %.8242.lcssa, %.lr.ph52.preheader ]
  tail call void %7(ptr align 1 %.950, ptr align 1 %.822151) #18
  %188 = getelementptr inbounds i8, ptr %.950, i64 %6
  %189 = getelementptr inbounds i8, ptr %.822151, i64 %6
  %.not254 = icmp ugt ptr %189, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph52
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = alloca [864 x i8], align 8
  %10 = alloca i64, align 8
  %11 = ptrtoint ptr %9 to i64
  %12 = lshr i64 %11, 4
  br label %13

13:                                               ; preds = %sort.quadsort_swap__anon_14514.exit63, %8
  %.053 = phi i64 [ 0, %8 ], [ %293, %sort.quadsort_swap__anon_14514.exit63 ]
  %.052 = phi i64 [ %4, %8 ], [ %293, %sort.quadsort_swap__anon_14514.exit63 ]
  %.051 = phi ptr [ %2, %8 ], [ %0, %sort.quadsort_swap__anon_14514.exit63 ]
  %.0 = phi ptr [ %3, %8 ], [ %14, %sort.quadsort_swap__anon_14514.exit63 ]
  %14 = getelementptr inbounds i8, ptr %.0, i64 -8
  %15 = icmp ult i64 %.052, 2049
  br i1 %15, label %17, label %118

16:                                               ; preds = %sort.median_of_cube_root__anon_16257.exit, %17
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %225

17:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 864, ptr nonnull %9)
  %.lhs.trunc = trunc i64 %.052 to i16
  %18 = udiv i16 %.lhs.trunc, 9
  %19 = zext i16 %18 to i64
  %20 = shl nuw nsw i64 %19, 3
  %21 = load i64, ptr %.051, align 8
  store i64 %21, ptr %9, align 8
  %22 = getelementptr inbounds i8, ptr %.051, i64 %20
  %23 = load i64, ptr %22, align 8
  %sunkaddr = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %23, ptr %sunkaddr, align 8
  %24 = getelementptr inbounds i8, ptr %22, i64 %20
  %25 = load i64, ptr %24, align 8
  %sunkaddr97 = getelementptr inbounds i8, ptr %9, i64 16
  store i64 %25, ptr %sunkaddr97, align 8
  %26 = getelementptr inbounds i8, ptr %24, i64 %20
  %27 = load i64, ptr %26, align 8
  %sunkaddr98 = getelementptr inbounds i8, ptr %9, i64 24
  store i64 %27, ptr %sunkaddr98, align 8
  %28 = getelementptr inbounds i8, ptr %26, i64 %20
  %29 = load i64, ptr %28, align 8
  %sunkaddr99 = getelementptr inbounds i8, ptr %9, i64 32
  store i64 %29, ptr %sunkaddr99, align 8
  %30 = getelementptr inbounds i8, ptr %28, i64 %20
  %31 = load i64, ptr %30, align 8
  %sunkaddr100 = getelementptr inbounds i8, ptr %9, i64 40
  store i64 %31, ptr %sunkaddr100, align 8
  %32 = getelementptr inbounds i8, ptr %30, i64 %20
  %33 = load i64, ptr %32, align 8
  %sunkaddr101 = getelementptr inbounds i8, ptr %9, i64 48
  store i64 %33, ptr %sunkaddr101, align 8
  %34 = getelementptr inbounds i8, ptr %32, i64 %20
  %35 = load i64, ptr %34, align 8
  %sunkaddr102 = getelementptr inbounds i8, ptr %9, i64 56
  store i64 %35, ptr %sunkaddr102, align 8
  %36 = getelementptr inbounds i8, ptr %34, i64 %20
  %37 = load i64, ptr %36, align 8
  call void %7(ptr align 1 %6, i64 4) #18
  %38 = inttoptr i64 %21 to ptr
  %39 = inttoptr i64 %23 to ptr
  %40 = call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #18
  %.not.i.i = icmp eq i8 %40, 1
  %..i.i = select i1 %.not.i.i, i64 8, i64 0
  %.1.i.i = select i1 %.not.i.i, i64 0, i64 8
  %41 = getelementptr inbounds i8, ptr %9, i64 %.1.i.i
  %42 = load i64, ptr %41, align 8
  %43 = getelementptr inbounds i8, ptr %9, i64 %..i.i
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %9, align 8
  store i64 %42, ptr %sunkaddr, align 8
  %45 = inttoptr i64 %25 to ptr
  %46 = inttoptr i64 %27 to ptr
  %47 = call i8 %5(ptr align 1 %6, ptr align 1 %45, ptr align 1 %46) #18
  %.not26.i.i = icmp eq i8 %47, 1
  %.2.i.i = select i1 %.not26.i.i, i64 8, i64 0
  %.3.i.i = select i1 %.not26.i.i, i64 0, i64 8
  %sunkaddr103 = getelementptr inbounds i8, ptr %9, i64 %.3.i.i
  %sunkaddr104 = getelementptr inbounds i8, ptr %sunkaddr103, i64 16
  %48 = load i64, ptr %sunkaddr104, align 8
  %sunkaddr105 = getelementptr inbounds i8, ptr %9, i64 %.2.i.i
  %sunkaddr106 = getelementptr inbounds i8, ptr %sunkaddr105, i64 16
  %49 = load i64, ptr %sunkaddr106, align 8
  store i64 %49, ptr %sunkaddr97, align 8
  store i64 %48, ptr %sunkaddr98, align 8
  %50 = inttoptr i64 %44 to ptr
  %.cast.i.i = inttoptr i64 %49 to ptr
  %51 = call i8 %5(ptr align 1 %6, ptr align 1 %50, ptr align 1 %.cast.i.i) #18
  %.not27.i.i = icmp eq i8 %51, 1
  %52 = select i1 %.not27.i.i, i64 0, i64 16
  %53 = getelementptr inbounds i8, ptr %9, i64 %52
  %54 = load i64, ptr %53, align 8
  store i64 %54, ptr %sunkaddr97, align 8
  %55 = inttoptr i64 %42 to ptr
  %56 = inttoptr i64 %48 to ptr
  %57 = call i8 %5(ptr align 1 %6, ptr align 1 %55, ptr align 1 %56) #18
  %58 = icmp eq i8 %57, 1
  %59 = select i1 %58, i64 16, i64 0
  %sunkaddr107 = getelementptr inbounds i8, ptr %9, i64 %59
  %sunkaddr108 = getelementptr inbounds i8, ptr %sunkaddr107, i64 8
  %60 = load i64, ptr %sunkaddr108, align 8
  store i64 %60, ptr %sunkaddr, align 8
  call void %7(ptr align 1 %6, i64 4) #18
  %61 = inttoptr i64 %29 to ptr
  %62 = inttoptr i64 %31 to ptr
  %63 = call i8 %5(ptr align 1 %6, ptr align 1 %61, ptr align 1 %62) #18
  %.not.i3.i = icmp eq i8 %63, 1
  %..i4.i = select i1 %.not.i3.i, i64 8, i64 0
  %.1.i5.i = select i1 %.not.i3.i, i64 0, i64 8
  %sunkaddr109 = getelementptr inbounds i8, ptr %9, i64 %.1.i5.i
  %sunkaddr110 = getelementptr inbounds i8, ptr %sunkaddr109, i64 32
  %64 = load i64, ptr %sunkaddr110, align 8
  %sunkaddr111 = getelementptr inbounds i8, ptr %9, i64 %..i4.i
  %sunkaddr112 = getelementptr inbounds i8, ptr %sunkaddr111, i64 32
  %65 = load i64, ptr %sunkaddr112, align 8
  store i64 %65, ptr %sunkaddr99, align 8
  store i64 %64, ptr %sunkaddr100, align 8
  %66 = inttoptr i64 %33 to ptr
  %67 = inttoptr i64 %35 to ptr
  %68 = call i8 %5(ptr align 1 %6, ptr align 1 %66, ptr align 1 %67) #18
  %.not26.i6.i = icmp eq i8 %68, 1
  %.2.i7.i = select i1 %.not26.i6.i, i64 8, i64 0
  %.3.i8.i = select i1 %.not26.i6.i, i64 0, i64 8
  %sunkaddr113 = getelementptr inbounds i8, ptr %9, i64 %.3.i8.i
  %sunkaddr114 = getelementptr inbounds i8, ptr %sunkaddr113, i64 48
  %69 = load i64, ptr %sunkaddr114, align 8
  %sunkaddr115 = getelementptr inbounds i8, ptr %9, i64 %.2.i7.i
  %sunkaddr116 = getelementptr inbounds i8, ptr %sunkaddr115, i64 48
  %70 = load i64, ptr %sunkaddr116, align 8
  store i64 %70, ptr %sunkaddr101, align 8
  store i64 %69, ptr %sunkaddr102, align 8
  %71 = inttoptr i64 %65 to ptr
  %.cast.i9.i = inttoptr i64 %70 to ptr
  %72 = call i8 %5(ptr align 1 %6, ptr align 1 %71, ptr align 1 %.cast.i9.i) #18
  %.not27.i10.i = icmp eq i8 %72, 1
  %73 = select i1 %.not27.i10.i, i64 0, i64 16
  %sunkaddr117 = getelementptr inbounds i8, ptr %9, i64 %73
  %sunkaddr118 = getelementptr inbounds i8, ptr %sunkaddr117, i64 32
  %74 = load i64, ptr %sunkaddr118, align 8
  store i64 %74, ptr %sunkaddr101, align 8
  %75 = inttoptr i64 %64 to ptr
  %76 = inttoptr i64 %69 to ptr
  %77 = call i8 %5(ptr align 1 %6, ptr align 1 %75, ptr align 1 %76) #18
  %78 = icmp eq i8 %77, 1
  %79 = select i1 %78, i64 16, i64 0
  %sunkaddr119 = getelementptr inbounds i8, ptr %9, i64 %79
  %sunkaddr120 = getelementptr inbounds i8, ptr %sunkaddr119, i64 40
  %80 = load i64, ptr %sunkaddr120, align 8
  store i64 %80, ptr %9, align 8
  store i64 %37, ptr %sunkaddr98, align 8
  call void %7(ptr align 1 %6, i64 4) #18
  %.cast.i = inttoptr i64 %80 to ptr
  %81 = inttoptr i64 %60 to ptr
  %82 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast.i, ptr align 1 %81) #18
  %.not.i11.i = icmp eq i8 %82, 1
  %..i12.i = select i1 %.not.i11.i, i64 8, i64 0
  %.1.i13.i = select i1 %.not.i11.i, i64 0, i64 8
  %83 = getelementptr inbounds i8, ptr %9, i64 %.1.i13.i
  %84 = load i64, ptr %83, align 8
  %85 = getelementptr inbounds i8, ptr %9, i64 %..i12.i
  %86 = load i64, ptr %85, align 8
  store i64 %86, ptr %9, align 8
  store i64 %84, ptr %sunkaddr, align 8
  %87 = inttoptr i64 %54 to ptr
  %88 = inttoptr i64 %37 to ptr
  %89 = call i8 %5(ptr align 1 %6, ptr align 1 %87, ptr align 1 %88) #18
  %.not26.i14.i = icmp eq i8 %89, 1
  %.2.i15.i = select i1 %.not26.i14.i, i64 8, i64 0
  %.3.i16.i = select i1 %.not26.i14.i, i64 0, i64 8
  %sunkaddr121 = getelementptr inbounds i8, ptr %9, i64 %.3.i16.i
  %sunkaddr122 = getelementptr inbounds i8, ptr %sunkaddr121, i64 16
  %90 = load i64, ptr %sunkaddr122, align 8
  %sunkaddr123 = getelementptr inbounds i8, ptr %9, i64 %.2.i15.i
  %sunkaddr124 = getelementptr inbounds i8, ptr %sunkaddr123, i64 16
  %91 = load i64, ptr %sunkaddr124, align 8
  store i64 %91, ptr %sunkaddr97, align 8
  store i64 %90, ptr %sunkaddr98, align 8
  %92 = inttoptr i64 %86 to ptr
  %.cast.i17.i = inttoptr i64 %91 to ptr
  %93 = call i8 %5(ptr align 1 %6, ptr align 1 %92, ptr align 1 %.cast.i17.i) #18
  %.not27.i18.i = icmp eq i8 %93, 1
  %94 = select i1 %.not27.i18.i, i64 0, i64 16
  %95 = getelementptr inbounds i8, ptr %9, i64 %94
  %96 = load i64, ptr %95, align 8
  store i64 %96, ptr %sunkaddr97, align 8
  %97 = inttoptr i64 %84 to ptr
  %98 = inttoptr i64 %90 to ptr
  %99 = call i8 %5(ptr align 1 %6, ptr align 1 %97, ptr align 1 %98) #18
  %100 = icmp eq i8 %99, 1
  %101 = select i1 %100, i64 16, i64 0
  %sunkaddr125 = getelementptr inbounds i8, ptr %9, i64 %101
  %sunkaddr126 = getelementptr inbounds i8, ptr %sunkaddr125, i64 8
  %102 = load i64, ptr %sunkaddr126, align 8
  store i64 %102, ptr %sunkaddr, align 8
  store i64 %74, ptr %9, align 8
  call void %7(ptr align 1 %6, i64 3) #18
  %.cast1.i = inttoptr i64 %74 to ptr
  %.cast2.i = inttoptr i64 %102 to ptr
  %103 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %.cast2.i) #18
  %104 = icmp eq i8 %103, 1
  %105 = inttoptr i64 %96 to ptr
  %106 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %105) #18
  %107 = icmp ne i8 %106, 1
  %108 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast2.i, ptr align 1 %105) #18
  %109 = icmp eq i8 %108, 1
  %110 = xor i1 %104, %107
  %111 = xor i1 %104, %109
  %112 = zext i1 %111 to i64
  %113 = zext i1 %110 to i64
  %114 = add nuw nsw i64 %112, %113
  %115 = shl nuw nsw i64 %114, 3
  %116 = getelementptr inbounds i8, ptr %9, i64 %115
  %117 = load i64, ptr %116, align 8
  store i64 %117, ptr %14, align 8
  call void @llvm.lifetime.end.p0(i64 864, ptr nonnull %9)
  br label %16

118:                                              ; preds = %13
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  br label %119

119:                                              ; preds = %119, %118
  %.0.i = phi i64 [ 32, %118 ], [ %123, %119 ]
  %120 = mul nuw i64 %.0.i, %.0.i
  %121 = mul nuw i64 %120, %.0.i
  %122 = icmp ult i64 %121, %.052
  %123 = shl nuw i64 %.0.i, 1
  br i1 %122, label %119, label %124

124:                                              ; preds = %119
  %125 = or i64 %.052, %.0.i
  %126 = and i64 %125, -4294967296
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %133

128:                                              ; preds = %124
  %129 = trunc i64 %.0.i to i32
  %130 = trunc i64 %.052 to i32
  %131 = udiv i32 %130, %129
  %132 = zext i32 %131 to i64
  br label %135

133:                                              ; preds = %124
  %134 = udiv i64 %.052, %.0.i
  br label %135

135:                                              ; preds = %133, %128
  %136 = phi i64 [ %132, %128 ], [ %134, %133 ]
  store i64 %136, ptr %9, align 8
  %137 = or i64 %12, %136
  %138 = and i64 %137, -4294967296
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %145

140:                                              ; preds = %135
  %141 = trunc i64 %136 to i32
  %142 = trunc i64 %12 to i32
  %143 = urem i32 %142, %141
  %144 = zext i32 %143 to i64
  br label %147

145:                                              ; preds = %135
  %146 = urem i64 %12, %136
  br label %147

147:                                              ; preds = %145, %140
  %148 = phi i64 [ %144, %140 ], [ %146, %145 ]
  %149 = shl nuw nsw i64 %148, 3
  %150 = getelementptr inbounds i8, ptr %.051, i64 %149
  %151 = icmp eq ptr %.051, %0
  %..i = select i1 %151, ptr %1, ptr %0
  %152 = shl nuw i64 %136, 3
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  %153 = add i64 %umax.i, -1
  %xtraiter = and i64 %umax.i, 1
  %154 = icmp ult i64 %153, 3
  br i1 %154, label %.unr-lcssa, label %.new

.new:                                             ; preds = %147
  %unroll_iter = and i64 %umax.i, -32
  br label %155

155:                                              ; preds = %155, %.new
  %.0312.i = phi ptr [ %150, %.new ], [ %163, %155 ]
  %.0321.i = phi i64 [ 0, %.new ], [ %164, %155 ]
  %156 = load i64, ptr %.0312.i, align 8
  %sunkaddr127 = mul i64 %.0321.i, 8
  %sunkaddr128 = getelementptr i8, ptr %..i, i64 %sunkaddr127
  store i64 %156, ptr %sunkaddr128, align 8
  %157 = getelementptr inbounds i8, ptr %.0312.i, i64 %152
  %158 = load i64, ptr %157, align 8
  %sunkaddr129 = mul i64 %.0321.i, 8
  %sunkaddr130 = getelementptr i8, ptr %..i, i64 %sunkaddr129
  %sunkaddr131 = getelementptr i8, ptr %sunkaddr130, i64 8
  store i64 %158, ptr %sunkaddr131, align 8
  %159 = getelementptr inbounds i8, ptr %157, i64 %152
  %160 = load i64, ptr %159, align 8
  %sunkaddr132 = mul i64 %.0321.i, 8
  %sunkaddr133 = getelementptr i8, ptr %..i, i64 %sunkaddr132
  %sunkaddr134 = getelementptr i8, ptr %sunkaddr133, i64 16
  store i64 %160, ptr %sunkaddr134, align 8
  %161 = getelementptr inbounds i8, ptr %159, i64 %152
  %162 = load i64, ptr %161, align 8
  %sunkaddr135 = mul i64 %.0321.i, 8
  %sunkaddr136 = getelementptr i8, ptr %..i, i64 %sunkaddr135
  %sunkaddr137 = getelementptr i8, ptr %sunkaddr136, i64 24
  store i64 %162, ptr %sunkaddr137, align 8
  %163 = getelementptr inbounds i8, ptr %161, i64 %152
  %164 = add i64 %.0321.i, 4
  %niter.ncmp.3 = icmp eq i64 %unroll_iter, %164
  br i1 %niter.ncmp.3, label %.unr-lcssa, label %155

.unr-lcssa:                                       ; preds = %155, %147
  %.0312.i.unr = phi ptr [ %150, %147 ], [ %163, %155 ]
  %.0321.i.unr = phi i64 [ 0, %147 ], [ %164, %155 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.epilog-lcssa, label %.epil.preheader.preheader

.epil.preheader.preheader:                        ; preds = %.unr-lcssa
  %165 = shl i64 %.0321.i.unr, 3
  %uglygep93 = getelementptr i8, ptr %..i, i64 %165
  br label %.epil.preheader

.epil.preheader:                                  ; preds = %.epil.preheader, %.epil.preheader.preheader
  %.0312.i.epil = phi ptr [ %168, %.epil.preheader ], [ %.0312.i.unr, %.epil.preheader.preheader ]
  %epil.iter = phi i64 [ %epil.iter.next, %.epil.preheader ], [ 0, %.epil.preheader.preheader ]
  %166 = shl nuw nsw i64 %epil.iter, 3
  %uglygep94 = getelementptr i8, ptr %uglygep93, i64 %166
  %167 = load i64, ptr %.0312.i.epil, align 8
  store i64 %167, ptr %uglygep94, align 8
  %168 = getelementptr inbounds i8, ptr %.0312.i.epil, i64 %152
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %xtraiter, %epil.iter.next
  br i1 %epil.iter.cmp.not, label %.epilog-lcssa, label %.epil.preheader, !llvm.loop !537

.epilog-lcssa:                                    ; preds = %.epil.preheader, %.unr-lcssa
  %169 = lshr exact i64 %.0.i, 1
  %170 = shl i64 %.0.i, 3
  %171 = getelementptr inbounds i8, ptr %..i, i64 %170
  %172 = icmp ult i64 %.0.i, 192
  br i1 %172, label %177, label %173

173:                                              ; preds = %.epilog-lcssa
  %174 = call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %..i, i64 %169, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %174, label %175, label %180

175:                                              ; preds = %173
  %176 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %..i, i64 %169, ptr nonnull align 1 %171, i64 %169, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %..i, i64 %169, ptr nonnull align 1 %171, i64 %169, i64 %176, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %180

177:                                              ; preds = %.epilog-lcssa
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %..i, i64 %169, ptr nonnull align 1 %171, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  %178 = shl nuw nsw i64 %.0.i, 2
  %179 = getelementptr inbounds i8, ptr %..i, i64 %178
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %179, i64 %169, ptr nonnull align 1 %171, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quadsort_swap__anon_14514.exit34.i

180:                                              ; preds = %175, %173
  %181 = shl i64 %.0.i, 2
  %182 = getelementptr inbounds i8, ptr %..i, i64 %181
  %183 = call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %182, i64 %169, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %183, label %184, label %sort.quadsort_swap__anon_14514.exit34.i

184:                                              ; preds = %180
  %185 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %182, i64 %169, ptr nonnull align 1 %171, i64 %169, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %182, i64 %169, ptr nonnull align 1 %171, i64 %169, i64 %185, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quadsort_swap__anon_14514.exit34.i

sort.quadsort_swap__anon_14514.exit34.i:          ; preds = %184, %180, %177
  %186 = phi ptr [ %179, %177 ], [ %182, %180 ], [ %182, %184 ]
  %187 = phi i64 [ %178, %177 ], [ %181, %180 ], [ %181, %184 ]
  %188 = add i64 %170, -8
  %189 = getelementptr inbounds i8, ptr %..i, i64 %188
  call void %7(ptr align 1 %6, i64 1) #18
  %190 = load ptr, ptr %189, align 8
  %191 = load ptr, ptr %..i, align 8
  %192 = call i8 %5(ptr align 1 %6, ptr align 1 %190, ptr align 1 %191) #18
  %.not.i = icmp eq i8 %192, 1
  br i1 %.not.i, label %193, label %201

193:                                              ; preds = %201, %sort.quadsort_swap__anon_14514.exit34.i
  %194 = phi i1 [ %207, %201 ], [ false, %sort.quadsort_swap__anon_14514.exit34.i ]
  %195 = call i64 @llvm.ctlz.i64(i64 %169, i1 true), !range !391
  %196 = sub nuw nsw i64 64, %195
  call void %7(ptr align 1 %6, i64 %196) #18
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %193
  %.0.in4.i.i = phi i64 [ %.0.i.i, %.lr.ph.i.i ], [ %169, %193 ]
  %.0143.i.i = phi ptr [ %.1.i.i59, %.lr.ph.i.i ], [ %..i, %193 ]
  %.0152.i.i = phi ptr [ %.116.i.i, %.lr.ph.i.i ], [ %186, %193 ]
  %.0.i.i = lshr i64 %.0.in4.i.i, 1
  %197 = load ptr, ptr %.0143.i.i, align 8
  %198 = load ptr, ptr %.0152.i.i, align 8
  %199 = call i8 %5(ptr align 1 %6, ptr align 1 %197, ptr align 1 %198) #18
  %.not17.i.i = icmp eq i8 %199, 1
  %200 = shl nuw i64 %.0.i.i, 3
  %.116.idx.i.i = select i1 %.not17.i.i, i64 %200, i64 0
  %.116.i.i = getelementptr i8, ptr %.0152.i.i, i64 %.116.idx.i.i
  %.1.idx.i.i = select i1 %.not17.i.i, i64 0, i64 %200
  %.1.i.i59 = getelementptr i8, ptr %.0143.i.i, i64 %.1.idx.i.i
  %.not.i.i60 = icmp ult i64 %.0.in4.i.i, 4
  br i1 %.not.i.i60, label %sort.median_of_cube_root__anon_16257.exit, label %.lr.ph.i.i

201:                                              ; preds = %sort.quadsort_swap__anon_14514.exit34.i
  %202 = add i64 %187, -8
  %203 = getelementptr inbounds i8, ptr %..i, i64 %202
  call void %7(ptr align 1 %6, i64 1) #18
  %204 = load ptr, ptr %203, align 8
  %205 = load ptr, ptr %..i, align 8
  %206 = call i8 %5(ptr align 1 %6, ptr align 1 %204, ptr align 1 %205) #18
  %207 = icmp ne i8 %206, 1
  br label %193

sort.median_of_cube_root__anon_16257.exit:        ; preds = %.lr.ph.i.i
  %208 = load ptr, ptr %.1.i.i59, align 8
  %209 = load ptr, ptr %.116.i.i, align 8
  %210 = call i8 %5(ptr align 1 %6, ptr align 1 %208, ptr align 1 %209) #18
  %211 = icmp eq i8 %210, 1
  %212 = select i1 %211, ptr %.1.i.i59, ptr %.116.i.i
  %213 = load i64, ptr %212, align 8
  store i64 %213, ptr %14, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  br i1 %194, label %214, label %16

214:                                              ; preds = %sort.median_of_cube_root__anon_16257.exit
  %215 = icmp eq ptr %.051, %1
  br i1 %215, label %223, label %216

common.ret:                                       ; preds = %349, %347, %345, %344, %329, %322, %312, %310, %309, %229, %221, %219, %218
  ret void

216:                                              ; preds = %223, %214
  %217 = icmp ult i64 %.052, 96
  br i1 %217, label %218, label %219

218:                                              ; preds = %216
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

219:                                              ; preds = %216
  %220 = call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %220, label %221, label %common.ret

221:                                              ; preds = %219
  %222 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %222, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

223:                                              ; preds = %214
  %224 = shl nuw i64 %.052, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %224, i1 false)
  br label %216

225:                                              ; preds = %16
  call void %7(ptr align 1 %6, i64 1) #18
  %226 = load ptr, ptr %.0, align 8
  %sunkaddr138 = getelementptr inbounds i8, ptr %.0, i64 -8
  %227 = load ptr, ptr %sunkaddr138, align 8
  %228 = call i8 %5(ptr align 1 %6, ptr align 1 %226, ptr align 1 %227) #18
  %.not58 = icmp eq i8 %228, 1
  br i1 %.not58, label %.critedge, label %229

229:                                              ; preds = %225
  call fastcc void @sort.flux_reverse_partition__anon_16258(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %14, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

.critedge:                                        ; preds = %225, %16
  call void %7(ptr align 1 %6, i64 %.052) #18
  %.not1.i = icmp ult i64 %.052, 8
  br i1 %.not1.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.06.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.01315.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.01434.i = phi ptr [ %uglygep95, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.01453.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.01472.i = phi i64 [ %281, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %230 = load ptr, ptr %.01434.i, align 8
  %231 = load ptr, ptr %14, align 8
  %232 = call i8 %5(ptr align 1 %6, ptr align 1 %230, ptr align 1 %231) #18
  %.not151.i = icmp eq i8 %232, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.01315.i, ptr %.06.i
  %233 = load i64, ptr %.01434.i, align 8
  store i64 %233, ptr %.sroa.speculated78.i, align 8
  %234 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 8
  %..0131.i = select i1 %.not151.i, ptr %234, ptr %.01315.i
  %.0..i = select i1 %.not151.i, ptr %.06.i, ptr %234
  %235 = getelementptr inbounds i8, ptr %.01434.i, i64 8
  %236 = load ptr, ptr %235, align 8
  %237 = load ptr, ptr %14, align 8
  %238 = call i8 %5(ptr align 1 %6, ptr align 1 %236, ptr align 1 %237) #18
  %.not152.i = icmp eq i8 %238, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  %239 = load i64, ptr %235, align 8
  store i64 %239, ptr %.sroa.speculated69.i, align 8
  %240 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 8
  %.2133.i = select i1 %.not152.i, ptr %240, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %240
  %241 = getelementptr inbounds i8, ptr %.01434.i, i64 16
  %242 = load ptr, ptr %241, align 8
  %243 = load ptr, ptr %14, align 8
  %244 = call i8 %5(ptr align 1 %6, ptr align 1 %242, ptr align 1 %243) #18
  %.not153.i = icmp eq i8 %244, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  %245 = load i64, ptr %241, align 8
  store i64 %245, ptr %.sroa.speculated60.i, align 8
  %246 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 8
  %.3134.i = select i1 %.not153.i, ptr %246, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %246
  %247 = getelementptr inbounds i8, ptr %.01434.i, i64 24
  %248 = load ptr, ptr %247, align 8
  %249 = load ptr, ptr %14, align 8
  %250 = call i8 %5(ptr align 1 %6, ptr align 1 %248, ptr align 1 %249) #18
  %.not154.i = icmp eq i8 %250, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  %251 = load i64, ptr %247, align 8
  store i64 %251, ptr %.sroa.speculated51.i, align 8
  %252 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 8
  %.4135.i = select i1 %.not154.i, ptr %252, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %252
  %253 = getelementptr inbounds i8, ptr %.01434.i, i64 32
  %254 = load ptr, ptr %253, align 8
  %255 = load ptr, ptr %14, align 8
  %256 = call i8 %5(ptr align 1 %6, ptr align 1 %254, ptr align 1 %255) #18
  %.not155.i = icmp eq i8 %256, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  %257 = load i64, ptr %253, align 8
  store i64 %257, ptr %.sroa.speculated42.i, align 8
  %258 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 8
  %.5136.i = select i1 %.not155.i, ptr %258, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %258
  %259 = getelementptr inbounds i8, ptr %.01434.i, i64 40
  %260 = load ptr, ptr %259, align 8
  %261 = load ptr, ptr %14, align 8
  %262 = call i8 %5(ptr align 1 %6, ptr align 1 %260, ptr align 1 %261) #18
  %.not156.i = icmp eq i8 %262, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  %263 = load i64, ptr %259, align 8
  store i64 %263, ptr %.sroa.speculated33.i, align 8
  %264 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 8
  %.6137.i = select i1 %.not156.i, ptr %264, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %264
  %265 = getelementptr inbounds i8, ptr %.01434.i, i64 48
  %266 = load ptr, ptr %265, align 8
  %267 = load ptr, ptr %14, align 8
  %268 = call i8 %5(ptr align 1 %6, ptr align 1 %266, ptr align 1 %267) #18
  %.not157.i = icmp eq i8 %268, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  %269 = load i64, ptr %265, align 8
  store i64 %269, ptr %.sroa.speculated24.i, align 8
  %270 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 8
  %.7138.i = select i1 %.not157.i, ptr %270, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %270
  %271 = getelementptr inbounds i8, ptr %.01434.i, i64 56
  %272 = load ptr, ptr %271, align 8
  %273 = load ptr, ptr %14, align 8
  %274 = call i8 %5(ptr align 1 %6, ptr align 1 %272, ptr align 1 %273) #18
  %.not158.i = icmp eq i8 %274, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  %275 = load i64, ptr %271, align 8
  store i64 %275, ptr %.sroa.speculated15.i, align 8
  %276 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 8
  %.8139.i = select i1 %.not158.i, ptr %276, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %276
  %277 = getelementptr inbounds i8, ptr %.01434.i, i64 64
  %278 = icmp eq ptr %.8.i, %0
  %279 = icmp eq ptr %.8139.i, %1
  %280 = select i1 %278, i1 true, i1 %279
  %.1146.i = select i1 %280, i64 %.01472.i, i64 %.01453.i
  %281 = add i64 %.01472.i, 8
  %.not.i61 = icmp ugt i64 %281, %.052
  %uglygep95 = getelementptr i8, ptr %.01434.i, i64 64
  br i1 %.not.i61, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %277, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %282 = and i64 %.052, 7
  %.not16.i = icmp eq i64 %282, 0
  br i1 %.not16.i, label %._crit_edge14.i, label %.cont.i.preheader

.cont.i.preheader:                                ; preds = %._crit_edge.i
  br label %.cont.i

.cont.i:                                          ; preds = %.cont.i, %.cont.i.preheader
  %.913.i = phi ptr [ %.9..i, %.cont.i ], [ %.0.lcssa.i, %.cont.i.preheader ]
  %.914012.i = phi ptr [ %..9140.i, %.cont.i ], [ %.0131.lcssa.i, %.cont.i.preheader ]
  %.014211.i = phi i64 [ %289, %.cont.i ], [ 0, %.cont.i.preheader ]
  %283 = shl nuw nsw i64 %.014211.i, 3
  %uglygep96 = getelementptr i8, ptr %.0143.lcssa.i, i64 %283
  %284 = load ptr, ptr %uglygep96, align 8
  %285 = load ptr, ptr %14, align 8
  %286 = call i8 %5(ptr align 1 %6, ptr align 1 %284, ptr align 1 %285) #18
  %.not150.i = icmp eq i8 %286, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.914012.i, ptr %.913.i
  %287 = load i64, ptr %uglygep96, align 8
  store i64 %287, ptr %.sroa.speculated.i, align 8
  %288 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %..9140.i = select i1 %.not150.i, ptr %288, ptr %.914012.i
  %.9..i = select i1 %.not150.i, ptr %.913.i, ptr %288
  %289 = add nuw nsw i64 %.014211.i, 1
  %exitcond.not.i62 = icmp eq i64 %282, %289
  br i1 %exitcond.not.i62, label %._crit_edge14.i, label %.cont.i

._crit_edge14.i:                                  ; preds = %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ]
  %290 = ptrtoint ptr %0 to i64
  %291 = ptrtoint ptr %.9.lcssa.i to i64
  %292 = sub nuw i64 %291, %290
  %293 = lshr i64 %292, 3
  %294 = lshr i64 %.052, 2
  %295 = icmp ule i64 %.0145.lcssa.i, %294
  %296 = icmp eq i64 %.052, %293
  %or.cond.i = select i1 %295, i1 true, i1 %296
  %297 = sub nuw i64 %.052, %293
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16259.exit, label %298

298:                                              ; preds = %._crit_edge14.i
  %299 = and i64 %292, -8
  %300 = getelementptr inbounds i8, ptr %0, i64 %299
  %301 = shl nuw i64 %297, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %300, ptr nonnull align 1 %1, i64 %301, i1 false)
  %302 = icmp ult i64 %297, 96
  br i1 %302, label %303, label %304

303:                                              ; preds = %298
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %300, i64 %297, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quadsort_swap__anon_14514.exit.i

304:                                              ; preds = %298
  %305 = call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %300, i64 %297, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %305, label %306, label %sort.quadsort_swap__anon_14514.exit.i

306:                                              ; preds = %304
  %307 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %300, i64 %297, ptr nonnull align 1 %1, i64 %297, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %300, i64 %297, ptr nonnull align 1 %1, i64 %297, i64 %307, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quadsort_swap__anon_14514.exit.i

sort.quadsort_swap__anon_14514.exit.i:            ; preds = %306, %304, %303
  %308 = icmp ult i64 %292, 768
  br i1 %308, label %309, label %310

309:                                              ; preds = %sort.quadsort_swap__anon_14514.exit.i
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %0, i64 %293, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

310:                                              ; preds = %sort.quadsort_swap__anon_14514.exit.i
  %311 = call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %0, i64 %293, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %311, label %312, label %common.ret

312:                                              ; preds = %310
  %313 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %0, i64 %293, ptr nonnull align 1 %1, i64 %293, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %0, i64 %293, ptr nonnull align 1 %1, i64 %293, i64 %313, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

sort.flux_default_partition__anon_16259.exit:     ; preds = %._crit_edge14.i
  %314 = lshr i64 %297, 5
  %315 = icmp ule i64 %293, %314
  %316 = icmp ult i64 %297, 97
  %317 = or i1 %316, %315
  br i1 %317, label %322, label %324

sort.quadsort_swap__anon_14514.exit63:            ; preds = %338, %336, %335, %324
  %318 = lshr i64 %292, 8
  %319 = icmp ule i64 %297, %318
  %320 = icmp ult i64 %292, 776
  %321 = or i1 %320, %319
  br i1 %321, label %340, label %13

322:                                              ; preds = %sort.flux_default_partition__anon_16259.exit
  %323 = icmp ult i64 %292, 8
  br i1 %323, label %common.ret, label %327

324:                                              ; preds = %sort.flux_default_partition__anon_16259.exit
  %325 = and i64 %292, -8
  %326 = getelementptr inbounds i8, ptr %0, i64 %325
  call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %326, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %14, i64 %297, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quadsort_swap__anon_14514.exit63

327:                                              ; preds = %322
  %328 = icmp eq i64 %.052, %293
  br i1 %328, label %329, label %330

329:                                              ; preds = %327
  call fastcc void @sort.flux_reverse_partition__anon_16258(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %14, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

330:                                              ; preds = %327
  %331 = and i64 %292, -8
  %332 = getelementptr inbounds i8, ptr %0, i64 %331
  %333 = shl nuw i64 %297, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %332, ptr nonnull align 1 %1, i64 %333, i1 false)
  %334 = icmp ult i64 %297, 96
  br i1 %334, label %335, label %336

335:                                              ; preds = %330
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %332, i64 %297, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quadsort_swap__anon_14514.exit63

336:                                              ; preds = %330
  %337 = call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %332, i64 %297, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %337, label %338, label %sort.quadsort_swap__anon_14514.exit63

338:                                              ; preds = %336
  %339 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %332, i64 %297, ptr nonnull align 1 %1, i64 %297, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %332, i64 %297, ptr nonnull align 1 %1, i64 %297, i64 %339, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %sort.quadsort_swap__anon_14514.exit63

340:                                              ; preds = %sort.quadsort_swap__anon_14514.exit63
  %341 = icmp ult i64 %292, 776
  br i1 %341, label %342, label %349

342:                                              ; preds = %340
  %343 = icmp ult i64 %292, 768
  br i1 %343, label %344, label %345

344:                                              ; preds = %342
  call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %0, i64 %293, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

345:                                              ; preds = %342
  %346 = call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %0, i64 %293, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %346, label %347, label %common.ret

347:                                              ; preds = %345
  %348 = call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %0, i64 %293, ptr nonnull align 1 %1, i64 %293, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %0, i64 %293, ptr nonnull align 1 %1, i64 %293, i64 %348, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret

349:                                              ; preds = %340
  call fastcc void @sort.flux_reverse_partition__anon_16258(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %14, i64 %293, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, ptr nocapture nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = shl nuw i64 %2, 3
  %9 = getelementptr inbounds i8, ptr %1, i64 %8
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  %11 = shl nuw i64 %3, 3
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = add nuw i64 %2, 1
  %14 = icmp uge i64 %13, %3
  %15 = add nuw i64 %3, 1
  %16 = icmp uge i64 %15, %2
  %17 = select i1 %14, i1 %16, i1 false
  %18 = icmp ugt i64 %2, 31
  %or.cond = select i1 %17, i1 %18, i1 false
  br i1 %or.cond, label %23, label %.critedge

.critedge:                                        ; preds = %40, %34, %29, %23, %7
  %19 = add nuw i64 %3, %2
  %20 = shl i64 %19, 3
  %21 = add i64 %20, -8
  %22 = getelementptr inbounds i8, ptr %0, i64 %21
  br label %.loopexit.outer.outer

23:                                               ; preds = %7
  %24 = getelementptr inbounds i8, ptr %1, i64 120
  tail call void %6(ptr align 1 %5, i64 1) #18
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %9, align 8
  %27 = tail call i8 %4(ptr align 1 %5, ptr align 1 %25, ptr align 1 %26) #18
  %28 = icmp eq i8 %27, 1
  br i1 %28, label %29, label %.critedge

29:                                               ; preds = %23
  %30 = getelementptr inbounds i8, ptr %9, i64 120
  tail call void %6(ptr align 1 %5, i64 1) #18
  %31 = load ptr, ptr %1, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %4(ptr align 1 %5, ptr align 1 %31, ptr align 1 %32) #18
  %.not258 = icmp eq i8 %33, 1
  br i1 %.not258, label %.critedge, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, ptr %12, i64 -120
  tail call void %6(ptr align 1 %5, i64 1) #18
  %36 = load ptr, ptr %10, align 8
  %37 = load ptr, ptr %35, align 8
  %38 = tail call i8 %4(ptr align 1 %5, ptr align 1 %36, ptr align 1 %37) #18
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %.critedge

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, ptr %10, i64 -120
  tail call void %6(ptr align 1 %5, i64 1) #18
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %12, align 8
  %44 = tail call i8 %4(ptr align 1 %5, ptr align 1 %42, ptr align 1 %43) #18
  %.not259 = icmp eq i8 %44, 1
  br i1 %.not259, label %.critedge, label %45

common.ret:                                       ; preds = %.lr.ph47, %.preheader
  ret void

45:                                               ; preds = %40
  tail call fastcc void @sort.parity_merge__anon_16222(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 1 %4, ptr align 1 %5, ptr nonnull readonly align 1 %6)
  ret void

.loopexit.outer.outer:                            ; preds = %.cont46, %162, %.critedge
  %.0243.ph.ph = phi ptr [ %22, %.critedge ], [ %290, %.cont46 ], [ %184, %162 ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %283, %.cont46 ], [ %.5239, %162 ]
  %.0228.ph.ph = phi ptr [ %12, %.critedge ], [ %.5233.7, %.cont46 ], [ %185, %162 ]
  %.0222.ph.ph = phi ptr [ %10, %.critedge ], [ %.5227.7, %.cont46 ], [ %.2224, %162 ]
  %.0213.ph.ph = phi ptr [ %9, %.critedge ], [ %..4217.7, %.cont46 ], [ %.3216, %162 ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46 ], [ %.2, %162 ]
  br label %.loopexit.outer.outer27

.loopexit.outer.outer27:                          ; preds = %129, %.loopexit.outer.outer
  %.0243.ph.ph28 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %129 ]
  %.0234.ph.ph29 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %152, %129 ]
  %.0222.ph.ph30 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %129 ]
  %.0213.ph.ph31 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %153, %129 ]
  %.0.ph.ph32 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %129 ]
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %92, %.loopexit.outer.outer27
  %.0243.ph = phi ptr [ %.0243.ph.ph28, %.loopexit.outer.outer27 ], [ %114, %92 ]
  %.0234.ph = phi ptr [ %.0234.ph.ph29, %.loopexit.outer.outer27 ], [ %.3237, %92 ]
  %.0222.ph = phi ptr [ %.0222.ph.ph30, %.loopexit.outer.outer27 ], [ %115, %92 ]
  %.0.ph = phi ptr [ %.0.ph.ph32, %.loopexit.outer.outer27 ], [ %.3, %92 ]
  br label %.loopexit

.loopexit:                                        ; preds = %58, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %81, %58 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %82, %58 ]
  %46 = ptrtoint ptr %.0222.ph to i64
  %47 = ptrtoint ptr %.0 to i64
  %48 = sub nsw i64 %46, %47
  %49 = icmp sgt i64 %48, 64
  br i1 %49, label %.preheader11.preheader, label %.loopexit9

.preheader11.preheader:                           ; preds = %.loopexit
  br label %.preheader11

.loopexit9:                                       ; preds = %86, %.loopexit
  %.2245 = phi ptr [ %.3246, %86 ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %86 ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %.3225, %86 ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %86 ], [ %.0, %.loopexit ]
  %50 = ptrtoint ptr %.0228.ph.ph to i64
  %51 = ptrtoint ptr %.0213.ph.ph31 to i64
  %52 = sub nsw i64 %50, %51
  %53 = icmp sgt i64 %52, 64
  br i1 %53, label %.preheader6.preheader, label %.loopexit4

.preheader6.preheader:                            ; preds = %.loopexit9
  br label %.preheader6

.preheader11:                                     ; preds = %58, %.preheader11.preheader
  %lsr.iv = phi i64 [ %48, %.preheader11.preheader ], [ %lsr.iv.next, %58 ]
  %.3237 = phi ptr [ %81, %58 ], [ %.0234, %.preheader11.preheader ]
  %.3 = phi ptr [ %82, %58 ], [ %.0, %.preheader11.preheader ]
  %54 = getelementptr inbounds i8, ptr %.3, i64 56
  tail call void %6(ptr align 1 %5, i64 1) #18
  %55 = load ptr, ptr %54, align 8
  %56 = load ptr, ptr %.0213.ph.ph31, align 8
  %57 = tail call i8 %4(ptr align 1 %5, ptr align 1 %55, ptr align 1 %56) #18
  %.not257 = icmp eq i8 %57, 1
  br i1 %.not257, label %.preheader8, label %58

.preheader8:                                      ; preds = %.preheader11
  br label %86

58:                                               ; preds = %.preheader11
  %59 = ptrtoint ptr %.0222.ph to i64
  %60 = load i64, ptr %.3, align 8
  store i64 %60, ptr %.3237, align 8
  %61 = getelementptr inbounds i8, ptr %.3237, i64 8
  %62 = getelementptr inbounds i8, ptr %.3, i64 8
  %63 = load i64, ptr %62, align 8
  store i64 %63, ptr %61, align 8
  %64 = getelementptr inbounds i8, ptr %.3237, i64 16
  %65 = getelementptr inbounds i8, ptr %.3, i64 16
  %66 = load i64, ptr %65, align 8
  store i64 %66, ptr %64, align 8
  %67 = getelementptr inbounds i8, ptr %.3237, i64 24
  %68 = getelementptr inbounds i8, ptr %.3, i64 24
  %69 = load i64, ptr %68, align 8
  store i64 %69, ptr %67, align 8
  %70 = getelementptr inbounds i8, ptr %.3237, i64 32
  %71 = getelementptr inbounds i8, ptr %.3, i64 32
  %72 = load i64, ptr %71, align 8
  store i64 %72, ptr %70, align 8
  %73 = getelementptr inbounds i8, ptr %.3237, i64 40
  %74 = getelementptr inbounds i8, ptr %.3, i64 40
  %75 = load i64, ptr %74, align 8
  store i64 %75, ptr %73, align 8
  %76 = getelementptr inbounds i8, ptr %.3237, i64 48
  %77 = getelementptr inbounds i8, ptr %.3, i64 48
  %78 = load i64, ptr %77, align 8
  store i64 %78, ptr %76, align 8
  %79 = getelementptr inbounds i8, ptr %.3237, i64 56
  %sunkaddr = getelementptr inbounds i8, ptr %.3, i64 56
  %80 = load i64, ptr %sunkaddr, align 8
  store i64 %80, ptr %79, align 8
  %81 = getelementptr inbounds i8, ptr %.3237, i64 64
  %82 = getelementptr inbounds i8, ptr %.3, i64 64
  %83 = ptrtoint ptr %82 to i64
  %84 = sub nuw i64 %59, %83
  %85 = icmp ult i64 %84, 65
  %lsr.iv.next = add i64 %lsr.iv, -64
  br i1 %85, label %.loopexit, label %.preheader11

86:                                               ; preds = %92, %.preheader8
  %lsr.iv90 = phi i64 [ %lsr.iv, %.preheader8 ], [ %lsr.iv.next91, %92 ]
  %.3246 = phi ptr [ %114, %92 ], [ %.0243.ph, %.preheader8 ]
  %.3225 = phi ptr [ %115, %92 ], [ %.0222.ph, %.preheader8 ]
  %87 = getelementptr inbounds i8, ptr %.3225, i64 -56
  tail call void %6(ptr align 1 %5, i64 1) #18
  %88 = load ptr, ptr %87, align 8
  %89 = load ptr, ptr %.0228.ph.ph, align 8
  %90 = tail call i8 %4(ptr align 1 %5, ptr align 1 %88, ptr align 1 %89) #18
  %91 = icmp eq i8 %90, 1
  br i1 %91, label %92, label %.loopexit9

92:                                               ; preds = %86
  %93 = load i64, ptr %.3225, align 8
  store i64 %93, ptr %.3246, align 8
  %94 = getelementptr inbounds i8, ptr %.3246, i64 -8
  %95 = getelementptr inbounds i8, ptr %.3225, i64 -8
  %96 = load i64, ptr %95, align 8
  store i64 %96, ptr %94, align 8
  %97 = getelementptr inbounds i8, ptr %.3246, i64 -16
  %98 = getelementptr inbounds i8, ptr %.3225, i64 -16
  %99 = load i64, ptr %98, align 8
  store i64 %99, ptr %97, align 8
  %100 = getelementptr inbounds i8, ptr %.3246, i64 -24
  %101 = getelementptr inbounds i8, ptr %.3225, i64 -24
  %102 = load i64, ptr %101, align 8
  store i64 %102, ptr %100, align 8
  %103 = getelementptr inbounds i8, ptr %.3246, i64 -32
  %104 = getelementptr inbounds i8, ptr %.3225, i64 -32
  %105 = load i64, ptr %104, align 8
  store i64 %105, ptr %103, align 8
  %106 = getelementptr inbounds i8, ptr %.3246, i64 -40
  %107 = getelementptr inbounds i8, ptr %.3225, i64 -40
  %108 = load i64, ptr %107, align 8
  store i64 %108, ptr %106, align 8
  %109 = getelementptr inbounds i8, ptr %.3246, i64 -48
  %110 = getelementptr inbounds i8, ptr %.3225, i64 -48
  %111 = load i64, ptr %110, align 8
  store i64 %111, ptr %109, align 8
  %112 = getelementptr inbounds i8, ptr %.3246, i64 -56
  %sunkaddr96 = getelementptr inbounds i8, ptr %.3225, i64 -56
  %113 = load i64, ptr %sunkaddr96, align 8
  store i64 %113, ptr %112, align 8
  %114 = getelementptr inbounds i8, ptr %.3246, i64 -64
  %115 = getelementptr inbounds i8, ptr %.3225, i64 -64
  %lsr.iv.next91 = add i64 %lsr.iv90, -64
  %116 = icmp ult i64 %lsr.iv.next91, 65
  br i1 %116, label %.loopexit.outer, label %86

.loopexit4:                                       ; preds = %157, %.loopexit9
  %.4247 = phi ptr [ %.5248, %157 ], [ %.2245, %.loopexit9 ]
  %.4238 = phi ptr [ %.5239, %157 ], [ %.2236, %.loopexit9 ]
  %.2230 = phi ptr [ %.3231, %157 ], [ %.0228.ph.ph, %.loopexit9 ]
  %.2215 = phi ptr [ %.3216, %157 ], [ %.0213.ph.ph31, %.loopexit9 ]
  %117 = ptrtoint ptr %.4247 to i64
  %118 = ptrtoint ptr %.4238 to i64
  %119 = sub nuw i64 %117, %118
  %120 = icmp ult i64 %119, 128
  br i1 %120, label %.preheader2, label %.cont46

.preheader2:                                      ; preds = %.loopexit4
  %121 = icmp ule ptr %.2, %.2224
  %122 = icmp ule ptr %.2215, %.2230
  %123 = select i1 %121, i1 %122, i1 false
  br i1 %123, label %.cont.preheader, label %.preheader1

.cont.preheader:                                  ; preds = %.preheader2
  br label %.cont

.preheader6:                                      ; preds = %129, %.preheader6.preheader
  %lsr.iv92 = phi i64 [ %52, %.preheader6.preheader ], [ %lsr.iv.next93, %129 ]
  %.5239 = phi ptr [ %152, %129 ], [ %.2236, %.preheader6.preheader ]
  %.3216 = phi ptr [ %153, %129 ], [ %.0213.ph.ph31, %.preheader6.preheader ]
  %124 = getelementptr inbounds i8, ptr %.3216, i64 56
  tail call void %6(ptr align 1 %5, i64 1) #18
  %125 = load ptr, ptr %.2, align 8
  %126 = load ptr, ptr %124, align 8
  %127 = tail call i8 %4(ptr align 1 %5, ptr align 1 %125, ptr align 1 %126) #18
  %128 = icmp eq i8 %127, 1
  br i1 %128, label %129, label %.preheader3

.preheader3:                                      ; preds = %.preheader6
  br label %157

129:                                              ; preds = %.preheader6
  %130 = ptrtoint ptr %.0228.ph.ph to i64
  %131 = load i64, ptr %.3216, align 8
  store i64 %131, ptr %.5239, align 8
  %132 = getelementptr inbounds i8, ptr %.5239, i64 8
  %133 = getelementptr inbounds i8, ptr %.3216, i64 8
  %134 = load i64, ptr %133, align 8
  store i64 %134, ptr %132, align 8
  %135 = getelementptr inbounds i8, ptr %.5239, i64 16
  %136 = getelementptr inbounds i8, ptr %.3216, i64 16
  %137 = load i64, ptr %136, align 8
  store i64 %137, ptr %135, align 8
  %138 = getelementptr inbounds i8, ptr %.5239, i64 24
  %139 = getelementptr inbounds i8, ptr %.3216, i64 24
  %140 = load i64, ptr %139, align 8
  store i64 %140, ptr %138, align 8
  %141 = getelementptr inbounds i8, ptr %.5239, i64 32
  %142 = getelementptr inbounds i8, ptr %.3216, i64 32
  %143 = load i64, ptr %142, align 8
  store i64 %143, ptr %141, align 8
  %144 = getelementptr inbounds i8, ptr %.5239, i64 40
  %145 = getelementptr inbounds i8, ptr %.3216, i64 40
  %146 = load i64, ptr %145, align 8
  store i64 %146, ptr %144, align 8
  %147 = getelementptr inbounds i8, ptr %.5239, i64 48
  %148 = getelementptr inbounds i8, ptr %.3216, i64 48
  %149 = load i64, ptr %148, align 8
  store i64 %149, ptr %147, align 8
  %150 = getelementptr inbounds i8, ptr %.5239, i64 56
  %sunkaddr97 = getelementptr inbounds i8, ptr %.3216, i64 56
  %151 = load i64, ptr %sunkaddr97, align 8
  store i64 %151, ptr %150, align 8
  %152 = getelementptr inbounds i8, ptr %.5239, i64 64
  %153 = getelementptr inbounds i8, ptr %.3216, i64 64
  %154 = ptrtoint ptr %153 to i64
  %155 = sub nuw i64 %130, %154
  %156 = icmp ult i64 %155, 65
  %lsr.iv.next93 = add i64 %lsr.iv92, -64
  br i1 %156, label %.loopexit.outer.outer27, label %.preheader6

157:                                              ; preds = %162, %.preheader3
  %lsr.iv94 = phi i64 [ %lsr.iv92, %.preheader3 ], [ %lsr.iv.next95, %162 ]
  %.5248 = phi ptr [ %184, %162 ], [ %.2245, %.preheader3 ]
  %.3231 = phi ptr [ %185, %162 ], [ %.0228.ph.ph, %.preheader3 ]
  %158 = getelementptr inbounds i8, ptr %.3231, i64 -56
  tail call void %6(ptr align 1 %5, i64 1) #18
  %159 = load ptr, ptr %.2224, align 8
  %160 = load ptr, ptr %158, align 8
  %161 = tail call i8 %4(ptr align 1 %5, ptr align 1 %159, ptr align 1 %160) #18
  %.not256 = icmp eq i8 %161, 1
  br i1 %.not256, label %.loopexit4, label %162

162:                                              ; preds = %157
  %163 = load i64, ptr %.3231, align 8
  store i64 %163, ptr %.5248, align 8
  %164 = getelementptr inbounds i8, ptr %.5248, i64 -8
  %165 = getelementptr inbounds i8, ptr %.3231, i64 -8
  %166 = load i64, ptr %165, align 8
  store i64 %166, ptr %164, align 8
  %167 = getelementptr inbounds i8, ptr %.5248, i64 -16
  %168 = getelementptr inbounds i8, ptr %.3231, i64 -16
  %169 = load i64, ptr %168, align 8
  store i64 %169, ptr %167, align 8
  %170 = getelementptr inbounds i8, ptr %.5248, i64 -24
  %171 = getelementptr inbounds i8, ptr %.3231, i64 -24
  %172 = load i64, ptr %171, align 8
  store i64 %172, ptr %170, align 8
  %173 = getelementptr inbounds i8, ptr %.5248, i64 -32
  %174 = getelementptr inbounds i8, ptr %.3231, i64 -32
  %175 = load i64, ptr %174, align 8
  store i64 %175, ptr %173, align 8
  %176 = getelementptr inbounds i8, ptr %.5248, i64 -40
  %177 = getelementptr inbounds i8, ptr %.3231, i64 -40
  %178 = load i64, ptr %177, align 8
  store i64 %178, ptr %176, align 8
  %179 = getelementptr inbounds i8, ptr %.5248, i64 -48
  %180 = getelementptr inbounds i8, ptr %.3231, i64 -48
  %181 = load i64, ptr %180, align 8
  store i64 %181, ptr %179, align 8
  %182 = getelementptr inbounds i8, ptr %.5248, i64 -56
  %sunkaddr98 = getelementptr inbounds i8, ptr %.3231, i64 -56
  %183 = load i64, ptr %sunkaddr98, align 8
  store i64 %183, ptr %182, align 8
  %184 = getelementptr inbounds i8, ptr %.5248, i64 -64
  %185 = getelementptr inbounds i8, ptr %.3231, i64 -64
  %lsr.iv.next95 = add i64 %lsr.iv94, -64
  %186 = icmp ult i64 %lsr.iv.next95, 65
  br i1 %186, label %.loopexit.outer.outer, label %157

.cont46:                                          ; preds = %.loopexit4
  tail call void %6(ptr align 1 %5, i64 16) #18
  %187 = load ptr, ptr %.2, align 8
  %188 = load ptr, ptr %.2215, align 8
  %189 = tail call i8 %4(ptr align 1 %5, ptr align 1 %187, ptr align 1 %188) #18
  %.not = icmp eq i8 %189, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  %190 = load i64, ptr %.sroa.speculated42, align 8
  store i64 %190, ptr %.4238, align 8
  %191 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 8
  %..4217 = select i1 %.not, ptr %191, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %191
  %192 = getelementptr inbounds i8, ptr %.4238, i64 8
  %193 = load ptr, ptr %.2224, align 8
  %194 = load ptr, ptr %.2230, align 8
  %195 = tail call i8 %4(ptr align 1 %5, ptr align 1 %193, ptr align 1 %194) #18
  %196 = icmp eq i8 %195, 1
  %.sroa.speculated105 = select i1 %196, ptr %.2224, ptr %.2230
  %197 = load i64, ptr %.sroa.speculated105, align 8
  store i64 %197, ptr %.4247, align 8
  %198 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 -8
  %.5233 = select i1 %196, ptr %.2230, ptr %198
  %.5227 = select i1 %196, ptr %198, ptr %.2224
  %199 = getelementptr inbounds i8, ptr %.4247, i64 -8
  %200 = load ptr, ptr %.4., align 8
  %201 = load ptr, ptr %..4217, align 8
  %202 = tail call i8 %4(ptr align 1 %5, ptr align 1 %200, ptr align 1 %201) #18
  %.not.1 = icmp eq i8 %202, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  %203 = load i64, ptr %.sroa.speculated42.1, align 8
  store i64 %203, ptr %192, align 8
  %204 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 8
  %..4217.1 = select i1 %.not.1, ptr %204, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %204
  %205 = getelementptr inbounds i8, ptr %.4238, i64 16
  %206 = load ptr, ptr %.5227, align 8
  %207 = load ptr, ptr %.5233, align 8
  %208 = tail call i8 %4(ptr align 1 %5, ptr align 1 %206, ptr align 1 %207) #18
  %209 = icmp eq i8 %208, 1
  %.sroa.speculated105.1 = select i1 %209, ptr %.5227, ptr %.5233
  %210 = load i64, ptr %.sroa.speculated105.1, align 8
  store i64 %210, ptr %199, align 8
  %211 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 -8
  %.5233.1 = select i1 %209, ptr %.5233, ptr %211
  %.5227.1 = select i1 %209, ptr %211, ptr %.5227
  %212 = getelementptr inbounds i8, ptr %.4247, i64 -16
  %213 = load ptr, ptr %.4..1, align 8
  %214 = load ptr, ptr %..4217.1, align 8
  %215 = tail call i8 %4(ptr align 1 %5, ptr align 1 %213, ptr align 1 %214) #18
  %.not.2 = icmp eq i8 %215, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  %216 = load i64, ptr %.sroa.speculated42.2, align 8
  store i64 %216, ptr %205, align 8
  %217 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 8
  %..4217.2 = select i1 %.not.2, ptr %217, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %217
  %218 = getelementptr inbounds i8, ptr %.4238, i64 24
  %219 = load ptr, ptr %.5227.1, align 8
  %220 = load ptr, ptr %.5233.1, align 8
  %221 = tail call i8 %4(ptr align 1 %5, ptr align 1 %219, ptr align 1 %220) #18
  %222 = icmp eq i8 %221, 1
  %.sroa.speculated105.2 = select i1 %222, ptr %.5227.1, ptr %.5233.1
  %223 = load i64, ptr %.sroa.speculated105.2, align 8
  store i64 %223, ptr %212, align 8
  %224 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 -8
  %.5233.2 = select i1 %222, ptr %.5233.1, ptr %224
  %.5227.2 = select i1 %222, ptr %224, ptr %.5227.1
  %225 = getelementptr inbounds i8, ptr %.4247, i64 -24
  %226 = load ptr, ptr %.4..2, align 8
  %227 = load ptr, ptr %..4217.2, align 8
  %228 = tail call i8 %4(ptr align 1 %5, ptr align 1 %226, ptr align 1 %227) #18
  %.not.3 = icmp eq i8 %228, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  %229 = load i64, ptr %.sroa.speculated42.3, align 8
  store i64 %229, ptr %218, align 8
  %230 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 8
  %..4217.3 = select i1 %.not.3, ptr %230, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %230
  %231 = getelementptr inbounds i8, ptr %.4238, i64 32
  %232 = load ptr, ptr %.5227.2, align 8
  %233 = load ptr, ptr %.5233.2, align 8
  %234 = tail call i8 %4(ptr align 1 %5, ptr align 1 %232, ptr align 1 %233) #18
  %235 = icmp eq i8 %234, 1
  %.sroa.speculated105.3 = select i1 %235, ptr %.5227.2, ptr %.5233.2
  %236 = load i64, ptr %.sroa.speculated105.3, align 8
  store i64 %236, ptr %225, align 8
  %237 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 -8
  %.5233.3 = select i1 %235, ptr %.5233.2, ptr %237
  %.5227.3 = select i1 %235, ptr %237, ptr %.5227.2
  %238 = getelementptr inbounds i8, ptr %.4247, i64 -32
  %239 = load ptr, ptr %.4..3, align 8
  %240 = load ptr, ptr %..4217.3, align 8
  %241 = tail call i8 %4(ptr align 1 %5, ptr align 1 %239, ptr align 1 %240) #18
  %.not.4 = icmp eq i8 %241, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  %242 = load i64, ptr %.sroa.speculated42.4, align 8
  store i64 %242, ptr %231, align 8
  %243 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 8
  %..4217.4 = select i1 %.not.4, ptr %243, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %243
  %244 = getelementptr inbounds i8, ptr %.4238, i64 40
  %245 = load ptr, ptr %.5227.3, align 8
  %246 = load ptr, ptr %.5233.3, align 8
  %247 = tail call i8 %4(ptr align 1 %5, ptr align 1 %245, ptr align 1 %246) #18
  %248 = icmp eq i8 %247, 1
  %.sroa.speculated105.4 = select i1 %248, ptr %.5227.3, ptr %.5233.3
  %249 = load i64, ptr %.sroa.speculated105.4, align 8
  store i64 %249, ptr %238, align 8
  %250 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 -8
  %.5233.4 = select i1 %248, ptr %.5233.3, ptr %250
  %.5227.4 = select i1 %248, ptr %250, ptr %.5227.3
  %251 = getelementptr inbounds i8, ptr %.4247, i64 -40
  %252 = load ptr, ptr %.4..4, align 8
  %253 = load ptr, ptr %..4217.4, align 8
  %254 = tail call i8 %4(ptr align 1 %5, ptr align 1 %252, ptr align 1 %253) #18
  %.not.5 = icmp eq i8 %254, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  %255 = load i64, ptr %.sroa.speculated42.5, align 8
  store i64 %255, ptr %244, align 8
  %256 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 8
  %..4217.5 = select i1 %.not.5, ptr %256, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %256
  %257 = getelementptr inbounds i8, ptr %.4238, i64 48
  %258 = load ptr, ptr %.5227.4, align 8
  %259 = load ptr, ptr %.5233.4, align 8
  %260 = tail call i8 %4(ptr align 1 %5, ptr align 1 %258, ptr align 1 %259) #18
  %261 = icmp eq i8 %260, 1
  %.sroa.speculated105.5 = select i1 %261, ptr %.5227.4, ptr %.5233.4
  %262 = load i64, ptr %.sroa.speculated105.5, align 8
  store i64 %262, ptr %251, align 8
  %263 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 -8
  %.5233.5 = select i1 %261, ptr %.5233.4, ptr %263
  %.5227.5 = select i1 %261, ptr %263, ptr %.5227.4
  %264 = getelementptr inbounds i8, ptr %.4247, i64 -48
  %265 = load ptr, ptr %.4..5, align 8
  %266 = load ptr, ptr %..4217.5, align 8
  %267 = tail call i8 %4(ptr align 1 %5, ptr align 1 %265, ptr align 1 %266) #18
  %.not.6 = icmp eq i8 %267, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  %268 = load i64, ptr %.sroa.speculated42.6, align 8
  store i64 %268, ptr %257, align 8
  %269 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 8
  %..4217.6 = select i1 %.not.6, ptr %269, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %269
  %270 = getelementptr inbounds i8, ptr %.4238, i64 56
  %271 = load ptr, ptr %.5227.5, align 8
  %272 = load ptr, ptr %.5233.5, align 8
  %273 = tail call i8 %4(ptr align 1 %5, ptr align 1 %271, ptr align 1 %272) #18
  %274 = icmp eq i8 %273, 1
  %.sroa.speculated105.6 = select i1 %274, ptr %.5227.5, ptr %.5233.5
  %275 = load i64, ptr %.sroa.speculated105.6, align 8
  store i64 %275, ptr %264, align 8
  %276 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 -8
  %.5233.6 = select i1 %274, ptr %.5233.5, ptr %276
  %.5227.6 = select i1 %274, ptr %276, ptr %.5227.5
  %277 = getelementptr inbounds i8, ptr %.4247, i64 -56
  %278 = load ptr, ptr %.4..6, align 8
  %279 = load ptr, ptr %..4217.6, align 8
  %280 = tail call i8 %4(ptr align 1 %5, ptr align 1 %278, ptr align 1 %279) #18
  %.not.7 = icmp eq i8 %280, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  %281 = load i64, ptr %.sroa.speculated42.7, align 8
  store i64 %281, ptr %270, align 8
  %282 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 8
  %..4217.7 = select i1 %.not.7, ptr %282, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %282
  %283 = getelementptr inbounds i8, ptr %.4238, i64 64
  %284 = load ptr, ptr %.5227.6, align 8
  %285 = load ptr, ptr %.5233.6, align 8
  %286 = tail call i8 %4(ptr align 1 %5, ptr align 1 %284, ptr align 1 %285) #18
  %287 = icmp eq i8 %286, 1
  %.sroa.speculated105.7 = select i1 %287, ptr %.5227.6, ptr %.5233.6
  %288 = load i64, ptr %.sroa.speculated105.7, align 8
  store i64 %288, ptr %277, align 8
  %289 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 -8
  %.5233.7 = select i1 %287, ptr %.5233.6, ptr %289
  %.5227.7 = select i1 %287, ptr %289, ptr %.5227.6
  %290 = getelementptr inbounds i8, ptr %.4247, i64 -64
  br label %.loopexit.outer.outer

.preheader1:                                      ; preds = %.cont, %.preheader2
  %.7241.lcssa = phi ptr [ %.4238, %.preheader2 ], [ %296, %.cont ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader2 ], [ %..6219, %.cont ]
  %.6.lcssa = phi ptr [ %.2, %.preheader2 ], [ %.6., %.cont ]
  %.not25340 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not25340, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader1
  br label %.lr.ph

.cont:                                            ; preds = %.cont, %.cont.preheader
  %.637 = phi ptr [ %.6., %.cont ], [ %.2, %.cont.preheader ]
  %.621936 = phi ptr [ %..6219, %.cont ], [ %.2215, %.cont.preheader ]
  %.724135 = phi ptr [ %296, %.cont ], [ %.4238, %.cont.preheader ]
  tail call void %6(ptr align 1 %5, i64 1) #18
  %291 = load ptr, ptr %.637, align 8
  %292 = load ptr, ptr %.621936, align 8
  %293 = tail call i8 %4(ptr align 1 %5, ptr align 1 %291, ptr align 1 %292) #18
  %.not255 = icmp eq i8 %293, 1
  %.sroa.speculated = select i1 %.not255, ptr %.621936, ptr %.637
  %294 = load i64, ptr %.sroa.speculated, align 8
  store i64 %294, ptr %.724135, align 8
  %295 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %..6219 = select i1 %.not255, ptr %295, ptr %.621936
  %.6. = select i1 %.not255, ptr %.637, ptr %295
  %296 = getelementptr inbounds i8, ptr %.724135, i64 8
  %297 = icmp ule ptr %.6., %.2224
  %298 = icmp ule ptr %..6219, %.2230
  %299 = select i1 %297, i1 %298, i1 false
  br i1 %299, label %.cont, label %.preheader1

.preheader:                                       ; preds = %.lr.ph, %.preheader1
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader1 ], [ %301, %.lr.ph ]
  %.not25444 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not25444, label %common.ret, label %.lr.ph47.preheader

.lr.ph47.preheader:                               ; preds = %.preheader
  br label %.lr.ph47

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.842 = phi ptr [ %302, %.lr.ph ], [ %.6.lcssa, %.lr.ph.preheader ]
  %.824241 = phi ptr [ %301, %.lr.ph ], [ %.7241.lcssa, %.lr.ph.preheader ]
  %300 = load i64, ptr %.842, align 8
  store i64 %300, ptr %.824241, align 8
  %301 = getelementptr inbounds i8, ptr %.824241, i64 8
  %302 = getelementptr inbounds i8, ptr %.842, i64 8
  %.not253 = icmp ugt ptr %302, %.2224
  br i1 %.not253, label %.preheader, label %.lr.ph

.lr.ph47:                                         ; preds = %.lr.ph47, %.lr.ph47.preheader
  %.822146 = phi ptr [ %305, %.lr.ph47 ], [ %.6219.lcssa, %.lr.ph47.preheader ]
  %.945 = phi ptr [ %304, %.lr.ph47 ], [ %.8242.lcssa, %.lr.ph47.preheader ]
  %303 = load i64, ptr %.822146, align 8
  store i64 %303, ptr %.945, align 8
  %304 = getelementptr inbounds i8, ptr %.945, i64 8
  %305 = getelementptr inbounds i8, ptr %.822146, i64 8
  %.not254 = icmp ugt ptr %305, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph47
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = alloca [864 x i8], align 8
  %9 = alloca i64, align 8
  %10 = ptrtoint ptr %8 to i64
  %11 = lshr i64 %10, 4
  br label %12

12:                                               ; preds = %sort.quadsort_swap__anon_14517.exit63, %7
  %.053 = phi i64 [ 0, %7 ], [ %290, %sort.quadsort_swap__anon_14517.exit63 ]
  %.052 = phi i64 [ %4, %7 ], [ %290, %sort.quadsort_swap__anon_14517.exit63 ]
  %.051 = phi ptr [ %2, %7 ], [ %0, %sort.quadsort_swap__anon_14517.exit63 ]
  %.0 = phi ptr [ %3, %7 ], [ %13, %sort.quadsort_swap__anon_14517.exit63 ]
  %13 = getelementptr inbounds i8, ptr %.0, i64 -8
  %14 = icmp ult i64 %.052, 2049
  br i1 %14, label %16, label %117

15:                                               ; preds = %sort.median_of_cube_root__anon_16265.exit, %16
  %.in = phi i64 [ %210, %sort.median_of_cube_root__anon_16265.exit ], [ %116, %16 ]
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %222

16:                                               ; preds = %12
  call void @llvm.lifetime.start.p0(i64 864, ptr nonnull %8)
  %.lhs.trunc = trunc i64 %.052 to i16
  %17 = udiv i16 %.lhs.trunc, 9
  %18 = zext i16 %17 to i64
  %19 = shl nuw nsw i64 %18, 3
  %20 = load i64, ptr %.051, align 8
  store i64 %20, ptr %8, align 8
  %21 = getelementptr inbounds i8, ptr %.051, i64 %19
  %22 = load i64, ptr %21, align 8
  %sunkaddr = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %22, ptr %sunkaddr, align 8
  %23 = getelementptr inbounds i8, ptr %21, i64 %19
  %24 = load i64, ptr %23, align 8
  %sunkaddr97 = getelementptr inbounds i8, ptr %8, i64 16
  store i64 %24, ptr %sunkaddr97, align 8
  %25 = getelementptr inbounds i8, ptr %23, i64 %19
  %26 = load i64, ptr %25, align 8
  %sunkaddr98 = getelementptr inbounds i8, ptr %8, i64 24
  store i64 %26, ptr %sunkaddr98, align 8
  %27 = getelementptr inbounds i8, ptr %25, i64 %19
  %28 = load i64, ptr %27, align 8
  %sunkaddr99 = getelementptr inbounds i8, ptr %8, i64 32
  store i64 %28, ptr %sunkaddr99, align 8
  %29 = getelementptr inbounds i8, ptr %27, i64 %19
  %30 = load i64, ptr %29, align 8
  %sunkaddr100 = getelementptr inbounds i8, ptr %8, i64 40
  store i64 %30, ptr %sunkaddr100, align 8
  %31 = getelementptr inbounds i8, ptr %29, i64 %19
  %32 = load i64, ptr %31, align 8
  %sunkaddr101 = getelementptr inbounds i8, ptr %8, i64 48
  store i64 %32, ptr %sunkaddr101, align 8
  %33 = getelementptr inbounds i8, ptr %31, i64 %19
  %34 = load i64, ptr %33, align 8
  %sunkaddr102 = getelementptr inbounds i8, ptr %8, i64 56
  store i64 %34, ptr %sunkaddr102, align 8
  %35 = getelementptr inbounds i8, ptr %33, i64 %19
  %36 = load i64, ptr %35, align 8
  %37 = inttoptr i64 %20 to ptr
  %38 = inttoptr i64 %22 to ptr
  %39 = call i8 %5(ptr align 1 %6, ptr align 1 %37, ptr align 1 %38) #18
  %.not.i.i = icmp eq i8 %39, 1
  %..i.i = select i1 %.not.i.i, i64 8, i64 0
  %.1.i.i = select i1 %.not.i.i, i64 0, i64 8
  %40 = getelementptr inbounds i8, ptr %8, i64 %.1.i.i
  %41 = load i64, ptr %40, align 8
  %42 = getelementptr inbounds i8, ptr %8, i64 %..i.i
  %43 = load i64, ptr %42, align 8
  store i64 %43, ptr %8, align 8
  store i64 %41, ptr %sunkaddr, align 8
  %44 = inttoptr i64 %24 to ptr
  %45 = inttoptr i64 %26 to ptr
  %46 = call i8 %5(ptr align 1 %6, ptr align 1 %44, ptr align 1 %45) #18
  %.not26.i.i = icmp eq i8 %46, 1
  %.2.i.i = select i1 %.not26.i.i, i64 8, i64 0
  %.3.i.i = select i1 %.not26.i.i, i64 0, i64 8
  %sunkaddr103 = getelementptr inbounds i8, ptr %8, i64 %.3.i.i
  %sunkaddr104 = getelementptr inbounds i8, ptr %sunkaddr103, i64 16
  %47 = load i64, ptr %sunkaddr104, align 8
  %sunkaddr105 = getelementptr inbounds i8, ptr %8, i64 %.2.i.i
  %sunkaddr106 = getelementptr inbounds i8, ptr %sunkaddr105, i64 16
  %48 = load i64, ptr %sunkaddr106, align 8
  store i64 %48, ptr %sunkaddr97, align 8
  store i64 %47, ptr %sunkaddr98, align 8
  %49 = inttoptr i64 %43 to ptr
  %.cast.i.i = inttoptr i64 %48 to ptr
  %50 = call i8 %5(ptr align 1 %6, ptr align 1 %49, ptr align 1 %.cast.i.i) #18
  %.not27.i.i = icmp eq i8 %50, 1
  %51 = select i1 %.not27.i.i, i64 0, i64 16
  %52 = getelementptr inbounds i8, ptr %8, i64 %51
  %53 = load i64, ptr %52, align 8
  store i64 %53, ptr %sunkaddr97, align 8
  %54 = inttoptr i64 %41 to ptr
  %55 = inttoptr i64 %47 to ptr
  %56 = call i8 %5(ptr align 1 %6, ptr align 1 %54, ptr align 1 %55) #18
  %57 = icmp eq i8 %56, 1
  %58 = select i1 %57, i64 16, i64 0
  %sunkaddr107 = getelementptr inbounds i8, ptr %8, i64 %58
  %sunkaddr108 = getelementptr inbounds i8, ptr %sunkaddr107, i64 8
  %59 = load i64, ptr %sunkaddr108, align 8
  store i64 %59, ptr %sunkaddr, align 8
  %60 = inttoptr i64 %28 to ptr
  %61 = inttoptr i64 %30 to ptr
  %62 = call i8 %5(ptr align 1 %6, ptr align 1 %60, ptr align 1 %61) #18
  %.not.i3.i = icmp eq i8 %62, 1
  %..i4.i = select i1 %.not.i3.i, i64 8, i64 0
  %.1.i5.i = select i1 %.not.i3.i, i64 0, i64 8
  %sunkaddr109 = getelementptr inbounds i8, ptr %8, i64 %.1.i5.i
  %sunkaddr110 = getelementptr inbounds i8, ptr %sunkaddr109, i64 32
  %63 = load i64, ptr %sunkaddr110, align 8
  %sunkaddr111 = getelementptr inbounds i8, ptr %8, i64 %..i4.i
  %sunkaddr112 = getelementptr inbounds i8, ptr %sunkaddr111, i64 32
  %64 = load i64, ptr %sunkaddr112, align 8
  store i64 %64, ptr %sunkaddr99, align 8
  store i64 %63, ptr %sunkaddr100, align 8
  %65 = inttoptr i64 %32 to ptr
  %66 = inttoptr i64 %34 to ptr
  %67 = call i8 %5(ptr align 1 %6, ptr align 1 %65, ptr align 1 %66) #18
  %.not26.i6.i = icmp eq i8 %67, 1
  %.2.i7.i = select i1 %.not26.i6.i, i64 8, i64 0
  %.3.i8.i = select i1 %.not26.i6.i, i64 0, i64 8
  %sunkaddr113 = getelementptr inbounds i8, ptr %8, i64 %.3.i8.i
  %sunkaddr114 = getelementptr inbounds i8, ptr %sunkaddr113, i64 48
  %68 = load i64, ptr %sunkaddr114, align 8
  %sunkaddr115 = getelementptr inbounds i8, ptr %8, i64 %.2.i7.i
  %sunkaddr116 = getelementptr inbounds i8, ptr %sunkaddr115, i64 48
  %69 = load i64, ptr %sunkaddr116, align 8
  store i64 %69, ptr %sunkaddr101, align 8
  store i64 %68, ptr %sunkaddr102, align 8
  %70 = inttoptr i64 %64 to ptr
  %.cast.i9.i = inttoptr i64 %69 to ptr
  %71 = call i8 %5(ptr align 1 %6, ptr align 1 %70, ptr align 1 %.cast.i9.i) #18
  %.not27.i10.i = icmp eq i8 %71, 1
  %72 = select i1 %.not27.i10.i, i64 0, i64 16
  %sunkaddr117 = getelementptr inbounds i8, ptr %8, i64 %72
  %sunkaddr118 = getelementptr inbounds i8, ptr %sunkaddr117, i64 32
  %73 = load i64, ptr %sunkaddr118, align 8
  store i64 %73, ptr %sunkaddr101, align 8
  %74 = inttoptr i64 %63 to ptr
  %75 = inttoptr i64 %68 to ptr
  %76 = call i8 %5(ptr align 1 %6, ptr align 1 %74, ptr align 1 %75) #18
  %77 = icmp eq i8 %76, 1
  %78 = select i1 %77, i64 16, i64 0
  %sunkaddr119 = getelementptr inbounds i8, ptr %8, i64 %78
  %sunkaddr120 = getelementptr inbounds i8, ptr %sunkaddr119, i64 40
  %79 = load i64, ptr %sunkaddr120, align 8
  store i64 %79, ptr %8, align 8
  store i64 %36, ptr %sunkaddr98, align 8
  %.cast.i = inttoptr i64 %79 to ptr
  %80 = inttoptr i64 %59 to ptr
  %81 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast.i, ptr align 1 %80) #18
  %.not.i11.i = icmp eq i8 %81, 1
  %..i12.i = select i1 %.not.i11.i, i64 8, i64 0
  %.1.i13.i = select i1 %.not.i11.i, i64 0, i64 8
  %82 = getelementptr inbounds i8, ptr %8, i64 %.1.i13.i
  %83 = load i64, ptr %82, align 8
  %84 = getelementptr inbounds i8, ptr %8, i64 %..i12.i
  %85 = load i64, ptr %84, align 8
  store i64 %85, ptr %8, align 8
  store i64 %83, ptr %sunkaddr, align 8
  %86 = inttoptr i64 %53 to ptr
  %87 = inttoptr i64 %36 to ptr
  %88 = call i8 %5(ptr align 1 %6, ptr align 1 %86, ptr align 1 %87) #18
  %.not26.i14.i = icmp eq i8 %88, 1
  %.2.i15.i = select i1 %.not26.i14.i, i64 8, i64 0
  %.3.i16.i = select i1 %.not26.i14.i, i64 0, i64 8
  %sunkaddr121 = getelementptr inbounds i8, ptr %8, i64 %.3.i16.i
  %sunkaddr122 = getelementptr inbounds i8, ptr %sunkaddr121, i64 16
  %89 = load i64, ptr %sunkaddr122, align 8
  %sunkaddr123 = getelementptr inbounds i8, ptr %8, i64 %.2.i15.i
  %sunkaddr124 = getelementptr inbounds i8, ptr %sunkaddr123, i64 16
  %90 = load i64, ptr %sunkaddr124, align 8
  store i64 %90, ptr %sunkaddr97, align 8
  store i64 %89, ptr %sunkaddr98, align 8
  %91 = inttoptr i64 %85 to ptr
  %.cast.i17.i = inttoptr i64 %90 to ptr
  %92 = call i8 %5(ptr align 1 %6, ptr align 1 %91, ptr align 1 %.cast.i17.i) #18
  %.not27.i18.i = icmp eq i8 %92, 1
  %93 = select i1 %.not27.i18.i, i64 0, i64 16
  %94 = getelementptr inbounds i8, ptr %8, i64 %93
  %95 = load i64, ptr %94, align 8
  store i64 %95, ptr %sunkaddr97, align 8
  %96 = inttoptr i64 %83 to ptr
  %97 = inttoptr i64 %89 to ptr
  %98 = call i8 %5(ptr align 1 %6, ptr align 1 %96, ptr align 1 %97) #18
  %99 = icmp eq i8 %98, 1
  %100 = select i1 %99, i64 16, i64 0
  %sunkaddr125 = getelementptr inbounds i8, ptr %8, i64 %100
  %sunkaddr126 = getelementptr inbounds i8, ptr %sunkaddr125, i64 8
  %101 = load i64, ptr %sunkaddr126, align 8
  store i64 %101, ptr %sunkaddr, align 8
  store i64 %73, ptr %8, align 8
  %.cast1.i = inttoptr i64 %73 to ptr
  %.cast2.i = inttoptr i64 %101 to ptr
  %102 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %.cast2.i) #18
  %103 = icmp eq i8 %102, 1
  %104 = inttoptr i64 %95 to ptr
  %105 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %104) #18
  %106 = icmp ne i8 %105, 1
  %107 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast2.i, ptr align 1 %104) #18
  %108 = icmp eq i8 %107, 1
  %109 = xor i1 %103, %106
  %110 = xor i1 %103, %108
  %111 = zext i1 %110 to i64
  %112 = zext i1 %109 to i64
  %113 = add nuw nsw i64 %111, %112
  %114 = shl nuw nsw i64 %113, 3
  %115 = getelementptr inbounds i8, ptr %8, i64 %114
  %116 = load i64, ptr %115, align 8
  store i64 %116, ptr %13, align 8
  call void @llvm.lifetime.end.p0(i64 864, ptr nonnull %8)
  br label %15

117:                                              ; preds = %12
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  br label %118

118:                                              ; preds = %118, %117
  %.0.i = phi i64 [ 32, %117 ], [ %122, %118 ]
  %119 = mul nuw i64 %.0.i, %.0.i
  %120 = mul nuw i64 %119, %.0.i
  %121 = icmp ult i64 %120, %.052
  %122 = shl nuw i64 %.0.i, 1
  br i1 %121, label %118, label %123

123:                                              ; preds = %118
  %124 = or i64 %.052, %.0.i
  %125 = and i64 %124, -4294967296
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %132

127:                                              ; preds = %123
  %128 = trunc i64 %.0.i to i32
  %129 = trunc i64 %.052 to i32
  %130 = udiv i32 %129, %128
  %131 = zext i32 %130 to i64
  br label %134

132:                                              ; preds = %123
  %133 = udiv i64 %.052, %.0.i
  br label %134

134:                                              ; preds = %132, %127
  %135 = phi i64 [ %131, %127 ], [ %133, %132 ]
  store i64 %135, ptr %8, align 8
  %136 = or i64 %11, %135
  %137 = and i64 %136, -4294967296
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %134
  %140 = trunc i64 %135 to i32
  %141 = trunc i64 %11 to i32
  %142 = urem i32 %141, %140
  %143 = zext i32 %142 to i64
  br label %146

144:                                              ; preds = %134
  %145 = urem i64 %11, %135
  br label %146

146:                                              ; preds = %144, %139
  %147 = phi i64 [ %143, %139 ], [ %145, %144 ]
  %148 = shl nuw nsw i64 %147, 3
  %149 = getelementptr inbounds i8, ptr %.051, i64 %148
  %150 = icmp eq ptr %.051, %0
  %..i = select i1 %150, ptr %1, ptr %0
  %151 = shl nuw i64 %135, 3
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  %152 = add i64 %umax.i, -1
  %xtraiter = and i64 %umax.i, 1
  %153 = icmp ult i64 %152, 3
  br i1 %153, label %.unr-lcssa, label %.new

.new:                                             ; preds = %146
  %unroll_iter = and i64 %umax.i, -32
  br label %154

154:                                              ; preds = %154, %.new
  %.0312.i = phi ptr [ %149, %.new ], [ %162, %154 ]
  %.0321.i = phi i64 [ 0, %.new ], [ %163, %154 ]
  %155 = load i64, ptr %.0312.i, align 8
  %sunkaddr127 = mul i64 %.0321.i, 8
  %sunkaddr128 = getelementptr i8, ptr %..i, i64 %sunkaddr127
  store i64 %155, ptr %sunkaddr128, align 8
  %156 = getelementptr inbounds i8, ptr %.0312.i, i64 %151
  %157 = load i64, ptr %156, align 8
  %sunkaddr129 = mul i64 %.0321.i, 8
  %sunkaddr130 = getelementptr i8, ptr %..i, i64 %sunkaddr129
  %sunkaddr131 = getelementptr i8, ptr %sunkaddr130, i64 8
  store i64 %157, ptr %sunkaddr131, align 8
  %158 = getelementptr inbounds i8, ptr %156, i64 %151
  %159 = load i64, ptr %158, align 8
  %sunkaddr132 = mul i64 %.0321.i, 8
  %sunkaddr133 = getelementptr i8, ptr %..i, i64 %sunkaddr132
  %sunkaddr134 = getelementptr i8, ptr %sunkaddr133, i64 16
  store i64 %159, ptr %sunkaddr134, align 8
  %160 = getelementptr inbounds i8, ptr %158, i64 %151
  %161 = load i64, ptr %160, align 8
  %sunkaddr135 = mul i64 %.0321.i, 8
  %sunkaddr136 = getelementptr i8, ptr %..i, i64 %sunkaddr135
  %sunkaddr137 = getelementptr i8, ptr %sunkaddr136, i64 24
  store i64 %161, ptr %sunkaddr137, align 8
  %162 = getelementptr inbounds i8, ptr %160, i64 %151
  %163 = add i64 %.0321.i, 4
  %niter.ncmp.3 = icmp eq i64 %unroll_iter, %163
  br i1 %niter.ncmp.3, label %.unr-lcssa, label %154

.unr-lcssa:                                       ; preds = %154, %146
  %.0312.i.unr = phi ptr [ %149, %146 ], [ %162, %154 ]
  %.0321.i.unr = phi i64 [ 0, %146 ], [ %163, %154 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.epilog-lcssa, label %.epil.preheader.preheader

.epil.preheader.preheader:                        ; preds = %.unr-lcssa
  %164 = shl i64 %.0321.i.unr, 3
  %uglygep93 = getelementptr i8, ptr %..i, i64 %164
  br label %.epil.preheader

.epil.preheader:                                  ; preds = %.epil.preheader, %.epil.preheader.preheader
  %.0312.i.epil = phi ptr [ %167, %.epil.preheader ], [ %.0312.i.unr, %.epil.preheader.preheader ]
  %epil.iter = phi i64 [ %epil.iter.next, %.epil.preheader ], [ 0, %.epil.preheader.preheader ]
  %165 = shl nuw nsw i64 %epil.iter, 3
  %uglygep94 = getelementptr i8, ptr %uglygep93, i64 %165
  %166 = load i64, ptr %.0312.i.epil, align 8
  store i64 %166, ptr %uglygep94, align 8
  %167 = getelementptr inbounds i8, ptr %.0312.i.epil, i64 %151
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %xtraiter, %epil.iter.next
  br i1 %epil.iter.cmp.not, label %.epilog-lcssa, label %.epil.preheader, !llvm.loop !538

.epilog-lcssa:                                    ; preds = %.epil.preheader, %.unr-lcssa
  %168 = lshr exact i64 %.0.i, 1
  %169 = shl i64 %.0.i, 3
  %170 = getelementptr inbounds i8, ptr %..i, i64 %169
  %171 = icmp ult i64 %.0.i, 192
  br i1 %171, label %176, label %172

172:                                              ; preds = %.epilog-lcssa
  %173 = call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %..i, i64 %168, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %173, label %174, label %179

174:                                              ; preds = %172
  %175 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %..i, i64 %168, ptr nonnull align 1 %170, i64 %168, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %..i, i64 %168, ptr nonnull align 1 %170, i64 %168, i64 %175, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %179

176:                                              ; preds = %.epilog-lcssa
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %..i, i64 %168, ptr nonnull align 1 %170, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  %177 = shl nuw nsw i64 %.0.i, 2
  %178 = getelementptr inbounds i8, ptr %..i, i64 %177
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %178, i64 %168, ptr nonnull align 1 %170, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14517.exit34.i

179:                                              ; preds = %174, %172
  %180 = shl i64 %.0.i, 2
  %181 = getelementptr inbounds i8, ptr %..i, i64 %180
  %182 = call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %181, i64 %168, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %182, label %183, label %sort.quadsort_swap__anon_14517.exit34.i

183:                                              ; preds = %179
  %184 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %181, i64 %168, ptr nonnull align 1 %170, i64 %168, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %181, i64 %168, ptr nonnull align 1 %170, i64 %168, i64 %184, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14517.exit34.i

sort.quadsort_swap__anon_14517.exit34.i:          ; preds = %183, %179, %176
  %185 = phi ptr [ %178, %176 ], [ %181, %179 ], [ %181, %183 ]
  %186 = phi i64 [ %177, %176 ], [ %180, %179 ], [ %180, %183 ]
  %187 = add i64 %169, -8
  %188 = getelementptr inbounds i8, ptr %..i, i64 %187
  %189 = load ptr, ptr %188, align 8
  %190 = load ptr, ptr %..i, align 8
  %191 = call i8 %5(ptr align 1 %6, ptr align 1 %189, ptr align 1 %190) #18
  %.not.i = icmp eq i8 %191, 1
  br i1 %.not.i, label %192, label %198

192:                                              ; preds = %198, %sort.quadsort_swap__anon_14517.exit34.i
  %193 = phi i1 [ %204, %198 ], [ false, %sort.quadsort_swap__anon_14517.exit34.i ]
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %192
  %.0.in4.i.i = phi i64 [ %.0.i.i, %.lr.ph.i.i ], [ %168, %192 ]
  %.0133.i.i = phi ptr [ %.1.i.i59, %.lr.ph.i.i ], [ %..i, %192 ]
  %.0142.i.i = phi ptr [ %.115.i.i, %.lr.ph.i.i ], [ %185, %192 ]
  %.0.i.i = lshr i64 %.0.in4.i.i, 1
  %194 = load ptr, ptr %.0133.i.i, align 8
  %195 = load ptr, ptr %.0142.i.i, align 8
  %196 = call i8 %5(ptr align 1 %6, ptr align 1 %194, ptr align 1 %195) #18
  %.not16.i.i = icmp eq i8 %196, 1
  %197 = shl nuw i64 %.0.i.i, 3
  %.115.idx.i.i = select i1 %.not16.i.i, i64 %197, i64 0
  %.115.i.i = getelementptr i8, ptr %.0142.i.i, i64 %.115.idx.i.i
  %.1.idx.i.i = select i1 %.not16.i.i, i64 0, i64 %197
  %.1.i.i59 = getelementptr i8, ptr %.0133.i.i, i64 %.1.idx.i.i
  %.not.i.i60 = icmp ult i64 %.0.in4.i.i, 4
  br i1 %.not.i.i60, label %sort.median_of_cube_root__anon_16265.exit, label %.lr.ph.i.i

198:                                              ; preds = %sort.quadsort_swap__anon_14517.exit34.i
  %199 = add i64 %186, -8
  %200 = getelementptr inbounds i8, ptr %..i, i64 %199
  %201 = load ptr, ptr %200, align 8
  %202 = load ptr, ptr %..i, align 8
  %203 = call i8 %5(ptr align 1 %6, ptr align 1 %201, ptr align 1 %202) #18
  %204 = icmp ne i8 %203, 1
  br label %192

sort.median_of_cube_root__anon_16265.exit:        ; preds = %.lr.ph.i.i
  %205 = load ptr, ptr %.1.i.i59, align 8
  %206 = load ptr, ptr %.115.i.i, align 8
  %207 = call i8 %5(ptr align 1 %6, ptr align 1 %205, ptr align 1 %206) #18
  %208 = icmp eq i8 %207, 1
  %209 = select i1 %208, ptr %.1.i.i59, ptr %.115.i.i
  %210 = load i64, ptr %209, align 8
  store i64 %210, ptr %13, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br i1 %193, label %211, label %15

211:                                              ; preds = %sort.median_of_cube_root__anon_16265.exit
  %212 = icmp eq ptr %.051, %1
  br i1 %212, label %220, label %213

common.ret:                                       ; preds = %346, %344, %342, %341, %326, %319, %309, %307, %306, %226, %218, %216, %215
  ret void

213:                                              ; preds = %220, %211
  %214 = icmp ult i64 %.052, 96
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

216:                                              ; preds = %213
  %217 = call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %217, label %218, label %common.ret

218:                                              ; preds = %216
  %219 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %219, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

220:                                              ; preds = %211
  %221 = shl nuw i64 %.052, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %221, i1 false)
  br label %213

222:                                              ; preds = %15
  %223 = inttoptr i64 %.in to ptr
  %224 = load ptr, ptr %.0, align 8
  %225 = call i8 %5(ptr align 1 %6, ptr align 1 %224, ptr align 1 %223) #18
  %.not58 = icmp eq i8 %225, 1
  br i1 %.not58, label %.critedge, label %226

226:                                              ; preds = %222
  call fastcc void @sort.flux_reverse_partition__anon_16266(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %13, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

.critedge:                                        ; preds = %222, %15
  %.not1.i = icmp ult i64 %.052, 8
  br i1 %.not1.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.06.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.01315.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.01434.i = phi ptr [ %uglygep95, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.01453.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.01472.i = phi i64 [ %278, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %227 = load ptr, ptr %.01434.i, align 8
  %228 = load ptr, ptr %13, align 8
  %229 = call i8 %5(ptr align 1 %6, ptr align 1 %227, ptr align 1 %228) #18
  %.not151.i = icmp eq i8 %229, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.01315.i, ptr %.06.i
  %230 = load i64, ptr %.01434.i, align 8
  store i64 %230, ptr %.sroa.speculated78.i, align 8
  %231 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 8
  %..0131.i = select i1 %.not151.i, ptr %231, ptr %.01315.i
  %.0..i = select i1 %.not151.i, ptr %.06.i, ptr %231
  %232 = getelementptr inbounds i8, ptr %.01434.i, i64 8
  %233 = load ptr, ptr %232, align 8
  %234 = load ptr, ptr %13, align 8
  %235 = call i8 %5(ptr align 1 %6, ptr align 1 %233, ptr align 1 %234) #18
  %.not152.i = icmp eq i8 %235, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  %236 = load i64, ptr %232, align 8
  store i64 %236, ptr %.sroa.speculated69.i, align 8
  %237 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 8
  %.2133.i = select i1 %.not152.i, ptr %237, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %237
  %238 = getelementptr inbounds i8, ptr %.01434.i, i64 16
  %239 = load ptr, ptr %238, align 8
  %240 = load ptr, ptr %13, align 8
  %241 = call i8 %5(ptr align 1 %6, ptr align 1 %239, ptr align 1 %240) #18
  %.not153.i = icmp eq i8 %241, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  %242 = load i64, ptr %238, align 8
  store i64 %242, ptr %.sroa.speculated60.i, align 8
  %243 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 8
  %.3134.i = select i1 %.not153.i, ptr %243, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %243
  %244 = getelementptr inbounds i8, ptr %.01434.i, i64 24
  %245 = load ptr, ptr %244, align 8
  %246 = load ptr, ptr %13, align 8
  %247 = call i8 %5(ptr align 1 %6, ptr align 1 %245, ptr align 1 %246) #18
  %.not154.i = icmp eq i8 %247, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  %248 = load i64, ptr %244, align 8
  store i64 %248, ptr %.sroa.speculated51.i, align 8
  %249 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 8
  %.4135.i = select i1 %.not154.i, ptr %249, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %249
  %250 = getelementptr inbounds i8, ptr %.01434.i, i64 32
  %251 = load ptr, ptr %250, align 8
  %252 = load ptr, ptr %13, align 8
  %253 = call i8 %5(ptr align 1 %6, ptr align 1 %251, ptr align 1 %252) #18
  %.not155.i = icmp eq i8 %253, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  %254 = load i64, ptr %250, align 8
  store i64 %254, ptr %.sroa.speculated42.i, align 8
  %255 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 8
  %.5136.i = select i1 %.not155.i, ptr %255, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %255
  %256 = getelementptr inbounds i8, ptr %.01434.i, i64 40
  %257 = load ptr, ptr %256, align 8
  %258 = load ptr, ptr %13, align 8
  %259 = call i8 %5(ptr align 1 %6, ptr align 1 %257, ptr align 1 %258) #18
  %.not156.i = icmp eq i8 %259, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  %260 = load i64, ptr %256, align 8
  store i64 %260, ptr %.sroa.speculated33.i, align 8
  %261 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 8
  %.6137.i = select i1 %.not156.i, ptr %261, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %261
  %262 = getelementptr inbounds i8, ptr %.01434.i, i64 48
  %263 = load ptr, ptr %262, align 8
  %264 = load ptr, ptr %13, align 8
  %265 = call i8 %5(ptr align 1 %6, ptr align 1 %263, ptr align 1 %264) #18
  %.not157.i = icmp eq i8 %265, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  %266 = load i64, ptr %262, align 8
  store i64 %266, ptr %.sroa.speculated24.i, align 8
  %267 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 8
  %.7138.i = select i1 %.not157.i, ptr %267, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %267
  %268 = getelementptr inbounds i8, ptr %.01434.i, i64 56
  %269 = load ptr, ptr %268, align 8
  %270 = load ptr, ptr %13, align 8
  %271 = call i8 %5(ptr align 1 %6, ptr align 1 %269, ptr align 1 %270) #18
  %.not158.i = icmp eq i8 %271, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  %272 = load i64, ptr %268, align 8
  store i64 %272, ptr %.sroa.speculated15.i, align 8
  %273 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 8
  %.8139.i = select i1 %.not158.i, ptr %273, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %273
  %274 = getelementptr inbounds i8, ptr %.01434.i, i64 64
  %275 = icmp eq ptr %.8.i, %0
  %276 = icmp eq ptr %.8139.i, %1
  %277 = select i1 %275, i1 true, i1 %276
  %.1146.i = select i1 %277, i64 %.01472.i, i64 %.01453.i
  %278 = add i64 %.01472.i, 8
  %.not.i61 = icmp ugt i64 %278, %.052
  %uglygep95 = getelementptr i8, ptr %.01434.i, i64 64
  br i1 %.not.i61, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %274, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %279 = and i64 %.052, 7
  %.not16.i = icmp eq i64 %279, 0
  br i1 %.not16.i, label %._crit_edge14.i, label %.cont.i.preheader

.cont.i.preheader:                                ; preds = %._crit_edge.i
  br label %.cont.i

.cont.i:                                          ; preds = %.cont.i, %.cont.i.preheader
  %.913.i = phi ptr [ %.9..i, %.cont.i ], [ %.0.lcssa.i, %.cont.i.preheader ]
  %.914012.i = phi ptr [ %..9140.i, %.cont.i ], [ %.0131.lcssa.i, %.cont.i.preheader ]
  %.014211.i = phi i64 [ %286, %.cont.i ], [ 0, %.cont.i.preheader ]
  %280 = shl nuw nsw i64 %.014211.i, 3
  %uglygep96 = getelementptr i8, ptr %.0143.lcssa.i, i64 %280
  %281 = load ptr, ptr %uglygep96, align 8
  %282 = load ptr, ptr %13, align 8
  %283 = call i8 %5(ptr align 1 %6, ptr align 1 %281, ptr align 1 %282) #18
  %.not150.i = icmp eq i8 %283, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.914012.i, ptr %.913.i
  %284 = load i64, ptr %uglygep96, align 8
  store i64 %284, ptr %.sroa.speculated.i, align 8
  %285 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %..9140.i = select i1 %.not150.i, ptr %285, ptr %.914012.i
  %.9..i = select i1 %.not150.i, ptr %.913.i, ptr %285
  %286 = add nuw nsw i64 %.014211.i, 1
  %exitcond.not.i62 = icmp eq i64 %279, %286
  br i1 %exitcond.not.i62, label %._crit_edge14.i, label %.cont.i

._crit_edge14.i:                                  ; preds = %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ]
  %287 = ptrtoint ptr %0 to i64
  %288 = ptrtoint ptr %.9.lcssa.i to i64
  %289 = sub nuw i64 %288, %287
  %290 = lshr i64 %289, 3
  %291 = lshr i64 %.052, 2
  %292 = icmp ule i64 %.0145.lcssa.i, %291
  %293 = icmp eq i64 %.052, %290
  %or.cond.i = select i1 %292, i1 true, i1 %293
  %294 = sub nuw i64 %.052, %290
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16267.exit, label %295

295:                                              ; preds = %._crit_edge14.i
  %296 = and i64 %289, -8
  %297 = getelementptr inbounds i8, ptr %0, i64 %296
  %298 = shl nuw i64 %294, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %297, ptr nonnull align 1 %1, i64 %298, i1 false)
  %299 = icmp ult i64 %294, 96
  br i1 %299, label %300, label %301

300:                                              ; preds = %295
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %297, i64 %294, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14517.exit.i

301:                                              ; preds = %295
  %302 = call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %297, i64 %294, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %302, label %303, label %sort.quadsort_swap__anon_14517.exit.i

303:                                              ; preds = %301
  %304 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %297, i64 %294, ptr nonnull align 1 %1, i64 %294, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %297, i64 %294, ptr nonnull align 1 %1, i64 %294, i64 %304, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14517.exit.i

sort.quadsort_swap__anon_14517.exit.i:            ; preds = %303, %301, %300
  %305 = icmp ult i64 %289, 768
  br i1 %305, label %306, label %307

306:                                              ; preds = %sort.quadsort_swap__anon_14517.exit.i
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %0, i64 %290, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

307:                                              ; preds = %sort.quadsort_swap__anon_14517.exit.i
  %308 = call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %0, i64 %290, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %308, label %309, label %common.ret

309:                                              ; preds = %307
  %310 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %0, i64 %290, ptr nonnull align 1 %1, i64 %290, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %0, i64 %290, ptr nonnull align 1 %1, i64 %290, i64 %310, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

sort.flux_default_partition__anon_16267.exit:     ; preds = %._crit_edge14.i
  %311 = lshr i64 %294, 5
  %312 = icmp ule i64 %290, %311
  %313 = icmp ult i64 %294, 97
  %314 = or i1 %313, %312
  br i1 %314, label %319, label %321

sort.quadsort_swap__anon_14517.exit63:            ; preds = %335, %333, %332, %321
  %315 = lshr i64 %289, 8
  %316 = icmp ule i64 %294, %315
  %317 = icmp ult i64 %289, 776
  %318 = or i1 %317, %316
  br i1 %318, label %337, label %12

319:                                              ; preds = %sort.flux_default_partition__anon_16267.exit
  %320 = icmp ult i64 %289, 8
  br i1 %320, label %common.ret, label %324

321:                                              ; preds = %sort.flux_default_partition__anon_16267.exit
  %322 = and i64 %289, -8
  %323 = getelementptr inbounds i8, ptr %0, i64 %322
  call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %323, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %13, i64 %294, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14517.exit63

324:                                              ; preds = %319
  %325 = icmp eq i64 %.052, %290
  br i1 %325, label %326, label %327

326:                                              ; preds = %324
  call fastcc void @sort.flux_reverse_partition__anon_16266(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %13, i64 %.052, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

327:                                              ; preds = %324
  %328 = and i64 %289, -8
  %329 = getelementptr inbounds i8, ptr %0, i64 %328
  %330 = shl nuw i64 %294, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %329, ptr nonnull align 1 %1, i64 %330, i1 false)
  %331 = icmp ult i64 %294, 96
  br i1 %331, label %332, label %333

332:                                              ; preds = %327
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %329, i64 %294, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14517.exit63

333:                                              ; preds = %327
  %334 = call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %329, i64 %294, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %334, label %335, label %sort.quadsort_swap__anon_14517.exit63

335:                                              ; preds = %333
  %336 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %329, i64 %294, ptr nonnull align 1 %1, i64 %294, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %329, i64 %294, ptr nonnull align 1 %1, i64 %294, i64 %336, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14517.exit63

337:                                              ; preds = %sort.quadsort_swap__anon_14517.exit63
  %338 = icmp ult i64 %289, 776
  br i1 %338, label %339, label %346

339:                                              ; preds = %337
  %340 = icmp ult i64 %289, 768
  br i1 %340, label %341, label %342

341:                                              ; preds = %339
  call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %0, i64 %290, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

342:                                              ; preds = %339
  %343 = call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %0, i64 %290, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %343, label %344, label %common.ret

344:                                              ; preds = %342
  %345 = call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %0, i64 %290, ptr nonnull align 1 %1, i64 %290, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %0, i64 %290, ptr nonnull align 1 %1, i64 %290, i64 %345, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret

346:                                              ; preds = %337
  call fastcc void @sort.flux_reverse_partition__anon_16266(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %13, i64 %290, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5) unnamed_addr #4 {
  %7 = shl nuw i64 %2, 3
  %8 = getelementptr inbounds i8, ptr %1, i64 %7
  %9 = getelementptr inbounds i8, ptr %8, i64 -8
  %10 = shl nuw i64 %3, 3
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = add nuw i64 %2, 1
  %13 = icmp uge i64 %12, %3
  %14 = add nuw i64 %3, 1
  %15 = icmp uge i64 %14, %2
  %16 = select i1 %13, i1 %15, i1 false
  %17 = icmp ugt i64 %2, 31
  %or.cond = select i1 %16, i1 %17, i1 false
  br i1 %or.cond, label %22, label %.critedge

.critedge:                                        ; preds = %39, %33, %28, %22, %6
  %18 = add nuw i64 %3, %2
  %19 = shl i64 %18, 3
  %20 = add i64 %19, -8
  %21 = getelementptr inbounds i8, ptr %0, i64 %20
  br label %.loopexit.outer.outer

22:                                               ; preds = %6
  %23 = getelementptr inbounds i8, ptr %1, i64 120
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %8, align 8
  %26 = tail call i8 %4(ptr align 1 %5, ptr align 1 %24, ptr align 1 %25) #18
  %27 = icmp eq i8 %26, 1
  br i1 %27, label %28, label %.critedge

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, ptr %8, i64 120
  %30 = load ptr, ptr %1, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i8 %4(ptr align 1 %5, ptr align 1 %30, ptr align 1 %31) #18
  %.not258 = icmp eq i8 %32, 1
  br i1 %.not258, label %.critedge, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, ptr %11, i64 -120
  %35 = load ptr, ptr %9, align 8
  %36 = load ptr, ptr %34, align 8
  %37 = tail call i8 %4(ptr align 1 %5, ptr align 1 %35, ptr align 1 %36) #18
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %.critedge

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, ptr %9, i64 -120
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr %11, align 8
  %43 = tail call i8 %4(ptr align 1 %5, ptr align 1 %41, ptr align 1 %42) #18
  %.not259 = icmp eq i8 %43, 1
  br i1 %.not259, label %.critedge, label %44

common.ret:                                       ; preds = %.lr.ph48, %.preheader
  ret void

44:                                               ; preds = %39
  tail call fastcc void @sort.parity_merge__anon_16232(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 1 %4, ptr align 1 %5)
  ret void

.loopexit.outer.outer:                            ; preds = %265, %.cont46.preheader, %.critedge
  %.0243.ph.ph = phi ptr [ %21, %.critedge ], [ %223, %.cont46.preheader ], [ %287, %265 ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %216, %.cont46.preheader ], [ %.5239, %265 ]
  %.0228.ph.ph = phi ptr [ %11, %.critedge ], [ %.5233.7, %.cont46.preheader ], [ %288, %265 ]
  %.0222.ph.ph = phi ptr [ %9, %.critedge ], [ %.5227.7, %.cont46.preheader ], [ %.2224, %265 ]
  %.0213.ph.ph = phi ptr [ %8, %.critedge ], [ %..4217.7, %.cont46.preheader ], [ %.3216, %265 ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46.preheader ], [ %.2, %265 ]
  br label %.loopexit.outer.outer27

.loopexit.outer.outer27:                          ; preds = %232, %.loopexit.outer.outer
  %.0243.ph.ph28 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %232 ]
  %.0234.ph.ph29 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %255, %232 ]
  %.0222.ph.ph30 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %232 ]
  %.0213.ph.ph31 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %256, %232 ]
  %.0.ph.ph32 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %232 ]
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %91, %.loopexit.outer.outer27
  %.0243.ph = phi ptr [ %.0243.ph.ph28, %.loopexit.outer.outer27 ], [ %113, %91 ]
  %.0234.ph = phi ptr [ %.0234.ph.ph29, %.loopexit.outer.outer27 ], [ %.3237, %91 ]
  %.0222.ph = phi ptr [ %.0222.ph.ph30, %.loopexit.outer.outer27 ], [ %114, %91 ]
  %.0.ph = phi ptr [ %.0.ph.ph32, %.loopexit.outer.outer27 ], [ %.3, %91 ]
  br label %.loopexit

.loopexit:                                        ; preds = %57, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %80, %57 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %81, %57 ]
  %45 = ptrtoint ptr %.0222.ph to i64
  %46 = ptrtoint ptr %.0 to i64
  %47 = sub nsw i64 %45, %46
  %48 = icmp sgt i64 %47, 64
  br i1 %48, label %.preheader12.preheader, label %.loopexit10

.preheader12.preheader:                           ; preds = %.loopexit
  br label %.preheader12

.loopexit10:                                      ; preds = %85, %.loopexit
  %.2245 = phi ptr [ %.3246, %85 ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %85 ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %.3225, %85 ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %85 ], [ %.0, %.loopexit ]
  %49 = ptrtoint ptr %.0228.ph.ph to i64
  %50 = ptrtoint ptr %.0213.ph.ph31 to i64
  %51 = sub nsw i64 %49, %50
  %52 = icmp sgt i64 %51, 64
  br i1 %52, label %.preheader7.preheader, label %.loopexit5

.preheader7.preheader:                            ; preds = %.loopexit10
  br label %.preheader7

.preheader12:                                     ; preds = %57, %.preheader12.preheader
  %lsr.iv = phi i64 [ %47, %.preheader12.preheader ], [ %lsr.iv.next, %57 ]
  %.3237 = phi ptr [ %80, %57 ], [ %.0234, %.preheader12.preheader ]
  %.3 = phi ptr [ %81, %57 ], [ %.0, %.preheader12.preheader ]
  %53 = getelementptr inbounds i8, ptr %.3, i64 56
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr %.0213.ph.ph31, align 8
  %56 = tail call i8 %4(ptr align 1 %5, ptr align 1 %54, ptr align 1 %55) #18
  %.not257 = icmp eq i8 %56, 1
  br i1 %.not257, label %.preheader9, label %57

.preheader9:                                      ; preds = %.preheader12
  br label %85

57:                                               ; preds = %.preheader12
  %58 = ptrtoint ptr %.0222.ph to i64
  %59 = load i64, ptr %.3, align 8
  store i64 %59, ptr %.3237, align 8
  %60 = getelementptr inbounds i8, ptr %.3237, i64 8
  %61 = getelementptr inbounds i8, ptr %.3, i64 8
  %62 = load i64, ptr %61, align 8
  store i64 %62, ptr %60, align 8
  %63 = getelementptr inbounds i8, ptr %.3237, i64 16
  %64 = getelementptr inbounds i8, ptr %.3, i64 16
  %65 = load i64, ptr %64, align 8
  store i64 %65, ptr %63, align 8
  %66 = getelementptr inbounds i8, ptr %.3237, i64 24
  %67 = getelementptr inbounds i8, ptr %.3, i64 24
  %68 = load i64, ptr %67, align 8
  store i64 %68, ptr %66, align 8
  %69 = getelementptr inbounds i8, ptr %.3237, i64 32
  %70 = getelementptr inbounds i8, ptr %.3, i64 32
  %71 = load i64, ptr %70, align 8
  store i64 %71, ptr %69, align 8
  %72 = getelementptr inbounds i8, ptr %.3237, i64 40
  %73 = getelementptr inbounds i8, ptr %.3, i64 40
  %74 = load i64, ptr %73, align 8
  store i64 %74, ptr %72, align 8
  %75 = getelementptr inbounds i8, ptr %.3237, i64 48
  %76 = getelementptr inbounds i8, ptr %.3, i64 48
  %77 = load i64, ptr %76, align 8
  store i64 %77, ptr %75, align 8
  %78 = getelementptr inbounds i8, ptr %.3237, i64 56
  %sunkaddr = getelementptr inbounds i8, ptr %.3, i64 56
  %79 = load i64, ptr %sunkaddr, align 8
  store i64 %79, ptr %78, align 8
  %80 = getelementptr inbounds i8, ptr %.3237, i64 64
  %81 = getelementptr inbounds i8, ptr %.3, i64 64
  %82 = ptrtoint ptr %81 to i64
  %83 = sub nuw i64 %58, %82
  %84 = icmp ult i64 %83, 65
  %lsr.iv.next = add i64 %lsr.iv, -64
  br i1 %84, label %.loopexit, label %.preheader12

85:                                               ; preds = %91, %.preheader9
  %lsr.iv90 = phi i64 [ %lsr.iv, %.preheader9 ], [ %lsr.iv.next91, %91 ]
  %.3246 = phi ptr [ %113, %91 ], [ %.0243.ph, %.preheader9 ]
  %.3225 = phi ptr [ %114, %91 ], [ %.0222.ph, %.preheader9 ]
  %86 = getelementptr inbounds i8, ptr %.3225, i64 -56
  %87 = load ptr, ptr %86, align 8
  %88 = load ptr, ptr %.0228.ph.ph, align 8
  %89 = tail call i8 %4(ptr align 1 %5, ptr align 1 %87, ptr align 1 %88) #18
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %.loopexit10

91:                                               ; preds = %85
  %92 = load i64, ptr %.3225, align 8
  store i64 %92, ptr %.3246, align 8
  %93 = getelementptr inbounds i8, ptr %.3246, i64 -8
  %94 = getelementptr inbounds i8, ptr %.3225, i64 -8
  %95 = load i64, ptr %94, align 8
  store i64 %95, ptr %93, align 8
  %96 = getelementptr inbounds i8, ptr %.3246, i64 -16
  %97 = getelementptr inbounds i8, ptr %.3225, i64 -16
  %98 = load i64, ptr %97, align 8
  store i64 %98, ptr %96, align 8
  %99 = getelementptr inbounds i8, ptr %.3246, i64 -24
  %100 = getelementptr inbounds i8, ptr %.3225, i64 -24
  %101 = load i64, ptr %100, align 8
  store i64 %101, ptr %99, align 8
  %102 = getelementptr inbounds i8, ptr %.3246, i64 -32
  %103 = getelementptr inbounds i8, ptr %.3225, i64 -32
  %104 = load i64, ptr %103, align 8
  store i64 %104, ptr %102, align 8
  %105 = getelementptr inbounds i8, ptr %.3246, i64 -40
  %106 = getelementptr inbounds i8, ptr %.3225, i64 -40
  %107 = load i64, ptr %106, align 8
  store i64 %107, ptr %105, align 8
  %108 = getelementptr inbounds i8, ptr %.3246, i64 -48
  %109 = getelementptr inbounds i8, ptr %.3225, i64 -48
  %110 = load i64, ptr %109, align 8
  store i64 %110, ptr %108, align 8
  %111 = getelementptr inbounds i8, ptr %.3246, i64 -56
  %sunkaddr96 = getelementptr inbounds i8, ptr %.3225, i64 -56
  %112 = load i64, ptr %sunkaddr96, align 8
  store i64 %112, ptr %111, align 8
  %113 = getelementptr inbounds i8, ptr %.3246, i64 -64
  %114 = getelementptr inbounds i8, ptr %.3225, i64 -64
  %lsr.iv.next91 = add i64 %lsr.iv90, -64
  %115 = icmp ult i64 %lsr.iv.next91, 65
  br i1 %115, label %.loopexit.outer, label %85

.loopexit5:                                       ; preds = %260, %.loopexit10
  %.4247 = phi ptr [ %.5248, %260 ], [ %.2245, %.loopexit10 ]
  %.4238 = phi ptr [ %.5239, %260 ], [ %.2236, %.loopexit10 ]
  %.2230 = phi ptr [ %.3231, %260 ], [ %.0228.ph.ph, %.loopexit10 ]
  %.2215 = phi ptr [ %.3216, %260 ], [ %.0213.ph.ph31, %.loopexit10 ]
  %116 = ptrtoint ptr %.4247 to i64
  %117 = ptrtoint ptr %.4238 to i64
  %118 = sub nuw i64 %116, %117
  %119 = icmp ult i64 %118, 128
  br i1 %119, label %.preheader2, label %.cont46.preheader

.cont46.preheader:                                ; preds = %.loopexit5
  %120 = load ptr, ptr %.2, align 8
  %121 = load ptr, ptr %.2215, align 8
  %122 = tail call i8 %4(ptr align 1 %5, ptr align 1 %120, ptr align 1 %121) #18
  %.not = icmp eq i8 %122, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  %123 = load i64, ptr %.sroa.speculated42, align 8
  store i64 %123, ptr %.4238, align 8
  %124 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 8
  %..4217 = select i1 %.not, ptr %124, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %124
  %125 = getelementptr inbounds i8, ptr %.4238, i64 8
  %126 = load ptr, ptr %.2224, align 8
  %127 = load ptr, ptr %.2230, align 8
  %128 = tail call i8 %4(ptr align 1 %5, ptr align 1 %126, ptr align 1 %127) #18
  %129 = icmp eq i8 %128, 1
  %.sroa.speculated105 = select i1 %129, ptr %.2224, ptr %.2230
  %130 = load i64, ptr %.sroa.speculated105, align 8
  store i64 %130, ptr %.4247, align 8
  %131 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 -8
  %.5233 = select i1 %129, ptr %.2230, ptr %131
  %.5227 = select i1 %129, ptr %131, ptr %.2224
  %132 = getelementptr inbounds i8, ptr %.4247, i64 -8
  %133 = load ptr, ptr %.4., align 8
  %134 = load ptr, ptr %..4217, align 8
  %135 = tail call i8 %4(ptr align 1 %5, ptr align 1 %133, ptr align 1 %134) #18
  %.not.1 = icmp eq i8 %135, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  %136 = load i64, ptr %.sroa.speculated42.1, align 8
  store i64 %136, ptr %125, align 8
  %137 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 8
  %..4217.1 = select i1 %.not.1, ptr %137, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %137
  %138 = getelementptr inbounds i8, ptr %.4238, i64 16
  %139 = load ptr, ptr %.5227, align 8
  %140 = load ptr, ptr %.5233, align 8
  %141 = tail call i8 %4(ptr align 1 %5, ptr align 1 %139, ptr align 1 %140) #18
  %142 = icmp eq i8 %141, 1
  %.sroa.speculated105.1 = select i1 %142, ptr %.5227, ptr %.5233
  %143 = load i64, ptr %.sroa.speculated105.1, align 8
  store i64 %143, ptr %132, align 8
  %144 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 -8
  %.5233.1 = select i1 %142, ptr %.5233, ptr %144
  %.5227.1 = select i1 %142, ptr %144, ptr %.5227
  %145 = getelementptr inbounds i8, ptr %.4247, i64 -16
  %146 = load ptr, ptr %.4..1, align 8
  %147 = load ptr, ptr %..4217.1, align 8
  %148 = tail call i8 %4(ptr align 1 %5, ptr align 1 %146, ptr align 1 %147) #18
  %.not.2 = icmp eq i8 %148, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  %149 = load i64, ptr %.sroa.speculated42.2, align 8
  store i64 %149, ptr %138, align 8
  %150 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 8
  %..4217.2 = select i1 %.not.2, ptr %150, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %150
  %151 = getelementptr inbounds i8, ptr %.4238, i64 24
  %152 = load ptr, ptr %.5227.1, align 8
  %153 = load ptr, ptr %.5233.1, align 8
  %154 = tail call i8 %4(ptr align 1 %5, ptr align 1 %152, ptr align 1 %153) #18
  %155 = icmp eq i8 %154, 1
  %.sroa.speculated105.2 = select i1 %155, ptr %.5227.1, ptr %.5233.1
  %156 = load i64, ptr %.sroa.speculated105.2, align 8
  store i64 %156, ptr %145, align 8
  %157 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 -8
  %.5233.2 = select i1 %155, ptr %.5233.1, ptr %157
  %.5227.2 = select i1 %155, ptr %157, ptr %.5227.1
  %158 = getelementptr inbounds i8, ptr %.4247, i64 -24
  %159 = load ptr, ptr %.4..2, align 8
  %160 = load ptr, ptr %..4217.2, align 8
  %161 = tail call i8 %4(ptr align 1 %5, ptr align 1 %159, ptr align 1 %160) #18
  %.not.3 = icmp eq i8 %161, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  %162 = load i64, ptr %.sroa.speculated42.3, align 8
  store i64 %162, ptr %151, align 8
  %163 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 8
  %..4217.3 = select i1 %.not.3, ptr %163, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %163
  %164 = getelementptr inbounds i8, ptr %.4238, i64 32
  %165 = load ptr, ptr %.5227.2, align 8
  %166 = load ptr, ptr %.5233.2, align 8
  %167 = tail call i8 %4(ptr align 1 %5, ptr align 1 %165, ptr align 1 %166) #18
  %168 = icmp eq i8 %167, 1
  %.sroa.speculated105.3 = select i1 %168, ptr %.5227.2, ptr %.5233.2
  %169 = load i64, ptr %.sroa.speculated105.3, align 8
  store i64 %169, ptr %158, align 8
  %170 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 -8
  %.5233.3 = select i1 %168, ptr %.5233.2, ptr %170
  %.5227.3 = select i1 %168, ptr %170, ptr %.5227.2
  %171 = getelementptr inbounds i8, ptr %.4247, i64 -32
  %172 = load ptr, ptr %.4..3, align 8
  %173 = load ptr, ptr %..4217.3, align 8
  %174 = tail call i8 %4(ptr align 1 %5, ptr align 1 %172, ptr align 1 %173) #18
  %.not.4 = icmp eq i8 %174, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  %175 = load i64, ptr %.sroa.speculated42.4, align 8
  store i64 %175, ptr %164, align 8
  %176 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 8
  %..4217.4 = select i1 %.not.4, ptr %176, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %176
  %177 = getelementptr inbounds i8, ptr %.4238, i64 40
  %178 = load ptr, ptr %.5227.3, align 8
  %179 = load ptr, ptr %.5233.3, align 8
  %180 = tail call i8 %4(ptr align 1 %5, ptr align 1 %178, ptr align 1 %179) #18
  %181 = icmp eq i8 %180, 1
  %.sroa.speculated105.4 = select i1 %181, ptr %.5227.3, ptr %.5233.3
  %182 = load i64, ptr %.sroa.speculated105.4, align 8
  store i64 %182, ptr %171, align 8
  %183 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 -8
  %.5233.4 = select i1 %181, ptr %.5233.3, ptr %183
  %.5227.4 = select i1 %181, ptr %183, ptr %.5227.3
  %184 = getelementptr inbounds i8, ptr %.4247, i64 -40
  %185 = load ptr, ptr %.4..4, align 8
  %186 = load ptr, ptr %..4217.4, align 8
  %187 = tail call i8 %4(ptr align 1 %5, ptr align 1 %185, ptr align 1 %186) #18
  %.not.5 = icmp eq i8 %187, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  %188 = load i64, ptr %.sroa.speculated42.5, align 8
  store i64 %188, ptr %177, align 8
  %189 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 8
  %..4217.5 = select i1 %.not.5, ptr %189, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %189
  %190 = getelementptr inbounds i8, ptr %.4238, i64 48
  %191 = load ptr, ptr %.5227.4, align 8
  %192 = load ptr, ptr %.5233.4, align 8
  %193 = tail call i8 %4(ptr align 1 %5, ptr align 1 %191, ptr align 1 %192) #18
  %194 = icmp eq i8 %193, 1
  %.sroa.speculated105.5 = select i1 %194, ptr %.5227.4, ptr %.5233.4
  %195 = load i64, ptr %.sroa.speculated105.5, align 8
  store i64 %195, ptr %184, align 8
  %196 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 -8
  %.5233.5 = select i1 %194, ptr %.5233.4, ptr %196
  %.5227.5 = select i1 %194, ptr %196, ptr %.5227.4
  %197 = getelementptr inbounds i8, ptr %.4247, i64 -48
  %198 = load ptr, ptr %.4..5, align 8
  %199 = load ptr, ptr %..4217.5, align 8
  %200 = tail call i8 %4(ptr align 1 %5, ptr align 1 %198, ptr align 1 %199) #18
  %.not.6 = icmp eq i8 %200, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  %201 = load i64, ptr %.sroa.speculated42.6, align 8
  store i64 %201, ptr %190, align 8
  %202 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 8
  %..4217.6 = select i1 %.not.6, ptr %202, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %202
  %203 = getelementptr inbounds i8, ptr %.4238, i64 56
  %204 = load ptr, ptr %.5227.5, align 8
  %205 = load ptr, ptr %.5233.5, align 8
  %206 = tail call i8 %4(ptr align 1 %5, ptr align 1 %204, ptr align 1 %205) #18
  %207 = icmp eq i8 %206, 1
  %.sroa.speculated105.6 = select i1 %207, ptr %.5227.5, ptr %.5233.5
  %208 = load i64, ptr %.sroa.speculated105.6, align 8
  store i64 %208, ptr %197, align 8
  %209 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 -8
  %.5233.6 = select i1 %207, ptr %.5233.5, ptr %209
  %.5227.6 = select i1 %207, ptr %209, ptr %.5227.5
  %210 = getelementptr inbounds i8, ptr %.4247, i64 -56
  %211 = load ptr, ptr %.4..6, align 8
  %212 = load ptr, ptr %..4217.6, align 8
  %213 = tail call i8 %4(ptr align 1 %5, ptr align 1 %211, ptr align 1 %212) #18
  %.not.7 = icmp eq i8 %213, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  %214 = load i64, ptr %.sroa.speculated42.7, align 8
  store i64 %214, ptr %203, align 8
  %215 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 8
  %..4217.7 = select i1 %.not.7, ptr %215, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %215
  %216 = getelementptr inbounds i8, ptr %.4238, i64 64
  %217 = load ptr, ptr %.5227.6, align 8
  %218 = load ptr, ptr %.5233.6, align 8
  %219 = tail call i8 %4(ptr align 1 %5, ptr align 1 %217, ptr align 1 %218) #18
  %220 = icmp eq i8 %219, 1
  %.sroa.speculated105.7 = select i1 %220, ptr %.5227.6, ptr %.5233.6
  %221 = load i64, ptr %.sroa.speculated105.7, align 8
  store i64 %221, ptr %210, align 8
  %222 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 -8
  %.5233.7 = select i1 %220, ptr %.5233.6, ptr %222
  %.5227.7 = select i1 %220, ptr %222, ptr %.5227.6
  %223 = getelementptr inbounds i8, ptr %.4247, i64 -64
  br label %.loopexit.outer.outer

.preheader2:                                      ; preds = %.loopexit5
  %224 = icmp ule ptr %.2, %.2224
  %225 = icmp ule ptr %.2215, %.2230
  %226 = select i1 %224, i1 %225, i1 false
  br i1 %226, label %.cont.preheader, label %.preheader1

.cont.preheader:                                  ; preds = %.preheader2
  br label %.cont

.preheader7:                                      ; preds = %232, %.preheader7.preheader
  %lsr.iv92 = phi i64 [ %51, %.preheader7.preheader ], [ %lsr.iv.next93, %232 ]
  %.5239 = phi ptr [ %255, %232 ], [ %.2236, %.preheader7.preheader ]
  %.3216 = phi ptr [ %256, %232 ], [ %.0213.ph.ph31, %.preheader7.preheader ]
  %227 = getelementptr inbounds i8, ptr %.3216, i64 56
  %228 = load ptr, ptr %.2, align 8
  %229 = load ptr, ptr %227, align 8
  %230 = tail call i8 %4(ptr align 1 %5, ptr align 1 %228, ptr align 1 %229) #18
  %231 = icmp eq i8 %230, 1
  br i1 %231, label %232, label %.preheader4

.preheader4:                                      ; preds = %.preheader7
  br label %260

232:                                              ; preds = %.preheader7
  %233 = ptrtoint ptr %.0228.ph.ph to i64
  %234 = load i64, ptr %.3216, align 8
  store i64 %234, ptr %.5239, align 8
  %235 = getelementptr inbounds i8, ptr %.5239, i64 8
  %236 = getelementptr inbounds i8, ptr %.3216, i64 8
  %237 = load i64, ptr %236, align 8
  store i64 %237, ptr %235, align 8
  %238 = getelementptr inbounds i8, ptr %.5239, i64 16
  %239 = getelementptr inbounds i8, ptr %.3216, i64 16
  %240 = load i64, ptr %239, align 8
  store i64 %240, ptr %238, align 8
  %241 = getelementptr inbounds i8, ptr %.5239, i64 24
  %242 = getelementptr inbounds i8, ptr %.3216, i64 24
  %243 = load i64, ptr %242, align 8
  store i64 %243, ptr %241, align 8
  %244 = getelementptr inbounds i8, ptr %.5239, i64 32
  %245 = getelementptr inbounds i8, ptr %.3216, i64 32
  %246 = load i64, ptr %245, align 8
  store i64 %246, ptr %244, align 8
  %247 = getelementptr inbounds i8, ptr %.5239, i64 40
  %248 = getelementptr inbounds i8, ptr %.3216, i64 40
  %249 = load i64, ptr %248, align 8
  store i64 %249, ptr %247, align 8
  %250 = getelementptr inbounds i8, ptr %.5239, i64 48
  %251 = getelementptr inbounds i8, ptr %.3216, i64 48
  %252 = load i64, ptr %251, align 8
  store i64 %252, ptr %250, align 8
  %253 = getelementptr inbounds i8, ptr %.5239, i64 56
  %sunkaddr97 = getelementptr inbounds i8, ptr %.3216, i64 56
  %254 = load i64, ptr %sunkaddr97, align 8
  store i64 %254, ptr %253, align 8
  %255 = getelementptr inbounds i8, ptr %.5239, i64 64
  %256 = getelementptr inbounds i8, ptr %.3216, i64 64
  %257 = ptrtoint ptr %256 to i64
  %258 = sub nuw i64 %233, %257
  %259 = icmp ult i64 %258, 65
  %lsr.iv.next93 = add i64 %lsr.iv92, -64
  br i1 %259, label %.loopexit.outer.outer27, label %.preheader7

260:                                              ; preds = %265, %.preheader4
  %lsr.iv94 = phi i64 [ %lsr.iv92, %.preheader4 ], [ %lsr.iv.next95, %265 ]
  %.5248 = phi ptr [ %287, %265 ], [ %.2245, %.preheader4 ]
  %.3231 = phi ptr [ %288, %265 ], [ %.0228.ph.ph, %.preheader4 ]
  %261 = getelementptr inbounds i8, ptr %.3231, i64 -56
  %262 = load ptr, ptr %.2224, align 8
  %263 = load ptr, ptr %261, align 8
  %264 = tail call i8 %4(ptr align 1 %5, ptr align 1 %262, ptr align 1 %263) #18
  %.not256 = icmp eq i8 %264, 1
  br i1 %.not256, label %.loopexit5, label %265

265:                                              ; preds = %260
  %266 = load i64, ptr %.3231, align 8
  store i64 %266, ptr %.5248, align 8
  %267 = getelementptr inbounds i8, ptr %.5248, i64 -8
  %268 = getelementptr inbounds i8, ptr %.3231, i64 -8
  %269 = load i64, ptr %268, align 8
  store i64 %269, ptr %267, align 8
  %270 = getelementptr inbounds i8, ptr %.5248, i64 -16
  %271 = getelementptr inbounds i8, ptr %.3231, i64 -16
  %272 = load i64, ptr %271, align 8
  store i64 %272, ptr %270, align 8
  %273 = getelementptr inbounds i8, ptr %.5248, i64 -24
  %274 = getelementptr inbounds i8, ptr %.3231, i64 -24
  %275 = load i64, ptr %274, align 8
  store i64 %275, ptr %273, align 8
  %276 = getelementptr inbounds i8, ptr %.5248, i64 -32
  %277 = getelementptr inbounds i8, ptr %.3231, i64 -32
  %278 = load i64, ptr %277, align 8
  store i64 %278, ptr %276, align 8
  %279 = getelementptr inbounds i8, ptr %.5248, i64 -40
  %280 = getelementptr inbounds i8, ptr %.3231, i64 -40
  %281 = load i64, ptr %280, align 8
  store i64 %281, ptr %279, align 8
  %282 = getelementptr inbounds i8, ptr %.5248, i64 -48
  %283 = getelementptr inbounds i8, ptr %.3231, i64 -48
  %284 = load i64, ptr %283, align 8
  store i64 %284, ptr %282, align 8
  %285 = getelementptr inbounds i8, ptr %.5248, i64 -56
  %sunkaddr98 = getelementptr inbounds i8, ptr %.3231, i64 -56
  %286 = load i64, ptr %sunkaddr98, align 8
  store i64 %286, ptr %285, align 8
  %287 = getelementptr inbounds i8, ptr %.5248, i64 -64
  %288 = getelementptr inbounds i8, ptr %.3231, i64 -64
  %lsr.iv.next95 = add i64 %lsr.iv94, -64
  %289 = icmp ult i64 %lsr.iv.next95, 65
  br i1 %289, label %.loopexit.outer.outer, label %260

.preheader1:                                      ; preds = %.cont, %.preheader2
  %.7241.lcssa = phi ptr [ %.4238, %.preheader2 ], [ %295, %.cont ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader2 ], [ %..6219, %.cont ]
  %.6.lcssa = phi ptr [ %.2, %.preheader2 ], [ %.6., %.cont ]
  %.not25341 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not25341, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader1
  br label %.lr.ph

.cont:                                            ; preds = %.cont, %.cont.preheader
  %.638 = phi ptr [ %.6., %.cont ], [ %.2, %.cont.preheader ]
  %.621937 = phi ptr [ %..6219, %.cont ], [ %.2215, %.cont.preheader ]
  %.724136 = phi ptr [ %295, %.cont ], [ %.4238, %.cont.preheader ]
  %290 = load ptr, ptr %.638, align 8
  %291 = load ptr, ptr %.621937, align 8
  %292 = tail call i8 %4(ptr align 1 %5, ptr align 1 %290, ptr align 1 %291) #18
  %.not255 = icmp eq i8 %292, 1
  %.sroa.speculated = select i1 %.not255, ptr %.621937, ptr %.638
  %293 = load i64, ptr %.sroa.speculated, align 8
  store i64 %293, ptr %.724136, align 8
  %294 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %..6219 = select i1 %.not255, ptr %294, ptr %.621937
  %.6. = select i1 %.not255, ptr %.638, ptr %294
  %295 = getelementptr inbounds i8, ptr %.724136, i64 8
  %296 = icmp ule ptr %.6., %.2224
  %297 = icmp ule ptr %..6219, %.2230
  %298 = select i1 %296, i1 %297, i1 false
  br i1 %298, label %.cont, label %.preheader1

.preheader:                                       ; preds = %.lr.ph, %.preheader1
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader1 ], [ %300, %.lr.ph ]
  %.not25445 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not25445, label %common.ret, label %.lr.ph48.preheader

.lr.ph48.preheader:                               ; preds = %.preheader
  br label %.lr.ph48

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.843 = phi ptr [ %301, %.lr.ph ], [ %.6.lcssa, %.lr.ph.preheader ]
  %.824242 = phi ptr [ %300, %.lr.ph ], [ %.7241.lcssa, %.lr.ph.preheader ]
  %299 = load i64, ptr %.843, align 8
  store i64 %299, ptr %.824242, align 8
  %300 = getelementptr inbounds i8, ptr %.824242, i64 8
  %301 = getelementptr inbounds i8, ptr %.843, i64 8
  %.not253 = icmp ugt ptr %301, %.2224
  br i1 %.not253, label %.preheader, label %.lr.ph

.lr.ph48:                                         ; preds = %.lr.ph48, %.lr.ph48.preheader
  %.822147 = phi ptr [ %304, %.lr.ph48 ], [ %.6219.lcssa, %.lr.ph48.preheader ]
  %.946 = phi ptr [ %303, %.lr.ph48 ], [ %.8242.lcssa, %.lr.ph48.preheader ]
  %302 = load i64, ptr %.822147, align 8
  store i64 %302, ptr %.946, align 8
  %303 = getelementptr inbounds i8, ptr %.946, i64 8
  %304 = getelementptr inbounds i8, ptr %.822147, i64 8
  %.not254 = icmp ugt ptr %304, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph48
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16203(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 1 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
._crit_edge:
  %.pre = add i64 %2, -1
  %9 = mul nuw i64 %6, %2
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = sub i64 0, %6
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = mul nuw i64 %6, %3
  %14 = getelementptr inbounds i8, ptr %12, i64 %13
  %15 = add i64 %.pre, %3
  %16 = mul nuw i64 %15, %6
  %17 = getelementptr inbounds i8, ptr %0, i64 %16
  %18 = icmp ult i64 %2, %3
  br i1 %18, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %._crit_edge
  %.066 = phi ptr [ %25, %.cont16 ], [ %0, %._crit_edge ]
  %.061 = phi ptr [ %., %.cont16 ], [ %10, %._crit_edge ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %._crit_edge ]
  %19 = shl nuw i64 %2, 1
  tail call void %8(ptr align 1 %5, i64 %19) #18
  %20 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.0, ptr nonnull align 1 %.061) #18
  %.not = icmp eq i8 %20, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  tail call void %7(ptr align 1 %.066, ptr align 1 %.sroa.speculated21) #18
  %.not88 = icmp eq i64 %.pre, 0
  br i1 %.not88, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %21 = icmp eq i8 %20, 1
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 %6
  %.0. = select i1 %21, ptr %.0, ptr %22
  %..061 = select i1 %21, ptr %22, ptr %.061
  %uglygep = getelementptr i8, ptr %.066, i64 %6
  br label %.cont

.cont16:                                          ; preds = %._crit_edge
  tail call void %8(ptr align 1 %5, i64 1) #18
  %23 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %10) #18
  %.not77 = icmp eq i8 %23, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %10, ptr %1
  tail call void %7(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated12) #18
  %24 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 %6
  %. = select i1 %.not77, ptr %24, ptr %10
  %.78 = select i1 %.not77, ptr %1, ptr %24
  %25 = getelementptr inbounds i8, ptr %0, i64 %6
  br label %.cont25

.cont:                                            ; preds = %.cont, %.cont.preheader
  %lsr.iv90 = phi i64 [ %.pre, %.cont.preheader ], [ %lsr.iv.next, %.cont ]
  %lsr.iv = phi ptr [ %uglygep, %.cont.preheader ], [ %uglygep89, %.cont ]
  %.385 = phi ptr [ %.3., %.cont ], [ %.0., %.cont.preheader ]
  %.36484 = phi ptr [ %..364, %.cont ], [ %..061, %.cont.preheader ]
  %.06882 = phi ptr [ %.169, %.cont ], [ %12, %.cont.preheader ]
  %.07081 = phi ptr [ %.171, %.cont ], [ %14, %.cont.preheader ]
  %.07280 = phi ptr [ %31, %.cont ], [ %17, %.cont.preheader ]
  %26 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.385, ptr align 1 %.36484) #18
  %.not76 = icmp eq i8 %26, 1
  %.sroa.speculated = select i1 %.not76, ptr %.36484, ptr %.385
  tail call void %7(ptr align 1 %lsr.iv, ptr align 1 %.sroa.speculated) #18
  %27 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  %..364 = select i1 %.not76, ptr %27, ptr %.36484
  %.3. = select i1 %.not76, ptr %.385, ptr %27
  %28 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.06882, ptr align 1 %.07081) #18
  %29 = icmp eq i8 %28, 1
  %.sroa.speculated40 = select i1 %29, ptr %.06882, ptr %.07081
  tail call void %7(ptr align 1 %.07280, ptr align 1 %.sroa.speculated40) #18
  %30 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 %11
  %.171 = select i1 %29, ptr %.07081, ptr %30
  %.169 = select i1 %29, ptr %30, ptr %.06882
  %31 = getelementptr inbounds i8, ptr %.07280, i64 %11
  %uglygep89 = getelementptr i8, ptr %lsr.iv, i64 %6
  %lsr.iv.next = add i64 %lsr.iv90, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %.cont, %.cont25
  %.072.lcssa = phi ptr [ %17, %.cont25 ], [ %31, %.cont ]
  %.070.lcssa = phi ptr [ %14, %.cont25 ], [ %.171, %.cont ]
  %.068.lcssa = phi ptr [ %12, %.cont25 ], [ %.169, %.cont ]
  %32 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.068.lcssa, ptr align 1 %.070.lcssa) #18
  %33 = icmp eq i8 %32, 1
  %.sroa.speculated46 = select i1 %33, ptr %.068.lcssa, ptr %.070.lcssa
  tail call void %7(ptr align 1 %.072.lcssa, ptr align 1 %.sroa.speculated46) #18
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quad_swap_merge__anon_16205(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nocapture nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5) unnamed_addr #4 {
.cont19:
  %6 = shl nuw i64 %4, 1
  %7 = getelementptr inbounds i8, ptr %0, i64 %6
  %8 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %0, ptr nonnull align 1 %7) #18
  %.not = icmp eq i8 %8, 1
  %.sroa.speculated15 = select i1 %.not, ptr %7, ptr %0
  tail call void %5(ptr nonnull align 1 %1, ptr nonnull align 1 %.sroa.speculated15) #18
  %9 = getelementptr inbounds i8, ptr %.sroa.speculated15, i64 %4
  %. = select i1 %.not, ptr %9, ptr %7
  %.187 = select i1 %.not, ptr %0, ptr %9
  %10 = getelementptr inbounds i8, ptr %1, i64 %4
  %11 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.187, ptr nonnull align 1 %.) #18
  %.not180 = icmp eq i8 %11, 1
  %12 = select i1 %.not180, ptr %., ptr %.187
  tail call void %5(ptr nonnull align 1 %10, ptr nonnull align 1 %12) #18
  %13 = getelementptr inbounds i8, ptr %0, i64 %4
  %14 = mul nuw i64 %4, 3
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = getelementptr inbounds i8, ptr %1, i64 %14
  %17 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %13, ptr nonnull align 1 %15) #18
  %18 = icmp eq i8 %17, 1
  %.sroa.speculated = select i1 %18, ptr %13, ptr %15
  tail call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %.sroa.speculated) #18
  %19 = sub i64 0, %4
  %20 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %19
  %.1164 = select i1 %18, ptr %15, ptr %20
  %.1 = select i1 %18, ptr %20, ptr %13
  %21 = getelementptr inbounds i8, ptr %16, i64 %19
  %22 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.1, ptr nonnull align 1 %.1164) #18
  %23 = icmp eq i8 %22, 1
  %.0165 = select i1 %23, ptr %.1, ptr %.1164
  tail call void %5(ptr nonnull align 1 %21, ptr nonnull align 1 %.0165) #18
  %24 = shl nuw i64 %4, 2
  %25 = getelementptr inbounds i8, ptr %1, i64 %24
  %26 = getelementptr inbounds i8, ptr %0, i64 %24
  %27 = getelementptr inbounds i8, ptr %26, i64 %6
  %28 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %26, ptr nonnull align 1 %27) #18
  %.not181 = icmp eq i8 %28, 1
  %.sroa.speculated50 = select i1 %.not181, ptr %27, ptr %26
  tail call void %5(ptr nonnull align 1 %25, ptr nonnull align 1 %.sroa.speculated50) #18
  %29 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 %4
  %.0168 = select i1 %.not181, ptr %29, ptr %27
  %.0166 = select i1 %.not181, ptr %26, ptr %29
  %30 = getelementptr inbounds i8, ptr %25, i64 %4
  %31 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.0166, ptr nonnull align 1 %.0168) #18
  %.not182 = icmp eq i8 %31, 1
  %32 = select i1 %.not182, ptr %.0168, ptr %.0166
  tail call void %5(ptr nonnull align 1 %30, ptr align 1 %32) #18
  %33 = getelementptr inbounds i8, ptr %26, i64 %4
  %34 = getelementptr inbounds i8, ptr %26, i64 %14
  %35 = getelementptr inbounds i8, ptr %25, i64 %14
  %36 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %33, ptr nonnull align 1 %34) #18
  %37 = icmp eq i8 %36, 1
  %.sroa.speculated41 = select i1 %37, ptr %33, ptr %34
  tail call void %5(ptr nonnull align 1 %35, ptr nonnull align 1 %.sroa.speculated41) #18
  %38 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 %19
  %.1169 = select i1 %37, ptr %34, ptr %38
  %.1167 = select i1 %37, ptr %38, ptr %33
  %39 = getelementptr inbounds i8, ptr %35, i64 %19
  %40 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.1167, ptr nonnull align 1 %.1169) #18
  %41 = icmp eq i8 %40, 1
  %.0170 = select i1 %41, ptr %.1167, ptr %.1169
  tail call void %5(ptr nonnull align 1 %39, ptr align 1 %.0170) #18
  %42 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %1, ptr nonnull align 1 %25) #18
  %.not183 = icmp eq i8 %42, 1
  %.sroa.speculated128 = select i1 %.not183, ptr %25, ptr %1
  tail call void %5(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated128) #18
  %43 = getelementptr inbounds i8, ptr %.sroa.speculated128, i64 %4
  %.0173 = select i1 %.not183, ptr %43, ptr %25
  %.0171 = select i1 %.not183, ptr %1, ptr %43
  %44 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.0171, ptr nonnull align 1 %.0173) #18
  %.not184 = icmp eq i8 %44, 1
  %.sroa.speculated119 = select i1 %.not184, ptr %.0173, ptr %.0171
  tail call void %5(ptr nonnull align 1 %13, ptr nonnull align 1 %.sroa.speculated119) #18
  %45 = getelementptr inbounds i8, ptr %.sroa.speculated119, i64 %4
  %.1174 = select i1 %.not184, ptr %45, ptr %.0173
  %.1172 = select i1 %.not184, ptr %.0171, ptr %45
  %46 = getelementptr inbounds i8, ptr %13, i64 %4
  %47 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.1172, ptr align 1 %.1174) #18
  %.not185 = icmp eq i8 %47, 1
  %.sroa.speculated110 = select i1 %.not185, ptr %.1174, ptr %.1172
  tail call void %5(ptr nonnull align 1 %46, ptr align 1 %.sroa.speculated110) #18
  %48 = getelementptr inbounds i8, ptr %.sroa.speculated110, i64 %4
  %.2175 = select i1 %.not185, ptr %48, ptr %.1174
  %.2 = select i1 %.not185, ptr %.1172, ptr %48
  %49 = getelementptr inbounds i8, ptr %46, i64 %4
  %50 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.2, ptr align 1 %.2175) #18
  %.not186 = icmp eq i8 %50, 1
  %51 = select i1 %.not186, ptr %.2175, ptr %.2
  tail call void %5(ptr nonnull align 1 %49, ptr align 1 %51) #18
  %52 = mul nuw i64 %4, 7
  %53 = getelementptr inbounds i8, ptr %1, i64 %52
  %54 = getelementptr inbounds i8, ptr %0, i64 %52
  %55 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %53) #18
  %56 = icmp eq i8 %55, 1
  %.sroa.speculated101 = select i1 %56, ptr %16, ptr %53
  tail call void %5(ptr nonnull align 1 %54, ptr nonnull align 1 %.sroa.speculated101) #18
  %57 = getelementptr inbounds i8, ptr %.sroa.speculated101, i64 %19
  %.3176 = select i1 %56, ptr %53, ptr %57
  %.3 = select i1 %56, ptr %57, ptr %16
  %58 = getelementptr inbounds i8, ptr %54, i64 %19
  %59 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.3, ptr nonnull align 1 %.3176) #18
  %60 = icmp eq i8 %59, 1
  %.sroa.speculated92 = select i1 %60, ptr %.3, ptr %.3176
  tail call void %5(ptr nonnull align 1 %58, ptr nonnull align 1 %.sroa.speculated92) #18
  %61 = getelementptr inbounds i8, ptr %.sroa.speculated92, i64 %19
  %.4177 = select i1 %60, ptr %.3176, ptr %61
  %.4 = select i1 %60, ptr %61, ptr %.3
  %62 = getelementptr inbounds i8, ptr %58, i64 %19
  %63 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4, ptr align 1 %.4177) #18
  %64 = icmp eq i8 %63, 1
  %.sroa.speculated83 = select i1 %64, ptr %.4, ptr %.4177
  tail call void %5(ptr nonnull align 1 %62, ptr align 1 %.sroa.speculated83) #18
  %65 = getelementptr inbounds i8, ptr %.sroa.speculated83, i64 %19
  %.5178 = select i1 %64, ptr %.4177, ptr %65
  %.5 = select i1 %64, ptr %65, ptr %.4
  %66 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.5, ptr align 1 %.5178) #18
  %67 = icmp eq i8 %66, 1
  %.0179 = select i1 %67, ptr %.5, ptr %.5178
  %68 = getelementptr inbounds i8, ptr %62, i64 %19
  tail call void %5(ptr nonnull align 1 %68, ptr align 1 %.0179) #18
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8, ptr nocapture nonnull readonly align 1 %9) unnamed_addr #4 {
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = icmp eq i64 %1, %4
  br i1 %16, label %common.ret, label %17

common.ret:                                       ; preds = %182, %.preheader, %17, %10
  ret void

17:                                               ; preds = %10
  %18 = add i64 %4, -1
  %19 = mul nuw i64 %18, %7
  %20 = getelementptr inbounds i8, ptr %0, i64 %19
  store ptr %20, ptr %15, align 8
  %21 = add i64 %1, -1
  %22 = mul nuw i64 %21, %7
  %23 = getelementptr inbounds i8, ptr %0, i64 %22
  tail call void %9(ptr align 1 %6, i64 1) #18
  %24 = getelementptr inbounds i8, ptr %20, i64 %7
  %25 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %20, ptr nonnull align 1 %24) #18
  %.not = icmp eq i8 %25, 1
  br i1 %.not, label %26, label %common.ret

26:                                               ; preds = %17
  %27 = sub nuw i64 %1, %4
  %28 = icmp ule i64 %1, %3
  %29 = icmp ugt i64 %27, 63
  %30 = select i1 %28, i1 %29, i1 false
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %27, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  %32 = mul nuw i64 %7, %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %32, i1 false)
  ret void

33:                                               ; preds = %26
  %34 = mul nuw i64 %27, %7
  %35 = mul nuw i64 %7, %4
  %36 = getelementptr inbounds i8, ptr %0, i64 %35
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %36, i64 %34, i1 false)
  %37 = add i64 %27, -1
  %38 = mul nuw i64 %37, %7
  %39 = getelementptr inbounds i8, ptr %2, i64 %38
  store ptr %39, ptr %13, align 8
  %40 = shl nuw i64 %7, 4
  %41 = getelementptr inbounds i8, ptr %0, i64 %40
  %42 = getelementptr inbounds i8, ptr %2, i64 %40
  %43 = icmp sgt i64 %19, %40
  %44 = icmp sgt i64 %38, %40
  %45 = select i1 %43, i1 %44, i1 false
  br i1 %45, label %.preheader29.lr.ph, label %.loopexit31

.preheader29.lr.ph:                               ; preds = %33
  %.neg = mul i64 %7, -15
  %46 = sub i64 0, %7
  %47 = mul i64 %7, -14
  %48 = mul i64 %7, -13
  %49 = mul i64 %7, -12
  %50 = mul i64 %7, -11
  %51 = mul i64 %7, -10
  %52 = mul i64 %7, -9
  %53 = mul i64 %7, -8
  %54 = mul i64 %7, -7
  %55 = mul i64 %7, -6
  %56 = mul i64 %7, -5
  %57 = mul i64 %7, -4
  %58 = mul i64 %7, -3
  %59 = mul i64 %7, -2
  %60 = mul i64 %7, -14
  %61 = mul i64 %7, -13
  %62 = mul i64 %7, -12
  %63 = mul i64 %7, -11
  %64 = mul i64 %7, -10
  %65 = mul i64 %7, -9
  %66 = mul i64 %7, -8
  %67 = mul i64 %7, -7
  %68 = mul i64 %7, -6
  %69 = mul i64 %7, -5
  %70 = mul i64 %7, -4
  %71 = mul i64 %7, -3
  %72 = mul i64 %7, -2
  br label %.preheader29

.loopexit28:                                      ; preds = %99
  %uglygep308 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next251
  store ptr %uglygep308, ptr %15, align 8
  %uglygep258 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep259 = getelementptr i8, ptr %uglygep258, i64 %lsr.iv.next251
  store ptr %uglygep259, ptr %14, align 8
  %uglygep214 = getelementptr i8, ptr %.promoted, i64 %lsr.iv
  %uglygep256 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep257 = getelementptr i8, ptr %uglygep256, i64 %lsr.iv.next251
  %uglygep307 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next251
  br label %75

.loopexit30:                                      ; preds = %95
  %uglygep217 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next
  store ptr %uglygep217, ptr %13, align 8
  %uglygep182 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next
  store ptr %uglygep182, ptr %14, align 8
  %uglygep181 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next
  %uglygep216 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next
  br label %75

.loopexit31:                                      ; preds = %.loopexit, %33
  %73 = phi ptr [ %20, %33 ], [ %88, %.loopexit ]
  %74 = phi ptr [ %39, %33 ], [ %90, %.loopexit ]
  %.lcssa4648.lcssa = phi ptr [ %23, %33 ], [ %107, %.loopexit ]
  store ptr %.lcssa4648.lcssa, ptr %14, align 8
  br label %75

75:                                               ; preds = %.loopexit31, %.loopexit30, %.loopexit28
  %.promoted5285 = phi ptr [ %.lcssa4648.lcssa, %.loopexit31 ], [ %uglygep181, %.loopexit30 ], [ %uglygep257, %.loopexit28 ]
  %76 = phi ptr [ %73, %.loopexit31 ], [ %.promoted39, %.loopexit30 ], [ %uglygep307, %.loopexit28 ]
  %77 = phi ptr [ %74, %.loopexit31 ], [ %uglygep216, %.loopexit30 ], [ %uglygep214, %.loopexit28 ]
  %78 = ptrtoint ptr %2 to i64
  %79 = add nuw i64 %78, %7
  %80 = ptrtoint ptr %0 to i64
  %81 = add nuw i64 %80, %7
  %82 = ptrtoint ptr %77 to i64
  %83 = icmp ult i64 %79, %82
  %84 = ptrtoint ptr %76 to i64
  %85 = icmp ult i64 %81, %84
  %86 = select i1 %83, i1 %85, i1 false
  br i1 %86, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %75
  %87 = sub i64 0, %7
  br label %140

.loopexit:                                        ; preds = %106
  %88 = load ptr, ptr %15, align 8
  %89 = icmp ugt ptr %88, %41
  %90 = load ptr, ptr %13, align 8
  %91 = icmp ugt ptr %90, %42
  %92 = select i1 %89, i1 %91, i1 false
  br i1 %92, label %.preheader29, label %.loopexit31

.preheader29:                                     ; preds = %.loopexit, %.preheader29.lr.ph
  %.promoted = phi ptr [ %39, %.preheader29.lr.ph ], [ %90, %.loopexit ]
  %.promoted39 = phi ptr [ %20, %.preheader29.lr.ph ], [ %88, %.loopexit ]
  %.lcssa464850 = phi ptr [ %23, %.preheader29.lr.ph ], [ %107, %.loopexit ]
  %uglygep183 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep185 = getelementptr i8, ptr %.lcssa464850, i64 %47
  %uglygep187 = getelementptr i8, ptr %.lcssa464850, i64 %48
  %uglygep189 = getelementptr i8, ptr %.lcssa464850, i64 %49
  %uglygep191 = getelementptr i8, ptr %.lcssa464850, i64 %50
  %uglygep193 = getelementptr i8, ptr %.lcssa464850, i64 %51
  %uglygep195 = getelementptr i8, ptr %.lcssa464850, i64 %52
  %uglygep197 = getelementptr i8, ptr %.lcssa464850, i64 %53
  %uglygep199 = getelementptr i8, ptr %.lcssa464850, i64 %54
  %uglygep201 = getelementptr i8, ptr %.lcssa464850, i64 %55
  %uglygep203 = getelementptr i8, ptr %.lcssa464850, i64 %56
  %uglygep205 = getelementptr i8, ptr %.lcssa464850, i64 %57
  %uglygep207 = getelementptr i8, ptr %.lcssa464850, i64 %58
  %uglygep209 = getelementptr i8, ptr %.lcssa464850, i64 %59
  %uglygep211 = getelementptr i8, ptr %.lcssa464850, i64 %46
  %uglygep219 = getelementptr i8, ptr %.promoted, i64 %.neg
  %uglygep222 = getelementptr i8, ptr %.promoted, i64 %47
  %uglygep224 = getelementptr i8, ptr %.promoted, i64 %48
  %uglygep226 = getelementptr i8, ptr %.promoted, i64 %49
  %uglygep228 = getelementptr i8, ptr %.promoted, i64 %50
  %uglygep230 = getelementptr i8, ptr %.promoted, i64 %51
  %uglygep232 = getelementptr i8, ptr %.promoted, i64 %52
  %uglygep234 = getelementptr i8, ptr %.promoted, i64 %53
  %uglygep236 = getelementptr i8, ptr %.promoted, i64 %54
  %uglygep238 = getelementptr i8, ptr %.promoted, i64 %55
  %uglygep240 = getelementptr i8, ptr %.promoted, i64 %56
  %uglygep242 = getelementptr i8, ptr %.promoted, i64 %57
  %uglygep244 = getelementptr i8, ptr %.promoted, i64 %58
  %uglygep246 = getelementptr i8, ptr %.promoted, i64 %59
  %uglygep248 = getelementptr i8, ptr %.promoted, i64 %46
  br label %93

93:                                               ; preds = %95, %.preheader29
  %lsr.iv = phi i64 [ 0, %.preheader29 ], [ %lsr.iv.next, %95 ]
  %uglygep180 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep215 = getelementptr i8, ptr %.promoted, i64 %lsr.iv
  %uglygep220 = getelementptr i8, ptr %uglygep219, i64 %lsr.iv
  tail call void %9(ptr align 1 %6, i64 1) #18
  %94 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %.promoted39, ptr align 1 %uglygep220) #18
  %.not21 = icmp eq i8 %94, 1
  br i1 %.not21, label %.preheader27, label %95

.preheader27:                                     ; preds = %93
  %uglygep213 = getelementptr i8, ptr %.promoted, i64 %lsr.iv
  store ptr %uglygep213, ptr %13, align 8
  %uglygep254 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep260 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep261 = getelementptr i8, ptr %uglygep260, i64 %lsr.iv
  %uglygep263 = getelementptr i8, ptr %.lcssa464850, i64 %60
  %uglygep264 = getelementptr i8, ptr %uglygep263, i64 %lsr.iv
  %uglygep266 = getelementptr i8, ptr %.lcssa464850, i64 %61
  %uglygep267 = getelementptr i8, ptr %uglygep266, i64 %lsr.iv
  %uglygep269 = getelementptr i8, ptr %.lcssa464850, i64 %62
  %uglygep270 = getelementptr i8, ptr %uglygep269, i64 %lsr.iv
  %uglygep272 = getelementptr i8, ptr %.lcssa464850, i64 %63
  %uglygep273 = getelementptr i8, ptr %uglygep272, i64 %lsr.iv
  %uglygep275 = getelementptr i8, ptr %.lcssa464850, i64 %64
  %uglygep276 = getelementptr i8, ptr %uglygep275, i64 %lsr.iv
  %uglygep278 = getelementptr i8, ptr %.lcssa464850, i64 %65
  %uglygep279 = getelementptr i8, ptr %uglygep278, i64 %lsr.iv
  %uglygep281 = getelementptr i8, ptr %.lcssa464850, i64 %66
  %uglygep282 = getelementptr i8, ptr %uglygep281, i64 %lsr.iv
  %uglygep284 = getelementptr i8, ptr %.lcssa464850, i64 %67
  %uglygep285 = getelementptr i8, ptr %uglygep284, i64 %lsr.iv
  %uglygep287 = getelementptr i8, ptr %.lcssa464850, i64 %68
  %uglygep288 = getelementptr i8, ptr %uglygep287, i64 %lsr.iv
  %uglygep290 = getelementptr i8, ptr %.lcssa464850, i64 %69
  %uglygep291 = getelementptr i8, ptr %uglygep290, i64 %lsr.iv
  %uglygep293 = getelementptr i8, ptr %.lcssa464850, i64 %70
  %uglygep294 = getelementptr i8, ptr %uglygep293, i64 %lsr.iv
  %uglygep296 = getelementptr i8, ptr %.lcssa464850, i64 %71
  %uglygep297 = getelementptr i8, ptr %uglygep296, i64 %lsr.iv
  %uglygep299 = getelementptr i8, ptr %.lcssa464850, i64 %72
  %uglygep300 = getelementptr i8, ptr %uglygep299, i64 %lsr.iv
  %uglygep302 = getelementptr i8, ptr %.lcssa464850, i64 %46
  %uglygep303 = getelementptr i8, ptr %uglygep302, i64 %lsr.iv
  %uglygep310 = getelementptr i8, ptr %.promoted39, i64 %.neg
  %uglygep313 = getelementptr i8, ptr %.promoted39, i64 %60
  %uglygep315 = getelementptr i8, ptr %.promoted39, i64 %61
  %uglygep317 = getelementptr i8, ptr %.promoted39, i64 %62
  %uglygep319 = getelementptr i8, ptr %.promoted39, i64 %63
  %uglygep321 = getelementptr i8, ptr %.promoted39, i64 %64
  %uglygep323 = getelementptr i8, ptr %.promoted39, i64 %65
  %uglygep325 = getelementptr i8, ptr %.promoted39, i64 %66
  %uglygep327 = getelementptr i8, ptr %.promoted39, i64 %67
  %uglygep329 = getelementptr i8, ptr %.promoted39, i64 %68
  %uglygep331 = getelementptr i8, ptr %.promoted39, i64 %69
  %uglygep333 = getelementptr i8, ptr %.promoted39, i64 %70
  %uglygep335 = getelementptr i8, ptr %.promoted39, i64 %71
  %uglygep337 = getelementptr i8, ptr %.promoted39, i64 %72
  %uglygep339 = getelementptr i8, ptr %.promoted39, i64 %46
  br label %96

95:                                               ; preds = %93
  tail call void %8(ptr align 1 %uglygep180, ptr align 1 %uglygep215) #18
  %uglygep212 = getelementptr i8, ptr %uglygep211, i64 %lsr.iv
  %uglygep249 = getelementptr i8, ptr %uglygep248, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep212, ptr align 1 %uglygep249) #18
  %uglygep210 = getelementptr i8, ptr %uglygep209, i64 %lsr.iv
  %uglygep247 = getelementptr i8, ptr %uglygep246, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep210, ptr align 1 %uglygep247) #18
  %uglygep208 = getelementptr i8, ptr %uglygep207, i64 %lsr.iv
  %uglygep245 = getelementptr i8, ptr %uglygep244, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep208, ptr align 1 %uglygep245) #18
  %uglygep206 = getelementptr i8, ptr %uglygep205, i64 %lsr.iv
  %uglygep243 = getelementptr i8, ptr %uglygep242, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep206, ptr align 1 %uglygep243) #18
  %uglygep204 = getelementptr i8, ptr %uglygep203, i64 %lsr.iv
  %uglygep241 = getelementptr i8, ptr %uglygep240, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep204, ptr align 1 %uglygep241) #18
  %uglygep202 = getelementptr i8, ptr %uglygep201, i64 %lsr.iv
  %uglygep239 = getelementptr i8, ptr %uglygep238, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep202, ptr align 1 %uglygep239) #18
  %uglygep200 = getelementptr i8, ptr %uglygep199, i64 %lsr.iv
  %uglygep237 = getelementptr i8, ptr %uglygep236, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep200, ptr align 1 %uglygep237) #18
  %uglygep198 = getelementptr i8, ptr %uglygep197, i64 %lsr.iv
  %uglygep235 = getelementptr i8, ptr %uglygep234, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep198, ptr align 1 %uglygep235) #18
  %uglygep196 = getelementptr i8, ptr %uglygep195, i64 %lsr.iv
  %uglygep233 = getelementptr i8, ptr %uglygep232, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep196, ptr align 1 %uglygep233) #18
  %uglygep194 = getelementptr i8, ptr %uglygep193, i64 %lsr.iv
  %uglygep231 = getelementptr i8, ptr %uglygep230, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep194, ptr align 1 %uglygep231) #18
  %uglygep192 = getelementptr i8, ptr %uglygep191, i64 %lsr.iv
  %uglygep229 = getelementptr i8, ptr %uglygep228, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep192, ptr align 1 %uglygep229) #18
  %uglygep190 = getelementptr i8, ptr %uglygep189, i64 %lsr.iv
  %uglygep227 = getelementptr i8, ptr %uglygep226, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep190, ptr align 1 %uglygep227) #18
  %uglygep188 = getelementptr i8, ptr %uglygep187, i64 %lsr.iv
  %uglygep225 = getelementptr i8, ptr %uglygep224, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep188, ptr align 1 %uglygep225) #18
  %uglygep186 = getelementptr i8, ptr %uglygep185, i64 %lsr.iv
  %uglygep223 = getelementptr i8, ptr %uglygep222, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep186, ptr align 1 %uglygep223) #18
  %uglygep184 = getelementptr i8, ptr %uglygep183, i64 %lsr.iv
  %uglygep221 = getelementptr i8, ptr %uglygep219, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep184, ptr align 1 %uglygep221) #18
  %lsr.iv.next = sub i64 %lsr.iv, %40
  %uglygep218 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next
  %.not25 = icmp ugt ptr %uglygep218, %42
  br i1 %.not25, label %93, label %.loopexit30

96:                                               ; preds = %99, %.preheader27
  %lsr.iv250 = phi i64 [ 0, %.preheader27 ], [ %lsr.iv.next251, %99 ]
  %uglygep255 = getelementptr i8, ptr %uglygep254, i64 %lsr.iv250
  %uglygep306 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv250
  %uglygep311 = getelementptr i8, ptr %uglygep310, i64 %lsr.iv250
  tail call void %9(ptr align 1 %6, i64 1) #18
  %97 = tail call i8 %5(ptr align 1 %6, ptr align 1 %uglygep311, ptr align 1 %uglygep213) #18
  %98 = icmp eq i8 %97, 1
  br i1 %98, label %99, label %.preheader26

.preheader26:                                     ; preds = %96
  %uglygep305 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv250
  store ptr %uglygep305, ptr %15, align 8
  %uglygep252 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep253 = getelementptr i8, ptr %uglygep252, i64 %lsr.iv250
  br label %100

99:                                               ; preds = %96
  tail call void %8(ptr align 1 %uglygep255, ptr align 1 %uglygep306) #18
  %uglygep304 = getelementptr i8, ptr %uglygep303, i64 %lsr.iv250
  %uglygep340 = getelementptr i8, ptr %uglygep339, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep304, ptr align 1 %uglygep340) #18
  %uglygep301 = getelementptr i8, ptr %uglygep300, i64 %lsr.iv250
  %uglygep338 = getelementptr i8, ptr %uglygep337, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep301, ptr align 1 %uglygep338) #18
  %uglygep298 = getelementptr i8, ptr %uglygep297, i64 %lsr.iv250
  %uglygep336 = getelementptr i8, ptr %uglygep335, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep298, ptr align 1 %uglygep336) #18
  %uglygep295 = getelementptr i8, ptr %uglygep294, i64 %lsr.iv250
  %uglygep334 = getelementptr i8, ptr %uglygep333, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep295, ptr align 1 %uglygep334) #18
  %uglygep292 = getelementptr i8, ptr %uglygep291, i64 %lsr.iv250
  %uglygep332 = getelementptr i8, ptr %uglygep331, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep292, ptr align 1 %uglygep332) #18
  %uglygep289 = getelementptr i8, ptr %uglygep288, i64 %lsr.iv250
  %uglygep330 = getelementptr i8, ptr %uglygep329, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep289, ptr align 1 %uglygep330) #18
  %uglygep286 = getelementptr i8, ptr %uglygep285, i64 %lsr.iv250
  %uglygep328 = getelementptr i8, ptr %uglygep327, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep286, ptr align 1 %uglygep328) #18
  %uglygep283 = getelementptr i8, ptr %uglygep282, i64 %lsr.iv250
  %uglygep326 = getelementptr i8, ptr %uglygep325, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep283, ptr align 1 %uglygep326) #18
  %uglygep280 = getelementptr i8, ptr %uglygep279, i64 %lsr.iv250
  %uglygep324 = getelementptr i8, ptr %uglygep323, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep280, ptr align 1 %uglygep324) #18
  %uglygep277 = getelementptr i8, ptr %uglygep276, i64 %lsr.iv250
  %uglygep322 = getelementptr i8, ptr %uglygep321, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep277, ptr align 1 %uglygep322) #18
  %uglygep274 = getelementptr i8, ptr %uglygep273, i64 %lsr.iv250
  %uglygep320 = getelementptr i8, ptr %uglygep319, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep274, ptr align 1 %uglygep320) #18
  %uglygep271 = getelementptr i8, ptr %uglygep270, i64 %lsr.iv250
  %uglygep318 = getelementptr i8, ptr %uglygep317, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep271, ptr align 1 %uglygep318) #18
  %uglygep268 = getelementptr i8, ptr %uglygep267, i64 %lsr.iv250
  %uglygep316 = getelementptr i8, ptr %uglygep315, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep268, ptr align 1 %uglygep316) #18
  %uglygep265 = getelementptr i8, ptr %uglygep264, i64 %lsr.iv250
  %uglygep314 = getelementptr i8, ptr %uglygep313, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep265, ptr align 1 %uglygep314) #18
  %uglygep262 = getelementptr i8, ptr %uglygep261, i64 %lsr.iv250
  %uglygep312 = getelementptr i8, ptr %uglygep310, i64 %lsr.iv250
  tail call void %8(ptr align 1 %uglygep262, ptr align 1 %uglygep312) #18
  %lsr.iv.next251 = sub i64 %lsr.iv250, %40
  %uglygep309 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next251
  %.not24 = icmp ugt ptr %uglygep309, %41
  br i1 %.not24, label %96, label %.loopexit28

100:                                              ; preds = %106, %.preheader26
  %lsr.iv341 = phi i64 [ -8, %.preheader26 ], [ %math, %106 ]
  %101 = phi ptr [ %107, %106 ], [ %uglygep253, %.preheader26 ]
  %102 = load ptr, ptr %15, align 8
  %103 = load ptr, ptr %13, align 8
  %104 = getelementptr inbounds i8, ptr %103, i64 %46
  tail call void %9(ptr align 1 %6, i64 1) #18
  %105 = tail call i8 %5(ptr align 1 %6, ptr align 1 %102, ptr align 1 %104) #18
  %.not22 = icmp eq i8 %105, 1
  br i1 %.not22, label %113, label %109

106:                                              ; preds = %121, %117, %109
  %107 = phi ptr [ %119, %117 ], [ %132, %121 ], [ %111, %109 ]
  %108 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv341, i64 1)
  %math = extractvalue { i64, i1 } %108, 0
  %ov = extractvalue { i64, i1 } %108, 1
  br i1 %ov, label %.loopexit, label %100

109:                                              ; preds = %100
  tail call void %8(ptr align 1 %101, ptr align 1 %103) #18
  %110 = getelementptr inbounds i8, ptr %101, i64 %46
  tail call void %8(ptr align 1 %110, ptr align 1 %104) #18
  %111 = getelementptr inbounds i8, ptr %110, i64 %46
  %112 = getelementptr inbounds i8, ptr %104, i64 %46
  store ptr %112, ptr %13, align 8
  br label %106

113:                                              ; preds = %100
  %114 = getelementptr inbounds i8, ptr %102, i64 %46
  tail call void %9(ptr align 1 %6, i64 1) #18
  %115 = tail call i8 %5(ptr align 1 %6, ptr align 1 %114, ptr align 1 %103) #18
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %121

117:                                              ; preds = %113
  tail call void %8(ptr align 1 %101, ptr align 1 %102) #18
  %118 = getelementptr inbounds i8, ptr %101, i64 %46
  tail call void %8(ptr align 1 %118, ptr align 1 %114) #18
  %119 = getelementptr inbounds i8, ptr %118, i64 %46
  %120 = getelementptr inbounds i8, ptr %114, i64 %46
  store ptr %120, ptr %15, align 8
  br label %106

121:                                              ; preds = %113
  tail call void %9(ptr align 1 %6, i64 2) #18
  %122 = tail call i8 %5(ptr align 1 %6, ptr align 1 %102, ptr align 1 %103) #18
  %.not23 = icmp eq i8 %122, 1
  %. = select i1 %.not23, i64 0, i64 %7
  %.1 = select i1 %.not23, i64 %7, i64 0
  %123 = getelementptr inbounds i8, ptr %101, i64 %46
  %124 = getelementptr inbounds i8, ptr %123, i64 %.
  tail call void %8(ptr align 1 %124, ptr align 1 %103) #18
  store ptr %104, ptr %13, align 8
  %125 = getelementptr inbounds i8, ptr %123, i64 %.1
  tail call void %8(ptr align 1 %125, ptr align 1 %102) #18
  store ptr %114, ptr %15, align 8
  %126 = getelementptr inbounds i8, ptr %123, i64 %46
  %127 = tail call i8 %5(ptr align 1 %6, ptr align 1 %114, ptr align 1 %104) #18
  %128 = icmp eq i8 %127, 1
  %.2 = select i1 %128, ptr %15, ptr %13
  %129 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %126, ptr align 1 %129) #18
  %130 = load ptr, ptr %.2, align 8
  %131 = getelementptr inbounds i8, ptr %130, i64 %46
  store ptr %131, ptr %.2, align 8
  %132 = getelementptr inbounds i8, ptr %126, i64 %46
  br label %106

._crit_edge.loopexit:                             ; preds = %142
  %133 = getelementptr inbounds i8, ptr %152, i64 %87
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %75
  %134 = phi ptr [ %76, %75 ], [ %.pre86.pre, %.._crit_edge.loopexit_crit_edge ], [ %162, %._crit_edge.loopexit ]
  %135 = phi ptr [ %77, %75 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %159, %._crit_edge.loopexit ]
  %.promoted52 = phi ptr [ %.promoted5285, %75 ], [ %.promoted52.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %133, %._crit_edge.loopexit ]
  %136 = icmp uge ptr %135, %2
  %137 = icmp uge ptr %134, %0
  %138 = select i1 %136, i1 %137, i1 false
  br i1 %138, label %.lr.ph55, label %.preheader

.lr.ph55:                                         ; preds = %._crit_edge
  %139 = sub i64 0, %7
  br label %167

140:                                              ; preds = %142, %.lr.ph
  store ptr %0, ptr %12, align 8
  store ptr %2, ptr %11, align 8
  %141 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16471(ptr nonnull align 8 %14, ptr nonnull readonly align 8 %12, ptr nonnull align 8 %15, ptr nonnull readonly align 8 %11, ptr nonnull align 8 %13, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %141, label %.._crit_edge.loopexit_crit_edge, label %142

.._crit_edge.loopexit_crit_edge:                  ; preds = %140
  %.promoted52.pre.pre = load ptr, ptr %14, align 8
  %.pre.pre = load ptr, ptr %13, align 8
  %.pre86.pre = load ptr, ptr %15, align 8
  br label %._crit_edge

142:                                              ; preds = %140
  tail call void %9(ptr align 1 %6, i64 2) #18
  %143 = load ptr, ptr %15, align 8
  %144 = load ptr, ptr %13, align 8
  %145 = tail call i8 %5(ptr align 1 %6, ptr align 1 %143, ptr align 1 %144) #18
  %.not20 = icmp eq i8 %145, 1
  %.3 = select i1 %.not20, i64 0, i64 %7
  %.4 = select i1 %.not20, i64 %7, i64 0
  %146 = load ptr, ptr %14, align 8
  %147 = getelementptr inbounds i8, ptr %146, i64 %87
  %148 = getelementptr inbounds i8, ptr %147, i64 %.3
  tail call void %8(ptr align 1 %148, ptr align 1 %144) #18
  %149 = getelementptr inbounds i8, ptr %144, i64 %87
  store ptr %149, ptr %13, align 8
  %150 = getelementptr inbounds i8, ptr %147, i64 %.4
  tail call void %8(ptr align 1 %150, ptr align 1 %143) #18
  %151 = getelementptr inbounds i8, ptr %143, i64 %87
  store ptr %151, ptr %15, align 8
  %152 = getelementptr inbounds i8, ptr %147, i64 %87
  %153 = tail call i8 %5(ptr align 1 %6, ptr align 1 %151, ptr align 1 %149) #18
  %154 = icmp eq i8 %153, 1
  %.5 = select i1 %154, ptr %15, ptr %13
  %155 = load ptr, ptr %.5, align 8
  tail call void %8(ptr align 1 %152, ptr align 1 %155) #18
  %156 = load ptr, ptr %.5, align 8
  %157 = getelementptr inbounds i8, ptr %156, i64 %87
  store ptr %157, ptr %.5, align 8
  %158 = getelementptr inbounds i8, ptr %152, i64 %87
  store ptr %158, ptr %14, align 8
  %159 = load ptr, ptr %13, align 8
  %160 = ptrtoint ptr %159 to i64
  %161 = icmp ult i64 %79, %160
  %162 = load ptr, ptr %15, align 8
  %163 = ptrtoint ptr %162 to i64
  %164 = icmp ult i64 %81, %163
  %165 = select i1 %161, i1 %164, i1 false
  br i1 %165, label %140, label %._crit_edge.loopexit

.preheader:                                       ; preds = %167, %._crit_edge
  %.promoted57 = phi ptr [ %135, %._crit_edge ], [ %177, %167 ]
  %.lcssa53 = phi ptr [ %.promoted52, %._crit_edge ], [ %176, %167 ]
  %.not1961 = icmp ult ptr %.promoted57, %2
  br i1 %.not1961, label %common.ret, label %.lr.ph62

.lr.ph62:                                         ; preds = %.preheader
  %166 = sub i64 0, %7
  br label %182

167:                                              ; preds = %167, %.lr.ph55
  %168 = phi ptr [ %134, %.lr.ph55 ], [ %179, %167 ]
  %169 = phi ptr [ %135, %.lr.ph55 ], [ %177, %167 ]
  %170 = phi ptr [ %.promoted52, %.lr.ph55 ], [ %176, %167 ]
  tail call void %9(ptr align 1 %6, i64 1) #18
  %171 = tail call i8 %5(ptr align 1 %6, ptr align 1 %168, ptr align 1 %169) #18
  %172 = icmp eq i8 %171, 1
  %.6 = select i1 %172, ptr %15, ptr %13
  %173 = load ptr, ptr %.6, align 8
  tail call void %8(ptr align 1 %170, ptr align 1 %173) #18
  %174 = load ptr, ptr %.6, align 8
  %175 = getelementptr inbounds i8, ptr %174, i64 %139
  store ptr %175, ptr %.6, align 8
  %176 = getelementptr inbounds i8, ptr %170, i64 %139
  %177 = load ptr, ptr %13, align 8
  %178 = icmp uge ptr %177, %2
  %179 = load ptr, ptr %15, align 8
  %180 = icmp uge ptr %179, %0
  %181 = select i1 %178, i1 %180, i1 false
  br i1 %181, label %167, label %.preheader

182:                                              ; preds = %182, %.lr.ph62
  %183 = phi ptr [ %.promoted57, %.lr.ph62 ], [ %186, %182 ]
  %184 = phi ptr [ %.lcssa53, %.lr.ph62 ], [ %185, %182 ]
  tail call void %8(ptr align 1 %184, ptr align 1 %183) #18
  %185 = getelementptr inbounds i8, ptr %184, i64 %166
  %186 = getelementptr inbounds i8, ptr %183, i64 %166
  %.not19 = icmp ult ptr %186, %2
  br i1 %.not19, label %common.ret, label %182
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16211(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9) unnamed_addr #4 {
  tail call void %9(ptr align 1 %6, i64 1) #18
  %11 = add i64 %3, -1
  %12 = mul nuw i64 %11, %7
  %13 = getelementptr inbounds i8, ptr %0, i64 %12
  %14 = mul nuw i64 %3, %7
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %13, ptr nonnull align 1 %15) #18
  %.not123 = icmp eq i8 %16, 1
  br i1 %.not123, label %.lr.ph, label %common.ret

.lr.ph:                                           ; preds = %10
  %17 = sub i64 0, %7
  br label %18

common.ret:                                       ; preds = %.critedge9, %55, %10
  ret void

18:                                               ; preds = %.critedge9, %.lr.ph
  %19 = phi ptr [ %15, %.lr.ph ], [ %140, %.critedge9 ]
  %.tr107126 = phi i64 [ %4, %.lr.ph ], [ %54, %.critedge9 ]
  %.tr106125 = phi i64 [ %3, %.lr.ph ], [ %20, %.critedge9 ]
  %.tr124 = phi ptr [ %0, %.lr.ph ], [ %134, %.critedge9 ]
  %20 = lshr i64 %.tr106125, 1
  %21 = sub nuw i64 %.tr106125, %20
  %22 = mul i64 %21, %7
  %23 = getelementptr i8, ptr %.tr124, i64 %22
  %24 = mul nuw i64 %.tr107126, %7
  %25 = getelementptr inbounds i8, ptr %19, i64 %24
  %26 = add i64 %.tr107126, -1
  %.fr = freeze i64 %26
  %cmpz = icmp eq i64 %.fr, 0
  br i1 %cmpz, label %cond.end, label %cond.false

cond.false:                                       ; preds = %18
  %27 = tail call i64 @llvm.ctlz.i64(i64 %.fr, i1 true), !range !391
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %18
  %ctz = phi i64 [ 64, %18 ], [ %27, %cond.false ]
  %28 = sub nuw nsw i64 65, %ctz
  tail call void %9(ptr align 1 %6, i64 %28) #18
  %29 = icmp ugt i64 %.tr107126, 1
  br i1 %29, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16472.exit

.lr.ph.i.preheader:                               ; preds = %cond.end
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %.013.i = phi i64 [ %35, %.lr.ph.i ], [ %.tr107126, %.lr.ph.i.preheader ]
  %.0912.i = phi ptr [ %spec.select.i, %.lr.ph.i ], [ %25, %.lr.ph.i.preheader ]
  %30 = lshr i64 %.013.i, 1
  %31 = mul i64 %30, %7
  %32 = sub i64 0, %31
  %33 = getelementptr inbounds i8, ptr %.0912.i, i64 %32
  %34 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %23, ptr align 1 %33) #18
  %.not10.i = icmp eq i8 %34, 1
  %spec.select.i = select i1 %.not10.i, ptr %.0912.i, ptr %33
  %35 = sub nuw i64 %.013.i, %30
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16472.exit

sort.monobound_binary_first__anon_16472.exit:     ; preds = %.lr.ph.i, %cond.end
  %.09.lcssa.i = phi ptr [ %25, %cond.end ], [ %spec.select.i, %.lr.ph.i ]
  %37 = getelementptr inbounds i8, ptr %.09.lcssa.i, i64 %17
  %38 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %23, ptr align 1 %37) #18
  %.not.i = icmp eq i8 %38, 1
  %spec.select11.i = select i1 %.not.i, ptr %.09.lcssa.i, ptr %37
  %39 = ptrtoint ptr %spec.select11.i to i64
  %40 = ptrtoint ptr %19 to i64
  %41 = sub nuw i64 %39, %40
  %42 = or i64 %41, %7
  %43 = and i64 %42, -4294967296
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %sort.monobound_binary_first__anon_16472.exit
  %46 = trunc i64 %7 to i32
  %47 = trunc i64 %41 to i32
  %48 = udiv i32 %47, %46
  %49 = zext i32 %48 to i64
  br label %52

50:                                               ; preds = %sort.monobound_binary_first__anon_16472.exit
  %51 = udiv i64 %41, %7
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i64 [ %49, %45 ], [ %51, %50 ]
  %54 = sub nuw i64 %.tr107126, %53
  %.not96 = icmp ult i64 %41, %7
  br i1 %.not96, label %55, label %56

55:                                               ; preds = %.critedge3, %119, %118, %mem.copyBackwards__anon_9817.exit, %52
  %.not97 = icmp eq i64 %.tr107126, %53
  br i1 %.not97, label %common.ret, label %120

56:                                               ; preds = %52
  %57 = add nuw i64 %53, %21
  %.not99 = icmp ugt i64 %57, %2
  br i1 %.not99, label %110, label %58

58:                                               ; preds = %56
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr124, i64 %22, i1 false)
  %59 = getelementptr inbounds i8, ptr %1, i64 %22
  %60 = mul nuw i64 %53, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %59, ptr nonnull align 1 %19, i64 %60, i1 false)
  %61 = mul nuw i64 %57, %7
  %62 = getelementptr i8, ptr %.tr124, i64 %61
  %63 = mul nuw i64 %20, %7
  %.not6.i = icmp eq i64 %63, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9817.exit, label %iter.check

iter.check:                                       ; preds = %58
  %min.iters.check = icmp ult i64 %63, 4
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr124, i64 -1
  %64 = add i64 %.tr106125, %53
  %65 = mul i64 %64, %7
  %uglygep183 = getelementptr i8, ptr %uglygep, i64 %65
  %66 = sub i64 1, %63
  %67 = getelementptr i8, ptr %uglygep183, i64 %66
  %68 = icmp ugt ptr %67, %uglygep183
  %uglygep184 = getelementptr i8, ptr %.tr124, i64 -1
  %69 = mul i64 %.tr106125, %7
  %uglygep185 = getelementptr i8, ptr %uglygep184, i64 %69
  %70 = sub i64 1, %63
  %71 = getelementptr i8, ptr %uglygep185, i64 %70
  %72 = icmp ugt ptr %71, %uglygep185
  %73 = or i1 %68, %72
  br i1 %73, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %74 = ptrtoint ptr %.tr124 to i64
  %75 = add i64 %74, -1
  %76 = mul i64 %.tr106125, %7
  %77 = add i64 %75, %76
  %78 = add i64 %.tr106125, %53
  %79 = mul i64 %78, %7
  %80 = add i64 %75, %79
  %81 = sub i64 %77, %80
  %diff.check = icmp ult i64 %81, 16
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check190 = icmp ult i64 %63, 16
  br i1 %min.iters.check190, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %63, -16
  %uglygep228 = getelementptr i8, ptr %.tr124, i64 -16
  %uglygep229 = getelementptr i8, ptr %uglygep228, i64 %69
  %82 = lshr i64 %63, 4
  %83 = mul i64 %82, -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv = phi i64 [ %lsr.iv.next, %vector.body ], [ 0, %vector.ph ]
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %84 = xor i64 %index, -1
  %85 = add i64 %63, %84
  %uglygep230 = getelementptr i8, ptr %uglygep229, i64 %lsr.iv
  %wide.load = load <16 x i8>, ptr %uglygep230, align 1
  %sunkaddr = getelementptr i8, ptr %62, i64 %85
  %sunkaddr250 = getelementptr i8, ptr %sunkaddr, i64 -15
  store <16 x i8> %wide.load, ptr %sunkaddr250, align 1
  %index.next = add nuw i64 %index, 16
  %lsr.iv.next = add i64 %lsr.iv, -16
  %86 = icmp eq i64 %83, %lsr.iv.next
  br i1 %86, label %middle.block, label %vector.body, !llvm.loop !539

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %63, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end194 = and i64 %63, 15
  %n.vec.remaining = and i64 %63, 12
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec193 = and i64 %63, -4
  %ind.end = and i64 %63, 3
  %uglygep231 = getelementptr i8, ptr %.tr124, i64 -4
  %uglygep232 = getelementptr i8, ptr %uglygep231, i64 %69
  %87 = mul i64 %vec.epilog.resume.val, -1
  %88 = lshr i64 %63, 2
  %89 = mul i64 %88, -4
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv233 = phi i64 [ %lsr.iv.next234, %vec.epilog.vector.body ], [ %87, %vec.epilog.ph ]
  %index196 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next201, %vec.epilog.vector.body ]
  %90 = xor i64 %index196, -1
  %91 = add i64 %63, %90
  %uglygep235 = getelementptr i8, ptr %uglygep232, i64 %lsr.iv233
  %wide.load198 = load <4 x i8>, ptr %uglygep235, align 1
  %sunkaddr251 = getelementptr i8, ptr %62, i64 %91
  %sunkaddr252 = getelementptr i8, ptr %sunkaddr251, i64 -3
  store <4 x i8> %wide.load198, ptr %sunkaddr252, align 1
  %index.next201 = add nuw i64 %index196, 4
  %lsr.iv.next234 = add i64 %lsr.iv233, -4
  %92 = icmp eq i64 %89, %lsr.iv.next234
  br i1 %92, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !540

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n195 = icmp eq i64 %63, %n.vec193
  br i1 %cmp.n195, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103.preheader

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %63, %iter.check ], [ %63, %vector.memcheck ], [ %63, %vector.scevcheck ], [ %ind.end194, %vec.epilog.iter.check ], [ %ind.end, %vec.epilog.middle.block ]
  %93 = add i64 %.07.i.ph, -1
  %xtraiter = and i64 %.07.i.ph, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.lr.ph.i103.prol.loopexit, label %.lr.ph.i103.prol.preheader

.lr.ph.i103.prol.preheader:                       ; preds = %.lr.ph.i103.preheader
  %uglygep236 = getelementptr i8, ptr %.tr124, i64 -1
  %uglygep237 = getelementptr i8, ptr %uglygep236, i64 %22
  br label %.lr.ph.i103.prol

.lr.ph.i103.prol:                                 ; preds = %.lr.ph.i103.prol, %.lr.ph.i103.prol.preheader
  %lsr.iv239 = phi i64 [ %xtraiter, %.lr.ph.i103.prol.preheader ], [ %lsr.iv.next240, %.lr.ph.i103.prol ]
  %.07.i.prol = phi i64 [ %94, %.lr.ph.i103.prol ], [ %.07.i.ph, %.lr.ph.i103.prol.preheader ]
  %94 = add i64 %.07.i.prol, -1
  %95 = getelementptr inbounds i8, ptr %62, i64 %94
  %uglygep238 = getelementptr i8, ptr %uglygep237, i64 %.07.i.prol
  %96 = load i8, ptr %uglygep238, align 1
  store i8 %96, ptr %95, align 1
  %lsr.iv.next240 = add nsw i64 %lsr.iv239, -1
  %prol.iter.cmp.not = icmp eq i64 %lsr.iv.next240, 0
  br i1 %prol.iter.cmp.not, label %.lr.ph.i103.prol.loopexit, label %.lr.ph.i103.prol, !llvm.loop !541

.lr.ph.i103.prol.loopexit:                        ; preds = %.lr.ph.i103.prol, %.lr.ph.i103.preheader
  %.07.i.unr = phi i64 [ %.07.i.ph, %.lr.ph.i103.preheader ], [ %94, %.lr.ph.i103.prol ]
  %97 = icmp ult i64 %93, 3
  br i1 %97, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103.preheader227

.lr.ph.i103.preheader227:                         ; preds = %.lr.ph.i103.prol.loopexit
  %uglygep241 = getelementptr i8, ptr %.tr124, i64 -1
  %uglygep242 = getelementptr i8, ptr %uglygep241, i64 %22
  br label %.lr.ph.i103

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader227
  %.07.i = phi i64 [ %107, %.lr.ph.i103 ], [ %.07.i.unr, %.lr.ph.i103.preheader227 ]
  %98 = add i64 %.07.i, -1
  %99 = getelementptr inbounds i8, ptr %62, i64 %98
  %uglygep249 = getelementptr i8, ptr %uglygep242, i64 %.07.i
  %100 = load i8, ptr %uglygep249, align 1
  store i8 %100, ptr %99, align 1
  %101 = add i64 %.07.i, -2
  %102 = getelementptr inbounds i8, ptr %62, i64 %101
  %uglygep247 = getelementptr i8, ptr %uglygep242, i64 %.07.i
  %uglygep248 = getelementptr i8, ptr %uglygep247, i64 -1
  %103 = load i8, ptr %uglygep248, align 1
  store i8 %103, ptr %102, align 1
  %104 = add i64 %.07.i, -3
  %105 = getelementptr inbounds i8, ptr %62, i64 %104
  %uglygep245 = getelementptr i8, ptr %uglygep242, i64 %.07.i
  %uglygep246 = getelementptr i8, ptr %uglygep245, i64 -2
  %106 = load i8, ptr %uglygep246, align 1
  store i8 %106, ptr %105, align 1
  %107 = add i64 %.07.i, -4
  %108 = getelementptr inbounds i8, ptr %62, i64 %107
  %uglygep243 = getelementptr i8, ptr %uglygep242, i64 %.07.i
  %uglygep244 = getelementptr i8, ptr %uglygep243, i64 -3
  %109 = load i8, ptr %uglygep244, align 1
  store i8 %109, ptr %108, align 1
  %.not.i102.3 = icmp eq i64 %107, 0
  br i1 %.not.i102.3, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103, !llvm.loop !542

mem.copyBackwards__anon_9817.exit:                ; preds = %.lr.ph.i103, %.lr.ph.i103.prol.loopexit, %vec.epilog.middle.block, %middle.block, %58
  tail call fastcc void @sort.cross_merge__anon_14509(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %21, i64 %53, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %55

110:                                              ; preds = %56
  %111 = add nuw i64 %53, %20
  tail call fastcc void @sort.trinity_rotation(ptr nonnull align 1 %23, i64 %111, ptr nonnull align 1 %1, i64 %2, i64 %20, i64 %7, ptr nonnull readonly align 1 %8)
  %112 = shl nuw i64 %53, 1
  %113 = icmp ult i64 %112, %21
  %114 = shl nuw i64 %21, 1
  %115 = icmp ult i64 %114, %53
  %116 = select i1 %113, i1 true, i1 %115
  br i1 %116, label %117, label %.critedge3

117:                                              ; preds = %110
  %.not100 = icmp ugt i64 %53, %2
  br i1 %.not100, label %.critedge, label %118

118:                                              ; preds = %117
  tail call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %.tr124, i64 %57, ptr nonnull align 1 %1, i64 %2, i64 %21, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %55

.critedge:                                        ; preds = %117
  %.not101 = icmp ugt i64 %21, %2
  br i1 %.not101, label %.critedge3, label %119

119:                                              ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16473(ptr nonnull align 1 %.tr124, i64 %57, ptr nonnull align 1 %1, i64 %2, i64 %21, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %55

.critedge3:                                       ; preds = %.critedge, %110
  tail call fastcc void @sort.rotate_merge_block__anon_16211(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %2, i64 %21, i64 %53, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br label %55

120:                                              ; preds = %55
  %121 = shl nuw i64 %54, 1
  %122 = icmp ult i64 %121, %20
  %123 = and i64 %.tr106125, -2
  %124 = icmp ult i64 %123, %54
  %125 = or i1 %124, %122
  %126 = icmp ugt i64 %54, %2
  %not. = xor i1 %125, true
  %or.cond12 = select i1 %not., i1 true, i1 %126
  %.pre = add nuw i64 %54, %20
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %130, label %.critedge7

.critedge7:                                       ; preds = %120
  %127 = add nuw i64 %53, %21
  %128 = mul nuw i64 %127, %7
  %129 = getelementptr inbounds i8, ptr %.tr124, i64 %128
  tail call fastcc void @sort.partial_backwards_merge__anon_16210(ptr nonnull align 1 %129, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret void

130:                                              ; preds = %120
  %131 = icmp ule i64 %21, %2
  %or.cond14 = select i1 %125, i1 %131, i1 false
  %132 = add nuw i64 %53, %21
  %133 = mul nuw i64 %132, %7
  %134 = getelementptr inbounds i8, ptr %.tr124, i64 %133
  br i1 %or.cond14, label %135, label %.critedge9

135:                                              ; preds = %130
  tail call fastcc void @sort.partial_forward_merge__anon_16473(ptr nonnull align 1 %134, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret void

.critedge9:                                       ; preds = %130
  tail call void %9(ptr align 1 %6, i64 1) #18
  %136 = add nsw i64 %20, -1
  %137 = mul nuw i64 %136, %7
  %138 = getelementptr inbounds i8, ptr %134, i64 %137
  %139 = mul nuw i64 %20, %7
  %140 = getelementptr inbounds i8, ptr %134, i64 %139
  %141 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %138, ptr nonnull align 1 %140) #18
  %.not = icmp eq i8 %141, 1
  br i1 %.not, label %18, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16213(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
._crit_edge:
  %.pre = add i64 %2, -1
  %8 = mul nuw i64 %6, %2
  %9 = getelementptr inbounds i8, ptr %1, i64 %8
  %10 = sub i64 0, %6
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = mul nuw i64 %6, %3
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = add i64 %.pre, %3
  %15 = mul nuw i64 %14, %6
  %16 = getelementptr inbounds i8, ptr %0, i64 %15
  %17 = icmp ult i64 %2, %3
  br i1 %17, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %._crit_edge
  %.066 = phi ptr [ %23, %.cont16 ], [ %0, %._crit_edge ]
  %.061 = phi ptr [ %., %.cont16 ], [ %9, %._crit_edge ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %._crit_edge ]
  %18 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.0, ptr nonnull align 1 %.061) #18
  %.not = icmp eq i8 %18, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  tail call void %7(ptr align 1 %.066, ptr align 1 %.sroa.speculated21) #18
  %.not10 = icmp eq i64 %.pre, 0
  br i1 %.not10, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %19 = icmp eq i8 %18, 1
  %20 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 %6
  %.0. = select i1 %19, ptr %.0, ptr %20
  %..061 = select i1 %19, ptr %20, ptr %.061
  %uglygep = getelementptr i8, ptr %.066, i64 %6
  br label %.cont

.cont16:                                          ; preds = %._crit_edge
  %21 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %9) #18
  %.not77 = icmp eq i8 %21, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %9, ptr %1
  tail call void %7(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated12) #18
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 %6
  %. = select i1 %.not77, ptr %22, ptr %9
  %.78 = select i1 %.not77, ptr %1, ptr %22
  %23 = getelementptr inbounds i8, ptr %0, i64 %6
  br label %.cont25

.cont:                                            ; preds = %.cont, %.cont.preheader
  %lsr.iv12 = phi i64 [ %.pre, %.cont.preheader ], [ %lsr.iv.next, %.cont ]
  %lsr.iv = phi ptr [ %uglygep, %.cont.preheader ], [ %uglygep11, %.cont ]
  %.37 = phi ptr [ %.3., %.cont ], [ %.0., %.cont.preheader ]
  %.3646 = phi ptr [ %..364, %.cont ], [ %..061, %.cont.preheader ]
  %.0684 = phi ptr [ %.169, %.cont ], [ %11, %.cont.preheader ]
  %.0703 = phi ptr [ %.171, %.cont ], [ %13, %.cont.preheader ]
  %.0722 = phi ptr [ %29, %.cont ], [ %16, %.cont.preheader ]
  %24 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.37, ptr align 1 %.3646) #18
  %.not76 = icmp eq i8 %24, 1
  %.sroa.speculated = select i1 %.not76, ptr %.3646, ptr %.37
  tail call void %7(ptr align 1 %lsr.iv, ptr align 1 %.sroa.speculated) #18
  %25 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  %..364 = select i1 %.not76, ptr %25, ptr %.3646
  %.3. = select i1 %.not76, ptr %.37, ptr %25
  %26 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.0684, ptr align 1 %.0703) #18
  %27 = icmp eq i8 %26, 1
  %.sroa.speculated40 = select i1 %27, ptr %.0684, ptr %.0703
  tail call void %7(ptr align 1 %.0722, ptr align 1 %.sroa.speculated40) #18
  %28 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 %10
  %.171 = select i1 %27, ptr %.0703, ptr %28
  %.169 = select i1 %27, ptr %28, ptr %.0684
  %29 = getelementptr inbounds i8, ptr %.0722, i64 %10
  %uglygep11 = getelementptr i8, ptr %lsr.iv, i64 %6
  %lsr.iv.next = add i64 %lsr.iv12, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %.cont, %.cont25
  %.072.lcssa = phi ptr [ %16, %.cont25 ], [ %29, %.cont ]
  %.070.lcssa = phi ptr [ %13, %.cont25 ], [ %.171, %.cont ]
  %.068.lcssa = phi ptr [ %11, %.cont25 ], [ %.169, %.cont ]
  %30 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.068.lcssa, ptr align 1 %.070.lcssa) #18
  %31 = icmp eq i8 %30, 1
  %.sroa.speculated46 = select i1 %31, ptr %.068.lcssa, ptr %.070.lcssa
  tail call void %7(ptr align 1 %.072.lcssa, ptr align 1 %.sroa.speculated46) #18
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = icmp eq i64 %1, %4
  br i1 %15, label %common.ret, label %16

common.ret:                                       ; preds = %180, %.preheader, %16, %9
  ret void

16:                                               ; preds = %9
  %17 = add i64 %4, -1
  %18 = mul nuw i64 %17, %7
  %19 = getelementptr inbounds i8, ptr %0, i64 %18
  store ptr %19, ptr %14, align 8
  %20 = add i64 %1, -1
  %21 = mul nuw i64 %20, %7
  %22 = getelementptr inbounds i8, ptr %0, i64 %21
  %23 = getelementptr inbounds i8, ptr %19, i64 %7
  %24 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %19, ptr nonnull align 1 %23) #18
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %16
  %26 = sub nuw i64 %1, %4
  %27 = icmp ule i64 %1, %3
  %28 = icmp ugt i64 %26, 63
  %29 = select i1 %27, i1 %28, i1 false
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  tail call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %26, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  %31 = mul nuw i64 %7, %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %31, i1 false)
  ret void

32:                                               ; preds = %25
  %33 = mul nuw i64 %26, %7
  %34 = mul nuw i64 %7, %4
  %35 = getelementptr inbounds i8, ptr %0, i64 %34
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %35, i64 %33, i1 false)
  %36 = add i64 %26, -1
  %37 = mul nuw i64 %36, %7
  %38 = getelementptr inbounds i8, ptr %2, i64 %37
  store ptr %38, ptr %12, align 8
  %39 = shl nuw i64 %7, 4
  %40 = getelementptr inbounds i8, ptr %0, i64 %39
  %41 = getelementptr inbounds i8, ptr %2, i64 %39
  %42 = icmp sgt i64 %18, %39
  %43 = icmp sgt i64 %37, %39
  %44 = select i1 %42, i1 %43, i1 false
  br i1 %44, label %.preheader29.lr.ph, label %.loopexit31

.preheader29.lr.ph:                               ; preds = %32
  %.neg = mul i64 %7, -15
  %45 = sub i64 0, %7
  %46 = mul i64 %7, -14
  %47 = mul i64 %7, -13
  %48 = mul i64 %7, -12
  %49 = mul i64 %7, -11
  %50 = mul i64 %7, -10
  %51 = mul i64 %7, -9
  %52 = mul i64 %7, -8
  %53 = mul i64 %7, -7
  %54 = mul i64 %7, -6
  %55 = mul i64 %7, -5
  %56 = mul i64 %7, -4
  %57 = mul i64 %7, -3
  %58 = mul i64 %7, -2
  %59 = mul i64 %7, -14
  %60 = mul i64 %7, -13
  %61 = mul i64 %7, -12
  %62 = mul i64 %7, -11
  %63 = mul i64 %7, -10
  %64 = mul i64 %7, -9
  %65 = mul i64 %7, -8
  %66 = mul i64 %7, -7
  %67 = mul i64 %7, -6
  %68 = mul i64 %7, -5
  %69 = mul i64 %7, -4
  %70 = mul i64 %7, -3
  %71 = mul i64 %7, -2
  br label %.preheader29

.loopexit28:                                      ; preds = %98
  %uglygep199 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next142
  store ptr %uglygep199, ptr %14, align 8
  %uglygep149 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep150 = getelementptr i8, ptr %uglygep149, i64 %lsr.iv.next142
  store ptr %uglygep150, ptr %13, align 8
  %uglygep105 = getelementptr i8, ptr %.promoted, i64 %lsr.iv
  %uglygep147 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep148 = getelementptr i8, ptr %uglygep147, i64 %lsr.iv.next142
  %uglygep198 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next142
  br label %74

.loopexit30:                                      ; preds = %94
  %uglygep108 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next
  store ptr %uglygep108, ptr %12, align 8
  %uglygep73 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next
  store ptr %uglygep73, ptr %13, align 8
  %uglygep72 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next
  %uglygep107 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next
  br label %74

.loopexit31:                                      ; preds = %.loopexit, %32
  %72 = phi ptr [ %19, %32 ], [ %87, %.loopexit ]
  %73 = phi ptr [ %38, %32 ], [ %89, %.loopexit ]
  %.lcssa4648.lcssa = phi ptr [ %22, %32 ], [ %106, %.loopexit ]
  store ptr %.lcssa4648.lcssa, ptr %13, align 8
  br label %74

74:                                               ; preds = %.loopexit31, %.loopexit30, %.loopexit28
  %.promoted5285 = phi ptr [ %.lcssa4648.lcssa, %.loopexit31 ], [ %uglygep72, %.loopexit30 ], [ %uglygep148, %.loopexit28 ]
  %75 = phi ptr [ %72, %.loopexit31 ], [ %.promoted39, %.loopexit30 ], [ %uglygep198, %.loopexit28 ]
  %76 = phi ptr [ %73, %.loopexit31 ], [ %uglygep107, %.loopexit30 ], [ %uglygep105, %.loopexit28 ]
  %77 = ptrtoint ptr %2 to i64
  %78 = add nuw i64 %77, %7
  %79 = ptrtoint ptr %0 to i64
  %80 = add nuw i64 %79, %7
  %81 = ptrtoint ptr %76 to i64
  %82 = icmp ult i64 %78, %81
  %83 = ptrtoint ptr %75 to i64
  %84 = icmp ult i64 %80, %83
  %85 = select i1 %82, i1 %84, i1 false
  br i1 %85, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %74
  %86 = sub i64 0, %7
  br label %139

.loopexit:                                        ; preds = %105
  %87 = load ptr, ptr %14, align 8
  %88 = icmp ugt ptr %87, %40
  %89 = load ptr, ptr %12, align 8
  %90 = icmp ugt ptr %89, %41
  %91 = select i1 %88, i1 %90, i1 false
  br i1 %91, label %.preheader29, label %.loopexit31

.preheader29:                                     ; preds = %.loopexit, %.preheader29.lr.ph
  %.promoted = phi ptr [ %38, %.preheader29.lr.ph ], [ %89, %.loopexit ]
  %.promoted39 = phi ptr [ %19, %.preheader29.lr.ph ], [ %87, %.loopexit ]
  %.lcssa464850 = phi ptr [ %22, %.preheader29.lr.ph ], [ %106, %.loopexit ]
  %uglygep74 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep76 = getelementptr i8, ptr %.lcssa464850, i64 %46
  %uglygep78 = getelementptr i8, ptr %.lcssa464850, i64 %47
  %uglygep80 = getelementptr i8, ptr %.lcssa464850, i64 %48
  %uglygep82 = getelementptr i8, ptr %.lcssa464850, i64 %49
  %uglygep84 = getelementptr i8, ptr %.lcssa464850, i64 %50
  %uglygep86 = getelementptr i8, ptr %.lcssa464850, i64 %51
  %uglygep88 = getelementptr i8, ptr %.lcssa464850, i64 %52
  %uglygep90 = getelementptr i8, ptr %.lcssa464850, i64 %53
  %uglygep92 = getelementptr i8, ptr %.lcssa464850, i64 %54
  %uglygep94 = getelementptr i8, ptr %.lcssa464850, i64 %55
  %uglygep96 = getelementptr i8, ptr %.lcssa464850, i64 %56
  %uglygep98 = getelementptr i8, ptr %.lcssa464850, i64 %57
  %uglygep100 = getelementptr i8, ptr %.lcssa464850, i64 %58
  %uglygep102 = getelementptr i8, ptr %.lcssa464850, i64 %45
  %uglygep110 = getelementptr i8, ptr %.promoted, i64 %.neg
  %uglygep113 = getelementptr i8, ptr %.promoted, i64 %46
  %uglygep115 = getelementptr i8, ptr %.promoted, i64 %47
  %uglygep117 = getelementptr i8, ptr %.promoted, i64 %48
  %uglygep119 = getelementptr i8, ptr %.promoted, i64 %49
  %uglygep121 = getelementptr i8, ptr %.promoted, i64 %50
  %uglygep123 = getelementptr i8, ptr %.promoted, i64 %51
  %uglygep125 = getelementptr i8, ptr %.promoted, i64 %52
  %uglygep127 = getelementptr i8, ptr %.promoted, i64 %53
  %uglygep129 = getelementptr i8, ptr %.promoted, i64 %54
  %uglygep131 = getelementptr i8, ptr %.promoted, i64 %55
  %uglygep133 = getelementptr i8, ptr %.promoted, i64 %56
  %uglygep135 = getelementptr i8, ptr %.promoted, i64 %57
  %uglygep137 = getelementptr i8, ptr %.promoted, i64 %58
  %uglygep139 = getelementptr i8, ptr %.promoted, i64 %45
  br label %92

92:                                               ; preds = %94, %.preheader29
  %lsr.iv = phi i64 [ 0, %.preheader29 ], [ %lsr.iv.next, %94 ]
  %uglygep71 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep106 = getelementptr i8, ptr %.promoted, i64 %lsr.iv
  %uglygep111 = getelementptr i8, ptr %uglygep110, i64 %lsr.iv
  %93 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %.promoted39, ptr align 1 %uglygep111) #18
  %.not21 = icmp eq i8 %93, 1
  br i1 %.not21, label %.preheader27, label %94

.preheader27:                                     ; preds = %92
  %uglygep104 = getelementptr i8, ptr %.promoted, i64 %lsr.iv
  store ptr %uglygep104, ptr %12, align 8
  %uglygep145 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep151 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep152 = getelementptr i8, ptr %uglygep151, i64 %lsr.iv
  %uglygep154 = getelementptr i8, ptr %.lcssa464850, i64 %59
  %uglygep155 = getelementptr i8, ptr %uglygep154, i64 %lsr.iv
  %uglygep157 = getelementptr i8, ptr %.lcssa464850, i64 %60
  %uglygep158 = getelementptr i8, ptr %uglygep157, i64 %lsr.iv
  %uglygep160 = getelementptr i8, ptr %.lcssa464850, i64 %61
  %uglygep161 = getelementptr i8, ptr %uglygep160, i64 %lsr.iv
  %uglygep163 = getelementptr i8, ptr %.lcssa464850, i64 %62
  %uglygep164 = getelementptr i8, ptr %uglygep163, i64 %lsr.iv
  %uglygep166 = getelementptr i8, ptr %.lcssa464850, i64 %63
  %uglygep167 = getelementptr i8, ptr %uglygep166, i64 %lsr.iv
  %uglygep169 = getelementptr i8, ptr %.lcssa464850, i64 %64
  %uglygep170 = getelementptr i8, ptr %uglygep169, i64 %lsr.iv
  %uglygep172 = getelementptr i8, ptr %.lcssa464850, i64 %65
  %uglygep173 = getelementptr i8, ptr %uglygep172, i64 %lsr.iv
  %uglygep175 = getelementptr i8, ptr %.lcssa464850, i64 %66
  %uglygep176 = getelementptr i8, ptr %uglygep175, i64 %lsr.iv
  %uglygep178 = getelementptr i8, ptr %.lcssa464850, i64 %67
  %uglygep179 = getelementptr i8, ptr %uglygep178, i64 %lsr.iv
  %uglygep181 = getelementptr i8, ptr %.lcssa464850, i64 %68
  %uglygep182 = getelementptr i8, ptr %uglygep181, i64 %lsr.iv
  %uglygep184 = getelementptr i8, ptr %.lcssa464850, i64 %69
  %uglygep185 = getelementptr i8, ptr %uglygep184, i64 %lsr.iv
  %uglygep187 = getelementptr i8, ptr %.lcssa464850, i64 %70
  %uglygep188 = getelementptr i8, ptr %uglygep187, i64 %lsr.iv
  %uglygep190 = getelementptr i8, ptr %.lcssa464850, i64 %71
  %uglygep191 = getelementptr i8, ptr %uglygep190, i64 %lsr.iv
  %uglygep193 = getelementptr i8, ptr %.lcssa464850, i64 %45
  %uglygep194 = getelementptr i8, ptr %uglygep193, i64 %lsr.iv
  %uglygep201 = getelementptr i8, ptr %.promoted39, i64 %.neg
  %uglygep204 = getelementptr i8, ptr %.promoted39, i64 %59
  %uglygep206 = getelementptr i8, ptr %.promoted39, i64 %60
  %uglygep208 = getelementptr i8, ptr %.promoted39, i64 %61
  %uglygep210 = getelementptr i8, ptr %.promoted39, i64 %62
  %uglygep212 = getelementptr i8, ptr %.promoted39, i64 %63
  %uglygep214 = getelementptr i8, ptr %.promoted39, i64 %64
  %uglygep216 = getelementptr i8, ptr %.promoted39, i64 %65
  %uglygep218 = getelementptr i8, ptr %.promoted39, i64 %66
  %uglygep220 = getelementptr i8, ptr %.promoted39, i64 %67
  %uglygep222 = getelementptr i8, ptr %.promoted39, i64 %68
  %uglygep224 = getelementptr i8, ptr %.promoted39, i64 %69
  %uglygep226 = getelementptr i8, ptr %.promoted39, i64 %70
  %uglygep228 = getelementptr i8, ptr %.promoted39, i64 %71
  %uglygep230 = getelementptr i8, ptr %.promoted39, i64 %45
  br label %95

94:                                               ; preds = %92
  tail call void %8(ptr align 1 %uglygep71, ptr align 1 %uglygep106) #18
  %uglygep103 = getelementptr i8, ptr %uglygep102, i64 %lsr.iv
  %uglygep140 = getelementptr i8, ptr %uglygep139, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep103, ptr align 1 %uglygep140) #18
  %uglygep101 = getelementptr i8, ptr %uglygep100, i64 %lsr.iv
  %uglygep138 = getelementptr i8, ptr %uglygep137, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep101, ptr align 1 %uglygep138) #18
  %uglygep99 = getelementptr i8, ptr %uglygep98, i64 %lsr.iv
  %uglygep136 = getelementptr i8, ptr %uglygep135, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep99, ptr align 1 %uglygep136) #18
  %uglygep97 = getelementptr i8, ptr %uglygep96, i64 %lsr.iv
  %uglygep134 = getelementptr i8, ptr %uglygep133, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep97, ptr align 1 %uglygep134) #18
  %uglygep95 = getelementptr i8, ptr %uglygep94, i64 %lsr.iv
  %uglygep132 = getelementptr i8, ptr %uglygep131, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep95, ptr align 1 %uglygep132) #18
  %uglygep93 = getelementptr i8, ptr %uglygep92, i64 %lsr.iv
  %uglygep130 = getelementptr i8, ptr %uglygep129, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep93, ptr align 1 %uglygep130) #18
  %uglygep91 = getelementptr i8, ptr %uglygep90, i64 %lsr.iv
  %uglygep128 = getelementptr i8, ptr %uglygep127, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep91, ptr align 1 %uglygep128) #18
  %uglygep89 = getelementptr i8, ptr %uglygep88, i64 %lsr.iv
  %uglygep126 = getelementptr i8, ptr %uglygep125, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep89, ptr align 1 %uglygep126) #18
  %uglygep87 = getelementptr i8, ptr %uglygep86, i64 %lsr.iv
  %uglygep124 = getelementptr i8, ptr %uglygep123, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep87, ptr align 1 %uglygep124) #18
  %uglygep85 = getelementptr i8, ptr %uglygep84, i64 %lsr.iv
  %uglygep122 = getelementptr i8, ptr %uglygep121, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep85, ptr align 1 %uglygep122) #18
  %uglygep83 = getelementptr i8, ptr %uglygep82, i64 %lsr.iv
  %uglygep120 = getelementptr i8, ptr %uglygep119, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep83, ptr align 1 %uglygep120) #18
  %uglygep81 = getelementptr i8, ptr %uglygep80, i64 %lsr.iv
  %uglygep118 = getelementptr i8, ptr %uglygep117, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep81, ptr align 1 %uglygep118) #18
  %uglygep79 = getelementptr i8, ptr %uglygep78, i64 %lsr.iv
  %uglygep116 = getelementptr i8, ptr %uglygep115, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep79, ptr align 1 %uglygep116) #18
  %uglygep77 = getelementptr i8, ptr %uglygep76, i64 %lsr.iv
  %uglygep114 = getelementptr i8, ptr %uglygep113, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep77, ptr align 1 %uglygep114) #18
  %uglygep75 = getelementptr i8, ptr %uglygep74, i64 %lsr.iv
  %uglygep112 = getelementptr i8, ptr %uglygep110, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep75, ptr align 1 %uglygep112) #18
  %lsr.iv.next = sub i64 %lsr.iv, %39
  %uglygep109 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next
  %.not25 = icmp ugt ptr %uglygep109, %41
  br i1 %.not25, label %92, label %.loopexit30

95:                                               ; preds = %98, %.preheader27
  %lsr.iv141 = phi i64 [ 0, %.preheader27 ], [ %lsr.iv.next142, %98 ]
  %uglygep146 = getelementptr i8, ptr %uglygep145, i64 %lsr.iv141
  %uglygep197 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv141
  %uglygep202 = getelementptr i8, ptr %uglygep201, i64 %lsr.iv141
  %96 = tail call i8 %5(ptr align 1 %6, ptr align 1 %uglygep202, ptr align 1 %uglygep104) #18
  %97 = icmp eq i8 %96, 1
  br i1 %97, label %98, label %.preheader26

.preheader26:                                     ; preds = %95
  %uglygep196 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv141
  store ptr %uglygep196, ptr %14, align 8
  %uglygep143 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv
  %uglygep144 = getelementptr i8, ptr %uglygep143, i64 %lsr.iv141
  br label %99

98:                                               ; preds = %95
  tail call void %8(ptr align 1 %uglygep146, ptr align 1 %uglygep197) #18
  %uglygep195 = getelementptr i8, ptr %uglygep194, i64 %lsr.iv141
  %uglygep231 = getelementptr i8, ptr %uglygep230, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep195, ptr align 1 %uglygep231) #18
  %uglygep192 = getelementptr i8, ptr %uglygep191, i64 %lsr.iv141
  %uglygep229 = getelementptr i8, ptr %uglygep228, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep192, ptr align 1 %uglygep229) #18
  %uglygep189 = getelementptr i8, ptr %uglygep188, i64 %lsr.iv141
  %uglygep227 = getelementptr i8, ptr %uglygep226, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep189, ptr align 1 %uglygep227) #18
  %uglygep186 = getelementptr i8, ptr %uglygep185, i64 %lsr.iv141
  %uglygep225 = getelementptr i8, ptr %uglygep224, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep186, ptr align 1 %uglygep225) #18
  %uglygep183 = getelementptr i8, ptr %uglygep182, i64 %lsr.iv141
  %uglygep223 = getelementptr i8, ptr %uglygep222, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep183, ptr align 1 %uglygep223) #18
  %uglygep180 = getelementptr i8, ptr %uglygep179, i64 %lsr.iv141
  %uglygep221 = getelementptr i8, ptr %uglygep220, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep180, ptr align 1 %uglygep221) #18
  %uglygep177 = getelementptr i8, ptr %uglygep176, i64 %lsr.iv141
  %uglygep219 = getelementptr i8, ptr %uglygep218, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep177, ptr align 1 %uglygep219) #18
  %uglygep174 = getelementptr i8, ptr %uglygep173, i64 %lsr.iv141
  %uglygep217 = getelementptr i8, ptr %uglygep216, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep174, ptr align 1 %uglygep217) #18
  %uglygep171 = getelementptr i8, ptr %uglygep170, i64 %lsr.iv141
  %uglygep215 = getelementptr i8, ptr %uglygep214, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep171, ptr align 1 %uglygep215) #18
  %uglygep168 = getelementptr i8, ptr %uglygep167, i64 %lsr.iv141
  %uglygep213 = getelementptr i8, ptr %uglygep212, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep168, ptr align 1 %uglygep213) #18
  %uglygep165 = getelementptr i8, ptr %uglygep164, i64 %lsr.iv141
  %uglygep211 = getelementptr i8, ptr %uglygep210, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep165, ptr align 1 %uglygep211) #18
  %uglygep162 = getelementptr i8, ptr %uglygep161, i64 %lsr.iv141
  %uglygep209 = getelementptr i8, ptr %uglygep208, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep162, ptr align 1 %uglygep209) #18
  %uglygep159 = getelementptr i8, ptr %uglygep158, i64 %lsr.iv141
  %uglygep207 = getelementptr i8, ptr %uglygep206, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep159, ptr align 1 %uglygep207) #18
  %uglygep156 = getelementptr i8, ptr %uglygep155, i64 %lsr.iv141
  %uglygep205 = getelementptr i8, ptr %uglygep204, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep156, ptr align 1 %uglygep205) #18
  %uglygep153 = getelementptr i8, ptr %uglygep152, i64 %lsr.iv141
  %uglygep203 = getelementptr i8, ptr %uglygep201, i64 %lsr.iv141
  tail call void %8(ptr align 1 %uglygep153, ptr align 1 %uglygep203) #18
  %lsr.iv.next142 = sub i64 %lsr.iv141, %39
  %uglygep200 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next142
  %.not24 = icmp ugt ptr %uglygep200, %40
  br i1 %.not24, label %95, label %.loopexit28

99:                                               ; preds = %105, %.preheader26
  %lsr.iv232 = phi i64 [ -8, %.preheader26 ], [ %math, %105 ]
  %100 = phi ptr [ %106, %105 ], [ %uglygep144, %.preheader26 ]
  %101 = load ptr, ptr %14, align 8
  %102 = load ptr, ptr %12, align 8
  %103 = getelementptr inbounds i8, ptr %102, i64 %45
  %104 = tail call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr align 1 %103) #18
  %.not22 = icmp eq i8 %104, 1
  br i1 %.not22, label %112, label %108

105:                                              ; preds = %120, %116, %108
  %106 = phi ptr [ %118, %116 ], [ %131, %120 ], [ %110, %108 ]
  %107 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv232, i64 1)
  %math = extractvalue { i64, i1 } %107, 0
  %ov = extractvalue { i64, i1 } %107, 1
  br i1 %ov, label %.loopexit, label %99

108:                                              ; preds = %99
  tail call void %8(ptr align 1 %100, ptr align 1 %102) #18
  %109 = getelementptr inbounds i8, ptr %100, i64 %45
  tail call void %8(ptr align 1 %109, ptr align 1 %103) #18
  %110 = getelementptr inbounds i8, ptr %109, i64 %45
  %111 = getelementptr inbounds i8, ptr %103, i64 %45
  store ptr %111, ptr %12, align 8
  br label %105

112:                                              ; preds = %99
  %113 = getelementptr inbounds i8, ptr %101, i64 %45
  %114 = tail call i8 %5(ptr align 1 %6, ptr align 1 %113, ptr align 1 %102) #18
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  tail call void %8(ptr align 1 %100, ptr align 1 %101) #18
  %117 = getelementptr inbounds i8, ptr %100, i64 %45
  tail call void %8(ptr align 1 %117, ptr align 1 %113) #18
  %118 = getelementptr inbounds i8, ptr %117, i64 %45
  %119 = getelementptr inbounds i8, ptr %113, i64 %45
  store ptr %119, ptr %14, align 8
  br label %105

120:                                              ; preds = %112
  %121 = tail call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr align 1 %102) #18
  %.not23 = icmp eq i8 %121, 1
  %. = select i1 %.not23, i64 0, i64 %7
  %.1 = select i1 %.not23, i64 %7, i64 0
  %122 = getelementptr inbounds i8, ptr %100, i64 %45
  %123 = getelementptr inbounds i8, ptr %122, i64 %.
  tail call void %8(ptr align 1 %123, ptr align 1 %102) #18
  store ptr %103, ptr %12, align 8
  %124 = getelementptr inbounds i8, ptr %122, i64 %.1
  tail call void %8(ptr align 1 %124, ptr align 1 %101) #18
  store ptr %113, ptr %14, align 8
  %125 = getelementptr inbounds i8, ptr %122, i64 %45
  %126 = tail call i8 %5(ptr align 1 %6, ptr align 1 %113, ptr align 1 %103) #18
  %127 = icmp eq i8 %126, 1
  %.2 = select i1 %127, ptr %14, ptr %12
  %128 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %125, ptr align 1 %128) #18
  %129 = load ptr, ptr %.2, align 8
  %130 = getelementptr inbounds i8, ptr %129, i64 %45
  store ptr %130, ptr %.2, align 8
  %131 = getelementptr inbounds i8, ptr %125, i64 %45
  br label %105

._crit_edge.loopexit:                             ; preds = %141
  %132 = getelementptr inbounds i8, ptr %150, i64 %86
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %74
  %133 = phi ptr [ %75, %74 ], [ %.pre86.pre, %.._crit_edge.loopexit_crit_edge ], [ %160, %._crit_edge.loopexit ]
  %134 = phi ptr [ %76, %74 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %157, %._crit_edge.loopexit ]
  %.promoted52 = phi ptr [ %.promoted5285, %74 ], [ %.promoted52.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %132, %._crit_edge.loopexit ]
  %135 = icmp uge ptr %134, %2
  %136 = icmp uge ptr %133, %0
  %137 = select i1 %135, i1 %136, i1 false
  br i1 %137, label %.lr.ph55, label %.preheader

.lr.ph55:                                         ; preds = %._crit_edge
  %138 = sub i64 0, %7
  br label %165

139:                                              ; preds = %141, %.lr.ph
  store ptr %0, ptr %11, align 8
  store ptr %2, ptr %10, align 8
  %140 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16482(ptr nonnull align 8 %13, ptr nonnull readonly align 8 %11, ptr nonnull align 8 %14, ptr nonnull readonly align 8 %10, ptr nonnull align 8 %12, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  %.pre.pre = load ptr, ptr %12, align 8
  br i1 %140, label %.._crit_edge.loopexit_crit_edge, label %141

.._crit_edge.loopexit_crit_edge:                  ; preds = %139
  %.promoted52.pre.pre = load ptr, ptr %13, align 8
  %.pre86.pre = load ptr, ptr %14, align 8
  br label %._crit_edge

141:                                              ; preds = %139
  %142 = load ptr, ptr %14, align 8
  %143 = tail call i8 %5(ptr align 1 %6, ptr align 1 %142, ptr align 1 %.pre.pre) #18
  %.not20 = icmp eq i8 %143, 1
  %.3 = select i1 %.not20, i64 0, i64 %7
  %.4 = select i1 %.not20, i64 %7, i64 0
  %144 = load ptr, ptr %13, align 8
  %145 = getelementptr inbounds i8, ptr %144, i64 %86
  %146 = getelementptr inbounds i8, ptr %145, i64 %.3
  tail call void %8(ptr align 1 %146, ptr align 1 %.pre.pre) #18
  %147 = getelementptr inbounds i8, ptr %.pre.pre, i64 %86
  store ptr %147, ptr %12, align 8
  %148 = getelementptr inbounds i8, ptr %145, i64 %.4
  tail call void %8(ptr align 1 %148, ptr align 1 %142) #18
  %149 = getelementptr inbounds i8, ptr %142, i64 %86
  store ptr %149, ptr %14, align 8
  %150 = getelementptr inbounds i8, ptr %145, i64 %86
  %151 = tail call i8 %5(ptr align 1 %6, ptr align 1 %149, ptr align 1 %147) #18
  %152 = icmp eq i8 %151, 1
  %.5 = select i1 %152, ptr %14, ptr %12
  %153 = load ptr, ptr %.5, align 8
  tail call void %8(ptr align 1 %150, ptr align 1 %153) #18
  %154 = load ptr, ptr %.5, align 8
  %155 = getelementptr inbounds i8, ptr %154, i64 %86
  store ptr %155, ptr %.5, align 8
  %156 = getelementptr inbounds i8, ptr %150, i64 %86
  store ptr %156, ptr %13, align 8
  %157 = load ptr, ptr %12, align 8
  %158 = ptrtoint ptr %157 to i64
  %159 = icmp ult i64 %78, %158
  %160 = load ptr, ptr %14, align 8
  %161 = ptrtoint ptr %160 to i64
  %162 = icmp ult i64 %80, %161
  %163 = select i1 %159, i1 %162, i1 false
  br i1 %163, label %139, label %._crit_edge.loopexit

.preheader:                                       ; preds = %165, %._crit_edge
  %.promoted57 = phi ptr [ %134, %._crit_edge ], [ %175, %165 ]
  %.lcssa53 = phi ptr [ %.promoted52, %._crit_edge ], [ %174, %165 ]
  %.not1961 = icmp ult ptr %.promoted57, %2
  br i1 %.not1961, label %common.ret, label %.lr.ph62

.lr.ph62:                                         ; preds = %.preheader
  %164 = sub i64 0, %7
  br label %180

165:                                              ; preds = %165, %.lr.ph55
  %166 = phi ptr [ %133, %.lr.ph55 ], [ %177, %165 ]
  %167 = phi ptr [ %134, %.lr.ph55 ], [ %175, %165 ]
  %168 = phi ptr [ %.promoted52, %.lr.ph55 ], [ %174, %165 ]
  %169 = tail call i8 %5(ptr align 1 %6, ptr align 1 %166, ptr align 1 %167) #18
  %170 = icmp eq i8 %169, 1
  %.6 = select i1 %170, ptr %14, ptr %12
  %171 = load ptr, ptr %.6, align 8
  tail call void %8(ptr align 1 %168, ptr align 1 %171) #18
  %172 = load ptr, ptr %.6, align 8
  %173 = getelementptr inbounds i8, ptr %172, i64 %138
  store ptr %173, ptr %.6, align 8
  %174 = getelementptr inbounds i8, ptr %168, i64 %138
  %175 = load ptr, ptr %12, align 8
  %176 = icmp uge ptr %175, %2
  %177 = load ptr, ptr %14, align 8
  %178 = icmp uge ptr %177, %0
  %179 = select i1 %176, i1 %178, i1 false
  br i1 %179, label %165, label %.preheader

180:                                              ; preds = %180, %.lr.ph62
  %181 = phi ptr [ %.promoted57, %.lr.ph62 ], [ %184, %180 ]
  %182 = phi ptr [ %.lcssa53, %.lr.ph62 ], [ %183, %180 ]
  tail call void %8(ptr align 1 %182, ptr align 1 %181) #18
  %183 = getelementptr inbounds i8, ptr %182, i64 %164
  %184 = getelementptr inbounds i8, ptr %181, i64 %164
  %.not19 = icmp ult ptr %184, %2
  br i1 %.not19, label %common.ret, label %180
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16220(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = add i64 %3, -1
  %11 = mul nuw i64 %10, %7
  %12 = getelementptr inbounds i8, ptr %0, i64 %11
  %13 = mul nuw i64 %3, %7
  %14 = getelementptr inbounds i8, ptr %0, i64 %13
  %15 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %12, ptr nonnull align 1 %14) #18
  %.not123 = icmp eq i8 %15, 1
  br i1 %.not123, label %.lr.ph, label %common.ret

.lr.ph:                                           ; preds = %9
  %16 = sub i64 0, %7
  br label %17

common.ret:                                       ; preds = %.critedge9, %51, %9
  ret void

17:                                               ; preds = %.critedge9, %.lr.ph
  %18 = phi ptr [ %14, %.lr.ph ], [ %136, %.critedge9 ]
  %.tr107126 = phi i64 [ %4, %.lr.ph ], [ %50, %.critedge9 ]
  %.tr106125 = phi i64 [ %3, %.lr.ph ], [ %19, %.critedge9 ]
  %.tr124 = phi ptr [ %0, %.lr.ph ], [ %130, %.critedge9 ]
  %19 = lshr i64 %.tr106125, 1
  %20 = sub nuw i64 %.tr106125, %19
  %21 = mul i64 %20, %7
  %22 = getelementptr i8, ptr %.tr124, i64 %21
  %23 = mul nuw i64 %.tr107126, %7
  %24 = getelementptr inbounds i8, ptr %18, i64 %23
  %25 = icmp ugt i64 %.tr107126, 1
  br i1 %25, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16483.exit

.lr.ph.i.preheader:                               ; preds = %17
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %.02.i = phi i64 [ %31, %.lr.ph.i ], [ %.tr107126, %.lr.ph.i.preheader ]
  %.081.i = phi ptr [ %spec.select.i, %.lr.ph.i ], [ %24, %.lr.ph.i.preheader ]
  %26 = lshr i64 %.02.i, 1
  %27 = mul i64 %26, %7
  %28 = sub i64 0, %27
  %29 = getelementptr inbounds i8, ptr %.081.i, i64 %28
  %30 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %22, ptr align 1 %29) #18
  %.not9.i = icmp eq i8 %30, 1
  %spec.select.i = select i1 %.not9.i, ptr %.081.i, ptr %29
  %31 = sub nuw i64 %.02.i, %26
  %32 = icmp ugt i64 %31, 1
  br i1 %32, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16483.exit

sort.monobound_binary_first__anon_16483.exit:     ; preds = %.lr.ph.i, %17
  %.08.lcssa.i = phi ptr [ %24, %17 ], [ %spec.select.i, %.lr.ph.i ]
  %33 = getelementptr inbounds i8, ptr %.08.lcssa.i, i64 %16
  %34 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %22, ptr align 1 %33) #18
  %.not.i = icmp eq i8 %34, 1
  %spec.select10.i = select i1 %.not.i, ptr %.08.lcssa.i, ptr %33
  %35 = ptrtoint ptr %spec.select10.i to i64
  %36 = ptrtoint ptr %18 to i64
  %37 = sub nuw i64 %35, %36
  %38 = or i64 %37, %7
  %39 = and i64 %38, -4294967296
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %sort.monobound_binary_first__anon_16483.exit
  %42 = trunc i64 %7 to i32
  %43 = trunc i64 %37 to i32
  %44 = udiv i32 %43, %42
  %45 = zext i32 %44 to i64
  br label %48

46:                                               ; preds = %sort.monobound_binary_first__anon_16483.exit
  %47 = udiv i64 %37, %7
  br label %48

48:                                               ; preds = %46, %41
  %49 = phi i64 [ %45, %41 ], [ %47, %46 ]
  %50 = sub nuw i64 %.tr107126, %49
  %.not96 = icmp ult i64 %37, %7
  br i1 %.not96, label %51, label %52

51:                                               ; preds = %.critedge3, %115, %114, %mem.copyBackwards__anon_9817.exit, %48
  %.not97 = icmp eq i64 %.tr107126, %49
  br i1 %.not97, label %common.ret, label %116

52:                                               ; preds = %48
  %53 = add nuw i64 %49, %20
  %.not99 = icmp ugt i64 %53, %2
  br i1 %.not99, label %106, label %54

54:                                               ; preds = %52
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr124, i64 %21, i1 false)
  %55 = getelementptr inbounds i8, ptr %1, i64 %21
  %56 = mul nuw i64 %49, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %55, ptr nonnull align 1 %18, i64 %56, i1 false)
  %57 = mul nuw i64 %53, %7
  %58 = getelementptr i8, ptr %.tr124, i64 %57
  %59 = mul nuw i64 %19, %7
  %.not6.i = icmp eq i64 %59, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9817.exit, label %iter.check

iter.check:                                       ; preds = %54
  %min.iters.check = icmp ult i64 %59, 4
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr124, i64 -1
  %60 = add i64 %.tr106125, %49
  %61 = mul i64 %60, %7
  %uglygep22 = getelementptr i8, ptr %uglygep, i64 %61
  %62 = sub i64 1, %59
  %63 = getelementptr i8, ptr %uglygep22, i64 %62
  %64 = icmp ugt ptr %63, %uglygep22
  %uglygep23 = getelementptr i8, ptr %.tr124, i64 -1
  %65 = mul i64 %.tr106125, %7
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %65
  %66 = sub i64 1, %59
  %67 = getelementptr i8, ptr %uglygep24, i64 %66
  %68 = icmp ugt ptr %67, %uglygep24
  %69 = or i1 %64, %68
  br i1 %69, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %70 = ptrtoint ptr %.tr124 to i64
  %71 = add i64 %70, -1
  %72 = mul i64 %.tr106125, %7
  %73 = add i64 %71, %72
  %74 = add i64 %.tr106125, %49
  %75 = mul i64 %74, %7
  %76 = add i64 %71, %75
  %77 = sub i64 %73, %76
  %diff.check = icmp ult i64 %77, 16
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check29 = icmp ult i64 %59, 16
  br i1 %min.iters.check29, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %59, -16
  %uglygep67 = getelementptr i8, ptr %.tr124, i64 -16
  %uglygep68 = getelementptr i8, ptr %uglygep67, i64 %65
  %78 = lshr i64 %59, 4
  %79 = mul i64 %78, -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv = phi i64 [ %lsr.iv.next, %vector.body ], [ 0, %vector.ph ]
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %80 = xor i64 %index, -1
  %81 = add i64 %59, %80
  %uglygep69 = getelementptr i8, ptr %uglygep68, i64 %lsr.iv
  %wide.load = load <16 x i8>, ptr %uglygep69, align 1
  %sunkaddr = getelementptr i8, ptr %58, i64 %81
  %sunkaddr89 = getelementptr i8, ptr %sunkaddr, i64 -15
  store <16 x i8> %wide.load, ptr %sunkaddr89, align 1
  %index.next = add nuw i64 %index, 16
  %lsr.iv.next = add i64 %lsr.iv, -16
  %82 = icmp eq i64 %79, %lsr.iv.next
  br i1 %82, label %middle.block, label %vector.body, !llvm.loop !543

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %59, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end33 = and i64 %59, 15
  %n.vec.remaining = and i64 %59, 12
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec32 = and i64 %59, -4
  %ind.end = and i64 %59, 3
  %uglygep70 = getelementptr i8, ptr %.tr124, i64 -4
  %uglygep71 = getelementptr i8, ptr %uglygep70, i64 %65
  %83 = mul i64 %vec.epilog.resume.val, -1
  %84 = lshr i64 %59, 2
  %85 = mul i64 %84, -4
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv72 = phi i64 [ %lsr.iv.next73, %vec.epilog.vector.body ], [ %83, %vec.epilog.ph ]
  %index35 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next40, %vec.epilog.vector.body ]
  %86 = xor i64 %index35, -1
  %87 = add i64 %59, %86
  %uglygep74 = getelementptr i8, ptr %uglygep71, i64 %lsr.iv72
  %wide.load37 = load <4 x i8>, ptr %uglygep74, align 1
  %sunkaddr90 = getelementptr i8, ptr %58, i64 %87
  %sunkaddr91 = getelementptr i8, ptr %sunkaddr90, i64 -3
  store <4 x i8> %wide.load37, ptr %sunkaddr91, align 1
  %index.next40 = add nuw i64 %index35, 4
  %lsr.iv.next73 = add i64 %lsr.iv72, -4
  %88 = icmp eq i64 %85, %lsr.iv.next73
  br i1 %88, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !544

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n34 = icmp eq i64 %59, %n.vec32
  br i1 %cmp.n34, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103.preheader

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %59, %iter.check ], [ %59, %vector.memcheck ], [ %59, %vector.scevcheck ], [ %ind.end33, %vec.epilog.iter.check ], [ %ind.end, %vec.epilog.middle.block ]
  %89 = add i64 %.07.i.ph, -1
  %xtraiter = and i64 %.07.i.ph, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.lr.ph.i103.prol.loopexit, label %.lr.ph.i103.prol.preheader

.lr.ph.i103.prol.preheader:                       ; preds = %.lr.ph.i103.preheader
  %uglygep75 = getelementptr i8, ptr %.tr124, i64 -1
  %uglygep76 = getelementptr i8, ptr %uglygep75, i64 %21
  br label %.lr.ph.i103.prol

.lr.ph.i103.prol:                                 ; preds = %.lr.ph.i103.prol, %.lr.ph.i103.prol.preheader
  %lsr.iv78 = phi i64 [ %xtraiter, %.lr.ph.i103.prol.preheader ], [ %lsr.iv.next79, %.lr.ph.i103.prol ]
  %.07.i.prol = phi i64 [ %90, %.lr.ph.i103.prol ], [ %.07.i.ph, %.lr.ph.i103.prol.preheader ]
  %90 = add i64 %.07.i.prol, -1
  %91 = getelementptr inbounds i8, ptr %58, i64 %90
  %uglygep77 = getelementptr i8, ptr %uglygep76, i64 %.07.i.prol
  %92 = load i8, ptr %uglygep77, align 1
  store i8 %92, ptr %91, align 1
  %lsr.iv.next79 = add nsw i64 %lsr.iv78, -1
  %prol.iter.cmp.not = icmp eq i64 %lsr.iv.next79, 0
  br i1 %prol.iter.cmp.not, label %.lr.ph.i103.prol.loopexit, label %.lr.ph.i103.prol, !llvm.loop !545

.lr.ph.i103.prol.loopexit:                        ; preds = %.lr.ph.i103.prol, %.lr.ph.i103.preheader
  %.07.i.unr = phi i64 [ %.07.i.ph, %.lr.ph.i103.preheader ], [ %90, %.lr.ph.i103.prol ]
  %93 = icmp ult i64 %89, 3
  br i1 %93, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103.preheader66

.lr.ph.i103.preheader66:                          ; preds = %.lr.ph.i103.prol.loopexit
  %uglygep80 = getelementptr i8, ptr %.tr124, i64 -1
  %uglygep81 = getelementptr i8, ptr %uglygep80, i64 %21
  br label %.lr.ph.i103

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader66
  %.07.i = phi i64 [ %103, %.lr.ph.i103 ], [ %.07.i.unr, %.lr.ph.i103.preheader66 ]
  %94 = add i64 %.07.i, -1
  %95 = getelementptr inbounds i8, ptr %58, i64 %94
  %uglygep88 = getelementptr i8, ptr %uglygep81, i64 %.07.i
  %96 = load i8, ptr %uglygep88, align 1
  store i8 %96, ptr %95, align 1
  %97 = add i64 %.07.i, -2
  %98 = getelementptr inbounds i8, ptr %58, i64 %97
  %uglygep86 = getelementptr i8, ptr %uglygep81, i64 %.07.i
  %uglygep87 = getelementptr i8, ptr %uglygep86, i64 -1
  %99 = load i8, ptr %uglygep87, align 1
  store i8 %99, ptr %98, align 1
  %100 = add i64 %.07.i, -3
  %101 = getelementptr inbounds i8, ptr %58, i64 %100
  %uglygep84 = getelementptr i8, ptr %uglygep81, i64 %.07.i
  %uglygep85 = getelementptr i8, ptr %uglygep84, i64 -2
  %102 = load i8, ptr %uglygep85, align 1
  store i8 %102, ptr %101, align 1
  %103 = add i64 %.07.i, -4
  %104 = getelementptr inbounds i8, ptr %58, i64 %103
  %uglygep82 = getelementptr i8, ptr %uglygep81, i64 %.07.i
  %uglygep83 = getelementptr i8, ptr %uglygep82, i64 -3
  %105 = load i8, ptr %uglygep83, align 1
  store i8 %105, ptr %104, align 1
  %.not.i102.3 = icmp eq i64 %103, 0
  br i1 %.not.i102.3, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103, !llvm.loop !546

mem.copyBackwards__anon_9817.exit:                ; preds = %.lr.ph.i103, %.lr.ph.i103.prol.loopexit, %vec.epilog.middle.block, %middle.block, %54
  tail call fastcc void @sort.cross_merge__anon_14512(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %20, i64 %49, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %51

106:                                              ; preds = %52
  %107 = add nuw i64 %49, %19
  tail call fastcc void @sort.trinity_rotation(ptr nonnull align 1 %22, i64 %107, ptr nonnull align 1 %1, i64 %2, i64 %19, i64 %7, ptr nonnull readonly align 1 %8)
  %108 = shl nuw i64 %49, 1
  %109 = icmp ult i64 %108, %20
  %110 = shl nuw i64 %20, 1
  %111 = icmp ult i64 %110, %49
  %112 = select i1 %109, i1 true, i1 %111
  br i1 %112, label %113, label %.critedge3

113:                                              ; preds = %106
  %.not100 = icmp ugt i64 %49, %2
  br i1 %.not100, label %.critedge, label %114

114:                                              ; preds = %113
  tail call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %.tr124, i64 %53, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %51

.critedge:                                        ; preds = %113
  %.not101 = icmp ugt i64 %20, %2
  br i1 %.not101, label %.critedge3, label %115

115:                                              ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16484(ptr nonnull align 1 %.tr124, i64 %53, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %51

.critedge3:                                       ; preds = %.critedge, %106
  tail call fastcc void @sort.rotate_merge_block__anon_16220(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %2, i64 %20, i64 %49, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br label %51

116:                                              ; preds = %51
  %117 = shl nuw i64 %50, 1
  %118 = icmp ult i64 %117, %19
  %119 = and i64 %.tr106125, -2
  %120 = icmp ult i64 %119, %50
  %121 = or i1 %120, %118
  %122 = icmp ugt i64 %50, %2
  %not. = xor i1 %121, true
  %or.cond12 = select i1 %not., i1 true, i1 %122
  %.pre = add nuw i64 %50, %19
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %126, label %.critedge7

.critedge7:                                       ; preds = %116
  %123 = add nuw i64 %49, %20
  %124 = mul nuw i64 %123, %7
  %125 = getelementptr inbounds i8, ptr %.tr124, i64 %124
  tail call fastcc void @sort.partial_backwards_merge__anon_16219(ptr nonnull align 1 %125, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %19, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret void

126:                                              ; preds = %116
  %127 = icmp ule i64 %20, %2
  %or.cond14 = select i1 %121, i1 %127, i1 false
  %128 = add nuw i64 %49, %20
  %129 = mul nuw i64 %128, %7
  %130 = getelementptr inbounds i8, ptr %.tr124, i64 %129
  br i1 %or.cond14, label %131, label %.critedge9

131:                                              ; preds = %126
  tail call fastcc void @sort.partial_forward_merge__anon_16484(ptr nonnull align 1 %130, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %19, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret void

.critedge9:                                       ; preds = %126
  %132 = add nsw i64 %19, -1
  %133 = mul nuw i64 %132, %7
  %134 = getelementptr inbounds i8, ptr %130, i64 %133
  %135 = mul nuw i64 %19, %7
  %136 = getelementptr inbounds i8, ptr %130, i64 %135
  %137 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %134, ptr nonnull align 1 %136) #18
  %.not = icmp eq i8 %137, 1
  br i1 %.not, label %17, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16222(ptr nocapture nonnull writeonly align 1 %0, ptr nocapture nonnull readonly align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5, ptr nocapture nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = shl nuw i64 %2, 3
  %9 = getelementptr inbounds i8, ptr %1, i64 %8
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  %11 = shl nuw i64 %3, 3
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = add nuw i64 %3, %2
  %14 = shl i64 %13, 3
  %15 = add i64 %14, -8
  %16 = getelementptr inbounds i8, ptr %0, i64 %15
  %17 = icmp ult i64 %2, %3
  br i1 %17, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %7
  %.066 = phi ptr [ %31, %.cont16 ], [ %0, %7 ]
  %.061 = phi ptr [ %., %.cont16 ], [ %9, %7 ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %7 ]
  %18 = shl nuw i64 %2, 1
  tail call void %6(ptr align 1 %5, i64 %18) #18
  %19 = load ptr, ptr %.0, align 8
  %20 = load ptr, ptr %.061, align 8
  %21 = tail call i8 %4(ptr align 1 %5, ptr align 1 %19, ptr align 1 %20) #18
  %.not = icmp eq i8 %21, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  %22 = load i64, ptr %.sroa.speculated21, align 8
  store i64 %22, ptr %.066, align 8
  %23 = add i64 %2, -1
  %.not10 = icmp eq i64 %23, 0
  br i1 %.not10, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %24 = icmp eq i8 %21, 1
  %25 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 8
  %.0. = select i1 %24, ptr %.0, ptr %25
  %..061 = select i1 %24, ptr %25, ptr %.061
  br label %.cont

.cont16:                                          ; preds = %7
  tail call void %6(ptr align 1 %5, i64 1) #18
  %26 = load ptr, ptr %1, align 8
  %27 = load ptr, ptr %9, align 8
  %28 = tail call i8 %4(ptr align 1 %5, ptr align 1 %26, ptr align 1 %27) #18
  %.not77 = icmp eq i8 %28, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %9, ptr %1
  %29 = load i64, ptr %.sroa.speculated12, align 8
  store i64 %29, ptr %0, align 8
  %30 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 8
  %. = select i1 %.not77, ptr %30, ptr %9
  %.78 = select i1 %.not77, ptr %1, ptr %30
  %31 = getelementptr inbounds i8, ptr %0, i64 8
  br label %.cont25

.cont:                                            ; preds = %.cont, %.cont.preheader
  %lsr.iv = phi i64 [ 1, %.cont.preheader ], [ %lsr.iv.next, %.cont ]
  %.37 = phi ptr [ %.3., %.cont ], [ %.0., %.cont.preheader ]
  %.3646 = phi ptr [ %..364, %.cont ], [ %..061, %.cont.preheader ]
  %.0684 = phi ptr [ %.169, %.cont ], [ %10, %.cont.preheader ]
  %.0703 = phi ptr [ %.171, %.cont ], [ %12, %.cont.preheader ]
  %.0722 = phi ptr [ %44, %.cont ], [ %16, %.cont.preheader ]
  %32 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, ptr %.066, i64 %32
  %33 = load ptr, ptr %.37, align 8
  %34 = load ptr, ptr %.3646, align 8
  %35 = tail call i8 %4(ptr align 1 %5, ptr align 1 %33, ptr align 1 %34) #18
  %.not76 = icmp eq i8 %35, 1
  %.sroa.speculated = select i1 %.not76, ptr %.3646, ptr %.37
  %36 = load i64, ptr %.sroa.speculated, align 8
  store i64 %36, ptr %uglygep, align 8
  %37 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %..364 = select i1 %.not76, ptr %37, ptr %.3646
  %.3. = select i1 %.not76, ptr %.37, ptr %37
  %38 = load ptr, ptr %.0684, align 8
  %39 = load ptr, ptr %.0703, align 8
  %40 = tail call i8 %4(ptr align 1 %5, ptr align 1 %38, ptr align 1 %39) #18
  %41 = icmp eq i8 %40, 1
  %.sroa.speculated40 = select i1 %41, ptr %.0684, ptr %.0703
  %42 = load i64, ptr %.sroa.speculated40, align 8
  store i64 %42, ptr %.0722, align 8
  %43 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 -8
  %.171 = select i1 %41, ptr %.0703, ptr %43
  %.169 = select i1 %41, ptr %43, ptr %.0684
  %44 = getelementptr inbounds i8, ptr %.0722, i64 -8
  %lsr.iv.next = add i64 %lsr.iv, 1
  %exitcond.not = icmp eq i64 %2, %lsr.iv.next
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %.cont, %.cont25
  %.072.lcssa = phi ptr [ %16, %.cont25 ], [ %44, %.cont ]
  %.070.lcssa = phi ptr [ %12, %.cont25 ], [ %.171, %.cont ]
  %.068.lcssa = phi ptr [ %10, %.cont25 ], [ %.169, %.cont ]
  %45 = load ptr, ptr %.068.lcssa, align 8
  %46 = load ptr, ptr %.070.lcssa, align 8
  %47 = tail call i8 %4(ptr align 1 %5, ptr align 1 %45, ptr align 1 %46) #18
  %48 = icmp eq i8 %47, 1
  %.sroa.speculated46 = select i1 %48, ptr %.068.lcssa, ptr %.070.lcssa
  %49 = load i64, ptr %.sroa.speculated46, align 8
  store i64 %49, ptr %.072.lcssa, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quad_swap_merge__anon_16224(ptr nocapture nonnull align 1 %0, ptr nocapture nonnull align 1 %1, ptr nocapture nonnull readonly align 1 %2, ptr align 1 %3) unnamed_addr #4 {
.cont19:
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  %5 = load ptr, ptr %0, align 8
  %6 = load ptr, ptr %4, align 8
  %7 = tail call i8 %2(ptr align 1 %3, ptr align 1 %5, ptr align 1 %6) #18
  %.not = icmp eq i8 %7, 1
  %.sroa.speculated151 = select i1 %.not, i64 16, i64 0
  %.sroa.speculated15 = select i1 %.not, ptr %4, ptr %0
  %sunkaddr = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated151
  %8 = load i64, ptr %sunkaddr, align 8
  store i64 %8, ptr %1, align 8
  %9 = getelementptr inbounds i8, ptr %.sroa.speculated15, i64 8
  %. = select i1 %.not, ptr %9, ptr %4
  %.187 = select i1 %.not, ptr %0, ptr %9
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  %11 = load ptr, ptr %.187, align 8
  %12 = load ptr, ptr %., align 8
  %13 = tail call i8 %2(ptr align 1 %3, ptr align 1 %11, ptr align 1 %12) #18
  %.not180 = icmp eq i8 %13, 1
  %14 = select i1 %.not180, ptr %., ptr %.187
  %15 = load i64, ptr %14, align 8
  store i64 %15, ptr %10, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = getelementptr inbounds i8, ptr %0, i64 24
  %18 = getelementptr inbounds i8, ptr %1, i64 24
  %19 = load ptr, ptr %16, align 8
  %20 = load ptr, ptr %17, align 8
  %21 = tail call i8 %2(ptr align 1 %3, ptr align 1 %19, ptr align 1 %20) #18
  %22 = icmp eq i8 %21, 1
  %.sroa.speculated2 = select i1 %22, i64 8, i64 24
  %.sroa.speculated = select i1 %22, ptr %16, ptr %17
  %sunkaddr3 = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated2
  %23 = load i64, ptr %sunkaddr3, align 8
  store i64 %23, ptr %18, align 8
  %24 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 -8
  %.1164 = select i1 %22, ptr %17, ptr %24
  %.1 = select i1 %22, ptr %24, ptr %16
  %25 = getelementptr inbounds i8, ptr %1, i64 16
  %26 = load ptr, ptr %.1, align 8
  %27 = load ptr, ptr %.1164, align 8
  %28 = tail call i8 %2(ptr align 1 %3, ptr align 1 %26, ptr align 1 %27) #18
  %29 = icmp eq i8 %28, 1
  %.0165 = select i1 %29, ptr %.1, ptr %.1164
  %30 = load i64, ptr %.0165, align 8
  store i64 %30, ptr %25, align 8
  %31 = getelementptr inbounds i8, ptr %1, i64 32
  %32 = getelementptr inbounds i8, ptr %0, i64 32
  %33 = getelementptr inbounds i8, ptr %0, i64 48
  %34 = load ptr, ptr %32, align 8
  %35 = load ptr, ptr %33, align 8
  %36 = tail call i8 %2(ptr align 1 %3, ptr align 1 %34, ptr align 1 %35) #18
  %.not181 = icmp eq i8 %36, 1
  %.sroa.speculated504 = select i1 %.not181, i64 48, i64 32
  %.sroa.speculated50 = select i1 %.not181, ptr %33, ptr %32
  %sunkaddr5 = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated504
  %37 = load i64, ptr %sunkaddr5, align 8
  store i64 %37, ptr %31, align 8
  %38 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 8
  %.0168 = select i1 %.not181, ptr %38, ptr %33
  %.0166 = select i1 %.not181, ptr %32, ptr %38
  %39 = getelementptr inbounds i8, ptr %1, i64 40
  %40 = load ptr, ptr %.0166, align 8
  %41 = load ptr, ptr %.0168, align 8
  %42 = tail call i8 %2(ptr align 1 %3, ptr align 1 %40, ptr align 1 %41) #18
  %.not182 = icmp eq i8 %42, 1
  %43 = select i1 %.not182, ptr %.0168, ptr %.0166
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %39, align 8
  %45 = getelementptr inbounds i8, ptr %0, i64 40
  %46 = getelementptr inbounds i8, ptr %0, i64 56
  %47 = getelementptr inbounds i8, ptr %1, i64 56
  %48 = load ptr, ptr %45, align 8
  %49 = load ptr, ptr %46, align 8
  %50 = tail call i8 %2(ptr align 1 %3, ptr align 1 %48, ptr align 1 %49) #18
  %51 = icmp eq i8 %50, 1
  %.sroa.speculated416 = select i1 %51, i64 40, i64 56
  %.sroa.speculated41 = select i1 %51, ptr %45, ptr %46
  %sunkaddr7 = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated416
  %52 = load i64, ptr %sunkaddr7, align 8
  store i64 %52, ptr %47, align 8
  %53 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 -8
  %.1169 = select i1 %51, ptr %46, ptr %53
  %.1167 = select i1 %51, ptr %53, ptr %45
  %54 = getelementptr inbounds i8, ptr %1, i64 48
  %55 = load ptr, ptr %.1167, align 8
  %56 = load ptr, ptr %.1169, align 8
  %57 = tail call i8 %2(ptr align 1 %3, ptr align 1 %55, ptr align 1 %56) #18
  %58 = icmp eq i8 %57, 1
  %.0170 = select i1 %58, ptr %.1167, ptr %.1169
  %59 = load i64, ptr %.0170, align 8
  store i64 %59, ptr %54, align 8
  %60 = load ptr, ptr %1, align 8
  %61 = load ptr, ptr %31, align 8
  %62 = tail call i8 %2(ptr align 1 %3, ptr align 1 %60, ptr align 1 %61) #18
  %.not183 = icmp eq i8 %62, 1
  %.sroa.speculated1288 = select i1 %.not183, i64 32, i64 0
  %.sroa.speculated128 = select i1 %.not183, ptr %31, ptr %1
  %sunkaddr9 = getelementptr inbounds i8, ptr %1, i64 %.sroa.speculated1288
  %63 = load i64, ptr %sunkaddr9, align 8
  store i64 %63, ptr %0, align 8
  %64 = getelementptr inbounds i8, ptr %.sroa.speculated128, i64 8
  %.0173 = select i1 %.not183, ptr %64, ptr %31
  %.0171 = select i1 %.not183, ptr %1, ptr %64
  %65 = load ptr, ptr %.0171, align 8
  %66 = load ptr, ptr %.0173, align 8
  %67 = tail call i8 %2(ptr align 1 %3, ptr align 1 %65, ptr align 1 %66) #18
  %.not184 = icmp eq i8 %67, 1
  %.sroa.speculated119 = select i1 %.not184, ptr %.0173, ptr %.0171
  %68 = load i64, ptr %.sroa.speculated119, align 8
  store i64 %68, ptr %16, align 8
  %69 = getelementptr inbounds i8, ptr %.sroa.speculated119, i64 8
  %.1174 = select i1 %.not184, ptr %69, ptr %.0173
  %.1172 = select i1 %.not184, ptr %.0171, ptr %69
  %70 = load ptr, ptr %.1172, align 8
  %71 = load ptr, ptr %.1174, align 8
  %72 = tail call i8 %2(ptr align 1 %3, ptr align 1 %70, ptr align 1 %71) #18
  %.not185 = icmp eq i8 %72, 1
  %.sroa.speculated110 = select i1 %.not185, ptr %.1174, ptr %.1172
  %73 = load i64, ptr %.sroa.speculated110, align 8
  store i64 %73, ptr %4, align 8
  %74 = getelementptr inbounds i8, ptr %.sroa.speculated110, i64 8
  %.2175 = select i1 %.not185, ptr %74, ptr %.1174
  %.2 = select i1 %.not185, ptr %.1172, ptr %74
  %75 = load ptr, ptr %.2, align 8
  %76 = load ptr, ptr %.2175, align 8
  %77 = tail call i8 %2(ptr align 1 %3, ptr align 1 %75, ptr align 1 %76) #18
  %.not186 = icmp eq i8 %77, 1
  %78 = select i1 %.not186, ptr %.2175, ptr %.2
  %79 = load i64, ptr %78, align 8
  store i64 %79, ptr %17, align 8
  %80 = load ptr, ptr %18, align 8
  %81 = load ptr, ptr %47, align 8
  %82 = tail call i8 %2(ptr align 1 %3, ptr align 1 %80, ptr align 1 %81) #18
  %83 = icmp eq i8 %82, 1
  %.sroa.speculated10110 = select i1 %83, i64 24, i64 56
  %.sroa.speculated101 = select i1 %83, ptr %18, ptr %47
  %sunkaddr11 = getelementptr inbounds i8, ptr %1, i64 %.sroa.speculated10110
  %84 = load i64, ptr %sunkaddr11, align 8
  store i64 %84, ptr %46, align 8
  %85 = getelementptr inbounds i8, ptr %.sroa.speculated101, i64 -8
  %.3176 = select i1 %83, ptr %47, ptr %85
  %.3 = select i1 %83, ptr %85, ptr %18
  %86 = load ptr, ptr %.3, align 8
  %87 = load ptr, ptr %.3176, align 8
  %88 = tail call i8 %2(ptr align 1 %3, ptr align 1 %86, ptr align 1 %87) #18
  %89 = icmp eq i8 %88, 1
  %.sroa.speculated92 = select i1 %89, ptr %.3, ptr %.3176
  %90 = load i64, ptr %.sroa.speculated92, align 8
  store i64 %90, ptr %33, align 8
  %91 = getelementptr inbounds i8, ptr %.sroa.speculated92, i64 -8
  %.4177 = select i1 %89, ptr %.3176, ptr %91
  %.4 = select i1 %89, ptr %91, ptr %.3
  %92 = load ptr, ptr %.4, align 8
  %93 = load ptr, ptr %.4177, align 8
  %94 = tail call i8 %2(ptr align 1 %3, ptr align 1 %92, ptr align 1 %93) #18
  %95 = icmp eq i8 %94, 1
  %.sroa.speculated83 = select i1 %95, ptr %.4, ptr %.4177
  %96 = load i64, ptr %.sroa.speculated83, align 8
  store i64 %96, ptr %45, align 8
  %97 = getelementptr inbounds i8, ptr %.sroa.speculated83, i64 -8
  %.5178 = select i1 %95, ptr %.4177, ptr %97
  %.5 = select i1 %95, ptr %97, ptr %.4
  %98 = load ptr, ptr %.5, align 8
  %99 = load ptr, ptr %.5178, align 8
  %100 = tail call i8 %2(ptr align 1 %3, ptr align 1 %98, ptr align 1 %99) #18
  %101 = icmp eq i8 %100, 1
  %.0179 = select i1 %101, ptr %.5, ptr %.5178
  %102 = load i64, ptr %.0179, align 8
  store i64 %102, ptr %32, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = icmp eq i64 %1, %4
  br i1 %14, label %common.ret, label %15

common.ret:                                       ; preds = %.lr.ph31, %.preheader, %15, %8
  ret void

15:                                               ; preds = %8
  %16 = shl i64 %4, 3
  %17 = add i64 %16, -8
  %18 = getelementptr inbounds i8, ptr %0, i64 %17
  store ptr %18, ptr %13, align 8
  %19 = shl i64 %1, 3
  %20 = add i64 %19, -8
  %21 = getelementptr inbounds i8, ptr %0, i64 %20
  store ptr %21, ptr %12, align 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %22 = getelementptr inbounds i8, ptr %0, i64 %16
  %23 = load ptr, ptr %18, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i8 %5(ptr align 1 %6, ptr align 1 %23, ptr align 1 %24) #18
  %.not = icmp eq i8 %25, 1
  br i1 %.not, label %26, label %common.ret

26:                                               ; preds = %15
  %27 = sub nuw i64 %1, %4
  %28 = icmp ule i64 %1, %3
  %29 = icmp ugt i64 %27, 63
  %30 = select i1 %28, i1 %29, i1 false
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %27, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %19, i1 false)
  ret void

32:                                               ; preds = %26
  %33 = shl i64 %27, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %22, i64 %33, i1 false)
  %34 = add i64 %33, -8
  %35 = getelementptr inbounds i8, ptr %2, i64 %34
  store ptr %35, ptr %11, align 8
  %36 = getelementptr inbounds i8, ptr %0, i64 128
  %37 = getelementptr inbounds i8, ptr %2, i64 128
  %38 = icmp sgt i64 %17, 128
  %39 = icmp sgt i64 %34, 128
  %40 = select i1 %38, i1 %39, i1 false
  br i1 %40, label %.preheader4.preheader, label %.loopexit6

.preheader4.preheader:                            ; preds = %32
  br label %.preheader4

.loopexit3:                                       ; preds = %121
  store ptr %168, ptr %13, align 8
  store ptr %167, ptr %12, align 8
  %.pre = load ptr, ptr %11, align 8
  br label %.loopexit6

.loopexit5:                                       ; preds = %65
  store ptr %112, ptr %11, align 8
  store ptr %111, ptr %12, align 8
  %.pre51 = load ptr, ptr %13, align 8
  br label %.loopexit6

.loopexit6:                                       ; preds = %.loopexit, %.loopexit5, %.loopexit3, %32
  %.promoted2253 = phi ptr [ %21, %32 ], [ %111, %.loopexit5 ], [ %167, %.loopexit3 ], [ %178, %.loopexit ]
  %41 = phi ptr [ %18, %32 ], [ %.pre51, %.loopexit5 ], [ %168, %.loopexit3 ], [ %52, %.loopexit ]
  %42 = phi ptr [ %35, %32 ], [ %112, %.loopexit5 ], [ %.pre, %.loopexit3 ], [ %54, %.loopexit ]
  %43 = ptrtoint ptr %2 to i64
  %44 = add nuw i64 %43, 8
  %45 = ptrtoint ptr %0 to i64
  %46 = add nuw i64 %45, 8
  %47 = ptrtoint ptr %42 to i64
  %48 = icmp ult i64 %44, %47
  %49 = ptrtoint ptr %41 to i64
  %50 = icmp ult i64 %46, %49
  %51 = select i1 %48, i1 %50, i1 false
  br i1 %51, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.loopexit6
  br label %.lr.ph

.loopexit:                                        ; preds = %177
  store ptr %178, ptr %12, align 8
  %52 = load ptr, ptr %13, align 8
  %53 = icmp ugt ptr %52, %36
  %54 = load ptr, ptr %11, align 8
  %55 = icmp ugt ptr %54, %37
  %56 = select i1 %53, i1 %55, i1 false
  br i1 %56, label %.preheader4, label %.loopexit6

.preheader4:                                      ; preds = %.loopexit, %.preheader4.preheader
  %.promoted10 = phi ptr [ %178, %.loopexit ], [ %21, %.preheader4.preheader ]
  %.promoted = phi ptr [ %54, %.loopexit ], [ %35, %.preheader4.preheader ]
  %57 = phi ptr [ %52, %.loopexit ], [ %18, %.preheader4.preheader ]
  br label %58

58:                                               ; preds = %65, %.preheader4
  %59 = phi ptr [ %.promoted10, %.preheader4 ], [ %111, %65 ]
  %60 = phi ptr [ %.promoted, %.preheader4 ], [ %112, %65 ]
  %61 = getelementptr inbounds i8, ptr %60, i64 -120
  tail call void %7(ptr align 1 %6, i64 1) #18
  %62 = load ptr, ptr %57, align 8
  %63 = load ptr, ptr %61, align 8
  %64 = tail call i8 %5(ptr align 1 %6, ptr align 1 %62, ptr align 1 %63) #18
  %.not21 = icmp eq i8 %64, 1
  br i1 %.not21, label %.preheader2, label %65

.preheader2:                                      ; preds = %58
  store ptr %60, ptr %11, align 8
  %.promoted13 = load ptr, ptr %13, align 8
  br label %113

65:                                               ; preds = %58
  %66 = load i64, ptr %60, align 8
  store i64 %66, ptr %59, align 8
  %67 = getelementptr inbounds i8, ptr %59, i64 -8
  %68 = getelementptr inbounds i8, ptr %60, i64 -8
  %69 = load i64, ptr %68, align 8
  store i64 %69, ptr %67, align 8
  %70 = getelementptr inbounds i8, ptr %59, i64 -16
  %71 = getelementptr inbounds i8, ptr %60, i64 -16
  %72 = load i64, ptr %71, align 8
  store i64 %72, ptr %70, align 8
  %73 = getelementptr inbounds i8, ptr %59, i64 -24
  %74 = getelementptr inbounds i8, ptr %60, i64 -24
  %75 = load i64, ptr %74, align 8
  store i64 %75, ptr %73, align 8
  %76 = getelementptr inbounds i8, ptr %59, i64 -32
  %77 = getelementptr inbounds i8, ptr %60, i64 -32
  %78 = load i64, ptr %77, align 8
  store i64 %78, ptr %76, align 8
  %79 = getelementptr inbounds i8, ptr %59, i64 -40
  %80 = getelementptr inbounds i8, ptr %60, i64 -40
  %81 = load i64, ptr %80, align 8
  store i64 %81, ptr %79, align 8
  %82 = getelementptr inbounds i8, ptr %59, i64 -48
  %83 = getelementptr inbounds i8, ptr %60, i64 -48
  %84 = load i64, ptr %83, align 8
  store i64 %84, ptr %82, align 8
  %85 = getelementptr inbounds i8, ptr %59, i64 -56
  %86 = getelementptr inbounds i8, ptr %60, i64 -56
  %87 = load i64, ptr %86, align 8
  store i64 %87, ptr %85, align 8
  %88 = getelementptr inbounds i8, ptr %59, i64 -64
  %89 = getelementptr inbounds i8, ptr %60, i64 -64
  %90 = load i64, ptr %89, align 8
  store i64 %90, ptr %88, align 8
  %91 = getelementptr inbounds i8, ptr %59, i64 -72
  %92 = getelementptr inbounds i8, ptr %60, i64 -72
  %93 = load i64, ptr %92, align 8
  store i64 %93, ptr %91, align 8
  %94 = getelementptr inbounds i8, ptr %59, i64 -80
  %95 = getelementptr inbounds i8, ptr %60, i64 -80
  %96 = load i64, ptr %95, align 8
  store i64 %96, ptr %94, align 8
  %97 = getelementptr inbounds i8, ptr %59, i64 -88
  %98 = getelementptr inbounds i8, ptr %60, i64 -88
  %99 = load i64, ptr %98, align 8
  store i64 %99, ptr %97, align 8
  %100 = getelementptr inbounds i8, ptr %59, i64 -96
  %101 = getelementptr inbounds i8, ptr %60, i64 -96
  %102 = load i64, ptr %101, align 8
  store i64 %102, ptr %100, align 8
  %103 = getelementptr inbounds i8, ptr %59, i64 -104
  %104 = getelementptr inbounds i8, ptr %60, i64 -104
  %105 = load i64, ptr %104, align 8
  store i64 %105, ptr %103, align 8
  %106 = getelementptr inbounds i8, ptr %59, i64 -112
  %107 = getelementptr inbounds i8, ptr %60, i64 -112
  %108 = load i64, ptr %107, align 8
  store i64 %108, ptr %106, align 8
  %109 = getelementptr inbounds i8, ptr %59, i64 -120
  %sunkaddr = getelementptr inbounds i8, ptr %60, i64 -120
  %110 = load i64, ptr %sunkaddr, align 8
  store i64 %110, ptr %109, align 8
  %111 = getelementptr inbounds i8, ptr %59, i64 -128
  %112 = getelementptr inbounds i8, ptr %60, i64 -128
  %.not25 = icmp ugt ptr %112, %37
  br i1 %.not25, label %58, label %.loopexit5

113:                                              ; preds = %121, %.preheader2
  %114 = phi ptr [ %59, %.preheader2 ], [ %167, %121 ]
  %115 = phi ptr [ %.promoted13, %.preheader2 ], [ %168, %121 ]
  %116 = getelementptr inbounds i8, ptr %115, i64 -120
  tail call void %7(ptr align 1 %6, i64 1) #18
  %117 = load ptr, ptr %116, align 8
  %118 = load ptr, ptr %60, align 8
  %119 = tail call i8 %5(ptr align 1 %6, ptr align 1 %117, ptr align 1 %118) #18
  %120 = icmp eq i8 %119, 1
  br i1 %120, label %121, label %.preheader1

.preheader1:                                      ; preds = %113
  store ptr %115, ptr %13, align 8
  store ptr %114, ptr %12, align 8
  br label %169

121:                                              ; preds = %113
  %122 = load i64, ptr %115, align 8
  store i64 %122, ptr %114, align 8
  %123 = getelementptr inbounds i8, ptr %114, i64 -8
  %124 = getelementptr inbounds i8, ptr %115, i64 -8
  %125 = load i64, ptr %124, align 8
  store i64 %125, ptr %123, align 8
  %126 = getelementptr inbounds i8, ptr %114, i64 -16
  %127 = getelementptr inbounds i8, ptr %115, i64 -16
  %128 = load i64, ptr %127, align 8
  store i64 %128, ptr %126, align 8
  %129 = getelementptr inbounds i8, ptr %114, i64 -24
  %130 = getelementptr inbounds i8, ptr %115, i64 -24
  %131 = load i64, ptr %130, align 8
  store i64 %131, ptr %129, align 8
  %132 = getelementptr inbounds i8, ptr %114, i64 -32
  %133 = getelementptr inbounds i8, ptr %115, i64 -32
  %134 = load i64, ptr %133, align 8
  store i64 %134, ptr %132, align 8
  %135 = getelementptr inbounds i8, ptr %114, i64 -40
  %136 = getelementptr inbounds i8, ptr %115, i64 -40
  %137 = load i64, ptr %136, align 8
  store i64 %137, ptr %135, align 8
  %138 = getelementptr inbounds i8, ptr %114, i64 -48
  %139 = getelementptr inbounds i8, ptr %115, i64 -48
  %140 = load i64, ptr %139, align 8
  store i64 %140, ptr %138, align 8
  %141 = getelementptr inbounds i8, ptr %114, i64 -56
  %142 = getelementptr inbounds i8, ptr %115, i64 -56
  %143 = load i64, ptr %142, align 8
  store i64 %143, ptr %141, align 8
  %144 = getelementptr inbounds i8, ptr %114, i64 -64
  %145 = getelementptr inbounds i8, ptr %115, i64 -64
  %146 = load i64, ptr %145, align 8
  store i64 %146, ptr %144, align 8
  %147 = getelementptr inbounds i8, ptr %114, i64 -72
  %148 = getelementptr inbounds i8, ptr %115, i64 -72
  %149 = load i64, ptr %148, align 8
  store i64 %149, ptr %147, align 8
  %150 = getelementptr inbounds i8, ptr %114, i64 -80
  %151 = getelementptr inbounds i8, ptr %115, i64 -80
  %152 = load i64, ptr %151, align 8
  store i64 %152, ptr %150, align 8
  %153 = getelementptr inbounds i8, ptr %114, i64 -88
  %154 = getelementptr inbounds i8, ptr %115, i64 -88
  %155 = load i64, ptr %154, align 8
  store i64 %155, ptr %153, align 8
  %156 = getelementptr inbounds i8, ptr %114, i64 -96
  %157 = getelementptr inbounds i8, ptr %115, i64 -96
  %158 = load i64, ptr %157, align 8
  store i64 %158, ptr %156, align 8
  %159 = getelementptr inbounds i8, ptr %114, i64 -104
  %160 = getelementptr inbounds i8, ptr %115, i64 -104
  %161 = load i64, ptr %160, align 8
  store i64 %161, ptr %159, align 8
  %162 = getelementptr inbounds i8, ptr %114, i64 -112
  %163 = getelementptr inbounds i8, ptr %115, i64 -112
  %164 = load i64, ptr %163, align 8
  store i64 %164, ptr %162, align 8
  %165 = getelementptr inbounds i8, ptr %114, i64 -120
  %sunkaddr59 = getelementptr inbounds i8, ptr %115, i64 -120
  %166 = load i64, ptr %sunkaddr59, align 8
  store i64 %166, ptr %165, align 8
  %167 = getelementptr inbounds i8, ptr %114, i64 -128
  %168 = getelementptr inbounds i8, ptr %115, i64 -128
  %.not24 = icmp ugt ptr %168, %36
  br i1 %.not24, label %113, label %.loopexit3

169:                                              ; preds = %177, %.preheader1
  %lsr.iv = phi i64 [ -8, %.preheader1 ], [ %math, %177 ]
  %170 = phi ptr [ %178, %177 ], [ %114, %.preheader1 ]
  %171 = load ptr, ptr %13, align 8
  %172 = load ptr, ptr %11, align 8
  %173 = getelementptr inbounds i8, ptr %172, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %174 = load ptr, ptr %171, align 8
  %175 = load ptr, ptr %173, align 8
  %176 = tail call i8 %5(ptr align 1 %6, ptr align 1 %174, ptr align 1 %175) #18
  %.not22 = icmp eq i8 %176, 1
  br i1 %.not22, label %186, label %180

177:                                              ; preds = %198, %192, %180
  %178 = phi ptr [ %196, %192 ], [ %215, %198 ], [ %184, %180 ]
  %179 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv, i64 1)
  %math = extractvalue { i64, i1 } %179, 0
  %ov = extractvalue { i64, i1 } %179, 1
  br i1 %ov, label %.loopexit, label %169

180:                                              ; preds = %169
  %181 = load i64, ptr %172, align 8
  store i64 %181, ptr %170, align 8
  %182 = getelementptr inbounds i8, ptr %170, i64 -8
  %sunkaddr60 = getelementptr inbounds i8, ptr %172, i64 -8
  %183 = load i64, ptr %sunkaddr60, align 8
  store i64 %183, ptr %182, align 8
  %184 = getelementptr inbounds i8, ptr %170, i64 -16
  %185 = getelementptr inbounds i8, ptr %172, i64 -16
  store ptr %185, ptr %11, align 8
  br label %177

186:                                              ; preds = %169
  %187 = getelementptr inbounds i8, ptr %171, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %188 = load ptr, ptr %187, align 8
  %189 = load ptr, ptr %172, align 8
  %190 = tail call i8 %5(ptr align 1 %6, ptr align 1 %188, ptr align 1 %189) #18
  %191 = icmp eq i8 %190, 1
  br i1 %191, label %192, label %198

192:                                              ; preds = %186
  %193 = load i64, ptr %171, align 8
  store i64 %193, ptr %170, align 8
  %194 = getelementptr inbounds i8, ptr %170, i64 -8
  %sunkaddr61 = getelementptr inbounds i8, ptr %171, i64 -8
  %195 = load i64, ptr %sunkaddr61, align 8
  store i64 %195, ptr %194, align 8
  %196 = getelementptr inbounds i8, ptr %170, i64 -16
  %197 = getelementptr inbounds i8, ptr %171, i64 -16
  store ptr %197, ptr %13, align 8
  br label %177

198:                                              ; preds = %186
  tail call void %7(ptr align 1 %6, i64 2) #18
  %199 = load ptr, ptr %171, align 8
  %200 = load ptr, ptr %172, align 8
  %201 = tail call i8 %5(ptr align 1 %6, ptr align 1 %199, ptr align 1 %200) #18
  %.not23 = icmp eq i8 %201, 1
  %. = select i1 %.not23, i64 0, i64 8
  %.1 = select i1 %.not23, i64 8, i64 0
  %202 = getelementptr inbounds i8, ptr %170, i64 -8
  %203 = getelementptr inbounds i8, ptr %202, i64 %.
  %204 = load i64, ptr %172, align 8
  store i64 %204, ptr %203, align 8
  store ptr %173, ptr %11, align 8
  %205 = getelementptr inbounds i8, ptr %202, i64 %.1
  %206 = load i64, ptr %171, align 8
  store i64 %206, ptr %205, align 8
  store ptr %187, ptr %13, align 8
  %207 = getelementptr inbounds i8, ptr %170, i64 -16
  %sunkaddr62 = getelementptr inbounds i8, ptr %171, i64 -8
  %208 = load ptr, ptr %sunkaddr62, align 8
  %sunkaddr63 = getelementptr inbounds i8, ptr %172, i64 -8
  %209 = load ptr, ptr %sunkaddr63, align 8
  %210 = tail call i8 %5(ptr align 1 %6, ptr align 1 %208, ptr align 1 %209) #18
  %211 = icmp eq i8 %210, 1
  %.2 = select i1 %211, ptr %13, ptr %11
  %212 = load ptr, ptr %.2, align 8
  %213 = load i64, ptr %212, align 8
  store i64 %213, ptr %207, align 8
  %214 = getelementptr inbounds i8, ptr %212, i64 -8
  store ptr %214, ptr %.2, align 8
  %215 = getelementptr inbounds i8, ptr %170, i64 -24
  br label %177

._crit_edge.loopexit:                             ; preds = %223
  %216 = getelementptr inbounds i8, ptr %229, i64 -24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %.loopexit6
  %217 = phi ptr [ %41, %.loopexit6 ], [ %.pre55.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %249, %._crit_edge.loopexit ]
  %218 = phi ptr [ %42, %.loopexit6 ], [ %.pre54.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %246, %._crit_edge.loopexit ]
  %.promoted22 = phi ptr [ %.promoted2253, %.loopexit6 ], [ %.promoted22.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %216, %._crit_edge.loopexit ]
  %219 = icmp uge ptr %218, %2
  %220 = icmp uge ptr %217, %0
  %221 = select i1 %219, i1 %220, i1 false
  br i1 %221, label %.lr.ph25.preheader, label %.preheader

.lr.ph25.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph25

.lr.ph:                                           ; preds = %223, %.lr.ph.preheader
  store ptr %0, ptr %10, align 8
  store ptr %2, ptr %9, align 8
  %222 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16493(ptr nonnull align 8 %12, ptr nonnull readonly align 8 %10, ptr nonnull align 8 %13, ptr nonnull readonly align 8 %9, ptr nonnull align 8 %11, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %222, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %223

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted22.pre.pre = load ptr, ptr %12, align 8
  %.pre54.pre = load ptr, ptr %11, align 8
  %.pre55.pre = load ptr, ptr %13, align 8
  br label %._crit_edge

223:                                              ; preds = %.lr.ph
  tail call void %7(ptr align 1 %6, i64 2) #18
  %224 = load ptr, ptr %13, align 8
  %225 = load ptr, ptr %11, align 8
  %226 = load ptr, ptr %224, align 8
  %227 = load ptr, ptr %225, align 8
  %228 = tail call i8 %5(ptr align 1 %6, ptr align 1 %226, ptr align 1 %227) #18
  %.not20 = icmp eq i8 %228, 1
  %.3 = select i1 %.not20, i64 0, i64 8
  %.4 = select i1 %.not20, i64 8, i64 0
  %229 = load ptr, ptr %12, align 8
  %230 = getelementptr inbounds i8, ptr %229, i64 -8
  %231 = getelementptr inbounds i8, ptr %230, i64 %.3
  %232 = load i64, ptr %225, align 8
  store i64 %232, ptr %231, align 8
  %233 = getelementptr inbounds i8, ptr %225, i64 -8
  store ptr %233, ptr %11, align 8
  %234 = getelementptr inbounds i8, ptr %230, i64 %.4
  %235 = load i64, ptr %224, align 8
  store i64 %235, ptr %234, align 8
  %236 = getelementptr inbounds i8, ptr %224, i64 -8
  store ptr %236, ptr %13, align 8
  %237 = getelementptr inbounds i8, ptr %229, i64 -16
  %238 = load ptr, ptr %236, align 8
  %239 = load ptr, ptr %233, align 8
  %240 = tail call i8 %5(ptr align 1 %6, ptr align 1 %238, ptr align 1 %239) #18
  %241 = icmp eq i8 %240, 1
  %.5 = select i1 %241, ptr %13, ptr %11
  %242 = load ptr, ptr %.5, align 8
  %243 = load i64, ptr %242, align 8
  store i64 %243, ptr %237, align 8
  %244 = getelementptr inbounds i8, ptr %242, i64 -8
  store ptr %244, ptr %.5, align 8
  %245 = getelementptr inbounds i8, ptr %229, i64 -24
  store ptr %245, ptr %12, align 8
  %246 = load ptr, ptr %11, align 8
  %247 = ptrtoint ptr %246 to i64
  %248 = icmp ult i64 %44, %247
  %249 = load ptr, ptr %13, align 8
  %250 = ptrtoint ptr %249 to i64
  %251 = icmp ult i64 %46, %250
  %252 = select i1 %248, i1 %251, i1 false
  br i1 %252, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %.lr.ph25, %._crit_edge
  %.promoted26 = phi ptr [ %218, %._crit_edge ], [ %264, %.lr.ph25 ]
  %.lcssa23 = phi ptr [ %.promoted22, %._crit_edge ], [ %263, %.lr.ph25 ]
  store ptr %.lcssa23, ptr %12, align 8
  %.not1930 = icmp ult ptr %.promoted26, %2
  br i1 %.not1930, label %common.ret, label %.lr.ph31.preheader

.lr.ph31.preheader:                               ; preds = %.preheader
  br label %.lr.ph31

.lr.ph25:                                         ; preds = %.lr.ph25, %.lr.ph25.preheader
  %253 = phi ptr [ %266, %.lr.ph25 ], [ %217, %.lr.ph25.preheader ]
  %254 = phi ptr [ %264, %.lr.ph25 ], [ %218, %.lr.ph25.preheader ]
  %255 = phi ptr [ %263, %.lr.ph25 ], [ %.promoted22, %.lr.ph25.preheader ]
  tail call void %7(ptr align 1 %6, i64 1) #18
  %256 = load ptr, ptr %253, align 8
  %257 = load ptr, ptr %254, align 8
  %258 = tail call i8 %5(ptr align 1 %6, ptr align 1 %256, ptr align 1 %257) #18
  %259 = icmp eq i8 %258, 1
  %.6 = select i1 %259, ptr %13, ptr %11
  %260 = load ptr, ptr %.6, align 8
  %261 = load i64, ptr %260, align 8
  store i64 %261, ptr %255, align 8
  %262 = getelementptr inbounds i8, ptr %260, i64 -8
  store ptr %262, ptr %.6, align 8
  %263 = getelementptr inbounds i8, ptr %255, i64 -8
  %264 = load ptr, ptr %11, align 8
  %265 = icmp uge ptr %264, %2
  %266 = load ptr, ptr %13, align 8
  %267 = icmp uge ptr %266, %0
  %268 = select i1 %265, i1 %267, i1 false
  br i1 %268, label %.lr.ph25, label %.preheader

.lr.ph31:                                         ; preds = %.lr.ph31, %.lr.ph31.preheader
  %269 = phi ptr [ %273, %.lr.ph31 ], [ %.promoted26, %.lr.ph31.preheader ]
  %270 = phi ptr [ %272, %.lr.ph31 ], [ %.lcssa23, %.lr.ph31.preheader ]
  %271 = load i64, ptr %269, align 8
  store i64 %271, ptr %270, align 8
  %272 = getelementptr inbounds i8, ptr %270, i64 -8
  %273 = getelementptr inbounds i8, ptr %269, i64 -8
  %.not19 = icmp ult ptr %273, %2
  br i1 %.not19, label %common.ret, label %.lr.ph31
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16230(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7) unnamed_addr #4 {
  tail call void %7(ptr align 1 %6, i64 1) #18
  %9 = shl i64 %3, 3
  %10 = add i64 %9, -8
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  %12 = getelementptr inbounds i8, ptr %0, i64 %9
  %13 = load ptr, ptr %11, align 8
  %14 = load ptr, ptr %12, align 8
  %15 = tail call i8 %5(ptr align 1 %6, ptr align 1 %13, ptr align 1 %14) #18
  %.not19 = icmp eq i8 %15, 1
  br i1 %.not19, label %.lr.ph.preheader, label %common.ret

.lr.ph.preheader:                                 ; preds = %8
  br label %.lr.ph

common.ret:                                       ; preds = %.critedge9, %43, %8
  ret void

.lr.ph:                                           ; preds = %.critedge9, %.lr.ph.preheader
  %16 = phi ptr [ %112, %.critedge9 ], [ %12, %.lr.ph.preheader ]
  %.tr422 = phi i64 [ %42, %.critedge9 ], [ %4, %.lr.ph.preheader ]
  %.tr321 = phi i64 [ %17, %.critedge9 ], [ %3, %.lr.ph.preheader ]
  %.tr20 = phi ptr [ %107, %.critedge9 ], [ %0, %.lr.ph.preheader ]
  %17 = lshr i64 %.tr321, 1
  %18 = sub nuw i64 %.tr321, %17
  %19 = shl i64 %18, 3
  %20 = getelementptr i8, ptr %.tr20, i64 %19
  %21 = shl nuw i64 %.tr422, 3
  %22 = getelementptr inbounds i8, ptr %16, i64 %21
  %23 = add i64 %.tr422, -1
  %.fr = freeze i64 %23
  %cmpz = icmp eq i64 %.fr, 0
  br i1 %cmpz, label %cond.end, label %cond.false

cond.false:                                       ; preds = %.lr.ph
  %24 = tail call i64 @llvm.ctlz.i64(i64 %.fr, i1 true), !range !391
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %.lr.ph
  %ctz = phi i64 [ 64, %.lr.ph ], [ %24, %cond.false ]
  %25 = sub nuw nsw i64 65, %ctz
  tail call void %7(ptr align 1 %6, i64 %25) #18
  %26 = icmp ugt i64 %.tr422, 1
  br i1 %26, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16494.exit

.lr.ph.i.preheader:                               ; preds = %cond.end
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %.013.i = phi i64 [ %32, %.lr.ph.i ], [ %.tr422, %.lr.ph.i.preheader ]
  %.0912.i = phi ptr [ %spec.select.i, %.lr.ph.i ], [ %22, %.lr.ph.i.preheader ]
  %27 = lshr i64 %.013.i, 1
  %.neg.i = mul i64 %27, -8
  %28 = getelementptr inbounds i8, ptr %.0912.i, i64 %.neg.i
  %29 = load ptr, ptr %20, align 8
  %30 = load ptr, ptr %28, align 8
  %31 = tail call i8 %5(ptr align 1 %6, ptr align 1 %29, ptr align 1 %30) #18
  %.not10.i = icmp eq i8 %31, 1
  %spec.select.i = select i1 %.not10.i, ptr %.0912.i, ptr %28
  %32 = sub nuw i64 %.013.i, %27
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16494.exit

sort.monobound_binary_first__anon_16494.exit:     ; preds = %.lr.ph.i, %cond.end
  %.09.lcssa.i = phi ptr [ %22, %cond.end ], [ %spec.select.i, %.lr.ph.i ]
  %34 = getelementptr inbounds i8, ptr %.09.lcssa.i, i64 -8
  %35 = load ptr, ptr %20, align 8
  %36 = load ptr, ptr %34, align 8
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %36) #18
  %.not.i = icmp eq i8 %37, 1
  %spec.select11.i = select i1 %.not.i, ptr %.09.lcssa.i, ptr %34
  %38 = ptrtoint ptr %spec.select11.i to i64
  %39 = ptrtoint ptr %16 to i64
  %40 = sub nuw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = sub nuw i64 %.tr422, %41
  %.not96 = icmp ult i64 %40, 8
  br i1 %.not96, label %43, label %44

43:                                               ; preds = %.critedge3, %92, %91, %mem.copyBackwards__anon_9817.exit, %sort.monobound_binary_first__anon_16494.exit
  %.not97 = icmp eq i64 %.tr422, %41
  br i1 %.not97, label %common.ret, label %93

44:                                               ; preds = %sort.monobound_binary_first__anon_16494.exit
  %45 = add nuw i64 %41, %18
  %.not99 = icmp ugt i64 %45, %2
  br i1 %.not99, label %83, label %46

46:                                               ; preds = %44
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr20, i64 %19, i1 false)
  %47 = getelementptr inbounds i8, ptr %1, i64 %19
  %48 = and i64 %40, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %47, ptr nonnull align 1 %16, i64 %48, i1 false)
  %49 = shl i64 %45, 3
  %.not6.i = icmp ult i64 %.tr321, 2
  br i1 %.not6.i, label %mem.copyBackwards__anon_9817.exit, label %iter.check

iter.check:                                       ; preds = %46
  %50 = shl i64 %17, 3
  %min.iters.check = icmp eq i64 %50, 0
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr20, i64 -1
  %51 = add i64 %.tr321, %41
  %52 = shl i64 %51, 3
  %uglygep22 = getelementptr i8, ptr %uglygep, i64 %52
  %53 = sub i64 1, %50
  %54 = getelementptr i8, ptr %uglygep22, i64 %53
  %55 = icmp ugt ptr %54, %uglygep22
  %uglygep23 = getelementptr i8, ptr %.tr20, i64 -1
  %56 = shl i64 %.tr321, 3
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %56
  %57 = sub i64 1, %50
  %58 = getelementptr i8, ptr %uglygep24, i64 %57
  %59 = icmp ugt ptr %58, %uglygep24
  %60 = or i1 %55, %59
  br i1 %60, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %61 = ptrtoint ptr %.tr20 to i64
  %62 = add i64 %61, -1
  %63 = shl i64 %.tr321, 3
  %64 = add i64 %62, %63
  %65 = add i64 %.tr321, %41
  %66 = shl i64 %65, 3
  %67 = add i64 %62, %66
  %68 = sub i64 %64, %67
  %diff.check = icmp ult i64 %68, 16
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check29 = icmp ult i64 %50, 16
  br i1 %min.iters.check29, label %vec.epilog.vector.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %50, -16
  %uglygep67 = getelementptr i8, ptr %.tr20, i64 -16
  %uglygep68 = getelementptr i8, ptr %uglygep67, i64 %52
  %uglygep70 = getelementptr i8, ptr %uglygep67, i64 %56
  %69 = lshr i64 %.tr321, 2
  %70 = trunc i64 %69 to i60
  %71 = zext i60 %70 to i64
  %72 = mul i64 %71, -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv = phi i64 [ %lsr.iv.next, %vector.body ], [ 0, %vector.ph ]
  %uglygep71 = getelementptr i8, ptr %uglygep70, i64 %lsr.iv
  %wide.load = load <16 x i8>, ptr %uglygep71, align 1
  %uglygep69 = getelementptr i8, ptr %uglygep68, i64 %lsr.iv
  store <16 x i8> %wide.load, ptr %uglygep69, align 1
  %lsr.iv.next = add i64 %lsr.iv, -16
  %73 = icmp eq i64 %72, %lsr.iv.next
  br i1 %73, label %middle.block, label %vector.body, !llvm.loop !547

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %50, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end33 = and i64 %50, 8
  %74 = and i64 %.tr321, 2
  %min.epilog.iters.check = icmp eq i64 %74, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.vector.body.preheader

vec.epilog.vector.body.preheader:                 ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %index35.ph = phi i64 [ 0, %vector.main.loop.iter.check ], [ %n.vec, %vec.epilog.iter.check ]
  %uglygep72 = getelementptr i8, ptr %.tr20, i64 -4
  %uglygep73 = getelementptr i8, ptr %uglygep72, i64 %52
  %75 = mul i64 %index35.ph, -1
  %uglygep77 = getelementptr i8, ptr %uglygep72, i64 %56
  %76 = mul i64 %17, -8
  br label %vec.epilog.vector.body

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %50, %iter.check ], [ %50, %vector.memcheck ], [ %50, %vector.scevcheck ], [ %ind.end33, %vec.epilog.iter.check ]
  %uglygep79 = getelementptr i8, ptr %.tr20, i64 -1
  %uglygep80 = getelementptr i8, ptr %uglygep79, i64 %19
  %uglygep88 = getelementptr i8, ptr %uglygep79, i64 %49
  br label %.lr.ph.i103

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.vector.body.preheader
  %lsr.iv74 = phi i64 [ %75, %vec.epilog.vector.body.preheader ], [ %lsr.iv.next75, %vec.epilog.vector.body ]
  %uglygep78 = getelementptr i8, ptr %uglygep77, i64 %lsr.iv74
  %wide.load37 = load <4 x i8>, ptr %uglygep78, align 1
  %uglygep76 = getelementptr i8, ptr %uglygep73, i64 %lsr.iv74
  store <4 x i8> %wide.load37, ptr %uglygep76, align 1
  %lsr.iv.next75 = add i64 %lsr.iv74, -4
  %77 = icmp eq i64 %76, %lsr.iv.next75
  br i1 %77, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.vector.body, !llvm.loop !548

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader
  %.07.i = phi i64 [ %.07.i.ph, %.lr.ph.i103.preheader ], [ %81, %.lr.ph.i103 ]
  %uglygep95 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep87 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %78 = load i8, ptr %uglygep87, align 1
  store i8 %78, ptr %uglygep95, align 1
  %uglygep93 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep94 = getelementptr i8, ptr %uglygep93, i64 -1
  %uglygep85 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %uglygep86 = getelementptr i8, ptr %uglygep85, i64 -1
  %79 = load i8, ptr %uglygep86, align 1
  store i8 %79, ptr %uglygep94, align 1
  %uglygep91 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep92 = getelementptr i8, ptr %uglygep91, i64 -2
  %uglygep83 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %uglygep84 = getelementptr i8, ptr %uglygep83, i64 -2
  %80 = load i8, ptr %uglygep84, align 1
  store i8 %80, ptr %uglygep92, align 1
  %81 = add i64 %.07.i, -4
  %uglygep89 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep90 = getelementptr i8, ptr %uglygep89, i64 -3
  %uglygep81 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %uglygep82 = getelementptr i8, ptr %uglygep81, i64 -3
  %82 = load i8, ptr %uglygep82, align 1
  store i8 %82, ptr %uglygep90, align 1
  %.not.i102.3 = icmp eq i64 %81, 0
  br i1 %.not.i102.3, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103, !llvm.loop !549

mem.copyBackwards__anon_9817.exit:                ; preds = %.lr.ph.i103, %vec.epilog.vector.body, %middle.block, %46
  tail call fastcc void @sort.cross_merge__anon_14515(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %18, i64 %41, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %43

83:                                               ; preds = %44
  %84 = add nuw i64 %41, %17
  tail call fastcc void @sort.trinity_rotation.9(ptr nonnull align 1 %20, i64 %84, ptr nonnull align 1 %1, i64 %2, i64 %17, i64 8)
  %85 = shl nuw nsw i64 %41, 1
  %86 = icmp ult i64 %85, %18
  %87 = shl nuw i64 %18, 1
  %88 = icmp ult i64 %87, %41
  %89 = select i1 %86, i1 true, i1 %88
  br i1 %89, label %90, label %.critedge3

90:                                               ; preds = %83
  %.not100 = icmp ugt i64 %41, %2
  br i1 %.not100, label %.critedge, label %91

91:                                               ; preds = %90
  tail call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %.tr20, i64 %45, ptr nonnull align 1 %1, i64 %2, i64 %18, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %43

.critedge:                                        ; preds = %90
  %.not101 = icmp ugt i64 %18, %2
  br i1 %.not101, label %.critedge3, label %92

92:                                               ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16495(ptr nonnull align 1 %.tr20, i64 %45, ptr nonnull align 1 %1, i64 %2, i64 %18, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %43

.critedge3:                                       ; preds = %.critedge, %83
  tail call fastcc void @sort.rotate_merge_block__anon_16230(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %2, i64 %18, i64 %41, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br label %43

93:                                               ; preds = %43
  %94 = shl nuw i64 %42, 1
  %95 = icmp ult i64 %94, %17
  %96 = and i64 %.tr321, -2
  %97 = icmp ult i64 %96, %42
  %98 = or i1 %97, %95
  %99 = icmp ugt i64 %42, %2
  %not. = xor i1 %98, true
  %or.cond12 = select i1 %not., i1 true, i1 %99
  %.pre = add nuw i64 %42, %17
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %103, label %.critedge7

.critedge7:                                       ; preds = %93
  %100 = add nuw i64 %41, %18
  %101 = shl nuw i64 %100, 3
  %102 = getelementptr inbounds i8, ptr %.tr20, i64 %101
  tail call fastcc void @sort.partial_backwards_merge__anon_16229(ptr nonnull align 1 %102, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret void

103:                                              ; preds = %93
  %104 = icmp ule i64 %18, %2
  %or.cond14 = select i1 %98, i1 %104, i1 false
  %105 = add nuw i64 %41, %18
  %106 = shl nuw i64 %105, 3
  %107 = getelementptr inbounds i8, ptr %.tr20, i64 %106
  br i1 %or.cond14, label %108, label %.critedge9

108:                                              ; preds = %103
  tail call fastcc void @sort.partial_forward_merge__anon_16495(ptr nonnull align 1 %107, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret void

.critedge9:                                       ; preds = %103
  tail call void %7(ptr align 1 %6, i64 1) #18
  %109 = shl i64 %17, 3
  %110 = add i64 %109, -8
  %111 = getelementptr inbounds i8, ptr %107, i64 %110
  %112 = getelementptr inbounds i8, ptr %107, i64 %109
  %113 = load ptr, ptr %111, align 8
  %114 = load ptr, ptr %112, align 8
  %115 = tail call i8 %5(ptr align 1 %6, ptr align 1 %113, ptr align 1 %114) #18
  %.not = icmp eq i8 %115, 1
  br i1 %.not, label %.lr.ph, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16232(ptr nocapture nonnull writeonly align 1 %0, ptr nocapture nonnull readonly align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 1 %4, ptr align 1 %5) unnamed_addr #4 {
  %7 = shl nuw i64 %2, 3
  %8 = getelementptr inbounds i8, ptr %1, i64 %7
  %9 = getelementptr inbounds i8, ptr %8, i64 -8
  %10 = shl nuw i64 %3, 3
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = add nuw i64 %3, %2
  %13 = shl i64 %12, 3
  %14 = add i64 %13, -8
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = icmp ult i64 %2, %3
  br i1 %16, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %6
  %.066 = phi ptr [ %29, %.cont16 ], [ %0, %6 ]
  %.061 = phi ptr [ %., %.cont16 ], [ %8, %6 ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %6 ]
  %17 = load ptr, ptr %.0, align 8
  %18 = load ptr, ptr %.061, align 8
  %19 = tail call i8 %4(ptr align 1 %5, ptr align 1 %17, ptr align 1 %18) #18
  %.not = icmp eq i8 %19, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  %20 = load i64, ptr %.sroa.speculated21, align 8
  store i64 %20, ptr %.066, align 8
  %21 = add i64 %2, -1
  %.not10 = icmp eq i64 %21, 0
  br i1 %.not10, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %22 = icmp eq i8 %19, 1
  %23 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 8
  %.0. = select i1 %22, ptr %.0, ptr %23
  %..061 = select i1 %22, ptr %23, ptr %.061
  br label %.cont

.cont16:                                          ; preds = %6
  %24 = load ptr, ptr %1, align 8
  %25 = load ptr, ptr %8, align 8
  %26 = tail call i8 %4(ptr align 1 %5, ptr align 1 %24, ptr align 1 %25) #18
  %.not77 = icmp eq i8 %26, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %8, ptr %1
  %27 = load i64, ptr %.sroa.speculated12, align 8
  store i64 %27, ptr %0, align 8
  %28 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 8
  %. = select i1 %.not77, ptr %28, ptr %8
  %.78 = select i1 %.not77, ptr %1, ptr %28
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  br label %.cont25

.cont:                                            ; preds = %.cont, %.cont.preheader
  %lsr.iv = phi i64 [ 1, %.cont.preheader ], [ %lsr.iv.next, %.cont ]
  %.37 = phi ptr [ %.3., %.cont ], [ %.0., %.cont.preheader ]
  %.3646 = phi ptr [ %..364, %.cont ], [ %..061, %.cont.preheader ]
  %.0684 = phi ptr [ %.169, %.cont ], [ %9, %.cont.preheader ]
  %.0703 = phi ptr [ %.171, %.cont ], [ %11, %.cont.preheader ]
  %.0722 = phi ptr [ %42, %.cont ], [ %15, %.cont.preheader ]
  %30 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, ptr %.066, i64 %30
  %31 = load ptr, ptr %.37, align 8
  %32 = load ptr, ptr %.3646, align 8
  %33 = tail call i8 %4(ptr align 1 %5, ptr align 1 %31, ptr align 1 %32) #18
  %.not76 = icmp eq i8 %33, 1
  %.sroa.speculated = select i1 %.not76, ptr %.3646, ptr %.37
  %34 = load i64, ptr %.sroa.speculated, align 8
  store i64 %34, ptr %uglygep, align 8
  %35 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %..364 = select i1 %.not76, ptr %35, ptr %.3646
  %.3. = select i1 %.not76, ptr %.37, ptr %35
  %36 = load ptr, ptr %.0684, align 8
  %37 = load ptr, ptr %.0703, align 8
  %38 = tail call i8 %4(ptr align 1 %5, ptr align 1 %36, ptr align 1 %37) #18
  %39 = icmp eq i8 %38, 1
  %.sroa.speculated40 = select i1 %39, ptr %.0684, ptr %.0703
  %40 = load i64, ptr %.sroa.speculated40, align 8
  store i64 %40, ptr %.0722, align 8
  %41 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 -8
  %.171 = select i1 %39, ptr %.0703, ptr %41
  %.169 = select i1 %39, ptr %41, ptr %.0684
  %42 = getelementptr inbounds i8, ptr %.0722, i64 -8
  %lsr.iv.next = add i64 %lsr.iv, 1
  %exitcond.not = icmp eq i64 %2, %lsr.iv.next
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %.cont, %.cont25
  %.072.lcssa = phi ptr [ %15, %.cont25 ], [ %42, %.cont ]
  %.070.lcssa = phi ptr [ %11, %.cont25 ], [ %.171, %.cont ]
  %.068.lcssa = phi ptr [ %9, %.cont25 ], [ %.169, %.cont ]
  %43 = load ptr, ptr %.068.lcssa, align 8
  %44 = load ptr, ptr %.070.lcssa, align 8
  %45 = tail call i8 %4(ptr align 1 %5, ptr align 1 %43, ptr align 1 %44) #18
  %46 = icmp eq i8 %45, 1
  %.sroa.speculated46 = select i1 %46, ptr %.068.lcssa, ptr %.070.lcssa
  %47 = load i64, ptr %.sroa.speculated46, align 8
  store i64 %47, ptr %.072.lcssa, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = icmp eq i64 %1, %4
  br i1 %13, label %common.ret, label %14

common.ret:                                       ; preds = %.lr.ph31, %.preheader, %14, %7
  ret void

14:                                               ; preds = %7
  %15 = shl i64 %4, 3
  %16 = add i64 %15, -8
  %17 = getelementptr inbounds i8, ptr %0, i64 %16
  store ptr %17, ptr %12, align 8
  %18 = shl i64 %1, 3
  %19 = add i64 %18, -8
  %20 = getelementptr inbounds i8, ptr %0, i64 %19
  store ptr %20, ptr %11, align 8
  %21 = getelementptr inbounds i8, ptr %0, i64 %15
  %22 = load ptr, ptr %17, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call i8 %5(ptr align 1 %6, ptr align 1 %22, ptr align 1 %23) #18
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %14
  %26 = sub nuw i64 %1, %4
  %27 = icmp ule i64 %1, %3
  %28 = icmp ugt i64 %26, 63
  %29 = select i1 %27, i1 %28, i1 false
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %26, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %18, i1 false)
  ret void

31:                                               ; preds = %25
  %32 = shl i64 %26, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %21, i64 %32, i1 false)
  %33 = add i64 %32, -8
  %34 = getelementptr inbounds i8, ptr %2, i64 %33
  store ptr %34, ptr %10, align 8
  %35 = getelementptr inbounds i8, ptr %0, i64 128
  %36 = getelementptr inbounds i8, ptr %2, i64 128
  %37 = icmp sgt i64 %16, 128
  %38 = icmp sgt i64 %33, 128
  %39 = select i1 %37, i1 %38, i1 false
  br i1 %39, label %.preheader4.preheader, label %.loopexit6

.preheader4.preheader:                            ; preds = %31
  br label %.preheader4

.loopexit3:                                       ; preds = %120
  store ptr %167, ptr %12, align 8
  store ptr %166, ptr %11, align 8
  %.pre = load ptr, ptr %10, align 8
  br label %.loopexit6

.loopexit5:                                       ; preds = %64
  store ptr %111, ptr %10, align 8
  store ptr %110, ptr %11, align 8
  %.pre51 = load ptr, ptr %12, align 8
  br label %.loopexit6

.loopexit6:                                       ; preds = %.loopexit, %.loopexit5, %.loopexit3, %31
  %.promoted2253 = phi ptr [ %20, %31 ], [ %110, %.loopexit5 ], [ %166, %.loopexit3 ], [ %177, %.loopexit ]
  %40 = phi ptr [ %17, %31 ], [ %.pre51, %.loopexit5 ], [ %167, %.loopexit3 ], [ %51, %.loopexit ]
  %41 = phi ptr [ %34, %31 ], [ %111, %.loopexit5 ], [ %.pre, %.loopexit3 ], [ %53, %.loopexit ]
  %42 = ptrtoint ptr %2 to i64
  %43 = add nuw i64 %42, 8
  %44 = ptrtoint ptr %0 to i64
  %45 = add nuw i64 %44, 8
  %46 = ptrtoint ptr %41 to i64
  %47 = icmp ult i64 %43, %46
  %48 = ptrtoint ptr %40 to i64
  %49 = icmp ult i64 %45, %48
  %50 = select i1 %47, i1 %49, i1 false
  br i1 %50, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.loopexit6
  br label %.lr.ph

.loopexit:                                        ; preds = %176
  store ptr %177, ptr %11, align 8
  %51 = load ptr, ptr %12, align 8
  %52 = icmp ugt ptr %51, %35
  %53 = load ptr, ptr %10, align 8
  %54 = icmp ugt ptr %53, %36
  %55 = select i1 %52, i1 %54, i1 false
  br i1 %55, label %.preheader4, label %.loopexit6

.preheader4:                                      ; preds = %.loopexit, %.preheader4.preheader
  %.promoted10 = phi ptr [ %177, %.loopexit ], [ %20, %.preheader4.preheader ]
  %.promoted = phi ptr [ %53, %.loopexit ], [ %34, %.preheader4.preheader ]
  %56 = phi ptr [ %51, %.loopexit ], [ %17, %.preheader4.preheader ]
  br label %57

57:                                               ; preds = %64, %.preheader4
  %58 = phi ptr [ %.promoted10, %.preheader4 ], [ %110, %64 ]
  %59 = phi ptr [ %.promoted, %.preheader4 ], [ %111, %64 ]
  %60 = getelementptr inbounds i8, ptr %59, i64 -120
  %61 = load ptr, ptr %56, align 8
  %62 = load ptr, ptr %60, align 8
  %63 = tail call i8 %5(ptr align 1 %6, ptr align 1 %61, ptr align 1 %62) #18
  %.not21 = icmp eq i8 %63, 1
  br i1 %.not21, label %.preheader2, label %64

.preheader2:                                      ; preds = %57
  store ptr %59, ptr %10, align 8
  %.promoted13 = load ptr, ptr %12, align 8
  br label %112

64:                                               ; preds = %57
  %65 = load i64, ptr %59, align 8
  store i64 %65, ptr %58, align 8
  %66 = getelementptr inbounds i8, ptr %58, i64 -8
  %67 = getelementptr inbounds i8, ptr %59, i64 -8
  %68 = load i64, ptr %67, align 8
  store i64 %68, ptr %66, align 8
  %69 = getelementptr inbounds i8, ptr %58, i64 -16
  %70 = getelementptr inbounds i8, ptr %59, i64 -16
  %71 = load i64, ptr %70, align 8
  store i64 %71, ptr %69, align 8
  %72 = getelementptr inbounds i8, ptr %58, i64 -24
  %73 = getelementptr inbounds i8, ptr %59, i64 -24
  %74 = load i64, ptr %73, align 8
  store i64 %74, ptr %72, align 8
  %75 = getelementptr inbounds i8, ptr %58, i64 -32
  %76 = getelementptr inbounds i8, ptr %59, i64 -32
  %77 = load i64, ptr %76, align 8
  store i64 %77, ptr %75, align 8
  %78 = getelementptr inbounds i8, ptr %58, i64 -40
  %79 = getelementptr inbounds i8, ptr %59, i64 -40
  %80 = load i64, ptr %79, align 8
  store i64 %80, ptr %78, align 8
  %81 = getelementptr inbounds i8, ptr %58, i64 -48
  %82 = getelementptr inbounds i8, ptr %59, i64 -48
  %83 = load i64, ptr %82, align 8
  store i64 %83, ptr %81, align 8
  %84 = getelementptr inbounds i8, ptr %58, i64 -56
  %85 = getelementptr inbounds i8, ptr %59, i64 -56
  %86 = load i64, ptr %85, align 8
  store i64 %86, ptr %84, align 8
  %87 = getelementptr inbounds i8, ptr %58, i64 -64
  %88 = getelementptr inbounds i8, ptr %59, i64 -64
  %89 = load i64, ptr %88, align 8
  store i64 %89, ptr %87, align 8
  %90 = getelementptr inbounds i8, ptr %58, i64 -72
  %91 = getelementptr inbounds i8, ptr %59, i64 -72
  %92 = load i64, ptr %91, align 8
  store i64 %92, ptr %90, align 8
  %93 = getelementptr inbounds i8, ptr %58, i64 -80
  %94 = getelementptr inbounds i8, ptr %59, i64 -80
  %95 = load i64, ptr %94, align 8
  store i64 %95, ptr %93, align 8
  %96 = getelementptr inbounds i8, ptr %58, i64 -88
  %97 = getelementptr inbounds i8, ptr %59, i64 -88
  %98 = load i64, ptr %97, align 8
  store i64 %98, ptr %96, align 8
  %99 = getelementptr inbounds i8, ptr %58, i64 -96
  %100 = getelementptr inbounds i8, ptr %59, i64 -96
  %101 = load i64, ptr %100, align 8
  store i64 %101, ptr %99, align 8
  %102 = getelementptr inbounds i8, ptr %58, i64 -104
  %103 = getelementptr inbounds i8, ptr %59, i64 -104
  %104 = load i64, ptr %103, align 8
  store i64 %104, ptr %102, align 8
  %105 = getelementptr inbounds i8, ptr %58, i64 -112
  %106 = getelementptr inbounds i8, ptr %59, i64 -112
  %107 = load i64, ptr %106, align 8
  store i64 %107, ptr %105, align 8
  %108 = getelementptr inbounds i8, ptr %58, i64 -120
  %sunkaddr = getelementptr inbounds i8, ptr %59, i64 -120
  %109 = load i64, ptr %sunkaddr, align 8
  store i64 %109, ptr %108, align 8
  %110 = getelementptr inbounds i8, ptr %58, i64 -128
  %111 = getelementptr inbounds i8, ptr %59, i64 -128
  %.not25 = icmp ugt ptr %111, %36
  br i1 %.not25, label %57, label %.loopexit5

112:                                              ; preds = %120, %.preheader2
  %113 = phi ptr [ %58, %.preheader2 ], [ %166, %120 ]
  %114 = phi ptr [ %.promoted13, %.preheader2 ], [ %167, %120 ]
  %115 = getelementptr inbounds i8, ptr %114, i64 -120
  %116 = load ptr, ptr %115, align 8
  %117 = load ptr, ptr %59, align 8
  %118 = tail call i8 %5(ptr align 1 %6, ptr align 1 %116, ptr align 1 %117) #18
  %119 = icmp eq i8 %118, 1
  br i1 %119, label %120, label %.preheader1

.preheader1:                                      ; preds = %112
  store ptr %114, ptr %12, align 8
  store ptr %113, ptr %11, align 8
  br label %168

120:                                              ; preds = %112
  %121 = load i64, ptr %114, align 8
  store i64 %121, ptr %113, align 8
  %122 = getelementptr inbounds i8, ptr %113, i64 -8
  %123 = getelementptr inbounds i8, ptr %114, i64 -8
  %124 = load i64, ptr %123, align 8
  store i64 %124, ptr %122, align 8
  %125 = getelementptr inbounds i8, ptr %113, i64 -16
  %126 = getelementptr inbounds i8, ptr %114, i64 -16
  %127 = load i64, ptr %126, align 8
  store i64 %127, ptr %125, align 8
  %128 = getelementptr inbounds i8, ptr %113, i64 -24
  %129 = getelementptr inbounds i8, ptr %114, i64 -24
  %130 = load i64, ptr %129, align 8
  store i64 %130, ptr %128, align 8
  %131 = getelementptr inbounds i8, ptr %113, i64 -32
  %132 = getelementptr inbounds i8, ptr %114, i64 -32
  %133 = load i64, ptr %132, align 8
  store i64 %133, ptr %131, align 8
  %134 = getelementptr inbounds i8, ptr %113, i64 -40
  %135 = getelementptr inbounds i8, ptr %114, i64 -40
  %136 = load i64, ptr %135, align 8
  store i64 %136, ptr %134, align 8
  %137 = getelementptr inbounds i8, ptr %113, i64 -48
  %138 = getelementptr inbounds i8, ptr %114, i64 -48
  %139 = load i64, ptr %138, align 8
  store i64 %139, ptr %137, align 8
  %140 = getelementptr inbounds i8, ptr %113, i64 -56
  %141 = getelementptr inbounds i8, ptr %114, i64 -56
  %142 = load i64, ptr %141, align 8
  store i64 %142, ptr %140, align 8
  %143 = getelementptr inbounds i8, ptr %113, i64 -64
  %144 = getelementptr inbounds i8, ptr %114, i64 -64
  %145 = load i64, ptr %144, align 8
  store i64 %145, ptr %143, align 8
  %146 = getelementptr inbounds i8, ptr %113, i64 -72
  %147 = getelementptr inbounds i8, ptr %114, i64 -72
  %148 = load i64, ptr %147, align 8
  store i64 %148, ptr %146, align 8
  %149 = getelementptr inbounds i8, ptr %113, i64 -80
  %150 = getelementptr inbounds i8, ptr %114, i64 -80
  %151 = load i64, ptr %150, align 8
  store i64 %151, ptr %149, align 8
  %152 = getelementptr inbounds i8, ptr %113, i64 -88
  %153 = getelementptr inbounds i8, ptr %114, i64 -88
  %154 = load i64, ptr %153, align 8
  store i64 %154, ptr %152, align 8
  %155 = getelementptr inbounds i8, ptr %113, i64 -96
  %156 = getelementptr inbounds i8, ptr %114, i64 -96
  %157 = load i64, ptr %156, align 8
  store i64 %157, ptr %155, align 8
  %158 = getelementptr inbounds i8, ptr %113, i64 -104
  %159 = getelementptr inbounds i8, ptr %114, i64 -104
  %160 = load i64, ptr %159, align 8
  store i64 %160, ptr %158, align 8
  %161 = getelementptr inbounds i8, ptr %113, i64 -112
  %162 = getelementptr inbounds i8, ptr %114, i64 -112
  %163 = load i64, ptr %162, align 8
  store i64 %163, ptr %161, align 8
  %164 = getelementptr inbounds i8, ptr %113, i64 -120
  %sunkaddr62 = getelementptr inbounds i8, ptr %114, i64 -120
  %165 = load i64, ptr %sunkaddr62, align 8
  store i64 %165, ptr %164, align 8
  %166 = getelementptr inbounds i8, ptr %113, i64 -128
  %167 = getelementptr inbounds i8, ptr %114, i64 -128
  %.not24 = icmp ugt ptr %167, %35
  br i1 %.not24, label %112, label %.loopexit3

168:                                              ; preds = %176, %.preheader1
  %lsr.iv = phi i64 [ -8, %.preheader1 ], [ %math, %176 ]
  %169 = phi ptr [ %177, %176 ], [ %113, %.preheader1 ]
  %170 = load ptr, ptr %12, align 8
  %171 = load ptr, ptr %10, align 8
  %172 = getelementptr inbounds i8, ptr %171, i64 -8
  %173 = load ptr, ptr %170, align 8
  %174 = load ptr, ptr %172, align 8
  %175 = tail call i8 %5(ptr align 1 %6, ptr align 1 %173, ptr align 1 %174) #18
  %.not22 = icmp eq i8 %175, 1
  br i1 %.not22, label %185, label %179

176:                                              ; preds = %197, %191, %179
  %177 = phi ptr [ %195, %191 ], [ %214, %197 ], [ %183, %179 ]
  %178 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv, i64 1)
  %math = extractvalue { i64, i1 } %178, 0
  %ov = extractvalue { i64, i1 } %178, 1
  br i1 %ov, label %.loopexit, label %168

179:                                              ; preds = %168
  %180 = load i64, ptr %171, align 8
  store i64 %180, ptr %169, align 8
  %181 = getelementptr inbounds i8, ptr %169, i64 -8
  %sunkaddr63 = getelementptr inbounds i8, ptr %171, i64 -8
  %182 = load i64, ptr %sunkaddr63, align 8
  store i64 %182, ptr %181, align 8
  %183 = getelementptr inbounds i8, ptr %169, i64 -16
  %184 = getelementptr inbounds i8, ptr %171, i64 -16
  store ptr %184, ptr %10, align 8
  br label %176

185:                                              ; preds = %168
  %186 = getelementptr inbounds i8, ptr %170, i64 -8
  %187 = load ptr, ptr %186, align 8
  %188 = load ptr, ptr %171, align 8
  %189 = tail call i8 %5(ptr align 1 %6, ptr align 1 %187, ptr align 1 %188) #18
  %190 = icmp eq i8 %189, 1
  br i1 %190, label %191, label %197

191:                                              ; preds = %185
  %192 = load i64, ptr %170, align 8
  store i64 %192, ptr %169, align 8
  %193 = getelementptr inbounds i8, ptr %169, i64 -8
  %sunkaddr64 = getelementptr inbounds i8, ptr %170, i64 -8
  %194 = load i64, ptr %sunkaddr64, align 8
  store i64 %194, ptr %193, align 8
  %195 = getelementptr inbounds i8, ptr %169, i64 -16
  %196 = getelementptr inbounds i8, ptr %170, i64 -16
  store ptr %196, ptr %12, align 8
  br label %176

197:                                              ; preds = %185
  %198 = load ptr, ptr %170, align 8
  %199 = load ptr, ptr %171, align 8
  %200 = tail call i8 %5(ptr align 1 %6, ptr align 1 %198, ptr align 1 %199) #18
  %.not23 = icmp eq i8 %200, 1
  %. = select i1 %.not23, i64 0, i64 8
  %.1 = select i1 %.not23, i64 8, i64 0
  %201 = getelementptr inbounds i8, ptr %169, i64 -8
  %202 = getelementptr inbounds i8, ptr %201, i64 %.
  %203 = load i64, ptr %171, align 8
  store i64 %203, ptr %202, align 8
  store ptr %172, ptr %10, align 8
  %204 = getelementptr inbounds i8, ptr %201, i64 %.1
  %205 = load i64, ptr %170, align 8
  store i64 %205, ptr %204, align 8
  store ptr %186, ptr %12, align 8
  %206 = getelementptr inbounds i8, ptr %169, i64 -16
  %sunkaddr65 = getelementptr inbounds i8, ptr %170, i64 -8
  %207 = load ptr, ptr %sunkaddr65, align 8
  %sunkaddr66 = getelementptr inbounds i8, ptr %171, i64 -8
  %208 = load ptr, ptr %sunkaddr66, align 8
  %209 = tail call i8 %5(ptr align 1 %6, ptr align 1 %207, ptr align 1 %208) #18
  %210 = icmp eq i8 %209, 1
  %.2 = select i1 %210, ptr %12, ptr %10
  %211 = load ptr, ptr %.2, align 8
  %212 = load i64, ptr %211, align 8
  store i64 %212, ptr %206, align 8
  %213 = getelementptr inbounds i8, ptr %211, i64 -8
  store ptr %213, ptr %.2, align 8
  %214 = getelementptr inbounds i8, ptr %169, i64 -24
  br label %176

._crit_edge.loopexit:                             ; preds = %222
  %215 = getelementptr inbounds i8, ptr %227, i64 -24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %.loopexit6
  %216 = phi ptr [ %40, %.loopexit6 ], [ %.pre55.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %247, %._crit_edge.loopexit ]
  %217 = phi ptr [ %41, %.loopexit6 ], [ %.pre54.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %244, %._crit_edge.loopexit ]
  %.promoted22 = phi ptr [ %.promoted2253, %.loopexit6 ], [ %.promoted22.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %215, %._crit_edge.loopexit ]
  %218 = icmp uge ptr %217, %2
  %219 = icmp uge ptr %216, %0
  %220 = select i1 %218, i1 %219, i1 false
  br i1 %220, label %.lr.ph25.preheader, label %.preheader

.lr.ph25.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph25

.lr.ph:                                           ; preds = %222, %.lr.ph.preheader
  store ptr %0, ptr %9, align 8
  store ptr %2, ptr %8, align 8
  %221 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16504(ptr nonnull align 8 %11, ptr nonnull readonly align 8 %9, ptr nonnull align 8 %12, ptr nonnull readonly align 8 %8, ptr nonnull align 8 %10, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  %.pre54.pre = load ptr, ptr %10, align 8
  br i1 %221, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %222

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted22.pre.pre = load ptr, ptr %11, align 8
  %.pre55.pre = load ptr, ptr %12, align 8
  br label %._crit_edge

222:                                              ; preds = %.lr.ph
  %223 = load ptr, ptr %12, align 8
  %224 = load ptr, ptr %223, align 8
  %225 = load ptr, ptr %.pre54.pre, align 8
  %226 = tail call i8 %5(ptr align 1 %6, ptr align 1 %224, ptr align 1 %225) #18
  %.not20 = icmp eq i8 %226, 1
  %.3 = select i1 %.not20, i64 0, i64 8
  %.4 = select i1 %.not20, i64 8, i64 0
  %227 = load ptr, ptr %11, align 8
  %228 = getelementptr inbounds i8, ptr %227, i64 -8
  %229 = getelementptr inbounds i8, ptr %228, i64 %.3
  %230 = load i64, ptr %.pre54.pre, align 8
  store i64 %230, ptr %229, align 8
  %231 = getelementptr inbounds i8, ptr %.pre54.pre, i64 -8
  store ptr %231, ptr %10, align 8
  %232 = getelementptr inbounds i8, ptr %228, i64 %.4
  %233 = load i64, ptr %223, align 8
  store i64 %233, ptr %232, align 8
  %234 = getelementptr inbounds i8, ptr %223, i64 -8
  store ptr %234, ptr %12, align 8
  %235 = getelementptr inbounds i8, ptr %227, i64 -16
  %236 = load ptr, ptr %234, align 8
  %237 = load ptr, ptr %231, align 8
  %238 = tail call i8 %5(ptr align 1 %6, ptr align 1 %236, ptr align 1 %237) #18
  %239 = icmp eq i8 %238, 1
  %.5 = select i1 %239, ptr %12, ptr %10
  %240 = load ptr, ptr %.5, align 8
  %241 = load i64, ptr %240, align 8
  store i64 %241, ptr %235, align 8
  %242 = getelementptr inbounds i8, ptr %240, i64 -8
  store ptr %242, ptr %.5, align 8
  %243 = getelementptr inbounds i8, ptr %227, i64 -24
  store ptr %243, ptr %11, align 8
  %244 = load ptr, ptr %10, align 8
  %245 = ptrtoint ptr %244 to i64
  %246 = icmp ult i64 %43, %245
  %247 = load ptr, ptr %12, align 8
  %248 = ptrtoint ptr %247 to i64
  %249 = icmp ult i64 %45, %248
  %250 = select i1 %246, i1 %249, i1 false
  br i1 %250, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %.lr.ph25, %._crit_edge
  %.promoted26 = phi ptr [ %217, %._crit_edge ], [ %262, %.lr.ph25 ]
  %.lcssa23 = phi ptr [ %.promoted22, %._crit_edge ], [ %261, %.lr.ph25 ]
  store ptr %.lcssa23, ptr %11, align 8
  %.not1930 = icmp ult ptr %.promoted26, %2
  br i1 %.not1930, label %common.ret, label %.lr.ph31.preheader

.lr.ph31.preheader:                               ; preds = %.preheader
  br label %.lr.ph31

.lr.ph25:                                         ; preds = %.lr.ph25, %.lr.ph25.preheader
  %251 = phi ptr [ %264, %.lr.ph25 ], [ %216, %.lr.ph25.preheader ]
  %252 = phi ptr [ %262, %.lr.ph25 ], [ %217, %.lr.ph25.preheader ]
  %253 = phi ptr [ %261, %.lr.ph25 ], [ %.promoted22, %.lr.ph25.preheader ]
  %254 = load ptr, ptr %251, align 8
  %255 = load ptr, ptr %252, align 8
  %256 = tail call i8 %5(ptr align 1 %6, ptr align 1 %254, ptr align 1 %255) #18
  %257 = icmp eq i8 %256, 1
  %.6 = select i1 %257, ptr %12, ptr %10
  %258 = load ptr, ptr %.6, align 8
  %259 = load i64, ptr %258, align 8
  store i64 %259, ptr %253, align 8
  %260 = getelementptr inbounds i8, ptr %258, i64 -8
  store ptr %260, ptr %.6, align 8
  %261 = getelementptr inbounds i8, ptr %253, i64 -8
  %262 = load ptr, ptr %10, align 8
  %263 = icmp uge ptr %262, %2
  %264 = load ptr, ptr %12, align 8
  %265 = icmp uge ptr %264, %0
  %266 = select i1 %263, i1 %265, i1 false
  br i1 %266, label %.lr.ph25, label %.preheader

.lr.ph31:                                         ; preds = %.lr.ph31, %.lr.ph31.preheader
  %267 = phi ptr [ %271, %.lr.ph31 ], [ %.promoted26, %.lr.ph31.preheader ]
  %268 = phi ptr [ %270, %.lr.ph31 ], [ %.lcssa23, %.lr.ph31.preheader ]
  %269 = load i64, ptr %267, align 8
  store i64 %269, ptr %268, align 8
  %270 = getelementptr inbounds i8, ptr %268, i64 -8
  %271 = getelementptr inbounds i8, ptr %267, i64 -8
  %.not19 = icmp ult ptr %271, %2
  br i1 %.not19, label %common.ret, label %.lr.ph31
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16239(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = shl i64 %3, 3
  %9 = add i64 %8, -8
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  %11 = getelementptr inbounds i8, ptr %0, i64 %8
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %.not19 = icmp eq i8 %14, 1
  br i1 %.not19, label %.lr.ph.preheader, label %common.ret

.lr.ph.preheader:                                 ; preds = %7
  br label %.lr.ph

common.ret:                                       ; preds = %.critedge9, %39, %7
  ret void

.lr.ph:                                           ; preds = %.critedge9, %.lr.ph.preheader
  %15 = phi ptr [ %108, %.critedge9 ], [ %11, %.lr.ph.preheader ]
  %.tr422 = phi i64 [ %38, %.critedge9 ], [ %4, %.lr.ph.preheader ]
  %.tr321 = phi i64 [ %16, %.critedge9 ], [ %3, %.lr.ph.preheader ]
  %.tr20 = phi ptr [ %103, %.critedge9 ], [ %0, %.lr.ph.preheader ]
  %16 = lshr i64 %.tr321, 1
  %17 = sub nuw i64 %.tr321, %16
  %18 = shl i64 %17, 3
  %19 = getelementptr i8, ptr %.tr20, i64 %18
  %20 = shl nuw i64 %.tr422, 3
  %21 = getelementptr inbounds i8, ptr %15, i64 %20
  %22 = icmp ugt i64 %.tr422, 1
  br i1 %22, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16505.exit

.lr.ph.i.preheader:                               ; preds = %.lr.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %.02.i = phi i64 [ %28, %.lr.ph.i ], [ %.tr422, %.lr.ph.i.preheader ]
  %.081.i = phi ptr [ %spec.select.i, %.lr.ph.i ], [ %21, %.lr.ph.i.preheader ]
  %23 = lshr i64 %.02.i, 1
  %.neg.i = mul i64 %23, -8
  %24 = getelementptr inbounds i8, ptr %.081.i, i64 %.neg.i
  %25 = load ptr, ptr %19, align 8
  %26 = load ptr, ptr %24, align 8
  %27 = tail call i8 %5(ptr align 1 %6, ptr align 1 %25, ptr align 1 %26) #18
  %.not9.i = icmp eq i8 %27, 1
  %spec.select.i = select i1 %.not9.i, ptr %.081.i, ptr %24
  %28 = sub nuw i64 %.02.i, %23
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16505.exit

sort.monobound_binary_first__anon_16505.exit:     ; preds = %.lr.ph.i, %.lr.ph
  %.08.lcssa.i = phi ptr [ %21, %.lr.ph ], [ %spec.select.i, %.lr.ph.i ]
  %30 = getelementptr inbounds i8, ptr %.08.lcssa.i, i64 -8
  %31 = load ptr, ptr %19, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %5(ptr align 1 %6, ptr align 1 %31, ptr align 1 %32) #18
  %.not.i = icmp eq i8 %33, 1
  %spec.select10.i = select i1 %.not.i, ptr %.08.lcssa.i, ptr %30
  %34 = ptrtoint ptr %spec.select10.i to i64
  %35 = ptrtoint ptr %15 to i64
  %36 = sub nuw i64 %34, %35
  %37 = lshr i64 %36, 3
  %38 = sub nuw i64 %.tr422, %37
  %.not96 = icmp ult i64 %36, 8
  br i1 %.not96, label %39, label %40

39:                                               ; preds = %.critedge3, %88, %87, %mem.copyBackwards__anon_9817.exit, %sort.monobound_binary_first__anon_16505.exit
  %.not97 = icmp eq i64 %.tr422, %37
  br i1 %.not97, label %common.ret, label %89

40:                                               ; preds = %sort.monobound_binary_first__anon_16505.exit
  %41 = add nuw i64 %37, %17
  %.not99 = icmp ugt i64 %41, %2
  br i1 %.not99, label %79, label %42

42:                                               ; preds = %40
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr20, i64 %18, i1 false)
  %43 = getelementptr inbounds i8, ptr %1, i64 %18
  %44 = and i64 %36, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %43, ptr nonnull align 1 %15, i64 %44, i1 false)
  %45 = shl i64 %41, 3
  %.not6.i = icmp ult i64 %.tr321, 2
  br i1 %.not6.i, label %mem.copyBackwards__anon_9817.exit, label %iter.check

iter.check:                                       ; preds = %42
  %46 = shl i64 %16, 3
  %min.iters.check = icmp eq i64 %46, 0
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr20, i64 -1
  %47 = add i64 %.tr321, %37
  %48 = shl i64 %47, 3
  %uglygep22 = getelementptr i8, ptr %uglygep, i64 %48
  %49 = sub i64 1, %46
  %50 = getelementptr i8, ptr %uglygep22, i64 %49
  %51 = icmp ugt ptr %50, %uglygep22
  %uglygep23 = getelementptr i8, ptr %.tr20, i64 -1
  %52 = shl i64 %.tr321, 3
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %52
  %53 = sub i64 1, %46
  %54 = getelementptr i8, ptr %uglygep24, i64 %53
  %55 = icmp ugt ptr %54, %uglygep24
  %56 = or i1 %51, %55
  br i1 %56, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %57 = ptrtoint ptr %.tr20 to i64
  %58 = add i64 %57, -1
  %59 = shl i64 %.tr321, 3
  %60 = add i64 %58, %59
  %61 = add i64 %.tr321, %37
  %62 = shl i64 %61, 3
  %63 = add i64 %58, %62
  %64 = sub i64 %60, %63
  %diff.check = icmp ult i64 %64, 16
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check29 = icmp ult i64 %46, 16
  br i1 %min.iters.check29, label %vec.epilog.vector.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %46, -16
  %uglygep67 = getelementptr i8, ptr %.tr20, i64 -16
  %uglygep68 = getelementptr i8, ptr %uglygep67, i64 %48
  %uglygep70 = getelementptr i8, ptr %uglygep67, i64 %52
  %65 = lshr i64 %.tr321, 2
  %66 = trunc i64 %65 to i60
  %67 = zext i60 %66 to i64
  %68 = mul i64 %67, -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv = phi i64 [ %lsr.iv.next, %vector.body ], [ 0, %vector.ph ]
  %uglygep71 = getelementptr i8, ptr %uglygep70, i64 %lsr.iv
  %wide.load = load <16 x i8>, ptr %uglygep71, align 1
  %uglygep69 = getelementptr i8, ptr %uglygep68, i64 %lsr.iv
  store <16 x i8> %wide.load, ptr %uglygep69, align 1
  %lsr.iv.next = add i64 %lsr.iv, -16
  %69 = icmp eq i64 %68, %lsr.iv.next
  br i1 %69, label %middle.block, label %vector.body, !llvm.loop !550

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %46, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end33 = and i64 %46, 8
  %70 = and i64 %.tr321, 2
  %min.epilog.iters.check = icmp eq i64 %70, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.vector.body.preheader

vec.epilog.vector.body.preheader:                 ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %index35.ph = phi i64 [ 0, %vector.main.loop.iter.check ], [ %n.vec, %vec.epilog.iter.check ]
  %uglygep72 = getelementptr i8, ptr %.tr20, i64 -4
  %uglygep73 = getelementptr i8, ptr %uglygep72, i64 %48
  %71 = mul i64 %index35.ph, -1
  %uglygep77 = getelementptr i8, ptr %uglygep72, i64 %52
  %72 = mul i64 %16, -8
  br label %vec.epilog.vector.body

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %46, %iter.check ], [ %46, %vector.memcheck ], [ %46, %vector.scevcheck ], [ %ind.end33, %vec.epilog.iter.check ]
  %uglygep79 = getelementptr i8, ptr %.tr20, i64 -1
  %uglygep80 = getelementptr i8, ptr %uglygep79, i64 %18
  %uglygep88 = getelementptr i8, ptr %uglygep79, i64 %45
  br label %.lr.ph.i103

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.vector.body.preheader
  %lsr.iv74 = phi i64 [ %71, %vec.epilog.vector.body.preheader ], [ %lsr.iv.next75, %vec.epilog.vector.body ]
  %uglygep78 = getelementptr i8, ptr %uglygep77, i64 %lsr.iv74
  %wide.load37 = load <4 x i8>, ptr %uglygep78, align 1
  %uglygep76 = getelementptr i8, ptr %uglygep73, i64 %lsr.iv74
  store <4 x i8> %wide.load37, ptr %uglygep76, align 1
  %lsr.iv.next75 = add i64 %lsr.iv74, -4
  %73 = icmp eq i64 %72, %lsr.iv.next75
  br i1 %73, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.vector.body, !llvm.loop !551

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader
  %.07.i = phi i64 [ %.07.i.ph, %.lr.ph.i103.preheader ], [ %77, %.lr.ph.i103 ]
  %uglygep95 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep87 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %74 = load i8, ptr %uglygep87, align 1
  store i8 %74, ptr %uglygep95, align 1
  %uglygep93 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep94 = getelementptr i8, ptr %uglygep93, i64 -1
  %uglygep85 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %uglygep86 = getelementptr i8, ptr %uglygep85, i64 -1
  %75 = load i8, ptr %uglygep86, align 1
  store i8 %75, ptr %uglygep94, align 1
  %uglygep91 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep92 = getelementptr i8, ptr %uglygep91, i64 -2
  %uglygep83 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %uglygep84 = getelementptr i8, ptr %uglygep83, i64 -2
  %76 = load i8, ptr %uglygep84, align 1
  store i8 %76, ptr %uglygep92, align 1
  %77 = add i64 %.07.i, -4
  %uglygep89 = getelementptr i8, ptr %uglygep88, i64 %.07.i
  %uglygep90 = getelementptr i8, ptr %uglygep89, i64 -3
  %uglygep81 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %uglygep82 = getelementptr i8, ptr %uglygep81, i64 -3
  %78 = load i8, ptr %uglygep82, align 1
  store i8 %78, ptr %uglygep90, align 1
  %.not.i102.3 = icmp eq i64 %77, 0
  br i1 %.not.i102.3, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i103, !llvm.loop !552

mem.copyBackwards__anon_9817.exit:                ; preds = %.lr.ph.i103, %vec.epilog.vector.body, %middle.block, %42
  tail call fastcc void @sort.cross_merge__anon_14518(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %17, i64 %37, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %39

79:                                               ; preds = %40
  %80 = add nuw i64 %37, %16
  tail call fastcc void @sort.trinity_rotation.9(ptr nonnull align 1 %19, i64 %80, ptr nonnull align 1 %1, i64 %2, i64 %16, i64 8)
  %81 = shl nuw nsw i64 %37, 1
  %82 = icmp ult i64 %81, %17
  %83 = shl nuw i64 %17, 1
  %84 = icmp ult i64 %83, %37
  %85 = select i1 %82, i1 true, i1 %84
  br i1 %85, label %86, label %.critedge3

86:                                               ; preds = %79
  %.not100 = icmp ugt i64 %37, %2
  br i1 %.not100, label %.critedge, label %87

87:                                               ; preds = %86
  tail call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %.tr20, i64 %41, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %39

.critedge:                                        ; preds = %86
  %.not101 = icmp ugt i64 %17, %2
  br i1 %.not101, label %.critedge3, label %88

88:                                               ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16506(ptr nonnull align 1 %.tr20, i64 %41, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %39

.critedge3:                                       ; preds = %.critedge, %79
  tail call fastcc void @sort.rotate_merge_block__anon_16239(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %2, i64 %17, i64 %37, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br label %39

89:                                               ; preds = %39
  %90 = shl nuw i64 %38, 1
  %91 = icmp ult i64 %90, %16
  %92 = and i64 %.tr321, -2
  %93 = icmp ult i64 %92, %38
  %94 = or i1 %93, %91
  %95 = icmp ugt i64 %38, %2
  %not. = xor i1 %94, true
  %or.cond12 = select i1 %not., i1 true, i1 %95
  %.pre = add nuw i64 %38, %16
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %99, label %.critedge7

.critedge7:                                       ; preds = %89
  %96 = add nuw i64 %37, %17
  %97 = shl nuw i64 %96, 3
  %98 = getelementptr inbounds i8, ptr %.tr20, i64 %97
  tail call fastcc void @sort.partial_backwards_merge__anon_16238(ptr nonnull align 1 %98, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %16, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret void

99:                                               ; preds = %89
  %100 = icmp ule i64 %17, %2
  %or.cond14 = select i1 %94, i1 %100, i1 false
  %101 = add nuw i64 %37, %17
  %102 = shl nuw i64 %101, 3
  %103 = getelementptr inbounds i8, ptr %.tr20, i64 %102
  br i1 %or.cond14, label %104, label %.critedge9

104:                                              ; preds = %99
  tail call fastcc void @sort.partial_forward_merge__anon_16506(ptr nonnull align 1 %103, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %16, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret void

.critedge9:                                       ; preds = %99
  %105 = shl i64 %16, 3
  %106 = add i64 %105, -8
  %107 = getelementptr inbounds i8, ptr %103, i64 %106
  %108 = getelementptr inbounds i8, ptr %103, i64 %105
  %109 = load ptr, ptr %107, align 8
  %110 = load ptr, ptr %108, align 8
  %111 = tail call i8 %5(ptr align 1 %6, ptr align 1 %109, ptr align 1 %110) #18
  %.not = icmp eq i8 %111, 1
  br i1 %.not, label %.lr.ph, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.median_of_nine__anon_16240(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr nocapture nonnull readonly align 1 %6, ptr nonnull align 1 %7) unnamed_addr #4 {
  %9 = alloca [96 x i8], align 8
  %10 = alloca [96 x i8], align 8
  %11 = alloca [96 x i8], align 8
  %12 = alloca [864 x i8], align 8
  %13 = udiv i64 %1, 9
  %14 = mul nuw i64 %13, %4
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %0) #18
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = getelementptr inbounds i8, ptr %12, i64 %4
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %15) #18
  %17 = getelementptr inbounds i8, ptr %15, i64 %14
  %18 = shl nuw i64 %4, 1
  %19 = getelementptr inbounds i8, ptr %12, i64 %18
  call void %5(ptr nonnull align 1 %19, ptr nonnull align 1 %17) #18
  %20 = getelementptr inbounds i8, ptr %17, i64 %14
  %21 = mul nuw i64 %4, 3
  %22 = getelementptr inbounds i8, ptr %12, i64 %21
  call void %5(ptr nonnull align 1 %22, ptr nonnull align 1 %20) #18
  %23 = getelementptr inbounds i8, ptr %20, i64 %14
  %24 = shl nuw i64 %4, 2
  %25 = getelementptr inbounds i8, ptr %12, i64 %24
  call void %5(ptr nonnull align 1 %25, ptr nonnull align 1 %23) #18
  %26 = getelementptr inbounds i8, ptr %23, i64 %14
  %27 = mul nuw i64 %4, 5
  %28 = getelementptr inbounds i8, ptr %12, i64 %27
  call void %5(ptr nonnull align 1 %28, ptr nonnull align 1 %26) #18
  %29 = getelementptr inbounds i8, ptr %26, i64 %14
  %30 = mul nuw i64 %4, 6
  %31 = getelementptr inbounds i8, ptr %12, i64 %30
  call void %5(ptr nonnull align 1 %31, ptr align 1 %29) #18
  %32 = getelementptr inbounds i8, ptr %29, i64 %14
  %33 = mul nuw i64 %4, 7
  %34 = getelementptr inbounds i8, ptr %12, i64 %33
  call void %5(ptr nonnull align 1 %34, ptr align 1 %32) #18
  %35 = getelementptr inbounds i8, ptr %32, i64 %14
  %36 = shl nuw i64 %4, 3
  %37 = getelementptr inbounds i8, ptr %12, i64 %36
  call void %5(ptr nonnull align 1 %37, ptr align 1 %35) #18
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  call void %6(ptr align 1 %3, i64 4) #18
  %38 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %16) #18
  %.not.i = icmp eq i8 %38, 1
  %..i = select i1 %.not.i, i64 %4, i64 0
  %.1.i = select i1 %.not.i, i64 0, i64 %4
  %39 = getelementptr inbounds i8, ptr %12, i64 %.1.i
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %39) #18
  %40 = getelementptr inbounds i8, ptr %12, i64 %..i
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %40) #18
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %9) #18
  %41 = shl nuw i64 %4, 1
  %42 = getelementptr inbounds i8, ptr %12, i64 %41
  %43 = getelementptr inbounds i8, ptr %42, i64 %4
  %44 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %42, ptr nonnull align 1 %43) #18
  %.not26.i = icmp eq i8 %44, 1
  %.2.i = select i1 %.not26.i, i64 %4, i64 0
  %.3.i = select i1 %.not26.i, i64 0, i64 %4
  %45 = getelementptr inbounds i8, ptr %42, i64 %.3.i
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %45) #18
  %46 = getelementptr inbounds i8, ptr %42, i64 %.2.i
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %46) #18
  call void %5(ptr nonnull align 1 %43, ptr nonnull align 1 %9) #18
  %47 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %42) #18
  %.not27.i = icmp eq i8 %47, 1
  %48 = select i1 %.not27.i, i64 0, i64 %41
  %49 = getelementptr inbounds i8, ptr %12, i64 %48
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %49) #18
  %50 = getelementptr inbounds i8, ptr %16, i64 %41
  %51 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %50) #18
  %52 = icmp eq i8 %51, 1
  %53 = select i1 %52, i64 %41, i64 0
  %54 = getelementptr inbounds i8, ptr %16, i64 %53
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %54) #18
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  %55 = shl nuw i64 %4, 2
  %56 = getelementptr inbounds i8, ptr %12, i64 %55
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  call void %6(ptr align 1 %3, i64 4) #18
  %57 = getelementptr inbounds i8, ptr %56, i64 %4
  %58 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %56, ptr nonnull align 1 %57) #18
  %.not.i3 = icmp eq i8 %58, 1
  %..i4 = select i1 %.not.i3, i64 %4, i64 0
  %.1.i5 = select i1 %.not.i3, i64 0, i64 %4
  %59 = getelementptr inbounds i8, ptr %56, i64 %.1.i5
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %59) #18
  %60 = getelementptr inbounds i8, ptr %56, i64 %..i4
  call void %5(ptr nonnull align 1 %56, ptr nonnull align 1 %60) #18
  call void %5(ptr nonnull align 1 %57, ptr nonnull align 1 %9) #18
  %61 = getelementptr inbounds i8, ptr %56, i64 %41
  %62 = getelementptr inbounds i8, ptr %61, i64 %4
  %63 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %61, ptr nonnull align 1 %62) #18
  %.not26.i6 = icmp eq i8 %63, 1
  %.2.i7 = select i1 %.not26.i6, i64 %4, i64 0
  %.3.i8 = select i1 %.not26.i6, i64 0, i64 %4
  %64 = getelementptr inbounds i8, ptr %61, i64 %.3.i8
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %64) #18
  %65 = getelementptr inbounds i8, ptr %61, i64 %.2.i7
  call void %5(ptr nonnull align 1 %61, ptr nonnull align 1 %65) #18
  call void %5(ptr nonnull align 1 %62, ptr nonnull align 1 %9) #18
  %66 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %56, ptr nonnull align 1 %61) #18
  %.not27.i9 = icmp eq i8 %66, 1
  %67 = select i1 %.not27.i9, i64 0, i64 %41
  %68 = getelementptr inbounds i8, ptr %56, i64 %67
  call void %5(ptr nonnull align 1 %61, ptr nonnull align 1 %68) #18
  %69 = getelementptr inbounds i8, ptr %57, i64 %41
  %70 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %57, ptr nonnull align 1 %69) #18
  %71 = icmp eq i8 %70, 1
  %72 = select i1 %71, i64 %41, i64 0
  %73 = getelementptr inbounds i8, ptr %57, i64 %72
  call void %5(ptr nonnull align 1 %57, ptr nonnull align 1 %73) #18
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %28) #18
  %74 = shl nuw i64 %4, 3
  %75 = getelementptr inbounds i8, ptr %12, i64 %74
  call void %5(ptr nonnull align 1 %22, ptr nonnull align 1 %75) #18
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  call void %6(ptr align 1 %3, i64 4) #18
  %76 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %16) #18
  %.not.i10 = icmp eq i8 %76, 1
  %..i11 = select i1 %.not.i10, i64 %4, i64 0
  %.1.i12 = select i1 %.not.i10, i64 0, i64 %4
  %77 = getelementptr inbounds i8, ptr %12, i64 %.1.i12
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %77) #18
  %78 = getelementptr inbounds i8, ptr %12, i64 %..i11
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %78) #18
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %9) #18
  %79 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %42, ptr nonnull align 1 %43) #18
  %.not26.i13 = icmp eq i8 %79, 1
  %.2.i14 = select i1 %.not26.i13, i64 %4, i64 0
  %.3.i15 = select i1 %.not26.i13, i64 0, i64 %4
  %80 = getelementptr inbounds i8, ptr %42, i64 %.3.i15
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %80) #18
  %81 = getelementptr inbounds i8, ptr %42, i64 %.2.i14
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %81) #18
  call void %5(ptr nonnull align 1 %43, ptr nonnull align 1 %9) #18
  %82 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %42) #18
  %.not27.i16 = icmp eq i8 %82, 1
  %83 = select i1 %.not27.i16, i64 0, i64 %41
  %84 = getelementptr inbounds i8, ptr %12, i64 %83
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %84) #18
  %85 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %50) #18
  %86 = icmp eq i8 %85, 1
  %87 = select i1 %86, i64 %41, i64 0
  %88 = getelementptr inbounds i8, ptr %16, i64 %87
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %88) #18
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %31) #18
  call void %6(ptr align 1 %3, i64 3) #18
  %89 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %16) #18
  %90 = icmp eq i8 %89, 1
  %91 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %42) #18
  %92 = icmp ne i8 %91, 1
  %93 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %42) #18
  %94 = icmp eq i8 %93, 1
  %95 = xor i1 %90, %92
  %96 = xor i1 %90, %94
  %97 = zext i1 %96 to i64
  %98 = zext i1 %95 to i64
  %99 = add nuw nsw i64 %97, %98
  %100 = mul nuw i64 %99, %4
  %101 = getelementptr inbounds i8, ptr %12, i64 %100
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %101) #18
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16242(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9) unnamed_addr #4 {
  tail call void %9(ptr align 1 %6, i64 %4) #18
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %10
  %11 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv154 = phi i64 [ %11, %.cont81.preheader ], [ %lsr.iv.next155, %.cont81 ]
  %.0142 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.0123141 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.0135140 = phi ptr [ %43, %.cont81 ], [ %2, %.cont81.preheader ]
  %12 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.0135140) #18
  %13 = icmp eq i8 %12, 1
  %.sroa.speculated77 = select i1 %13, ptr %.0142, ptr %.0123141
  tail call void %8(ptr align 1 %.sroa.speculated77, ptr align 1 %.0135140) #18
  %14 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 %7
  %.0123. = select i1 %13, ptr %.0123141, ptr %14
  %..0 = select i1 %13, ptr %14, ptr %.0142
  %15 = getelementptr inbounds i8, ptr %.0135140, i64 %7
  %16 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %15) #18
  %17 = icmp eq i8 %16, 1
  %.sroa.speculated68 = select i1 %17, ptr %..0, ptr %.0123.
  tail call void %8(ptr align 1 %.sroa.speculated68, ptr align 1 %15) #18
  %18 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 %7
  %.2125 = select i1 %17, ptr %.0123., ptr %18
  %.2 = select i1 %17, ptr %18, ptr %..0
  %19 = getelementptr inbounds i8, ptr %15, i64 %7
  %20 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %19) #18
  %21 = icmp eq i8 %20, 1
  %.sroa.speculated59 = select i1 %21, ptr %.2, ptr %.2125
  tail call void %8(ptr align 1 %.sroa.speculated59, ptr align 1 %19) #18
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 %7
  %.3126 = select i1 %21, ptr %.2125, ptr %22
  %.3 = select i1 %21, ptr %22, ptr %.2
  %23 = getelementptr inbounds i8, ptr %19, i64 %7
  %24 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %23) #18
  %25 = icmp eq i8 %24, 1
  %.sroa.speculated50 = select i1 %25, ptr %.3, ptr %.3126
  tail call void %8(ptr align 1 %.sroa.speculated50, ptr align 1 %23) #18
  %26 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 %7
  %.4127 = select i1 %25, ptr %.3126, ptr %26
  %.4 = select i1 %25, ptr %26, ptr %.3
  %27 = getelementptr inbounds i8, ptr %23, i64 %7
  %28 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %27) #18
  %29 = icmp eq i8 %28, 1
  %.sroa.speculated41 = select i1 %29, ptr %.4, ptr %.4127
  tail call void %8(ptr align 1 %.sroa.speculated41, ptr align 1 %27) #18
  %30 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 %7
  %.5128 = select i1 %29, ptr %.4127, ptr %30
  %.5 = select i1 %29, ptr %30, ptr %.4
  %31 = getelementptr inbounds i8, ptr %27, i64 %7
  %32 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %31) #18
  %33 = icmp eq i8 %32, 1
  %.sroa.speculated32 = select i1 %33, ptr %.5, ptr %.5128
  tail call void %8(ptr align 1 %.sroa.speculated32, ptr align 1 %31) #18
  %34 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 %7
  %.6129 = select i1 %33, ptr %.5128, ptr %34
  %.6 = select i1 %33, ptr %34, ptr %.5
  %35 = getelementptr inbounds i8, ptr %31, i64 %7
  %36 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %35) #18
  %37 = icmp eq i8 %36, 1
  %.sroa.speculated23 = select i1 %37, ptr %.6, ptr %.6129
  tail call void %8(ptr align 1 %.sroa.speculated23, ptr align 1 %35) #18
  %38 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 %7
  %.7130 = select i1 %37, ptr %.6129, ptr %38
  %.7 = select i1 %37, ptr %38, ptr %.6
  %39 = getelementptr inbounds i8, ptr %35, i64 %7
  %40 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %39) #18
  %41 = icmp eq i8 %40, 1
  %.sroa.speculated14 = select i1 %41, ptr %.7, ptr %.7130
  tail call void %8(ptr align 1 %.sroa.speculated14, ptr align 1 %39) #18
  %42 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 %7
  %.8131 = select i1 %41, ptr %.7130, ptr %42
  %.8 = select i1 %41, ptr %42, ptr %.7
  %43 = getelementptr inbounds i8, ptr %39, i64 %7
  %lsr.iv.next155 = add nsw i64 %lsr.iv154, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next155, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %10
  %.0135.lcssa = phi ptr [ %2, %10 ], [ %43, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %10 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %10 ], [ %.8, %.cont81 ]
  %44 = and i64 %4, 7
  %.not152 = icmp eq i64 %44, 0
  br i1 %.not152, label %._crit_edge149, label %.cont.preheader

.cont.preheader:                                  ; preds = %._crit_edge
  br label %.cont

.cont:                                            ; preds = %.cont, %.cont.preheader
  %lsr.iv = phi i64 [ %44, %.cont.preheader ], [ %lsr.iv.next, %.cont ]
  %.9148 = phi ptr [ %..9, %.cont ], [ %.0.lcssa, %.cont.preheader ]
  %.9132147 = phi ptr [ %.9132., %.cont ], [ %.0123.lcssa, %.cont.preheader ]
  %.1136145 = phi ptr [ %48, %.cont ], [ %.0135.lcssa, %.cont.preheader ]
  %45 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.1136145) #18
  %46 = icmp eq i8 %45, 1
  %.sroa.speculated = select i1 %46, ptr %.9148, ptr %.9132147
  tail call void %8(ptr align 1 %.sroa.speculated, ptr align 1 %.1136145) #18
  %47 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %7
  %.9132. = select i1 %46, ptr %.9132147, ptr %47
  %..9 = select i1 %46, ptr %47, ptr %.9148
  %48 = getelementptr inbounds i8, ptr %.1136145, i64 %7
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond153.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond153.not, label %._crit_edge149, label %.cont

._crit_edge149:                                   ; preds = %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ]
  %49 = ptrtoint ptr %.9.lcssa to i64
  %50 = ptrtoint ptr %0 to i64
  %51 = sub nuw i64 %49, %50
  %52 = or i64 %51, %7
  %53 = and i64 %52, -4294967296
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %._crit_edge149
  %56 = trunc i64 %7 to i32
  %57 = trunc i64 %51 to i32
  %58 = udiv i32 %57, %56
  %59 = zext i32 %58 to i64
  br label %62

60:                                               ; preds = %._crit_edge149
  %61 = udiv i64 %51, %7
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i64 [ %59, %55 ], [ %61, %60 ]
  %64 = ptrtoint ptr %.9132.lcssa to i64
  %65 = ptrtoint ptr %1 to i64
  %66 = sub nuw i64 %64, %65
  %67 = or i64 %66, %7
  %68 = and i64 %67, -4294967296
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %62
  %71 = trunc i64 %7 to i32
  %72 = trunc i64 %66 to i32
  %73 = udiv i32 %72, %71
  %74 = zext i32 %73 to i64
  br label %77

75:                                               ; preds = %62
  %76 = udiv i64 %66, %7
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i64 [ %74, %70 ], [ %76, %75 ]
  %79 = mul nuw i64 %63, %7
  %80 = getelementptr inbounds i8, ptr %0, i64 %79
  %81 = mul nuw i64 %78, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %80, ptr nonnull align 1 %1, i64 %81, i1 false)
  %82 = lshr i64 %63, 4
  %83 = icmp ule i64 %78, %82
  %84 = icmp ult i64 %63, 97
  %85 = or i1 %84, %83
  br i1 %85, label %86, label %93

common.ret:                                       ; preds = %89
  ret void

86:                                               ; preds = %77
  %87 = icmp ult i64 %63, 96
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call fastcc void @sort.tail_swap__anon_14485(ptr nonnull align 1 %0, i64 %63, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret void

89:                                               ; preds = %86
  %90 = tail call fastcc i1 @sort.quad_swap__anon_14487(ptr nonnull align 1 %0, i64 %63, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %90, label %91, label %common.ret

91:                                               ; preds = %89
  %92 = tail call fastcc i64 @sort.quad_merge__anon_14488(ptr nonnull align 1 %0, i64 %63, ptr nonnull align 1 %1, i64 %63, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  tail call fastcc void @sort.rotate_merge__anon_14489(ptr nonnull align 1 %0, i64 %63, ptr nonnull align 1 %1, i64 %63, i64 %92, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret void

93:                                               ; preds = %77
  tail call fastcc void @sort.flux_partition__anon_14507(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %63, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.median_of_nine__anon_16248(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull readonly align 1 %2, ptr align 1 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr nonnull align 1 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 8
  %9 = alloca [96 x i8], align 8
  %10 = alloca [96 x i8], align 8
  %11 = alloca [864 x i8], align 8
  %12 = udiv i64 %1, 9
  %13 = mul nuw i64 %12, %4
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %0) #18
  %14 = getelementptr inbounds i8, ptr %0, i64 %13
  %15 = getelementptr inbounds i8, ptr %11, i64 %4
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %14) #18
  %16 = getelementptr inbounds i8, ptr %14, i64 %13
  %17 = shl nuw i64 %4, 1
  %18 = getelementptr inbounds i8, ptr %11, i64 %17
  call void %5(ptr nonnull align 1 %18, ptr nonnull align 1 %16) #18
  %19 = getelementptr inbounds i8, ptr %16, i64 %13
  %20 = mul nuw i64 %4, 3
  %21 = getelementptr inbounds i8, ptr %11, i64 %20
  call void %5(ptr nonnull align 1 %21, ptr nonnull align 1 %19) #18
  %22 = getelementptr inbounds i8, ptr %19, i64 %13
  %23 = shl nuw i64 %4, 2
  %24 = getelementptr inbounds i8, ptr %11, i64 %23
  call void %5(ptr nonnull align 1 %24, ptr nonnull align 1 %22) #18
  %25 = getelementptr inbounds i8, ptr %22, i64 %13
  %26 = mul nuw i64 %4, 5
  %27 = getelementptr inbounds i8, ptr %11, i64 %26
  call void %5(ptr nonnull align 1 %27, ptr nonnull align 1 %25) #18
  %28 = getelementptr inbounds i8, ptr %25, i64 %13
  %29 = mul nuw i64 %4, 6
  %30 = getelementptr inbounds i8, ptr %11, i64 %29
  call void %5(ptr nonnull align 1 %30, ptr align 1 %28) #18
  %31 = getelementptr inbounds i8, ptr %28, i64 %13
  %32 = mul nuw i64 %4, 7
  %33 = getelementptr inbounds i8, ptr %11, i64 %32
  call void %5(ptr nonnull align 1 %33, ptr align 1 %31) #18
  %34 = getelementptr inbounds i8, ptr %31, i64 %13
  %35 = shl nuw i64 %4, 3
  %36 = getelementptr inbounds i8, ptr %11, i64 %35
  call void %5(ptr nonnull align 1 %36, ptr align 1 %34) #18
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %37 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %15) #18
  %.not.i = icmp eq i8 %37, 1
  %..i = select i1 %.not.i, i64 %4, i64 0
  %.1.i = select i1 %.not.i, i64 0, i64 %4
  %38 = getelementptr inbounds i8, ptr %11, i64 %.1.i
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %38) #18
  %39 = getelementptr inbounds i8, ptr %11, i64 %..i
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %39) #18
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %8) #18
  %40 = shl nuw i64 %4, 1
  %41 = getelementptr inbounds i8, ptr %11, i64 %40
  %42 = getelementptr inbounds i8, ptr %41, i64 %4
  %43 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %41, ptr nonnull align 1 %42) #18
  %.not26.i = icmp eq i8 %43, 1
  %.2.i = select i1 %.not26.i, i64 %4, i64 0
  %.3.i = select i1 %.not26.i, i64 0, i64 %4
  %44 = getelementptr inbounds i8, ptr %41, i64 %.3.i
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %44) #18
  %45 = getelementptr inbounds i8, ptr %41, i64 %.2.i
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %45) #18
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %8) #18
  %46 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %41) #18
  %.not27.i = icmp eq i8 %46, 1
  %47 = select i1 %.not27.i, i64 0, i64 %40
  %48 = getelementptr inbounds i8, ptr %11, i64 %47
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %48) #18
  %49 = getelementptr inbounds i8, ptr %15, i64 %40
  %50 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %49) #18
  %51 = icmp eq i8 %50, 1
  %52 = select i1 %51, i64 %40, i64 0
  %53 = getelementptr inbounds i8, ptr %15, i64 %52
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %53) #18
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  %54 = shl nuw i64 %4, 2
  %55 = getelementptr inbounds i8, ptr %11, i64 %54
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %56 = getelementptr inbounds i8, ptr %55, i64 %4
  %57 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %55, ptr nonnull align 1 %56) #18
  %.not.i3 = icmp eq i8 %57, 1
  %..i4 = select i1 %.not.i3, i64 %4, i64 0
  %.1.i5 = select i1 %.not.i3, i64 0, i64 %4
  %58 = getelementptr inbounds i8, ptr %55, i64 %.1.i5
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %58) #18
  %59 = getelementptr inbounds i8, ptr %55, i64 %..i4
  call void %5(ptr nonnull align 1 %55, ptr nonnull align 1 %59) #18
  call void %5(ptr nonnull align 1 %56, ptr nonnull align 1 %8) #18
  %60 = getelementptr inbounds i8, ptr %55, i64 %40
  %61 = getelementptr inbounds i8, ptr %60, i64 %4
  %62 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %60, ptr nonnull align 1 %61) #18
  %.not26.i6 = icmp eq i8 %62, 1
  %.2.i7 = select i1 %.not26.i6, i64 %4, i64 0
  %.3.i8 = select i1 %.not26.i6, i64 0, i64 %4
  %63 = getelementptr inbounds i8, ptr %60, i64 %.3.i8
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %63) #18
  %64 = getelementptr inbounds i8, ptr %60, i64 %.2.i7
  call void %5(ptr nonnull align 1 %60, ptr nonnull align 1 %64) #18
  call void %5(ptr nonnull align 1 %61, ptr nonnull align 1 %8) #18
  %65 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %55, ptr nonnull align 1 %60) #18
  %.not27.i9 = icmp eq i8 %65, 1
  %66 = select i1 %.not27.i9, i64 0, i64 %40
  %67 = getelementptr inbounds i8, ptr %55, i64 %66
  call void %5(ptr nonnull align 1 %60, ptr nonnull align 1 %67) #18
  %68 = getelementptr inbounds i8, ptr %56, i64 %40
  %69 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %56, ptr nonnull align 1 %68) #18
  %70 = icmp eq i8 %69, 1
  %71 = select i1 %70, i64 %40, i64 0
  %72 = getelementptr inbounds i8, ptr %56, i64 %71
  call void %5(ptr nonnull align 1 %56, ptr nonnull align 1 %72) #18
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %27) #18
  %73 = shl nuw i64 %4, 3
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  call void %5(ptr nonnull align 1 %21, ptr nonnull align 1 %74) #18
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %75 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %15) #18
  %.not.i10 = icmp eq i8 %75, 1
  %..i11 = select i1 %.not.i10, i64 %4, i64 0
  %.1.i12 = select i1 %.not.i10, i64 0, i64 %4
  %76 = getelementptr inbounds i8, ptr %11, i64 %.1.i12
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %76) #18
  %77 = getelementptr inbounds i8, ptr %11, i64 %..i11
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %77) #18
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %8) #18
  %78 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %41, ptr nonnull align 1 %42) #18
  %.not26.i13 = icmp eq i8 %78, 1
  %.2.i14 = select i1 %.not26.i13, i64 %4, i64 0
  %.3.i15 = select i1 %.not26.i13, i64 0, i64 %4
  %79 = getelementptr inbounds i8, ptr %41, i64 %.3.i15
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %79) #18
  %80 = getelementptr inbounds i8, ptr %41, i64 %.2.i14
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %80) #18
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %8) #18
  %81 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %41) #18
  %.not27.i16 = icmp eq i8 %81, 1
  %82 = select i1 %.not27.i16, i64 0, i64 %40
  %83 = getelementptr inbounds i8, ptr %11, i64 %82
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %83) #18
  %84 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %49) #18
  %85 = icmp eq i8 %84, 1
  %86 = select i1 %85, i64 %40, i64 0
  %87 = getelementptr inbounds i8, ptr %15, i64 %86
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %87) #18
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %30) #18
  %88 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %15) #18
  %89 = icmp eq i8 %88, 1
  %90 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %41) #18
  %91 = icmp ne i8 %90, 1
  %92 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %41) #18
  %93 = icmp eq i8 %92, 1
  %94 = xor i1 %89, %91
  %95 = xor i1 %89, %93
  %96 = zext i1 %95 to i64
  %97 = zext i1 %94 to i64
  %98 = add nuw nsw i64 %96, %97
  %99 = mul nuw i64 %98, %4
  %100 = getelementptr inbounds i8, ptr %11, i64 %99
  call void %5(ptr nonnull align 1 %6, ptr nonnull align 1 %100) #18
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16250(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8) unnamed_addr #4 {
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %9
  %10 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv1 = phi i64 [ %10, %.cont81.preheader ], [ %lsr.iv.next2, %.cont81 ]
  %.0142 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.0123141 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.0135140 = phi ptr [ %42, %.cont81 ], [ %2, %.cont81.preheader ]
  %11 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.0135140) #18
  %12 = icmp eq i8 %11, 1
  %.sroa.speculated77 = select i1 %12, ptr %.0142, ptr %.0123141
  tail call void %8(ptr align 1 %.sroa.speculated77, ptr align 1 %.0135140) #18
  %13 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 %7
  %.0123. = select i1 %12, ptr %.0123141, ptr %13
  %..0 = select i1 %12, ptr %13, ptr %.0142
  %14 = getelementptr inbounds i8, ptr %.0135140, i64 %7
  %15 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %14) #18
  %16 = icmp eq i8 %15, 1
  %.sroa.speculated68 = select i1 %16, ptr %..0, ptr %.0123.
  tail call void %8(ptr align 1 %.sroa.speculated68, ptr align 1 %14) #18
  %17 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 %7
  %.2125 = select i1 %16, ptr %.0123., ptr %17
  %.2 = select i1 %16, ptr %17, ptr %..0
  %18 = getelementptr inbounds i8, ptr %14, i64 %7
  %19 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %18) #18
  %20 = icmp eq i8 %19, 1
  %.sroa.speculated59 = select i1 %20, ptr %.2, ptr %.2125
  tail call void %8(ptr align 1 %.sroa.speculated59, ptr align 1 %18) #18
  %21 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 %7
  %.3126 = select i1 %20, ptr %.2125, ptr %21
  %.3 = select i1 %20, ptr %21, ptr %.2
  %22 = getelementptr inbounds i8, ptr %18, i64 %7
  %23 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %22) #18
  %24 = icmp eq i8 %23, 1
  %.sroa.speculated50 = select i1 %24, ptr %.3, ptr %.3126
  tail call void %8(ptr align 1 %.sroa.speculated50, ptr align 1 %22) #18
  %25 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 %7
  %.4127 = select i1 %24, ptr %.3126, ptr %25
  %.4 = select i1 %24, ptr %25, ptr %.3
  %26 = getelementptr inbounds i8, ptr %22, i64 %7
  %27 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %26) #18
  %28 = icmp eq i8 %27, 1
  %.sroa.speculated41 = select i1 %28, ptr %.4, ptr %.4127
  tail call void %8(ptr align 1 %.sroa.speculated41, ptr align 1 %26) #18
  %29 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 %7
  %.5128 = select i1 %28, ptr %.4127, ptr %29
  %.5 = select i1 %28, ptr %29, ptr %.4
  %30 = getelementptr inbounds i8, ptr %26, i64 %7
  %31 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %30) #18
  %32 = icmp eq i8 %31, 1
  %.sroa.speculated32 = select i1 %32, ptr %.5, ptr %.5128
  tail call void %8(ptr align 1 %.sroa.speculated32, ptr align 1 %30) #18
  %33 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 %7
  %.6129 = select i1 %32, ptr %.5128, ptr %33
  %.6 = select i1 %32, ptr %33, ptr %.5
  %34 = getelementptr inbounds i8, ptr %30, i64 %7
  %35 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %34) #18
  %36 = icmp eq i8 %35, 1
  %.sroa.speculated23 = select i1 %36, ptr %.6, ptr %.6129
  tail call void %8(ptr align 1 %.sroa.speculated23, ptr align 1 %34) #18
  %37 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 %7
  %.7130 = select i1 %36, ptr %.6129, ptr %37
  %.7 = select i1 %36, ptr %37, ptr %.6
  %38 = getelementptr inbounds i8, ptr %34, i64 %7
  %39 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %38) #18
  %40 = icmp eq i8 %39, 1
  %.sroa.speculated14 = select i1 %40, ptr %.7, ptr %.7130
  tail call void %8(ptr align 1 %.sroa.speculated14, ptr align 1 %38) #18
  %41 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 %7
  %.8131 = select i1 %40, ptr %.7130, ptr %41
  %.8 = select i1 %40, ptr %41, ptr %.7
  %42 = getelementptr inbounds i8, ptr %38, i64 %7
  %lsr.iv.next2 = add nsw i64 %lsr.iv1, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next2, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %9
  %.0135.lcssa = phi ptr [ %2, %9 ], [ %42, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %9 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %9 ], [ %.8, %.cont81 ]
  %43 = and i64 %4, 7
  %.not152 = icmp eq i64 %43, 0
  br i1 %.not152, label %._crit_edge149, label %.cont.preheader

.cont.preheader:                                  ; preds = %._crit_edge
  br label %.cont

.cont:                                            ; preds = %.cont, %.cont.preheader
  %lsr.iv = phi i64 [ %43, %.cont.preheader ], [ %lsr.iv.next, %.cont ]
  %.9148 = phi ptr [ %..9, %.cont ], [ %.0.lcssa, %.cont.preheader ]
  %.9132147 = phi ptr [ %.9132., %.cont ], [ %.0123.lcssa, %.cont.preheader ]
  %.1136145 = phi ptr [ %47, %.cont ], [ %.0135.lcssa, %.cont.preheader ]
  %44 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.1136145) #18
  %45 = icmp eq i8 %44, 1
  %.sroa.speculated = select i1 %45, ptr %.9148, ptr %.9132147
  tail call void %8(ptr align 1 %.sroa.speculated, ptr align 1 %.1136145) #18
  %46 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %7
  %.9132. = select i1 %45, ptr %.9132147, ptr %46
  %..9 = select i1 %45, ptr %46, ptr %.9148
  %47 = getelementptr inbounds i8, ptr %.1136145, i64 %7
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond153.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond153.not, label %._crit_edge149, label %.cont

._crit_edge149:                                   ; preds = %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ]
  %48 = ptrtoint ptr %.9.lcssa to i64
  %49 = ptrtoint ptr %0 to i64
  %50 = sub nuw i64 %48, %49
  %51 = or i64 %50, %7
  %52 = and i64 %51, -4294967296
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %._crit_edge149
  %55 = trunc i64 %7 to i32
  %56 = trunc i64 %50 to i32
  %57 = udiv i32 %56, %55
  %58 = zext i32 %57 to i64
  br label %61

59:                                               ; preds = %._crit_edge149
  %60 = udiv i64 %50, %7
  br label %61

61:                                               ; preds = %59, %54
  %62 = phi i64 [ %58, %54 ], [ %60, %59 ]
  %63 = ptrtoint ptr %.9132.lcssa to i64
  %64 = ptrtoint ptr %1 to i64
  %65 = sub nuw i64 %63, %64
  %66 = or i64 %65, %7
  %67 = and i64 %66, -4294967296
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %61
  %70 = trunc i64 %7 to i32
  %71 = trunc i64 %65 to i32
  %72 = udiv i32 %71, %70
  %73 = zext i32 %72 to i64
  br label %76

74:                                               ; preds = %61
  %75 = udiv i64 %65, %7
  br label %76

76:                                               ; preds = %74, %69
  %77 = phi i64 [ %73, %69 ], [ %75, %74 ]
  %78 = mul nuw i64 %62, %7
  %79 = getelementptr inbounds i8, ptr %0, i64 %78
  %80 = mul nuw i64 %77, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %79, ptr nonnull align 1 %1, i64 %80, i1 false)
  %81 = lshr i64 %62, 4
  %82 = icmp ule i64 %77, %81
  %83 = icmp ult i64 %62, 97
  %84 = or i1 %83, %82
  br i1 %84, label %85, label %92

common.ret:                                       ; preds = %88
  ret void

85:                                               ; preds = %76
  %86 = icmp ult i64 %62, 96
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call fastcc void @sort.tail_swap__anon_14491(ptr nonnull align 1 %0, i64 %62, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret void

88:                                               ; preds = %85
  %89 = tail call fastcc i1 @sort.quad_swap__anon_14492(ptr nonnull align 1 %0, i64 %62, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %89, label %90, label %common.ret

90:                                               ; preds = %88
  %91 = tail call fastcc i64 @sort.quad_merge__anon_14493(ptr nonnull align 1 %0, i64 %62, ptr nonnull align 1 %1, i64 %62, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  tail call fastcc void @sort.rotate_merge__anon_14494(ptr nonnull align 1 %0, i64 %62, ptr nonnull align 1 %1, i64 %62, i64 %91, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret void

92:                                               ; preds = %76
  tail call fastcc void @sort.flux_partition__anon_14510(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %62, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16258(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nocapture nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7) unnamed_addr #4 {
  tail call void %7(ptr align 1 %6, i64 %4) #18
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %8
  %9 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv = phi i64 [ %9, %.cont81.preheader ], [ %lsr.iv.next, %.cont81 ]
  %.04 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.01233 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.01352 = phi ptr [ %65, %.cont81 ], [ %2, %.cont81.preheader ]
  %10 = load ptr, ptr %3, align 8
  %11 = load ptr, ptr %.01352, align 8
  %12 = tail call i8 %5(ptr align 1 %6, ptr align 1 %10, ptr align 1 %11) #18
  %13 = icmp eq i8 %12, 1
  %.sroa.speculated77 = select i1 %13, ptr %.04, ptr %.01233
  %14 = load i64, ptr %.01352, align 8
  store i64 %14, ptr %.sroa.speculated77, align 8
  %15 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 8
  %.0123. = select i1 %13, ptr %.01233, ptr %15
  %..0 = select i1 %13, ptr %15, ptr %.04
  %16 = getelementptr inbounds i8, ptr %.01352, i64 8
  %17 = load ptr, ptr %3, align 8
  %18 = load ptr, ptr %16, align 8
  %19 = tail call i8 %5(ptr align 1 %6, ptr align 1 %17, ptr align 1 %18) #18
  %20 = icmp eq i8 %19, 1
  %.sroa.speculated68 = select i1 %20, ptr %..0, ptr %.0123.
  %21 = load i64, ptr %16, align 8
  store i64 %21, ptr %.sroa.speculated68, align 8
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 8
  %.2125 = select i1 %20, ptr %.0123., ptr %22
  %.2 = select i1 %20, ptr %22, ptr %..0
  %23 = getelementptr inbounds i8, ptr %.01352, i64 16
  %24 = load ptr, ptr %3, align 8
  %25 = load ptr, ptr %23, align 8
  %26 = tail call i8 %5(ptr align 1 %6, ptr align 1 %24, ptr align 1 %25) #18
  %27 = icmp eq i8 %26, 1
  %.sroa.speculated59 = select i1 %27, ptr %.2, ptr %.2125
  %28 = load i64, ptr %23, align 8
  store i64 %28, ptr %.sroa.speculated59, align 8
  %29 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 8
  %.3126 = select i1 %27, ptr %.2125, ptr %29
  %.3 = select i1 %27, ptr %29, ptr %.2
  %30 = getelementptr inbounds i8, ptr %.01352, i64 24
  %31 = load ptr, ptr %3, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %5(ptr align 1 %6, ptr align 1 %31, ptr align 1 %32) #18
  %34 = icmp eq i8 %33, 1
  %.sroa.speculated50 = select i1 %34, ptr %.3, ptr %.3126
  %35 = load i64, ptr %30, align 8
  store i64 %35, ptr %.sroa.speculated50, align 8
  %36 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 8
  %.4127 = select i1 %34, ptr %.3126, ptr %36
  %.4 = select i1 %34, ptr %36, ptr %.3
  %37 = getelementptr inbounds i8, ptr %.01352, i64 32
  %38 = load ptr, ptr %3, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #18
  %41 = icmp eq i8 %40, 1
  %.sroa.speculated41 = select i1 %41, ptr %.4, ptr %.4127
  %42 = load i64, ptr %37, align 8
  store i64 %42, ptr %.sroa.speculated41, align 8
  %43 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 8
  %.5128 = select i1 %41, ptr %.4127, ptr %43
  %.5 = select i1 %41, ptr %43, ptr %.4
  %44 = getelementptr inbounds i8, ptr %.01352, i64 40
  %45 = load ptr, ptr %3, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = tail call i8 %5(ptr align 1 %6, ptr align 1 %45, ptr align 1 %46) #18
  %48 = icmp eq i8 %47, 1
  %.sroa.speculated32 = select i1 %48, ptr %.5, ptr %.5128
  %49 = load i64, ptr %44, align 8
  store i64 %49, ptr %.sroa.speculated32, align 8
  %50 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 8
  %.6129 = select i1 %48, ptr %.5128, ptr %50
  %.6 = select i1 %48, ptr %50, ptr %.5
  %51 = getelementptr inbounds i8, ptr %.01352, i64 48
  %52 = load ptr, ptr %3, align 8
  %53 = load ptr, ptr %51, align 8
  %54 = tail call i8 %5(ptr align 1 %6, ptr align 1 %52, ptr align 1 %53) #18
  %55 = icmp eq i8 %54, 1
  %.sroa.speculated23 = select i1 %55, ptr %.6, ptr %.6129
  %56 = load i64, ptr %51, align 8
  store i64 %56, ptr %.sroa.speculated23, align 8
  %57 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 8
  %.7130 = select i1 %55, ptr %.6129, ptr %57
  %.7 = select i1 %55, ptr %57, ptr %.6
  %58 = getelementptr inbounds i8, ptr %.01352, i64 56
  %59 = load ptr, ptr %3, align 8
  %60 = load ptr, ptr %58, align 8
  %61 = tail call i8 %5(ptr align 1 %6, ptr align 1 %59, ptr align 1 %60) #18
  %62 = icmp eq i8 %61, 1
  %.sroa.speculated14 = select i1 %62, ptr %.7, ptr %.7130
  %63 = load i64, ptr %58, align 8
  store i64 %63, ptr %.sroa.speculated14, align 8
  %64 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 8
  %.8131 = select i1 %62, ptr %.7130, ptr %64
  %.8 = select i1 %62, ptr %64, ptr %.7
  %65 = getelementptr inbounds i8, ptr %.01352, i64 64
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %8
  %.0135.lcssa = phi ptr [ %2, %8 ], [ %65, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %8 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %8 ], [ %.8, %.cont81 ]
  %66 = and i64 %4, 7
  %.not14 = icmp eq i64 %66, 0
  br i1 %.not14, label %._crit_edge11, label %.cont.preheader

.cont.preheader:                                  ; preds = %._crit_edge
  br label %.cont

.cont:                                            ; preds = %.cont, %.cont.preheader
  %.910 = phi ptr [ %..9, %.cont ], [ %.0.lcssa, %.cont.preheader ]
  %.91329 = phi ptr [ %.9132., %.cont ], [ %.0123.lcssa, %.cont.preheader ]
  %.01348 = phi i64 [ %74, %.cont ], [ 0, %.cont.preheader ]
  %67 = shl nuw nsw i64 %.01348, 3
  %uglygep = getelementptr i8, ptr %.0135.lcssa, i64 %67
  %68 = load ptr, ptr %3, align 8
  %69 = load ptr, ptr %uglygep, align 8
  %70 = tail call i8 %5(ptr align 1 %6, ptr align 1 %68, ptr align 1 %69) #18
  %71 = icmp eq i8 %70, 1
  %.sroa.speculated = select i1 %71, ptr %.910, ptr %.91329
  %72 = load i64, ptr %uglygep, align 8
  store i64 %72, ptr %.sroa.speculated, align 8
  %73 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %.9132. = select i1 %71, ptr %.91329, ptr %73
  %..9 = select i1 %71, ptr %73, ptr %.910
  %74 = add nuw nsw i64 %.01348, 1
  %exitcond15.not = icmp eq i64 %66, %74
  br i1 %exitcond15.not, label %._crit_edge11, label %.cont

._crit_edge11:                                    ; preds = %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ]
  %75 = ptrtoint ptr %.9.lcssa to i64
  %76 = ptrtoint ptr %0 to i64
  %77 = sub nuw i64 %75, %76
  %78 = lshr i64 %77, 3
  %79 = ptrtoint ptr %.9132.lcssa to i64
  %80 = ptrtoint ptr %1 to i64
  %81 = sub nuw i64 %79, %80
  %82 = lshr i64 %81, 3
  %83 = and i64 %77, -8
  %84 = getelementptr inbounds i8, ptr %0, i64 %83
  %85 = and i64 %81, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %84, ptr nonnull align 1 %1, i64 %85, i1 false)
  %86 = lshr i64 %77, 7
  %87 = icmp ule i64 %82, %86
  %88 = icmp ult i64 %77, 776
  %89 = or i1 %88, %87
  br i1 %89, label %90, label %97

common.ret:                                       ; preds = %93
  ret void

90:                                               ; preds = %._crit_edge11
  %91 = icmp ult i64 %77, 768
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  tail call fastcc void @sort.tail_swap__anon_14496(ptr nonnull align 1 %0, i64 %78, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret void

93:                                               ; preds = %90
  %94 = tail call fastcc i1 @sort.quad_swap__anon_14497(ptr nonnull align 1 %0, i64 %78, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %94, label %95, label %common.ret

95:                                               ; preds = %93
  %96 = tail call fastcc i64 @sort.quad_merge__anon_14498(ptr nonnull align 1 %0, i64 %78, ptr nonnull align 1 %1, i64 %78, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  tail call fastcc void @sort.rotate_merge__anon_14499(ptr nonnull align 1 %0, i64 %78, ptr nonnull align 1 %1, i64 %78, i64 %96, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret void

97:                                               ; preds = %._crit_edge11
  tail call fastcc void @sort.flux_partition__anon_14513(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %78, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16266(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nocapture nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %7
  %8 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv = phi i64 [ %8, %.cont81.preheader ], [ %lsr.iv.next, %.cont81 ]
  %.04 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.01233 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.01352 = phi ptr [ %64, %.cont81 ], [ %2, %.cont81.preheader ]
  %9 = load ptr, ptr %3, align 8
  %10 = load ptr, ptr %.01352, align 8
  %11 = tail call i8 %5(ptr align 1 %6, ptr align 1 %9, ptr align 1 %10) #18
  %12 = icmp eq i8 %11, 1
  %.sroa.speculated77 = select i1 %12, ptr %.04, ptr %.01233
  %13 = load i64, ptr %.01352, align 8
  store i64 %13, ptr %.sroa.speculated77, align 8
  %14 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 8
  %.0123. = select i1 %12, ptr %.01233, ptr %14
  %..0 = select i1 %12, ptr %14, ptr %.04
  %15 = getelementptr inbounds i8, ptr %.01352, i64 8
  %16 = load ptr, ptr %3, align 8
  %17 = load ptr, ptr %15, align 8
  %18 = tail call i8 %5(ptr align 1 %6, ptr align 1 %16, ptr align 1 %17) #18
  %19 = icmp eq i8 %18, 1
  %.sroa.speculated68 = select i1 %19, ptr %..0, ptr %.0123.
  %20 = load i64, ptr %15, align 8
  store i64 %20, ptr %.sroa.speculated68, align 8
  %21 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 8
  %.2125 = select i1 %19, ptr %.0123., ptr %21
  %.2 = select i1 %19, ptr %21, ptr %..0
  %22 = getelementptr inbounds i8, ptr %.01352, i64 16
  %23 = load ptr, ptr %3, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i8 %5(ptr align 1 %6, ptr align 1 %23, ptr align 1 %24) #18
  %26 = icmp eq i8 %25, 1
  %.sroa.speculated59 = select i1 %26, ptr %.2, ptr %.2125
  %27 = load i64, ptr %22, align 8
  store i64 %27, ptr %.sroa.speculated59, align 8
  %28 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 8
  %.3126 = select i1 %26, ptr %.2125, ptr %28
  %.3 = select i1 %26, ptr %28, ptr %.2
  %29 = getelementptr inbounds i8, ptr %.01352, i64 24
  %30 = load ptr, ptr %3, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i8 %5(ptr align 1 %6, ptr align 1 %30, ptr align 1 %31) #18
  %33 = icmp eq i8 %32, 1
  %.sroa.speculated50 = select i1 %33, ptr %.3, ptr %.3126
  %34 = load i64, ptr %29, align 8
  store i64 %34, ptr %.sroa.speculated50, align 8
  %35 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 8
  %.4127 = select i1 %33, ptr %.3126, ptr %35
  %.4 = select i1 %33, ptr %35, ptr %.3
  %36 = getelementptr inbounds i8, ptr %.01352, i64 32
  %37 = load ptr, ptr %3, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = tail call i8 %5(ptr align 1 %6, ptr align 1 %37, ptr align 1 %38) #18
  %40 = icmp eq i8 %39, 1
  %.sroa.speculated41 = select i1 %40, ptr %.4, ptr %.4127
  %41 = load i64, ptr %36, align 8
  store i64 %41, ptr %.sroa.speculated41, align 8
  %42 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 8
  %.5128 = select i1 %40, ptr %.4127, ptr %42
  %.5 = select i1 %40, ptr %42, ptr %.4
  %43 = getelementptr inbounds i8, ptr %.01352, i64 40
  %44 = load ptr, ptr %3, align 8
  %45 = load ptr, ptr %43, align 8
  %46 = tail call i8 %5(ptr align 1 %6, ptr align 1 %44, ptr align 1 %45) #18
  %47 = icmp eq i8 %46, 1
  %.sroa.speculated32 = select i1 %47, ptr %.5, ptr %.5128
  %48 = load i64, ptr %43, align 8
  store i64 %48, ptr %.sroa.speculated32, align 8
  %49 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 8
  %.6129 = select i1 %47, ptr %.5128, ptr %49
  %.6 = select i1 %47, ptr %49, ptr %.5
  %50 = getelementptr inbounds i8, ptr %.01352, i64 48
  %51 = load ptr, ptr %3, align 8
  %52 = load ptr, ptr %50, align 8
  %53 = tail call i8 %5(ptr align 1 %6, ptr align 1 %51, ptr align 1 %52) #18
  %54 = icmp eq i8 %53, 1
  %.sroa.speculated23 = select i1 %54, ptr %.6, ptr %.6129
  %55 = load i64, ptr %50, align 8
  store i64 %55, ptr %.sroa.speculated23, align 8
  %56 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 8
  %.7130 = select i1 %54, ptr %.6129, ptr %56
  %.7 = select i1 %54, ptr %56, ptr %.6
  %57 = getelementptr inbounds i8, ptr %.01352, i64 56
  %58 = load ptr, ptr %3, align 8
  %59 = load ptr, ptr %57, align 8
  %60 = tail call i8 %5(ptr align 1 %6, ptr align 1 %58, ptr align 1 %59) #18
  %61 = icmp eq i8 %60, 1
  %.sroa.speculated14 = select i1 %61, ptr %.7, ptr %.7130
  %62 = load i64, ptr %57, align 8
  store i64 %62, ptr %.sroa.speculated14, align 8
  %63 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 8
  %.8131 = select i1 %61, ptr %.7130, ptr %63
  %.8 = select i1 %61, ptr %63, ptr %.7
  %64 = getelementptr inbounds i8, ptr %.01352, i64 64
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %7
  %.0135.lcssa = phi ptr [ %2, %7 ], [ %64, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %7 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %7 ], [ %.8, %.cont81 ]
  %65 = and i64 %4, 7
  %.not14 = icmp eq i64 %65, 0
  br i1 %.not14, label %._crit_edge11, label %.cont.preheader

.cont.preheader:                                  ; preds = %._crit_edge
  br label %.cont

.cont:                                            ; preds = %.cont, %.cont.preheader
  %.910 = phi ptr [ %..9, %.cont ], [ %.0.lcssa, %.cont.preheader ]
  %.91329 = phi ptr [ %.9132., %.cont ], [ %.0123.lcssa, %.cont.preheader ]
  %.01348 = phi i64 [ %73, %.cont ], [ 0, %.cont.preheader ]
  %66 = shl nuw nsw i64 %.01348, 3
  %uglygep = getelementptr i8, ptr %.0135.lcssa, i64 %66
  %67 = load ptr, ptr %3, align 8
  %68 = load ptr, ptr %uglygep, align 8
  %69 = tail call i8 %5(ptr align 1 %6, ptr align 1 %67, ptr align 1 %68) #18
  %70 = icmp eq i8 %69, 1
  %.sroa.speculated = select i1 %70, ptr %.910, ptr %.91329
  %71 = load i64, ptr %uglygep, align 8
  store i64 %71, ptr %.sroa.speculated, align 8
  %72 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %.9132. = select i1 %70, ptr %.91329, ptr %72
  %..9 = select i1 %70, ptr %72, ptr %.910
  %73 = add nuw nsw i64 %.01348, 1
  %exitcond15.not = icmp eq i64 %65, %73
  br i1 %exitcond15.not, label %._crit_edge11, label %.cont

._crit_edge11:                                    ; preds = %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ]
  %74 = ptrtoint ptr %.9.lcssa to i64
  %75 = ptrtoint ptr %0 to i64
  %76 = sub nuw i64 %74, %75
  %77 = lshr i64 %76, 3
  %78 = ptrtoint ptr %.9132.lcssa to i64
  %79 = ptrtoint ptr %1 to i64
  %80 = sub nuw i64 %78, %79
  %81 = lshr i64 %80, 3
  %82 = and i64 %76, -8
  %83 = getelementptr inbounds i8, ptr %0, i64 %82
  %84 = and i64 %80, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %83, ptr nonnull align 1 %1, i64 %84, i1 false)
  %85 = lshr i64 %76, 7
  %86 = icmp ule i64 %81, %85
  %87 = icmp ult i64 %76, 776
  %88 = or i1 %87, %86
  br i1 %88, label %89, label %96

common.ret:                                       ; preds = %92
  ret void

89:                                               ; preds = %._crit_edge11
  %90 = icmp ult i64 %76, 768
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call fastcc void @sort.tail_swap__anon_14501(ptr nonnull align 1 %0, i64 %77, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret void

92:                                               ; preds = %89
  %93 = tail call fastcc i1 @sort.quad_swap__anon_14502(ptr nonnull align 1 %0, i64 %77, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %93, label %94, label %common.ret

94:                                               ; preds = %92
  %95 = tail call fastcc i64 @sort.quad_merge__anon_14503(ptr nonnull align 1 %0, i64 %77, ptr nonnull align 1 %1, i64 %77, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  tail call fastcc void @sort.rotate_merge__anon_14504(ptr nonnull align 1 %0, i64 %77, ptr nonnull align 1 %1, i64 %77, i64 %95, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret void

96:                                               ; preds = %._crit_edge11
  tail call fastcc void @sort.flux_partition__anon_14516(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %77, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16471(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8, ptr nocapture nonnull readonly align 1 %9) unnamed_addr #4 {
  %11 = sub i64 0, %7
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %10
  %12 = phi ptr [ %27, %16 ], [ %.pre, %10 ]
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds i8, ptr %12, i64 %11
  tail call void %9(ptr align 1 %6, i64 1) #18
  %15 = tail call i8 %5(ptr align 1 %6, ptr align 1 %13, ptr align 1 %14) #18
  %.not = icmp eq i8 %15, 1
  br i1 %.not, label %33, label %16

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %17, ptr align 1 %18) #18
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %11
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 %11
  store ptr %22, ptr %4, align 8
  %23 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %23, ptr align 1 %22) #18
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %11
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 %11
  store ptr %27, ptr %4, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %3, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add nuw i64 %30, %7
  %32 = icmp ult i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %2, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %11
  %36 = load ptr, ptr %4, align 8
  tail call void %9(ptr align 1 %6, i64 1) #18
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %36) #18
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %common.ret

common.ret:                                       ; preds = %39, %33, %16
  %common.ret.op = phi i1 [ false, %33 ], [ true, %39 ], [ true, %16 ]
  ret i1 %common.ret.op

39:                                               ; preds = %33
  %40 = load ptr, ptr %0, align 8
  %41 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %40, ptr align 1 %41) #18
  %42 = load ptr, ptr %0, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %11
  store ptr %43, ptr %0, align 8
  %44 = load ptr, ptr %2, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 %11
  store ptr %45, ptr %2, align 8
  %46 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %46, ptr align 1 %45) #18
  %47 = load ptr, ptr %0, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %11
  store ptr %48, ptr %0, align 8
  %49 = load ptr, ptr %2, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 %11
  store ptr %50, ptr %2, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = load ptr, ptr %1, align 8
  %53 = ptrtoint ptr %52 to i64
  %54 = add nuw i64 %53, %7
  %55 = icmp ult i64 %54, %51
  br i1 %55, label %56, label %common.ret

56:                                               ; preds = %39
  %57 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16544(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret i1 %57
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.trinity_rotation(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull align 1 %2, i64 %3, i64 %4, i64 %5, ptr nocapture nonnull readonly align 1 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 8
  %9 = sub nuw i64 %1, %4
  %spec.store.select = tail call i64 @llvm.umin.i64(i64 %3, i64 65536)
  %10 = icmp ugt i64 %9, %4
  br i1 %10, label %11, label %13

.loopexit:                                        ; preds = %.lr.ph, %200, %._crit_edge214, %101, %98, %._crit_edge246
  ret void

11:                                               ; preds = %7
  %.not192 = icmp ult i64 %spec.store.select, %4
  %12 = mul i64 %5, %4
  br i1 %.not192, label %36, label %15

13:                                               ; preds = %7
  %14 = icmp ult i64 %9, %4
  br i1 %14, label %100, label %101

15:                                               ; preds = %11
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %12, i1 false)
  %16 = mul nuw i64 %9, %5
  %17 = getelementptr i8, ptr %0, i64 %12
  %.not.i = icmp eq i64 %16, 0
  br i1 %.not.i, label %mem.copyForwards__anon_9915.exit, label %iter.check338

iter.check338:                                    ; preds = %15
  %min.iters.check336 = icmp ult i64 %16, 8
  %18 = add i64 %12, 31
  %diff.check334 = icmp ult i64 %18, 32
  %or.cond = select i1 %min.iters.check336, i1 true, i1 %diff.check334
  br i1 %or.cond, label %.lr.ph.i.preheader, label %vector.main.loop.iter.check340

vector.main.loop.iter.check340:                   ; preds = %iter.check338
  %min.iters.check339 = icmp ult i64 %16, 32
  br i1 %min.iters.check339, label %vec.epilog.ph353, label %vector.ph341

vector.ph341:                                     ; preds = %vector.main.loop.iter.check340
  %n.vec343 = and i64 %16, -32
  %uglygep453 = getelementptr i8, ptr %0, i64 16
  br label %vector.body345

vector.body345:                                   ; preds = %vector.body345, %vector.ph341
  %lsr.iv459 = phi i64 [ %lsr.iv.next460, %vector.body345 ], [ %n.vec343, %vector.ph341 ]
  %lsr.iv454 = phi ptr [ %uglygep455, %vector.body345 ], [ %uglygep453, %vector.ph341 ]
  %uglygep456 = getelementptr i8, ptr %lsr.iv454, i64 -16
  %uglygep457 = getelementptr i8, ptr %lsr.iv454, i64 %12
  %uglygep458 = getelementptr i8, ptr %uglygep457, i64 -16
  %wide.load347 = load <16 x i8>, ptr %uglygep458, align 1
  %wide.load348 = load <16 x i8>, ptr %uglygep457, align 1
  store <16 x i8> %wide.load347, ptr %uglygep456, align 1
  store <16 x i8> %wide.load348, ptr %lsr.iv454, align 1
  %uglygep455 = getelementptr i8, ptr %lsr.iv454, i64 32
  %lsr.iv.next460 = add i64 %lsr.iv459, -32
  %19 = icmp eq i64 %lsr.iv.next460, 0
  br i1 %19, label %middle.block335, label %vector.body345, !llvm.loop !553

middle.block335:                                  ; preds = %vector.body345
  %cmp.n344 = icmp eq i64 %16, %n.vec343
  br i1 %cmp.n344, label %mem.copyForwards__anon_9915.exit, label %vec.epilog.iter.check352

vec.epilog.iter.check352:                         ; preds = %middle.block335
  %n.vec.remaining354 = and i64 %16, 24
  %min.epilog.iters.check355 = icmp eq i64 %n.vec.remaining354, 0
  br i1 %min.epilog.iters.check355, label %.lr.ph.i.preheader, label %vec.epilog.ph353

vec.epilog.ph353:                                 ; preds = %vec.epilog.iter.check352, %vector.main.loop.iter.check340
  %vec.epilog.resume.val356 = phi i64 [ %n.vec343, %vec.epilog.iter.check352 ], [ 0, %vector.main.loop.iter.check340 ]
  %n.vec358 = and i64 %16, -8
  %uglygep447 = getelementptr i8, ptr %0, i64 %vec.epilog.resume.val356
  %20 = sub i64 %vec.epilog.resume.val356, %n.vec358
  br label %vec.epilog.vector.body361

vec.epilog.vector.body361:                        ; preds = %vec.epilog.vector.body361, %vec.epilog.ph353
  %lsr.iv451 = phi i64 [ %lsr.iv.next452, %vec.epilog.vector.body361 ], [ %20, %vec.epilog.ph353 ]
  %lsr.iv448 = phi ptr [ %uglygep449, %vec.epilog.vector.body361 ], [ %uglygep447, %vec.epilog.ph353 ]
  %uglygep450 = getelementptr i8, ptr %lsr.iv448, i64 %12
  %wide.load363 = load <8 x i8>, ptr %uglygep450, align 1
  store <8 x i8> %wide.load363, ptr %lsr.iv448, align 1
  %uglygep449 = getelementptr i8, ptr %lsr.iv448, i64 8
  %lsr.iv.next452 = add i64 %lsr.iv451, 8
  %21 = icmp eq i64 %lsr.iv.next452, 0
  br i1 %21, label %vec.epilog.middle.block350, label %vec.epilog.vector.body361, !llvm.loop !554

vec.epilog.middle.block350:                       ; preds = %vec.epilog.vector.body361
  %cmp.n360 = icmp eq i64 %16, %n.vec358
  br i1 %cmp.n360, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %vec.epilog.middle.block350, %vec.epilog.iter.check352, %iter.check338
  %.03.i.ph = phi i64 [ 0, %iter.check338 ], [ %n.vec343, %vec.epilog.iter.check352 ], [ %n.vec358, %vec.epilog.middle.block350 ]
  %22 = xor i64 %.03.i.ph, -1
  %23 = add i64 %16, %22
  %xtraiter376 = and i64 %16, 3
  %lcmp.mod377.not = icmp eq i64 %xtraiter376, 0
  br i1 %lcmp.mod377.not, label %.lr.ph.i.prol.loopexit, label %.lr.ph.i.prol.preheader

.lr.ph.i.prol.preheader:                          ; preds = %.lr.ph.i.preheader
  br label %.lr.ph.i.prol

.lr.ph.i.prol:                                    ; preds = %.lr.ph.i.prol, %.lr.ph.i.prol.preheader
  %lsr.iv445 = phi i64 [ %xtraiter376, %.lr.ph.i.prol.preheader ], [ %lsr.iv.next446, %.lr.ph.i.prol ]
  %.03.i.prol = phi i64 [ %27, %.lr.ph.i.prol ], [ %.03.i.ph, %.lr.ph.i.prol.preheader ]
  %24 = getelementptr inbounds i8, ptr %0, i64 %.03.i.prol
  %25 = getelementptr inbounds i8, ptr %17, i64 %.03.i.prol
  %26 = load i8, ptr %25, align 1
  store i8 %26, ptr %24, align 1
  %27 = add nuw i64 %.03.i.prol, 1
  %lsr.iv.next446 = add nsw i64 %lsr.iv445, -1
  %prol.iter378.cmp.not = icmp eq i64 %lsr.iv.next446, 0
  br i1 %prol.iter378.cmp.not, label %.lr.ph.i.prol.loopexit, label %.lr.ph.i.prol, !llvm.loop !555

.lr.ph.i.prol.loopexit:                           ; preds = %.lr.ph.i.prol, %.lr.ph.i.preheader
  %.03.i.unr = phi i64 [ %.03.i.ph, %.lr.ph.i.preheader ], [ %27, %.lr.ph.i.prol ]
  %28 = icmp ult i64 %23, 3
  br i1 %28, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i.preheader390

.lr.ph.i.preheader390:                            ; preds = %.lr.ph.i.prol.loopexit
  %29 = add i64 %12, 3
  %uglygep429 = getelementptr i8, ptr %0, i64 %29
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader390
  %.03.i = phi i64 [ %34, %.lr.ph.i ], [ %.03.i.unr, %.lr.ph.i.preheader390 ]
  %uglygep435 = getelementptr i8, ptr %uglygep429, i64 %.03.i
  %uglygep436 = getelementptr i8, ptr %uglygep435, i64 -3
  %30 = load i8, ptr %uglygep436, align 1
  %sunkaddr = getelementptr i8, ptr %0, i64 %.03.i
  store i8 %30, ptr %sunkaddr, align 1
  %uglygep433 = getelementptr i8, ptr %uglygep429, i64 %.03.i
  %uglygep434 = getelementptr i8, ptr %uglygep433, i64 -2
  %31 = load i8, ptr %uglygep434, align 1
  %sunkaddr533 = getelementptr i8, ptr %0, i64 %.03.i
  %sunkaddr534 = getelementptr i8, ptr %sunkaddr533, i64 1
  store i8 %31, ptr %sunkaddr534, align 1
  %uglygep431 = getelementptr i8, ptr %uglygep429, i64 %.03.i
  %uglygep432 = getelementptr i8, ptr %uglygep431, i64 -1
  %32 = load i8, ptr %uglygep432, align 1
  %sunkaddr535 = getelementptr i8, ptr %0, i64 %.03.i
  %sunkaddr536 = getelementptr i8, ptr %sunkaddr535, i64 2
  store i8 %32, ptr %sunkaddr536, align 1
  %uglygep430 = getelementptr i8, ptr %uglygep429, i64 %.03.i
  %33 = load i8, ptr %uglygep430, align 1
  %sunkaddr537 = getelementptr i8, ptr %0, i64 %.03.i
  %sunkaddr538 = getelementptr i8, ptr %sunkaddr537, i64 3
  store i8 %33, ptr %sunkaddr538, align 1
  %34 = add nuw i64 %.03.i, 4
  %exitcond.not.i.3 = icmp eq i64 %16, %34
  br i1 %exitcond.not.i.3, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i, !llvm.loop !556

mem.copyForwards__anon_9915.exit:                 ; preds = %.lr.ph.i, %.lr.ph.i.prol.loopexit, %vec.epilog.middle.block350, %middle.block335, %15
  %35 = getelementptr inbounds i8, ptr %0, i64 %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %35, ptr nonnull align 1 %2, i64 %12, i1 false)
  ret void

36:                                               ; preds = %11
  %37 = getelementptr inbounds i8, ptr %0, i64 %12
  %38 = sub nuw i64 %9, %4
  %39 = icmp ule i64 %38, %spec.store.select
  %40 = icmp ugt i64 %38, 3
  %41 = and i1 %39, %40
  br i1 %41, label %.lr.ph259.preheader, label %50

.lr.ph259.preheader:                              ; preds = %36
  %42 = mul nuw i64 %38, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %37, i64 %42, i1 false)
  %43 = sub i64 0, %5
  %44 = add i64 %4, -1
  %45 = mul i64 %5, %44
  %uglygep394 = getelementptr i8, ptr %0, i64 %45
  %46 = add i64 %1, -1
  %47 = sub i64 %46, %4
  %48 = mul i64 %5, %47
  %uglygep396 = getelementptr i8, ptr %0, i64 %48
  %49 = mul i64 %5, %46
  %uglygep399 = getelementptr i8, ptr %0, i64 %49
  br label %.lr.ph259

50:                                               ; preds = %36
  %51 = mul nuw i64 %9, %5
  %52 = getelementptr inbounds i8, ptr %37, i64 %51
  %.not265 = icmp ult i64 %4, 2
  br i1 %.not265, label %._crit_edge236, label %.lr.ph235

.lr.ph235:                                        ; preds = %50
  %53 = lshr i64 %4, 1
  %54 = sub i64 0, %5
  %55 = add i64 %4, -1
  %56 = mul i64 %5, %55
  %uglygep419 = getelementptr i8, ptr %0, i64 %56
  %57 = add i64 %1, -1
  %58 = mul i64 %5, %57
  %uglygep424 = getelementptr i8, ptr %0, i64 %58
  br label %59

.lr.ph259:                                        ; preds = %.lr.ph259, %.lr.ph259.preheader
  %lsr.iv402 = phi i64 [ %4, %.lr.ph259.preheader ], [ %lsr.iv.next, %.lr.ph259 ]
  %lsr.iv400 = phi ptr [ %uglygep399, %.lr.ph259.preheader ], [ %uglygep401, %.lr.ph259 ]
  %lsr.iv397 = phi ptr [ %uglygep396, %.lr.ph259.preheader ], [ %uglygep398, %.lr.ph259 ]
  %lsr.iv = phi ptr [ %uglygep394, %.lr.ph259.preheader ], [ %uglygep395, %.lr.ph259 ]
  tail call void %6(ptr align 1 %lsr.iv397, ptr align 1 %lsr.iv400) #18
  tail call void %6(ptr align 1 %lsr.iv400, ptr align 1 %lsr.iv) #18
  %uglygep395 = getelementptr i8, ptr %lsr.iv, i64 %43
  %uglygep398 = getelementptr i8, ptr %lsr.iv397, i64 %43
  %uglygep401 = getelementptr i8, ptr %lsr.iv400, i64 %43
  %lsr.iv.next = add i64 %lsr.iv402, -1
  %exitcond292.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond292.not, label %._crit_edge260, label %.lr.ph259

._crit_edge260:                                   ; preds = %.lr.ph259
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %42, i1 false)
  ret void

59:                                               ; preds = %59, %.lr.ph235
  %lsr.iv427 = phi i64 [ %53, %.lr.ph235 ], [ %lsr.iv.next428, %59 ]
  %lsr.iv425 = phi ptr [ %uglygep424, %.lr.ph235 ], [ %uglygep426, %59 ]
  %lsr.iv420 = phi ptr [ %uglygep419, %.lr.ph235 ], [ %uglygep421, %59 ]
  %.0162233 = phi ptr [ %0, %.lr.ph235 ], [ %60, %59 ]
  %.0174230 = phi ptr [ %52, %.lr.ph235 ], [ %61, %59 ]
  %uglygep422 = getelementptr i8, ptr %.0162233, i64 %12
  call void %6(ptr nonnull align 1 %8, ptr align 1 %lsr.iv420) #18
  call void %6(ptr align 1 %lsr.iv420, ptr align 1 %.0162233) #18
  call void %6(ptr align 1 %.0162233, ptr align 1 %uglygep422) #18
  %60 = getelementptr inbounds i8, ptr %.0162233, i64 %5
  %61 = getelementptr inbounds i8, ptr %.0174230, i64 %54
  call void %6(ptr align 1 %uglygep422, ptr align 1 %lsr.iv425) #18
  call void %6(ptr align 1 %lsr.iv425, ptr nonnull align 1 %8) #18
  %uglygep421 = getelementptr i8, ptr %lsr.iv420, i64 %54
  %uglygep426 = getelementptr i8, ptr %lsr.iv425, i64 %54
  %lsr.iv.next428 = add nsw i64 %lsr.iv427, -1
  %exitcond287.not = icmp eq i64 %lsr.iv.next428, 0
  br i1 %exitcond287.not, label %._crit_edge236.loopexit, label %59

._crit_edge236.loopexit:                          ; preds = %59
  %uglygep423 = getelementptr i8, ptr %60, i64 %12
  br label %._crit_edge236

._crit_edge236:                                   ; preds = %._crit_edge236.loopexit, %50
  %.0174.lcssa = phi ptr [ %52, %50 ], [ %61, %._crit_edge236.loopexit ]
  %.0172.lcssa = phi ptr [ %37, %50 ], [ %uglygep423, %._crit_edge236.loopexit ]
  %.0162.lcssa = phi ptr [ %0, %50 ], [ %60, %._crit_edge236.loopexit ]
  %62 = ptrtoint ptr %.0174.lcssa to i64
  %63 = ptrtoint ptr %.0172.lcssa to i64
  %64 = sub nuw i64 %62, %63
  %65 = shl nuw i64 %5, 1
  %.not266 = icmp ugt i64 %65, %64
  br i1 %.not266, label %._crit_edge246, label %.lr.ph245

.lr.ph245:                                        ; preds = %._crit_edge236
  %66 = or i64 %64, %65
  %67 = and i64 %66, -4294967296
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %.lr.ph245
  %70 = trunc i64 %65 to i32
  %71 = trunc i64 %64 to i32
  %72 = udiv i32 %71, %70
  %73 = zext i32 %72 to i64
  br label %76

74:                                               ; preds = %.lr.ph245
  %75 = udiv i64 %64, %65
  br label %76

76:                                               ; preds = %74, %69
  %77 = phi i64 [ %73, %69 ], [ %75, %74 ]
  %78 = sub i64 0, %5
  %umax288 = call i64 @llvm.umax.i64(i64 %77, i64 1)
  br label %79

79:                                               ; preds = %79, %76
  %lsr.iv417 = phi i64 [ %umax288, %76 ], [ %lsr.iv.next418, %79 ]
  %lsr.iv414 = phi i64 [ %78, %76 ], [ %lsr.iv.next415, %79 ]
  %lsr.iv408 = phi i64 [ 0, %76 ], [ %lsr.iv.next409, %79 ]
  %uglygep410 = getelementptr i8, ptr %.0162.lcssa, i64 %lsr.iv408
  %uglygep412 = getelementptr i8, ptr %.0172.lcssa, i64 %lsr.iv408
  call void %6(ptr nonnull align 1 %8, ptr align 1 %uglygep412) #18
  %uglygep416 = getelementptr i8, ptr %.0174.lcssa, i64 %lsr.iv414
  call void %6(ptr align 1 %uglygep412, ptr align 1 %uglygep416) #18
  call void %6(ptr align 1 %uglygep416, ptr align 1 %uglygep410) #18
  call void %6(ptr align 1 %uglygep410, ptr nonnull align 1 %8) #18
  %lsr.iv.next409 = add i64 %lsr.iv408, %5
  %lsr.iv.next415 = sub i64 %lsr.iv414, %5
  %lsr.iv.next418 = add i64 %lsr.iv417, -1
  %exitcond289.not = icmp eq i64 %lsr.iv.next418, 0
  br i1 %exitcond289.not, label %._crit_edge246.loopexit, label %79

._crit_edge246.loopexit:                          ; preds = %79
  %80 = ptrtoint ptr %.0174.lcssa to i64
  %81 = sub i64 %80, %lsr.iv.next409
  %uglygep411 = getelementptr i8, ptr %.0162.lcssa, i64 %lsr.iv.next409
  %82 = mul i64 %lsr.iv.next409, -1
  %uglygep413 = getelementptr i8, ptr %.0174.lcssa, i64 %82
  br label %._crit_edge246

._crit_edge246:                                   ; preds = %._crit_edge246.loopexit, %._crit_edge236
  %.pre-phi = phi i64 [ %81, %._crit_edge246.loopexit ], [ %62, %._crit_edge236 ]
  %.1175.lcssa = phi ptr [ %uglygep413, %._crit_edge246.loopexit ], [ %.0174.lcssa, %._crit_edge236 ]
  %.1163.lcssa = phi ptr [ %uglygep411, %._crit_edge246.loopexit ], [ %.0162.lcssa, %._crit_edge236 ]
  %83 = ptrtoint ptr %.1163.lcssa to i64
  %84 = sub nuw i64 %.pre-phi, %83
  %.not267 = icmp ugt i64 %65, %84
  br i1 %.not267, label %.loopexit, label %.lr.ph253

.lr.ph253:                                        ; preds = %._crit_edge246
  %85 = or i64 %84, %65
  %86 = and i64 %85, -4294967296
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %93

88:                                               ; preds = %.lr.ph253
  %89 = trunc i64 %65 to i32
  %90 = trunc i64 %84 to i32
  %91 = udiv i32 %90, %89
  %92 = zext i32 %91 to i64
  br label %95

93:                                               ; preds = %.lr.ph253
  %94 = udiv i64 %84, %65
  br label %95

95:                                               ; preds = %93, %88
  %96 = phi i64 [ %92, %88 ], [ %94, %93 ]
  %97 = sub i64 0, %5
  %umax290 = call i64 @llvm.umax.i64(i64 %96, i64 1)
  %uglygep403 = getelementptr i8, ptr %.1175.lcssa, i64 %97
  br label %98

98:                                               ; preds = %98, %95
  %lsr.iv406 = phi i64 [ %umax290, %95 ], [ %lsr.iv.next407, %98 ]
  %lsr.iv404 = phi ptr [ %uglygep403, %95 ], [ %uglygep405, %98 ]
  %.2164251 = phi ptr [ %.1163.lcssa, %95 ], [ %99, %98 ]
  call void %6(ptr nonnull align 1 %8, ptr align 1 %.2164251) #18
  call void %6(ptr align 1 %.2164251, ptr align 1 %lsr.iv404) #18
  %99 = getelementptr inbounds i8, ptr %.2164251, i64 %5
  call void %6(ptr align 1 %lsr.iv404, ptr nonnull align 1 %8) #18
  %uglygep405 = getelementptr i8, ptr %lsr.iv404, i64 %97
  %lsr.iv.next407 = add i64 %lsr.iv406, -1
  %exitcond291.not = icmp eq i64 %lsr.iv.next407, 0
  br i1 %exitcond291.not, label %.loopexit, label %98

100:                                              ; preds = %13
  %.not = icmp ugt i64 %9, %spec.store.select
  br i1 %.not, label %140, label %103

101:                                              ; preds = %13
  %.not261 = icmp eq i64 %4, 0
  br i1 %.not261, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %101
  %102 = mul i64 %5, %4
  br label %.lr.ph

103:                                              ; preds = %100
  %104 = mul i64 %9, %5
  %105 = mul nuw i64 %5, %4
  %106 = getelementptr inbounds i8, ptr %0, i64 %105
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %106, i64 %104, i1 false)
  %.not6.i = icmp eq i64 %105, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9817.exit, label %iter.check

iter.check:                                       ; preds = %103
  %min.iters.check = icmp ult i64 %105, 4
  br i1 %min.iters.check, label %.lr.ph.i194.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %107 = add i64 %105, -1
  %108 = mul i64 %5, %1
  %109 = add i64 %108, -1
  %uglygep = getelementptr i8, ptr %0, i64 %109
  %110 = sub i64 1, %105
  %111 = getelementptr i8, ptr %uglygep, i64 %110
  %112 = icmp ugt ptr %111, %uglygep
  %uglygep317 = getelementptr i8, ptr %0, i64 %107
  %113 = icmp ult ptr %uglygep317, %0
  %114 = or i1 %112, %113
  br i1 %114, label %.lr.ph.i194.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %115 = ptrtoint ptr %0 to i64
  %116 = add i64 %105, %115
  %117 = mul i64 %5, %1
  %118 = add i64 %117, %115
  %119 = sub i64 %116, %118
  %diff.check = icmp ult i64 %119, 16
  br i1 %diff.check, label %.lr.ph.i194.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check321 = icmp ult i64 %105, 16
  br i1 %min.iters.check321, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %105, -16
  %120 = add i64 %117, -16
  %uglygep524 = getelementptr i8, ptr %0, i64 %120
  %121 = add i64 %105, -16
  %uglygep528 = getelementptr i8, ptr %0, i64 %121
  %122 = lshr i64 %105, 4
  %123 = mul i64 %122, -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv525 = phi i64 [ %lsr.iv.next526, %vector.body ], [ 0, %vector.ph ]
  %uglygep529 = getelementptr i8, ptr %uglygep528, i64 %lsr.iv525
  %wide.load = load <16 x i8>, ptr %uglygep529, align 1
  %uglygep527 = getelementptr i8, ptr %uglygep524, i64 %lsr.iv525
  store <16 x i8> %wide.load, ptr %uglygep527, align 1
  %lsr.iv.next526 = add i64 %lsr.iv525, -16
  %124 = icmp eq i64 %123, %lsr.iv.next526
  br i1 %124, label %middle.block, label %vector.body, !llvm.loop !557

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %105, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end325 = and i64 %105, 15
  %n.vec.remaining = and i64 %105, 12
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i194.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec324 = and i64 %105, -4
  %ind.end = and i64 %105, 3
  %125 = add i64 %117, -4
  %uglygep518 = getelementptr i8, ptr %0, i64 %125
  %126 = sub i64 0, %vec.epilog.resume.val
  %127 = add i64 %105, -4
  %uglygep522 = getelementptr i8, ptr %0, i64 %127
  %128 = lshr i64 %105, 2
  %129 = mul i64 %128, -4
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv519 = phi i64 [ %lsr.iv.next520, %vec.epilog.vector.body ], [ %126, %vec.epilog.ph ]
  %uglygep523 = getelementptr i8, ptr %uglygep522, i64 %lsr.iv519
  %wide.load329 = load <4 x i8>, ptr %uglygep523, align 1
  %uglygep521 = getelementptr i8, ptr %uglygep518, i64 %lsr.iv519
  store <4 x i8> %wide.load329, ptr %uglygep521, align 1
  %lsr.iv.next520 = add i64 %lsr.iv519, -4
  %130 = icmp eq i64 %129, %lsr.iv.next520
  br i1 %130, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !558

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n326 = icmp eq i64 %105, %n.vec324
  br i1 %cmp.n326, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i194.preheader

.lr.ph.i194.preheader:                            ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %105, %iter.check ], [ %105, %vector.memcheck ], [ %105, %vector.scevcheck ], [ %ind.end325, %vec.epilog.iter.check ], [ %ind.end, %vec.epilog.middle.block ]
  %131 = add i64 %.07.i.ph, -1
  %xtraiter = and i64 %.07.i.ph, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.lr.ph.i194.prol.loopexit, label %.lr.ph.i194.prol.preheader

.lr.ph.i194.prol.preheader:                       ; preds = %.lr.ph.i194.preheader
  %uglygep512 = getelementptr i8, ptr %0, i64 -1
  %uglygep514 = getelementptr i8, ptr %uglygep512, i64 %104
  br label %.lr.ph.i194.prol

.lr.ph.i194.prol:                                 ; preds = %.lr.ph.i194.prol, %.lr.ph.i194.prol.preheader
  %lsr.iv516 = phi i64 [ %xtraiter, %.lr.ph.i194.prol.preheader ], [ %lsr.iv.next517, %.lr.ph.i194.prol ]
  %.07.i.prol = phi i64 [ %132, %.lr.ph.i194.prol ], [ %.07.i.ph, %.lr.ph.i194.prol.preheader ]
  %132 = add i64 %.07.i.prol, -1
  %uglygep515 = getelementptr i8, ptr %uglygep514, i64 %.07.i.prol
  %uglygep513 = getelementptr i8, ptr %uglygep512, i64 %.07.i.prol
  %133 = load i8, ptr %uglygep513, align 1
  store i8 %133, ptr %uglygep515, align 1
  %lsr.iv.next517 = add nsw i64 %lsr.iv516, -1
  %prol.iter.cmp.not = icmp eq i64 %lsr.iv.next517, 0
  br i1 %prol.iter.cmp.not, label %.lr.ph.i194.prol.loopexit, label %.lr.ph.i194.prol, !llvm.loop !559

.lr.ph.i194.prol.loopexit:                        ; preds = %.lr.ph.i194.prol, %.lr.ph.i194.preheader
  %.07.i.unr = phi i64 [ %.07.i.ph, %.lr.ph.i194.preheader ], [ %132, %.lr.ph.i194.prol ]
  %134 = icmp ult i64 %131, 3
  br i1 %134, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i194.preheader392

.lr.ph.i194.preheader392:                         ; preds = %.lr.ph.i194.prol.loopexit
  %uglygep496 = getelementptr i8, ptr %0, i64 -1
  %uglygep504 = getelementptr i8, ptr %uglygep496, i64 %104
  br label %.lr.ph.i194

.lr.ph.i194:                                      ; preds = %.lr.ph.i194, %.lr.ph.i194.preheader392
  %.07.i = phi i64 [ %138, %.lr.ph.i194 ], [ %.07.i.unr, %.lr.ph.i194.preheader392 ]
  %uglygep511 = getelementptr i8, ptr %uglygep504, i64 %.07.i
  %uglygep503 = getelementptr i8, ptr %uglygep496, i64 %.07.i
  %135 = load i8, ptr %uglygep503, align 1
  store i8 %135, ptr %uglygep511, align 1
  %uglygep509 = getelementptr i8, ptr %uglygep504, i64 %.07.i
  %uglygep510 = getelementptr i8, ptr %uglygep509, i64 -1
  %uglygep501 = getelementptr i8, ptr %uglygep496, i64 %.07.i
  %uglygep502 = getelementptr i8, ptr %uglygep501, i64 -1
  %136 = load i8, ptr %uglygep502, align 1
  store i8 %136, ptr %uglygep510, align 1
  %uglygep507 = getelementptr i8, ptr %uglygep504, i64 %.07.i
  %uglygep508 = getelementptr i8, ptr %uglygep507, i64 -2
  %uglygep499 = getelementptr i8, ptr %uglygep496, i64 %.07.i
  %uglygep500 = getelementptr i8, ptr %uglygep499, i64 -2
  %137 = load i8, ptr %uglygep500, align 1
  store i8 %137, ptr %uglygep508, align 1
  %138 = add i64 %.07.i, -4
  %uglygep505 = getelementptr i8, ptr %uglygep504, i64 %.07.i
  %uglygep506 = getelementptr i8, ptr %uglygep505, i64 -3
  %uglygep497 = getelementptr i8, ptr %uglygep496, i64 %.07.i
  %uglygep498 = getelementptr i8, ptr %uglygep497, i64 -3
  %139 = load i8, ptr %uglygep498, align 1
  store i8 %139, ptr %uglygep506, align 1
  %.not.i193.3 = icmp eq i64 %138, 0
  br i1 %.not.i193.3, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i194, !llvm.loop !560

mem.copyBackwards__anon_9817.exit:                ; preds = %.lr.ph.i194, %.lr.ph.i194.prol.loopexit, %vec.epilog.middle.block, %middle.block, %103
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %104, i1 false)
  ret void

140:                                              ; preds = %100
  %141 = mul i64 %5, %4
  %142 = getelementptr i8, ptr %0, i64 %141
  %143 = sub nuw i64 %4, %9
  %144 = icmp ule i64 %143, %spec.store.select
  %145 = icmp ugt i64 %143, 3
  %146 = and i1 %144, %145
  %147 = mul i64 %9, %5
  br i1 %146, label %.lr.ph227.preheader, label %151

.lr.ph227.preheader:                              ; preds = %140
  %148 = getelementptr inbounds i8, ptr %0, i64 %147
  %149 = getelementptr inbounds i8, ptr %148, i64 %141
  %150 = mul nuw i64 %143, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %148, i64 %150, i1 false)
  br label %.lr.ph227

151:                                              ; preds = %140
  %152 = getelementptr i8, ptr %142, i64 %147
  %.not262 = icmp ult i64 %9, 2
  br i1 %.not262, label %._crit_edge, label %.lr.ph205

.lr.ph205:                                        ; preds = %151
  %153 = lshr i64 %9, 1
  %154 = sub i64 0, %5
  %155 = add i64 %1, -1
  %156 = mul i64 %5, %155
  %uglygep486 = getelementptr i8, ptr %0, i64 %156
  %157 = add i64 %4, -1
  %158 = mul i64 %5, %157
  %uglygep491 = getelementptr i8, ptr %0, i64 %158
  br label %162

.lr.ph227:                                        ; preds = %.lr.ph227, %.lr.ph227.preheader
  %lsr.iv461 = phi i64 [ %9, %.lr.ph227.preheader ], [ %lsr.iv.next462, %.lr.ph227 ]
  %.0183222 = phi ptr [ %159, %.lr.ph227 ], [ %0, %.lr.ph227.preheader ]
  %uglygep463 = getelementptr i8, ptr %.0183222, i64 %147
  %uglygep464 = getelementptr i8, ptr %.0183222, i64 %141
  tail call void %6(ptr align 1 %uglygep463, ptr align 1 %.0183222) #18
  tail call void %6(ptr align 1 %.0183222, ptr align 1 %uglygep464) #18
  %159 = getelementptr inbounds i8, ptr %.0183222, i64 %5
  %lsr.iv.next462 = add i64 %lsr.iv461, -1
  %exitcond285.not = icmp eq i64 %lsr.iv.next462, 0
  br i1 %exitcond285.not, label %._crit_edge228, label %.lr.ph227

._crit_edge228:                                   ; preds = %.lr.ph227
  %160 = sub i64 0, %150
  %161 = getelementptr inbounds i8, ptr %149, i64 %160
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %161, ptr nonnull align 1 %2, i64 %150, i1 false)
  ret void

162:                                              ; preds = %162, %.lr.ph205
  %lsr.iv492 = phi ptr [ %uglygep491, %.lr.ph205 ], [ %uglygep493, %162 ]
  %lsr.iv487 = phi ptr [ %uglygep486, %.lr.ph205 ], [ %uglygep488, %162 ]
  %lsr.iv483 = phi i64 [ 0, %.lr.ph205 ], [ %lsr.iv.next484, %162 ]
  %lsr.iv481 = phi i64 [ %153, %.lr.ph205 ], [ %lsr.iv.next482, %162 ]
  %uglygep489 = getelementptr i8, ptr %142, i64 %lsr.iv483
  %uglygep494 = getelementptr i8, ptr %0, i64 %lsr.iv483
  call void %6(ptr nonnull align 1 %8, ptr align 1 %lsr.iv492) #18
  call void %6(ptr align 1 %lsr.iv492, ptr align 1 %uglygep494) #18
  call void %6(ptr align 1 %uglygep494, ptr align 1 %uglygep489) #18
  call void %6(ptr align 1 %uglygep489, ptr align 1 %lsr.iv487) #18
  call void %6(ptr align 1 %lsr.iv487, ptr nonnull align 1 %8) #18
  %lsr.iv.next482 = add i64 %lsr.iv481, -1
  %lsr.iv.next484 = add i64 %lsr.iv483, %5
  %uglygep488 = getelementptr i8, ptr %lsr.iv487, i64 %154
  %uglygep493 = getelementptr i8, ptr %lsr.iv492, i64 %154
  %exitcond279.not = icmp eq i64 %lsr.iv.next482, 0
  br i1 %exitcond279.not, label %._crit_edge.loopexit, label %162

._crit_edge.loopexit:                             ; preds = %162
  %163 = mul i64 %lsr.iv.next484, -1
  %uglygep485 = getelementptr i8, ptr %152, i64 %163
  %uglygep490 = getelementptr i8, ptr %142, i64 %163
  %uglygep495 = getelementptr i8, ptr %0, i64 %lsr.iv.next484
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %151
  %.1184.lcssa = phi ptr [ %0, %151 ], [ %uglygep495, %._crit_edge.loopexit ]
  %.1181.lcssa = phi ptr [ %142, %151 ], [ %uglygep490, %._crit_edge.loopexit ]
  %.0160.lcssa = phi ptr [ %152, %151 ], [ %uglygep485, %._crit_edge.loopexit ]
  %164 = ptrtoint ptr %.1181.lcssa to i64
  %165 = ptrtoint ptr %.1184.lcssa to i64
  %166 = sub nuw i64 %164, %165
  %167 = shl nuw i64 %5, 1
  %.not263 = icmp ugt i64 %167, %166
  br i1 %.not263, label %._crit_edge214, label %.lr.ph213

.lr.ph213:                                        ; preds = %._crit_edge
  %168 = or i64 %166, %167
  %169 = and i64 %168, -4294967296
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %176

171:                                              ; preds = %.lr.ph213
  %172 = trunc i64 %167 to i32
  %173 = trunc i64 %166 to i32
  %174 = udiv i32 %173, %172
  %175 = zext i32 %174 to i64
  br label %178

176:                                              ; preds = %.lr.ph213
  %177 = udiv i64 %166, %167
  br label %178

178:                                              ; preds = %176, %171
  %179 = phi i64 [ %175, %171 ], [ %177, %176 ]
  %180 = sub i64 0, %5
  %umax280 = call i64 @llvm.umax.i64(i64 %179, i64 1)
  br label %181

181:                                              ; preds = %181, %178
  %lsr.iv475 = phi i64 [ %180, %178 ], [ %lsr.iv.next476, %181 ]
  %lsr.iv472 = phi i64 [ 0, %178 ], [ %lsr.iv.next473, %181 ]
  %lsr.iv470 = phi i64 [ %umax280, %178 ], [ %lsr.iv.next471, %181 ]
  %uglygep479 = getelementptr i8, ptr %.1184.lcssa, i64 %lsr.iv472
  %uglygep478 = getelementptr i8, ptr %.1181.lcssa, i64 %lsr.iv475
  call void %6(ptr nonnull align 1 %8, ptr align 1 %uglygep478) #18
  call void %6(ptr align 1 %uglygep478, ptr align 1 %uglygep479) #18
  %uglygep477 = getelementptr i8, ptr %.0160.lcssa, i64 %lsr.iv475
  call void %6(ptr align 1 %uglygep479, ptr align 1 %uglygep477) #18
  call void %6(ptr align 1 %uglygep477, ptr nonnull align 1 %8) #18
  %lsr.iv.next471 = add i64 %lsr.iv470, -1
  %lsr.iv.next473 = add i64 %lsr.iv472, %5
  %lsr.iv.next476 = sub i64 %lsr.iv475, %5
  %exitcond281.not = icmp eq i64 %lsr.iv.next471, 0
  br i1 %exitcond281.not, label %._crit_edge214.loopexit, label %181

._crit_edge214.loopexit:                          ; preds = %181
  %182 = ptrtoint ptr %.1184.lcssa to i64
  %183 = add i64 %182, %lsr.iv.next473
  %184 = mul i64 %lsr.iv.next473, -1
  %uglygep474 = getelementptr i8, ptr %.0160.lcssa, i64 %184
  %uglygep480 = getelementptr i8, ptr %.1184.lcssa, i64 %lsr.iv.next473
  br label %._crit_edge214

._crit_edge214:                                   ; preds = %._crit_edge214.loopexit, %._crit_edge
  %.pre-phi294 = phi i64 [ %183, %._crit_edge214.loopexit ], [ %165, %._crit_edge ]
  %.2185.lcssa = phi ptr [ %uglygep480, %._crit_edge214.loopexit ], [ %.1184.lcssa, %._crit_edge ]
  %.1.lcssa = phi ptr [ %uglygep474, %._crit_edge214.loopexit ], [ %.0160.lcssa, %._crit_edge ]
  %185 = ptrtoint ptr %.1.lcssa to i64
  %186 = sub nuw i64 %185, %.pre-phi294
  %.not264 = icmp ugt i64 %167, %186
  br i1 %.not264, label %.loopexit, label %.lr.ph221

.lr.ph221:                                        ; preds = %._crit_edge214
  %187 = or i64 %186, %167
  %188 = and i64 %187, -4294967296
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %195

190:                                              ; preds = %.lr.ph221
  %191 = trunc i64 %167 to i32
  %192 = trunc i64 %186 to i32
  %193 = udiv i32 %192, %191
  %194 = zext i32 %193 to i64
  br label %197

195:                                              ; preds = %.lr.ph221
  %196 = udiv i64 %186, %167
  br label %197

197:                                              ; preds = %195, %190
  %198 = phi i64 [ %194, %190 ], [ %196, %195 ]
  %199 = sub i64 0, %5
  %umax282 = call i64 @llvm.umax.i64(i64 %198, i64 1)
  %uglygep467 = getelementptr i8, ptr %.1.lcssa, i64 %199
  br label %200

200:                                              ; preds = %200, %197
  %lsr.iv468 = phi ptr [ %uglygep467, %197 ], [ %uglygep469, %200 ]
  %lsr.iv465 = phi i64 [ %umax282, %197 ], [ %lsr.iv.next466, %200 ]
  %.3217 = phi ptr [ %.2185.lcssa, %197 ], [ %201, %200 ]
  call void %6(ptr nonnull align 1 %8, ptr align 1 %.3217) #18
  call void %6(ptr align 1 %.3217, ptr align 1 %lsr.iv468) #18
  %201 = getelementptr inbounds i8, ptr %.3217, i64 %5
  call void %6(ptr align 1 %lsr.iv468, ptr nonnull align 1 %8) #18
  %lsr.iv.next466 = add i64 %lsr.iv465, -1
  %uglygep469 = getelementptr i8, ptr %lsr.iv468, i64 %199
  %exitcond283.not = icmp eq i64 %lsr.iv.next466, 0
  br i1 %exitcond283.not, label %.loopexit, label %200

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %lsr.iv530 = phi i64 [ %4, %.lr.ph.preheader ], [ %lsr.iv.next531, %.lr.ph ]
  %.0156197 = phi ptr [ %202, %.lr.ph ], [ %0, %.lr.ph.preheader ]
  %uglygep532 = getelementptr i8, ptr %.0156197, i64 %102
  call void %6(ptr nonnull align 1 %8, ptr align 1 %.0156197) #18
  call void %6(ptr align 1 %.0156197, ptr align 1 %uglygep532) #18
  %202 = getelementptr inbounds i8, ptr %.0156197, i64 %5
  call void %6(ptr align 1 %uglygep532, ptr nonnull align 1 %8) #18
  %lsr.iv.next531 = add i64 %lsr.iv530, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next531, 0
  br i1 %exitcond.not, label %.loopexit, label %.lr.ph
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16473(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8, ptr nocapture nonnull readonly align 1 %9) unnamed_addr #4 {
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = icmp eq i64 %1, %4
  br i1 %16, label %common.ret, label %17

common.ret:                                       ; preds = %.lr.ph19, %.preheader, %17, %10
  ret void

17:                                               ; preds = %10
  %18 = mul nuw i64 %7, %4
  %19 = getelementptr inbounds i8, ptr %0, i64 %18
  store ptr %19, ptr %15, align 8
  %20 = add i64 %1, -1
  %21 = mul nuw i64 %20, %7
  %22 = getelementptr inbounds i8, ptr %0, i64 %21
  store ptr %22, ptr %14, align 8
  tail call void %9(ptr align 1 %6, i64 1) #18
  %23 = sub i64 0, %7
  %24 = getelementptr inbounds i8, ptr %19, i64 %23
  %25 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %24, ptr nonnull align 1 %19) #18
  %.not = icmp eq i8 %25, 1
  br i1 %.not, label %26, label %common.ret

26:                                               ; preds = %17
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %18, i1 false)
  store ptr %2, ptr %13, align 8
  %27 = add i64 %4, -1
  %28 = mul nuw i64 %27, %7
  %29 = getelementptr inbounds i8, ptr %2, i64 %28
  store ptr %29, ptr %12, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = sub nuw i64 %30, %7
  %32 = ptrtoint ptr %22 to i64
  %33 = sub nuw i64 %32, %7
  store ptr %0, ptr %11, align 8
  %34 = ptrtoint ptr %2 to i64
  %35 = icmp ugt i64 %31, %34
  %36 = ptrtoint ptr %19 to i64
  %37 = icmp ugt i64 %33, %36
  %38 = select i1 %35, i1 %37, i1 false
  br i1 %38, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %26
  %39 = shl nuw i64 %7, 1
  br label %46

._crit_edge.loopexit:                             ; preds = %48
  %40 = getelementptr inbounds i8, ptr %57, i64 %7
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %26
  %41 = phi ptr [ %19, %26 ], [ %.pre26.pre, %.._crit_edge.loopexit_crit_edge ], [ %66, %._crit_edge.loopexit ]
  %42 = phi ptr [ %2, %26 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %63, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %26 ], [ %.promoted.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %40, %._crit_edge.loopexit ]
  %43 = icmp ule ptr %42, %29
  %44 = icmp ule ptr %41, %22
  %45 = select i1 %43, i1 %44, i1 false
  br i1 %45, label %.lr.ph13.preheader, label %.preheader

.lr.ph13.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph13

46:                                               ; preds = %48, %.lr.ph
  %47 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16545(ptr nonnull align 8 %11, ptr nonnull align 8 %13, ptr nonnull readonly align 8 %12, ptr nonnull align 8 %15, ptr nonnull readonly align 8 %14, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  br i1 %47, label %.._crit_edge.loopexit_crit_edge, label %48

.._crit_edge.loopexit_crit_edge:                  ; preds = %46
  %.promoted.pre.pre = load ptr, ptr %11, align 8
  %.pre.pre = load ptr, ptr %13, align 8
  %.pre26.pre = load ptr, ptr %15, align 8
  br label %._crit_edge

48:                                               ; preds = %46
  tail call void %9(ptr align 1 %6, i64 2) #18
  %49 = load ptr, ptr %13, align 8
  %50 = load ptr, ptr %15, align 8
  %51 = tail call i8 %5(ptr align 1 %6, ptr align 1 %49, ptr align 1 %50) #18
  %.not9 = icmp eq i8 %51, 1
  %. = select i1 %.not9, i64 0, i64 %7
  %.1 = select i1 %.not9, i64 %7, i64 0
  %52 = load ptr, ptr %11, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 %.
  tail call void %8(ptr align 1 %53, ptr align 1 %50) #18
  %54 = getelementptr inbounds i8, ptr %50, i64 %7
  store ptr %54, ptr %15, align 8
  %55 = getelementptr inbounds i8, ptr %52, i64 %.1
  tail call void %8(ptr align 1 %55, ptr align 1 %49) #18
  %56 = getelementptr inbounds i8, ptr %49, i64 %7
  store ptr %56, ptr %13, align 8
  %57 = getelementptr inbounds i8, ptr %52, i64 %39
  %58 = tail call i8 %5(ptr align 1 %6, ptr align 1 %56, ptr align 1 %54) #18
  %.not10 = icmp eq i8 %58, 1
  %.2 = select i1 %.not10, ptr %15, ptr %13
  %59 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %57, ptr align 1 %59) #18
  %60 = load ptr, ptr %.2, align 8
  %61 = getelementptr inbounds i8, ptr %60, i64 %7
  store ptr %61, ptr %.2, align 8
  %62 = getelementptr inbounds i8, ptr %57, i64 %7
  store ptr %62, ptr %11, align 8
  %63 = load ptr, ptr %13, align 8
  %64 = ptrtoint ptr %63 to i64
  %65 = icmp ugt i64 %31, %64
  %66 = load ptr, ptr %15, align 8
  %67 = ptrtoint ptr %66 to i64
  %68 = icmp ugt i64 %33, %67
  %69 = select i1 %65, i1 %68, i1 false
  br i1 %69, label %46, label %._crit_edge.loopexit

.preheader:                                       ; preds = %.lr.ph13, %._crit_edge
  %.promoted14 = phi ptr [ %42, %._crit_edge ], [ %78, %.lr.ph13 ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %77, %.lr.ph13 ]
  %.not718 = icmp ugt ptr %.promoted14, %29
  br i1 %.not718, label %common.ret, label %.lr.ph19.preheader

.lr.ph19.preheader:                               ; preds = %.preheader
  br label %.lr.ph19

.lr.ph13:                                         ; preds = %.lr.ph13, %.lr.ph13.preheader
  %70 = phi ptr [ %80, %.lr.ph13 ], [ %41, %.lr.ph13.preheader ]
  %71 = phi ptr [ %78, %.lr.ph13 ], [ %42, %.lr.ph13.preheader ]
  %72 = phi ptr [ %77, %.lr.ph13 ], [ %.promoted, %.lr.ph13.preheader ]
  tail call void %9(ptr align 1 %6, i64 1) #18
  %73 = tail call i8 %5(ptr align 1 %6, ptr align 1 %71, ptr align 1 %70) #18
  %.not8 = icmp eq i8 %73, 1
  %.3 = select i1 %.not8, ptr %15, ptr %13
  %74 = load ptr, ptr %.3, align 8
  tail call void %8(ptr align 1 %72, ptr align 1 %74) #18
  %75 = load ptr, ptr %.3, align 8
  %76 = getelementptr inbounds i8, ptr %75, i64 %7
  store ptr %76, ptr %.3, align 8
  %77 = getelementptr inbounds i8, ptr %72, i64 %7
  %78 = load ptr, ptr %13, align 8
  %79 = icmp ule ptr %78, %29
  %80 = load ptr, ptr %15, align 8
  %81 = icmp ule ptr %80, %22
  %82 = select i1 %79, i1 %81, i1 false
  br i1 %82, label %.lr.ph13, label %.preheader

.lr.ph19:                                         ; preds = %.lr.ph19, %.lr.ph19.preheader
  %83 = phi ptr [ %86, %.lr.ph19 ], [ %.promoted14, %.lr.ph19.preheader ]
  %84 = phi ptr [ %85, %.lr.ph19 ], [ %.lcssa, %.lr.ph19.preheader ]
  tail call void %8(ptr align 1 %84, ptr align 1 %83) #18
  %85 = getelementptr inbounds i8, ptr %84, i64 %7
  %86 = getelementptr inbounds i8, ptr %83, i64 %7
  %.not7 = icmp ugt ptr %86, %29
  br i1 %.not7, label %common.ret, label %.lr.ph19
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16482(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = sub i64 0, %7
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %9
  %11 = phi ptr [ %26, %15 ], [ %.pre, %9 ]
  %12 = load ptr, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %11, i64 %10
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %32, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %16, ptr align 1 %17) #18
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %10
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %10
  store ptr %21, ptr %4, align 8
  %22 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %22, ptr align 1 %21) #18
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 %10
  store ptr %24, ptr %0, align 8
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %10
  store ptr %26, ptr %4, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = load ptr, ptr %3, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = add nuw i64 %29, %7
  %31 = icmp ult i64 %30, %27
  br i1 %31, label %tailrecurse, label %common.ret

32:                                               ; preds = %tailrecurse
  %33 = load ptr, ptr %2, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 %10
  %35 = load ptr, ptr %4, align 8
  %36 = tail call i8 %5(ptr align 1 %6, ptr align 1 %34, ptr align 1 %35) #18
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %common.ret

common.ret:                                       ; preds = %38, %32, %15
  %common.ret.op = phi i1 [ false, %32 ], [ true, %38 ], [ true, %15 ]
  ret i1 %common.ret.op

38:                                               ; preds = %32
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #18
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %10
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %2, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %10
  store ptr %44, ptr %2, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #18
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %10
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %10
  store ptr %49, ptr %2, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %1, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = add nuw i64 %52, %7
  %54 = icmp ult i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16548(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16484(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = icmp eq i64 %1, %4
  br i1 %15, label %common.ret, label %16

common.ret:                                       ; preds = %.lr.ph19, %.preheader, %16, %9
  ret void

16:                                               ; preds = %9
  %17 = mul nuw i64 %7, %4
  %18 = getelementptr inbounds i8, ptr %0, i64 %17
  store ptr %18, ptr %14, align 8
  %19 = add i64 %1, -1
  %20 = mul nuw i64 %19, %7
  %21 = getelementptr inbounds i8, ptr %0, i64 %20
  store ptr %21, ptr %13, align 8
  %22 = sub i64 0, %7
  %23 = getelementptr inbounds i8, ptr %18, i64 %22
  %24 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %23, ptr nonnull align 1 %18) #18
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %17, i1 false)
  store ptr %2, ptr %12, align 8
  %26 = add i64 %4, -1
  %27 = mul nuw i64 %26, %7
  %28 = getelementptr inbounds i8, ptr %2, i64 %27
  store ptr %28, ptr %11, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = sub nuw i64 %29, %7
  %31 = ptrtoint ptr %21 to i64
  %32 = sub nuw i64 %31, %7
  store ptr %0, ptr %10, align 8
  %33 = ptrtoint ptr %2 to i64
  %34 = icmp ugt i64 %30, %33
  %35 = ptrtoint ptr %18 to i64
  %36 = icmp ugt i64 %32, %35
  %37 = select i1 %34, i1 %36, i1 false
  br i1 %37, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %25
  %38 = shl nuw i64 %7, 1
  br label %45

._crit_edge.loopexit:                             ; preds = %47
  %39 = getelementptr inbounds i8, ptr %56, i64 %7
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %25
  %40 = phi ptr [ %18, %25 ], [ %.pre26.pre, %.._crit_edge.loopexit_crit_edge ], [ %65, %._crit_edge.loopexit ]
  %41 = phi ptr [ %2, %25 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %62, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %25 ], [ %.promoted.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %39, %._crit_edge.loopexit ]
  %42 = icmp ule ptr %41, %28
  %43 = icmp ule ptr %40, %21
  %44 = select i1 %42, i1 %43, i1 false
  br i1 %44, label %.lr.ph13.preheader, label %.preheader

.lr.ph13.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph13

45:                                               ; preds = %47, %.lr.ph
  %46 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16549(ptr nonnull align 8 %10, ptr nonnull align 8 %12, ptr nonnull readonly align 8 %11, ptr nonnull align 8 %14, ptr nonnull readonly align 8 %13, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  br i1 %46, label %.._crit_edge.loopexit_crit_edge, label %47

.._crit_edge.loopexit_crit_edge:                  ; preds = %45
  %.promoted.pre.pre = load ptr, ptr %10, align 8
  %.pre.pre = load ptr, ptr %12, align 8
  %.pre26.pre = load ptr, ptr %14, align 8
  br label %._crit_edge

47:                                               ; preds = %45
  %48 = load ptr, ptr %12, align 8
  %49 = load ptr, ptr %14, align 8
  %50 = tail call i8 %5(ptr align 1 %6, ptr align 1 %48, ptr align 1 %49) #18
  %.not9 = icmp eq i8 %50, 1
  %. = select i1 %.not9, i64 0, i64 %7
  %.1 = select i1 %.not9, i64 %7, i64 0
  %51 = load ptr, ptr %10, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 %.
  tail call void %8(ptr align 1 %52, ptr align 1 %49) #18
  %53 = getelementptr inbounds i8, ptr %49, i64 %7
  store ptr %53, ptr %14, align 8
  %54 = getelementptr inbounds i8, ptr %51, i64 %.1
  tail call void %8(ptr align 1 %54, ptr align 1 %48) #18
  %55 = getelementptr inbounds i8, ptr %48, i64 %7
  store ptr %55, ptr %12, align 8
  %56 = getelementptr inbounds i8, ptr %51, i64 %38
  %57 = tail call i8 %5(ptr align 1 %6, ptr align 1 %55, ptr align 1 %53) #18
  %.not10 = icmp eq i8 %57, 1
  %.2 = select i1 %.not10, ptr %14, ptr %12
  %58 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %56, ptr align 1 %58) #18
  %59 = load ptr, ptr %.2, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 %7
  store ptr %60, ptr %.2, align 8
  %61 = getelementptr inbounds i8, ptr %56, i64 %7
  store ptr %61, ptr %10, align 8
  %62 = load ptr, ptr %12, align 8
  %63 = ptrtoint ptr %62 to i64
  %64 = icmp ugt i64 %30, %63
  %65 = load ptr, ptr %14, align 8
  %66 = ptrtoint ptr %65 to i64
  %67 = icmp ugt i64 %32, %66
  %68 = select i1 %64, i1 %67, i1 false
  br i1 %68, label %45, label %._crit_edge.loopexit

.preheader:                                       ; preds = %.lr.ph13, %._crit_edge
  %.promoted14 = phi ptr [ %41, %._crit_edge ], [ %77, %.lr.ph13 ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %76, %.lr.ph13 ]
  %.not718 = icmp ugt ptr %.promoted14, %28
  br i1 %.not718, label %common.ret, label %.lr.ph19.preheader

.lr.ph19.preheader:                               ; preds = %.preheader
  br label %.lr.ph19

.lr.ph13:                                         ; preds = %.lr.ph13, %.lr.ph13.preheader
  %69 = phi ptr [ %79, %.lr.ph13 ], [ %40, %.lr.ph13.preheader ]
  %70 = phi ptr [ %77, %.lr.ph13 ], [ %41, %.lr.ph13.preheader ]
  %71 = phi ptr [ %76, %.lr.ph13 ], [ %.promoted, %.lr.ph13.preheader ]
  %72 = tail call i8 %5(ptr align 1 %6, ptr align 1 %70, ptr align 1 %69) #18
  %.not8 = icmp eq i8 %72, 1
  %.3 = select i1 %.not8, ptr %14, ptr %12
  %73 = load ptr, ptr %.3, align 8
  tail call void %8(ptr align 1 %71, ptr align 1 %73) #18
  %74 = load ptr, ptr %.3, align 8
  %75 = getelementptr inbounds i8, ptr %74, i64 %7
  store ptr %75, ptr %.3, align 8
  %76 = getelementptr inbounds i8, ptr %71, i64 %7
  %77 = load ptr, ptr %12, align 8
  %78 = icmp ule ptr %77, %28
  %79 = load ptr, ptr %14, align 8
  %80 = icmp ule ptr %79, %21
  %81 = select i1 %78, i1 %80, i1 false
  br i1 %81, label %.lr.ph13, label %.preheader

.lr.ph19:                                         ; preds = %.lr.ph19, %.lr.ph19.preheader
  %82 = phi ptr [ %85, %.lr.ph19 ], [ %.promoted14, %.lr.ph19.preheader ]
  %83 = phi ptr [ %84, %.lr.ph19 ], [ %.lcssa, %.lr.ph19.preheader ]
  tail call void %8(ptr align 1 %83, ptr align 1 %82) #18
  %84 = getelementptr inbounds i8, ptr %83, i64 %7
  %85 = getelementptr inbounds i8, ptr %82, i64 %7
  %.not7 = icmp ugt ptr %85, %28
  br i1 %.not7, label %common.ret, label %.lr.ph19
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16493(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %8
  %9 = phi ptr [ %28, %15 ], [ %.pre, %8 ]
  %10 = load ptr, ptr %2, align 8
  %11 = getelementptr inbounds i8, ptr %9, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %34, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %4, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 -8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 -8
  store ptr %22, ptr %4, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 -8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %4, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 -8
  store ptr %28, ptr %4, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %3, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add nuw i64 %31, 8
  %33 = icmp ult i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %2, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 -8
  %37 = load ptr, ptr %4, align 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %38 = load ptr, ptr %36, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #18
  %41 = icmp eq i8 %40, 1
  br i1 %41, label %42, label %common.ret

common.ret:                                       ; preds = %42, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %42 ], [ true, %15 ]
  ret i1 %common.ret.op

42:                                               ; preds = %34
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %2, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 -8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 -8
  store ptr %49, ptr %2, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 -8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %2, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 -8
  store ptr %55, ptr %2, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %1, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add nuw i64 %58, 8
  %60 = icmp ult i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16552(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16495(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = icmp eq i64 %1, %4
  br i1 %14, label %common.ret, label %15

common.ret:                                       ; preds = %.lr.ph9, %.preheader, %15, %8
  ret void

15:                                               ; preds = %8
  %16 = shl i64 %4, 3
  %17 = getelementptr inbounds i8, ptr %0, i64 %16
  store ptr %17, ptr %13, align 8
  %18 = shl i64 %1, 3
  %19 = add i64 %18, -8
  %20 = getelementptr inbounds i8, ptr %0, i64 %19
  store ptr %20, ptr %12, align 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %21 = getelementptr inbounds i8, ptr %17, i64 -8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %17, align 8
  %24 = tail call i8 %5(ptr align 1 %6, ptr align 1 %22, ptr align 1 %23) #18
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %15
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %16, i1 false)
  store ptr %2, ptr %11, align 8
  %26 = add i64 %16, -8
  %27 = getelementptr inbounds i8, ptr %2, i64 %26
  store ptr %27, ptr %10, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = add i64 %28, -8
  %30 = ptrtoint ptr %20 to i64
  %31 = add i64 %30, -8
  store ptr %0, ptr %9, align 8
  %32 = ptrtoint ptr %2 to i64
  %33 = icmp ugt i64 %29, %32
  %34 = ptrtoint ptr %17 to i64
  %35 = icmp ugt i64 %31, %34
  %36 = select i1 %33, i1 %35, i1 false
  br i1 %36, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %25
  br label %.lr.ph

._crit_edge.loopexit:                             ; preds = %44
  %37 = getelementptr inbounds i8, ptr %50, i64 24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %25
  %38 = phi ptr [ %17, %25 ], [ %.pre16.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %68, %._crit_edge.loopexit ]
  %39 = phi ptr [ %2, %25 ], [ %.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %65, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %25 ], [ %.promoted.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %37, %._crit_edge.loopexit ]
  %40 = icmp ule ptr %39, %27
  %41 = icmp ule ptr %38, %20
  %42 = select i1 %40, i1 %41, i1 false
  br i1 %42, label %.lr.ph3.preheader, label %.preheader

.lr.ph3.preheader:                                ; preds = %._crit_edge
  br label %.lr.ph3

.lr.ph:                                           ; preds = %44, %.lr.ph.preheader
  %43 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16553(ptr nonnull align 8 %9, ptr nonnull align 8 %11, ptr nonnull readonly align 8 %10, ptr nonnull align 8 %13, ptr nonnull readonly align 8 %12, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  br i1 %43, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %44

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted.pre.pre = load ptr, ptr %9, align 8
  %.pre.pre = load ptr, ptr %11, align 8
  %.pre16.pre = load ptr, ptr %13, align 8
  br label %._crit_edge

44:                                               ; preds = %.lr.ph
  tail call void %7(ptr align 1 %6, i64 2) #18
  %45 = load ptr, ptr %11, align 8
  %46 = load ptr, ptr %13, align 8
  %47 = load ptr, ptr %45, align 8
  %48 = load ptr, ptr %46, align 8
  %49 = tail call i8 %5(ptr align 1 %6, ptr align 1 %47, ptr align 1 %48) #18
  %.not9 = icmp eq i8 %49, 1
  %. = select i1 %.not9, i64 0, i64 8
  %.1 = select i1 %.not9, i64 8, i64 0
  %50 = load ptr, ptr %9, align 8
  %51 = getelementptr inbounds i8, ptr %50, i64 %.
  %52 = load i64, ptr %46, align 8
  store i64 %52, ptr %51, align 8
  %53 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %53, ptr %13, align 8
  %54 = getelementptr inbounds i8, ptr %50, i64 %.1
  %55 = load i64, ptr %45, align 8
  store i64 %55, ptr %54, align 8
  %56 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %56, ptr %11, align 8
  %57 = getelementptr inbounds i8, ptr %50, i64 16
  %58 = load ptr, ptr %56, align 8
  %59 = load ptr, ptr %53, align 8
  %60 = tail call i8 %5(ptr align 1 %6, ptr align 1 %58, ptr align 1 %59) #18
  %.not10 = icmp eq i8 %60, 1
  %.2 = select i1 %.not10, ptr %13, ptr %11
  %61 = load ptr, ptr %.2, align 8
  %62 = load i64, ptr %61, align 8
  store i64 %62, ptr %57, align 8
  %63 = getelementptr inbounds i8, ptr %61, i64 8
  store ptr %63, ptr %.2, align 8
  %64 = getelementptr inbounds i8, ptr %50, i64 24
  store ptr %64, ptr %9, align 8
  %65 = load ptr, ptr %11, align 8
  %66 = ptrtoint ptr %65 to i64
  %67 = icmp ugt i64 %29, %66
  %68 = load ptr, ptr %13, align 8
  %69 = ptrtoint ptr %68 to i64
  %70 = icmp ugt i64 %31, %69
  %71 = select i1 %67, i1 %70, i1 false
  br i1 %71, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %.lr.ph3, %._crit_edge
  %.promoted4 = phi ptr [ %39, %._crit_edge ], [ %82, %.lr.ph3 ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %81, %.lr.ph3 ]
  store ptr %.lcssa, ptr %9, align 8
  %.not78 = icmp ugt ptr %.promoted4, %27
  br i1 %.not78, label %common.ret, label %.lr.ph9.preheader

.lr.ph9.preheader:                                ; preds = %.preheader
  br label %.lr.ph9

.lr.ph3:                                          ; preds = %.lr.ph3, %.lr.ph3.preheader
  %72 = phi ptr [ %84, %.lr.ph3 ], [ %38, %.lr.ph3.preheader ]
  %73 = phi ptr [ %82, %.lr.ph3 ], [ %39, %.lr.ph3.preheader ]
  %74 = phi ptr [ %81, %.lr.ph3 ], [ %.promoted, %.lr.ph3.preheader ]
  tail call void %7(ptr align 1 %6, i64 1) #18
  %75 = load ptr, ptr %73, align 8
  %76 = load ptr, ptr %72, align 8
  %77 = tail call i8 %5(ptr align 1 %6, ptr align 1 %75, ptr align 1 %76) #18
  %.not8 = icmp eq i8 %77, 1
  %.3 = select i1 %.not8, ptr %13, ptr %11
  %78 = load ptr, ptr %.3, align 8
  %79 = load i64, ptr %78, align 8
  store i64 %79, ptr %74, align 8
  %80 = getelementptr inbounds i8, ptr %78, i64 8
  store ptr %80, ptr %.3, align 8
  %81 = getelementptr inbounds i8, ptr %74, i64 8
  %82 = load ptr, ptr %11, align 8
  %83 = icmp ule ptr %82, %27
  %84 = load ptr, ptr %13, align 8
  %85 = icmp ule ptr %84, %20
  %86 = select i1 %83, i1 %85, i1 false
  br i1 %86, label %.lr.ph3, label %.preheader

.lr.ph9:                                          ; preds = %.lr.ph9, %.lr.ph9.preheader
  %87 = phi ptr [ %91, %.lr.ph9 ], [ %.promoted4, %.lr.ph9.preheader ]
  %88 = phi ptr [ %90, %.lr.ph9 ], [ %.lcssa, %.lr.ph9.preheader ]
  %89 = load i64, ptr %87, align 8
  store i64 %89, ptr %88, align 8
  %90 = getelementptr inbounds i8, ptr %88, i64 8
  %91 = getelementptr inbounds i8, ptr %87, i64 8
  %.not7 = icmp ugt ptr %91, %27
  br i1 %.not7, label %common.ret, label %.lr.ph9
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16504(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %14, %7
  %8 = phi ptr [ %27, %14 ], [ %.pre, %7 ]
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr inbounds i8, ptr %8, i64 -8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #18
  %.not = icmp eq i8 %13, 1
  br i1 %.not, label %33, label %14

14:                                               ; preds = %tailrecurse
  %15 = load ptr, ptr %0, align 8
  %16 = load ptr, ptr %4, align 8
  %17 = load i64, ptr %16, align 8
  store i64 %17, ptr %15, align 8
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 -8
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 -8
  store ptr %21, ptr %4, align 8
  %22 = load ptr, ptr %0, align 8
  %23 = load i64, ptr %21, align 8
  store i64 %23, ptr %22, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 -8
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 -8
  store ptr %27, ptr %4, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %3, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add nuw i64 %30, 8
  %32 = icmp ult i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %2, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 -8
  %36 = load ptr, ptr %4, align 8
  %37 = load ptr, ptr %35, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = tail call i8 %5(ptr align 1 %6, ptr align 1 %37, ptr align 1 %38) #18
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %common.ret

common.ret:                                       ; preds = %41, %33, %14
  %common.ret.op = phi i1 [ false, %33 ], [ true, %41 ], [ true, %14 ]
  ret i1 %common.ret.op

41:                                               ; preds = %33
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %2, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 -8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %2, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 -8
  store ptr %48, ptr %2, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 -8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %2, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 -8
  store ptr %54, ptr %2, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %1, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add nuw i64 %57, 8
  %59 = icmp ult i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16556(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16506(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = icmp eq i64 %1, %4
  br i1 %13, label %common.ret, label %14

common.ret:                                       ; preds = %.lr.ph9, %.preheader, %14, %7
  ret void

14:                                               ; preds = %7
  %15 = shl nuw i64 %4, 3
  %16 = getelementptr inbounds i8, ptr %0, i64 %15
  store ptr %16, ptr %12, align 8
  %17 = shl i64 %1, 3
  %18 = add i64 %17, -8
  %19 = getelementptr inbounds i8, ptr %0, i64 %18
  store ptr %19, ptr %11, align 8
  %20 = getelementptr inbounds i8, ptr %16, i64 -8
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr %16, align 8
  %23 = tail call i8 %5(ptr align 1 %6, ptr align 1 %21, ptr align 1 %22) #18
  %.not = icmp eq i8 %23, 1
  br i1 %.not, label %24, label %common.ret

24:                                               ; preds = %14
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %15, i1 false)
  store ptr %2, ptr %10, align 8
  %25 = add i64 %15, -8
  %26 = getelementptr inbounds i8, ptr %2, i64 %25
  store ptr %26, ptr %9, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = add i64 %27, -8
  %29 = ptrtoint ptr %19 to i64
  %30 = add i64 %29, -8
  store ptr %0, ptr %8, align 8
  %31 = ptrtoint ptr %2 to i64
  %32 = icmp ugt i64 %28, %31
  %33 = ptrtoint ptr %16 to i64
  %34 = icmp ugt i64 %30, %33
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %24
  br label %.lr.ph

._crit_edge.loopexit:                             ; preds = %43
  %36 = getelementptr inbounds i8, ptr %49, i64 24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %24
  %37 = phi ptr [ %16, %24 ], [ %.pre16.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %67, %._crit_edge.loopexit ]
  %38 = phi ptr [ %2, %24 ], [ %.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %64, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %24 ], [ %.promoted.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %36, %._crit_edge.loopexit ]
  %39 = icmp ule ptr %38, %26
  %40 = icmp ule ptr %37, %19
  %41 = select i1 %39, i1 %40, i1 false
  br i1 %41, label %.lr.ph3.preheader, label %.preheader

.lr.ph3.preheader:                                ; preds = %._crit_edge
  br label %.lr.ph3

.lr.ph:                                           ; preds = %43, %.lr.ph.preheader
  %42 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16557(ptr nonnull align 8 %8, ptr nonnull align 8 %10, ptr nonnull readonly align 8 %9, ptr nonnull align 8 %12, ptr nonnull readonly align 8 %11, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  br i1 %42, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %43

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted.pre.pre = load ptr, ptr %8, align 8
  %.pre.pre = load ptr, ptr %10, align 8
  %.pre16.pre = load ptr, ptr %12, align 8
  br label %._crit_edge

43:                                               ; preds = %.lr.ph
  %44 = load ptr, ptr %10, align 8
  %45 = load ptr, ptr %12, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = load ptr, ptr %45, align 8
  %48 = tail call i8 %5(ptr align 1 %6, ptr align 1 %46, ptr align 1 %47) #18
  %.not9 = icmp eq i8 %48, 1
  %. = select i1 %.not9, i64 0, i64 8
  %.1 = select i1 %.not9, i64 8, i64 0
  %49 = load ptr, ptr %8, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 %.
  %51 = load i64, ptr %45, align 8
  store i64 %51, ptr %50, align 8
  %52 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %52, ptr %12, align 8
  %53 = getelementptr inbounds i8, ptr %49, i64 %.1
  %54 = load i64, ptr %44, align 8
  store i64 %54, ptr %53, align 8
  %55 = getelementptr inbounds i8, ptr %44, i64 8
  store ptr %55, ptr %10, align 8
  %56 = getelementptr inbounds i8, ptr %49, i64 16
  %57 = load ptr, ptr %55, align 8
  %58 = load ptr, ptr %52, align 8
  %59 = tail call i8 %5(ptr align 1 %6, ptr align 1 %57, ptr align 1 %58) #18
  %.not10 = icmp eq i8 %59, 1
  %.2 = select i1 %.not10, ptr %12, ptr %10
  %60 = load ptr, ptr %.2, align 8
  %61 = load i64, ptr %60, align 8
  store i64 %61, ptr %56, align 8
  %62 = getelementptr inbounds i8, ptr %60, i64 8
  store ptr %62, ptr %.2, align 8
  %63 = getelementptr inbounds i8, ptr %49, i64 24
  store ptr %63, ptr %8, align 8
  %64 = load ptr, ptr %10, align 8
  %65 = ptrtoint ptr %64 to i64
  %66 = icmp ugt i64 %28, %65
  %67 = load ptr, ptr %12, align 8
  %68 = ptrtoint ptr %67 to i64
  %69 = icmp ugt i64 %30, %68
  %70 = select i1 %66, i1 %69, i1 false
  br i1 %70, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %.lr.ph3, %._crit_edge
  %.promoted4 = phi ptr [ %38, %._crit_edge ], [ %81, %.lr.ph3 ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %80, %.lr.ph3 ]
  store ptr %.lcssa, ptr %8, align 8
  %.not78 = icmp ugt ptr %.promoted4, %26
  br i1 %.not78, label %common.ret, label %.lr.ph9.preheader

.lr.ph9.preheader:                                ; preds = %.preheader
  br label %.lr.ph9

.lr.ph3:                                          ; preds = %.lr.ph3, %.lr.ph3.preheader
  %71 = phi ptr [ %83, %.lr.ph3 ], [ %37, %.lr.ph3.preheader ]
  %72 = phi ptr [ %81, %.lr.ph3 ], [ %38, %.lr.ph3.preheader ]
  %73 = phi ptr [ %80, %.lr.ph3 ], [ %.promoted, %.lr.ph3.preheader ]
  %74 = load ptr, ptr %72, align 8
  %75 = load ptr, ptr %71, align 8
  %76 = tail call i8 %5(ptr align 1 %6, ptr align 1 %74, ptr align 1 %75) #18
  %.not8 = icmp eq i8 %76, 1
  %.3 = select i1 %.not8, ptr %12, ptr %10
  %77 = load ptr, ptr %.3, align 8
  %78 = load i64, ptr %77, align 8
  store i64 %78, ptr %73, align 8
  %79 = getelementptr inbounds i8, ptr %77, i64 8
  store ptr %79, ptr %.3, align 8
  %80 = getelementptr inbounds i8, ptr %73, i64 8
  %81 = load ptr, ptr %10, align 8
  %82 = icmp ule ptr %81, %26
  %83 = load ptr, ptr %12, align 8
  %84 = icmp ule ptr %83, %19
  %85 = select i1 %82, i1 %84, i1 false
  br i1 %85, label %.lr.ph3, label %.preheader

.lr.ph9:                                          ; preds = %.lr.ph9, %.lr.ph9.preheader
  %86 = phi ptr [ %90, %.lr.ph9 ], [ %.promoted4, %.lr.ph9.preheader ]
  %87 = phi ptr [ %89, %.lr.ph9 ], [ %.lcssa, %.lr.ph9.preheader ]
  %88 = load i64, ptr %86, align 8
  store i64 %88, ptr %87, align 8
  %89 = getelementptr inbounds i8, ptr %87, i64 8
  %90 = getelementptr inbounds i8, ptr %86, i64 8
  %.not7 = icmp ugt ptr %90, %26
  br i1 %.not7, label %common.ret, label %.lr.ph9
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16544(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8, ptr nocapture nonnull readonly align 1 %9) unnamed_addr #4 {
  %11 = sub i64 0, %7
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %17, %10
  %12 = phi ptr [ %28, %17 ], [ %.pre, %10 ]
  %13 = getelementptr inbounds i8, ptr %12, i64 %11
  %14 = load ptr, ptr %4, align 8
  tail call void %9(ptr align 1 %6, i64 1) #18
  %15 = tail call i8 %5(ptr align 1 %6, ptr align 1 %13, ptr align 1 %14) #18
  %16 = icmp eq i8 %15, 1
  br i1 %16, label %17, label %34

17:                                               ; preds = %tailrecurse
  %18 = load ptr, ptr %0, align 8
  %19 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %18, ptr align 1 %19) #18
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %11
  store ptr %21, ptr %0, align 8
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 %11
  store ptr %23, ptr %2, align 8
  %24 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %24, ptr align 1 %23) #18
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %11
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 %11
  store ptr %28, ptr %2, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %1, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add nuw i64 %31, %7
  %33 = icmp ult i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %2, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 %11
  tail call void %9(ptr align 1 %6, i64 1) #18
  %38 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %37) #18
  %.not = icmp eq i8 %38, 1
  br i1 %.not, label %common.ret, label %39

common.ret:                                       ; preds = %39, %34, %17
  %common.ret.op = phi i1 [ false, %34 ], [ true, %39 ], [ true, %17 ]
  ret i1 %common.ret.op

39:                                               ; preds = %34
  %40 = load ptr, ptr %0, align 8
  %41 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %40, ptr align 1 %41) #18
  %42 = load ptr, ptr %0, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %11
  store ptr %43, ptr %0, align 8
  %44 = load ptr, ptr %4, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 %11
  store ptr %45, ptr %4, align 8
  %46 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %46, ptr align 1 %45) #18
  %47 = load ptr, ptr %0, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %11
  store ptr %48, ptr %0, align 8
  %49 = load ptr, ptr %4, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 %11
  store ptr %50, ptr %4, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = load ptr, ptr %3, align 8
  %53 = ptrtoint ptr %52 to i64
  %54 = add nuw i64 %53, %7
  %55 = icmp ult i64 %54, %51
  br i1 %55, label %56, label %common.ret

56:                                               ; preds = %39
  %57 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16471(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret i1 %57
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16545(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8, ptr nocapture nonnull readonly align 1 %9) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %10
  %11 = phi ptr [ %27, %16 ], [ %.pre, %10 ]
  %12 = load ptr, ptr %1, align 8
  %13 = getelementptr inbounds i8, ptr %11, i64 %7
  tail call void %9(ptr align 1 %6, i64 1) #18
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %33

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %17, ptr align 1 %18) #18
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %7
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 %7
  store ptr %22, ptr %3, align 8
  %23 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %23, ptr align 1 %22) #18
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %7
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %3, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 %7
  store ptr %27, ptr %3, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %4, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = sub nuw i64 %30, %7
  %32 = icmp ugt i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %1, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %7
  %36 = load ptr, ptr %3, align 8
  tail call void %9(ptr align 1 %6, i64 1) #18
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %36) #18
  %.not = icmp eq i8 %37, 1
  br i1 %.not, label %common.ret, label %38

common.ret:                                       ; preds = %38, %33, %16
  %common.ret.op = phi i1 [ false, %33 ], [ true, %38 ], [ true, %16 ]
  ret i1 %common.ret.op

38:                                               ; preds = %33
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #18
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %7
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %1, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %7
  store ptr %44, ptr %1, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #18
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %7
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %7
  store ptr %49, ptr %1, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %2, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = sub nuw i64 %52, %7
  %54 = icmp ugt i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17006(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16548(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %10 = sub i64 0, %7
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %9
  %11 = phi ptr [ %27, %16 ], [ %.pre, %9 ]
  %12 = getelementptr inbounds i8, ptr %11, i64 %10
  %13 = load ptr, ptr %4, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %33

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %17, ptr align 1 %18) #18
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %10
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 %10
  store ptr %22, ptr %2, align 8
  %23 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %23, ptr align 1 %22) #18
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %10
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %2, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 %10
  store ptr %27, ptr %2, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %1, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add nuw i64 %30, %7
  %32 = icmp ult i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %2, align 8
  %35 = load ptr, ptr %4, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 %10
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %34, ptr align 1 %36) #18
  %.not = icmp eq i8 %37, 1
  br i1 %.not, label %common.ret, label %38

common.ret:                                       ; preds = %38, %33, %16
  %common.ret.op = phi i1 [ false, %33 ], [ true, %38 ], [ true, %16 ]
  ret i1 %common.ret.op

38:                                               ; preds = %33
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #18
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %10
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %4, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %10
  store ptr %44, ptr %4, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #18
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %10
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %4, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %10
  store ptr %49, ptr %4, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %3, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = add nuw i64 %52, %7
  %54 = icmp ult i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16482(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16549(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %9
  %10 = phi ptr [ %26, %15 ], [ %.pre, %9 ]
  %11 = load ptr, ptr %1, align 8
  %12 = getelementptr inbounds i8, ptr %10, i64 %7
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #18
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %32

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %16, ptr align 1 %17) #18
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %7
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %7
  store ptr %21, ptr %3, align 8
  %22 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %22, ptr align 1 %21) #18
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 %7
  store ptr %24, ptr %0, align 8
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %7
  store ptr %26, ptr %3, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = load ptr, ptr %4, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = sub nuw i64 %29, %7
  %31 = icmp ugt i64 %30, %27
  br i1 %31, label %tailrecurse, label %common.ret

32:                                               ; preds = %tailrecurse
  %33 = load ptr, ptr %1, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 %7
  %35 = load ptr, ptr %3, align 8
  %36 = tail call i8 %5(ptr align 1 %6, ptr align 1 %34, ptr align 1 %35) #18
  %.not = icmp eq i8 %36, 1
  br i1 %.not, label %common.ret, label %37

common.ret:                                       ; preds = %37, %32, %15
  %common.ret.op = phi i1 [ false, %32 ], [ true, %37 ], [ true, %15 ]
  ret i1 %common.ret.op

37:                                               ; preds = %32
  %38 = load ptr, ptr %0, align 8
  %39 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %38, ptr align 1 %39) #18
  %40 = load ptr, ptr %0, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 %7
  store ptr %41, ptr %0, align 8
  %42 = load ptr, ptr %1, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %7
  store ptr %43, ptr %1, align 8
  %44 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %44, ptr align 1 %43) #18
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 %7
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %1, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %7
  store ptr %48, ptr %1, align 8
  %49 = ptrtoint ptr %48 to i64
  %50 = load ptr, ptr %2, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = sub nuw i64 %51, %7
  %53 = icmp ugt i64 %52, %49
  br i1 %53, label %54, label %common.ret

54:                                               ; preds = %37
  %55 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17011(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret i1 %55
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16552(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %8
  %9 = phi ptr [ %29, %16 ], [ %.pre, %8 ]
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  %11 = load ptr, ptr %4, align 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %35

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %2, align 8
  %19 = load i64, ptr %18, align 8
  store i64 %19, ptr %17, align 8
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 -8
  store ptr %21, ptr %0, align 8
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 -8
  store ptr %23, ptr %2, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = load i64, ptr %23, align 8
  store i64 %25, ptr %24, align 8
  %26 = load ptr, ptr %0, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 -8
  store ptr %27, ptr %0, align 8
  %28 = load ptr, ptr %2, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 -8
  store ptr %29, ptr %2, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = load ptr, ptr %1, align 8
  %32 = ptrtoint ptr %31 to i64
  %33 = add nuw i64 %32, 8
  %34 = icmp ult i64 %33, %30
  br i1 %34, label %tailrecurse, label %common.ret

35:                                               ; preds = %tailrecurse
  %36 = load ptr, ptr %2, align 8
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds i8, ptr %37, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %39 = load ptr, ptr %36, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = tail call i8 %5(ptr align 1 %6, ptr align 1 %39, ptr align 1 %40) #18
  %.not = icmp eq i8 %41, 1
  br i1 %.not, label %common.ret, label %42

common.ret:                                       ; preds = %42, %35, %16
  %common.ret.op = phi i1 [ false, %35 ], [ true, %42 ], [ true, %16 ]
  ret i1 %common.ret.op

42:                                               ; preds = %35
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %4, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 -8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %4, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 -8
  store ptr %49, ptr %4, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 -8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %4, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 -8
  store ptr %55, ptr %4, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %3, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add nuw i64 %58, 8
  %60 = icmp ult i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16493(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16553(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %8
  %9 = phi ptr [ %29, %16 ], [ %.pre, %8 ]
  %10 = load ptr, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %9, i64 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %35

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %3, align 8
  %19 = load i64, ptr %18, align 8
  store i64 %19, ptr %17, align 8
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 8
  store ptr %21, ptr %0, align 8
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store ptr %23, ptr %3, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = load i64, ptr %23, align 8
  store i64 %25, ptr %24, align 8
  %26 = load ptr, ptr %0, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  store ptr %27, ptr %0, align 8
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store ptr %29, ptr %3, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = load ptr, ptr %4, align 8
  %32 = ptrtoint ptr %31 to i64
  %33 = add i64 %32, -8
  %34 = icmp ugt i64 %33, %30
  br i1 %34, label %tailrecurse, label %common.ret

35:                                               ; preds = %tailrecurse
  %36 = load ptr, ptr %1, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 8
  %38 = load ptr, ptr %3, align 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %39 = load ptr, ptr %37, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = tail call i8 %5(ptr align 1 %6, ptr align 1 %39, ptr align 1 %40) #18
  %.not = icmp eq i8 %41, 1
  br i1 %.not, label %common.ret, label %42

common.ret:                                       ; preds = %42, %35, %16
  %common.ret.op = phi i1 [ false, %35 ], [ true, %42 ], [ true, %16 ]
  ret i1 %common.ret.op

42:                                               ; preds = %35
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %1, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 8
  store ptr %49, ptr %1, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %1, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 8
  store ptr %55, ptr %1, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %2, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add i64 %58, -8
  %60 = icmp ugt i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17016(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16556(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %7
  %8 = phi ptr [ %28, %15 ], [ %.pre, %7 ]
  %9 = getelementptr inbounds i8, ptr %8, i64 -8
  %10 = load ptr, ptr %4, align 8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #18
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %34

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %2, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 -8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 -8
  store ptr %22, ptr %2, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 -8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 -8
  store ptr %28, ptr %2, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %1, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add nuw i64 %31, 8
  %33 = icmp ult i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %2, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 -8
  %38 = load ptr, ptr %35, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #18
  %.not = icmp eq i8 %40, 1
  br i1 %.not, label %common.ret, label %41

common.ret:                                       ; preds = %41, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %41 ], [ true, %15 ]
  ret i1 %common.ret.op

41:                                               ; preds = %34
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %4, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 -8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %4, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 -8
  store ptr %48, ptr %4, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 -8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %4, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 -8
  store ptr %54, ptr %4, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %3, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add nuw i64 %57, 8
  %59 = icmp ult i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16504(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16557(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %7
  %8 = phi ptr [ %28, %15 ], [ %.pre, %7 ]
  %9 = load ptr, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %8, i64 8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #18
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %34

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 8
  store ptr %22, ptr %3, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  store ptr %28, ptr %3, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %4, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add i64 %31, -8
  %33 = icmp ugt i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %1, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  %37 = load ptr, ptr %3, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #18
  %.not = icmp eq i8 %40, 1
  br i1 %.not, label %common.ret, label %41

common.ret:                                       ; preds = %41, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %41 ], [ true, %15 ]
  ret i1 %common.ret.op

41:                                               ; preds = %34
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %1, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %1, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store ptr %48, ptr %1, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %1, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 8
  store ptr %54, ptr %1, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %2, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add i64 %57, -8
  %59 = icmp ugt i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17021(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17006(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8, ptr nocapture nonnull readonly align 1 %9) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %10
  %11 = phi ptr [ %26, %15 ], [ %.pre, %10 ]
  %12 = getelementptr inbounds i8, ptr %11, i64 %7
  %13 = load ptr, ptr %3, align 8
  tail call void %9(ptr align 1 %6, i64 1) #18
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %32, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %16, ptr align 1 %17) #18
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %7
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %1, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %7
  store ptr %21, ptr %1, align 8
  %22 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %22, ptr align 1 %21) #18
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 %7
  store ptr %24, ptr %0, align 8
  %25 = load ptr, ptr %1, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %7
  store ptr %26, ptr %1, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = load ptr, ptr %2, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = sub nuw i64 %29, %7
  %31 = icmp ugt i64 %30, %27
  br i1 %31, label %tailrecurse, label %common.ret

32:                                               ; preds = %tailrecurse
  %33 = load ptr, ptr %1, align 8
  %34 = load ptr, ptr %3, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %7
  tail call void %9(ptr align 1 %6, i64 1) #18
  %36 = tail call i8 %5(ptr align 1 %6, ptr align 1 %33, ptr align 1 %35) #18
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %common.ret

common.ret:                                       ; preds = %38, %32, %15
  %common.ret.op = phi i1 [ false, %32 ], [ true, %38 ], [ true, %15 ]
  ret i1 %common.ret.op

38:                                               ; preds = %32
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #18
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %7
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %3, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %7
  store ptr %44, ptr %3, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #18
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %7
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %3, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %7
  store ptr %49, ptr %3, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %4, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = sub nuw i64 %52, %7
  %54 = icmp ugt i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16545(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8, ptr nonnull readonly align 1 %9)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17011(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 1 %8) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %14, %9
  %10 = phi ptr [ %25, %14 ], [ %.pre, %9 ]
  %11 = getelementptr inbounds i8, ptr %10, i64 %7
  %12 = load ptr, ptr %3, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #18
  %.not = icmp eq i8 %13, 1
  br i1 %.not, label %31, label %14

14:                                               ; preds = %tailrecurse
  %15 = load ptr, ptr %0, align 8
  %16 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %15, ptr align 1 %16) #18
  %17 = load ptr, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 %7
  store ptr %18, ptr %0, align 8
  %19 = load ptr, ptr %1, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %7
  store ptr %20, ptr %1, align 8
  %21 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %21, ptr align 1 %20) #18
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 %7
  store ptr %23, ptr %0, align 8
  %24 = load ptr, ptr %1, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %7
  store ptr %25, ptr %1, align 8
  %26 = ptrtoint ptr %25 to i64
  %27 = load ptr, ptr %2, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = sub nuw i64 %28, %7
  %30 = icmp ugt i64 %29, %26
  br i1 %30, label %tailrecurse, label %common.ret

31:                                               ; preds = %tailrecurse
  %32 = load ptr, ptr %1, align 8
  %33 = load ptr, ptr %3, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 %7
  %35 = tail call i8 %5(ptr align 1 %6, ptr align 1 %32, ptr align 1 %34) #18
  %36 = icmp eq i8 %35, 1
  br i1 %36, label %37, label %common.ret

common.ret:                                       ; preds = %37, %31, %14
  %common.ret.op = phi i1 [ false, %31 ], [ true, %37 ], [ true, %14 ]
  ret i1 %common.ret.op

37:                                               ; preds = %31
  %38 = load ptr, ptr %0, align 8
  %39 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %38, ptr align 1 %39) #18
  %40 = load ptr, ptr %0, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 %7
  store ptr %41, ptr %0, align 8
  %42 = load ptr, ptr %3, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %7
  store ptr %43, ptr %3, align 8
  %44 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %44, ptr align 1 %43) #18
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 %7
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %3, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %7
  store ptr %48, ptr %3, align 8
  %49 = ptrtoint ptr %48 to i64
  %50 = load ptr, ptr %4, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = sub nuw i64 %51, %7
  %53 = icmp ugt i64 %52, %49
  br i1 %53, label %54, label %common.ret

54:                                               ; preds = %37
  %55 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16549(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 1 %8)
  ret i1 %55
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17016(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 1 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %8
  %9 = phi ptr [ %28, %15 ], [ %.pre, %8 ]
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  %11 = load ptr, ptr %3, align 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #18
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %34, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %1, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %1, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 8
  store ptr %22, ptr %1, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %1, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  store ptr %28, ptr %1, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %2, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add i64 %31, -8
  %33 = icmp ugt i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %1, align 8
  %36 = load ptr, ptr %3, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 8
  tail call void %7(ptr align 1 %6, i64 1) #18
  %38 = load ptr, ptr %35, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #18
  %41 = icmp eq i8 %40, 1
  br i1 %41, label %42, label %common.ret

common.ret:                                       ; preds = %42, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %42 ], [ true, %15 ]
  ret i1 %common.ret.op

42:                                               ; preds = %34
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %3, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %3, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 8
  store ptr %49, ptr %3, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %3, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 8
  store ptr %55, ptr %3, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %4, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add i64 %58, -8
  %60 = icmp ugt i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16553(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6, ptr nonnull readonly align 1 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17021(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 1 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %14, %7
  %8 = phi ptr [ %27, %14 ], [ %.pre, %7 ]
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %10 = load ptr, ptr %3, align 8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #18
  %.not = icmp eq i8 %13, 1
  br i1 %.not, label %33, label %14

14:                                               ; preds = %tailrecurse
  %15 = load ptr, ptr %0, align 8
  %16 = load ptr, ptr %1, align 8
  %17 = load i64, ptr %16, align 8
  store i64 %17, ptr %15, align 8
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 8
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %1, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 8
  store ptr %21, ptr %1, align 8
  %22 = load ptr, ptr %0, align 8
  %23 = load i64, ptr %21, align 8
  store i64 %23, ptr %22, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 8
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %1, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  store ptr %27, ptr %1, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %2, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add i64 %30, -8
  %32 = icmp ugt i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %1, align 8
  %35 = load ptr, ptr %3, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  %37 = load ptr, ptr %34, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = tail call i8 %5(ptr align 1 %6, ptr align 1 %37, ptr align 1 %38) #18
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %common.ret

common.ret:                                       ; preds = %41, %33, %14
  %common.ret.op = phi i1 [ false, %33 ], [ true, %41 ], [ true, %14 ]
  ret i1 %common.ret.op

41:                                               ; preds = %33
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %3, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %3, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store ptr %48, ptr %3, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %3, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 8
  store ptr %54, ptr %3, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %4, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add i64 %57, -8
  %59 = icmp ugt i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16557(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 1 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nofree nosync nounwind uwtable
define private fastcc void @sort.trinity_rotation.9(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull align 1 %2, i64 %3, i64 %4, i64 %5) unnamed_addr #12 {
  %7 = sub nuw i64 %1, %4
  %spec.store.select = tail call i64 @llvm.umin.i64(i64 %3, i64 65536)
  %8 = icmp ugt i64 %7, %4
  br i1 %8, label %17, label %19

.loopexit.loopexit.unr-lcssa:                     ; preds = %177, %169
  %.216463.unr = phi ptr [ %.1163.lcssa, %169 ], [ %193, %177 ]
  %.217662.unr = phi ptr [ %.1175.lcssa, %169 ], [ %191, %177 ]
  %lcmp.mod240.not = icmp eq i64 %xtraiter238, 0
  br i1 %lcmp.mod240.not, label %.loopexit, label %.epil.preheader237.preheader

.epil.preheader237.preheader:                     ; preds = %.loopexit.loopexit.unr-lcssa
  %uglygep291 = getelementptr i8, ptr %.217662.unr, i64 %171
  br label %.epil.preheader237

.epil.preheader237:                               ; preds = %.epil.preheader237, %.epil.preheader237.preheader
  %lsr.iv294 = phi i64 [ %xtraiter238, %.epil.preheader237.preheader ], [ %lsr.iv.next295, %.epil.preheader237 ]
  %lsr.iv292 = phi ptr [ %uglygep291, %.epil.preheader237.preheader ], [ %uglygep293, %.epil.preheader237 ]
  %.216463.epil = phi ptr [ %11, %.epil.preheader237 ], [ %.216463.unr, %.epil.preheader237.preheader ]
  %9 = load i64, ptr %.216463.epil, align 8
  %10 = load i64, ptr %lsr.iv292, align 8
  store i64 %10, ptr %.216463.epil, align 8
  %11 = getelementptr inbounds i8, ptr %.216463.epil, i64 %5
  store i64 %9, ptr %lsr.iv292, align 8
  %uglygep293 = getelementptr i8, ptr %lsr.iv292, i64 %171
  %lsr.iv.next295 = add nsw i64 %lsr.iv294, -1
  %epil.iter239.cmp.not = icmp eq i64 %lsr.iv.next295, 0
  br i1 %epil.iter239.cmp.not, label %.loopexit, label %.epil.preheader237, !llvm.loop !561

.loopexit.loopexit181.unr-lcssa:                  ; preds = %387, %379
  %.230.unr = phi ptr [ %.1.lcssa, %379 ], [ %401, %387 ]
  %.329.unr = phi ptr [ %.2185.lcssa, %379 ], [ %403, %387 ]
  %lcmp.mod209.not = icmp eq i64 %xtraiter207, 0
  br i1 %lcmp.mod209.not, label %.loopexit, label %.epil.preheader206.preheader

.epil.preheader206.preheader:                     ; preds = %.loopexit.loopexit181.unr-lcssa
  %uglygep391 = getelementptr i8, ptr %.230.unr, i64 %381
  br label %.epil.preheader206

.epil.preheader206:                               ; preds = %.epil.preheader206, %.epil.preheader206.preheader
  %lsr.iv394 = phi i64 [ %xtraiter207, %.epil.preheader206.preheader ], [ %lsr.iv.next395, %.epil.preheader206 ]
  %lsr.iv392 = phi ptr [ %uglygep391, %.epil.preheader206.preheader ], [ %uglygep393, %.epil.preheader206 ]
  %.329.epil = phi ptr [ %14, %.epil.preheader206 ], [ %.329.unr, %.epil.preheader206.preheader ]
  %12 = load i64, ptr %.329.epil, align 8
  %13 = load i64, ptr %lsr.iv392, align 8
  store i64 %13, ptr %.329.epil, align 8
  %14 = getelementptr inbounds i8, ptr %.329.epil, i64 %5
  store i64 %12, ptr %lsr.iv392, align 8
  %uglygep393 = getelementptr i8, ptr %lsr.iv392, i64 %381
  %lsr.iv.next395 = add nsw i64 %lsr.iv394, -1
  %epil.iter208.cmp.not = icmp eq i64 %lsr.iv.next395, 0
  br i1 %epil.iter208.cmp.not, label %.loopexit, label %.epil.preheader206, !llvm.loop !562

.loopexit.loopexit187.unr-lcssa.loopexit:         ; preds = %.lr.ph
  %uglygep479 = getelementptr i8, ptr %415, i64 %196
  br label %.loopexit.loopexit187.unr-lcssa

.loopexit.loopexit187.unr-lcssa:                  ; preds = %.lr.ph.preheader, %.loopexit.loopexit187.unr-lcssa.loopexit
  %.015510.unr = phi ptr [ %197, %.lr.ph.preheader ], [ %uglygep479, %.loopexit.loopexit187.unr-lcssa.loopexit ]
  %.01569.unr = phi ptr [ %0, %.lr.ph.preheader ], [ %415, %.loopexit.loopexit187.unr-lcssa.loopexit ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %.loopexit, label %.lr.ph.epil.preheader

.lr.ph.epil.preheader:                            ; preds = %.loopexit.loopexit187.unr-lcssa
  br label %.lr.ph.epil

.lr.ph.epil:                                      ; preds = %.lr.ph.epil, %.lr.ph.epil.preheader
  %lsr.iv477 = phi i64 [ %xtraiter, %.lr.ph.epil.preheader ], [ %lsr.iv.next478, %.lr.ph.epil ]
  %lsr.iv473 = phi i64 [ 0, %.lr.ph.epil.preheader ], [ %lsr.iv.next474, %.lr.ph.epil ]
  %uglygep475 = getelementptr i8, ptr %.015510.unr, i64 %lsr.iv473
  %uglygep476 = getelementptr i8, ptr %.01569.unr, i64 %lsr.iv473
  %15 = load i64, ptr %uglygep476, align 8
  %16 = load i64, ptr %uglygep475, align 8
  store i64 %16, ptr %uglygep476, align 8
  store i64 %15, ptr %uglygep475, align 8
  %lsr.iv.next474 = add i64 %lsr.iv473, %5
  %lsr.iv.next478 = add nsw i64 %lsr.iv477, -1
  %epil.iter.cmp.not = icmp eq i64 %lsr.iv.next478, 0
  br i1 %epil.iter.cmp.not, label %.loopexit, label %.lr.ph.epil, !llvm.loop !563

.loopexit:                                        ; preds = %._crit_edge26, %195, %._crit_edge58, %.lr.ph.epil, %.loopexit.loopexit187.unr-lcssa, %.epil.preheader206, %.loopexit.loopexit181.unr-lcssa, %.epil.preheader237, %.loopexit.loopexit.unr-lcssa
  ret void

17:                                               ; preds = %6
  %.not1 = icmp ult i64 %spec.store.select, %4
  %18 = mul i64 %5, %4
  br i1 %.not1, label %42, label %21

19:                                               ; preds = %6
  %20 = icmp ult i64 %7, %4
  br i1 %20, label %194, label %195

21:                                               ; preds = %17
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %18, i1 false)
  %22 = mul nuw i64 %7, %5
  %23 = getelementptr i8, ptr %0, i64 %18
  %.not.i = icmp eq i64 %22, 0
  br i1 %.not.i, label %mem.copyForwards__anon_9915.exit, label %iter.check150

iter.check150:                                    ; preds = %21
  %min.iters.check148 = icmp ult i64 %22, 8
  %24 = add i64 %18, 31
  %diff.check146 = icmp ult i64 %24, 32
  %or.cond = select i1 %min.iters.check148, i1 true, i1 %diff.check146
  br i1 %or.cond, label %.lr.ph.i.preheader, label %vector.main.loop.iter.check152

vector.main.loop.iter.check152:                   ; preds = %iter.check150
  %min.iters.check151 = icmp ult i64 %22, 32
  br i1 %min.iters.check151, label %vec.epilog.ph165, label %vector.ph153

vector.ph153:                                     ; preds = %vector.main.loop.iter.check152
  %n.vec155 = and i64 %22, -32
  %uglygep362 = getelementptr i8, ptr %0, i64 16
  br label %vector.body157

vector.body157:                                   ; preds = %vector.body157, %vector.ph153
  %lsr.iv368 = phi i64 [ %lsr.iv.next369, %vector.body157 ], [ %n.vec155, %vector.ph153 ]
  %lsr.iv363 = phi ptr [ %uglygep364, %vector.body157 ], [ %uglygep362, %vector.ph153 ]
  %uglygep365 = getelementptr i8, ptr %lsr.iv363, i64 -16
  %uglygep366 = getelementptr i8, ptr %lsr.iv363, i64 %18
  %uglygep367 = getelementptr i8, ptr %uglygep366, i64 -16
  %wide.load159 = load <16 x i8>, ptr %uglygep367, align 1
  %wide.load160 = load <16 x i8>, ptr %uglygep366, align 1
  store <16 x i8> %wide.load159, ptr %uglygep365, align 1
  store <16 x i8> %wide.load160, ptr %lsr.iv363, align 1
  %uglygep364 = getelementptr i8, ptr %lsr.iv363, i64 32
  %lsr.iv.next369 = add i64 %lsr.iv368, -32
  %25 = icmp eq i64 %lsr.iv.next369, 0
  br i1 %25, label %middle.block147, label %vector.body157, !llvm.loop !564

middle.block147:                                  ; preds = %vector.body157
  %cmp.n156 = icmp eq i64 %22, %n.vec155
  br i1 %cmp.n156, label %mem.copyForwards__anon_9915.exit, label %vec.epilog.iter.check164

vec.epilog.iter.check164:                         ; preds = %middle.block147
  %n.vec.remaining166 = and i64 %22, 24
  %min.epilog.iters.check167 = icmp eq i64 %n.vec.remaining166, 0
  br i1 %min.epilog.iters.check167, label %.lr.ph.i.preheader, label %vec.epilog.ph165

vec.epilog.ph165:                                 ; preds = %vec.epilog.iter.check164, %vector.main.loop.iter.check152
  %vec.epilog.resume.val168 = phi i64 [ %n.vec155, %vec.epilog.iter.check164 ], [ 0, %vector.main.loop.iter.check152 ]
  %n.vec170 = and i64 %22, -8
  %uglygep356 = getelementptr i8, ptr %0, i64 %vec.epilog.resume.val168
  %26 = sub i64 %vec.epilog.resume.val168, %n.vec170
  br label %vec.epilog.vector.body173

vec.epilog.vector.body173:                        ; preds = %vec.epilog.vector.body173, %vec.epilog.ph165
  %lsr.iv360 = phi i64 [ %lsr.iv.next361, %vec.epilog.vector.body173 ], [ %26, %vec.epilog.ph165 ]
  %lsr.iv357 = phi ptr [ %uglygep358, %vec.epilog.vector.body173 ], [ %uglygep356, %vec.epilog.ph165 ]
  %uglygep359 = getelementptr i8, ptr %lsr.iv357, i64 %18
  %wide.load175 = load <8 x i8>, ptr %uglygep359, align 1
  store <8 x i8> %wide.load175, ptr %lsr.iv357, align 1
  %uglygep358 = getelementptr i8, ptr %lsr.iv357, i64 8
  %lsr.iv.next361 = add i64 %lsr.iv360, 8
  %27 = icmp eq i64 %lsr.iv.next361, 0
  br i1 %27, label %vec.epilog.middle.block162, label %vec.epilog.vector.body173, !llvm.loop !565

vec.epilog.middle.block162:                       ; preds = %vec.epilog.vector.body173
  %cmp.n172 = icmp eq i64 %22, %n.vec170
  br i1 %cmp.n172, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %vec.epilog.middle.block162, %vec.epilog.iter.check164, %iter.check150
  %.03.i.ph = phi i64 [ 0, %iter.check150 ], [ %n.vec155, %vec.epilog.iter.check164 ], [ %n.vec170, %vec.epilog.middle.block162 ]
  %28 = xor i64 %.03.i.ph, -1
  %29 = add i64 %22, %28
  %xtraiter217 = and i64 %22, 3
  %lcmp.mod218.not = icmp eq i64 %xtraiter217, 0
  br i1 %lcmp.mod218.not, label %.lr.ph.i.prol.loopexit, label %.lr.ph.i.prol.preheader

.lr.ph.i.prol.preheader:                          ; preds = %.lr.ph.i.preheader
  br label %.lr.ph.i.prol

.lr.ph.i.prol:                                    ; preds = %.lr.ph.i.prol, %.lr.ph.i.prol.preheader
  %lsr.iv354 = phi i64 [ %xtraiter217, %.lr.ph.i.prol.preheader ], [ %lsr.iv.next355, %.lr.ph.i.prol ]
  %.03.i.prol = phi i64 [ %33, %.lr.ph.i.prol ], [ %.03.i.ph, %.lr.ph.i.prol.preheader ]
  %30 = getelementptr inbounds i8, ptr %0, i64 %.03.i.prol
  %31 = getelementptr inbounds i8, ptr %23, i64 %.03.i.prol
  %32 = load i8, ptr %31, align 1
  store i8 %32, ptr %30, align 1
  %33 = add nuw i64 %.03.i.prol, 1
  %lsr.iv.next355 = add nsw i64 %lsr.iv354, -1
  %prol.iter219.cmp.not = icmp eq i64 %lsr.iv.next355, 0
  br i1 %prol.iter219.cmp.not, label %.lr.ph.i.prol.loopexit, label %.lr.ph.i.prol, !llvm.loop !566

.lr.ph.i.prol.loopexit:                           ; preds = %.lr.ph.i.prol, %.lr.ph.i.preheader
  %.03.i.unr = phi i64 [ %.03.i.ph, %.lr.ph.i.preheader ], [ %33, %.lr.ph.i.prol ]
  %34 = icmp ult i64 %29, 3
  br i1 %34, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i.preheader276

.lr.ph.i.preheader276:                            ; preds = %.lr.ph.i.prol.loopexit
  %35 = add i64 %18, 3
  %uglygep338 = getelementptr i8, ptr %0, i64 %35
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader276
  %.03.i = phi i64 [ %40, %.lr.ph.i ], [ %.03.i.unr, %.lr.ph.i.preheader276 ]
  %uglygep344 = getelementptr i8, ptr %uglygep338, i64 %.03.i
  %uglygep345 = getelementptr i8, ptr %uglygep344, i64 -3
  %36 = load i8, ptr %uglygep345, align 1
  %sunkaddr = getelementptr i8, ptr %0, i64 %.03.i
  store i8 %36, ptr %sunkaddr, align 1
  %uglygep342 = getelementptr i8, ptr %uglygep338, i64 %.03.i
  %uglygep343 = getelementptr i8, ptr %uglygep342, i64 -2
  %37 = load i8, ptr %uglygep343, align 1
  %sunkaddr489 = getelementptr i8, ptr %0, i64 %.03.i
  %sunkaddr490 = getelementptr i8, ptr %sunkaddr489, i64 1
  store i8 %37, ptr %sunkaddr490, align 1
  %uglygep340 = getelementptr i8, ptr %uglygep338, i64 %.03.i
  %uglygep341 = getelementptr i8, ptr %uglygep340, i64 -1
  %38 = load i8, ptr %uglygep341, align 1
  %sunkaddr491 = getelementptr i8, ptr %0, i64 %.03.i
  %sunkaddr492 = getelementptr i8, ptr %sunkaddr491, i64 2
  store i8 %38, ptr %sunkaddr492, align 1
  %uglygep339 = getelementptr i8, ptr %uglygep338, i64 %.03.i
  %39 = load i8, ptr %uglygep339, align 1
  %sunkaddr493 = getelementptr i8, ptr %0, i64 %.03.i
  %sunkaddr494 = getelementptr i8, ptr %sunkaddr493, i64 3
  store i8 %39, ptr %sunkaddr494, align 1
  %40 = add nuw i64 %.03.i, 4
  %exitcond.not.i.3 = icmp eq i64 %22, %40
  br i1 %exitcond.not.i.3, label %mem.copyForwards__anon_9915.exit, label %.lr.ph.i, !llvm.loop !567

mem.copyForwards__anon_9915.exit:                 ; preds = %.lr.ph.i, %.lr.ph.i.prol.loopexit, %vec.epilog.middle.block162, %middle.block147, %21
  %41 = getelementptr inbounds i8, ptr %0, i64 %22
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %41, ptr nonnull align 1 %2, i64 %18, i1 false)
  ret void

42:                                               ; preds = %17
  %43 = getelementptr inbounds i8, ptr %0, i64 %18
  %44 = sub nuw i64 %7, %4
  %45 = icmp ule i64 %44, %spec.store.select
  %46 = icmp ugt i64 %44, 3
  %47 = and i1 %45, %46
  br i1 %47, label %.lr.ph71.preheader, label %67

.lr.ph71.preheader:                               ; preds = %42
  %48 = mul nuw i64 %44, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %43, i64 %48, i1 false)
  %49 = sub i64 0, %5
  %50 = mul i64 %7, %5
  %51 = getelementptr inbounds i8, ptr %0, i64 %50
  %52 = getelementptr inbounds i8, ptr %51, i64 %18
  %53 = icmp eq i64 %4, 1
  br i1 %53, label %._crit_edge72.unr-lcssa, label %.lr.ph71.preheader.new

.lr.ph71.preheader.new:                           ; preds = %.lr.ph71.preheader
  %unroll_iter246 = and i64 %4, -2
  %54 = mul i64 %5, -2
  %55 = add i64 %4, -2
  %56 = mul i64 %5, %55
  %57 = add i64 %4, -1
  %58 = mul i64 %5, %57
  %59 = add i64 %1, -2
  %60 = sub i64 %59, %4
  %61 = mul i64 %5, %60
  %62 = add i64 %1, -1
  %63 = sub i64 %62, %4
  %64 = mul i64 %5, %63
  %65 = mul i64 %5, %59
  %66 = mul i64 %5, %62
  br label %.lr.ph71

67:                                               ; preds = %42
  %68 = mul nuw i64 %7, %5
  %69 = getelementptr inbounds i8, ptr %43, i64 %68
  %.not77 = icmp ult i64 %4, 2
  br i1 %.not77, label %._crit_edge48, label %.lr.ph47

.lr.ph47:                                         ; preds = %67
  %70 = lshr i64 %4, 1
  %71 = sub i64 0, %5
  %72 = icmp eq i64 %70, 1
  br i1 %72, label %._crit_edge48.loopexit.unr-lcssa, label %.lr.ph47.new

.lr.ph47.new:                                     ; preds = %.lr.ph47
  %const488 = bitcast i64 9223372036854775806 to i64
  %unroll_iter227 = and i64 %70, %const488
  %73 = shl i64 %5, 1
  %74 = mul i64 %5, %4
  %75 = sub i64 0, %74
  %76 = add i64 %4, -2
  %77 = mul i64 %5, %76
  %78 = add i64 %4, -1
  %79 = mul i64 %5, %78
  %80 = add i64 %4, 1
  %81 = mul i64 %5, %80
  %82 = mul i64 %5, %1
  %83 = sub i64 0, %82
  %84 = add i64 %1, -2
  %85 = mul i64 %5, %84
  %86 = add i64 %1, -1
  %87 = mul i64 %5, %86
  br label %99

.lr.ph71:                                         ; preds = %.lr.ph71, %.lr.ph71.preheader.new
  %lsr.iv290 = phi i64 [ %lsr.iv.next, %.lr.ph71 ], [ %unroll_iter246, %.lr.ph71.preheader.new ]
  %lsr.iv = phi ptr [ %uglygep280, %.lr.ph71 ], [ %0, %.lr.ph71.preheader.new ]
  %uglygep286 = getelementptr i8, ptr %lsr.iv, i64 %64
  %uglygep289 = getelementptr i8, ptr %lsr.iv, i64 %66
  %88 = load i64, ptr %uglygep289, align 8
  store i64 %88, ptr %uglygep286, align 8
  %uglygep283 = getelementptr i8, ptr %lsr.iv, i64 %58
  %89 = load i64, ptr %uglygep283, align 8
  store i64 %89, ptr %uglygep289, align 8
  %uglygep285 = getelementptr i8, ptr %lsr.iv, i64 %61
  %uglygep288 = getelementptr i8, ptr %lsr.iv, i64 %65
  %90 = load i64, ptr %uglygep288, align 8
  store i64 %90, ptr %uglygep285, align 8
  %uglygep282 = getelementptr i8, ptr %lsr.iv, i64 %56
  %91 = load i64, ptr %uglygep282, align 8
  store i64 %91, ptr %uglygep288, align 8
  %uglygep280 = getelementptr i8, ptr %lsr.iv, i64 %54
  %lsr.iv.next = add i64 %lsr.iv290, -2
  %niter247.ncmp.1 = icmp eq i64 %lsr.iv.next, 0
  br i1 %niter247.ncmp.1, label %._crit_edge72.unr-lcssa.loopexit, label %.lr.ph71

._crit_edge72.unr-lcssa.loopexit:                 ; preds = %.lr.ph71
  %uglygep281 = getelementptr i8, ptr %uglygep280, i64 %18
  %uglygep284 = getelementptr i8, ptr %uglygep280, i64 %50
  %92 = mul i64 %5, %1
  %uglygep287 = getelementptr i8, ptr %uglygep280, i64 %92
  br label %._crit_edge72.unr-lcssa

._crit_edge72.unr-lcssa:                          ; preds = %._crit_edge72.unr-lcssa.loopexit, %.lr.ph71.preheader
  %.016569.unr = phi ptr [ %43, %.lr.ph71.preheader ], [ %uglygep281, %._crit_edge72.unr-lcssa.loopexit ]
  %.016768.unr = phi ptr [ %51, %.lr.ph71.preheader ], [ %uglygep284, %._crit_edge72.unr-lcssa.loopexit ]
  %.016867.unr = phi ptr [ %52, %.lr.ph71.preheader ], [ %uglygep287, %._crit_edge72.unr-lcssa.loopexit ]
  %93 = and i64 %4, 1
  %lcmp.mod245.not = icmp eq i64 %93, 0
  br i1 %lcmp.mod245.not, label %._crit_edge72, label %.lr.ph71.epil

.lr.ph71.epil:                                    ; preds = %._crit_edge72.unr-lcssa
  %94 = getelementptr inbounds i8, ptr %.016768.unr, i64 %49
  %95 = getelementptr inbounds i8, ptr %.016867.unr, i64 %49
  %96 = load i64, ptr %95, align 8
  store i64 %96, ptr %94, align 8
  %97 = getelementptr inbounds i8, ptr %.016569.unr, i64 %49
  %98 = load i64, ptr %97, align 8
  store i64 %98, ptr %95, align 8
  br label %._crit_edge72

._crit_edge72:                                    ; preds = %.lr.ph71.epil, %._crit_edge72.unr-lcssa
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %48, i1 false)
  ret void

99:                                               ; preds = %99, %.lr.ph47.new
  %lsr.iv336 = phi i64 [ %lsr.iv.next337, %99 ], [ %unroll_iter227, %.lr.ph47.new ]
  %lsr.iv333 = phi i64 [ %lsr.iv.next334, %99 ], [ %87, %.lr.ph47.new ]
  %lsr.iv330 = phi i64 [ %lsr.iv.next331, %99 ], [ %85, %.lr.ph47.new ]
  %lsr.iv327 = phi i64 [ %lsr.iv.next328, %99 ], [ %83, %.lr.ph47.new ]
  %lsr.iv323 = phi i64 [ %lsr.iv.next324, %99 ], [ %81, %.lr.ph47.new ]
  %lsr.iv320 = phi i64 [ %lsr.iv.next321, %99 ], [ %18, %.lr.ph47.new ]
  %lsr.iv317 = phi i64 [ %lsr.iv.next318, %99 ], [ %79, %.lr.ph47.new ]
  %lsr.iv314 = phi i64 [ %lsr.iv.next315, %99 ], [ %77, %.lr.ph47.new ]
  %lsr.iv311 = phi i64 [ %lsr.iv.next312, %99 ], [ %75, %.lr.ph47.new ]
  %lsr.iv307 = phi i64 [ %lsr.iv.next308, %99 ], [ %5, %.lr.ph47.new ]
  %lsr.iv304 = phi i64 [ %lsr.iv.next305, %99 ], [ 0, %.lr.ph47.new ]
  %uglygep310 = getelementptr i8, ptr %0, i64 %lsr.iv304
  %uglygep326 = getelementptr i8, ptr %0, i64 %lsr.iv320
  %uglygep319 = getelementptr i8, ptr %0, i64 %lsr.iv317
  %100 = load i64, ptr %uglygep319, align 8
  %101 = load i64, ptr %uglygep310, align 8
  store i64 %101, ptr %uglygep319, align 8
  %102 = load i64, ptr %uglygep326, align 8
  store i64 %102, ptr %uglygep310, align 8
  %uglygep309 = getelementptr i8, ptr %0, i64 %lsr.iv307
  %uglygep335 = getelementptr i8, ptr %0, i64 %lsr.iv333
  %103 = load i64, ptr %uglygep335, align 8
  store i64 %103, ptr %uglygep326, align 8
  %uglygep325 = getelementptr i8, ptr %0, i64 %lsr.iv323
  store i64 %100, ptr %uglygep335, align 8
  %uglygep316 = getelementptr i8, ptr %0, i64 %lsr.iv314
  %104 = load i64, ptr %uglygep316, align 8
  %105 = load i64, ptr %uglygep309, align 8
  store i64 %105, ptr %uglygep316, align 8
  %106 = load i64, ptr %uglygep325, align 8
  store i64 %106, ptr %uglygep309, align 8
  %uglygep332 = getelementptr i8, ptr %0, i64 %lsr.iv330
  %107 = load i64, ptr %uglygep332, align 8
  store i64 %107, ptr %uglygep325, align 8
  store i64 %104, ptr %uglygep332, align 8
  %lsr.iv.next305 = add i64 %lsr.iv304, %73
  %lsr.iv.next308 = add i64 %lsr.iv307, %73
  %lsr.iv.next312 = add i64 %lsr.iv311, %73
  %lsr.iv.next315 = sub i64 %lsr.iv314, %73
  %lsr.iv.next318 = sub i64 %lsr.iv317, %73
  %lsr.iv.next321 = add i64 %lsr.iv320, %73
  %lsr.iv.next324 = add i64 %lsr.iv323, %73
  %lsr.iv.next328 = add i64 %lsr.iv327, %73
  %lsr.iv.next331 = sub i64 %lsr.iv330, %73
  %lsr.iv.next334 = sub i64 %lsr.iv333, %73
  %lsr.iv.next337 = add i64 %lsr.iv336, -2
  %niter228.ncmp.1 = icmp eq i64 %lsr.iv.next337, 0
  br i1 %niter228.ncmp.1, label %._crit_edge48.loopexit.unr-lcssa.loopexit, label %99

._crit_edge48.loopexit.unr-lcssa.loopexit:        ; preds = %99
  %uglygep306 = getelementptr i8, ptr %0, i64 %lsr.iv.next305
  %108 = mul i64 %lsr.iv.next312, -1
  %uglygep313 = getelementptr i8, ptr %0, i64 %108
  %uglygep322 = getelementptr i8, ptr %0, i64 %lsr.iv.next321
  %109 = mul i64 %lsr.iv.next328, -1
  %uglygep329 = getelementptr i8, ptr %0, i64 %109
  br label %._crit_edge48.loopexit.unr-lcssa

._crit_edge48.loopexit.unr-lcssa:                 ; preds = %._crit_edge48.loopexit.unr-lcssa.loopexit, %.lr.ph47
  %.lcssa180.ph = phi ptr [ undef, %.lr.ph47 ], [ %uglygep306, %._crit_edge48.loopexit.unr-lcssa.loopexit ]
  %.lcssa179.ph = phi ptr [ undef, %.lr.ph47 ], [ %uglygep329, %._crit_edge48.loopexit.unr-lcssa.loopexit ]
  %.lcssa178.ph = phi ptr [ undef, %.lr.ph47 ], [ %uglygep322, %._crit_edge48.loopexit.unr-lcssa.loopexit ]
  %.016245.unr = phi ptr [ %0, %.lr.ph47 ], [ %uglygep306, %._crit_edge48.loopexit.unr-lcssa.loopexit ]
  %.116644.unr = phi ptr [ %43, %.lr.ph47 ], [ %uglygep313, %._crit_edge48.loopexit.unr-lcssa.loopexit ]
  %.017243.unr = phi ptr [ %43, %.lr.ph47 ], [ %uglygep322, %._crit_edge48.loopexit.unr-lcssa.loopexit ]
  %.017442.unr = phi ptr [ %69, %.lr.ph47 ], [ %uglygep329, %._crit_edge48.loopexit.unr-lcssa.loopexit ]
  %110 = and i64 %4, 2
  %lcmp.mod223.not = icmp eq i64 %110, 0
  br i1 %lcmp.mod223.not, label %._crit_edge48, label %._crit_edge48.loopexit.epilog-lcssa

._crit_edge48.loopexit.epilog-lcssa:              ; preds = %._crit_edge48.loopexit.unr-lcssa
  %111 = getelementptr inbounds i8, ptr %.116644.unr, i64 %71
  %112 = load i64, ptr %111, align 8
  %113 = load i64, ptr %.016245.unr, align 8
  store i64 %113, ptr %111, align 8
  %114 = load i64, ptr %.017243.unr, align 8
  store i64 %114, ptr %.016245.unr, align 8
  %115 = getelementptr inbounds i8, ptr %.016245.unr, i64 %5
  %116 = getelementptr inbounds i8, ptr %.017442.unr, i64 %71
  %117 = load i64, ptr %116, align 8
  store i64 %117, ptr %.017243.unr, align 8
  %118 = getelementptr inbounds i8, ptr %.017243.unr, i64 %5
  store i64 %112, ptr %116, align 8
  br label %._crit_edge48

._crit_edge48:                                    ; preds = %._crit_edge48.loopexit.epilog-lcssa, %._crit_edge48.loopexit.unr-lcssa, %67
  %.0174.lcssa = phi ptr [ %69, %67 ], [ %.lcssa179.ph, %._crit_edge48.loopexit.unr-lcssa ], [ %116, %._crit_edge48.loopexit.epilog-lcssa ]
  %.0172.lcssa = phi ptr [ %43, %67 ], [ %.lcssa178.ph, %._crit_edge48.loopexit.unr-lcssa ], [ %118, %._crit_edge48.loopexit.epilog-lcssa ]
  %.0162.lcssa = phi ptr [ %0, %67 ], [ %.lcssa180.ph, %._crit_edge48.loopexit.unr-lcssa ], [ %115, %._crit_edge48.loopexit.epilog-lcssa ]
  %119 = ptrtoint ptr %.0174.lcssa to i64
  %120 = ptrtoint ptr %.0172.lcssa to i64
  %121 = sub nuw i64 %119, %120
  %122 = shl nuw i64 %5, 1
  %.not78 = icmp ugt i64 %122, %121
  br i1 %.not78, label %._crit_edge58, label %.lr.ph57

.lr.ph57:                                         ; preds = %._crit_edge48
  %123 = or i64 %121, %122
  %124 = and i64 %123, -4294967296
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %131

126:                                              ; preds = %.lr.ph57
  %127 = trunc i64 %122 to i32
  %128 = trunc i64 %121 to i32
  %129 = udiv i32 %128, %127
  %130 = zext i32 %129 to i64
  br label %133

131:                                              ; preds = %.lr.ph57
  %132 = udiv i64 %121, %122
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i64 [ %130, %126 ], [ %132, %131 ]
  %135 = sub i64 0, %5
  %umax100 = tail call i64 @llvm.umax.i64(i64 %134, i64 1)
  %136 = icmp ult i64 %134, 2
  br i1 %136, label %._crit_edge58.loopexit.unr-lcssa, label %.lr.ph57.new

.lr.ph57.new:                                     ; preds = %133
  %unroll_iter235 = and i64 %umax100, -2
  %137 = mul i64 %5, -2
  br label %138

138:                                              ; preds = %138, %.lr.ph57.new
  %lsr.iv302 = phi i64 [ %lsr.iv.next303, %138 ], [ %unroll_iter235, %.lr.ph57.new ]
  %.116355 = phi ptr [ %.0162.lcssa, %.lr.ph57.new ], [ %150, %138 ]
  %.117354 = phi ptr [ %.0172.lcssa, %.lr.ph57.new ], [ %148, %138 ]
  %.117553 = phi ptr [ %.0174.lcssa, %.lr.ph57.new ], [ %146, %138 ]
  %139 = load i64, ptr %.117354, align 8
  %140 = getelementptr inbounds i8, ptr %.117553, i64 %135
  %141 = load i64, ptr %140, align 8
  store i64 %141, ptr %.117354, align 8
  %142 = getelementptr inbounds i8, ptr %.117354, i64 %5
  %143 = load i64, ptr %.116355, align 8
  store i64 %143, ptr %140, align 8
  store i64 %139, ptr %.116355, align 8
  %144 = getelementptr inbounds i8, ptr %.116355, i64 %5
  %145 = load i64, ptr %142, align 8
  %146 = getelementptr inbounds i8, ptr %140, i64 %135
  %uglygep301 = getelementptr i8, ptr %.117553, i64 %137
  %147 = load i64, ptr %uglygep301, align 8
  store i64 %147, ptr %142, align 8
  %148 = getelementptr inbounds i8, ptr %142, i64 %5
  %149 = load i64, ptr %144, align 8
  store i64 %149, ptr %uglygep301, align 8
  store i64 %145, ptr %144, align 8
  %150 = getelementptr inbounds i8, ptr %144, i64 %5
  %lsr.iv.next303 = add i64 %lsr.iv302, -2
  %niter236.ncmp.1 = icmp eq i64 %lsr.iv.next303, 0
  br i1 %niter236.ncmp.1, label %._crit_edge58.loopexit.unr-lcssa, label %138

._crit_edge58.loopexit.unr-lcssa:                 ; preds = %138, %133
  %.lcssa177.ph = phi ptr [ undef, %133 ], [ %146, %138 ]
  %.lcssa.ph = phi ptr [ undef, %133 ], [ %150, %138 ]
  %.116355.unr = phi ptr [ %.0162.lcssa, %133 ], [ %150, %138 ]
  %.117354.unr = phi ptr [ %.0172.lcssa, %133 ], [ %148, %138 ]
  %.117553.unr = phi ptr [ %.0174.lcssa, %133 ], [ %146, %138 ]
  %151 = and i64 %umax100, 1
  %lcmp.mod232.not = icmp eq i64 %151, 0
  br i1 %lcmp.mod232.not, label %._crit_edge58.loopexit, label %._crit_edge58.loopexit.epilog-lcssa

._crit_edge58.loopexit.epilog-lcssa:              ; preds = %._crit_edge58.loopexit.unr-lcssa
  %152 = load i64, ptr %.117354.unr, align 8
  %153 = getelementptr inbounds i8, ptr %.117553.unr, i64 %135
  %154 = load i64, ptr %153, align 8
  store i64 %154, ptr %.117354.unr, align 8
  %155 = load i64, ptr %.116355.unr, align 8
  store i64 %155, ptr %153, align 8
  store i64 %152, ptr %.116355.unr, align 8
  %156 = getelementptr inbounds i8, ptr %.116355.unr, i64 %5
  br label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %._crit_edge58.loopexit.epilog-lcssa, %._crit_edge58.loopexit.unr-lcssa
  %.lcssa177 = phi ptr [ %.lcssa177.ph, %._crit_edge58.loopexit.unr-lcssa ], [ %153, %._crit_edge58.loopexit.epilog-lcssa ]
  %.lcssa = phi ptr [ %.lcssa.ph, %._crit_edge58.loopexit.unr-lcssa ], [ %156, %._crit_edge58.loopexit.epilog-lcssa ]
  %.pre = ptrtoint ptr %.lcssa177 to i64
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge48
  %.pre-phi = phi i64 [ %.pre, %._crit_edge58.loopexit ], [ %119, %._crit_edge48 ]
  %.1175.lcssa = phi ptr [ %.lcssa177, %._crit_edge58.loopexit ], [ %.0174.lcssa, %._crit_edge48 ]
  %.1163.lcssa = phi ptr [ %.lcssa, %._crit_edge58.loopexit ], [ %.0162.lcssa, %._crit_edge48 ]
  %157 = ptrtoint ptr %.1163.lcssa to i64
  %158 = sub nuw i64 %.pre-phi, %157
  %.not79 = icmp ugt i64 %122, %158
  br i1 %.not79, label %.loopexit, label %.lr.ph65

.lr.ph65:                                         ; preds = %._crit_edge58
  %159 = or i64 %158, %122
  %160 = and i64 %159, -4294967296
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %.lr.ph65
  %163 = trunc i64 %122 to i32
  %164 = trunc i64 %158 to i32
  %165 = udiv i32 %164, %163
  %166 = zext i32 %165 to i64
  br label %169

167:                                              ; preds = %.lr.ph65
  %168 = udiv i64 %158, %122
  br label %169

169:                                              ; preds = %167, %162
  %170 = phi i64 [ %166, %162 ], [ %168, %167 ]
  %171 = sub i64 0, %5
  %umax102 = tail call i64 @llvm.umax.i64(i64 %170, i64 1)
  %172 = add i64 %umax102, -1
  %xtraiter238 = and i64 %umax102, 3
  %173 = icmp ult i64 %172, 3
  br i1 %173, label %.loopexit.loopexit.unr-lcssa, label %.lr.ph65.new

.lr.ph65.new:                                     ; preds = %169
  %unroll_iter241 = and i64 %umax102, -4
  %174 = mul i64 %5, -4
  %175 = mul i64 %5, -3
  %176 = mul i64 %5, -2
  br label %177

177:                                              ; preds = %177, %.lr.ph65.new
  %lsr.iv299 = phi i64 [ %lsr.iv.next300, %177 ], [ %unroll_iter241, %.lr.ph65.new ]
  %.216463 = phi ptr [ %.1163.lcssa, %.lr.ph65.new ], [ %193, %177 ]
  %.217662 = phi ptr [ %.1175.lcssa, %.lr.ph65.new ], [ %191, %177 ]
  %178 = load i64, ptr %.216463, align 8
  %179 = getelementptr inbounds i8, ptr %.217662, i64 %171
  %180 = load i64, ptr %179, align 8
  store i64 %180, ptr %.216463, align 8
  %181 = getelementptr inbounds i8, ptr %.216463, i64 %5
  store i64 %178, ptr %179, align 8
  %182 = load i64, ptr %181, align 8
  %183 = getelementptr inbounds i8, ptr %179, i64 %171
  %uglygep298 = getelementptr i8, ptr %.217662, i64 %176
  %184 = load i64, ptr %uglygep298, align 8
  store i64 %184, ptr %181, align 8
  %185 = getelementptr inbounds i8, ptr %181, i64 %5
  store i64 %182, ptr %uglygep298, align 8
  %186 = load i64, ptr %185, align 8
  %187 = getelementptr inbounds i8, ptr %183, i64 %171
  %uglygep297 = getelementptr i8, ptr %.217662, i64 %175
  %188 = load i64, ptr %uglygep297, align 8
  store i64 %188, ptr %185, align 8
  %189 = getelementptr inbounds i8, ptr %185, i64 %5
  store i64 %186, ptr %uglygep297, align 8
  %190 = load i64, ptr %189, align 8
  %191 = getelementptr inbounds i8, ptr %187, i64 %171
  %uglygep296 = getelementptr i8, ptr %.217662, i64 %174
  %192 = load i64, ptr %uglygep296, align 8
  store i64 %192, ptr %189, align 8
  %193 = getelementptr inbounds i8, ptr %189, i64 %5
  store i64 %190, ptr %uglygep296, align 8
  %lsr.iv.next300 = add i64 %lsr.iv299, -4
  %niter242.ncmp.3 = icmp eq i64 %lsr.iv.next300, 0
  br i1 %niter242.ncmp.3, label %.loopexit.loopexit.unr-lcssa, label %177

194:                                              ; preds = %19
  %.not = icmp ugt i64 %7, %spec.store.select
  br i1 %.not, label %243, label %206

195:                                              ; preds = %19
  %.not73 = icmp eq i64 %4, 0
  br i1 %.not73, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %195
  %196 = mul i64 %5, %4
  %197 = getelementptr inbounds i8, ptr %0, i64 %196
  %xtraiter = and i64 %4, 3
  %198 = icmp ult i64 %4, 4
  br i1 %198, label %.loopexit.loopexit187.unr-lcssa, label %.lr.ph.preheader.new

.lr.ph.preheader.new:                             ; preds = %.lr.ph.preheader
  %unroll_iter = and i64 %4, -4
  %199 = add i64 %4, 3
  %200 = mul i64 %5, %199
  %201 = add i64 %4, 2
  %202 = mul i64 %5, %201
  %203 = add i64 %4, 1
  %204 = mul i64 %5, %203
  %205 = mul i64 %5, 3
  br label %.lr.ph

206:                                              ; preds = %194
  %207 = mul i64 %7, %5
  %208 = mul nuw i64 %5, %4
  %209 = getelementptr inbounds i8, ptr %0, i64 %208
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %209, i64 %207, i1 false)
  %.not6.i = icmp eq i64 %208, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9817.exit, label %iter.check

iter.check:                                       ; preds = %206
  %min.iters.check = icmp ult i64 %208, 4
  br i1 %min.iters.check, label %.lr.ph.i3.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %210 = add i64 %208, -1
  %211 = mul i64 %5, %1
  %212 = add i64 %211, -1
  %uglygep = getelementptr i8, ptr %0, i64 %212
  %213 = sub i64 1, %208
  %214 = getelementptr i8, ptr %uglygep, i64 %213
  %215 = icmp ugt ptr %214, %uglygep
  %uglygep129 = getelementptr i8, ptr %0, i64 %210
  %216 = icmp ult ptr %uglygep129, %0
  %217 = or i1 %215, %216
  br i1 %217, label %.lr.ph.i3.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %218 = ptrtoint ptr %0 to i64
  %219 = add i64 %208, %218
  %220 = mul i64 %5, %1
  %221 = add i64 %220, %218
  %222 = sub i64 %219, %221
  %diff.check = icmp ult i64 %222, 16
  br i1 %diff.check, label %.lr.ph.i3.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check133 = icmp ult i64 %208, 16
  br i1 %min.iters.check133, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %208, -16
  %223 = add i64 %220, -16
  %uglygep467 = getelementptr i8, ptr %0, i64 %223
  %224 = add i64 %208, -16
  %uglygep471 = getelementptr i8, ptr %0, i64 %224
  %225 = lshr i64 %208, 4
  %226 = mul i64 %225, -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv468 = phi i64 [ %lsr.iv.next469, %vector.body ], [ 0, %vector.ph ]
  %uglygep472 = getelementptr i8, ptr %uglygep471, i64 %lsr.iv468
  %wide.load = load <16 x i8>, ptr %uglygep472, align 1
  %uglygep470 = getelementptr i8, ptr %uglygep467, i64 %lsr.iv468
  store <16 x i8> %wide.load, ptr %uglygep470, align 1
  %lsr.iv.next469 = add i64 %lsr.iv468, -16
  %227 = icmp eq i64 %226, %lsr.iv.next469
  br i1 %227, label %middle.block, label %vector.body, !llvm.loop !568

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %208, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9817.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end137 = and i64 %208, 15
  %n.vec.remaining = and i64 %208, 12
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i3.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec136 = and i64 %208, -4
  %ind.end = and i64 %208, 3
  %228 = add i64 %220, -4
  %uglygep461 = getelementptr i8, ptr %0, i64 %228
  %229 = sub i64 0, %vec.epilog.resume.val
  %230 = add i64 %208, -4
  %uglygep465 = getelementptr i8, ptr %0, i64 %230
  %231 = lshr i64 %208, 2
  %232 = mul i64 %231, -4
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv462 = phi i64 [ %lsr.iv.next463, %vec.epilog.vector.body ], [ %229, %vec.epilog.ph ]
  %uglygep466 = getelementptr i8, ptr %uglygep465, i64 %lsr.iv462
  %wide.load141 = load <4 x i8>, ptr %uglygep466, align 1
  %uglygep464 = getelementptr i8, ptr %uglygep461, i64 %lsr.iv462
  store <4 x i8> %wide.load141, ptr %uglygep464, align 1
  %lsr.iv.next463 = add i64 %lsr.iv462, -4
  %233 = icmp eq i64 %232, %lsr.iv.next463
  br i1 %233, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !569

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n138 = icmp eq i64 %208, %n.vec136
  br i1 %cmp.n138, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i3.preheader

.lr.ph.i3.preheader:                              ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %208, %iter.check ], [ %208, %vector.memcheck ], [ %208, %vector.scevcheck ], [ %ind.end137, %vec.epilog.iter.check ], [ %ind.end, %vec.epilog.middle.block ]
  %234 = add i64 %.07.i.ph, -1
  %xtraiter188 = and i64 %.07.i.ph, 3
  %lcmp.mod189.not = icmp eq i64 %xtraiter188, 0
  br i1 %lcmp.mod189.not, label %.lr.ph.i3.prol.loopexit, label %.lr.ph.i3.prol.preheader

.lr.ph.i3.prol.preheader:                         ; preds = %.lr.ph.i3.preheader
  %uglygep455 = getelementptr i8, ptr %0, i64 -1
  %uglygep457 = getelementptr i8, ptr %uglygep455, i64 %207
  br label %.lr.ph.i3.prol

.lr.ph.i3.prol:                                   ; preds = %.lr.ph.i3.prol, %.lr.ph.i3.prol.preheader
  %lsr.iv459 = phi i64 [ %xtraiter188, %.lr.ph.i3.prol.preheader ], [ %lsr.iv.next460, %.lr.ph.i3.prol ]
  %.07.i.prol = phi i64 [ %235, %.lr.ph.i3.prol ], [ %.07.i.ph, %.lr.ph.i3.prol.preheader ]
  %235 = add i64 %.07.i.prol, -1
  %uglygep458 = getelementptr i8, ptr %uglygep457, i64 %.07.i.prol
  %uglygep456 = getelementptr i8, ptr %uglygep455, i64 %.07.i.prol
  %236 = load i8, ptr %uglygep456, align 1
  store i8 %236, ptr %uglygep458, align 1
  %lsr.iv.next460 = add nsw i64 %lsr.iv459, -1
  %prol.iter.cmp.not = icmp eq i64 %lsr.iv.next460, 0
  br i1 %prol.iter.cmp.not, label %.lr.ph.i3.prol.loopexit, label %.lr.ph.i3.prol, !llvm.loop !570

.lr.ph.i3.prol.loopexit:                          ; preds = %.lr.ph.i3.prol, %.lr.ph.i3.preheader
  %.07.i.unr = phi i64 [ %.07.i.ph, %.lr.ph.i3.preheader ], [ %235, %.lr.ph.i3.prol ]
  %237 = icmp ult i64 %234, 3
  br i1 %237, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i3.preheader278

.lr.ph.i3.preheader278:                           ; preds = %.lr.ph.i3.prol.loopexit
  %uglygep439 = getelementptr i8, ptr %0, i64 -1
  %uglygep447 = getelementptr i8, ptr %uglygep439, i64 %207
  br label %.lr.ph.i3

.lr.ph.i3:                                        ; preds = %.lr.ph.i3, %.lr.ph.i3.preheader278
  %.07.i = phi i64 [ %241, %.lr.ph.i3 ], [ %.07.i.unr, %.lr.ph.i3.preheader278 ]
  %uglygep454 = getelementptr i8, ptr %uglygep447, i64 %.07.i
  %uglygep446 = getelementptr i8, ptr %uglygep439, i64 %.07.i
  %238 = load i8, ptr %uglygep446, align 1
  store i8 %238, ptr %uglygep454, align 1
  %uglygep452 = getelementptr i8, ptr %uglygep447, i64 %.07.i
  %uglygep453 = getelementptr i8, ptr %uglygep452, i64 -1
  %uglygep444 = getelementptr i8, ptr %uglygep439, i64 %.07.i
  %uglygep445 = getelementptr i8, ptr %uglygep444, i64 -1
  %239 = load i8, ptr %uglygep445, align 1
  store i8 %239, ptr %uglygep453, align 1
  %uglygep450 = getelementptr i8, ptr %uglygep447, i64 %.07.i
  %uglygep451 = getelementptr i8, ptr %uglygep450, i64 -2
  %uglygep442 = getelementptr i8, ptr %uglygep439, i64 %.07.i
  %uglygep443 = getelementptr i8, ptr %uglygep442, i64 -2
  %240 = load i8, ptr %uglygep443, align 1
  store i8 %240, ptr %uglygep451, align 1
  %241 = add i64 %.07.i, -4
  %uglygep448 = getelementptr i8, ptr %uglygep447, i64 %.07.i
  %uglygep449 = getelementptr i8, ptr %uglygep448, i64 -3
  %uglygep440 = getelementptr i8, ptr %uglygep439, i64 %.07.i
  %uglygep441 = getelementptr i8, ptr %uglygep440, i64 -3
  %242 = load i8, ptr %uglygep441, align 1
  store i8 %242, ptr %uglygep449, align 1
  %.not.i2.3 = icmp eq i64 %241, 0
  br i1 %.not.i2.3, label %mem.copyBackwards__anon_9817.exit, label %.lr.ph.i3, !llvm.loop !571

mem.copyBackwards__anon_9817.exit:                ; preds = %.lr.ph.i3, %.lr.ph.i3.prol.loopexit, %vec.epilog.middle.block, %middle.block, %206
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %207, i1 false)
  ret void

243:                                              ; preds = %194
  %244 = mul i64 %5, %4
  %245 = getelementptr inbounds i8, ptr %0, i64 %244
  %246 = sub nuw i64 %4, %7
  %247 = icmp ule i64 %246, %spec.store.select
  %248 = icmp ugt i64 %246, 3
  %249 = and i1 %247, %248
  %250 = mul i64 %7, %5
  br i1 %249, label %.lr.ph39.preheader, label %273

.lr.ph39.preheader:                               ; preds = %243
  %251 = getelementptr inbounds i8, ptr %0, i64 %250
  %252 = getelementptr inbounds i8, ptr %251, i64 %244
  %253 = mul nuw i64 %246, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %251, i64 %253, i1 false)
  %254 = xor i64 %4, -1
  %255 = add i64 %254, %1
  %xtraiter212 = and i64 %7, 3
  %256 = icmp ult i64 %255, 3
  br i1 %256, label %._crit_edge40.unr-lcssa, label %.lr.ph39.preheader.new

.lr.ph39.preheader.new:                           ; preds = %.lr.ph39.preheader
  %unroll_iter215 = and i64 %7, -4
  %257 = add i64 %1, 3
  %258 = sub i64 %257, %4
  %259 = mul i64 %5, %258
  %260 = add i64 %1, 2
  %261 = sub i64 %260, %4
  %262 = mul i64 %5, %261
  %263 = add i64 %1, 1
  %264 = sub i64 %263, %4
  %265 = mul i64 %5, %264
  %266 = add i64 %4, 3
  %267 = mul i64 %5, %266
  %268 = add i64 %4, 2
  %269 = mul i64 %5, %268
  %270 = add i64 %4, 1
  %271 = mul i64 %5, %270
  %272 = mul i64 %5, 3
  br label %.lr.ph39

273:                                              ; preds = %243
  %274 = getelementptr inbounds i8, ptr %245, i64 %250
  %.not74 = icmp ult i64 %7, 2
  br i1 %.not74, label %._crit_edge, label %.lr.ph17

.lr.ph17:                                         ; preds = %273
  %275 = lshr i64 %7, 1
  %276 = sub i64 0, %5
  %277 = icmp eq i64 %275, 1
  br i1 %277, label %._crit_edge.loopexit.unr-lcssa, label %.lr.ph17.new

.lr.ph17.new:                                     ; preds = %.lr.ph17
  %const = bitcast i64 9223372036854775806 to i64
  %unroll_iter196 = and i64 %275, %const
  %278 = mul i64 %5, %1
  %279 = sub i64 0, %278
  %280 = shl i64 %5, 1
  %281 = add i64 %1, -2
  %282 = mul i64 %5, %281
  %283 = add i64 %1, -1
  %284 = mul i64 %5, %283
  %285 = add i64 %4, 1
  %286 = mul i64 %5, %285
  %287 = mul i64 %5, %4
  %288 = sub i64 0, %287
  %289 = add i64 %4, -2
  %290 = mul i64 %5, %289
  %291 = add i64 %4, -1
  %292 = mul i64 %5, %291
  br label %309

.lr.ph39:                                         ; preds = %.lr.ph39, %.lr.ph39.preheader.new
  %lsr.iv389 = phi i64 [ %lsr.iv.next390, %.lr.ph39 ], [ %unroll_iter215, %.lr.ph39.preheader.new ]
  %.018334 = phi ptr [ %0, %.lr.ph39.preheader.new ], [ %304, %.lr.ph39 ]
  %uglygep381 = getelementptr i8, ptr %.018334, i64 %250
  %uglygep386 = getelementptr i8, ptr %.018334, i64 %244
  %293 = load i64, ptr %.018334, align 8
  store i64 %293, ptr %uglygep381, align 8
  %uglygep380 = getelementptr i8, ptr %.018334, i64 %265
  %294 = load i64, ptr %uglygep386, align 8
  store i64 %294, ptr %.018334, align 8
  %295 = getelementptr inbounds i8, ptr %.018334, i64 %5
  %uglygep385 = getelementptr i8, ptr %.018334, i64 %271
  %296 = load i64, ptr %295, align 8
  store i64 %296, ptr %uglygep380, align 8
  %uglygep379 = getelementptr i8, ptr %.018334, i64 %262
  %297 = load i64, ptr %uglygep385, align 8
  store i64 %297, ptr %295, align 8
  %298 = getelementptr inbounds i8, ptr %295, i64 %5
  %uglygep384 = getelementptr i8, ptr %.018334, i64 %269
  %sunkaddr495 = mul i64 %5, 2
  %sunkaddr496 = getelementptr i8, ptr %.018334, i64 %sunkaddr495
  %299 = load i64, ptr %sunkaddr496, align 8
  store i64 %299, ptr %uglygep379, align 8
  %uglygep378 = getelementptr i8, ptr %.018334, i64 %259
  %300 = load i64, ptr %uglygep384, align 8
  store i64 %300, ptr %sunkaddr496, align 8
  %301 = getelementptr inbounds i8, ptr %298, i64 %5
  %uglygep387 = getelementptr i8, ptr %.018334, i64 %272
  %uglygep383 = getelementptr i8, ptr %.018334, i64 %267
  %302 = load i64, ptr %uglygep387, align 8
  store i64 %302, ptr %uglygep378, align 8
  %303 = load i64, ptr %uglygep383, align 8
  store i64 %303, ptr %uglygep387, align 8
  %304 = getelementptr inbounds i8, ptr %301, i64 %5
  %lsr.iv.next390 = add i64 %lsr.iv389, -4
  %niter216.ncmp.3 = icmp eq i64 %lsr.iv.next390, 0
  br i1 %niter216.ncmp.3, label %._crit_edge40.unr-lcssa.loopexit, label %.lr.ph39

._crit_edge40.unr-lcssa.loopexit:                 ; preds = %.lr.ph39
  %uglygep377 = getelementptr i8, ptr %304, i64 %250
  %uglygep382 = getelementptr i8, ptr %304, i64 %244
  br label %._crit_edge40.unr-lcssa

._crit_edge40.unr-lcssa:                          ; preds = %._crit_edge40.unr-lcssa.loopexit, %.lr.ph39.preheader
  %.017136.unr = phi ptr [ %251, %.lr.ph39.preheader ], [ %uglygep377, %._crit_edge40.unr-lcssa.loopexit ]
  %.018035.unr = phi ptr [ %245, %.lr.ph39.preheader ], [ %uglygep382, %._crit_edge40.unr-lcssa.loopexit ]
  %.018334.unr = phi ptr [ %0, %.lr.ph39.preheader ], [ %304, %._crit_edge40.unr-lcssa.loopexit ]
  %lcmp.mod214.not = icmp eq i64 %xtraiter212, 0
  br i1 %lcmp.mod214.not, label %._crit_edge40, label %.lr.ph39.epil.preheader

.lr.ph39.epil.preheader:                          ; preds = %._crit_edge40.unr-lcssa
  br label %.lr.ph39.epil

.lr.ph39.epil:                                    ; preds = %.lr.ph39.epil, %.lr.ph39.epil.preheader
  %lsr.iv375 = phi i64 [ %xtraiter212, %.lr.ph39.epil.preheader ], [ %lsr.iv.next376, %.lr.ph39.epil ]
  %lsr.iv370 = phi i64 [ 0, %.lr.ph39.epil.preheader ], [ %lsr.iv.next371, %.lr.ph39.epil ]
  %uglygep372 = getelementptr i8, ptr %.017136.unr, i64 %lsr.iv370
  %uglygep373 = getelementptr i8, ptr %.018035.unr, i64 %lsr.iv370
  %uglygep374 = getelementptr i8, ptr %.018334.unr, i64 %lsr.iv370
  %305 = load i64, ptr %uglygep374, align 8
  store i64 %305, ptr %uglygep372, align 8
  %306 = load i64, ptr %uglygep373, align 8
  store i64 %306, ptr %uglygep374, align 8
  %lsr.iv.next371 = add i64 %lsr.iv370, %5
  %lsr.iv.next376 = add nsw i64 %lsr.iv375, -1
  %epil.iter213.cmp.not = icmp eq i64 %lsr.iv.next376, 0
  br i1 %epil.iter213.cmp.not, label %._crit_edge40, label %.lr.ph39.epil, !llvm.loop !572

._crit_edge40:                                    ; preds = %.lr.ph39.epil, %._crit_edge40.unr-lcssa
  %307 = sub i64 0, %253
  %308 = getelementptr inbounds i8, ptr %252, i64 %307
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %308, ptr nonnull align 1 %2, i64 %253, i1 false)
  ret void

309:                                              ; preds = %309, %.lr.ph17.new
  %lsr.iv437 = phi i64 [ %lsr.iv.next438, %309 ], [ %unroll_iter196, %.lr.ph17.new ]
  %lsr.iv433 = phi i64 [ %lsr.iv.next434, %309 ], [ %5, %.lr.ph17.new ]
  %lsr.iv430 = phi i64 [ %lsr.iv.next431, %309 ], [ 0, %.lr.ph17.new ]
  %lsr.iv427 = phi i64 [ %lsr.iv.next428, %309 ], [ %292, %.lr.ph17.new ]
  %lsr.iv424 = phi i64 [ %lsr.iv.next425, %309 ], [ %290, %.lr.ph17.new ]
  %lsr.iv421 = phi i64 [ %lsr.iv.next422, %309 ], [ %288, %.lr.ph17.new ]
  %lsr.iv417 = phi i64 [ %lsr.iv.next418, %309 ], [ %286, %.lr.ph17.new ]
  %lsr.iv414 = phi i64 [ %lsr.iv.next415, %309 ], [ %244, %.lr.ph17.new ]
  %lsr.iv411 = phi i64 [ %lsr.iv.next412, %309 ], [ %284, %.lr.ph17.new ]
  %lsr.iv408 = phi i64 [ %lsr.iv.next409, %309 ], [ %282, %.lr.ph17.new ]
  %lsr.iv405 = phi i64 [ %lsr.iv.next406, %309 ], [ %279, %.lr.ph17.new ]
  %uglygep420 = getelementptr i8, ptr %0, i64 %lsr.iv414
  %uglygep436 = getelementptr i8, ptr %0, i64 %lsr.iv430
  %uglygep429 = getelementptr i8, ptr %0, i64 %lsr.iv427
  %310 = load i64, ptr %uglygep429, align 8
  %311 = load i64, ptr %uglygep436, align 8
  store i64 %311, ptr %uglygep429, align 8
  %312 = load i64, ptr %uglygep420, align 8
  store i64 %312, ptr %uglygep436, align 8
  %uglygep435 = getelementptr i8, ptr %0, i64 %lsr.iv433
  %uglygep413 = getelementptr i8, ptr %0, i64 %lsr.iv411
  %313 = load i64, ptr %uglygep413, align 8
  store i64 %313, ptr %uglygep420, align 8
  %uglygep419 = getelementptr i8, ptr %0, i64 %lsr.iv417
  store i64 %310, ptr %uglygep413, align 8
  %uglygep426 = getelementptr i8, ptr %0, i64 %lsr.iv424
  %314 = load i64, ptr %uglygep426, align 8
  %315 = load i64, ptr %uglygep435, align 8
  store i64 %315, ptr %uglygep426, align 8
  %316 = load i64, ptr %uglygep419, align 8
  store i64 %316, ptr %uglygep435, align 8
  %uglygep410 = getelementptr i8, ptr %0, i64 %lsr.iv408
  %317 = load i64, ptr %uglygep410, align 8
  store i64 %317, ptr %uglygep419, align 8
  store i64 %314, ptr %uglygep410, align 8
  %lsr.iv.next406 = add i64 %lsr.iv405, %280
  %lsr.iv.next409 = sub i64 %lsr.iv408, %280
  %lsr.iv.next412 = sub i64 %lsr.iv411, %280
  %lsr.iv.next415 = add i64 %lsr.iv414, %280
  %lsr.iv.next418 = add i64 %lsr.iv417, %280
  %lsr.iv.next422 = add i64 %lsr.iv421, %280
  %lsr.iv.next425 = sub i64 %lsr.iv424, %280
  %lsr.iv.next428 = sub i64 %lsr.iv427, %280
  %lsr.iv.next431 = add i64 %lsr.iv430, %280
  %lsr.iv.next434 = add i64 %lsr.iv433, %280
  %lsr.iv.next438 = add i64 %lsr.iv437, -2
  %niter197.ncmp.1 = icmp eq i64 %lsr.iv.next438, 0
  br i1 %niter197.ncmp.1, label %._crit_edge.loopexit.unr-lcssa.loopexit, label %309

._crit_edge.loopexit.unr-lcssa.loopexit:          ; preds = %309
  %318 = mul i64 %lsr.iv.next406, -1
  %uglygep407 = getelementptr i8, ptr %0, i64 %318
  %uglygep416 = getelementptr i8, ptr %0, i64 %lsr.iv.next415
  %319 = mul i64 %lsr.iv.next422, -1
  %uglygep423 = getelementptr i8, ptr %0, i64 %319
  %uglygep432 = getelementptr i8, ptr %0, i64 %lsr.iv.next431
  br label %._crit_edge.loopexit.unr-lcssa

._crit_edge.loopexit.unr-lcssa:                   ; preds = %._crit_edge.loopexit.unr-lcssa.loopexit, %.lr.ph17
  %.lcssa186.ph = phi ptr [ undef, %.lr.ph17 ], [ %uglygep423, %._crit_edge.loopexit.unr-lcssa.loopexit ]
  %.lcssa185.ph = phi ptr [ undef, %.lr.ph17 ], [ %uglygep432, %._crit_edge.loopexit.unr-lcssa.loopexit ]
  %.lcssa184.ph = phi ptr [ undef, %.lr.ph17 ], [ %uglygep407, %._crit_edge.loopexit.unr-lcssa.loopexit ]
  %.016015.unr = phi ptr [ %274, %.lr.ph17 ], [ %uglygep407, %._crit_edge.loopexit.unr-lcssa.loopexit ]
  %.016114.unr = phi ptr [ %245, %.lr.ph17 ], [ %uglygep416, %._crit_edge.loopexit.unr-lcssa.loopexit ]
  %.118113.unr = phi ptr [ %245, %.lr.ph17 ], [ %uglygep423, %._crit_edge.loopexit.unr-lcssa.loopexit ]
  %.118412.unr = phi ptr [ %0, %.lr.ph17 ], [ %uglygep432, %._crit_edge.loopexit.unr-lcssa.loopexit ]
  %320 = and i64 %7, 2
  %lcmp.mod192.not = icmp eq i64 %320, 0
  br i1 %lcmp.mod192.not, label %._crit_edge, label %._crit_edge.loopexit.epilog-lcssa

._crit_edge.loopexit.epilog-lcssa:                ; preds = %._crit_edge.loopexit.unr-lcssa
  %321 = getelementptr inbounds i8, ptr %.118113.unr, i64 %276
  %322 = load i64, ptr %321, align 8
  %323 = load i64, ptr %.118412.unr, align 8
  store i64 %323, ptr %321, align 8
  %324 = load i64, ptr %.016114.unr, align 8
  store i64 %324, ptr %.118412.unr, align 8
  %325 = getelementptr inbounds i8, ptr %.118412.unr, i64 %5
  %326 = getelementptr inbounds i8, ptr %.016015.unr, i64 %276
  %327 = load i64, ptr %326, align 8
  store i64 %327, ptr %.016114.unr, align 8
  store i64 %322, ptr %326, align 8
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit.epilog-lcssa, %._crit_edge.loopexit.unr-lcssa, %273
  %.1184.lcssa = phi ptr [ %0, %273 ], [ %.lcssa185.ph, %._crit_edge.loopexit.unr-lcssa ], [ %325, %._crit_edge.loopexit.epilog-lcssa ]
  %.1181.lcssa = phi ptr [ %245, %273 ], [ %.lcssa186.ph, %._crit_edge.loopexit.unr-lcssa ], [ %321, %._crit_edge.loopexit.epilog-lcssa ]
  %.0160.lcssa = phi ptr [ %274, %273 ], [ %.lcssa184.ph, %._crit_edge.loopexit.unr-lcssa ], [ %326, %._crit_edge.loopexit.epilog-lcssa ]
  %328 = ptrtoint ptr %.1181.lcssa to i64
  %329 = ptrtoint ptr %.1184.lcssa to i64
  %330 = sub nuw i64 %328, %329
  %331 = shl nuw i64 %5, 1
  %.not75 = icmp ugt i64 %331, %330
  br i1 %.not75, label %._crit_edge26, label %.lr.ph25

.lr.ph25:                                         ; preds = %._crit_edge
  %332 = or i64 %330, %331
  %333 = and i64 %332, -4294967296
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %.lr.ph25
  %336 = trunc i64 %331 to i32
  %337 = trunc i64 %330 to i32
  %338 = udiv i32 %337, %336
  %339 = zext i32 %338 to i64
  br label %342

340:                                              ; preds = %.lr.ph25
  %341 = udiv i64 %330, %331
  br label %342

342:                                              ; preds = %340, %335
  %343 = phi i64 [ %339, %335 ], [ %341, %340 ]
  %344 = sub i64 0, %5
  %umax92 = tail call i64 @llvm.umax.i64(i64 %343, i64 1)
  %345 = icmp ult i64 %343, 2
  br i1 %345, label %._crit_edge26.loopexit.unr-lcssa, label %.lr.ph25.new

.lr.ph25.new:                                     ; preds = %342
  %unroll_iter204 = and i64 %umax92, -2
  %346 = mul i64 %5, -2
  br label %347

347:                                              ; preds = %347, %.lr.ph25.new
  %lsr.iv403 = phi i64 [ %lsr.iv.next404, %347 ], [ %unroll_iter204, %.lr.ph25.new ]
  %.122 = phi ptr [ %.0160.lcssa, %.lr.ph25.new ], [ %357, %347 ]
  %.218221 = phi ptr [ %.1181.lcssa, %.lr.ph25.new ], [ %354, %347 ]
  %.218520 = phi ptr [ %.1184.lcssa, %.lr.ph25.new ], [ %359, %347 ]
  %348 = getelementptr inbounds i8, ptr %.218221, i64 %344
  %349 = load i64, ptr %348, align 8
  %350 = load i64, ptr %.218520, align 8
  store i64 %350, ptr %348, align 8
  %351 = getelementptr inbounds i8, ptr %.122, i64 %344
  %352 = load i64, ptr %351, align 8
  store i64 %352, ptr %.218520, align 8
  %353 = getelementptr inbounds i8, ptr %.218520, i64 %5
  store i64 %349, ptr %351, align 8
  %354 = getelementptr inbounds i8, ptr %348, i64 %344
  %uglygep402 = getelementptr i8, ptr %.218221, i64 %346
  %355 = load i64, ptr %uglygep402, align 8
  %356 = load i64, ptr %353, align 8
  store i64 %356, ptr %uglygep402, align 8
  %357 = getelementptr inbounds i8, ptr %351, i64 %344
  %uglygep401 = getelementptr i8, ptr %.122, i64 %346
  %358 = load i64, ptr %uglygep401, align 8
  store i64 %358, ptr %353, align 8
  %359 = getelementptr inbounds i8, ptr %353, i64 %5
  store i64 %355, ptr %uglygep401, align 8
  %lsr.iv.next404 = add i64 %lsr.iv403, -2
  %niter205.ncmp.1 = icmp eq i64 %lsr.iv.next404, 0
  br i1 %niter205.ncmp.1, label %._crit_edge26.loopexit.unr-lcssa, label %347

._crit_edge26.loopexit.unr-lcssa:                 ; preds = %347, %342
  %.lcssa183.ph = phi ptr [ undef, %342 ], [ %357, %347 ]
  %.lcssa182.ph = phi ptr [ undef, %342 ], [ %359, %347 ]
  %.122.unr = phi ptr [ %.0160.lcssa, %342 ], [ %357, %347 ]
  %.218221.unr = phi ptr [ %.1181.lcssa, %342 ], [ %354, %347 ]
  %.218520.unr = phi ptr [ %.1184.lcssa, %342 ], [ %359, %347 ]
  %360 = and i64 %umax92, 1
  %lcmp.mod201.not = icmp eq i64 %360, 0
  br i1 %lcmp.mod201.not, label %._crit_edge26.loopexit, label %._crit_edge26.loopexit.epilog-lcssa

._crit_edge26.loopexit.epilog-lcssa:              ; preds = %._crit_edge26.loopexit.unr-lcssa
  %361 = getelementptr inbounds i8, ptr %.218221.unr, i64 %344
  %362 = load i64, ptr %361, align 8
  %363 = load i64, ptr %.218520.unr, align 8
  store i64 %363, ptr %361, align 8
  %364 = getelementptr inbounds i8, ptr %.122.unr, i64 %344
  %365 = load i64, ptr %364, align 8
  store i64 %365, ptr %.218520.unr, align 8
  %366 = getelementptr inbounds i8, ptr %.218520.unr, i64 %5
  store i64 %362, ptr %364, align 8
  br label %._crit_edge26.loopexit

._crit_edge26.loopexit:                           ; preds = %._crit_edge26.loopexit.epilog-lcssa, %._crit_edge26.loopexit.unr-lcssa
  %.lcssa183 = phi ptr [ %.lcssa183.ph, %._crit_edge26.loopexit.unr-lcssa ], [ %364, %._crit_edge26.loopexit.epilog-lcssa ]
  %.lcssa182 = phi ptr [ %.lcssa182.ph, %._crit_edge26.loopexit.unr-lcssa ], [ %366, %._crit_edge26.loopexit.epilog-lcssa ]
  %.pre105 = ptrtoint ptr %.lcssa182 to i64
  br label %._crit_edge26

._crit_edge26:                                    ; preds = %._crit_edge26.loopexit, %._crit_edge
  %.pre-phi106 = phi i64 [ %.pre105, %._crit_edge26.loopexit ], [ %329, %._crit_edge ]
  %.2185.lcssa = phi ptr [ %.lcssa182, %._crit_edge26.loopexit ], [ %.1184.lcssa, %._crit_edge ]
  %.1.lcssa = phi ptr [ %.lcssa183, %._crit_edge26.loopexit ], [ %.0160.lcssa, %._crit_edge ]
  %367 = ptrtoint ptr %.1.lcssa to i64
  %368 = sub nuw i64 %367, %.pre-phi106
  %.not76 = icmp ugt i64 %331, %368
  br i1 %.not76, label %.loopexit, label %.lr.ph33

.lr.ph33:                                         ; preds = %._crit_edge26
  %369 = or i64 %368, %331
  %370 = and i64 %369, -4294967296
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %377

372:                                              ; preds = %.lr.ph33
  %373 = trunc i64 %331 to i32
  %374 = trunc i64 %368 to i32
  %375 = udiv i32 %374, %373
  %376 = zext i32 %375 to i64
  br label %379

377:                                              ; preds = %.lr.ph33
  %378 = udiv i64 %368, %331
  br label %379

379:                                              ; preds = %377, %372
  %380 = phi i64 [ %376, %372 ], [ %378, %377 ]
  %381 = sub i64 0, %5
  %umax94 = tail call i64 @llvm.umax.i64(i64 %380, i64 1)
  %382 = add i64 %umax94, -1
  %xtraiter207 = and i64 %umax94, 3
  %383 = icmp ult i64 %382, 3
  br i1 %383, label %.loopexit.loopexit181.unr-lcssa, label %.lr.ph33.new

.lr.ph33.new:                                     ; preds = %379
  %unroll_iter210 = and i64 %umax94, -4
  %384 = mul i64 %5, -4
  %385 = mul i64 %5, -3
  %386 = mul i64 %5, -2
  br label %387

387:                                              ; preds = %387, %.lr.ph33.new
  %lsr.iv399 = phi i64 [ %lsr.iv.next400, %387 ], [ %unroll_iter210, %.lr.ph33.new ]
  %.230 = phi ptr [ %.1.lcssa, %.lr.ph33.new ], [ %401, %387 ]
  %.329 = phi ptr [ %.2185.lcssa, %.lr.ph33.new ], [ %403, %387 ]
  %388 = load i64, ptr %.329, align 8
  %389 = getelementptr inbounds i8, ptr %.230, i64 %381
  %390 = load i64, ptr %389, align 8
  store i64 %390, ptr %.329, align 8
  %391 = getelementptr inbounds i8, ptr %.329, i64 %5
  store i64 %388, ptr %389, align 8
  %392 = load i64, ptr %391, align 8
  %393 = getelementptr inbounds i8, ptr %389, i64 %381
  %uglygep398 = getelementptr i8, ptr %.230, i64 %386
  %394 = load i64, ptr %uglygep398, align 8
  store i64 %394, ptr %391, align 8
  %395 = getelementptr inbounds i8, ptr %391, i64 %5
  store i64 %392, ptr %uglygep398, align 8
  %396 = load i64, ptr %395, align 8
  %397 = getelementptr inbounds i8, ptr %393, i64 %381
  %uglygep397 = getelementptr i8, ptr %.230, i64 %385
  %398 = load i64, ptr %uglygep397, align 8
  store i64 %398, ptr %395, align 8
  %399 = getelementptr inbounds i8, ptr %395, i64 %5
  store i64 %396, ptr %uglygep397, align 8
  %400 = load i64, ptr %399, align 8
  %401 = getelementptr inbounds i8, ptr %397, i64 %381
  %uglygep396 = getelementptr i8, ptr %.230, i64 %384
  %402 = load i64, ptr %uglygep396, align 8
  store i64 %402, ptr %399, align 8
  %403 = getelementptr inbounds i8, ptr %399, i64 %5
  store i64 %400, ptr %uglygep396, align 8
  %lsr.iv.next400 = add i64 %lsr.iv399, -4
  %niter211.ncmp.3 = icmp eq i64 %lsr.iv.next400, 0
  br i1 %niter211.ncmp.3, label %.loopexit.loopexit181.unr-lcssa, label %387

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader.new
  %lsr.iv486 = phi i64 [ %lsr.iv.next487, %.lr.ph ], [ %unroll_iter, %.lr.ph.preheader.new ]
  %.01569 = phi ptr [ %0, %.lr.ph.preheader.new ], [ %415, %.lr.ph ]
  %uglygep483 = getelementptr i8, ptr %.01569, i64 %196
  %404 = load i64, ptr %.01569, align 8
  %405 = load i64, ptr %uglygep483, align 8
  store i64 %405, ptr %.01569, align 8
  %406 = getelementptr inbounds i8, ptr %.01569, i64 %5
  store i64 %404, ptr %uglygep483, align 8
  %uglygep482 = getelementptr i8, ptr %.01569, i64 %204
  %407 = load i64, ptr %406, align 8
  %408 = load i64, ptr %uglygep482, align 8
  store i64 %408, ptr %406, align 8
  %409 = getelementptr inbounds i8, ptr %406, i64 %5
  store i64 %407, ptr %uglygep482, align 8
  %uglygep481 = getelementptr i8, ptr %.01569, i64 %202
  %sunkaddr497 = mul i64 %5, 2
  %sunkaddr498 = getelementptr i8, ptr %.01569, i64 %sunkaddr497
  %410 = load i64, ptr %sunkaddr498, align 8
  %411 = load i64, ptr %uglygep481, align 8
  store i64 %411, ptr %sunkaddr498, align 8
  %412 = getelementptr inbounds i8, ptr %409, i64 %5
  %uglygep484 = getelementptr i8, ptr %.01569, i64 %205
  store i64 %410, ptr %uglygep481, align 8
  %uglygep480 = getelementptr i8, ptr %.01569, i64 %200
  %413 = load i64, ptr %uglygep484, align 8
  %414 = load i64, ptr %uglygep480, align 8
  store i64 %414, ptr %uglygep484, align 8
  %415 = getelementptr inbounds i8, ptr %412, i64 %5
  store i64 %413, ptr %uglygep480, align 8
  %lsr.iv.next487 = add i64 %lsr.iv486, -4
  %niter.ncmp.3 = icmp eq i64 %lsr.iv.next487, 0
  br i1 %niter.ncmp.3, label %.loopexit.loopexit187.unr-lcssa.loopexit, label %.lr.ph
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i128 @llvm.abs.i128(i128, i1 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #14

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal i64 @roc_builtins.str.number_of_bytes(ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %0) local_unnamed_addr #6 {
  %2 = tail call i64 @roc_builtins.str.count_utf8_bytes(ptr nocapture nonnull readonly byval(%str.RocStr) align 8 %0) #6
  ret i64 %2
}

define internal fastcc void @String_103_2ef58c8e384362850c578bf62383d3f7b2846ac5d771d1c33fa8ac2df674698(%list.RocList %"256", ptr %expectedString, ptr %0) !dbg !573 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %expectedString, i64 24, i1 false), !dbg !578
  ret void, !dbg !578
}

define internal fastcc i64 @List_walkHelp_7e6da7233f16ea2c61d431e9d8c0a56499bf145a5210fb3d79ec4aba1f55c0a8(%list.RocList %"133", i64 %"134", {} %"135", i64 %"136", i64 %"137") !dbg !580 {
entry:
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"133", i64 1), !dbg !581
  br label %joinpointcont, !dbg !581

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi i64 [ %"134", %entry ], [ %call6, %then_block ], !dbg !581
  %joinpointarg3 = phi i64 [ %"136", %entry ], [ %call7, %then_block ], !dbg !581
  %call = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg3, i64 %"137"), !dbg !581
  br i1 %call, label %then_block, label %else_block, !dbg !581

then_block:                                       ; preds = %joinpointcont
  %call5 = tail call fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %"133", i64 %joinpointarg3), !dbg !581
  %call6 = tail call fastcc i64 @String_125_6cf2364d472c2667e3822ac759c31f3412758843a080229881bcffc5eb6f1d(i64 %joinpointarg1, i64 %call5), !dbg !581
  %call7 = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg3, i64 1), !dbg !581
  br label %joinpointcont, !dbg !581

else_block:                                       ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %"133"), !dbg !581
  ret i64 %joinpointarg1, !dbg !581
}

define internal fastcc i32 @_11_7741d73f424d83c9a2e8e5b6ce502e9a8d175614dae652f87835b573c0d09({} %"35") !dbg !583 {
entry:
  %call = tail call fastcc i32 @Task_err_16c9acb11420bb4864958cb65deec56be7d76275852725d2b6cfa6b292a31ee8(i32 1), !dbg !584
  ret i32 %call, !dbg !584
}

define internal fastcc i64 @Five_partOne_11c91aefaef6a044fe3437f0cd6133f5618564cb559aa842578acbaca75dd41(ptr %"91") !dbg !586 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !587
  %struct_field.unpack = load ptr, ptr %"91", align 8, !dbg !587
  %0 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !587
  %struct_field.elt4 = getelementptr inbounds %list.RocList, ptr %"91", i64 0, i32 1, !dbg !587
  %struct_field.unpack5 = load i64, ptr %struct_field.elt4, align 8, !dbg !587
  %1 = insertvalue %list.RocList %0, i64 %struct_field.unpack5, 1, !dbg !587
  %struct_field.elt6 = getelementptr inbounds %list.RocList, ptr %"91", i64 0, i32 2, !dbg !587
  %struct_field.unpack7 = load i64, ptr %struct_field.elt6, align 8, !dbg !587
  %struct_field8 = insertvalue %list.RocList %1, i64 %struct_field.unpack7, 2, !dbg !587
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"91", i64 0, i32 1, !dbg !587
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !587
  %2 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !587
  %struct_field1.elt9 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"91", i64 0, i32 1, i32 1, !dbg !587
  %struct_field1.unpack10 = load i64, ptr %struct_field1.elt9, align 8, !dbg !587
  %3 = insertvalue %list.RocList %2, i64 %struct_field1.unpack10, 1, !dbg !587
  %struct_field1.elt11 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"91", i64 0, i32 1, i32 2, !dbg !587
  %struct_field1.unpack12 = load i64, ptr %struct_field1.elt11, align 8, !dbg !587
  %struct_field113 = insertvalue %list.RocList %3, i64 %struct_field1.unpack12, 2, !dbg !587
  call fastcc void @Five_makeRules_7bc7b3ab839bcc84a286756163f821081944e9d993409f8654fbccc51f341d(%list.RocList %struct_field8, ptr nonnull %result_value), !dbg !587
  call fastcc void @"#Attr_#dec_2"(%list.RocList %struct_field8), !dbg !587
  %call = call fastcc %list.RocList @List_keepIf_481f1278f2de6c4b7025bbe3547d9acb112f26631793a1e4c8c76b99b179e0(%list.RocList %struct_field113, ptr nonnull %result_value), !dbg !587
  %call2 = call fastcc %list.RocList @List_keepOks_9cc9ac536c41c72f38d2273c43b034822641cbb47ea8853416c10d132561319(%list.RocList %call, {} zeroinitializer), !dbg !587
  call fastcc void @"#Attr_#dec_4"(%list.RocList %call), !dbg !587
  %call3 = call fastcc i64 @List_sum_1e4d2f1e6b4984301a1489b71481ade3a818d1fae80b8f87ea525c7bff923(%list.RocList %call2), !dbg !587
  call fastcc void @"#Attr_#dec_1"(%list.RocList %call2), !dbg !587
  ret i64 %call3, !dbg !587
}

define internal fastcc void @Inspect_custom_97cfd3a355d55fdb677bbf93838fe1592f750aa128169e250722fae532e291f(ptr %fn, ptr %0) !dbg !589 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %fn, i64 72, i1 false), !dbg !590
  ret void, !dbg !590
}

define internal fastcc i64 @Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1() !dbg !592 {
entry:
  %call = tail call fastcc i64 @Dict_maxSize_aafde219d9d91ee7a575a5efa6c6154f3d42c85beb7780b41b4510548f4aaf(), !dbg !593
  ret i64 %call, !dbg !593
}

define internal fastcc void @Parser_parsePartial_d598f04f24e92cd3b5f7ebf51a29bf23b1257441b9ab0b0179ec01984a0ce6a(%list.RocList %"246", %list.RocList %input, ptr %0) !dbg !595 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @String_90_2425fdec333e9c3446982981ac5215ad67fc78748e2a2c31633ab84a88eeb6b(%list.RocList %input, %list.RocList %"246", ptr nonnull %result_value), !dbg !596
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !596
  ret void, !dbg !596
}

define internal fastcc i64 @Dict_capacity_3c159ccc72c9f6c2f9b343f7ee15555614903dc98bb4bf9da1d235172245b(ptr %"728") !dbg !598 {
entry:
  %struct_field_access_record_2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"728", i64 0, i32 2, !dbg !599
  %struct_field = load i64, ptr %struct_field_access_record_2, align 8, !dbg !599
  %struct_field1.unpack = load ptr, ptr %"728", align 8, !dbg !599
  %0 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !599
  %struct_field1.elt3 = getelementptr inbounds %list.RocList, ptr %"728", i64 0, i32 1, !dbg !599
  %struct_field1.unpack4 = load i64, ptr %struct_field1.elt3, align 8, !dbg !599
  %1 = insertvalue %list.RocList %0, i64 %struct_field1.unpack4, 1, !dbg !599
  %struct_field1.elt5 = getelementptr inbounds %list.RocList, ptr %"728", i64 0, i32 2, !dbg !599
  %struct_field1.unpack6 = load i64, ptr %struct_field1.elt5, align 8, !dbg !599
  %struct_field17 = insertvalue %list.RocList %1, i64 %struct_field1.unpack6, 2, !dbg !599
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field17), !dbg !599
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"728", i64 0, i32 1, !dbg !599
  %struct_field2.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !599
  %2 = insertvalue %list.RocList poison, ptr %struct_field2.unpack, 0, !dbg !599
  %struct_field2.elt8 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"728", i64 0, i32 1, i32 1, !dbg !599
  %struct_field2.unpack9 = load i64, ptr %struct_field2.elt8, align 8, !dbg !599
  %3 = insertvalue %list.RocList %2, i64 %struct_field2.unpack9, 1, !dbg !599
  %struct_field2.elt10 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"728", i64 0, i32 1, i32 2, !dbg !599
  %struct_field2.unpack11 = load i64, ptr %struct_field2.elt10, align 8, !dbg !599
  %struct_field212 = insertvalue %list.RocList %3, i64 %struct_field2.unpack11, 2, !dbg !599
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field212), !dbg !599
  ret i64 %struct_field, !dbg !599
}

define internal fastcc %list.RocList @List_append_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57(%list.RocList %list, i64 %element) !dbg !601 {
entry:
  %call = tail call fastcc %list.RocList @List_reserve_1a20a86e49e98265a07f2e3520fd72f1d5cc4a4259e669f8b2acf756122080(%list.RocList %list, i64 1), !dbg !602
  %call1 = tail call fastcc %list.RocList @List_appendUnsafe_3bfae27b50cc70419dec89ef8da341b1287d7bb7b3c4bb2481ba28b17a8ec4(%list.RocList %call, i64 %element), !dbg !602
  ret %list.RocList %call1, !dbg !602
}

define internal fastcc %list.RocList @Dict_placeAndShiftUp_4e6df5a280208f8027d8c0e0fd95af1adf299ebd3666b6c48551dc0cb3c3214(%list.RocList %"138", { i32, i32 } %"139", i64 %"140") !dbg !604 {
entry:
  br label %joinpointcont, !dbg !605

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg = phi %list.RocList [ %"138", %entry ], [ %call4, %then_block ], !dbg !605
  %joinpointarg1 = phi { i32, i32 } [ %"139", %entry ], [ %insert_record_field7, %then_block ], !dbg !605
  %joinpointarg2 = phi i64 [ %"140", %entry ], [ %call9, %then_block ], !dbg !605
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %joinpointarg, i64 %joinpointarg2), !dbg !605
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !605
  %call3 = tail call fastcc i1 @Bool_isNotEq_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6(i32 %struct_field_access_record_1, i32 0), !dbg !605
  br i1 %call3, label %then_block, label %else_block, !dbg !605

then_block:                                       ; preds = %joinpointcont
  %call4 = tail call fastcc %list.RocList @List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1(%list.RocList %joinpointarg, i64 %joinpointarg2, { i32, i32 } %joinpointarg1), !dbg !605
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !605
  %struct_field_access_record_15 = extractvalue { i32, i32 } %call, 1, !dbg !605
  %call6 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %struct_field_access_record_15), !dbg !605
  %insert_record_field = insertvalue { i32, i32 } zeroinitializer, i32 %struct_field_access_record_0, 0, !dbg !605
  %insert_record_field7 = insertvalue { i32, i32 } %insert_record_field, i32 %call6, 1, !dbg !605
  %call8 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %call4), !dbg !605
  %call9 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg2, i64 %call8), !dbg !605
  br label %joinpointcont, !dbg !605

else_block:                                       ; preds = %joinpointcont
  %call10 = tail call fastcc %list.RocList @List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1(%list.RocList %joinpointarg, i64 %joinpointarg2, { i32, i32 } %joinpointarg1), !dbg !605
  ret %list.RocList %call10, !dbg !605
}

define internal fastcc void @Inspect_208_eccfa5306c669977807196608886f415cf9dc848c9f1d2534fa8e21fb61a(ptr %f1, %list.RocList %fields, ptr %0) !dbg !607 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @List_walk_4643e4e3b17ad449bf2144b916446512b17f621ba9fb35f1ed2ca53f5cb54e(%list.RocList %fields, ptr %f1, {} zeroinitializer, ptr nonnull %result_value), !dbg !608
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !608
  ret void, !dbg !608
}

define internal fastcc void @Dict_update_e7d224cfcafcc878740e4416f7931bf725f9fd3378f8c73d6a4dc1d8c8883f(ptr %"721", i64 %key, i64 %alter, ptr %0) !dbg !610 {
entry:
  %struct_alloca82 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %result_value81 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %result_value78 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %result_value67 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %struct_alloca61 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %result_value46 = alloca { [3 x i64], i8 }, align 8, !dbg !611
  %tag_alloca43 = alloca { [3 x i64], i8 }, align 8, !dbg !611
  %result_value42 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %struct_alloca36 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %struct_alloca30 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %result_value15 = alloca { [3 x i64], i8 }, align 8, !dbg !611
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !611
  %struct_field12 = alloca { [3 x i64], i8 }, align 8, !dbg !611
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !611
  %struct_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !611
  %struct_field.unpack = load ptr, ptr %"721", align 8, !dbg !611
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !611
  %struct_field.elt88 = getelementptr inbounds %list.RocList, ptr %"721", i64 0, i32 1, !dbg !611
  %struct_field.unpack89 = load i64, ptr %struct_field.elt88, align 8, !dbg !611
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack89, 1, !dbg !611
  %struct_field.elt90 = getelementptr inbounds %list.RocList, ptr %"721", i64 0, i32 2, !dbg !611
  %struct_field.unpack91 = load i64, ptr %struct_field.elt90, align 8, !dbg !611
  %struct_field92 = insertvalue %list.RocList %2, i64 %struct_field.unpack91, 2, !dbg !611
  tail call fastcc void @"#Attr_#inc_5"(%list.RocList %struct_field92, i64 1), !dbg !611
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"721", i64 0, i32 1, !dbg !611
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !611
  %3 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !611
  %struct_field1.elt93 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"721", i64 0, i32 1, i32 1, !dbg !611
  %struct_field1.unpack94 = load i64, ptr %struct_field1.elt93, align 8, !dbg !611
  %4 = insertvalue %list.RocList %3, i64 %struct_field1.unpack94, 1, !dbg !611
  %struct_field1.elt95 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"721", i64 0, i32 1, i32 2, !dbg !611
  %struct_field1.unpack96 = load i64, ptr %struct_field1.elt95, align 8, !dbg !611
  %struct_field197 = insertvalue %list.RocList %4, i64 %struct_field1.unpack96, 2, !dbg !611
  tail call fastcc void @"#Attr_#inc_7"(%list.RocList %struct_field197, i64 1), !dbg !611
  %struct_field_access_record_2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"721", i64 0, i32 2, !dbg !611
  %struct_field2 = load i64, ptr %struct_field_access_record_2, align 8, !dbg !611
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"721", i64 0, i32 3, !dbg !611
  %struct_field3 = load float, ptr %struct_field_access_record_3, align 4, !dbg !611
  %struct_field_access_record_4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"721", i64 0, i32 4, !dbg !611
  %struct_field4 = load i8, ptr %struct_field_access_record_4, align 1, !dbg !611
  store ptr %struct_field.unpack, ptr %struct_alloca, align 8, !dbg !611
  %struct_alloca.repack98 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !611
  store i64 %struct_field.unpack89, ptr %struct_alloca.repack98, align 8, !dbg !611
  %struct_alloca.repack100 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !611
  store i64 %struct_field.unpack91, ptr %struct_alloca.repack100, align 8, !dbg !611
  %struct_field_gep5 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, !dbg !611
  store ptr %struct_field1.unpack, ptr %struct_field_gep5, align 8, !dbg !611
  %struct_field_gep5.repack102 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !611
  store i64 %struct_field1.unpack94, ptr %struct_field_gep5.repack102, align 8, !dbg !611
  %struct_field_gep5.repack104 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !611
  store i64 %struct_field1.unpack96, ptr %struct_field_gep5.repack104, align 8, !dbg !611
  %struct_field_gep6 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 2, !dbg !611
  store i64 %struct_field2, ptr %struct_field_gep6, align 8, !dbg !611
  %struct_field_gep7 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 3, !dbg !611
  store float %struct_field3, ptr %struct_field_gep7, align 8, !dbg !611
  %struct_field_gep8 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 4, !dbg !611
  store i8 %struct_field4, ptr %struct_field_gep8, align 4, !dbg !611
  call fastcc void @Dict_find_9bb8deca757dc2ac2fb673c9939099338c6d1fb2aae6cee85b52f30d7d2b2d8(ptr nonnull %struct_alloca, i64 %key, ptr nonnull %result_value), !dbg !611
  %struct_field10 = load i64, ptr %result_value, align 8, !dbg !611
  %struct_field_access_record_111 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %result_value, i64 0, i32 1, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field12, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_111, i64 32, i1 false), !dbg !611
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %struct_field12, i64 0, i32 1, !dbg !611
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !611
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !611
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !611

then_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %struct_field12, align 8, !dbg !611
  %load_element.elt127 = getelementptr inbounds %list.RocList, ptr %struct_field12, i64 0, i32 1, !dbg !611
  %load_element.unpack128 = load i64, ptr %load_element.elt127, align 8, !dbg !611
  %load_element.elt129 = getelementptr inbounds %list.RocList, ptr %struct_field12, i64 0, i32 2, !dbg !611
  %load_element.unpack130 = load i64, ptr %load_element.elt129, align 8, !dbg !611
  store ptr %load_element.unpack, ptr %tag_alloca, align 8, !dbg !611
  %tag_alloca.repack132 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !611
  store i64 %load_element.unpack128, ptr %tag_alloca.repack132, align 8, !dbg !611
  %tag_alloca.repack134 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !611
  store i64 %load_element.unpack130, ptr %tag_alloca.repack134, align 8, !dbg !611
  %tag_id_ptr14 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !611
  store i8 1, ptr %tag_id_ptr14, align 8, !dbg !611
  call fastcc void @Five_42_109527f59dc22e69fc7d12a59cfca3745c5b2db3347623de6ba9cc2a77892e1(ptr nonnull %tag_alloca, i64 %alter, ptr nonnull %result_value15), !dbg !611
  %tag_id_ptr16 = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value15, i64 0, i32 1, !dbg !611
  %load_tag_id17 = load i8, ptr %tag_id_ptr16, align 8, !dbg !611
  %eq_u818 = icmp eq i8 %load_tag_id17, 1, !dbg !611
  br i1 %eq_u818, label %then_block20, label %else_block21, !dbg !611

else_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_10"(ptr nonnull %struct_field12), !dbg !611
  %tag_id_ptr45 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca43, i64 0, i32 1, !dbg !611
  store i8 0, ptr %tag_id_ptr45, align 8, !dbg !611
  call fastcc void @Five_42_109527f59dc22e69fc7d12a59cfca3745c5b2db3347623de6ba9cc2a77892e1(ptr nonnull %tag_alloca43, i64 %alter, ptr nonnull %result_value46), !dbg !611
  %tag_id_ptr47 = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value46, i64 0, i32 1, !dbg !611
  %load_tag_id48 = load i8, ptr %tag_id_ptr47, align 8, !dbg !611
  %eq_u849 = icmp eq i8 %load_tag_id48, 1, !dbg !611
  br i1 %eq_u849, label %then_block51, label %else_block52, !dbg !611

then_block20:                                     ; preds = %then_block
  %load_element24.unpack = load ptr, ptr %result_value15, align 8, !dbg !611
  %5 = insertvalue %list.RocList poison, ptr %load_element24.unpack, 0, !dbg !611
  %load_element24.elt144 = getelementptr inbounds %list.RocList, ptr %result_value15, i64 0, i32 1, !dbg !611
  %load_element24.unpack145 = load i64, ptr %load_element24.elt144, align 8, !dbg !611
  %6 = insertvalue %list.RocList %5, i64 %load_element24.unpack145, 1, !dbg !611
  %load_element24.elt146 = getelementptr inbounds %list.RocList, ptr %result_value15, i64 0, i32 2, !dbg !611
  %load_element24.unpack147 = load i64, ptr %load_element24.elt146, align 8, !dbg !611
  %load_element24148 = insertvalue %list.RocList %6, i64 %load_element24.unpack147, 2, !dbg !611
  %call = call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %struct_field92, i64 %struct_field10), !dbg !611
  %struct_field_access_record_025 = extractvalue { i32, i32 } %call, 0, !dbg !611
  %call26 = call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_025), !dbg !611
  %insert_record_field27 = insertvalue { i64, %list.RocList } zeroinitializer, i64 %key, 0, !dbg !611
  %insert_record_field28 = insertvalue { i64, %list.RocList } %insert_record_field27, %list.RocList %load_element24148, 1, !dbg !611
  %call29 = call fastcc %list.RocList @List_set_13b85edde3cd334a6265af1614664111ffe13ba3b2be97d0f8e38d9c799cb7(%list.RocList %struct_field197, i64 %call26, { i64, %list.RocList } %insert_record_field28), !dbg !611
  store ptr %struct_field.unpack, ptr %struct_alloca30, align 8, !dbg !611
  %struct_alloca30.repack149 = getelementptr inbounds %list.RocList, ptr %struct_alloca30, i64 0, i32 1, !dbg !611
  store i64 %struct_field.unpack89, ptr %struct_alloca30.repack149, align 8, !dbg !611
  %struct_alloca30.repack151 = getelementptr inbounds %list.RocList, ptr %struct_alloca30, i64 0, i32 2, !dbg !611
  store i64 %struct_field.unpack91, ptr %struct_alloca30.repack151, align 8, !dbg !611
  %struct_field_gep32 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca30, i64 0, i32 1, !dbg !611
  %call29.elt = extractvalue %list.RocList %call29, 0, !dbg !611
  store ptr %call29.elt, ptr %struct_field_gep32, align 8, !dbg !611
  %struct_field_gep32.repack153 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca30, i64 0, i32 1, i32 1, !dbg !611
  %call29.elt154 = extractvalue %list.RocList %call29, 1, !dbg !611
  store i64 %call29.elt154, ptr %struct_field_gep32.repack153, align 8, !dbg !611
  %struct_field_gep32.repack155 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca30, i64 0, i32 1, i32 2, !dbg !611
  %call29.elt156 = extractvalue %list.RocList %call29, 2, !dbg !611
  store i64 %call29.elt156, ptr %struct_field_gep32.repack155, align 8, !dbg !611
  %struct_field_gep33 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca30, i64 0, i32 2, !dbg !611
  store i64 %struct_field2, ptr %struct_field_gep33, align 8, !dbg !611
  %struct_field_gep34 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca30, i64 0, i32 3, !dbg !611
  store float %struct_field3, ptr %struct_field_gep34, align 8, !dbg !611
  %struct_field_gep35 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca30, i64 0, i32 4, !dbg !611
  store i8 %struct_field4, ptr %struct_field_gep35, align 4, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca30, i64 64, i1 false), !dbg !611
  ret void, !dbg !611

else_block21:                                     ; preds = %then_block
  call fastcc void @"#Attr_#dec_9"(ptr nonnull %result_value15), !dbg !611
  store ptr %struct_field.unpack, ptr %struct_alloca36, align 8, !dbg !611
  %struct_alloca36.repack136 = getelementptr inbounds %list.RocList, ptr %struct_alloca36, i64 0, i32 1, !dbg !611
  store i64 %struct_field.unpack89, ptr %struct_alloca36.repack136, align 8, !dbg !611
  %struct_alloca36.repack138 = getelementptr inbounds %list.RocList, ptr %struct_alloca36, i64 0, i32 2, !dbg !611
  store i64 %struct_field.unpack91, ptr %struct_alloca36.repack138, align 8, !dbg !611
  %struct_field_gep38 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca36, i64 0, i32 1, !dbg !611
  store ptr %struct_field1.unpack, ptr %struct_field_gep38, align 8, !dbg !611
  %struct_field_gep38.repack140 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca36, i64 0, i32 1, i32 1, !dbg !611
  store i64 %struct_field1.unpack94, ptr %struct_field_gep38.repack140, align 8, !dbg !611
  %struct_field_gep38.repack142 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca36, i64 0, i32 1, i32 2, !dbg !611
  store i64 %struct_field1.unpack96, ptr %struct_field_gep38.repack142, align 8, !dbg !611
  %struct_field_gep39 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca36, i64 0, i32 2, !dbg !611
  store i64 %struct_field2, ptr %struct_field_gep39, align 8, !dbg !611
  %struct_field_gep40 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca36, i64 0, i32 3, !dbg !611
  store float %struct_field3, ptr %struct_field_gep40, align 8, !dbg !611
  %struct_field_gep41 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca36, i64 0, i32 4, !dbg !611
  store i8 %struct_field4, ptr %struct_field_gep41, align 4, !dbg !611
  call fastcc void @Dict_removeBucket_7ceb2e607d153edd175217b82e8ded113c6e4df27e27777d9f9694c716aa427(ptr nonnull %struct_alloca36, i64 %struct_field10, ptr nonnull %result_value42), !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value42, i64 64, i1 false), !dbg !611
  ret void, !dbg !611

then_block51:                                     ; preds = %else_block
  %load_element55.unpack = load ptr, ptr %result_value46, align 8, !dbg !611
  %7 = insertvalue %list.RocList poison, ptr %load_element55.unpack, 0, !dbg !611
  %load_element55.elt114 = getelementptr inbounds %list.RocList, ptr %result_value46, i64 0, i32 1, !dbg !611
  %load_element55.unpack115 = load i64, ptr %load_element55.elt114, align 8, !dbg !611
  %8 = insertvalue %list.RocList %7, i64 %load_element55.unpack115, 1, !dbg !611
  %load_element55.elt116 = getelementptr inbounds %list.RocList, ptr %result_value46, i64 0, i32 2, !dbg !611
  %load_element55.unpack117 = load i64, ptr %load_element55.elt116, align 8, !dbg !611
  %load_element55118 = insertvalue %list.RocList %8, i64 %load_element55.unpack117, 2, !dbg !611
  %call56 = call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %struct_field197), !dbg !611
  %call57 = call fastcc i1 @Num_isGte_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363(i64 %call56, i64 %struct_field2), !dbg !611
  br i1 %call57, label %then_block59, label %else_block60, !dbg !611

else_block52:                                     ; preds = %else_block
  call fastcc void @"#Attr_#dec_9"(ptr nonnull %result_value46), !dbg !611
  store ptr %struct_field.unpack, ptr %struct_alloca82, align 8, !dbg !611
  %struct_alloca82.repack106 = getelementptr inbounds %list.RocList, ptr %struct_alloca82, i64 0, i32 1, !dbg !611
  store i64 %struct_field.unpack89, ptr %struct_alloca82.repack106, align 8, !dbg !611
  %struct_alloca82.repack108 = getelementptr inbounds %list.RocList, ptr %struct_alloca82, i64 0, i32 2, !dbg !611
  store i64 %struct_field.unpack91, ptr %struct_alloca82.repack108, align 8, !dbg !611
  %struct_field_gep84 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca82, i64 0, i32 1, !dbg !611
  store ptr %struct_field1.unpack, ptr %struct_field_gep84, align 8, !dbg !611
  %struct_field_gep84.repack110 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca82, i64 0, i32 1, i32 1, !dbg !611
  store i64 %struct_field1.unpack94, ptr %struct_field_gep84.repack110, align 8, !dbg !611
  %struct_field_gep84.repack112 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca82, i64 0, i32 1, i32 2, !dbg !611
  store i64 %struct_field1.unpack96, ptr %struct_field_gep84.repack112, align 8, !dbg !611
  %struct_field_gep85 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca82, i64 0, i32 2, !dbg !611
  store i64 %struct_field2, ptr %struct_field_gep85, align 8, !dbg !611
  %struct_field_gep86 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca82, i64 0, i32 3, !dbg !611
  store float %struct_field3, ptr %struct_field_gep86, align 8, !dbg !611
  %struct_field_gep87 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca82, i64 0, i32 4, !dbg !611
  store i8 %struct_field4, ptr %struct_field_gep87, align 4, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca82, i64 64, i1 false), !dbg !611
  ret void, !dbg !611

then_block59:                                     ; preds = %then_block51
  store ptr %struct_field.unpack, ptr %struct_alloca61, align 8, !dbg !611
  %struct_alloca61.repack119 = getelementptr inbounds %list.RocList, ptr %struct_alloca61, i64 0, i32 1, !dbg !611
  store i64 %struct_field.unpack89, ptr %struct_alloca61.repack119, align 8, !dbg !611
  %struct_alloca61.repack121 = getelementptr inbounds %list.RocList, ptr %struct_alloca61, i64 0, i32 2, !dbg !611
  store i64 %struct_field.unpack91, ptr %struct_alloca61.repack121, align 8, !dbg !611
  %struct_field_gep63 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca61, i64 0, i32 1, !dbg !611
  store ptr %struct_field1.unpack, ptr %struct_field_gep63, align 8, !dbg !611
  %struct_field_gep63.repack123 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca61, i64 0, i32 1, i32 1, !dbg !611
  store i64 %struct_field1.unpack94, ptr %struct_field_gep63.repack123, align 8, !dbg !611
  %struct_field_gep63.repack125 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca61, i64 0, i32 1, i32 2, !dbg !611
  store i64 %struct_field1.unpack96, ptr %struct_field_gep63.repack125, align 8, !dbg !611
  %struct_field_gep64 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca61, i64 0, i32 2, !dbg !611
  store i64 %struct_field2, ptr %struct_field_gep64, align 8, !dbg !611
  %struct_field_gep65 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca61, i64 0, i32 3, !dbg !611
  store float %struct_field3, ptr %struct_field_gep65, align 8, !dbg !611
  %struct_field_gep66 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca61, i64 0, i32 4, !dbg !611
  store i8 %struct_field4, ptr %struct_field_gep66, align 4, !dbg !611
  call fastcc void @Dict_insert_aacdfa21c937a3152a4c9abafa557bcab3033c1362c20c33c558b64d99d3e5(ptr nonnull %struct_alloca61, i64 %key, %list.RocList %load_element55118, ptr nonnull %result_value67), !dbg !611
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_element55118), !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value67, i64 64, i1 false), !dbg !611
  ret void, !dbg !611

else_block60:                                     ; preds = %then_block51
  %call68 = call fastcc i64 @Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c(i64 %key), !dbg !611
  %call69 = call fastcc i32 @Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68(i64 %call68), !dbg !611
  %call70 = call fastcc i64 @Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0(i64 %call68, i8 %struct_field4), !dbg !611
  %call71 = call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %struct_field92), !dbg !611
  %call72 = call fastcc i64 @Dict_circularDist_a51293a4c3ce80beb92fd22c82b6b69bd26ee8bc815b483e3cf291f486236c(i64 %call70, i64 %struct_field10, i64 %call71), !dbg !611
  %call73 = call fastcc i64 @Dict_findManualUnrolls_e4a1eb19d38152fc193a183edc36566d275fa494bf9c69e26c29c318cc289d0(), !dbg !611
  %call74 = call fastcc i1 @Num_isLte_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df(i64 %call72, i64 %call73), !dbg !611
  br i1 %call74, label %then_block76, label %else_block77, !dbg !611

then_block76:                                     ; preds = %else_block60
  call fastcc void @Dict_insertHelper_b57223634213b1c687e1cf06fef47be7eed4c64d12c154ffb6abc557b2b473(%list.RocList %struct_field92, %list.RocList %struct_field197, i64 %call70, i32 %call69, i64 %key, %list.RocList %load_element55118, i64 %struct_field2, float %struct_field3, i8 %struct_field4, ptr nonnull %result_value78), !dbg !611
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_element55118), !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value78, i64 64, i1 false), !dbg !611
  ret void, !dbg !611

else_block77:                                     ; preds = %else_block60
  %call79 = call fastcc i32 @Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(i64 %call72), !dbg !611
  %call80 = call fastcc i32 @Dict_incrementDistN_544c19588062ed4289757939f8edf854589b8a37c6e1b564139c3298a34d6(i32 %call69, i32 %call79), !dbg !611
  call fastcc void @Dict_insertHelper_b57223634213b1c687e1cf06fef47be7eed4c64d12c154ffb6abc557b2b473(%list.RocList %struct_field92, %list.RocList %struct_field197, i64 %struct_field10, i32 %call80, i64 %key, %list.RocList %load_element55118, i64 %struct_field2, float %struct_field3, i8 %struct_field4, ptr nonnull %result_value81), !dbg !611
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_element55118), !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value81, i64 64, i1 false), !dbg !611
  ret void, !dbg !611
}

define internal fastcc void @Parser_parsePartial_4b2fc33c1d582e1b56b6dd2bdcc2a1fe41a8941cb28841b07ac32da2bed91e69(ptr %"246", %list.RocList %input, ptr %0) !dbg !613 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_153_e3772fdac2658fe707f6fdbe88de56aae9be7164372b6f69cc054cd20261b(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !614
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !614
  ret void, !dbg !614
}

define internal fastcc %list.RocList @List_appendUnsafe_4f1fdebc72623b7987dfbf57d7b81537b885c9e4ce317a63dbf262856adf(%list.RocList %"#arg1", %list.RocList %"#arg2") !dbg !616 {
entry:
  %list_alloca115 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca %list.RocList, align 8
  %"#arg2.elt" = extractvalue %list.RocList %"#arg2", 0, !dbg !617
  store ptr %"#arg2.elt", ptr %element_to_pass_as_opaque, align 8, !dbg !617
  %element_to_pass_as_opaque.repack2 = getelementptr inbounds %list.RocList, ptr %element_to_pass_as_opaque, i64 0, i32 1, !dbg !617
  %"#arg2.elt3" = extractvalue %list.RocList %"#arg2", 1, !dbg !617
  store i64 %"#arg2.elt3", ptr %element_to_pass_as_opaque.repack2, align 8, !dbg !617
  %element_to_pass_as_opaque.repack4 = getelementptr inbounds %list.RocList, ptr %element_to_pass_as_opaque, i64 0, i32 2, !dbg !617
  %"#arg2.elt5" = extractvalue %list.RocList %"#arg2", 2, !dbg !617
  store i64 %"#arg2.elt5", ptr %element_to_pass_as_opaque.repack4, align 8, !dbg !617
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !617
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !617
  %list_alloca1.repack6 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !617
  %"#arg1.elt7" = extractvalue %list.RocList %"#arg1", 1, !dbg !617
  store i64 %"#arg1.elt7", ptr %list_alloca1.repack6, align 8, !dbg !617
  %list_alloca1.repack8 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !617
  %"#arg1.elt9" = extractvalue %list.RocList %"#arg1", 2, !dbg !617
  store i64 %"#arg1.elt9", ptr %list_alloca1.repack8, align 8, !dbg !617
  call void @llvm.experimental.noalias.scope.decl(metadata !619), !dbg !617
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca115), !dbg !617
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca115, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !617
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca115, i64 8, !dbg !617
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !617, !noalias !619
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca115, i64 16, !dbg !617
  %.sroa.01.0.copyload.i = load ptr, ptr %list_alloca115, align 8, !dbg !617, !noalias !619
  %.sroa.5.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !617, !noalias !619
  %0 = icmp ne ptr %.sroa.01.0.copyload.i, null, !dbg !617
  br i1 %0, label %1, label %roc_builtins.list.append_unsafe.exit, !dbg !617

1:                                                ; preds = %entry
  %2 = mul nuw i64 %.sroa.1.0.copyload.i, 24, !dbg !617
  %3 = getelementptr inbounds i8, ptr %.sroa.01.0.copyload.i, i64 %2, !dbg !617
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr (%list.RocList, ptr null, i32 1) to i64), i1 false), !dbg !622, !noalias !619
  br label %roc_builtins.list.append_unsafe.exit, !dbg !617

roc_builtins.list.append_unsafe.exit:             ; preds = %entry, %1
  %4 = add nuw i64 %.sroa.1.0.copyload.i, 1, !dbg !617
  store ptr %.sroa.01.0.copyload.i, ptr %list_alloca, align 8, !dbg !617, !alias.scope !619
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !617
  store i64 %4, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !617, !alias.scope !619
  %.sroa.5.0..sroa_idx5.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !617
  store i64 %.sroa.5.0.copyload.i, ptr %.sroa.5.0..sroa_idx5.i, align 8, !dbg !617, !alias.scope !619
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca115), !dbg !617
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !617
  %5 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !617
  %load_list.elt10 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !617
  %load_list.unpack11 = load i64, ptr %load_list.elt10, align 8, !dbg !617
  %6 = insertvalue %list.RocList %5, i64 %load_list.unpack11, 1, !dbg !617
  %load_list.elt12 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !617
  %load_list.unpack13 = load i64, ptr %load_list.elt12, align 8, !dbg !617
  %load_list14 = insertvalue %list.RocList %6, i64 %load_list.unpack13, 2, !dbg !617
  ret %list.RocList %load_list14, !dbg !617
}

define internal fastcc void @Result_mapErr_99ccc6754e07ea7cffe47524633bfb91dd0f5a5f04cc85ed764577b4b3a23(ptr %result, ptr %transform, ptr %0) !dbg !626 {
entry:
  %tag_alloca6 = alloca { [9 x i64], i8 }, align 8, !dbg !627
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !627
  %result_value = alloca { [8 x i64], i8 }, align 8, !dbg !627
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !627
  %load_element = alloca %str.RocStr, align 8, !dbg !627
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !627
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !627
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !627
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !627

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_11"(ptr %transform), !dbg !627
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !627
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !627
  %load_tag_to_put_in_struct.elt9 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !627
  %load_tag_to_put_in_struct.unpack10 = load i64, ptr %load_tag_to_put_in_struct.elt9, align 8, !dbg !627
  %load_tag_to_put_in_struct.elt11 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !627
  %load_tag_to_put_in_struct.unpack12 = load i64, ptr %load_tag_to_put_in_struct.elt11, align 8, !dbg !627
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !627
  %tag_alloca.repack14 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !627
  store i64 %load_tag_to_put_in_struct.unpack10, ptr %tag_alloca.repack14, align 8, !dbg !627
  %tag_alloca.repack16 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !627
  store i64 %load_tag_to_put_in_struct.unpack12, ptr %tag_alloca.repack16, align 8, !dbg !627
  %tag_id_ptr2 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !627
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !627
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !627
  ret void, !dbg !627

else_block:                                       ; preds = %entry
  %load_element5 = load { i64, i8 }, ptr %result, align 8, !dbg !627
  call fastcc void @Path_105_7cedde61e03cdc658cc4f3ee93bcb22d43ba6377e16d3385dc1646ec68353({ i64, i8 } %load_element5, ptr %transform, ptr nonnull %result_value), !dbg !627
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !627
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca6, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !627
  %tag_id_ptr8 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca6, i64 0, i32 1, !dbg !627
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !627
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca6, i64 80, i1 false), !dbg !627
  ret void, !dbg !627
}

define internal fastcc void @Inspect_275_8ead792afbb7295a7a6f746f03a37944bab1f8fd38fb733c7a6d5776a8f(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !629 {
entry:
  %result_value2 = alloca %str.RocStr, align 8, !dbg !630
  %result_value = alloca %str.RocStr, align 8, !dbg !630
  %load_element = load i64, ptr %"#arg_closure", align 8, !dbg !630
  call fastcc void @Num_toStr_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(i64 %load_element, ptr nonnull %result_value), !dbg !630
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %result_value, ptr nonnull %result_value2), !dbg !630
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value), !dbg !630
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value2, i64 24, i1 false), !dbg !630
  ret void, !dbg !630
}

define internal fastcc i1 @Num_isLte_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a(i8 %"#arg1", i8 %"#arg2") !dbg !632 {
entry:
  %lte_uint = icmp ule i8 %"#arg1", %"#arg2", !dbg !633
  ret i1 %lte_uint, !dbg !633
}

define internal fastcc i1 @Five_83_e95211bde2283defe545e72d738137b8d7082e1cb419ffde6603c1dfde96f(%list.RocList %update, ptr %rulesDict) !dbg !635 {
entry:
  %call = tail call fastcc i1 @Five_checkUpdate_7eba3577d569e9be393ebf468d8c576e6850d52df0fe8bf3dca1c1a43aa9b9(ptr %rulesDict, %list.RocList %update), !dbg !636
  %call1 = tail call fastcc i1 @Bool_not_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3(i1 %call), !dbg !636
  ret i1 %call1, !dbg !636
}

define internal fastcc { %str.RocStr, {} } @Stdout_line_bebbb589a83a432de7026fc8b274e9febb5d3770872da3be54e19711abf48c(ptr %str) !dbg !638 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @PlatformTasks_stdoutLine_abd3f25d72523f289bd425f520c9e8c780b1b6123fca48b121ea6d118bfcfeae(ptr %str, ptr nonnull %result_value), !dbg !639
  %call = call fastcc { %str.RocStr, {} } @Task_mapErr_73621a7e9aaab76881ccc8710befe1fe443c7c7e83e6432dae922774dac9356(ptr nonnull %result_value, {} zeroinitializer), !dbg !639
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value), !dbg !639
  ret { %str.RocStr, {} } %call, !dbg !639
}

define internal fastcc void @String_strFromUtf8_46cc5767571b90625b30018eaab612bec9afa9e9b65ec58408e442cd305a(%list.RocList %rawStr, ptr %0) !dbg !641 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Str_fromUtf8_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2(%list.RocList %rawStr, ptr nonnull %result_value), !dbg !642
  store ptr getelementptr inbounds ([121 x i8], ptr @_str_literal_13132936432349333104, i64 0, i64 8), ptr %const_str_store, align 8, !dbg !642
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !642
  store i64 113, ptr %const_str_store.repack2, align 8, !dbg !642
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !642
  store i64 113, ptr %const_str_store.repack3, align 8, !dbg !642
  call fastcc void @Result_withDefault_0ecd2fa884bf65d7bc12fe6d21fb068cfa330b949298476bb016904fd3f(ptr nonnull %result_value, ptr nonnull %const_str_store, ptr nonnull %result_value1), !dbg !642
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !642
  ret void, !dbg !642
}

define internal fastcc void @List_walk_4643e4e3b17ad449bf2144b916446512b17f621ba9fb35f1ed2ca53f5cb54e(%list.RocList %list, ptr %init, {} %func, ptr %0) !dbg !644 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !645
  %call = tail call fastcc i64 @List_len_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4(%list.RocList %list), !dbg !645
  call fastcc void @List_walkHelp_583276bf45a8e97f112dfbc4f4d4d2a42a1119a510af9e76a5cba40a368d0(%list.RocList %list, ptr %init, {} %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !645
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !645
  ret void, !dbg !645
}

define internal fastcc void @List_walk_47379a71f6fa75b326383965b5622141f57df12cc22d7140acdf38f0ac8dbc6d(%list.RocList %list, ptr %init, {} %func, ptr %0) !dbg !647 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !648
  %call = tail call fastcc i64 @List_len_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140(%list.RocList %list), !dbg !648
  call fastcc void @List_walkHelp_8719a5fa4a4d2d7fe17773695c6c6d3ecd8b7cfffd135c8d4ca89f29f876d1f(%list.RocList %list, ptr %init, {} %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !648
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !648
  ret void, !dbg !648
}

define internal fastcc {} @Parser_const_30481fcf7c8adc2224aef215aeafd160ca9331f1e475fdfcc945bd7c07dcc({} %val) !dbg !650 {
entry:
  %call = tail call fastcc {} @Parser_buildPrimitiveParser_11f55677694953d434d89b36eb7efc37feb0babdbd56c97251c7dbee733c868({} %val), !dbg !651
  ret {} %call, !dbg !651
}

define internal fastcc { {}, {} } @Parser_buildPrimitiveParser_bb464f7974473b223db683972315b55bb85ee4c998ccde2011e4f189572a27({ {}, {} } %fun) !dbg !653 {
entry:
  ret { {}, {} } %fun, !dbg !654
}

define internal fastcc void @Parser_parsePartial_e91c801814dfc76e29f4b9c8a4ab972655104646e410533bc7e1e4608cc95e(ptr %"246", %list.RocList %input, ptr %0) !dbg !656 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_153_b48ea28ed2a1db4f94b775904dbb14352478e946b403cf7699dfabdbbc69(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !657
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !657
  ret void, !dbg !657
}

define internal fastcc void @List_getUnsafe_3efb3241b6f76bcf29426c5d5647f69b665c3ac3b1fc474c237e0eea46afd1(%list.RocList %"#arg1", i64 %"#arg2", ptr %0) !dbg !659 {
entry:
  %list_get_load_element = alloca %str.RocStr, align 8, !dbg !660
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !660
  %list_get_element = getelementptr inbounds %str.RocStr, ptr %read_list_ptr, i64 %"#arg2", !dbg !660
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_get_load_element, ptr noundef nonnull align 8 dereferenceable(24) %list_get_element, i64 24, i1 false), !dbg !660
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %list_get_load_element, i64 24, i1 false), !dbg !660
  ret void, !dbg !660
}

define internal fastcc { i64, i64 } @List_getUnsafe_f752fd971dee73f4bef39e126f15a0a84437112755ca589db8702463ce739a(%list.RocList %"#arg1", i64 %"#arg2") !dbg !662 {
entry:
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !663
  %list_get_element = getelementptr inbounds { i64, i64 }, ptr %read_list_ptr, i64 %"#arg2", !dbg !663
  %list_get_load_element.unpack = load i64, ptr %list_get_element, align 8, !dbg !663
  %0 = insertvalue { i64, i64 } poison, i64 %list_get_load_element.unpack, 0, !dbg !663
  %list_get_load_element.elt1 = getelementptr inbounds { i64, i64 }, ptr %read_list_ptr, i64 %"#arg2", i32 1, !dbg !663
  %list_get_load_element.unpack2 = load i64, ptr %list_get_load_element.elt1, align 8, !dbg !663
  %list_get_load_element3 = insertvalue { i64, i64 } %0, i64 %list_get_load_element.unpack2, 1, !dbg !663
  ret { i64, i64 } %list_get_load_element3, !dbg !663
}

define internal fastcc void @Inspect_213_1d346aa605d9beef3d3c8b59d397858b899a3c7efdcede8d0efd4953334f936(ptr %x, ptr %inspector, ptr %0) !dbg !665 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_apply_82d12b6b12b8099eecd17c66fbb6ef41a8137f8c1ef74478e7bee978be8f9(ptr %inspector, ptr %x, ptr nonnull %result_value), !dbg !666
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !666
  ret void, !dbg !666
}

define internal fastcc void @Parser_parsePartial_aef91e3dd391f968eda86d59248397ec1f818975eed3ca18c01e0fd70e61a24(ptr %"246", %list.RocList %input, ptr %0) !dbg !668 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_52_7768ccf3aac525a48d7ee5a83d5cf6f5cad326c64a1cd15978c51c27333f5(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !669
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !669
  ret void, !dbg !669
}

define internal fastcc void @Task_46_80e4236cec7ce53ad94a63f0cd85be177651d368effb21dd2f6c26944faf0({} %"120", ptr %"#arg_closure", ptr %0) !dbg !671 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !672
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !672
  %load_element7 = alloca { [8 x i64], i8 }, align 8, !dbg !672
  %result_value4 = alloca { [9 x i64], i8 }, align 8, !dbg !672
  %result_value3 = alloca { { [9 x i64], i8 }, {} }, align 8, !dbg !672
  %load_element = alloca %str.RocStr, align 8, !dbg !672
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !672
  %struct_field1 = alloca { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, align 8, !dbg !672
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %struct_field1, ptr noundef nonnull align 8 dereferenceable(88) %"#arg_closure", i64 88, i1 false), !dbg !672
  call fastcc void @Task_46_d4e04963c1a9b3df23c4774ff3fe4377b225218f1fb354bb6496ef3b441cfd31({} zeroinitializer, ptr nonnull %struct_field1, ptr nonnull %result_value), !dbg !672
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !672
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !672
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !672
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !672

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !672
  call fastcc void @Five_14_4c338574d6e8ce6a38c44e9aa2440d050fc925f9a5e674c38f9b97d8b1bf50(ptr nonnull %load_element, ptr nonnull %result_value3), !dbg !672
  call fastcc void @Task_46_521c32b4d5a5f51c42df45f129765f7c9b82531da49c872d42a31b733f24({} zeroinitializer, ptr nonnull %result_value3, ptr nonnull %result_value4), !dbg !672
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value4, i64 80, i1 false), !dbg !672
  ret void, !dbg !672

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element7, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !672
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %load_element7, i64 72, i1 false), !dbg !672
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !672
  %tag_id_ptr8 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !672
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !672
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !672
  ret void, !dbg !672
}

define internal fastcc i64 @List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6(%list.RocList %"#arg1") !dbg !674 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !675
  ret i64 %list_len, !dbg !675
}

define internal fastcc void @Parser_parsePartial_8ce35b34d71cf4b9b0a07273d98ed25775d2f26838242d0ab84e6f1473c5fd0({} %"246", %list.RocList %input, ptr %0) !dbg !677 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Parser_52_a17e6e9772c93366d74c78ae4861b6e90ec7dc88cf5c811d750abdb7591c0(%list.RocList %input, {} %"246", ptr nonnull %result_value), !dbg !678
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !678
  ret void, !dbg !678
}

define internal fastcc void @Path_readUtf8_7d6ab6247b40c168eace692941939f47edb122c3e1c626b68190a91adae921(ptr %path, ptr %0) !dbg !680 {
entry:
  %result_value2 = alloca { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, align 8, !dbg !681
  %result_value = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !681
  tail call fastcc void @"#Attr_#inc_11"(ptr %path, i64 2), !dbg !681
  %call = tail call fastcc %list.RocList @InternalPath_toBytes_a3d7eafdc270189a494a8da67ab2d44f3e57be0339c8d0479ea58f14792c5(ptr %path), !dbg !681
  %call1 = tail call fastcc %list.RocList @PlatformTasks_fileReadBytes_cd1c55e7b5398038f31ecfb0f47f579e5ab8039b49d1583d05f52b58fff1491(%list.RocList %call), !dbg !681
  call fastcc void @Task_mapErr_dac1828a559851ccf54a9d617bdd3b2b62cfa65d7d16b1259bc78fc7c2e1(%list.RocList %call1, ptr %path, ptr nonnull %result_value), !dbg !681
  call fastcc void @"#Attr_#dec_12"(%list.RocList %call1), !dbg !681
  call fastcc void @Task_await_adba20621e2783b1b4e8a9e85923f48be6b39ffdde63c7f316be1a8303363(ptr nonnull %result_value, ptr %path, ptr nonnull %result_value2), !dbg !681
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %result_value2, i64 88, i1 false), !dbg !681
  ret void, !dbg !681
}

define internal fastcc i1 @Bool_isNotEq_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34(i64 %a, i64 %b) !dbg !683 {
entry:
  %call = tail call fastcc i1 @Bool_structuralNotEq_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565(i64 %a, i64 %b), !dbg !684
  ret i1 %call, !dbg !684
}

define internal fastcc %list.RocList @List_walkWithIndexHelp_1b6b9e2f2c8025d6941d1d79426973c1ba899598ef8eecc9bea3f5f3657b4477(%list.RocList %"151", %list.RocList %"152", i8 %"153", i64 %"154", i64 %"155") !dbg !686 {
entry:
  tail call fastcc void @"#Attr_#inc_7"(%list.RocList %"151", i64 1), !dbg !687
  br label %joinpointcont, !dbg !687

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi %list.RocList [ %"152", %entry ], [ %call6, %then_block ], !dbg !687
  %joinpointarg3 = phi i64 [ %"154", %entry ], [ %call7, %then_block ], !dbg !687
  %call = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg3, i64 %"155"), !dbg !687
  br i1 %call, label %then_block, label %else_block, !dbg !687

then_block:                                       ; preds = %joinpointcont
  %call5 = tail call fastcc { i64, %list.RocList } @List_getUnsafe_48c2caee6f1010356bbec8845a6ee45f2928c63eece16acf25dc3f84dc5f6(%list.RocList %"151", i64 %joinpointarg3), !dbg !687
  tail call fastcc void @"#Attr_#inc_8"({ i64, %list.RocList } %call5, i64 1), !dbg !687
  %call6 = tail call fastcc %list.RocList @Dict_406_44a259a1c661ce1c71dd8d8d41c4dcf9371428a2eb6ae0adff12f61349c7dc(%list.RocList %joinpointarg1, { i64, %list.RocList } %call5, i64 %joinpointarg3, i8 %"153"), !dbg !687
  %call7 = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg3, i64 1), !dbg !687
  br label %joinpointcont, !dbg !687

else_block:                                       ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %"151"), !dbg !687
  ret %list.RocList %joinpointarg1, !dbg !687
}

define internal fastcc i1 @Five_68_fb88268d1bcc68db321efdaf1d83e34d3ebeddaf65266665b5d581ee1c75c(%list.RocList %update, ptr %rulesDict) !dbg !689 {
entry:
  %call = tail call fastcc i1 @Five_checkUpdate_7eba3577d569e9be393ebf468d8c576e6850d52df0fe8bf3dca1c1a43aa9b9(ptr %rulesDict, %list.RocList %update), !dbg !690
  ret i1 %call, !dbg !690
}

define internal fastcc { %str.RocStr, {} } @Five_19_a7df5ce4eebb1c9cfa595893e2cc56c192b318735b2d5a1b414ce045cc55d856({} %"101", ptr %parsed) !dbg !692 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !693
  %call = tail call fastcc i64 @Five_partTwo_f1966770f487423b2224f997555d39f4a11ba5fe171e103a4b5b1ab4f2c70(ptr %parsed), !dbg !693
  call fastcc void @Num_toStr_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(i64 %call, ptr nonnull %result_value), !dbg !693
  %call1 = call fastcc { %str.RocStr, {} } @Stdout_line_bebbb589a83a432de7026fc8b274e9febb5d3770872da3be54e19711abf48c(ptr nonnull %result_value), !dbg !693
  ret { %str.RocStr, {} } %call1, !dbg !693
}

define internal fastcc void @Five_51_f8af0b510694e56e78a5bd9dc944cf1d240b66efd5c484e831b9694e85106f(%list.RocList %rule, { i64, %list.RocList } %"#arg_closure", ptr %0) !dbg !695 {
entry:
  %result_value1 = alloca { [1 x i8], i8 }, align 8, !dbg !696
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !696
  %struct_field_access_record_1 = extractvalue { i64, %list.RocList } %"#arg_closure", 1, !dbg !696
  %struct_field_access_record_0 = extractvalue { i64, %list.RocList } %"#arg_closure", 0, !dbg !696
  call fastcc void @List_splitFirst_dce3401669119d7f5da9e070669694c78f88efb14a471223494f7d677db1e7d(%list.RocList %struct_field_access_record_1, i64 %struct_field_access_record_0, ptr nonnull %result_value), !dbg !696
  call fastcc void @Result_try_3c58d86b4437e7512e2b91aaabac14e86a30d0bfd8a27923c73b19fd673fff(ptr nonnull %result_value, %list.RocList %rule, ptr nonnull %result_value1), !dbg !696
  %1 = load i16, ptr %result_value1, align 8, !dbg !696
  store i16 %1, ptr %0, align 1, !dbg !696
  ret void, !dbg !696
}

define internal fastcc %list.RocList @List_reserve_1979c8b7ef5f495fcd893830dae286517b20f9eb43379243d33155ade7a91(%list.RocList %"#arg1", i64 %"#arg2") !dbg !698 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !699
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !699
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !699
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !699
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !699
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !699
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !699
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !699
  call void @llvm.experimental.noalias.scope.decl(metadata !701), !dbg !699
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !699
  call void @llvm.lifetime.start.p0(i64 24, ptr %0), !dbg !699
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !699
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !699
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !699
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !699, !noalias !701
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !699
  %.sroa.2.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !699, !noalias !701
  %isneg.i.i = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !699
  %2 = call i64 @llvm.smax.i64(i64 %.sroa.2.0.copyload.i, i64 0), !dbg !699
  %3 = select i1 %isneg.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !699
  %4 = or i64 %3, %2, !dbg !699
  %5 = call i64 @llvm.uadd.sat.i64(i64 %.sroa.1.0.copyload.i, i64 %"#arg2"), !dbg !699
  %6 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !699
  %7 = icmp ne i64 %4, 0, !dbg !699
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %6, !dbg !699
  br i1 %brmerge.i.i.i, label %.critedge.i.i.i, label %list.RocList.isUnique.exit.i, !dbg !699

.critedge.i.i.i:                                  ; preds = %entry
  %8 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !699
  %.sroa.012.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !699, !noalias !701
  %9 = ptrtoint ptr %.sroa.012.0.copyload.i to i64, !dbg !699
  %10 = shl i64 %.sroa.2.0.copyload.i, 1, !dbg !699
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !699
  %12 = inttoptr i64 %11 to ptr, !dbg !699
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !699
  %14 = load i64, ptr %13, align 8, !dbg !699, !noalias !701
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !699
  br label %list.RocList.isUnique.exit.i, !dbg !699

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i.i.i, %entry
  %common.ret.op.i.i.i = phi i1 [ %15, %.critedge.i.i.i ], [ true, %entry ], !dbg !699
  %16 = icmp uge i64 %4, %5, !dbg !699
  %or.cond.i = select i1 %common.ret.op.i.i.i, i1 %16, i1 false, !dbg !699
  br i1 %or.cond.i, label %17, label %.critedge2.i, !dbg !699

17:                                               ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !699
  br label %roc_builtins.list.reserve.exit, !dbg !699

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !699, !noalias !701
  call void @llvm.experimental.noalias.scope.decl(metadata !704), !dbg !699
  %18 = load ptr, ptr %1, align 8, !dbg !699, !noalias !707
  %.not.i.i = icmp eq ptr %18, null, !dbg !699
  br i1 %.not.i.i, label %32, label %19, !dbg !699

19:                                               ; preds = %.critedge2.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !699
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !699, !noalias !707
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !699
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !699, !noalias !707
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !699
  %20 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !699
  %21 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !699
  %22 = or i64 %21, %20, !dbg !699
  %23 = icmp ne i64 %22, 0, !dbg !699
  %brmerge.i.i.i.i = select i1 %23, i1 true, i1 %isneg.i.i.i.i.i, !dbg !699
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !699

list.RocList.isUnique.exit.i.i:                   ; preds = %19
  %24 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !699
  %25 = ptrtoint ptr %18 to i64, !dbg !699
  %26 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !699
  %27 = select i1 %24, i64 %26, i64 %25, !dbg !699
  %28 = inttoptr i64 %27 to ptr, !dbg !699
  %29 = getelementptr inbounds i64, ptr %28, i64 -1, !dbg !699
  %30 = load i64, ptr %29, align 8, !dbg !699, !noalias !707
  %31 = icmp ne i64 %30, -9223372036854775808, !dbg !699
  %brmerge.i.i = select i1 %31, i1 true, i1 %24, !dbg !699
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !699

32:                                               ; preds = %.critedge2.i
  %33 = icmp eq i64 %5, 0, !dbg !699
  br i1 %33, label %list.RocList.allocate.exit.i.i, label %34, !dbg !699

34:                                               ; preds = %32
  %35 = call i64 @llvm.umax.i64(i64 4, i64 %5), !dbg !699
  %36 = mul nuw i64 %35, 16, !dbg !699
  %37 = add nuw i64 %36, 8, !dbg !699
  %38 = call ptr @roc_alloc(i64 %37, i32 8), !dbg !699, !noalias !708
  %39 = getelementptr inbounds i8, ptr %38, i64 8, !dbg !699
  %40 = getelementptr inbounds i8, ptr %39, i64 -8, !dbg !699
  store i64 -9223372036854775808, ptr %40, align 8, !dbg !699, !noalias !708
  br label %list.RocList.allocate.exit.i.i, !dbg !699

list.RocList.allocate.exit.i.i:                   ; preds = %34, %32
  %.sroa.418.0.i.i = phi i64 [ %35, %34 ], [ 0, %32 ], !dbg !699
  %.sroa.016.0.i.i = phi ptr [ %39, %34 ], [ null, %32 ], !dbg !699
  store ptr %.sroa.016.0.i.i, ptr %0, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !699
  store i64 %5, ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !699
  store i64 %.sroa.418.0.i.i, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !699, !alias.scope !704, !noalias !701
  br label %list.RocList.reallocate.exit.i, !dbg !699

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i, %19
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i.i, %5, !dbg !699
  br i1 %.not7.i.i, label %65, label %62, !dbg !699

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %41 = icmp eq i64 %5, 0, !dbg !699
  br i1 %41, label %list.RocList.allocate.exit.i.i.i, label %42, !dbg !699

42:                                               ; preds = %.critedge.i.i
  %43 = call i64 @llvm.umax.i64(i64 4, i64 %5), !dbg !699
  %44 = mul nuw i64 %43, 16, !dbg !699
  %45 = add nuw i64 %44, 8, !dbg !699
  %46 = call ptr @roc_alloc(i64 %45, i32 8), !dbg !699, !noalias !711
  %47 = getelementptr inbounds i8, ptr %46, i64 8, !dbg !699
  %48 = getelementptr inbounds i8, ptr %47, i64 -8, !dbg !699
  store i64 -9223372036854775808, ptr %48, align 8, !dbg !699, !noalias !711
  br label %list.RocList.allocate.exit.i.i.i, !dbg !699

49:                                               ; preds = %list.RocList.allocate.exit.i.i.i
  %50 = load i64, ptr %29, align 8, !dbg !699, !noalias !716
  %.not.i.i.i.i = icmp eq i64 %50, 0, !dbg !699
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %51, !dbg !699

51:                                               ; preds = %49
  %52 = add i64 %50, -1, !dbg !699
  store i64 %52, ptr %29, align 8, !dbg !699, !noalias !716
  %53 = icmp eq i64 %50, -9223372036854775808, !dbg !699
  br i1 %53, label %54, label %list.RocList.reallocateFresh.exit.i.i, !dbg !699

54:                                               ; preds = %51
  call void @roc_dealloc(ptr nonnull align 1 %29, i32 8), !dbg !699, !noalias !716
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !699

list.RocList.allocate.exit.i.i.i:                 ; preds = %42, %.critedge.i.i
  %.sroa.0.0.i.i.i = phi ptr [ %47, %42 ], [ null, %.critedge.i.i ], !dbg !699
  %.sroa.5.0.i.i.i = phi i64 [ %43, %42 ], [ 0, %.critedge.i.i ], !dbg !699
  %55 = mul nuw i64 %.sroa.2.0.copyload.i.i, 16, !dbg !699
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %.sroa.0.0.i.i.i, ptr nonnull align 1 %18, i64 %55, i1 false), !dbg !699, !noalias !716
  %56 = getelementptr inbounds i8, ptr %.sroa.0.0.i.i.i, i64 %55, !dbg !699
  %57 = sub i64 %5, %.sroa.2.0.copyload.i.i, !dbg !699
  %58 = mul i64 %57, 16, !dbg !699
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %56, i8 0, i64 %58, i1 false), !dbg !699, !noalias !716
  %59 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !699
  %60 = icmp ne i64 %.sroa.3.0.copyload.i.i, 0, !dbg !699
  %61 = icmp ne i64 %27, 0, !dbg !699
  %or.cond.i.i.i.i = select i1 %60, i1 %61, i1 false, !dbg !699
  br i1 %or.cond.i.i.i.i, label %49, label %list.RocList.reallocateFresh.exit.i.i, !dbg !699

list.RocList.reallocateFresh.exit.i.i:            ; preds = %54, %51, %49, %list.RocList.allocate.exit.i.i.i
  store ptr %.sroa.0.0.i.i.i, ptr %0, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !699
  store i64 %5, ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !699
  store i64 %.sroa.5.0.i.i.i, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !699, !alias.scope !704, !noalias !701
  br label %list.RocList.reallocate.exit.i, !dbg !699

62:                                               ; preds = %.thread.i.i
  store ptr %18, ptr %0, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %63 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !699
  store i64 %5, ptr %63, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %64 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !699
  store i64 %.sroa.3.0.copyload.i.i, ptr %64, align 8, !dbg !699, !alias.scope !704, !noalias !701
  br label %list.RocList.reallocate.exit.i, !dbg !699

65:                                               ; preds = %.thread.i.i
  %66 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !699
  br i1 %66, label %78, label %79, !dbg !699

.split1.i.i:                                      ; preds = %72, %.split.i.i
  %phi.call.i.i = phi ptr [ %77, %72 ], [ %18, %.split.i.i ], !dbg !699
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %67 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !699
  store i64 %5, ptr %67, align 8, !dbg !699, !alias.scope !704, !noalias !701
  %68 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !699
  store i64 %69, ptr %68, align 8, !dbg !699, !alias.scope !704, !noalias !701
  br label %list.RocList.reallocate.exit.i, !dbg !699

.split.i.i:                                       ; preds = %87, %85, %81, %78
  %.0.i.i = phi i64 [ %82, %81 ], [ %86, %85 ], [ %90, %87 ], [ 4, %78 ], !dbg !699
  %69 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %5), !dbg !699
  %70 = mul nuw i64 %.sroa.3.0.copyload.i.i, 16, !dbg !699
  %71 = mul nuw i64 %69, 16, !dbg !699
  %.not.i9.i.i = icmp ult i64 %70, %71, !dbg !699
  br i1 %.not.i9.i.i, label %72, label %.split1.i.i, !dbg !699

72:                                               ; preds = %.split.i.i
  %73 = add nuw i64 %71, 8, !dbg !699
  %74 = add nuw i64 %70, 8, !dbg !699
  %75 = getelementptr inbounds i8, ptr %18, i64 -8, !dbg !699
  %76 = call ptr @roc_realloc(ptr nonnull align 1 %75, i64 %73, i64 %74, i32 8), !dbg !699, !noalias !707
  %77 = getelementptr inbounds i8, ptr %76, i64 8, !dbg !699
  br label %.split1.i.i, !dbg !699

78:                                               ; preds = %65
  br label %.split.i.i, !dbg !699

79:                                               ; preds = %65
  %80 = icmp ult i64 %.sroa.3.0.copyload.i.i, 256, !dbg !699
  br i1 %80, label %81, label %83, !dbg !699

81:                                               ; preds = %79
  %82 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !699
  br label %.split.i.i, !dbg !699

83:                                               ; preds = %79
  %84 = icmp ugt i64 %.sroa.3.0.copyload.i.i, 8192, !dbg !699
  br i1 %84, label %85, label %87, !dbg !699

85:                                               ; preds = %83
  %86 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !699
  br label %.split.i.i, !dbg !699

87:                                               ; preds = %83
  %88 = mul nuw i64 %.sroa.3.0.copyload.i.i, 3, !dbg !699
  %89 = add nuw i64 %88, 1, !dbg !699
  %90 = lshr i64 %89, 1, !dbg !699
  br label %.split.i.i, !dbg !699

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %62, %list.RocList.reallocateFresh.exit.i.i, %list.RocList.allocate.exit.i.i
  %.sroa.03.0.copyload.i = load ptr, ptr %0, align 8, !dbg !699, !noalias !701
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !699
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !699, !noalias !701
  store ptr %.sroa.03.0.copyload.i, ptr %list_alloca, align 8, !dbg !699, !alias.scope !701
  %.sroa.25.0..sroa_idx6.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !699
  store i64 %.sroa.1.0.copyload.i, ptr %.sroa.25.0..sroa_idx6.i, align 8, !dbg !699, !alias.scope !701
  %.sroa.3.0..sroa_idx8.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !699
  store i64 %.sroa.3.0.copyload.i, ptr %.sroa.3.0..sroa_idx8.i, align 8, !dbg !699, !alias.scope !701
  br label %roc_builtins.list.reserve.exit, !dbg !699

roc_builtins.list.reserve.exit:                   ; preds = %17, %list.RocList.reallocate.exit.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !699
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !699
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !699
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !699
  %91 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !699
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !699
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !699
  %92 = insertvalue %list.RocList %91, i64 %load_list.unpack7, 1, !dbg !699
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !699
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !699
  %load_list10 = insertvalue %list.RocList %92, i64 %load_list.unpack9, 2, !dbg !699
  ret %list.RocList %load_list10, !dbg !699
}

define internal fastcc i1 @Num_isLt_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031(i32 %"#arg1", i32 %"#arg2") !dbg !717 {
entry:
  %lt_uint = icmp ult i32 %"#arg1", %"#arg2", !dbg !718
  ret i1 %lt_uint, !dbg !718
}

define internal fastcc void @Inspect_213_dcb273fb5185f78cd65b7adda9732f8bba62aec766939b09e25f2a158a74543(ptr %x, ptr %inspector, ptr %0) !dbg !720 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_apply_1f8e356ac751a27ffa403915e5479fd0a29d71e18585d0226666c6b441ff81(ptr %inspector, ptr %x, ptr nonnull %result_value), !dbg !721
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !721
  ret void, !dbg !721
}

define internal fastcc void @Parser_52_4cce276f448863cf59555de4812c18dd63ac716c8d68faaa3765a8ad5f4d5a34(%list.RocList %input, {} %val, ptr %0) !dbg !723 {
entry:
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !724
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !724
  %input.elt = extractvalue %list.RocList %input, 0, !dbg !724
  store ptr %input.elt, ptr %tag_alloca, align 8, !dbg !724
  %tag_alloca.repack5 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !724
  %input.elt6 = extractvalue %list.RocList %input, 1, !dbg !724
  store i64 %input.elt6, ptr %tag_alloca.repack5, align 8, !dbg !724
  %tag_alloca.repack7 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !724
  %input.elt8 = extractvalue %list.RocList %input, 2, !dbg !724
  store i64 %input.elt8, ptr %tag_alloca.repack7, align 8, !dbg !724
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !724
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !724
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !724
  ret void, !dbg !724
}

define internal fastcc void @Parser_buildPrimitiveParser_2d69d7fd4e3cdc41145bcb27f8508ce61a7f9bec3eb91af2c8987b4215e4ae4(ptr %fun, ptr %0) !dbg !726 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %fun, i64 48, i1 false), !dbg !727
  ret void, !dbg !727
}

define internal fastcc void @Parser_combined_82c94562df431c222d89751799c744c297beafe89403fd288ae1c077a7f1d7(%list.RocList %input, { {}, {} } %"#arg_closure", ptr %0) !dbg !729 {
entry:
  %result_value1 = alloca { [4 x i64], i8 }, align 8, !dbg !730
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !730
  %struct_field_access_record_1 = extractvalue { {}, {} } %"#arg_closure", 1, !dbg !730
  %struct_field_access_record_0 = extractvalue { {}, {} } %"#arg_closure", 0, !dbg !730
  call fastcc void @Parser_parsePartial_b54b77c860741659e5266e2d61860fd36498ad112baf9dfab455e3fe3a84d({} %struct_field_access_record_0, %list.RocList %input, ptr nonnull %result_value), !dbg !730
  call fastcc void @Result_try_35d6cb78c74f84df82ab12c37bc71bbe5193f93e9d36506abc7c9c8ca124d1ab(ptr nonnull %result_value, {} %struct_field_access_record_1, ptr nonnull %result_value1), !dbg !730
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value1, i64 40, i1 false), !dbg !730
  ret void, !dbg !730
}

define internal fastcc %list.RocList @List_sublistLowlevel_594462766f77f828358545ebdadebc7d564d3daf466672cbde673babcf18c3c2(%list.RocList %"#arg1", i64 %"#arg2", i64 %"#arg3") !dbg !732 {
entry:
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !733
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !733
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !733
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !733
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !733
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !733
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !733
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !733
  call void @llvm.experimental.noalias.scope.decl(metadata !735), !dbg !733
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !733
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !733
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !733
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !733, !noalias !735
  %0 = icmp eq i64 %.sroa.1.0.copyload.i, 0, !dbg !733
  %1 = icmp eq i64 %"#arg3", 0, !dbg !733
  %2 = select i1 %0, i1 true, i1 %1, !dbg !733
  %3 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !733
  %or.cond.i = select i1 %2, i1 true, i1 %3, !dbg !733
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !733, !noalias !735
  br i1 %or.cond.i, label %.critedge.i, label %16, !dbg !733

.critedge.i:                                      ; preds = %entry
  %sunkaddr.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !733
  %.sroa.3.0.copyload57.i = load i64, ptr %sunkaddr.i, align 8, !dbg !733, !noalias !735
  %isneg.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !733
  %4 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload57.i, i64 0), !dbg !733
  %5 = select i1 %isneg.i.i.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !733
  %6 = or i64 %5, %4, !dbg !733
  %7 = icmp ne i64 %6, 0, !dbg !733
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %isneg.i.i.i.i, !dbg !733
  br i1 %brmerge.i.i.i, label %list.RocList.isUnique.exit.i, label %list.RocList.isUnique.exit.thread.i, !dbg !733

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i
  %8 = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !733
  %9 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !733
  %10 = shl i64 %.sroa.3.0.copyload57.i, 1, !dbg !733
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !733
  %12 = inttoptr i64 %11 to ptr, !dbg !733
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !733
  %14 = load i64, ptr %13, align 8, !dbg !733, !noalias !735
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !733
  br i1 %15, label %list.RocList.isUnique.exit.thread.i, label %.critedge.i.i, !dbg !733

16:                                               ; preds = %entry
  %.not28.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !733
  br i1 %.not28.i, label %26, label %22, !dbg !733

common.ret.i:                                     ; preds = %list.RocList.setAllocationElementCount.exit.i, %list.RocList.isUnique.exit44.thread.i, %list.RocList.isUnique.exit.thread.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !733
  br label %roc_builtins.list.sublist.exit, !dbg !733

list.RocList.isUnique.exit.thread.i:              ; preds = %list.RocList.isUnique.exit.i, %.critedge.i
  %.not29.i = icmp ne ptr %.sroa.0.0.copyload.i, null, !dbg !733
  %17 = icmp ne i64 %.sroa.1.0.copyload.i, 0, !dbg !733
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !733, !alias.scope !735
  %.sroa.28.0..sroa_idx9.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !733
  store i64 0, ptr %.sroa.28.0..sroa_idx9.i, align 8, !dbg !733, !alias.scope !735
  %.sroa.3.0..sroa_idx11.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !733
  store i64 %.sroa.3.0.copyload57.i, ptr %.sroa.3.0..sroa_idx11.i, align 8, !dbg !733, !alias.scope !735
  br label %common.ret.i, !dbg !733

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i
  %18 = icmp eq i64 %.sroa.3.0.copyload57.i, 0, !dbg !733
  %19 = icmp eq i64 %11, 0, !dbg !733
  %or.cond.i.i.not92.i = select i1 %18, i1 true, i1 %19, !dbg !733
  %.not.i.i.i = icmp eq i64 %14, 0, !dbg !733
  %or.cond89.i = select i1 %or.cond.i.i.not92.i, i1 true, i1 %.not.i.i.i, !dbg !733
  br i1 %or.cond89.i, label %list.RocList.decref.exit.i, label %20, !dbg !733

20:                                               ; preds = %.critedge.i.i
  %21 = add nsw i64 %14, -1, !dbg !733
  %sunkaddr101.i = inttoptr i64 %11 to ptr, !dbg !733
  %sunkaddr102.i = getelementptr inbounds i8, ptr %sunkaddr101.i, i64 -8, !dbg !733
  store i64 %21, ptr %sunkaddr102.i, align 8, !dbg !733, !noalias !735
  br label %list.RocList.decref.exit.i, !dbg !733

list.RocList.decref.exit.i:                       ; preds = %20, %.critedge.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !733, !alias.scope !735
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !733
  br label %roc_builtins.list.sublist.exit, !dbg !733

22:                                               ; preds = %16
  %23 = sub nuw i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !733
  %24 = call i64 @llvm.umin.i64(i64 %"#arg3", i64 %23), !dbg !733
  %25 = icmp eq i64 %"#arg2", 0, !dbg !733
  %sunkaddr103.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !733
  %.sroa.363.0.copyload.i = load i64, ptr %sunkaddr103.i, align 8, !dbg !733, !noalias !735
  br i1 %25, label %27, label %..critedge2_crit_edge.i, !dbg !733

..critedge2_crit_edge.i:                          ; preds = %22
  %.pre.i = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !733
  br label %.critedge2.i, !dbg !733

26:                                               ; preds = %16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !733, !alias.scope !735
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !733
  br label %roc_builtins.list.sublist.exit, !dbg !733

27:                                               ; preds = %22
  %isneg.i.i.i39.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !733
  %28 = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !733
  %29 = select i1 %isneg.i.i.i39.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !733
  %30 = or i64 %29, %28, !dbg !733
  %31 = icmp ne i64 %30, 0, !dbg !733
  %brmerge.i.i40.i = select i1 %31, i1 true, i1 %isneg.i.i.i39.i, !dbg !733
  br i1 %brmerge.i.i40.i, label %list.RocList.isUnique.exit44.i, label %list.RocList.isUnique.exit44.thread.i, !dbg !733

list.RocList.isUnique.exit44.i:                   ; preds = %27
  %32 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !733
  %33 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !733
  %34 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !733
  %35 = select i1 %32, i64 %34, i64 %33, !dbg !733
  %36 = inttoptr i64 %35 to ptr, !dbg !733
  %37 = getelementptr inbounds i64, ptr %36, i64 -1, !dbg !733
  %38 = load i64, ptr %37, align 8, !dbg !733, !noalias !735
  %39 = icmp eq i64 %38, -9223372036854775808, !dbg !733
  br i1 %39, label %list.RocList.isUnique.exit44.thread.i, label %.critedge2.i, !dbg !733

list.RocList.isUnique.exit44.thread.i:            ; preds = %list.RocList.isUnique.exit44.i, %27
  %.not.not.i = icmp ugt i64 %23, %"#arg3", !dbg !733
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !733, !alias.scope !735
  %.sroa.218.0..sroa_idx19.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !733
  store i64 %24, ptr %.sroa.218.0..sroa_idx19.i, align 8, !dbg !733, !alias.scope !735
  %.sroa.321.0..sroa_idx22.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !733
  store i64 %.sroa.363.0.copyload.i, ptr %.sroa.321.0..sroa_idx22.i, align 8, !dbg !733, !alias.scope !735
  br label %common.ret.i, !dbg !733

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit44.i, %..critedge2_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %..critedge2_crit_edge.i ], [ %28, %list.RocList.isUnique.exit44.i ], !dbg !733
  %isneg.i.i.i49.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !733
  %40 = select i1 %isneg.i.i.i49.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !733
  %41 = or i64 %40, %.pre-phi.i, !dbg !733
  %42 = icmp ne i64 %41, 0, !dbg !733
  %brmerge.i.i50.i = select i1 %42, i1 true, i1 %isneg.i.i.i49.i, !dbg !733
  br i1 %brmerge.i.i50.i, label %list.RocList.isUnique.exit54.i, label %list.RocList.isUnique.exit54.thread.i, !dbg !733

list.RocList.isUnique.exit54.i:                   ; preds = %.critedge2.i
  %43 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !733
  %44 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !733
  %45 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !733
  %46 = select i1 %43, i64 %45, i64 %44, !dbg !733
  %47 = inttoptr i64 %46 to ptr, !dbg !733
  %48 = getelementptr inbounds i64, ptr %47, i64 -1, !dbg !733
  %49 = load i64, ptr %48, align 8, !dbg !733, !noalias !735
  %50 = icmp ne i64 %49, -9223372036854775808, !dbg !733
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !733

list.RocList.setAllocationElementCount.exit.i:    ; preds = %list.RocList.isUnique.exit54.thread.i, %list.RocList.isUnique.exit54.i
  %51 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !733
  %52 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !733
  %53 = lshr i64 %52, 1, !dbg !733
  %54 = or i64 %53, -9223372036854775808, !dbg !733
  %55 = select i1 %51, i64 0, i64 %54, !dbg !733
  %56 = call i64 @llvm.smin.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !733
  %57 = or i64 %56, %55, !dbg !733
  %58 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 %"#arg2", !dbg !733
  store ptr %58, ptr %list_alloca, align 8, !dbg !733, !alias.scope !735
  %59 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !733
  store i64 %24, ptr %59, align 8, !dbg !733, !alias.scope !735
  %60 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !733
  store i64 %57, ptr %60, align 8, !dbg !733, !alias.scope !735
  br label %common.ret.i, !dbg !733

list.RocList.isUnique.exit54.thread.i:            ; preds = %.critedge2.i
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !733

roc_builtins.list.sublist.exit:                   ; preds = %26, %list.RocList.decref.exit.i, %common.ret.i
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !733
  %61 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !733
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !733
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !733
  %62 = insertvalue %list.RocList %61, i64 %load_list.unpack7, 1, !dbg !733
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !733
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !733
  %load_list10 = insertvalue %list.RocList %62, i64 %load_list.unpack9, 2, !dbg !733
  ret %list.RocList %load_list10, !dbg !733
}

define internal fastcc void @Inspect_204_c774391cda5b454c2aba9a3d06bd7dafbe9f198c258b617d66c4f87d5ceed7d(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !738 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !739
  %load_element = alloca %str.RocStr, align 8, !dbg !739
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !739
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %load_element, ptr nonnull %result_value), !dbg !739
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element), !dbg !739
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !739
  ret void, !dbg !739
}

define internal fastcc void @Inspect_204_f767571aeba669a4bfe91723922777a697d32e65940c336e169c633efb68bb(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !741 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !742
  %load_element = alloca %str.RocStr, align 8, !dbg !742
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !742
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %load_element, ptr nonnull %result_value), !dbg !742
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element), !dbg !742
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !742
  ret void, !dbg !742
}

define internal fastcc i1 @List_isEmpty_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181(%list.RocList %list) !dbg !744 {
entry:
  %call = tail call fastcc i64 @List_len_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2(%list.RocList %list), !dbg !745
  %call1 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %call, i64 0), !dbg !745
  ret i1 %call1, !dbg !745
}

define internal fastcc void @Parser_parsePartial_bc8c4fbb4471f82ba588d9366a6cc73c095ec9bae4fb1a31564e5462ba6746({ {}, { { {}, {} }, {} } } %"246", %list.RocList %input, ptr %0) !dbg !747 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Parser_combined_fc145ce74b45e32d63c5dc22b87822e84c8353c18391547f0431f2b1c148e(%list.RocList %input, { {}, { { {}, {} }, {} } } %"246", ptr nonnull %result_value), !dbg !748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !748
  ret void, !dbg !748
}

define internal fastcc i64 @List_len_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7(%list.RocList %"#arg1") !dbg !750 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !751
  ret i64 %list_len, !dbg !751
}

define internal fastcc void @Str_fromUtf8Lowlevel_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32(%list.RocList %"#arg1", ptr %0) !dbg !753 {
entry:
  %load_decode_from_utf8_result = alloca { i64, %str.RocStr, i1, i8 }, align 8
  %list_alloca = alloca %list.RocList, align 8
  %alloca_utf8_validate_bytes_result = alloca %str.FromUtf8Result, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !754
  store ptr %"#arg1.elt", ptr %list_alloca, align 8, !dbg !754
  %list_alloca.repack1 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !754
  %"#arg1.elt2" = extractvalue %list.RocList %"#arg1", 1, !dbg !754
  store i64 %"#arg1.elt2", ptr %list_alloca.repack1, align 8, !dbg !754
  %list_alloca.repack3 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !754
  %"#arg1.elt4" = extractvalue %list.RocList %"#arg1", 2, !dbg !754
  store i64 %"#arg1.elt4", ptr %list_alloca.repack3, align 8, !dbg !754
  call void @roc_builtins.str.from_utf8(ptr noalias nocapture nonnull sret(%str.FromUtf8Result) %alloca_utf8_validate_bytes_result, ptr nocapture nonnull readonly byval(%list.RocList) %list_alloca, i8 0), !dbg !754
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %load_decode_from_utf8_result, ptr noundef nonnull align 8 dereferenceable(40) %alloca_utf8_validate_bytes_result, i64 40, i1 false), !dbg !754
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %load_decode_from_utf8_result, i64 40, i1 false), !dbg !754
  ret void, !dbg !754
}

define internal fastcc { i32, i32 } @Dict_emptyBucket_229c75d6969a8a8a593eb2c44e915f34577963371a1cc7e544a8418a694a1e2() !dbg !756 {
entry:
  ret { i32, i32 } zeroinitializer, !dbg !757
}

define internal fastcc %list.RocList @Dict_406_44a259a1c661ce1c71dd8d8d41c4dcf9371428a2eb6ae0adff12f61349c7dc(%list.RocList %buckets1, { i64, %list.RocList } %"1071", i64 %dataIndex, i8 %shifts) !dbg !759 {
entry:
  %struct_field_access_record_0 = extractvalue { i64, %list.RocList } %"1071", 0, !dbg !760
  %struct_field_access_record_1 = extractvalue { i64, %list.RocList } %"1071", 1, !dbg !760
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field_access_record_1), !dbg !760
  %call = tail call fastcc { i64, i32 } @Dict_nextWhileLess_622c9f939ebee86f480d73fdef56611b8899ab7e93ac9da07aeba3373394a(%list.RocList %buckets1, i64 %struct_field_access_record_0, i8 %shifts), !dbg !760
  %struct_field_access_record_01 = extractvalue { i64, i32 } %call, 0, !dbg !760
  %struct_field_access_record_12 = extractvalue { i64, i32 } %call, 1, !dbg !760
  %call3 = tail call fastcc i32 @Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(i64 %dataIndex), !dbg !760
  %insert_record_field = insertvalue { i32, i32 } zeroinitializer, i32 %call3, 0, !dbg !760
  %insert_record_field4 = insertvalue { i32, i32 } %insert_record_field, i32 %struct_field_access_record_12, 1, !dbg !760
  %call5 = tail call fastcc %list.RocList @Dict_placeAndShiftUp_4e6df5a280208f8027d8c0e0fd95af1adf299ebd3666b6c48551dc0cb3c3214(%list.RocList %buckets1, { i32, i32 } %insert_record_field4, i64 %struct_field_access_record_01), !dbg !760
  ret %list.RocList %call5, !dbg !760
}

define internal fastcc void @Task_ok_74e539aad6ec9b39b5d11cddb1f5bc7530ae1c63102d2ee576fb29be2b2bf8cf({} %a, ptr %0) !dbg !762 {
entry:
  %tag_alloca = alloca { [5 x i64], i8 }, align 8, !dbg !763
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !763
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !763
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !763
  ret void, !dbg !763
}

define internal fastcc void @List_findFirstIndex_7988d89080438f51df37e0664fee86ae858164dcb95eaeb555d2849513259182(%list.RocList %list, i64 %matcher, ptr %0) !dbg !765 {
entry:
  %tag_alloca3 = alloca { [1 x i64], i8 }, align 8
  %tag_alloca = alloca { [1 x i64], i8 }, align 8
  %result_value = alloca { [1 x i64], i8 }, align 8
  call fastcc void @List_iterate_ade2dc9e385e74c61c8d36210907131d7823a7fe8d06c7bd978c1f46a9d3830(%list.RocList %list, i64 0, i64 %matcher, ptr nonnull %result_value), !dbg !766
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !766
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !766
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !766
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !766

then_block:                                       ; preds = %entry
  %load_element = load i64, ptr %result_value, align 8, !dbg !766
  store i64 %load_element, ptr %tag_alloca, align 8, !dbg !766
  %tag_id_ptr2 = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !766
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !766
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca, i64 16, i1 false), !dbg !766
  ret void, !dbg !766

else_block:                                       ; preds = %entry
  %tag_id_ptr5 = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca3, i64 0, i32 1, !dbg !766
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !766
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca3, i64 16, i1 false), !dbg !766
  ret void, !dbg !766
}

define internal fastcc void @Parser_parsePartial_ea9fbd5d6ff2f4de1e2ccda2b8d7e624e862ec6a5191223f8676f8ef2216e31({ {}, {} } %"246", %list.RocList %input, ptr %0) !dbg !768 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Parser_combined_82c94562df431c222d89751799c744c297beafe89403fd288ae1c077a7f1d7(%list.RocList %input, { {}, {} } %"246", ptr nonnull %result_value), !dbg !769
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !769
  ret void, !dbg !769
}

define internal fastcc { i64, i64 } @Dict_createLowLevelHasher_44109459d64fcdac3ea0c7115c1a33caa6de3332a46a1f0819b84a1d3a6c9(ptr %seedOpt) !dbg !771 {
entry:
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %seedOpt, i64 0, i32 1, !dbg !772
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !772
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !772
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !772

then_block:                                       ; preds = %entry
  %call = tail call fastcc i64 @Dict_pseudoSeed_94cb138d818e9947d7d69ef307378727ff7855e4de6723d27fc54d8e228050({} zeroinitializer), !dbg !772
  br label %joinpointcont, !dbg !772

else_block:                                       ; preds = %entry
  %load_element = load i64, ptr %seedOpt, align 8, !dbg !772
  br label %joinpointcont, !dbg !772

joinpointcont:                                    ; preds = %else_block, %then_block
  %joinpointarg = phi i64 [ %call, %then_block ], [ %load_element, %else_block ], !dbg !772
  %call2 = tail call fastcc i64 @Dict_initSeed_a9e685cc72fe3166dd93f93a27166ec5656562cf1d6d3e19f41a6cc3489(i64 %joinpointarg), !dbg !772
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %call2, 0, !dbg !772
  %insert_record_field3 = insertvalue { i64, i64 } %insert_record_field, i64 %joinpointarg, 1, !dbg !772
  ret { i64, i64 } %insert_record_field3, !dbg !772
}

define internal fastcc %list.RocList @List_keepIf_481f1278f2de6c4b7025bbe3547d9acb112f26631793a1e4c8c76b99b179e0(%list.RocList %list, ptr %predicate) !dbg !774 {
entry:
  %call = tail call fastcc i64 @List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6(%list.RocList %list), !dbg !775
  %call1 = tail call fastcc %list.RocList @List_keepIfHelp_5eb6a2599d3097c754d93922b84522fd22c626afbfca9a48d724fa1945e3ca9(%list.RocList %list, ptr %predicate, i64 0, i64 0, i64 %call), !dbg !775
  ret %list.RocList %call1, !dbg !775
}

define internal fastcc { i64, i64 } @Dict_addU64_684393a95528f29ba49a721c9e7bd2dbf82e1a92e5b742ec5b556b18be7657({ i64, i64 } %"712", i64 %u64) !dbg !777 {
entry:
  %struct_field_access_record_0 = extractvalue { i64, i64 } %"712", 0, !dbg !778
  %call = tail call fastcc i64 @Num_bitwiseAnd_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098(i64 4294967295, i64 %u64), !dbg !778
  %call1 = tail call fastcc i64 @Num_shiftRightZfBy_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0(i64 %u64, i8 32), !dbg !778
  %call2 = tail call fastcc i64 @Num_shiftLeftBy_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(i64 %call, i8 32), !dbg !778
  %call3 = tail call fastcc i64 @Num_bitwiseOr_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133(i64 %call2, i64 %call1), !dbg !778
  %call4 = tail call fastcc i64 @Num_shiftLeftBy_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(i64 %call1, i8 32), !dbg !778
  %call5 = tail call fastcc i64 @Num_bitwiseOr_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133(i64 %call4, i64 %call), !dbg !778
  %insert_record_field7 = insertvalue { i64, i64, i64, i64 } zeroinitializer, i64 %call3, 0, !dbg !778
  %insert_record_field8 = insertvalue { i64, i64, i64, i64 } %insert_record_field7, i64 %call5, 1, !dbg !778
  %insert_record_field9 = insertvalue { i64, i64, i64, i64 } %insert_record_field8, i64 8, 2, !dbg !778
  %insert_record_field10 = insertvalue { i64, i64, i64, i64 } %insert_record_field9, i64 %struct_field_access_record_0, 3, !dbg !778
  %call11 = tail call fastcc { i64, i64 } @Dict_combineState_5d26e7953422ce84aac56171b489e0deedf33db4e08b81dcad67e7427bff49({ i64, i64 } %"712", { i64, i64, i64, i64 } %insert_record_field10), !dbg !778
  ret { i64, i64 } %call11, !dbg !778
}

define internal fastcc i64 @List_walk_b7aa9f7d377b2692ada596045493ead6d491b934dc9015fcbdd1a8e01477d(%list.RocList %list, i64 %init, {} %func) !dbg !780 {
entry:
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !781
  %call1 = tail call fastcc i64 @List_walkHelp_7e6da7233f16ea2c61d431e9d8c0a56499bf145a5210fb3d79ec4aba1f55c0a8(%list.RocList %list, i64 %init, {} %func, i64 0, i64 %call), !dbg !781
  ret i64 %call1, !dbg !781
}

define internal fastcc void @Task_await_5811d8c78876d2654ea5124a7aef4f18d7249acbce87624ecf9abe42c809f(ptr %"102", {} %transform, ptr %0) !dbg !783 {
entry:
  %struct_alloca = alloca { { [9 x i64], i8 }, {} }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(80) %"102", i64 80, i1 false), !dbg !784
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %struct_alloca, i64 80, i1 false), !dbg !784
  ret void, !dbg !784
}

define internal fastcc void @Parser_apply_c5db299579d3ff988e55ff7ffd6f579e265caed4e0f96283b96ac6f8293293e(ptr %funParser, %list.RocList %valParser, ptr %0) !dbg !786 {
entry:
  %result_value = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !787
  %struct_alloca = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !787
  tail call fastcc void @"#Attr_#inc_13"(ptr %funParser, i64 1), !dbg !787
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %valParser, i64 1), !dbg !787
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %funParser, i64 24, i1 false), !dbg !787
  %struct_field_gep1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !787
  %valParser.elt = extractvalue %list.RocList %valParser, 0, !dbg !787
  store ptr %valParser.elt, ptr %struct_field_gep1, align 8, !dbg !787
  %struct_field_gep1.repack2 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !787
  %valParser.elt3 = extractvalue %list.RocList %valParser, 1, !dbg !787
  store i64 %valParser.elt3, ptr %struct_field_gep1.repack2, align 8, !dbg !787
  %struct_field_gep1.repack4 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !787
  %valParser.elt5 = extractvalue %list.RocList %valParser, 2, !dbg !787
  store i64 %valParser.elt5, ptr %struct_field_gep1.repack4, align 8, !dbg !787
  call fastcc void @Parser_buildPrimitiveParser_2d69d7fd4e3cdc41145bcb27f8508ce61a7f9bec3eb91af2c8987b4215e4ae4(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !787
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !787
  ret void, !dbg !787
}

define internal fastcc void @_89_b36e71bec3e8f440a488a235b9ca4a36d87cd2aeccf23eb4a588a2afa227d1({} %"91", ptr %"#arg_closure", ptr %0) !dbg !789 {
entry:
  %result_value = alloca { [1 x i32], i8 }, align 8
  call fastcc void @Task_42_6dea868fd882515ee4d6ec4867e8156d13a76c6d7fd19e7a46b6aa84371f7b({} %"91", ptr %"#arg_closure", ptr nonnull %result_value), !dbg !790
  %1 = load i64, ptr %result_value, align 8, !dbg !790
  store i64 %1, ptr %0, align 4, !dbg !790
  ret void, !dbg !790
}

define internal fastcc void @Parser_manyImpl_c3c6c854fc0febf57cc2ebf8e35d07fdbe449e8d69722afe47df74bd87d571(ptr %"174", %list.RocList %"175", %list.RocList %"176", ptr %0) !dbg !792 {
entry:
  %tmp_output_for_jmp7 = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8
  %tag_alloca = alloca { [6 x i64], i8 }, align 8
  %struct_alloca3 = alloca { { %list.RocList, %list.RocList } }, align 8
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8
  %result_value = alloca { [4 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8
  %joinpoint_arg_alloca = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %"176", i64 1), !dbg !793
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(80) %"174", i64 80, i1 false), !dbg !793
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(80) %tmp_output_for_jmp, i64 80, i1 false), !dbg !793
  br label %joinpointcont, !dbg !793

joinpointcont:                                    ; preds = %else_block, %entry
  %joinpointarg = phi %list.RocList [ %"175", %entry ], [ %call, %else_block ], !dbg !793
  %joinpointarg1 = phi %list.RocList [ %"176", %entry ], [ %load_element.unpack15, %else_block ], !dbg !793
  call fastcc void @"#Attr_#inc_17"(ptr nonnull %joinpoint_arg_alloca, i64 1), !dbg !793
  call fastcc void @Parser_parsePartial_e1cb572af3725742d66b2eb0d3756602f89f9725aa8004c75e9c2262ab(ptr nonnull %joinpoint_arg_alloca, %list.RocList %joinpointarg1, ptr nonnull %result_value), !dbg !793
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !793
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !793
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !793
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !793

then_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_22"(ptr nonnull %result_value), !dbg !793
  call fastcc void @"#Attr_#dec_17"(ptr nonnull %joinpoint_arg_alloca), !dbg !793
  %joinpointarg1.elt = extractvalue %list.RocList %joinpointarg1, 0, !dbg !793
  store ptr %joinpointarg1.elt, ptr %struct_alloca, align 8, !dbg !793
  %struct_alloca.repack16 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !793
  %joinpointarg1.elt17 = extractvalue %list.RocList %joinpointarg1, 1, !dbg !793
  store i64 %joinpointarg1.elt17, ptr %struct_alloca.repack16, align 8, !dbg !793
  %struct_alloca.repack18 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !793
  %joinpointarg1.elt19 = extractvalue %list.RocList %joinpointarg1, 2, !dbg !793
  store i64 %joinpointarg1.elt19, ptr %struct_alloca.repack18, align 8, !dbg !793
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !793
  %joinpointarg.elt = extractvalue %list.RocList %joinpointarg, 0, !dbg !793
  store ptr %joinpointarg.elt, ptr %struct_field_gep2, align 8, !dbg !793
  %struct_field_gep2.repack20 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !793
  %joinpointarg.elt21 = extractvalue %list.RocList %joinpointarg, 1, !dbg !793
  store i64 %joinpointarg.elt21, ptr %struct_field_gep2.repack20, align 8, !dbg !793
  %struct_field_gep2.repack22 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !793
  %joinpointarg.elt23 = extractvalue %list.RocList %joinpointarg, 2, !dbg !793
  store i64 %joinpointarg.elt23, ptr %struct_field_gep2.repack22, align 8, !dbg !793
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca3, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !793
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca3, i64 48, i1 false), !dbg !793
  %tag_id_ptr5 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !793
  store i8 1, ptr %tag_id_ptr5, align 8, !dbg !793
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !793
  ret void, !dbg !793

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_12"(%list.RocList %joinpointarg1), !dbg !793
  %load_element.unpack.unpack = load ptr, ptr %result_value, align 8, !dbg !793
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack.unpack, 0, !dbg !793
  %load_element.unpack.elt11 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !793
  %load_element.unpack.unpack12 = load i64, ptr %load_element.unpack.elt11, align 8, !dbg !793
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack.unpack12, 1, !dbg !793
  %load_element.unpack.elt13 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !793
  %load_element.unpack.unpack14 = load i64, ptr %load_element.unpack.elt13, align 8, !dbg !793
  %load_element.unpack15 = insertvalue %list.RocList %2, i64 %load_element.unpack.unpack14, 2, !dbg !793
  %load_element.elt8 = getelementptr inbounds { %list.RocList, i64 }, ptr %result_value, i64 0, i32 1, !dbg !793
  %load_element.unpack9 = load i64, ptr %load_element.elt8, align 8, !dbg !793
  %call = call fastcc %list.RocList @List_append_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57(%list.RocList %joinpointarg, i64 %load_element.unpack9), !dbg !793
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %tmp_output_for_jmp7, ptr noundef nonnull align 8 dereferenceable(80) %joinpoint_arg_alloca, i64 80, i1 false), !dbg !793
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(80) %tmp_output_for_jmp7, i64 80, i1 false), !dbg !793
  br label %joinpointcont, !dbg !793
}

define internal fastcc void @Inspect_apply_e224e0133f78589cea6db23e453acfbc569bda9b797a294835a2e3ce7b79f9b9(ptr %"303", ptr %fmt, ptr %0) !dbg !795 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !796
  %result_value = alloca %str.RocStr, align 8, !dbg !796
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !796
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !796
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
  ], !dbg !796

default:                                          ; preds = %entry
  call fastcc void @Inspect_206_74d4d8669aea9ec1d19e8f3c791dcea19b8424ea6a5e4fbb108785fcac76377c(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !796
  ret void, !dbg !796

branch0:                                          ; preds = %entry
  call fastcc void @Inspect_204_f767571aeba669a4bfe91723922777a697d32e65940c336e169c633efb68bb(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !796
  ret void, !dbg !796
}

define internal fastcc %list.RocList @List_walker_a4f1bd72ba9ffa9bc6b14a41321324cb50df1636d7bfebf57c16d684c9fbc2(%list.RocList %accum, %list.RocList %element, {} %toResult) !dbg !798 {
entry:
  %result_value = alloca { [1 x i64], i8 }, align 8
  call fastcc void @Five_middle_e315ee9facfd97a46e7bd14b98541116d245ecd6155168d2c1c9c02d3f201e(%list.RocList %element, ptr nonnull %result_value), !dbg !799
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !799
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !799
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !799
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !799

then_block:                                       ; preds = %entry
  %load_element = load i64, ptr %result_value, align 8, !dbg !799
  %call = call fastcc %list.RocList @List_append_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57(%list.RocList %accum, i64 %load_element), !dbg !799
  ret %list.RocList %call, !dbg !799

else_block:                                       ; preds = %entry
  ret %list.RocList %accum, !dbg !799
}

define internal fastcc void @Result_try_d9e2d7d318b97522751e8d862a897cd552d26040fa25d41678f9ac7b36cd7(ptr %result, {} %transform, ptr %0) !dbg !801 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !802
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !802
  %load_element4 = alloca { [8 x i64], i8 }, align 8, !dbg !802
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !802
  %load_element = alloca { %str.RocStr, %str.RocStr }, align 8, !dbg !802
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !802
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !802
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !802
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !802

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result, i64 48, i1 false), !dbg !802
  call fastcc void @Five_21_472151a4cc17d79113920ae20d3d07b69f69f8682198d239fb7241727fdd3e(ptr nonnull %load_element, ptr nonnull %result_value), !dbg !802
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !802
  ret void, !dbg !802

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element4, ptr noundef nonnull align 8 dereferenceable(72) %result, i64 72, i1 false), !dbg !802
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %load_element4, i64 72, i1 false), !dbg !802
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !802
  %tag_id_ptr5 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !802
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !802
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !802
  ret void, !dbg !802
}

define internal fastcc void @Result_try_3780de15a3a832596a21b52356ca78cefe1f05b661333fe4053d5b87a27e0(ptr %result, { { {}, {} }, {} } %transform, ptr %0) !dbg !804 {
entry:
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !805
  %load_element4 = alloca %str.RocStr, align 8, !dbg !805
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !805
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !805
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !805
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !805
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !805

then_block:                                       ; preds = %entry
  %load_element.unpack.unpack = load ptr, ptr %result, align 8, !dbg !805
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack.unpack, 0, !dbg !805
  %load_element.unpack.elt18 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !805
  %load_element.unpack.unpack19 = load i64, ptr %load_element.unpack.elt18, align 8, !dbg !805
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack.unpack19, 1, !dbg !805
  %load_element.unpack.elt20 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !805
  %load_element.unpack.unpack21 = load i64, ptr %load_element.unpack.elt20, align 8, !dbg !805
  %load_element.unpack22 = insertvalue %list.RocList %2, i64 %load_element.unpack.unpack21, 2, !dbg !805
  %3 = insertvalue { %list.RocList, {} } poison, %list.RocList %load_element.unpack22, 0, !dbg !805
  %load_element17 = insertvalue { %list.RocList, {} } %3, {} poison, 1, !dbg !805
  call fastcc void @Parser_77_8d2b92da50932d49e15c5c73b8d0a1d1e229d8198f6f22de7efaf7622e27d({ %list.RocList, {} } %load_element17, { { {}, {} }, {} } %transform, ptr nonnull %result_value), !dbg !805
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !805
  ret void, !dbg !805

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !805
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element4, align 8, !dbg !805
  %load_tag_to_put_in_struct.elt6 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 1, !dbg !805
  %load_tag_to_put_in_struct.unpack7 = load i64, ptr %load_tag_to_put_in_struct.elt6, align 8, !dbg !805
  %load_tag_to_put_in_struct.elt8 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 2, !dbg !805
  %load_tag_to_put_in_struct.unpack9 = load i64, ptr %load_tag_to_put_in_struct.elt8, align 8, !dbg !805
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !805
  %tag_alloca.repack11 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !805
  store i64 %load_tag_to_put_in_struct.unpack7, ptr %tag_alloca.repack11, align 8, !dbg !805
  %tag_alloca.repack13 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !805
  store i64 %load_tag_to_put_in_struct.unpack9, ptr %tag_alloca.repack13, align 8, !dbg !805
  %tag_id_ptr5 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !805
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !805
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !805
  ret void, !dbg !805
}

define internal fastcc %list.RocList @List_append_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9(%list.RocList %list, %list.RocList %element) !dbg !807 {
entry:
  %call = tail call fastcc %list.RocList @List_reserve_af58df284beb8fc541e167d520a5c53bd3e05fcd2fb56799b9aee4cfc3ed3f(%list.RocList %list, i64 1), !dbg !808
  %call1 = tail call fastcc %list.RocList @List_appendUnsafe_4f1fdebc72623b7987dfbf57d7b81537b885c9e4ce317a63dbf262856adf(%list.RocList %call, %list.RocList %element), !dbg !808
  ret %list.RocList %call1, !dbg !808
}

define internal fastcc void @Str_fromUtf8_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2(%list.RocList %bytes, ptr %0) !dbg !810 {
entry:
  %tag_alloca9 = alloca { [3 x i64], i8 }, align 8
  %struct_field5 = alloca %str.RocStr, align 8
  %tag_alloca = alloca { [3 x i64], i8 }, align 8
  %struct_field1 = alloca %str.RocStr, align 8
  %result_value = alloca { i64, %str.RocStr, i1, i8 }, align 8
  call fastcc void @Str_fromUtf8Lowlevel_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32(%list.RocList %bytes, ptr nonnull %result_value), !dbg !811
  %struct_field_access_record_2 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, ptr %result_value, i64 0, i32 2, !dbg !811
  %struct_field = load i1, ptr %struct_field_access_record_2, align 8, !dbg !811
  br i1 %struct_field, label %then_block, label %else_block, !dbg !811

then_block:                                       ; preds = %entry
  %struct_field_access_record_1 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, ptr %result_value, i64 0, i32 1, !dbg !811
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field1, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_1, i64 24, i1 false), !dbg !811
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %struct_field1, align 8, !dbg !811
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %struct_field1, i64 0, i32 1, !dbg !811
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !811
  %load_tag_to_put_in_struct.elt14 = getelementptr inbounds %str.RocStr, ptr %struct_field1, i64 0, i32 2, !dbg !811
  %load_tag_to_put_in_struct.unpack15 = load i64, ptr %load_tag_to_put_in_struct.elt14, align 8, !dbg !811
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !811
  %tag_alloca.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !811
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca.repack17, align 8, !dbg !811
  %tag_alloca.repack19 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !811
  store i64 %load_tag_to_put_in_struct.unpack15, ptr %tag_alloca.repack19, align 8, !dbg !811
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !811
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !811
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !811
  ret void, !dbg !811

else_block:                                       ; preds = %entry
  %struct_field_access_record_3 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, ptr %result_value, i64 0, i32 3, !dbg !811
  %struct_field2 = load i8, ptr %struct_field_access_record_3, align 1, !dbg !811
  %struct_field3 = load i64, ptr %result_value, align 8, !dbg !811
  %struct_field_access_record_14 = getelementptr inbounds { i64, %str.RocStr, i1, i8 }, ptr %result_value, i64 0, i32 1, !dbg !811
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field5, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_14, i64 24, i1 false), !dbg !811
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %struct_field5), !dbg !811
  %insert_record_field6 = insertvalue { i64, i8 } zeroinitializer, i64 %struct_field3, 0, !dbg !811
  %insert_record_field7 = insertvalue { i64, i8 } %insert_record_field6, i8 %struct_field2, 1, !dbg !811
  store { i64, i8 } %insert_record_field7, ptr %tag_alloca9, align 8, !dbg !811
  %tag_id_ptr11 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca9, i64 0, i32 1, !dbg !811
  store i8 0, ptr %tag_id_ptr11, align 8, !dbg !811
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca9, i64 32, i1 false), !dbg !811
  ret void, !dbg !811
}

define internal fastcc void @Parser_skip_bb5dc84692b48301ecfaa93785bf72d4debdd1ab8d563ad3ea5d723e989288b(ptr %funParser, ptr %skipParser, ptr %0) !dbg !813 {
entry:
  %result_value = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8
  %struct_alloca = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(48) %funParser, i64 48, i1 false), !dbg !814
  %struct_field_gep1 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, ptr %struct_alloca, i64 0, i32 1, !dbg !814
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(80) %skipParser, i64 80, i1 false), !dbg !814
  call fastcc void @Parser_buildPrimitiveParser_193448c4838cde466118b8f870b86decbde9b220f58c4baeed5bcaad0689f58(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !814
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %result_value, i64 128, i1 false), !dbg !814
  ret void, !dbg !814
}

define internal fastcc void @Parser_manyImpl_945e5a76091d624c441899cd3a90b894cb4cd17889bc19575617f1f8d43bf({} %"177", %list.RocList %"178", %list.RocList %"179", ptr %0) !dbg !816 {
entry:
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !817
  %struct_alloca4 = alloca { { %list.RocList, %list.RocList } }, align 8, !dbg !817
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8, !dbg !817
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !817
  br label %joinpointcont, !dbg !817

joinpointcont:                                    ; preds = %else_block, %entry
  %joinpointarg1 = phi %list.RocList [ %"178", %entry ], [ %call, %else_block ], !dbg !817
  %joinpointarg2 = phi %list.RocList [ %"179", %entry ], [ %load_element.unpack15, %else_block ], !dbg !817
  call fastcc void @"#Attr_#inc_12"(%list.RocList %joinpointarg2, i64 1), !dbg !817
  call fastcc void @Parser_parsePartial_a09fbdbd33f5ac2bc44e2b877ec9604906cdb3d39aa817d9e3dc5075f2eda({} %"177", %list.RocList %joinpointarg2, ptr nonnull %result_value), !dbg !817
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !817
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !817
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !817
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !817

then_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_22"(ptr nonnull %result_value), !dbg !817
  %joinpointarg2.elt = extractvalue %list.RocList %joinpointarg2, 0, !dbg !817
  store ptr %joinpointarg2.elt, ptr %struct_alloca, align 8, !dbg !817
  %struct_alloca.repack16 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !817
  %joinpointarg2.elt17 = extractvalue %list.RocList %joinpointarg2, 1, !dbg !817
  store i64 %joinpointarg2.elt17, ptr %struct_alloca.repack16, align 8, !dbg !817
  %struct_alloca.repack18 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !817
  %joinpointarg2.elt19 = extractvalue %list.RocList %joinpointarg2, 2, !dbg !817
  store i64 %joinpointarg2.elt19, ptr %struct_alloca.repack18, align 8, !dbg !817
  %struct_field_gep3 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !817
  %joinpointarg1.elt = extractvalue %list.RocList %joinpointarg1, 0, !dbg !817
  store ptr %joinpointarg1.elt, ptr %struct_field_gep3, align 8, !dbg !817
  %struct_field_gep3.repack20 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !817
  %joinpointarg1.elt21 = extractvalue %list.RocList %joinpointarg1, 1, !dbg !817
  store i64 %joinpointarg1.elt21, ptr %struct_field_gep3.repack20, align 8, !dbg !817
  %struct_field_gep3.repack22 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !817
  %joinpointarg1.elt23 = extractvalue %list.RocList %joinpointarg1, 2, !dbg !817
  store i64 %joinpointarg1.elt23, ptr %struct_field_gep3.repack22, align 8, !dbg !817
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca4, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !817
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca4, i64 48, i1 false), !dbg !817
  %tag_id_ptr6 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !817
  store i8 1, ptr %tag_id_ptr6, align 8, !dbg !817
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !817
  ret void, !dbg !817

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_12"(%list.RocList %joinpointarg2), !dbg !817
  %load_element.unpack.unpack = load ptr, ptr %result_value, align 8, !dbg !817
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack.unpack, 0, !dbg !817
  %load_element.unpack.elt11 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !817
  %load_element.unpack.unpack12 = load i64, ptr %load_element.unpack.elt11, align 8, !dbg !817
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack.unpack12, 1, !dbg !817
  %load_element.unpack.elt13 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !817
  %load_element.unpack.unpack14 = load i64, ptr %load_element.unpack.elt13, align 8, !dbg !817
  %load_element.unpack15 = insertvalue %list.RocList %2, i64 %load_element.unpack.unpack14, 2, !dbg !817
  %load_element.elt8 = getelementptr inbounds { %list.RocList, i64 }, ptr %result_value, i64 0, i32 1, !dbg !817
  %load_element.unpack9 = load i64, ptr %load_element.elt8, align 8, !dbg !817
  %call = call fastcc %list.RocList @List_append_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57(%list.RocList %joinpointarg1, i64 %load_element.unpack9), !dbg !817
  br label %joinpointcont, !dbg !817
}

define internal fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %"#arg1") !dbg !819 {
entry:
  %call_builtin = tail call i64 @roc_builtins.str.count_utf8_bytes(ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1"), !dbg !820
  ret i64 %call_builtin, !dbg !820
}

define internal fastcc void @Parser_buildPrimitiveParser_cfd41a13b9e1de3dfbfaadc1fc5e7473458f62fb6c011bf5f7b89cb42a6fae5(ptr %fun, ptr %0) !dbg !822 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %fun, i64 48, i1 false), !dbg !823
  ret void, !dbg !823
}

define internal fastcc void @Parser_buildPrimitiveParser_a4a749317cf1faba11ffe043ffbc79292ac223379bd79cf21ddae8d83a3a(ptr %fun, ptr %0) !dbg !825 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %fun, i64 128, i1 false), !dbg !826
  ret void, !dbg !826
}

define internal fastcc void @Result_map_c3db9144e9e8a2aeb45a4287ca39a6b36f034de3f4c779c625aa44629cf92b4(ptr %result, {} %transform, ptr %0) !dbg !828 {
entry:
  %tag_alloca6 = alloca { [7 x i64], i8 }, align 8, !dbg !829
  %load_element5 = alloca %str.RocStr, align 8, !dbg !829
  %tag_alloca = alloca { [7 x i64], i8 }, align 8, !dbg !829
  %struct_alloca = alloca { { %list.RocList, { [3 x i64], i8 } } }, align 8, !dbg !829
  %result_value = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !829
  %load_element = alloca { %list.RocList, %str.RocStr }, align 8, !dbg !829
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !829
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !829
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !829
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !829

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result, i64 48, i1 false), !dbg !829
  call fastcc void @Parser_82_24a1e4da4e2112b3a86dbba86af39ac2de6bd14c57df8e79f6961180ee8f2fa(ptr nonnull %load_element, {} %transform, ptr nonnull %result_value), !dbg !829
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !829
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, i64 56, i1 false), !dbg !829
  %tag_id_ptr2 = getelementptr inbounds { [7 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !829
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !829
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca, i64 64, i1 false), !dbg !829
  ret void, !dbg !829

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !829
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element5, align 8, !dbg !829
  %load_tag_to_put_in_struct.elt9 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 1, !dbg !829
  %load_tag_to_put_in_struct.unpack10 = load i64, ptr %load_tag_to_put_in_struct.elt9, align 8, !dbg !829
  %load_tag_to_put_in_struct.elt11 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 2, !dbg !829
  %load_tag_to_put_in_struct.unpack12 = load i64, ptr %load_tag_to_put_in_struct.elt11, align 8, !dbg !829
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca6, align 8, !dbg !829
  %tag_alloca6.repack14 = getelementptr inbounds %str.RocStr, ptr %tag_alloca6, i64 0, i32 1, !dbg !829
  store i64 %load_tag_to_put_in_struct.unpack10, ptr %tag_alloca6.repack14, align 8, !dbg !829
  %tag_alloca6.repack16 = getelementptr inbounds %str.RocStr, ptr %tag_alloca6, i64 0, i32 2, !dbg !829
  store i64 %load_tag_to_put_in_struct.unpack12, ptr %tag_alloca6.repack16, align 8, !dbg !829
  %tag_id_ptr8 = getelementptr inbounds { [7 x i64], i8 }, ptr %tag_alloca6, i64 0, i32 1, !dbg !829
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !829
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca6, i64 64, i1 false), !dbg !829
  ret void, !dbg !829
}

define internal fastcc void @Dict_find_9bb8deca757dc2ac2fb673c9939099338c6d1fb2aae6cee85b52f30d7d2b2d8(ptr %"734", i64 %key, ptr %0) !dbg !831 {
entry:
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !832
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !832
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !832
  %struct_field.unpack = load ptr, ptr %"734", align 8, !dbg !832
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !832
  %struct_field.elt8 = getelementptr inbounds %list.RocList, ptr %"734", i64 0, i32 1, !dbg !832
  %struct_field.unpack9 = load i64, ptr %struct_field.elt8, align 8, !dbg !832
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack9, 1, !dbg !832
  %struct_field.elt10 = getelementptr inbounds %list.RocList, ptr %"734", i64 0, i32 2, !dbg !832
  %struct_field.unpack11 = load i64, ptr %struct_field.elt10, align 8, !dbg !832
  %struct_field12 = insertvalue %list.RocList %2, i64 %struct_field.unpack11, 2, !dbg !832
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 1, !dbg !832
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !832
  %3 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !832
  %struct_field1.elt13 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 1, i32 1, !dbg !832
  %struct_field1.unpack14 = load i64, ptr %struct_field1.elt13, align 8, !dbg !832
  %4 = insertvalue %list.RocList %3, i64 %struct_field1.unpack14, 1, !dbg !832
  %struct_field1.elt15 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 1, i32 2, !dbg !832
  %struct_field1.unpack16 = load i64, ptr %struct_field1.elt15, align 8, !dbg !832
  %struct_field117 = insertvalue %list.RocList %4, i64 %struct_field1.unpack16, 2, !dbg !832
  %struct_field_access_record_4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 4, !dbg !832
  %struct_field2 = load i8, ptr %struct_field_access_record_4, align 1, !dbg !832
  %call = tail call fastcc i64 @Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c(i64 %key), !dbg !832
  %call3 = tail call fastcc i32 @Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68(i64 %call), !dbg !832
  %call4 = tail call fastcc i64 @Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0(i64 %call, i8 %struct_field2), !dbg !832
  %call5 = tail call fastcc i1 @List_isEmpty_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79(%list.RocList %struct_field117), !dbg !832
  %call6 = tail call fastcc i1 @Bool_not_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3(i1 %call5), !dbg !832
  br i1 %call6, label %then_block, label %else_block, !dbg !832

then_block:                                       ; preds = %entry
  call fastcc void @Dict_findFirstUnroll_f2e0cf21cda4e3c878e1ab216b192b2e2825d82c3b48a3a8bb6d7de6e7e20e(%list.RocList %struct_field12, i64 %call4, i32 %call3, %list.RocList %struct_field117, i64 %key, ptr nonnull %result_value), !dbg !832
  call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field117), !dbg !832
  call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field12), !dbg !832
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !832
  ret void, !dbg !832

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field117), !dbg !832
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field12), !dbg !832
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !832
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !832
  store i64 %call4, ptr %struct_alloca, align 8, !dbg !832
  %struct_field_gep7 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !832
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep7, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !832
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !832
  ret void, !dbg !832
}

define internal fastcc void @List_iterHelp_405afdd54e1519581be52a8c8268ff856d1e183e22d746e36b8e1e892557df7(%list.RocList %"180", {} %"181", ptr %"182", i64 %"183", i64 %"184", ptr %0) !dbg !834 {
entry:
  %tag_alloca16 = alloca { [0 x i8], i8 }, align 8
  %tag_alloca = alloca { [0 x i8], i8 }, align 8
  %tmp_output_for_jmp10 = alloca { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, align 8
  %result_value = alloca { [0 x i8], i8 }, align 8
  %tmp_output_for_jmp = alloca { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, align 8
  %joinpoint_arg_alloca = alloca { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, align 8
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"180", i64 1), !dbg !835
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(88) %"182", i64 88, i1 false), !dbg !835
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(88) %tmp_output_for_jmp, i64 88, i1 false), !dbg !835
  br label %joinpointcont, !dbg !835

joinpointcont:                                    ; preds = %then_block6, %entry
  %joinpointarg2 = phi i64 [ %"183", %entry ], [ %call9, %then_block6 ], !dbg !835
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"184"), !dbg !835
  br i1 %call, label %then_block, label %else_block, !dbg !835

then_block:                                       ; preds = %joinpointcont
  %call4 = call fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %"180", i64 %joinpointarg2), !dbg !835
  call fastcc void @"#Attr_#inc_24"(ptr nonnull %joinpoint_arg_alloca, i64 1), !dbg !835
  call fastcc void @List_looper_61e5a13d423d566ac5e547894554a8bcf8bc44e60405c767b71c7c83a1e2c55({} %"181", i64 %call4, ptr nonnull %joinpoint_arg_alloca, ptr nonnull %result_value), !dbg !835
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %result_value, i64 0, i32 1, !dbg !835
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !835
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !835
  br i1 %eq_u8, label %then_block6, label %else_block7, !dbg !835

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"180"), !dbg !835
  call fastcc void @"#Attr_#dec_24"(ptr nonnull %joinpoint_arg_alloca), !dbg !835
  %tag_id_ptr18 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca16, i64 0, i32 1, !dbg !835
  store i8 1, ptr %tag_id_ptr18, align 8, !dbg !835
  %1 = load i8, ptr %tag_alloca16, align 8, !dbg !835
  store i8 %1, ptr %0, align 1, !dbg !835
  ret void, !dbg !835

then_block6:                                      ; preds = %then_block
  %call9 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !835
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %tmp_output_for_jmp10, ptr noundef nonnull align 8 dereferenceable(88) %joinpoint_arg_alloca, i64 88, i1 false), !dbg !835
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(88) %tmp_output_for_jmp10, i64 88, i1 false), !dbg !835
  br label %joinpointcont, !dbg !835

else_block7:                                      ; preds = %then_block
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"180"), !dbg !835
  call fastcc void @"#Attr_#dec_24"(ptr nonnull %joinpoint_arg_alloca), !dbg !835
  %tag_id_ptr14 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !835
  store i8 0, ptr %tag_id_ptr14, align 8, !dbg !835
  %2 = load i8, ptr %tag_alloca, align 8, !dbg !835
  store i8 %2, ptr %0, align 1, !dbg !835
  ret void, !dbg !835
}

define internal fastcc { %list.RocList, { i32, i32 } } @List_replaceUnsafe_1bb73f6fafaa3656a8bf5796e2e6e6bdbd058375237d0b9be5834c8c9f54(%list.RocList %"#arg1", i64 %"#arg2", { i32, i32 } %"#arg3") !dbg !837 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca116 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca { i32, i32 }, align 8
  %output_element_as_opaque = alloca { i32, i32 }, align 8
  %"#arg3.elt" = extractvalue { i32, i32 } %"#arg3", 0, !dbg !838
  store i32 %"#arg3.elt", ptr %element_to_pass_as_opaque, align 8, !dbg !838
  %element_to_pass_as_opaque.repack2 = getelementptr inbounds { i32, i32 }, ptr %element_to_pass_as_opaque, i64 0, i32 1, !dbg !838
  %"#arg3.elt3" = extractvalue { i32, i32 } %"#arg3", 1, !dbg !838
  store i32 %"#arg3.elt3", ptr %element_to_pass_as_opaque.repack2, align 4, !dbg !838
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !838
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !838
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !838
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 1, !dbg !838
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !838
  %list_alloca1.repack6 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !838
  %"#arg1.elt7" = extractvalue %list.RocList %"#arg1", 2, !dbg !838
  store i64 %"#arg1.elt7", ptr %list_alloca1.repack6, align 8, !dbg !838
  call void @llvm.experimental.noalias.scope.decl(metadata !840), !dbg !838
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca116), !dbg !838
  call void @llvm.lifetime.start.p0(i64 24, ptr %0), !dbg !838
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !838
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca116, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !838
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca116, i64 24, i1 false), !dbg !838, !noalias !840
  call void @llvm.experimental.noalias.scope.decl(metadata !843), !dbg !838
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !838
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !838, !noalias !846
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !838
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !838, !noalias !846
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !838
  %2 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !838
  %3 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !838
  %4 = or i64 %3, %2, !dbg !838
  %5 = icmp ne i64 %4, 0, !dbg !838
  %brmerge.i.i.i.i = select i1 %5, i1 true, i1 %isneg.i.i.i.i.i, !dbg !838
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !838

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %6 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !838
  %.sroa.0.0.copyload.i.i = load ptr, ptr %1, align 8, !dbg !838, !noalias !846
  %7 = ptrtoint ptr %.sroa.0.0.copyload.i.i to i64, !dbg !838
  %8 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !838
  %9 = select i1 %6, i64 %8, i64 %7, !dbg !838
  %10 = inttoptr i64 %9 to ptr, !dbg !838
  %11 = getelementptr inbounds i64, ptr %10, i64 -1, !dbg !838
  %12 = load i64, ptr %11, align 8, !dbg !838, !noalias !846
  %13 = icmp eq i64 %12, -9223372036854775808, !dbg !838
  br i1 %13, label %list.RocList.isUnique.exit.thread.i.i, label %14, !dbg !838

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !dbg !838, !noalias !840
  br label %roc_builtins.list.replace.exit, !dbg !838

14:                                               ; preds = %list.RocList.isUnique.exit.i.i
  %15 = icmp eq i64 %.sroa.2.0.copyload.i.i, 0, !dbg !838
  br i1 %15, label %.critedge.i.i.i, label %20, !dbg !838

.critedge.i.i.i:                                  ; preds = %14
  %16 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !838
  %17 = icmp eq i64 %9, 0, !dbg !838
  %or.cond.i.i.not69.i.i = select i1 %16, i1 true, i1 %17, !dbg !838
  %.not.i.i.i.i = icmp eq i64 %12, 0, !dbg !838
  %or.cond.i.i = select i1 %or.cond.i.i.not69.i.i, i1 true, i1 %.not.i.i.i.i, !dbg !838
  br i1 %or.cond.i.i, label %list.RocList.decref.exit.i.i, label %18, !dbg !838

18:                                               ; preds = %.critedge.i.i.i
  %19 = add nsw i64 %12, -1, !dbg !838
  %sunkaddr.i.i = inttoptr i64 %9 to ptr, !dbg !838
  %sunkaddr73.i.i = getelementptr inbounds i8, ptr %sunkaddr.i.i, i64 -8, !dbg !838
  store i64 %19, ptr %sunkaddr73.i.i, align 8, !dbg !838, !noalias !846
  br label %list.RocList.decref.exit.i.i, !dbg !838

list.RocList.decref.exit.i.i:                     ; preds = %18, %.critedge.i.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false), !dbg !838, !alias.scope !843, !noalias !840
  br label %roc_builtins.list.replace.exit, !dbg !838

20:                                               ; preds = %14
  %21 = call i64 @llvm.umax.i64(i64 8, i64 %.sroa.2.0.copyload.i.i), !dbg !838
  %22 = mul nuw i64 %21, 8, !dbg !838
  %23 = add nuw i64 %22, 8, !dbg !838
  %24 = call ptr @roc_alloc(i64 %23, i32 8), !dbg !838, !noalias !847
  %25 = getelementptr inbounds i8, ptr %24, i64 8, !dbg !838
  %26 = getelementptr inbounds i8, ptr %25, i64 -8, !dbg !838
  store i64 -9223372036854775808, ptr %26, align 8, !dbg !838, !noalias !847
  %sunkaddr74.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !838
  %.sroa.1.0.copyload.pre.i.i = load i64, ptr %sunkaddr74.i.i, align 8, !dbg !838, !noalias !846
  %.pre.i.i = load ptr, ptr %1, align 8, !dbg !838, !noalias !846
  %27 = mul nuw i64 %.sroa.1.0.copyload.pre.i.i, 8, !dbg !838
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %25, ptr align 1 %.pre.i.i, i64 %27, i1 false), !dbg !838, !noalias !846
  %.sroa.051.0.copyload58.i.i = load ptr, ptr %1, align 8, !dbg !838, !noalias !846
  %sunkaddr76.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !838
  %.sroa.453.0.copyload60.i.i = load i64, ptr %sunkaddr76.i.i, align 8, !dbg !838, !noalias !846
  %28 = ptrtoint ptr %.sroa.051.0.copyload58.i.i to i64, !dbg !838
  %29 = shl i64 %.sroa.453.0.copyload60.i.i, 1, !dbg !838
  %isneg.i.i17.i.i = icmp slt i64 %.sroa.453.0.copyload60.i.i, 0, !dbg !838
  %30 = select i1 %isneg.i.i17.i.i, i64 %29, i64 %28, !dbg !838
  %31 = icmp ne i64 %.sroa.453.0.copyload60.i.i, 0, !dbg !838
  %32 = icmp ne i64 %30, 0, !dbg !838
  %or.cond.i.i18.i.i = select i1 %31, i1 %32, i1 false, !dbg !838
  br i1 %or.cond.i.i18.i.i, label %33, label %list.RocList.decref.exit41.i.i, !dbg !838

33:                                               ; preds = %20
  %34 = inttoptr i64 %30 to ptr, !dbg !838
  %35 = getelementptr inbounds i64, ptr %34, i64 -1, !dbg !838
  %36 = load i64, ptr %35, align 8, !dbg !838, !noalias !846
  %.not.i.i20.i.i = icmp eq i64 %36, 0, !dbg !838
  br i1 %.not.i.i20.i.i, label %list.RocList.decref.exit41.i.i, label %37, !dbg !838

37:                                               ; preds = %33
  %38 = add i64 %36, -1, !dbg !838
  store i64 %38, ptr %35, align 8, !dbg !838, !noalias !846
  %39 = icmp eq i64 %36, -9223372036854775808, !dbg !838
  br i1 %39, label %40, label %list.RocList.decref.exit41.i.i, !dbg !838

40:                                               ; preds = %37
  call void @roc_dealloc(ptr nonnull align 1 %35, i32 8), !dbg !838, !noalias !846
  br label %list.RocList.decref.exit41.i.i, !dbg !838

list.RocList.decref.exit41.i.i:                   ; preds = %40, %37, %33, %20
  store ptr %25, ptr %0, align 8, !dbg !838, !alias.scope !843, !noalias !840
  %.sroa.450.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !838
  store i64 %.sroa.2.0.copyload.i.i, ptr %.sroa.450.0..sroa_idx.i.i, align 8, !dbg !838, !alias.scope !843, !noalias !840
  %.sroa.5.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !838
  store i64 %21, ptr %.sroa.5.0..sroa_idx.i.i, align 8, !dbg !838, !alias.scope !843, !noalias !840
  br label %roc_builtins.list.replace.exit, !dbg !838

roc_builtins.list.replace.exit:                   ; preds = %list.RocList.isUnique.exit.thread.i.i, %list.RocList.decref.exit.i.i, %list.RocList.decref.exit41.i.i
  %41 = load ptr, ptr %0, align 8, !dbg !838, !noalias !840, !nonnull !577
  %42 = mul nuw i64 8, %"#arg2", !dbg !838
  %43 = getelementptr inbounds i8, ptr %41, i64 %42, !dbg !838
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %output_element_as_opaque, ptr align 4 %43, i64 ptrtoint (ptr getelementptr ({ i32, i32 }, ptr null, i32 1) to i64), i1 false), !dbg !850, !noalias !840
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %43, ptr align 4 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr ({ i32, i32 }, ptr null, i32 1) to i64), i1 false), !dbg !854, !noalias !840
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %0, i64 24, i1 false), !dbg !838
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca116), !dbg !838
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !838
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !838
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !838
  %44 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !838
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !838
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !838
  %45 = insertvalue %list.RocList %44, i64 %load_list.unpack9, 1, !dbg !838
  %load_list.elt10 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !838
  %load_list.unpack11 = load i64, ptr %load_list.elt10, align 8, !dbg !838
  %load_list12 = insertvalue %list.RocList %45, i64 %load_list.unpack11, 2, !dbg !838
  %load_element.unpack = load i32, ptr %output_element_as_opaque, align 8, !dbg !838
  %46 = insertvalue { i32, i32 } poison, i32 %load_element.unpack, 0, !dbg !838
  %load_element.elt13 = getelementptr inbounds { i32, i32 }, ptr %output_element_as_opaque, i64 0, i32 1, !dbg !838
  %load_element.unpack14 = load i32, ptr %load_element.elt13, align 4, !dbg !838
  %load_element15 = insertvalue { i32, i32 } %46, i32 %load_element.unpack14, 1, !dbg !838
  %insert_list = insertvalue { %list.RocList, { i32, i32 } } zeroinitializer, %list.RocList %load_list12, 0, !dbg !838
  %insert_value = insertvalue { %list.RocList, { i32, i32 } } %insert_list, { i32, i32 } %load_element15, 1, !dbg !838
  ret { %list.RocList, { i32, i32 } } %insert_value, !dbg !838
}

define internal fastcc %list.RocList @List_map_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894(%list.RocList %list, ptr %mapper) !dbg !856 {
entry:
  %call = tail call fastcc i64 @List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6(%list.RocList %list), !dbg !857
  %call1 = tail call fastcc %list.RocList @List_withCapacity_131fc9d292b7c25af42a6c6deb3979c2144f1a7423d39eb46aef237b8f774b(i64 %call), !dbg !857
  %call2 = tail call fastcc %list.RocList @List_walk_f79740875a4d32b5abcf43deaad586f61fe4062a6785757475b34d82a82(%list.RocList %list, %list.RocList %call1, ptr %mapper), !dbg !857
  ret %list.RocList %call2, !dbg !857
}

define internal fastcc { i64, i32 } @Dict_nextWhileLessHelper_8cf693340558d3441d6232b3632a0e7d41f8065e5f4ec1b10ba263a7452d728(%list.RocList %"185", i64 %"186", i32 %"187") !dbg !859 {
entry:
  tail call fastcc void @"#Attr_#inc_5"(%list.RocList %"185", i64 1), !dbg !860
  br label %joinpointcont, !dbg !860

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi i64 [ %"186", %entry ], [ %call5, %then_block ], !dbg !860
  %joinpointarg2 = phi i32 [ %"187", %entry ], [ %call6, %then_block ], !dbg !860
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %"185", i64 %joinpointarg1), !dbg !860
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !860
  %call3 = tail call fastcc i1 @Num_isLt_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031(i32 %joinpointarg2, i32 %struct_field_access_record_1), !dbg !860
  br i1 %call3, label %then_block, label %else_block, !dbg !860

then_block:                                       ; preds = %joinpointcont
  %call4 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"185"), !dbg !860
  %call5 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg1, i64 %call4), !dbg !860
  %call6 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %joinpointarg2), !dbg !860
  br label %joinpointcont, !dbg !860

else_block:                                       ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %"185"), !dbg !860
  %insert_record_field = insertvalue { i64, i32 } zeroinitializer, i64 %joinpointarg1, 0, !dbg !860
  %insert_record_field7 = insertvalue { i64, i32 } %insert_record_field, i32 %joinpointarg2, 1, !dbg !860
  ret { i64, i32 } %insert_record_field7, !dbg !860
}

define internal fastcc %list.RocList @List_withCapacity_131fc9d292b7c25af42a6c6deb3979c2144f1a7423d39eb46aef237b8f774b(i64 %"#arg1") !dbg !862 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !863), !dbg !866
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %0), !dbg !866, !noalias !863
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1), !dbg !866, !noalias !863
  %.old.not.i.not.i = icmp eq i64 %"#arg1", 0, !dbg !866
  br i1 %.old.not.i.not.i, label %roc_builtins.list.with_capacity.exit, label %.critedge2.i.i, !dbg !866

.critedge2.i.i:                                   ; preds = %entry
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, i8 0, i64 24, i1 false), !dbg !866, !noalias !863
  call void @llvm.experimental.noalias.scope.decl(metadata !868), !dbg !866
  %2 = load ptr, ptr %1, align 8, !dbg !866, !noalias !871
  %.not.i.i = icmp eq ptr %2, null, !dbg !866
  br i1 %.not.i.i, label %16, label %3, !dbg !866

3:                                                ; preds = %.critedge2.i.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !866
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !866, !noalias !871
  %.sroa.3.0..sroa_idx.i1.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !866
  %.sroa.3.0.copyload.i2.i = load i64, ptr %.sroa.3.0..sroa_idx.i1.i, align 8, !dbg !866, !noalias !871
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !866
  %4 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i2.i, i64 0), !dbg !866
  %5 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !866
  %6 = or i64 %5, %4, !dbg !866
  %7 = icmp ne i64 %6, 0, !dbg !866
  %brmerge.i.i.i.i = select i1 %7, i1 true, i1 %isneg.i.i.i.i.i, !dbg !866
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !866

list.RocList.isUnique.exit.i.i:                   ; preds = %3
  %8 = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !866
  %9 = ptrtoint ptr %2 to i64, !dbg !866
  %10 = shl i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !866
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !866
  %12 = inttoptr i64 %11 to ptr, !dbg !866
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !866
  %14 = load i64, ptr %13, align 8, !dbg !866, !noalias !871
  %15 = icmp ne i64 %14, -9223372036854775808, !dbg !866
  %brmerge.i.i = select i1 %15, i1 true, i1 %8, !dbg !866
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !866

16:                                               ; preds = %.critedge2.i.i
  %17 = icmp eq i64 %"#arg1", 0, !dbg !866
  br i1 %17, label %list.RocList.allocate.exit.i.i, label %18, !dbg !866

18:                                               ; preds = %16
  %19 = call i64 @llvm.umax.i64(i64 2, i64 %"#arg1"), !dbg !866
  %20 = mul nuw i64 %19, 24, !dbg !866
  %21 = add nuw i64 %20, 16, !dbg !866
  %22 = call ptr @roc_alloc(i64 %21, i32 8), !dbg !866, !noalias !874
  %23 = getelementptr inbounds i8, ptr %22, i64 16, !dbg !866
  %24 = getelementptr inbounds i8, ptr %23, i64 -8, !dbg !866
  store i64 -9223372036854775808, ptr %24, align 8, !dbg !866, !noalias !874
  br label %list.RocList.allocate.exit.i.i, !dbg !866

list.RocList.allocate.exit.i.i:                   ; preds = %18, %16
  %.sroa.418.0.i.i = phi i64 [ %19, %18 ], [ 0, %16 ], !dbg !866
  %.sroa.016.0.i.i = phi ptr [ %23, %18 ], [ null, %16 ], !dbg !866
  store ptr %.sroa.016.0.i.i, ptr %0, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !866
  store i64 %"#arg1", ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !866
  store i64 %.sroa.418.0.i.i, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !866, !alias.scope !868, !noalias !877
  br label %list.RocList.reallocate.exit.i, !dbg !866

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i, %3
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i2.i, %"#arg1", !dbg !866
  br i1 %.not7.i.i, label %50, label %47, !dbg !866

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %25 = icmp eq i64 %"#arg1", 0, !dbg !866
  br i1 %25, label %list.RocList.allocate.exit.i.i.i, label %26, !dbg !866

26:                                               ; preds = %.critedge.i.i
  %27 = call i64 @llvm.umax.i64(i64 2, i64 %"#arg1"), !dbg !866
  %28 = mul nuw i64 %27, 24, !dbg !866
  %29 = add nuw i64 %28, 16, !dbg !866
  %30 = call ptr @roc_alloc(i64 %29, i32 8), !dbg !866, !noalias !878
  %31 = getelementptr inbounds i8, ptr %30, i64 16, !dbg !866
  %32 = getelementptr inbounds i8, ptr %31, i64 -8, !dbg !866
  store i64 -9223372036854775808, ptr %32, align 8, !dbg !866, !noalias !878
  br label %list.RocList.allocate.exit.i.i.i, !dbg !866

.loopexit.i.i.i:                                  ; preds = %.lr.ph.i.i.i, %list.RocList.allocate.exit.i.i.i
  %33 = icmp ne i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !866
  %34 = icmp ne i64 %11, 0, !dbg !866
  %or.cond.i.i.i.i = select i1 %33, i1 %34, i1 false, !dbg !866
  br i1 %or.cond.i.i.i.i, label %35, label %list.RocList.reallocateFresh.exit.i.i, !dbg !866

35:                                               ; preds = %.loopexit.i.i.i
  %36 = load i64, ptr %13, align 8, !dbg !866, !noalias !883
  %.not.i.i.i.i = icmp eq i64 %36, 0, !dbg !866
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %37, !dbg !866

37:                                               ; preds = %35
  %38 = add i64 %36, -1, !dbg !866
  store i64 %38, ptr %13, align 8, !dbg !866, !noalias !883
  %39 = icmp eq i64 %36, -9223372036854775808, !dbg !866
  br i1 %39, label %40, label %list.RocList.reallocateFresh.exit.i.i, !dbg !866

40:                                               ; preds = %37
  %41 = getelementptr inbounds i8, ptr %13, i64 -8, !dbg !866
  call void @roc_dealloc(ptr nonnull align 1 %41, i32 8), !dbg !866, !noalias !883
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !866

list.RocList.allocate.exit.i.i.i:                 ; preds = %26, %.critedge.i.i
  %.sroa.0.0.i.i.i = phi ptr [ %31, %26 ], [ null, %.critedge.i.i ], !dbg !866
  %.sroa.5.0.i.i.i = phi i64 [ %27, %26 ], [ 0, %.critedge.i.i ], !dbg !866
  %42 = mul nuw i64 %.sroa.2.0.copyload.i.i, 24, !dbg !866
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %.sroa.0.0.i.i.i, ptr nonnull align 1 %2, i64 %42, i1 false), !dbg !866, !noalias !883
  %43 = getelementptr inbounds i8, ptr %.sroa.0.0.i.i.i, i64 %42, !dbg !866
  %44 = sub i64 %"#arg1", %.sroa.2.0.copyload.i.i, !dbg !866
  %45 = mul i64 %44, 24, !dbg !866
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %43, i8 0, i64 %45, i1 false), !dbg !866, !noalias !883
  %46 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !866
  br i1 %46, label %.lr.ph.i.preheader.i.i, label %.loopexit.i.i.i, !dbg !866

.lr.ph.i.preheader.i.i:                           ; preds = %list.RocList.allocate.exit.i.i.i
  br label %.lr.ph.i.i.i, !dbg !866

.lr.ph.i.i.i:                                     ; preds = %.lr.ph.i.i.i, %.lr.ph.i.preheader.i.i
  %lsr.iv21.i.i = phi ptr [ %.sroa.0.0.i.i.i, %.lr.ph.i.preheader.i.i ], [ %uglygep.i.i, %.lr.ph.i.i.i ], !dbg !866
  %lsr.iv.i.i = phi i64 [ %.sroa.2.0.copyload.i.i, %.lr.ph.i.preheader.i.i ], [ %lsr.iv.next.i.i, %.lr.ph.i.i.i ], !dbg !866
  %load_opaque.i = load %list.RocList, ptr %lsr.iv21.i.i, align 8, !dbg !884, !noalias !883
  call fastcc void @"#Attr_#inc_1"(%list.RocList %load_opaque.i, i64 1) #18, !dbg !884, !noalias !883
  %lsr.iv.next.i.i = add i64 %lsr.iv.i.i, -1, !dbg !866
  %uglygep.i.i = getelementptr i8, ptr %lsr.iv21.i.i, i64 24, !dbg !866
  %exitcond.not.i.i.i = icmp eq i64 %lsr.iv.next.i.i, 0, !dbg !866
  br i1 %exitcond.not.i.i.i, label %.loopexit.i.i.i, label %.lr.ph.i.i.i, !dbg !866

list.RocList.reallocateFresh.exit.i.i:            ; preds = %40, %37, %35, %.loopexit.i.i.i
  store ptr %.sroa.0.0.i.i.i, ptr %0, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !866
  store i64 %"#arg1", ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !866
  store i64 %.sroa.5.0.i.i.i, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !866, !alias.scope !868, !noalias !877
  br label %list.RocList.reallocate.exit.i, !dbg !866

47:                                               ; preds = %.thread.i.i
  store ptr %2, ptr %0, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %48 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !866
  store i64 %"#arg1", ptr %48, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %49 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !866
  store i64 %.sroa.3.0.copyload.i2.i, ptr %49, align 8, !dbg !866, !alias.scope !868, !noalias !877
  br label %list.RocList.reallocate.exit.i, !dbg !866

50:                                               ; preds = %.thread.i.i
  %51 = icmp eq i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !866
  br i1 %51, label %63, label %64, !dbg !866

.split1.i.i:                                      ; preds = %57, %.split.i.i
  %phi.call.i.i = phi ptr [ %62, %57 ], [ %2, %.split.i.i ], !dbg !866
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %52 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !866
  store i64 %"#arg1", ptr %52, align 8, !dbg !866, !alias.scope !868, !noalias !877
  %53 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !866
  store i64 %54, ptr %53, align 8, !dbg !866, !alias.scope !868, !noalias !877
  br label %list.RocList.reallocate.exit.i, !dbg !866

.split.i.i:                                       ; preds = %72, %70, %66, %63
  %.0.i.i = phi i64 [ %67, %66 ], [ %71, %70 ], [ %75, %72 ], [ 2, %63 ], !dbg !866
  %54 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %"#arg1"), !dbg !866
  %55 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 24, !dbg !866
  %56 = mul nuw i64 %54, 24, !dbg !866
  %.not.i9.i.i = icmp ult i64 %55, %56, !dbg !866
  br i1 %.not.i9.i.i, label %57, label %.split1.i.i, !dbg !866

57:                                               ; preds = %.split.i.i
  %58 = add nuw i64 %56, 16, !dbg !866
  %59 = add nuw i64 %55, 16, !dbg !866
  %60 = getelementptr inbounds i8, ptr %2, i64 -16, !dbg !866
  %61 = call ptr @roc_realloc(ptr nonnull align 1 %60, i64 %58, i64 %59, i32 8), !dbg !866, !noalias !871
  %62 = getelementptr inbounds i8, ptr %61, i64 16, !dbg !866
  br label %.split1.i.i, !dbg !866

63:                                               ; preds = %50
  br label %.split.i.i, !dbg !866

64:                                               ; preds = %50
  %65 = icmp ult i64 %.sroa.3.0.copyload.i2.i, 170, !dbg !866
  br i1 %65, label %66, label %68, !dbg !866

66:                                               ; preds = %64
  %67 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !866
  br label %.split.i.i, !dbg !866

68:                                               ; preds = %64
  %69 = icmp ugt i64 %.sroa.3.0.copyload.i2.i, 5461, !dbg !866
  br i1 %69, label %70, label %72, !dbg !866

70:                                               ; preds = %68
  %71 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !866
  br label %.split.i.i, !dbg !866

72:                                               ; preds = %68
  %73 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 3, !dbg !866
  %74 = add nuw i64 %73, 1, !dbg !866
  %75 = lshr i64 %74, 1, !dbg !866
  br label %.split.i.i, !dbg !866

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %47, %list.RocList.reallocateFresh.exit.i.i, %list.RocList.allocate.exit.i.i
  %.sroa.03.0.copyload.i.i = load ptr, ptr %0, align 8, !dbg !866, !noalias !877
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !866
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !866, !noalias !877
  br label %roc_builtins.list.with_capacity.exit, !dbg !866

roc_builtins.list.with_capacity.exit:             ; preds = %entry, %list.RocList.reallocate.exit.i
  %.sroa.4.0.i = phi i64 [ %.sroa.3.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ 0, %entry ], !dbg !866
  %.sroa.0.0.i = phi ptr [ %.sroa.03.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ null, %entry ], !dbg !866
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %0), !dbg !866, !noalias !863
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1), !dbg !866, !noalias !863
  store ptr %.sroa.0.0.i, ptr %list_alloca, align 8, !dbg !866, !alias.scope !863
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !866
  store i64 0, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !866, !alias.scope !863
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !866
  store i64 %.sroa.4.0.i, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !866, !alias.scope !863
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !866
  %76 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !866
  %load_list.elt1 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !866
  %load_list.unpack2 = load i64, ptr %load_list.elt1, align 8, !dbg !866
  %77 = insertvalue %list.RocList %76, i64 %load_list.unpack2, 1, !dbg !866
  %load_list.elt3 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !866
  %load_list.unpack4 = load i64, ptr %load_list.elt3, align 8, !dbg !866
  %load_list5 = insertvalue %list.RocList %77, i64 %load_list.unpack4, 2, !dbg !866
  ret %list.RocList %load_list5, !dbg !866
}

define internal fastcc void @Inspect_210_22d059c38186d5cb98646d1e317ec5398bde0f1c120a343e26fd56512b47ba5(ptr %f2, ptr %inspector, ptr %0) !dbg !888 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 32 to ptr), ptr %const_str_store, align 8, !dbg !889
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !889
  store i64 0, ptr %const_str_store.repack2, align 8, !dbg !889
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !889
  store i64 -9151314442816847872, ptr %const_str_store.repack3, align 8, !dbg !889
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f2, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !889
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !889
  call fastcc void @Inspect_213_1d346aa605d9beef3d3c8b59d397858b899a3c7efdcede8d0efd4953334f936(ptr nonnull %result_value, ptr %inspector, ptr nonnull %result_value1), !dbg !889
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !889
  ret void, !dbg !889
}

define internal fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %"#arg1", i64 %"#arg2") !dbg !891 {
entry:
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !892
  %list_get_element = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", !dbg !892
  %list_get_load_element.unpack = load i64, ptr %list_get_element, align 8, !dbg !892
  %0 = insertvalue { i64, %list.RocList } poison, i64 %list_get_load_element.unpack, 0, !dbg !892
  %list_get_load_element.elt1 = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", i32 1, !dbg !892
  %list_get_load_element.unpack2.unpack = load ptr, ptr %list_get_load_element.elt1, align 8, !dbg !892
  %1 = insertvalue %list.RocList poison, ptr %list_get_load_element.unpack2.unpack, 0, !dbg !892
  %list_get_load_element.unpack2.elt4 = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", i32 1, i32 1, !dbg !892
  %list_get_load_element.unpack2.unpack5 = load i64, ptr %list_get_load_element.unpack2.elt4, align 8, !dbg !892
  %2 = insertvalue %list.RocList %1, i64 %list_get_load_element.unpack2.unpack5, 1, !dbg !892
  %list_get_load_element.unpack2.elt6 = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", i32 1, i32 2, !dbg !892
  %list_get_load_element.unpack2.unpack7 = load i64, ptr %list_get_load_element.unpack2.elt6, align 8, !dbg !892
  %list_get_load_element.unpack28 = insertvalue %list.RocList %2, i64 %list_get_load_element.unpack2.unpack7, 2, !dbg !892
  %list_get_load_element3 = insertvalue { i64, %list.RocList } %0, %list.RocList %list_get_load_element.unpack28, 1, !dbg !892
  ret { i64, %list.RocList } %list_get_load_element3, !dbg !892
}

define internal fastcc void @String_parseStr_f266767836e348a7bd51d0397eeb6f3f7b5286423dc3a4dc81961244fff1(ptr %parser, ptr %input, ptr %0) !dbg !894 {
entry:
  %result_value1 = alloca { [9 x i64], i8 }, align 8, !dbg !895
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !895
  %call = tail call fastcc %list.RocList @String_strToRaw_ef4fd8e61cea3e28e02cea992acb5b69ff53641f7df759d72efd1ca2d6d2741(ptr %input), !dbg !895
  call fastcc void @String_parseUtf8_6c4184d9de7bfc8cf488ca98f4fc9c30e82530ee2451f209df4c26db25e7(ptr %parser, %list.RocList %call, ptr nonnull %result_value), !dbg !895
  call fastcc void @"#Attr_#dec_12"(%list.RocList %call), !dbg !895
  call fastcc void @Result_mapErr_f2eb2e65858ef9a081c444e7b9b2cef1ed51b5a1e38027833034b9f057aa3131(ptr nonnull %result_value, {} zeroinitializer, ptr nonnull %result_value1), !dbg !895
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value1, i64 80, i1 false), !dbg !895
  ret void, !dbg !895
}

define internal fastcc void @List_iterate_21b5c7d5305aa5ff4df495f05c9e59c37d76367eacec9dd321a0e78143dfc4a3(%list.RocList %list, {} %init, %list.RocList %func, ptr %0) !dbg !897 {
entry:
  %result_value = alloca { [0 x i8], i8 }, align 8, !dbg !898
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !898
  call fastcc void @List_iterHelp_28b81340646419744ffe2153acaa8e39d3c2d10c2a51eb5702318112c7c5(%list.RocList %list, {} %init, %list.RocList %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !898
  %1 = load i8, ptr %result_value, align 8, !dbg !898
  store i8 %1, ptr %0, align 1, !dbg !898
  ret void, !dbg !898
}

define internal fastcc void @PlatformTasks_task_closure_stdoutLine_7235554a6ca1ba5277e58026ca9a925c605ca3b7e9655e55441a77bd6b3fbf({} %"133", ptr %closure_arg_stdoutLine_0, ptr %0) !dbg !900 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @roc_fx_stdoutLine_fastcc_wrapper(ptr %closure_arg_stdoutLine_0, ptr nonnull %result_value), !dbg !901
  call fastcc void @"#Attr_#dec_13"(ptr %closure_arg_stdoutLine_0), !dbg !901
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !901
  ret void, !dbg !901
}

define internal fastcc void @List_getUnsafe_42f43e247a90ff93dac3c860bb219ee18693539a6e942bad35bcb7297d6e16(%list.RocList %"#arg1", i64 %"#arg2", ptr %0) !dbg !903 {
entry:
  ret void, !dbg !904
}

define internal fastcc i1 @List_any_7f39af79a2c681124253a11db0202f701d4c3013db3c1272927c55405b9031(%list.RocList %list, i64 %predicate) !dbg !906 {
entry:
  %result_value = alloca { [0 x i8], i8 }, align 8
  call fastcc void @List_iterate_789661f33c6ea1791479ecf1f52dd93e21b779364a5197d9de3459113903b9c(%list.RocList %list, {} zeroinitializer, i64 %predicate, ptr nonnull %result_value), !dbg !907
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %result_value, i64 0, i32 1, !dbg !907
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !907
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !907
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !907

then_block:                                       ; preds = %entry
  %call = call fastcc i1 @Bool_false_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671(), !dbg !907
  ret i1 %call, !dbg !907

else_block:                                       ; preds = %entry
  %call1 = call fastcc i1 @Bool_true_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb(), !dbg !907
  ret i1 %call1, !dbg !907
}

define internal fastcc { {}, { {}, { { {}, {} }, {} } } } @Parser_buildPrimitiveParser_dff42d2171b1fc085e9563c701a7ea21ae09129e8d47f3804e7a53b5323f({ {}, { {}, { { {}, {} }, {} } } } %fun) !dbg !909 {
entry:
  ret { {}, { {}, { { {}, {} }, {} } } } %fun, !dbg !910
}

define internal fastcc void @Parser_parsePartial_3590754411a17cd0c570f24ca5606122af7e3eddb51d1a982a156e9521f4577({ { {}, {} }, {} } %"246", %list.RocList %input, ptr %0) !dbg !912 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_combined_9dafd8f0b5a93f0de91f9c0f5e84ec19365c89730e1f530e43e35727a7be6d8(%list.RocList %input, { { {}, {} }, {} } %"246", ptr nonnull %result_value), !dbg !913
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !913
  ret void, !dbg !913
}

define internal fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %"#arg1", i64 %"#arg2") !dbg !915 {
entry:
  %eq_u64 = icmp eq i64 %"#arg1", %"#arg2", !dbg !916
  ret i1 %eq_u64, !dbg !916
}

define internal fastcc void @Inspect_213_e55e154fb3c0423726cb71a0afdbc369aa2a0593b155c1e187f99dad748(ptr %x, ptr %inspector, ptr %0) !dbg !918 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_apply_40fe0ba3064c6cb636e3954b551733ab4335a5a776bbbf988c5d31fb20b470(ptr %inspector, ptr %x, ptr nonnull %result_value), !dbg !919
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !919
  ret void, !dbg !919
}

define internal fastcc void @Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5(ptr %name, %list.RocList %fields, ptr %0) !dbg !921 {
entry:
  %result_value5 = alloca { [6 x i64], i8 }, align 8, !dbg !922
  %tag_alloca2 = alloca { [6 x i64], i8 }, align 8, !dbg !922
  %struct_alloca = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !922
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !922
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !922
  %call = tail call fastcc i1 @List_isEmpty_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3(%list.RocList %fields), !dbg !922
  br i1 %call, label %then_block, label %else_block, !dbg !922

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !922
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %name, align 8, !dbg !922
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 1, !dbg !922
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !922
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 2, !dbg !922
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !922
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !922
  %tag_alloca.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !922
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca.repack15, align 8, !dbg !922
  %tag_alloca.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !922
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca.repack17, align 8, !dbg !922
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !922
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !922
  call fastcc void @Inspect_custom_a571631963e6f373060368cd9665a453dbfac813965b321bf9bb77263202ca(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !922
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !922
  ret void, !dbg !922

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_26"(%list.RocList %fields, i64 1), !dbg !922
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !922
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %name, i64 24, i1 false), !dbg !922
  %struct_field_gep1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !922
  %fields.elt = extractvalue %list.RocList %fields, 0, !dbg !922
  store ptr %fields.elt, ptr %struct_field_gep1, align 8, !dbg !922
  %struct_field_gep1.repack6 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !922
  %fields.elt7 = extractvalue %list.RocList %fields, 1, !dbg !922
  store i64 %fields.elt7, ptr %struct_field_gep1.repack6, align 8, !dbg !922
  %struct_field_gep1.repack8 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !922
  %fields.elt9 = extractvalue %list.RocList %fields, 2, !dbg !922
  store i64 %fields.elt9, ptr %struct_field_gep1.repack8, align 8, !dbg !922
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !922
  %tag_id_ptr4 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca2, i64 0, i32 1, !dbg !922
  store i8 1, ptr %tag_id_ptr4, align 8, !dbg !922
  call fastcc void @Inspect_custom_a571631963e6f373060368cd9665a453dbfac813965b321bf9bb77263202ca(ptr nonnull %tag_alloca2, ptr nonnull %result_value5), !dbg !922
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value5, i64 56, i1 false), !dbg !922
  ret void, !dbg !922
}

define internal fastcc { i64, i32 } @Dict_nextWhileLess_622c9f939ebee86f480d73fdef56611b8899ab7e93ac9da07aeba3373394a(%list.RocList %buckets, i64 %key, i8 %shifts) !dbg !924 {
entry:
  %call = tail call fastcc i64 @Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c(i64 %key), !dbg !925
  %call1 = tail call fastcc i32 @Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68(i64 %call), !dbg !925
  %call2 = tail call fastcc i64 @Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0(i64 %call, i8 %shifts), !dbg !925
  %call3 = tail call fastcc { i64, i32 } @Dict_nextWhileLessHelper_8cf693340558d3441d6232b3632a0e7d41f8065e5f4ec1b10ba263a7452d728(%list.RocList %buckets, i64 %call2, i32 %call1), !dbg !925
  ret { i64, i32 } %call3, !dbg !925
}

define internal fastcc i8 @Str_getUnsafe_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1(ptr %"#arg1", i64 %"#arg2") !dbg !927 {
entry:
  %call_builtin = tail call i8 @roc_builtins.str.get_unsafe(ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1", i64 %"#arg2"), !dbg !928
  ret i8 %call_builtin, !dbg !928
}

define internal fastcc i1 @Num_isGte_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63(i8 %"#arg1", i8 %"#arg2") !dbg !930 {
entry:
  %gte_uint = icmp uge i8 %"#arg1", %"#arg2", !dbg !931
  ret i1 %gte_uint, !dbg !931
}

define internal fastcc void @Inspect_dbgInit_14a58b912b778d42457329574d6284a94c25ccd4d26148cd2e979b6a93d4ec9({} %"301", ptr %0) !dbg !933 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  store ptr null, ptr %const_str_store, align 8, !dbg !934
  %const_str_store.repack1 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !934
  store i64 0, ptr %const_str_store.repack1, align 8, !dbg !934
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !934
  store i64 -9223372036854775808, ptr %const_str_store.repack2, align 8, !dbg !934
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %const_str_store, i64 24, i1 false), !dbg !934
  ret void, !dbg !934
}

define internal fastcc i1 @Bool_not_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3(i1 %"#arg1") !dbg !936 {
entry:
  %bool_not = xor i1 %"#arg1", true, !dbg !937
  ret i1 %bool_not, !dbg !937
}

define internal fastcc %list.RocList @List_sublist_55aa18fc3c82fe108fcf64fea07364ddba1e8c526b8d27b19692a7748519e1c(%list.RocList %list, { i64, i64 } %config) !dbg !939 {
entry:
  %struct_field_access_record_1 = extractvalue { i64, i64 } %config, 1, !dbg !940
  %struct_field_access_record_0 = extractvalue { i64, i64 } %config, 0, !dbg !940
  %call = tail call fastcc %list.RocList @List_sublistLowlevel_594462766f77f828358545ebdadebc7d564d3daf466672cbde673babcf18c3c2(%list.RocList %list, i64 %struct_field_access_record_1, i64 %struct_field_access_record_0), !dbg !940
  ret %list.RocList %call, !dbg !940
}

define internal fastcc {} @Parser_buildPrimitiveParser_6f672ef3f2eac86f2b3fa6aa9eb2b9186335f9791fec7495d3558c46b2dce({} %fun) !dbg !942 {
entry:
  ret {} %fun, !dbg !943
}

define internal fastcc i1 @Five_56_e08944a08de1317a589af2c16d7f4332d47e2a35e653e802fab1d0d46a31f5(i64 %y, %list.RocList %rule) !dbg !945 {
entry:
  %call = tail call fastcc i1 @List_contains_9b7306a2e571f3d11e34b901a57455c3e32e69a2f8fde813ed1c4300e12712(%list.RocList %rule, i64 %y), !dbg !946
  %call1 = tail call fastcc i1 @Bool_not_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3(i1 %call), !dbg !946
  ret i1 %call1, !dbg !946
}

define internal fastcc void @String_44_26d17240b95ed431e64caf285536baf5e96b5875cbd172e5d417c1ae92a275(ptr %problem, ptr %0) !dbg !948 {
entry:
  %tag_alloca8 = alloca { [8 x i64], i8 }, align 8, !dbg !949
  %result_value = alloca %str.RocStr, align 8, !dbg !949
  %tag_alloca = alloca { [8 x i64], i8 }, align 8, !dbg !949
  %load_element = alloca %str.RocStr, align 8, !dbg !949
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %problem, i64 0, i32 1, !dbg !949
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !949
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !949
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !949

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %problem, i64 24, i1 false), !dbg !949
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !949
  %load_tag_to_put_in_struct.elt25 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !949
  %load_tag_to_put_in_struct.unpack26 = load i64, ptr %load_tag_to_put_in_struct.elt25, align 8, !dbg !949
  %load_tag_to_put_in_struct.elt27 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !949
  %load_tag_to_put_in_struct.unpack28 = load i64, ptr %load_tag_to_put_in_struct.elt27, align 8, !dbg !949
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !949
  %tag_alloca.repack30 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !949
  store i64 %load_tag_to_put_in_struct.unpack26, ptr %tag_alloca.repack30, align 8, !dbg !949
  %tag_alloca.repack32 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !949
  store i64 %load_tag_to_put_in_struct.unpack28, ptr %tag_alloca.repack32, align 8, !dbg !949
  %tag_id_ptr2 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !949
  store i8 4, ptr %tag_id_ptr2, align 8, !dbg !949
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, i64 72, i1 false), !dbg !949
  ret void, !dbg !949

else_block:                                       ; preds = %entry
  %load_element5.unpack = load ptr, ptr %problem, align 8, !dbg !949
  %1 = insertvalue %list.RocList poison, ptr %load_element5.unpack, 0, !dbg !949
  %load_element5.elt11 = getelementptr inbounds %list.RocList, ptr %problem, i64 0, i32 1, !dbg !949
  %load_element5.unpack12 = load i64, ptr %load_element5.elt11, align 8, !dbg !949
  %2 = insertvalue %list.RocList %1, i64 %load_element5.unpack12, 1, !dbg !949
  %load_element5.elt13 = getelementptr inbounds %list.RocList, ptr %problem, i64 0, i32 2, !dbg !949
  %load_element5.unpack14 = load i64, ptr %load_element5.elt13, align 8, !dbg !949
  %load_element515 = insertvalue %list.RocList %2, i64 %load_element5.unpack14, 2, !dbg !949
  call fastcc void @String_strFromUtf8_46cc5767571b90625b30018eaab612bec9afa9e9b65ec58408e442cd305a(%list.RocList %load_element515, ptr nonnull %result_value), !dbg !949
  %load_tag_to_put_in_struct6.unpack = load ptr, ptr %result_value, align 8, !dbg !949
  %load_tag_to_put_in_struct6.elt16 = getelementptr inbounds %str.RocStr, ptr %result_value, i64 0, i32 1, !dbg !949
  %load_tag_to_put_in_struct6.unpack17 = load i64, ptr %load_tag_to_put_in_struct6.elt16, align 8, !dbg !949
  %load_tag_to_put_in_struct6.elt18 = getelementptr inbounds %str.RocStr, ptr %result_value, i64 0, i32 2, !dbg !949
  %load_tag_to_put_in_struct6.unpack19 = load i64, ptr %load_tag_to_put_in_struct6.elt18, align 8, !dbg !949
  store ptr %load_tag_to_put_in_struct6.unpack, ptr %tag_alloca8, align 8, !dbg !949
  %tag_alloca8.repack21 = getelementptr inbounds %str.RocStr, ptr %tag_alloca8, i64 0, i32 1, !dbg !949
  store i64 %load_tag_to_put_in_struct6.unpack17, ptr %tag_alloca8.repack21, align 8, !dbg !949
  %tag_alloca8.repack23 = getelementptr inbounds %str.RocStr, ptr %tag_alloca8, i64 0, i32 2, !dbg !949
  store i64 %load_tag_to_put_in_struct6.unpack19, ptr %tag_alloca8.repack23, align 8, !dbg !949
  %tag_id_ptr10 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !949
  store i8 5, ptr %tag_id_ptr10, align 8, !dbg !949
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca8, i64 72, i1 false), !dbg !949
  ret void, !dbg !949
}

define internal fastcc void @Parser_buildPrimitiveParser_669ffb146edc1a83983bf84461cb12a7beb79c3bdd627d16a2afb10ae7410(ptr %fun, ptr %0) !dbg !951 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %fun, i64 32, i1 false), !dbg !952
  ret void, !dbg !952
}

define internal fastcc { %list.RocList, i64 } @Parser_82_9e244d6892b46ff752addc4350601bba9618a34f4929cc9daa8a3c0abac2c({ %list.RocList, i64 } %"425", {} %funVal) !dbg !954 {
entry:
  %struct_field_access_record_0 = extractvalue { %list.RocList, i64 } %"425", 0, !dbg !955
  %struct_field_access_record_1 = extractvalue { %list.RocList, i64 } %"425", 1, !dbg !955
  %call = tail call fastcc i64 @Parser_156_df31287a46e9ee276abe5d7212b96c65cafa585df9b2e1e4fe38d7cfb6150fa(i64 %struct_field_access_record_1), !dbg !955
  %insert_record_field = insertvalue { %list.RocList, i64 } zeroinitializer, %list.RocList %struct_field_access_record_0, 0, !dbg !955
  %insert_record_field1 = insertvalue { %list.RocList, i64 } %insert_record_field, i64 %call, 1, !dbg !955
  ret { %list.RocList, i64 } %insert_record_field1, !dbg !955
}

define internal fastcc { %list.RocList, i64 } @Parser_82_9ebff67372e75a135a7dfe8147a63ffdbbe59a6628109c2ab0d254c0a48b94(ptr %"425", {} %funVal) !dbg !957 {
entry:
  %struct_field.unpack = load ptr, ptr %"425", align 8, !dbg !958
  %0 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !958
  %struct_field.elt3 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 1, !dbg !958
  %struct_field.unpack4 = load i64, ptr %struct_field.elt3, align 8, !dbg !958
  %1 = insertvalue %list.RocList %0, i64 %struct_field.unpack4, 1, !dbg !958
  %struct_field.elt5 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 2, !dbg !958
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !958
  %struct_field7 = insertvalue %list.RocList %1, i64 %struct_field.unpack6, 2, !dbg !958
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, !dbg !958
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !958
  %2 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !958
  %struct_field1.elt8 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, i32 1, !dbg !958
  %struct_field1.unpack9 = load i64, ptr %struct_field1.elt8, align 8, !dbg !958
  %3 = insertvalue %list.RocList %2, i64 %struct_field1.unpack9, 1, !dbg !958
  %struct_field1.elt10 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, i32 2, !dbg !958
  %struct_field1.unpack11 = load i64, ptr %struct_field1.elt10, align 8, !dbg !958
  %struct_field112 = insertvalue %list.RocList %3, i64 %struct_field1.unpack11, 2, !dbg !958
  %call = tail call fastcc i64 @String_123_4d171470486115e34f5abed227b887e2bccd7f223e7f7547111d26dfad766(%list.RocList %struct_field112), !dbg !958
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field112), !dbg !958
  %insert_record_field = insertvalue { %list.RocList, i64 } zeroinitializer, %list.RocList %struct_field7, 0, !dbg !958
  %insert_record_field2 = insertvalue { %list.RocList, i64 } %insert_record_field, i64 %call, 1, !dbg !958
  ret { %list.RocList, i64 } %insert_record_field2, !dbg !958
}

define internal fastcc i64 @Num_bitwiseOr_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133(i64 %"#arg1", i64 %"#arg2") !dbg !960 {
entry:
  %int_bitwise_or = or i64 %"#arg1", %"#arg2", !dbg !961
  ret i64 %int_bitwise_or, !dbg !961
}

define internal fastcc void @PlatformTasks_task_closure_fileReadBytes_cb649ec1a6b194d7045c81b285060bfd3e5172d78e4f6bdab3db7dc92110({} %"139", %list.RocList %closure_arg_fileReadBytes_0, ptr %0) !dbg !963 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @roc_fx_fileReadBytes_fastcc_wrapper(%list.RocList %closure_arg_fileReadBytes_0, ptr nonnull %result_value), !dbg !964
  call fastcc void @"#Attr_#dec_12"(%list.RocList %closure_arg_fileReadBytes_0), !dbg !964
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !964
  ret void, !dbg !964
}

define internal fastcc void @InternalFile_handleReadErr_534e747f8ed667439b7c2bba127be91eb34da68c6374c1c2a62178b3324fb55(ptr %err, ptr %0) !dbg !966 {
entry:
  %tag_alloca41 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca38 = alloca { [3 x i64], i8 }, align 8
  %const_str_store33 = alloca %str.RocStr, align 8
  %tag_alloca28 = alloca { [3 x i64], i8 }, align 8
  %const_str_store23 = alloca %str.RocStr, align 8
  %tag_alloca18 = alloca { [3 x i64], i8 }, align 8
  %const_str_store13 = alloca %str.RocStr, align 8
  %tag_alloca8 = alloca { [3 x i64], i8 }, align 8
  %const_str_store3 = alloca %str.RocStr, align 8
  %tag_alloca = alloca { [3 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store, align 8, !dbg !967
  %const_str_store.repack44 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !967
  store i64 8243122709995338340, ptr %const_str_store.repack44, align 8, !dbg !967
  %const_str_store.repack45 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !967
  store i64 -7637994581112359566, ptr %const_str_store.repack45, align 8, !dbg !967
  %call = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store), !dbg !967
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !967
  br label %joinpointcont, !dbg !967

joinpointcont:                                    ; preds = %entry
  br i1 %call, label %then_block, label %else_block, !dbg !967

then_block:                                       ; preds = %joinpointcont
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !967
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !967
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !967
  ret void, !dbg !967

else_block:                                       ; preds = %joinpointcont
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store3, align 8, !dbg !967
  %const_str_store3.repack46 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 1, !dbg !967
  store i64 8018224207982377572, ptr %const_str_store3.repack46, align 8, !dbg !967
  %const_str_store3.repack47 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 2, !dbg !967
  store i64 -7854277750127563147, ptr %const_str_store3.repack47, align 8, !dbg !967
  %call4 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store3), !dbg !967
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store3), !dbg !967
  br label %joinpointcont1, !dbg !967

joinpointcont1:                                   ; preds = %else_block
  br i1 %call4, label %then_block6, label %else_block7, !dbg !967

then_block6:                                      ; preds = %joinpointcont1
  %tag_id_ptr10 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !967
  store i8 1, ptr %tag_id_ptr10, align 8, !dbg !967
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca8, i64 32, i1 false), !dbg !967
  ret void, !dbg !967

else_block7:                                      ; preds = %joinpointcont1
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store13, align 8, !dbg !967
  %const_str_store13.repack48 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 1, !dbg !967
  store i64 7372239162218003044, ptr %const_str_store13.repack48, align 8, !dbg !967
  %const_str_store13.repack49 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 2, !dbg !967
  store i64 -7637971435617688243, ptr %const_str_store13.repack49, align 8, !dbg !967
  %call14 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store13), !dbg !967
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store13), !dbg !967
  br label %joinpointcont11, !dbg !967

joinpointcont11:                                  ; preds = %else_block7
  br i1 %call14, label %then_block16, label %else_block17, !dbg !967

then_block16:                                     ; preds = %joinpointcont11
  %tag_id_ptr20 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca18, i64 0, i32 1, !dbg !967
  store i8 3, ptr %tag_id_ptr20, align 8, !dbg !967
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca18, i64 32, i1 false), !dbg !967
  ret void, !dbg !967

else_block17:                                     ; preds = %joinpointcont11
  store ptr getelementptr inbounds ([35 x i8], ptr @_str_literal_5235305213309790423, i64 0, i64 8), ptr %const_str_store23, align 8, !dbg !967
  %const_str_store23.repack50 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 1, !dbg !967
  store i64 27, ptr %const_str_store23.repack50, align 8, !dbg !967
  %const_str_store23.repack51 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 2, !dbg !967
  store i64 27, ptr %const_str_store23.repack51, align 8, !dbg !967
  %call24 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store23), !dbg !967
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store23), !dbg !967
  br label %joinpointcont21, !dbg !967

joinpointcont21:                                  ; preds = %else_block17
  br i1 %call24, label %then_block26, label %else_block27, !dbg !967

then_block26:                                     ; preds = %joinpointcont21
  %tag_id_ptr30 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca28, i64 0, i32 1, !dbg !967
  store i8 4, ptr %tag_id_ptr30, align 8, !dbg !967
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca28, i64 32, i1 false), !dbg !967
  ret void, !dbg !967

else_block27:                                     ; preds = %joinpointcont21
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store33, align 8, !dbg !967
  %const_str_store33.repack52 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 1, !dbg !967
  store i64 7234308675592665700, ptr %const_str_store33.repack52, align 8, !dbg !967
  %const_str_store33.repack53 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 2, !dbg !967
  store i64 -7854277750126512817, ptr %const_str_store33.repack53, align 8, !dbg !967
  %call34 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store33), !dbg !967
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store33), !dbg !967
  br label %joinpointcont31, !dbg !967

joinpointcont31:                                  ; preds = %else_block27
  br i1 %call34, label %then_block36, label %else_block37, !dbg !967

then_block36:                                     ; preds = %joinpointcont31
  %tag_id_ptr40 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca38, i64 0, i32 1, !dbg !967
  store i8 5, ptr %tag_id_ptr40, align 8, !dbg !967
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca38, i64 32, i1 false), !dbg !967
  ret void, !dbg !967

else_block37:                                     ; preds = %joinpointcont31
  call fastcc void @"#Attr_#inc_13"(ptr %err, i64 1), !dbg !967
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %err, align 8, !dbg !967
  %load_tag_to_put_in_struct.elt54 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 1, !dbg !967
  %load_tag_to_put_in_struct.unpack55 = load i64, ptr %load_tag_to_put_in_struct.elt54, align 8, !dbg !967
  %load_tag_to_put_in_struct.elt56 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 2, !dbg !967
  %load_tag_to_put_in_struct.unpack57 = load i64, ptr %load_tag_to_put_in_struct.elt56, align 8, !dbg !967
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca41, align 8, !dbg !967
  %tag_alloca41.repack59 = getelementptr inbounds %str.RocStr, ptr %tag_alloca41, i64 0, i32 1, !dbg !967
  store i64 %load_tag_to_put_in_struct.unpack55, ptr %tag_alloca41.repack59, align 8, !dbg !967
  %tag_alloca41.repack61 = getelementptr inbounds %str.RocStr, ptr %tag_alloca41, i64 0, i32 2, !dbg !967
  store i64 %load_tag_to_put_in_struct.unpack57, ptr %tag_alloca41.repack61, align 8, !dbg !967
  %tag_id_ptr43 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca41, i64 0, i32 1, !dbg !967
  store i8 2, ptr %tag_id_ptr43, align 8, !dbg !967
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca41, i64 32, i1 false), !dbg !967
  ret void, !dbg !967
}

define internal fastcc {} @InternalPath_wrap_8262eb8f2fda1d3e94add0fe7ca5b36fa0ff90c97589de5669fc657af690ed() !dbg !969 {
entry:
  ret {} zeroinitializer, !dbg !970
}

define internal fastcc void @Parser_parsePartial_551311f4cd4b771fb26caae5c14c6c179adea28ad16fbb2d47e334e0dd18b(ptr %"246", %list.RocList %input, ptr %0) !dbg !972 {
entry:
  %result_value = alloca { [7 x i64], i8 }, align 8
  call fastcc void @Parser_57_81b6d1d3d209194aa735675712bd730b1987c61790f68995aee106436e9(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !973
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !973
  ret void, !dbg !973
}

define internal fastcc i32 @Num_bitwiseOr_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b(i32 %"#arg1", i32 %"#arg2") !dbg !975 {
entry:
  %int_bitwise_or = or i32 %"#arg1", %"#arg2", !dbg !976
  ret i32 %int_bitwise_or, !dbg !976
}

define internal fastcc i64 @Dict_scanForIndex_dbbb614026929029a924a622e5a645206e5e1277bd8c25cb7b78527df1a8c(%list.RocList %"200", i64 %"201", i32 %"202") !dbg !978 {
entry:
  tail call fastcc void @"#Attr_#inc_5"(%list.RocList %"200", i64 1), !dbg !979
  br label %joinpointcont, !dbg !979

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi i64 [ %"201", %entry ], [ %call5, %then_block ], !dbg !979
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %"200", i64 %joinpointarg1), !dbg !979
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !979
  %call3 = tail call fastcc i1 @Bool_isNotEq_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6(i32 %struct_field_access_record_0, i32 %"202"), !dbg !979
  br i1 %call3, label %then_block, label %else_block, !dbg !979

then_block:                                       ; preds = %joinpointcont
  %call4 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"200"), !dbg !979
  %call5 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg1, i64 %call4), !dbg !979
  br label %joinpointcont, !dbg !979

else_block:                                       ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %"200"), !dbg !979
  ret i64 %joinpointarg1, !dbg !979
}

define internal fastcc void @Parser_parsePartial_1832725737c877b4e64b260205e689985bae38cc7369bbb84cf4d425217(ptr %"246", %list.RocList %input, ptr %0) !dbg !981 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_200_42f82f3ac78246c9b6ea3a77755de6567cf083ed525e468a4eb63ca0e388(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !982
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !982
  ret void, !dbg !982
}

define internal fastcc void @Result_mapErr_f2eb2e65858ef9a081c444e7b9b2cef1ed51b5a1e38027833034b9f057aa3131(ptr %result, {} %transform, ptr %0) !dbg !984 {
entry:
  %tag_alloca6 = alloca { [9 x i64], i8 }, align 8, !dbg !985
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !985
  %result_value = alloca { [8 x i64], i8 }, align 8, !dbg !985
  %load_element5 = alloca { [3 x i64], i8 }, align 8, !dbg !985
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !985
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !985
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !985
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !985
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !985

then_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %result, align 8, !dbg !985
  %load_element.elt9 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !985
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !985
  %load_element.elt11 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !985
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !985
  store ptr %load_element.unpack, ptr %tag_alloca, align 8, !dbg !985
  %tag_alloca.repack14 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !985
  store i64 %load_element.unpack10, ptr %tag_alloca.repack14, align 8, !dbg !985
  %tag_alloca.repack16 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !985
  store i64 %load_element.unpack12, ptr %tag_alloca.repack16, align 8, !dbg !985
  %tag_id_ptr2 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !985
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !985
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !985
  ret void, !dbg !985

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element5, ptr noundef nonnull align 8 dereferenceable(32) %result, i64 32, i1 false), !dbg !985
  call fastcc void @String_44_26d17240b95ed431e64caf285536baf5e96b5875cbd172e5d417c1ae92a275(ptr nonnull %load_element5, ptr nonnull %result_value), !dbg !985
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !985
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca6, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !985
  %tag_id_ptr8 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca6, i64 0, i32 1, !dbg !985
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !985
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca6, i64 80, i1 false), !dbg !985
  ret void, !dbg !985
}

define internal fastcc void @Inspect_250_157bd1cfbdd899eaf8ca5ae4444e5a394fecb36bc61dda74dd795d3df0ac853f(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !987 {
entry:
  %result_value4 = alloca %str.RocStr, align 8, !dbg !988
  %const_str_store3 = alloca %str.RocStr, align 8, !dbg !988
  %result_value2 = alloca %str.RocStr, align 8, !dbg !988
  %result_value = alloca %str.RocStr, align 8, !dbg !988
  %const_str_store = alloca %str.RocStr, align 8, !dbg !988
  %load_element = alloca %str.RocStr, align 8, !dbg !988
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !988
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store, align 8, !dbg !988
  %const_str_store.repack5 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !988
  store i64 0, ptr %const_str_store.repack5, align 8, !dbg !988
  %const_str_store.repack6 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !988
  store i64 -9151314442816847872, ptr %const_str_store.repack6, align 8, !dbg !988
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !988
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !988
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value, ptr nonnull %load_element, ptr nonnull %result_value2), !dbg !988
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element), !dbg !988
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store3, align 8, !dbg !988
  %const_str_store3.repack7 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 1, !dbg !988
  store i64 0, ptr %const_str_store3.repack7, align 8, !dbg !988
  %const_str_store3.repack8 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 2, !dbg !988
  store i64 -9151314442816847872, ptr %const_str_store3.repack8, align 8, !dbg !988
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value2, ptr nonnull %const_str_store3, ptr nonnull %result_value4), !dbg !988
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store3), !dbg !988
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !988
  ret void, !dbg !988
}

define internal fastcc i1 @Five_checkUpdate_7eba3577d569e9be393ebf468d8c576e6850d52df0fe8bf3dca1c1a43aa9b9(ptr %rulesDict, %list.RocList %update) !dbg !990 {
entry:
  %struct_alloca = alloca { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, align 8, !dbg !991
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %update, i64 1), !dbg !991
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(64) %rulesDict, i64 64, i1 false), !dbg !991
  %struct_field_gep1 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !991
  %update.elt = extractvalue %list.RocList %update, 0, !dbg !991
  store ptr %update.elt, ptr %struct_field_gep1, align 8, !dbg !991
  %struct_field_gep1.repack2 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !991
  %update.elt3 = extractvalue %list.RocList %update, 1, !dbg !991
  store i64 %update.elt3, ptr %struct_field_gep1.repack2, align 8, !dbg !991
  %struct_field_gep1.repack4 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !991
  %update.elt5 = extractvalue %list.RocList %update, 2, !dbg !991
  store i64 %update.elt5, ptr %struct_field_gep1.repack4, align 8, !dbg !991
  %call = call fastcc i1 @List_all_19a01698b1f1f64ca782bce3c6b70dbfe2947aebabe3f6b126ebdf6166ecc31(%list.RocList %update, ptr nonnull %struct_alloca), !dbg !991
  ret i1 %call, !dbg !991
}

define internal fastcc float @Dict_defaultMaxLoadFactor_3c34ade886ecb9c29fd02363474d39cd94178ea81fd90fb2871dcdcb2a3aad() !dbg !993 {
entry:
  ret float 0x3FE99999A0000000, !dbg !994
}

define internal fastcc void @Parser_const_91a1934a75e3d136dfb5a572ece2bc79a479adc3e4cf2fc66855180818a63(ptr %val, ptr %0) !dbg !996 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Parser_buildPrimitiveParser_a6981e9af82e47105cf68a8eae93c9cf303d36467e93a849f262f17773f5(ptr %val, ptr nonnull %result_value), !dbg !997
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !997
  ret void, !dbg !997
}

define internal fastcc i64 @Num_bitwiseAnd_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098(i64 %"#arg1", i64 %"#arg2") !dbg !999 {
entry:
  %int_bitwise_and = and i64 %"#arg1", %"#arg2", !dbg !1000
  ret i64 %int_bitwise_and, !dbg !1000
}

define internal fastcc {} @Parser_many_29e45a3e94cb49faa0f523d42d14ca41e96e28836031b687849d13e5d59b({} %parser) !dbg !1002 {
entry:
  %call = tail call fastcc {} @Parser_buildPrimitiveParser_6f672ef3f2eac86f2b3fa6aa9eb2b9186335f9791fec7495d3558c46b2dce({} %parser), !dbg !1003
  ret {} %call, !dbg !1003
}

define internal fastcc void @Five_16_f497d0762dffbea4d1bbd57f0dda06887ccfab58e6563ae6e7cbca963711e9c(ptr %parsed, ptr %0) !dbg !1005 {
entry:
  %result_value2 = alloca { { %str.RocStr, {} }, { %list.RocList, %list.RocList } }, align 8, !dbg !1006
  %result_value = alloca %str.RocStr, align 8, !dbg !1006
  tail call fastcc void @"#Attr_#inc_29"(ptr %parsed, i64 1), !dbg !1006
  %call = tail call fastcc i64 @Five_partOne_11c91aefaef6a044fe3437f0cd6133f5618564cb559aa842578acbaca75dd41(ptr %parsed), !dbg !1006
  call fastcc void @Num_toStr_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(i64 %call, ptr nonnull %result_value), !dbg !1006
  %call1 = call fastcc { %str.RocStr, {} } @Stdout_line_bebbb589a83a432de7026fc8b274e9febb5d3770872da3be54e19711abf48c(ptr nonnull %result_value), !dbg !1006
  call fastcc void @Task_await_68e2b08bd9d52962419b34161d37629bb39ebdc1099601d1d619dcfa78361({ %str.RocStr, {} } %call1, ptr %parsed, ptr nonnull %result_value2), !dbg !1006
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %result_value2, i64 72, i1 false), !dbg !1006
  ret void, !dbg !1006
}

define internal fastcc i1 @Str_matchesAtHelp_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061(ptr %state) !dbg !1008 {
entry:
  %struct_alloca = alloca { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, align 8, !dbg !1009
  %struct_field15 = alloca %str.RocStr, align 8, !dbg !1009
  %struct_field13 = alloca %str.RocStr, align 8, !dbg !1009
  %struct_field3 = alloca %str.RocStr, align 8, !dbg !1009
  %struct_field1 = alloca %str.RocStr, align 8, !dbg !1009
  %struct_field = load i64, ptr %state, align 8, !dbg !1009
  %struct_field_access_record_1 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 1, !dbg !1009
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field1, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_1, i64 24, i1 false), !dbg !1009
  %struct_field_access_record_2 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 2, !dbg !1009
  %struct_field2 = load i64, ptr %struct_field_access_record_2, align 8, !dbg !1009
  %struct_field_access_record_3 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 3, !dbg !1009
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field3, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_3, i64 24, i1 false), !dbg !1009
  %struct_field_access_record_4 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 4, !dbg !1009
  %struct_field4 = load i64, ptr %struct_field_access_record_4, align 8, !dbg !1009
  %struct_field_access_record_5 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 5, !dbg !1009
  %struct_field5 = load i64, ptr %struct_field_access_record_5, align 8, !dbg !1009
  %call = tail call fastcc i1 @Num_isGte_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363(i64 %struct_field2, i64 %struct_field), !dbg !1009
  br i1 %call, label %then_block, label %else_block, !dbg !1009

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %struct_field3), !dbg !1009
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %struct_field1), !dbg !1009
  %call6 = call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field4, i64 %struct_field5), !dbg !1009
  ret i1 %call6, !dbg !1009

else_block:                                       ; preds = %entry
  %call7 = call fastcc i8 @Str_getUnsafe_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1(ptr nonnull %struct_field1, i64 %struct_field2), !dbg !1009
  %call8 = call fastcc i8 @Str_getUnsafe_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1(ptr nonnull %struct_field3, i64 %struct_field4), !dbg !1009
  %call9 = call fastcc i1 @Bool_structuralEq_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c(i8 %call7, i8 %call8), !dbg !1009
  %struct_field11 = load i64, ptr %state, align 8, !dbg !1009
  %struct_field_access_record_112 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 1, !dbg !1009
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field13, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_112, i64 24, i1 false), !dbg !1009
  %struct_field_access_record_314 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 3, !dbg !1009
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field15, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_314, i64 24, i1 false), !dbg !1009
  %struct_field_access_record_516 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %state, i64 0, i32 5, !dbg !1009
  %struct_field17 = load i64, ptr %struct_field_access_record_516, align 8, !dbg !1009
  %call18 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %struct_field4, i64 1), !dbg !1009
  %call19 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %struct_field2, i64 1), !dbg !1009
  store i64 %struct_field11, ptr %struct_alloca, align 8, !dbg !1009
  %struct_field_gep20 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 1, !dbg !1009
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field_gep20, ptr noundef nonnull align 8 dereferenceable(24) %struct_field13, i64 24, i1 false), !dbg !1009
  %struct_field_gep21 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 2, !dbg !1009
  store i64 %call19, ptr %struct_field_gep21, align 8, !dbg !1009
  %struct_field_gep22 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 3, !dbg !1009
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field_gep22, ptr noundef nonnull align 8 dereferenceable(24) %struct_field15, i64 24, i1 false), !dbg !1009
  %struct_field_gep23 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 4, !dbg !1009
  store i64 %call18, ptr %struct_field_gep23, align 8, !dbg !1009
  %struct_field_gep24 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 5, !dbg !1009
  store i64 %struct_field17, ptr %struct_field_gep24, align 8, !dbg !1009
  %call25 = call fastcc i1 @Str_matchesAtHelp_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061(ptr nonnull %struct_alloca), !dbg !1009
  %call26 = call fastcc i1 @Bool_and_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21(i1 %call9, i1 %call25), !dbg !1009
  ret i1 %call26, !dbg !1009
}

define internal fastcc i64 @List_len_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4(%list.RocList %"#arg1") !dbg !1011 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !1012
  ret i64 %list_len, !dbg !1012
}

define internal fastcc void @List_walkHelp_8719a5fa4a4d2d7fe17773695c6c6d3ecd8b7cfffd135c8d4ca89f29f876d1f(%list.RocList %"206", ptr %"207", {} %"208", i64 %"209", i64 %"210", ptr %0) !dbg !1014 {
entry:
  %result_value = alloca {}, align 8
  %tmp_output_for_jmp6 = alloca %str.RocStr, align 8
  %result_value4 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#inc_26"(%list.RocList %"206", i64 1), !dbg !1015
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(24) %"207", i64 24, i1 false), !dbg !1015
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, i64 24, i1 false), !dbg !1015
  br label %joinpointcont, !dbg !1015

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg2 = phi i64 [ %"209", %entry ], [ %call5, %then_block ], !dbg !1015
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"210"), !dbg !1015
  br i1 %call, label %then_block, label %else_block, !dbg !1015

then_block:                                       ; preds = %joinpointcont
  call fastcc void @List_getUnsafe_42f43e247a90ff93dac3c860bb219ee18693539a6e942bad35bcb7297d6e16(%list.RocList %"206", i64 %joinpointarg2, ptr nonnull %result_value), !dbg !1015
  call fastcc void @Inspect_210_8ea7496e29805228ef349bc4b276e9615dfd3c8f9efc993f6ae85ec2210a763(ptr nonnull %joinpoint_arg_alloca, ptr nonnull %result_value, ptr nonnull %result_value4), !dbg !1015
  %call5 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !1015
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !1015
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, i64 24, i1 false), !dbg !1015
  br label %joinpointcont, !dbg !1015

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_26"(%list.RocList %"206"), !dbg !1015
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, i64 24, i1 false), !dbg !1015
  ret void, !dbg !1015
}

define internal fastcc void @Task_fromResult_868bb1275a5c595ca8461c95365254c643bddedbb5663df25366d7589be778(ptr %res, ptr %0) !dbg !1017 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %res, i64 80, i1 false), !dbg !1018
  ret void, !dbg !1018
}

define internal fastcc i1 @List_169_1cd410b47325ca54fd4d13db9f372fff17944e80d3dc60ceb6fa212947a(i64 %x, i64 %needle) !dbg !1020 {
entry:
  %call = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %x, i64 %needle), !dbg !1021
  ret i1 %call, !dbg !1021
}

define internal fastcc void @Result_try_1841486258dadc6565ddb7a1717e1e68e57abb67c121aeb72cb4d456026a9(ptr %result, %list.RocList %transform, ptr %0) !dbg !1023 {
entry:
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1024
  %load_element4 = alloca %str.RocStr, align 8, !dbg !1024
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1024
  %load_element = alloca { %list.RocList, %str.RocStr }, align 8, !dbg !1024
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1024
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1024
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1024
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1024

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result, i64 48, i1 false), !dbg !1024
  call fastcc void @Parser_77_2cc36d83ca42ffd4ac2b1eb425d8dda0c5e11f62d41acff849e4e80df8026(ptr nonnull %load_element, %list.RocList %transform, ptr nonnull %result_value), !dbg !1024
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1024
  ret void, !dbg !1024

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_12"(%list.RocList %transform), !dbg !1024
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !1024
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element4, align 8, !dbg !1024
  %load_tag_to_put_in_struct.elt6 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 1, !dbg !1024
  %load_tag_to_put_in_struct.unpack7 = load i64, ptr %load_tag_to_put_in_struct.elt6, align 8, !dbg !1024
  %load_tag_to_put_in_struct.elt8 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 2, !dbg !1024
  %load_tag_to_put_in_struct.unpack9 = load i64, ptr %load_tag_to_put_in_struct.elt8, align 8, !dbg !1024
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1024
  %tag_alloca.repack11 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1024
  store i64 %load_tag_to_put_in_struct.unpack7, ptr %tag_alloca.repack11, align 8, !dbg !1024
  %tag_alloca.repack13 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1024
  store i64 %load_tag_to_put_in_struct.unpack9, ptr %tag_alloca.repack13, align 8, !dbg !1024
  %tag_id_ptr5 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1024
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !1024
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1024
  ret void, !dbg !1024
}

define internal fastcc void @Parser_138_537cd3f54288d2bcb311fb535ea90133e4e5695168c82ab6bd91c34dce467ee(ptr %val, ptr %0) !dbg !1026 {
entry:
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1027
  tail call fastcc void @"#Attr_#inc_13"(ptr %val, i64 1), !dbg !1027
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %val, align 8, !dbg !1027
  %load_tag_to_put_in_struct.elt1 = getelementptr inbounds %str.RocStr, ptr %val, i64 0, i32 1, !dbg !1027
  %load_tag_to_put_in_struct.unpack2 = load i64, ptr %load_tag_to_put_in_struct.elt1, align 8, !dbg !1027
  %load_tag_to_put_in_struct.elt3 = getelementptr inbounds %str.RocStr, ptr %val, i64 0, i32 2, !dbg !1027
  %load_tag_to_put_in_struct.unpack4 = load i64, ptr %load_tag_to_put_in_struct.elt3, align 8, !dbg !1027
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1027
  %tag_alloca.repack6 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1027
  store i64 %load_tag_to_put_in_struct.unpack2, ptr %tag_alloca.repack6, align 8, !dbg !1027
  %tag_alloca.repack8 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1027
  store i64 %load_tag_to_put_in_struct.unpack4, ptr %tag_alloca.repack8, align 8, !dbg !1027
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1027
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1027
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1027
  ret void, !dbg !1027
}

define internal fastcc void @"#Derived_toInspector_[Interrupted 0,NotFound 0,Other 1,OutOfMemory 0,PermissionDenied 0,TimedOut 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b"(ptr %tag3, ptr %0) !dbg !1029 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1030
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1030
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %tag3, align 8, !dbg !1030
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca, align 8, !dbg !1030
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1030
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !1030
  call fastcc void @Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !1030
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1030
  ret void, !dbg !1030
}

define internal fastcc void @Dict_213_25b74f83c7a58495f41328cfd440d34145e99ab792ad183fa37b6350e07cbeaf(ptr %"741", ptr %0) !dbg !1032 {
entry:
  %struct_field = alloca { [3 x i64], i8 }, align 8, !dbg !1033
  %struct_field_access_record_1 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %"741", i64 0, i32 1, !dbg !1033
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_1, i64 32, i1 false), !dbg !1033
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %struct_field, i64 32, i1 false), !dbg !1033
  ret void, !dbg !1033
}

define internal fastcc i1 @Bool_false_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671() !dbg !1035 {
entry:
  ret i1 false, !dbg !1036
}

define internal fastcc void @Inspect_210_e93bf924107d8e1718c9a20bb89a13fa86198933bf2155d2785223e43180(ptr %f2, ptr %inspector, ptr %0) !dbg !1038 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 32 to ptr), ptr %const_str_store, align 8, !dbg !1039
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1039
  store i64 0, ptr %const_str_store.repack2, align 8, !dbg !1039
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1039
  store i64 -9151314442816847872, ptr %const_str_store.repack3, align 8, !dbg !1039
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f2, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1039
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1039
  call fastcc void @Inspect_213_8c1982946d7d4cf533b8ffebd7c5ff61adefe5eeb6d572d7069add06e229552(ptr nonnull %result_value, ptr %inspector, ptr nonnull %result_value1), !dbg !1039
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !1039
  ret void, !dbg !1039
}

define internal fastcc float @Num_mul_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b(float %"#arg1", float %"#arg2") !dbg !1041 {
entry:
  %mul_float = fmul float %"#arg1", %"#arg2", !dbg !1042
  ret float %mul_float, !dbg !1042
}

define internal fastcc void @Inspect_208_c846cca2d7624ab0e322f5c02791833a36ae302c1d525dc8e88abea81952ea4(ptr %f1, %list.RocList %fields, ptr %0) !dbg !1044 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @List_walk_1971ed175c5339d8a493ee2a719f3ca8f50fbcc2a26feaf7b54a27898e3f(%list.RocList %fields, ptr %f1, {} zeroinitializer, ptr nonnull %result_value), !dbg !1045
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1045
  ret void, !dbg !1045
}

define internal fastcc void @Parser_parsePartial_b54b77c860741659e5266e2d61860fd36498ad112baf9dfab455e3fe3a84d({} %"246", %list.RocList %input, ptr %0) !dbg !1047 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Parser_52_b951f2385a7b569e8c6dff449b41837e7280adc46ecebfd577414d2d585d0(%list.RocList %input, {} %"246", ptr nonnull %result_value), !dbg !1048
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !1048
  ret void, !dbg !1048
}

define internal fastcc void @List_getUnsafe_172247c57cf29182b738e1647bff697cbe655ff06cf0aee2ca31b6b397327385(%list.RocList %"#arg1", i64 %"#arg2", ptr %0) !dbg !1050 {
entry:
  %list_get_load_element = alloca { [4 x i64], i8 }, align 8, !dbg !1051
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !1051
  %list_get_element = getelementptr inbounds { [4 x i64], i8 }, ptr %read_list_ptr, i64 %"#arg2", !dbg !1051
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %list_get_load_element, ptr noundef nonnull align 8 dereferenceable(40) %list_get_element, i64 40, i1 false), !dbg !1051
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %list_get_load_element, i64 40, i1 false), !dbg !1051
  ret void, !dbg !1051
}

define internal fastcc void @Task_fromResult_1f5387d07f264470833b19a1c82f5d84310c7fa8ea615dd78f14115492d268(ptr %res, ptr %0) !dbg !1053 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %res, i64 80, i1 false), !dbg !1054
  ret void, !dbg !1054
}

define internal fastcc void @Task_46_3ecfee88222f69a72a6908d3fd6c08b72fa6d1fbfec3512e9af22d6637fde({} %"120", ptr %"#arg_closure", ptr %0) !dbg !1056 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !1057
  %result_value12 = alloca { [1 x i32], i8 }, align 8, !dbg !1057
  %result_value = alloca { [1 x i32], i8 }, align 8, !dbg !1057
  %load_element = alloca { [1 x i32], i8 }, align 8, !dbg !1057
  %get_opaque_data_ptr1 = getelementptr inbounds { { { %str.RocStr, {} }, { [1 x i32], i8 } }, { [1 x i32], i8 } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1057
  %1 = load i64, ptr %get_opaque_data_ptr1, align 4, !dbg !1057
  store i64 %1, ptr %load_element, align 8, !dbg !1057
  %load_element4.unpack.unpack.unpack = load ptr, ptr %"#arg_closure", align 8, !dbg !1057
  %2 = insertvalue %str.RocStr poison, ptr %load_element4.unpack.unpack.unpack, 0, !dbg !1057
  %load_element4.unpack.unpack.elt23 = getelementptr inbounds %str.RocStr, ptr %"#arg_closure", i64 0, i32 1, !dbg !1057
  %load_element4.unpack.unpack.unpack24 = load i64, ptr %load_element4.unpack.unpack.elt23, align 8, !dbg !1057
  %3 = insertvalue %str.RocStr %2, i64 %load_element4.unpack.unpack.unpack24, 1, !dbg !1057
  %load_element4.unpack.unpack.elt25 = getelementptr inbounds %str.RocStr, ptr %"#arg_closure", i64 0, i32 2, !dbg !1057
  %load_element4.unpack.unpack.unpack26 = load i64, ptr %load_element4.unpack.unpack.elt25, align 8, !dbg !1057
  %load_element4.unpack.unpack27 = insertvalue %str.RocStr %3, i64 %load_element4.unpack.unpack.unpack26, 2, !dbg !1057
  %4 = insertvalue { %str.RocStr, {} } poison, %str.RocStr %load_element4.unpack.unpack27, 0, !dbg !1057
  %load_element4.unpack22 = insertvalue { %str.RocStr, {} } %4, {} poison, 1, !dbg !1057
  %5 = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } poison, { %str.RocStr, {} } %load_element4.unpack22, 0, !dbg !1057
  %load_element4.elt17 = getelementptr inbounds { { %str.RocStr, {} }, { [1 x i32], i8 } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1057
  %load_element4.unpack18 = load { [1 x i32], i8 }, ptr %load_element4.elt17, align 8, !dbg !1057
  %load_element419 = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %5, { [1 x i32], i8 } %load_element4.unpack18, 1, !dbg !1057
  call fastcc void @Task_53_ba11fd7bfef4db24218e934bc7c8a92abf43883548efce0129eb6de6acb7c1({} zeroinitializer, { { %str.RocStr, {} }, { [1 x i32], i8 } } %load_element419, ptr nonnull %result_value), !dbg !1057
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1057
  %load_tag_id = load i8, ptr %tag_id_ptr, align 4, !dbg !1057
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1057
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1057

then_block:                                       ; preds = %entry
  %tag_id_ptr8 = getelementptr inbounds { [1 x i32], i8 }, ptr %load_element, i64 0, i32 1, !dbg !1057
  %load_tag_id9 = load i8, ptr %tag_id_ptr8, align 4, !dbg !1057
  switch i8 %load_tag_id9, label %default [
    i8 0, label %branch0
  ], !dbg !1057

else_block:                                       ; preds = %entry
  %load_element15 = load i32, ptr %result_value, align 8, !dbg !1057
  store i32 %load_element15, ptr %tag_alloca, align 8, !dbg !1057
  %tag_id_ptr16 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1057
  store i8 0, ptr %tag_id_ptr16, align 4, !dbg !1057
  %6 = load i64, ptr %tag_alloca, align 8, !dbg !1057
  store i64 %6, ptr %0, align 4, !dbg !1057
  ret void, !dbg !1057

default:                                          ; preds = %then_block
  %call11 = call fastcc i32 @_11_7741d73f424d83c9a2e8e5b6ce502e9a8d175614dae652f87835b573c0d09({} poison), !dbg !1057
  br label %joinpointcont, !dbg !1057

joinpointcont:                                    ; preds = %default, %branch0
  %joinpointarg = phi i32 [ %call, %branch0 ], [ %call11, %default ], !dbg !1057
  call fastcc void @Task_38_de9272725995dfe27820e1ab4317eddb95d1f4a0c9c3bf59609e9c2d44531d9({} zeroinitializer, i32 %joinpointarg, ptr nonnull %result_value12), !dbg !1057
  %7 = load i64, ptr %result_value12, align 8, !dbg !1057
  store i64 %7, ptr %0, align 4, !dbg !1057
  ret void, !dbg !1057

branch0:                                          ; preds = %then_block
  %call = call fastcc i32 @_8_647daa5d9488126c5d148e68e474c6f899fa96593a9e1c942a9cdd7773170({} poison, ptr nonnull %load_element), !dbg !1057
  br label %joinpointcont, !dbg !1057
}

define internal fastcc void @Parser_keep_b2df5633da1ff7f59f2aecac265c8d6773abdbcadcf4a15d34ae9a45fd771125(ptr %funParser, { {}, { { {}, {} }, {} } } %valParser, ptr %0) !dbg !1059 {
entry:
  %result_value = alloca { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, align 8
  %struct_alloca = alloca { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(48) %funParser, i64 48, i1 false), !dbg !1060
  call fastcc void @Parser_buildPrimitiveParser_87aadac9e37ed967241d19aabb44c6dc9504f6f6259d63573422f627ad38f(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !1060
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1060
  ret void, !dbg !1060
}

define internal fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %"#arg1", i32 %"#arg2") !dbg !1062 {
entry:
  %eq_u32 = icmp eq i32 %"#arg1", %"#arg2", !dbg !1063
  ret i1 %eq_u32, !dbg !1063
}

define internal fastcc void @Parser_buildPrimitiveParser_d5647456e607ff6cf08729c7b3b8975d79d2a5c98181aa9d451a45bd6a8da(ptr %fun, ptr %0) !dbg !1065 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %fun, i64 48, i1 false), !dbg !1066
  ret void, !dbg !1066
}

define internal fastcc void @Inspect_206_505ee8ebb90affa4bd2deabd9435fb89b29e5cff14c44acccc1c3ac721361(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !1068 {
entry:
  %result_value8 = alloca %str.RocStr, align 8, !dbg !1069
  %const_str_store7 = alloca %str.RocStr, align 8, !dbg !1069
  %result_value6 = alloca %str.RocStr, align 8, !dbg !1069
  %result_value5 = alloca %str.RocStr, align 8, !dbg !1069
  %result_value = alloca %str.RocStr, align 8, !dbg !1069
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1069
  %load_element4 = alloca %str.RocStr, align 8, !dbg !1069
  %get_opaque_data_ptr1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1069
  %load_element.unpack = load ptr, ptr %get_opaque_data_ptr1, align 8, !dbg !1069
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !1069
  %load_element.elt9 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !1069
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !1069
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack10, 1, !dbg !1069
  %load_element.elt11 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !1069
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !1069
  %load_element13 = insertvalue %list.RocList %2, i64 %load_element.unpack12, 2, !dbg !1069
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !1069
  store ptr inttoptr (i64 40 to ptr), ptr %const_str_store, align 8, !dbg !1069
  %const_str_store.repack14 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1069
  store i64 0, ptr %const_str_store.repack14, align 8, !dbg !1069
  %const_str_store.repack15 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1069
  store i64 -9151314442816847872, ptr %const_str_store.repack15, align 8, !dbg !1069
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1069
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1069
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value, ptr nonnull %load_element4, ptr nonnull %result_value5), !dbg !1069
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element4), !dbg !1069
  call fastcc void @Inspect_208_eccfa5306c669977807196608886f415cf9dc848c9f1d2534fa8e21fb61a(ptr nonnull %result_value5, %list.RocList %load_element13, ptr nonnull %result_value6), !dbg !1069
  call fastcc void @"#Attr_#dec_32"(%list.RocList %load_element13), !dbg !1069
  store ptr inttoptr (i64 41 to ptr), ptr %const_str_store7, align 8, !dbg !1069
  %const_str_store7.repack16 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 1, !dbg !1069
  store i64 0, ptr %const_str_store7.repack16, align 8, !dbg !1069
  %const_str_store7.repack17 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 2, !dbg !1069
  store i64 -9151314442816847872, ptr %const_str_store7.repack17, align 8, !dbg !1069
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value6, ptr nonnull %const_str_store7, ptr nonnull %result_value8), !dbg !1069
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store7), !dbg !1069
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !1069
  ret void, !dbg !1069
}

define internal fastcc void @_3_67f5fd6e89d2bff324c0d4f26998729c6826aeb676619137bf1c3dcaad1bed3(ptr %res, ptr %0) !dbg !1071 {
entry:
  %result_value44 = alloca { [5 x i64], i8 }, align 8, !dbg !1072
  %tag_alloca41 = alloca { [1 x i32], i8 }, align 8, !dbg !1072
  %tag_alloca37 = alloca { [1 x i32], i8 }, align 8, !dbg !1072
  %result_value35 = alloca %str.RocStr, align 8, !dbg !1072
  %result_value34 = alloca %str.RocStr, align 8, !dbg !1072
  %const_str_store33 = alloca %str.RocStr, align 8, !dbg !1072
  %result_value32 = alloca %str.RocStr, align 8, !dbg !1072
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1072
  %load_element31 = alloca { [8 x i64], i8 }, align 8, !dbg !1072
  %result_value28 = alloca { [5 x i64], i8 }, align 8, !dbg !1072
  %tag_alloca25 = alloca { [1 x i32], i8 }, align 8, !dbg !1072
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !1072
  %result_value20 = alloca { [5 x i64], i8 }, align 8, !dbg !1072
  %load_element13 = alloca %str.RocStr, align 8, !dbg !1072
  %load_element10 = alloca { [8 x i64], i8 }, align 8, !dbg !1072
  %load_element = alloca { [8 x i64], i8 }, align 8, !dbg !1072
  %result_value = alloca { [5 x i64], i8 }, align 8, !dbg !1072
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %res, i64 0, i32 1, !dbg !1072
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1072
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1072
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1072

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_34"(ptr %res), !dbg !1072
  call fastcc void @Task_ok_74e539aad6ec9b39b5d11cddb1f5bc7530ae1c63102d2ee576fb29be2b2bf8cf({} zeroinitializer, ptr nonnull %result_value), !dbg !1072
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1072
  ret void, !dbg !1072

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element, ptr noundef nonnull align 8 dereferenceable(72) %res, i64 72, i1 false), !dbg !1072
  %tag_id_ptr2 = getelementptr inbounds { [8 x i64], i8 }, ptr %load_element, i64 0, i32 1, !dbg !1072
  %load_tag_id3 = load i8, ptr %tag_id_ptr2, align 8, !dbg !1072
  %eq_u84 = icmp eq i8 %load_tag_id3, 0, !dbg !1072
  br i1 %eq_u84, label %then_block6, label %else_block7, !dbg !1072

then_block6:                                      ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element10, ptr noundef nonnull align 8 dereferenceable(72) %res, i64 72, i1 false), !dbg !1072
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element13, ptr noundef nonnull align 8 dereferenceable(24) %load_element10, i64 24, i1 false), !dbg !1072
  %get_opaque_data_ptr15 = getelementptr inbounds { %str.RocStr, i32 }, ptr %load_element10, i64 0, i32 1, !dbg !1072
  %load_element16 = load i32, ptr %get_opaque_data_ptr15, align 8, !dbg !1072
  %call = call fastcc i1 @Str_isEmpty_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d(ptr nonnull %load_element13), !dbg !1072
  br i1 %call, label %then_block18, label %else_block19, !dbg !1072

else_block7:                                      ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element31, ptr noundef nonnull align 8 dereferenceable(72) %res, i64 72, i1 false), !dbg !1072
  store ptr getelementptr inbounds ([39 x i8], ptr @_str_literal_3867905241449124926, i64 0, i64 8), ptr %const_str_store, align 8, !dbg !1072
  %const_str_store.repack45 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1072
  store i64 31, ptr %const_str_store.repack45, align 8, !dbg !1072
  %const_str_store.repack46 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1072
  store i64 31, ptr %const_str_store.repack46, align 8, !dbg !1072
  call fastcc void @Inspect_toStr_4ece9a43d31aae54b519b59b311d38f02e11acf9efbec0b25f6f665cea59d6(ptr nonnull %load_element31, ptr nonnull %result_value32), !dbg !1072
  store ptr getelementptr inbounds ([177 x i8], ptr @_str_literal_3894810976106795109, i64 0, i64 8), ptr %const_str_store33, align 8, !dbg !1072
  %const_str_store33.repack47 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 1, !dbg !1072
  store i64 169, ptr %const_str_store33.repack47, align 8, !dbg !1072
  %const_str_store33.repack48 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 2, !dbg !1072
  store i64 169, ptr %const_str_store33.repack48, align 8, !dbg !1072
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %result_value32, ptr nonnull %const_str_store33, ptr nonnull %result_value34), !dbg !1072
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store33), !dbg !1072
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %const_str_store, ptr nonnull %result_value34, ptr nonnull %result_value35), !dbg !1072
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value34), !dbg !1072
  %call36 = call fastcc { %str.RocStr, {} } @Stderr_line_14fdf5b3fdc309431c2b7140ab94179571c4afec1ebe5d643526dfbc8edb8(ptr nonnull %result_value35), !dbg !1072
  %tag_id_ptr39 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca37, i64 0, i32 1, !dbg !1072
  store i8 1, ptr %tag_id_ptr39, align 4, !dbg !1072
  %call40 = call fastcc { { %str.RocStr, {} }, { [1 x i32], i8 } } @Task_onErr_9f3a262f8e9b981e8332887395f1a5ea4152740aaffa2174fd0379ce27d({ %str.RocStr, {} } %call36, ptr nonnull %tag_alloca37), !dbg !1072
  %tag_id_ptr43 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca41, i64 0, i32 1, !dbg !1072
  store i8 1, ptr %tag_id_ptr43, align 4, !dbg !1072
  call fastcc void @Task_await_8c9e32c1aadddd94aae3acfa4e15ddbfa6911ff5a2999e6634aa26edd6a0da({ { %str.RocStr, {} }, { [1 x i32], i8 } } %call40, ptr nonnull %tag_alloca41, ptr nonnull %result_value44), !dbg !1072
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value44, i64 48, i1 false), !dbg !1072
  ret void, !dbg !1072

then_block18:                                     ; preds = %then_block6
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element13), !dbg !1072
  call fastcc void @Task_err_8574b403032b1e41c889178b52ddfe37f79513c5637fbb5bea234401648d296(i32 %load_element16, ptr nonnull %result_value20), !dbg !1072
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value20, i64 48, i1 false), !dbg !1072
  ret void, !dbg !1072

else_block19:                                     ; preds = %then_block6
  %call21 = call fastcc { %str.RocStr, {} } @Stderr_line_14fdf5b3fdc309431c2b7140ab94179571c4afec1ebe5d643526dfbc8edb8(ptr nonnull %load_element13), !dbg !1072
  store i32 %load_element16, ptr %tag_alloca, align 8, !dbg !1072
  %tag_id_ptr22 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1072
  store i8 0, ptr %tag_id_ptr22, align 4, !dbg !1072
  %call23 = call fastcc { { %str.RocStr, {} }, { [1 x i32], i8 } } @Task_onErr_9f3a262f8e9b981e8332887395f1a5ea4152740aaffa2174fd0379ce27d({ %str.RocStr, {} } %call21, ptr nonnull %tag_alloca), !dbg !1072
  store i32 %load_element16, ptr %tag_alloca25, align 8, !dbg !1072
  %tag_id_ptr27 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca25, i64 0, i32 1, !dbg !1072
  store i8 0, ptr %tag_id_ptr27, align 4, !dbg !1072
  call fastcc void @Task_await_8c9e32c1aadddd94aae3acfa4e15ddbfa6911ff5a2999e6634aa26edd6a0da({ { %str.RocStr, {} }, { [1 x i32], i8 } } %call23, ptr nonnull %tag_alloca25, ptr nonnull %result_value28), !dbg !1072
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value28, i64 48, i1 false), !dbg !1072
  ret void, !dbg !1072
}

define internal fastcc void @Dict_get_deda9c07093181a3aee6f4559463a94ce2b31f038cb3d5548d0bb2aeba37e1(ptr %dict, i64 %key, ptr %0) !dbg !1074 {
entry:
  %result_value1 = alloca { [3 x i64], i8 }, align 8
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8
  call fastcc void @Dict_find_9bb8deca757dc2ac2fb673c9939099338c6d1fb2aae6cee85b52f30d7d2b2d8(ptr %dict, i64 %key, ptr nonnull %result_value), !dbg !1075
  call fastcc void @Dict_213_25b74f83c7a58495f41328cfd440d34145e99ab792ad183fa37b6350e07cbeaf(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !1075
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value1, i64 32, i1 false), !dbg !1075
  ret void, !dbg !1075
}

define internal fastcc %list.RocList @List_sublistLowlevel_d5c9642a64db206d88ab43bd2b9527b05aca746579abd7472d977da8e33ac(%list.RocList %"#arg1", i64 %"#arg2", i64 %"#arg3") !dbg !1077 {
entry:
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1078
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1078
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1078
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !1078
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !1078
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1078
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !1078
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1078
  call void @llvm.experimental.noalias.scope.decl(metadata !1080), !dbg !1078
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !1078
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1078
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !1078
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1078, !noalias !1080
  %0 = icmp eq i64 %.sroa.1.0.copyload.i, 0, !dbg !1078
  %1 = icmp eq i64 %"#arg3", 0, !dbg !1078
  %2 = select i1 %0, i1 true, i1 %1, !dbg !1078
  %3 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !1078
  %or.cond.i = select i1 %2, i1 true, i1 %3, !dbg !1078
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !1078, !noalias !1080
  br i1 %or.cond.i, label %.critedge.i, label %16, !dbg !1078

.critedge.i:                                      ; preds = %entry
  %sunkaddr.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1078
  %.sroa.3.0.copyload57.i = load i64, ptr %sunkaddr.i, align 8, !dbg !1078, !noalias !1080
  %isneg.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1078
  %4 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload57.i, i64 0), !dbg !1078
  %5 = select i1 %isneg.i.i.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1078
  %6 = or i64 %5, %4, !dbg !1078
  %7 = icmp ne i64 %6, 0, !dbg !1078
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %isneg.i.i.i.i, !dbg !1078
  br i1 %brmerge.i.i.i, label %list.RocList.isUnique.exit.i, label %list.RocList.isUnique.exit.thread.i, !dbg !1078

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i
  %8 = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1078
  %9 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1078
  %10 = shl i64 %.sroa.3.0.copyload57.i, 1, !dbg !1078
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !1078
  %12 = inttoptr i64 %11 to ptr, !dbg !1078
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !1078
  %14 = load i64, ptr %13, align 8, !dbg !1078, !noalias !1080
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !1078
  br i1 %15, label %list.RocList.isUnique.exit.thread.i, label %.critedge.i.i, !dbg !1078

16:                                               ; preds = %entry
  %.not28.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !1078
  br i1 %.not28.i, label %26, label %22, !dbg !1078

common.ret.i:                                     ; preds = %list.RocList.setAllocationElementCount.exit.i, %.loopexit82.i, %.loopexit.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1078
  br label %roc_builtins.list.sublist.exit, !dbg !1078

list.RocList.isUnique.exit.thread.i:              ; preds = %list.RocList.isUnique.exit.i, %.critedge.i
  %.not29.i = icmp ne ptr %.sroa.0.0.copyload.i, null, !dbg !1078
  %17 = icmp ne i64 %.sroa.1.0.copyload.i, 0, !dbg !1078
  %or.cond86.i = select i1 %.not29.i, i1 %17, i1 false, !dbg !1078
  br i1 %or.cond86.i, label %.lr.ph85.preheader.i, label %.loopexit.i, !dbg !1078

.lr.ph85.preheader.i:                             ; preds = %list.RocList.isUnique.exit.thread.i
  br label %.lr.ph85.i, !dbg !1078

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i
  %18 = icmp eq i64 %.sroa.3.0.copyload57.i, 0, !dbg !1078
  %19 = icmp eq i64 %11, 0, !dbg !1078
  %or.cond.i.i.not92.i = select i1 %18, i1 true, i1 %19, !dbg !1078
  %.not.i.i.i = icmp eq i64 %14, 0, !dbg !1078
  %or.cond89.i = select i1 %or.cond.i.i.not92.i, i1 true, i1 %.not.i.i.i, !dbg !1078
  br i1 %or.cond89.i, label %list.RocList.decref.exit.i, label %20, !dbg !1078

20:                                               ; preds = %.critedge.i.i
  %21 = add nsw i64 %14, -1, !dbg !1078
  %sunkaddr101.i = inttoptr i64 %11 to ptr, !dbg !1078
  %sunkaddr102.i = getelementptr inbounds i8, ptr %sunkaddr101.i, i64 -8, !dbg !1078
  store i64 %21, ptr %sunkaddr102.i, align 8, !dbg !1078, !noalias !1080
  br label %list.RocList.decref.exit.i, !dbg !1078

list.RocList.decref.exit.i:                       ; preds = %20, %.critedge.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1078, !alias.scope !1080
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1078
  br label %roc_builtins.list.sublist.exit, !dbg !1078

.loopexit.i:                                      ; preds = %.lr.ph85.i, %list.RocList.isUnique.exit.thread.i
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !1078, !alias.scope !1080
  %.sroa.28.0..sroa_idx9.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1078
  store i64 0, ptr %.sroa.28.0..sroa_idx9.i, align 8, !dbg !1078, !alias.scope !1080
  %.sroa.3.0..sroa_idx11.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1078
  store i64 %.sroa.3.0.copyload57.i, ptr %.sroa.3.0..sroa_idx11.i, align 8, !dbg !1078, !alias.scope !1080
  br label %common.ret.i, !dbg !1078

.lr.ph85.i:                                       ; preds = %.lr.ph85.i, %.lr.ph85.preheader.i
  %lsr.iv93.i = phi ptr [ %.sroa.0.0.copyload.i, %.lr.ph85.preheader.i ], [ %uglygep.i, %.lr.ph85.i ], !dbg !1078
  %lsr.iv.i = phi i64 [ %.sroa.1.0.copyload.i, %.lr.ph85.preheader.i ], [ %lsr.iv.next.i, %.lr.ph85.i ], !dbg !1078
  %load_opaque.i12 = load { i64, %list.RocList }, ptr %lsr.iv93.i, align 8, !dbg !1083, !noalias !1080
  call fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %load_opaque.i12) #18, !dbg !1083, !noalias !1080
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !1078
  %uglygep.i = getelementptr i8, ptr %lsr.iv93.i, i64 32, !dbg !1078
  %exitcond87.not.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !1078
  br i1 %exitcond87.not.i, label %.loopexit.i, label %.lr.ph85.i, !dbg !1078

22:                                               ; preds = %16
  %23 = sub nuw i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !1078
  %24 = call i64 @llvm.umin.i64(i64 %"#arg3", i64 %23), !dbg !1078
  %25 = icmp eq i64 %"#arg2", 0, !dbg !1078
  %sunkaddr103.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1078
  %.sroa.363.0.copyload.i = load i64, ptr %sunkaddr103.i, align 8, !dbg !1078, !noalias !1080
  br i1 %25, label %27, label %..critedge2_crit_edge.i, !dbg !1078

..critedge2_crit_edge.i:                          ; preds = %22
  %.pre.i = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1078
  br label %.critedge2.i, !dbg !1078

26:                                               ; preds = %16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1078, !alias.scope !1080
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1078
  br label %roc_builtins.list.sublist.exit, !dbg !1078

27:                                               ; preds = %22
  %isneg.i.i.i39.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1078
  %28 = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1078
  %29 = select i1 %isneg.i.i.i39.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1078
  %30 = or i64 %29, %28, !dbg !1078
  %31 = icmp ne i64 %30, 0, !dbg !1078
  %brmerge.i.i40.i = select i1 %31, i1 true, i1 %isneg.i.i.i39.i, !dbg !1078
  br i1 %brmerge.i.i40.i, label %list.RocList.isUnique.exit44.i, label %list.RocList.isUnique.exit44.thread.i, !dbg !1078

list.RocList.isUnique.exit44.i:                   ; preds = %27
  %32 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1078
  %33 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1078
  %34 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !1078
  %35 = select i1 %32, i64 %34, i64 %33, !dbg !1078
  %36 = inttoptr i64 %35 to ptr, !dbg !1078
  %37 = getelementptr inbounds i64, ptr %36, i64 -1, !dbg !1078
  %38 = load i64, ptr %37, align 8, !dbg !1078, !noalias !1080
  %39 = icmp eq i64 %38, -9223372036854775808, !dbg !1078
  br i1 %39, label %list.RocList.isUnique.exit44.thread.i, label %.critedge2.i, !dbg !1078

list.RocList.isUnique.exit44.thread.i:            ; preds = %list.RocList.isUnique.exit44.i, %27
  %.not.not.i = icmp ugt i64 %23, %"#arg3", !dbg !1078
  br i1 %.not.not.i, label %.lr.ph.preheader.i, label %.loopexit82.i, !dbg !1078

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit44.i, %..critedge2_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %..critedge2_crit_edge.i ], [ %28, %list.RocList.isUnique.exit44.i ], !dbg !1078
  %isneg.i.i.i49.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1078
  %40 = select i1 %isneg.i.i.i49.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1078
  %41 = or i64 %40, %.pre-phi.i, !dbg !1078
  %42 = icmp ne i64 %41, 0, !dbg !1078
  %brmerge.i.i50.i = select i1 %42, i1 true, i1 %isneg.i.i.i49.i, !dbg !1078
  br i1 %brmerge.i.i50.i, label %list.RocList.isUnique.exit54.i, label %list.RocList.isUnique.exit54.thread.i, !dbg !1078

list.RocList.isUnique.exit54.i:                   ; preds = %.critedge2.i
  %43 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1078
  %44 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1078
  %45 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !1078
  %46 = select i1 %43, i64 %45, i64 %44, !dbg !1078
  %47 = inttoptr i64 %46 to ptr, !dbg !1078
  %48 = getelementptr inbounds i64, ptr %47, i64 -1, !dbg !1078
  %49 = load i64, ptr %48, align 8, !dbg !1078, !noalias !1080
  %50 = icmp ne i64 %49, -9223372036854775808, !dbg !1078
  %brmerge78.i = select i1 %50, i1 true, i1 %43, !dbg !1078
  br i1 %brmerge78.i, label %list.RocList.setAllocationElementCount.exit.i, label %66, !dbg !1078

.loopexit82.i:                                    ; preds = %.lr.ph.i, %list.RocList.isUnique.exit44.thread.i
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !1078, !alias.scope !1080
  %.sroa.218.0..sroa_idx19.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1078
  store i64 %24, ptr %.sroa.218.0..sroa_idx19.i, align 8, !dbg !1078, !alias.scope !1080
  %.sroa.321.0..sroa_idx22.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1078
  store i64 %.sroa.363.0.copyload.i, ptr %.sroa.321.0..sroa_idx22.i, align 8, !dbg !1078, !alias.scope !1080
  br label %common.ret.i, !dbg !1078

.lr.ph.preheader.i:                               ; preds = %list.RocList.isUnique.exit44.thread.i
  %51 = sub i64 %23, %24, !dbg !1078
  %umax.i = call i64 @llvm.umax.i64(i64 %51, i64 1), !dbg !1078
  %52 = sub i64 0, %umax.i, !dbg !1078
  %53 = mul i64 32, %24, !dbg !1078
  %uglygep96.i = getelementptr i8, ptr %.sroa.0.0.copyload.i, i64 %53, !dbg !1078
  br label %.lr.ph.i, !dbg !1078

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.preheader.i
  %lsr.iv97.i = phi ptr [ %uglygep96.i, %.lr.ph.preheader.i ], [ %uglygep98.i, %.lr.ph.i ], !dbg !1078
  %lsr.iv94.i = phi i64 [ %52, %.lr.ph.preheader.i ], [ %math.i, %.lr.ph.i ], !dbg !1078
  %load_opaque.i = load { i64, %list.RocList }, ptr %lsr.iv97.i, align 8, !dbg !1087, !noalias !1080
  call fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %load_opaque.i) #18, !dbg !1087, !noalias !1080
  %54 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv94.i, i64 1), !dbg !1078
  %math.i = extractvalue { i64, i1 } %54, 0, !dbg !1078
  %ov.i = extractvalue { i64, i1 } %54, 1, !dbg !1078
  %uglygep98.i = getelementptr i8, ptr %lsr.iv97.i, i64 32, !dbg !1078
  br i1 %ov.i, label %.loopexit82.i, label %.lr.ph.i, !dbg !1078

list.RocList.setAllocationElementCount.exit.i:    ; preds = %66, %list.RocList.isUnique.exit54.i
  %55 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1078
  %56 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1078
  %57 = lshr i64 %56, 1, !dbg !1078
  %58 = or i64 %57, -9223372036854775808, !dbg !1078
  %59 = select i1 %55, i64 0, i64 %58, !dbg !1078
  %60 = call i64 @llvm.smin.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1078
  %61 = or i64 %60, %59, !dbg !1078
  %62 = mul nuw i64 %"#arg2", 32, !dbg !1078
  %63 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 %62, !dbg !1078
  store ptr %63, ptr %list_alloca, align 8, !dbg !1078, !alias.scope !1080
  %64 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1078
  store i64 %24, ptr %64, align 8, !dbg !1078, !alias.scope !1080
  %65 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1078
  store i64 %61, ptr %65, align 8, !dbg !1078, !alias.scope !1080
  br label %common.ret.i, !dbg !1078

list.RocList.isUnique.exit54.thread.i:            ; preds = %.critedge2.i
  br label %66, !dbg !1078

66:                                               ; preds = %list.RocList.isUnique.exit54.thread.i, %list.RocList.isUnique.exit54.i
  %67 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !1078
  store i64 %.sroa.1.0.copyload.i, ptr %67, align 8, !dbg !1078, !noalias !1080
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !1078

roc_builtins.list.sublist.exit:                   ; preds = %26, %list.RocList.decref.exit.i, %common.ret.i
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1078
  %68 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1078
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1078
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !1078
  %69 = insertvalue %list.RocList %68, i64 %load_list.unpack7, 1, !dbg !1078
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1078
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1078
  %load_list10 = insertvalue %list.RocList %69, i64 %load_list.unpack9, 2, !dbg !1078
  ret %list.RocList %load_list10, !dbg !1078
}

define internal fastcc void @File_readUtf8_3f94bd83b418c69c7325a332ebd9e6da9f2c825d171f6534e1abd1b299755(ptr %path, ptr %0) !dbg !1089 {
entry:
  %result_value1 = alloca { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, align 8
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Path_fromStr_e45cf9a3784986d64cd036e55da6ecf25b91edcd97641716b0deb67be819c15d(ptr %path, ptr nonnull %result_value), !dbg !1090
  call fastcc void @Path_readUtf8_7d6ab6247b40c168eace692941939f47edb122c3e1c626b68190a91adae921(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !1090
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %result_value1, i64 88, i1 false), !dbg !1090
  ret void, !dbg !1090
}

define internal fastcc { { {}, {} }, {} } @Parser_oneOrMore_5ca234e842be91ca6ef02d32dee0b437d32a6589a2ee9ddf1e882abd5d30({} %parser) !dbg !1092 {
entry:
  %call = tail call fastcc {} @Parser_const_30481fcf7c8adc2224aef215aeafd160ca9331f1e475fdfcc945bd7c07dcc({} zeroinitializer), !dbg !1093
  %call1 = tail call fastcc { {}, {} } @Parser_apply_fe8059764c3d3277792adee58d94327ddbfcdfb8819194d0a9963ace709cac({} %call, {} %parser), !dbg !1093
  %call2 = tail call fastcc {} @Parser_many_29e45a3e94cb49faa0f523d42d14ca41e96e28836031b687849d13e5d59b({} %parser), !dbg !1093
  %call3 = tail call fastcc { { {}, {} }, {} } @Parser_apply_ecbd7b762d55e44bf495618cea878b55259220bc8edf3022f9d67817349224a({ {}, {} } %call1, {} %call2), !dbg !1093
  ret { { {}, {} }, {} } %call3, !dbg !1093
}

define internal fastcc %list.RocList @PlatformTasks_fileReadBytes_cd1c55e7b5398038f31ecfb0f47f579e5ab8039b49d1583d05f52b58fff1491(%list.RocList %closure_arg_fileReadBytes_0) !dbg !1095 {
entry:
  ret %list.RocList %closure_arg_fileReadBytes_0, !dbg !1096
}

define internal fastcc void @List_splitAt_7544714fcb8fdf9ddf55315cce78cf57de5a2d6621b01a7739ff24d9f60ac(%list.RocList %elements, i64 %userSplitIndex, ptr %0) !dbg !1098 {
entry:
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1099
  %call = tail call fastcc i64 @List_len_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7(%list.RocList %elements), !dbg !1099
  %call1 = tail call fastcc i1 @Num_isGt_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc(i64 %call, i64 %userSplitIndex), !dbg !1099
  br i1 %call1, label %then_block, label %else_block, !dbg !1099

then_block:                                       ; preds = %entry
  br label %joinpointcont, !dbg !1099

else_block:                                       ; preds = %entry
  br label %joinpointcont, !dbg !1099

joinpointcont:                                    ; preds = %else_block, %then_block
  %joinpointarg = phi i64 [ %userSplitIndex, %then_block ], [ %call, %else_block ], !dbg !1099
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %joinpointarg, 0, !dbg !1099
  %insert_record_field2 = insertvalue { i64, i64 } %insert_record_field, i64 0, 1, !dbg !1099
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %elements, i64 1), !dbg !1099
  %call3 = tail call fastcc %list.RocList @List_sublist_55aa18fc3c82fe108fcf64fea07364ddba1e8c526b8d27b19692a7748519e1c(%list.RocList %elements, { i64, i64 } %insert_record_field2), !dbg !1099
  %call4 = tail call fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %call, i64 %joinpointarg), !dbg !1099
  %insert_record_field5 = insertvalue { i64, i64 } zeroinitializer, i64 %call4, 0, !dbg !1099
  %insert_record_field6 = insertvalue { i64, i64 } %insert_record_field5, i64 %joinpointarg, 1, !dbg !1099
  %call7 = tail call fastcc %list.RocList @List_sublist_55aa18fc3c82fe108fcf64fea07364ddba1e8c526b8d27b19692a7748519e1c(%list.RocList %elements, { i64, i64 } %insert_record_field6), !dbg !1099
  %call3.elt = extractvalue %list.RocList %call3, 0, !dbg !1099
  store ptr %call3.elt, ptr %struct_alloca, align 8, !dbg !1099
  %struct_alloca.repack9 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1099
  %call3.elt10 = extractvalue %list.RocList %call3, 1, !dbg !1099
  store i64 %call3.elt10, ptr %struct_alloca.repack9, align 8, !dbg !1099
  %struct_alloca.repack11 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1099
  %call3.elt12 = extractvalue %list.RocList %call3, 2, !dbg !1099
  store i64 %call3.elt12, ptr %struct_alloca.repack11, align 8, !dbg !1099
  %struct_field_gep8 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !1099
  %call7.elt = extractvalue %list.RocList %call7, 0, !dbg !1099
  store ptr %call7.elt, ptr %struct_field_gep8, align 8, !dbg !1099
  %struct_field_gep8.repack13 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1099
  %call7.elt14 = extractvalue %list.RocList %call7, 1, !dbg !1099
  store i64 %call7.elt14, ptr %struct_field_gep8.repack13, align 8, !dbg !1099
  %struct_field_gep8.repack15 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1099
  %call7.elt16 = extractvalue %list.RocList %call7, 2, !dbg !1099
  store i64 %call7.elt16, ptr %struct_field_gep8.repack15, align 8, !dbg !1099
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1099
  ret void, !dbg !1099
}

define internal fastcc void @"#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d"(ptr %tag5, ptr %0) !dbg !1101 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1102
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1102
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %tag5, align 8, !dbg !1102
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca, align 8, !dbg !1102
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1102
  store i8 2, ptr %tag_id_ptr, align 8, !dbg !1102
  call fastcc void @Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !1102
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1102
  ret void, !dbg !1102
}

define internal fastcc void @Parser_parsePartial_8dff47a94badcb41e78dc31bfd22f3aa67ca62fc986df31893e8e85699c835f7({} %"246", %list.RocList %input, ptr %0) !dbg !1104 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Parser_52_3b148fd2a5a7120f39a95f212875e0e0a46b2eb1a77c5d23b9391c4799c48(%list.RocList %input, {} %"246", ptr nonnull %result_value), !dbg !1105
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !1105
  ret void, !dbg !1105
}

define internal fastcc void @Parser_parsePartial_7caba61bebab67ae1a3d5e6f4932f5086371aaa834774ba7fe45103dc45036(ptr %"246", %list.RocList %input, ptr %0) !dbg !1107 {
entry:
  %result_value = alloca { [7 x i64], i8 }, align 8
  call fastcc void @Parser_52_52115f631dea3d17c0d7d9ff65a53ef4e675f1908d1049eb3ef64da4d7e5d(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !1108
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !1108
  ret void, !dbg !1108
}

define internal fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %"#arg1", i64 %"#arg2") !dbg !1110 {
entry:
  %int_bitwise_xor = xor i64 %"#arg1", %"#arg2", !dbg !1111
  ret i64 %int_bitwise_xor, !dbg !1111
}

define internal fastcc %list.RocList @Parser_buildPrimitiveParser_df22f5cdce5189b46d93c2ffbbc44a1ef23ee85518e8bbd1038d0adb9c1a782(%list.RocList %fun) !dbg !1113 {
entry:
  ret %list.RocList %fun, !dbg !1114
}

define internal fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %"#arg1", i64 %"#arg2") !dbg !1116 {
entry:
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !1117
  %list_get_element = getelementptr inbounds i64, ptr %read_list_ptr, i64 %"#arg2", !dbg !1117
  %list_get_load_element = load i64, ptr %list_get_element, align 8, !dbg !1117
  ret i64 %list_get_load_element, !dbg !1117
}

define internal fastcc void @Result_try_a7deb1b6384ce9571721cd1522e1e931203f492c94f2dbf8138817d3824a(ptr %result, %list.RocList %transform, ptr %0) !dbg !1119 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !1120
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !1120
  %load_element4 = alloca { [8 x i64], i8 }, align 8, !dbg !1120
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !1120
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1120
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1120
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1120
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1120

then_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %result, align 8, !dbg !1120
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !1120
  %load_element.elt6 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !1120
  %load_element.unpack7 = load i64, ptr %load_element.elt6, align 8, !dbg !1120
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack7, 1, !dbg !1120
  %load_element.elt8 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !1120
  %load_element.unpack9 = load i64, ptr %load_element.elt8, align 8, !dbg !1120
  %load_element10 = insertvalue %list.RocList %2, i64 %load_element.unpack9, 2, !dbg !1120
  call fastcc void @Five_34_2937f1927d9516ec2e3625505ecd4d60f2cee887835d44646ab3e3d01375af(%list.RocList %load_element10, %list.RocList %transform, ptr nonnull %result_value), !dbg !1120
  call fastcc void @"#Attr_#dec_4"(%list.RocList %load_element10), !dbg !1120
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !1120
  ret void, !dbg !1120

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element4, ptr noundef nonnull align 8 dereferenceable(72) %result, i64 72, i1 false), !dbg !1120
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %load_element4, i64 72, i1 false), !dbg !1120
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !1120
  %tag_id_ptr5 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1120
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !1120
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !1120
  ret void, !dbg !1120
}

define internal fastcc void @Parser_parsePartial_cf8c9d89186a212409f843ad81dcb732cefe119aa65a9f5b319577583b6a15(ptr %"246", %list.RocList %input, ptr %0) !dbg !1122 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_combined_eee0cf2f77617b662da3ebd6ef24ced5db7e94b18f3abe7c751a51966a72a081(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !1123
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1123
  ret void, !dbg !1123
}

define internal fastcc {} @Parser_buildPrimitiveParser_11f55677694953d434d89b36eb7efc37feb0babdbd56c97251c7dbee733c868({} %fun) !dbg !1125 {
entry:
  ret {} %fun, !dbg !1126
}

define internal fastcc i8 @Dict_initialShifts_dfab3e7e4dcf97947ada0f8abcfc248e78de1f269ac4599a46f8db36f6ed6aa() !dbg !1128 {
entry:
  %call = tail call fastcc i8 @Num_subWrap_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41(i8 64, i8 3), !dbg !1129
  ret i8 %call, !dbg !1129
}

define internal fastcc void @Inspect_custom_28ed99b2257723c7de6da01790114bb6931256ffd9c1aaf369f05be7f782db(ptr %fn, ptr %0) !dbg !1131 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %fn, i64 24, i1 false), !dbg !1132
  ret void, !dbg !1132
}

define internal fastcc void @Parser_parsePartial_2dc969e7cadeba64dcad7acb43be4d64fb361cb6e86a62729ce66872e4fc({ {}, { {}, { { {}, {} }, {} } } } %"246", %list.RocList %input, ptr %0) !dbg !1134 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Parser_183_6bab55d98f9c2b3f1754a1c25bf8c10f2e62f9dce2d86e90d173ffe64bd23(%list.RocList %input, { {}, { {}, { { {}, {} }, {} } } } %"246", ptr nonnull %result_value), !dbg !1135
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1135
  ret void, !dbg !1135
}

define internal fastcc void @Parser_skip_3244389cd0f44ffa4fa4dd64554e447a88f58110161ed060aa55581f6d1890({ {}, { {}, { { {}, {} }, {} } } } %funParser, ptr %skipParser, ptr %0) !dbg !1137 {
entry:
  %result_value = alloca { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, align 8
  %struct_alloca = alloca { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(48) %skipParser, i64 48, i1 false), !dbg !1138
  call fastcc void @Parser_buildPrimitiveParser_cfd41a13b9e1de3dfbfaadc1fc5e7473458f62fb6c011bf5f7b89cb42a6fae5(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !1138
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1138
  ret void, !dbg !1138
}

define internal fastcc i1 @Num_isGte_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363(i64 %"#arg1", i64 %"#arg2") !dbg !1140 {
entry:
  %gte_uint = icmp uge i64 %"#arg1", %"#arg2", !dbg !1141
  ret i1 %gte_uint, !dbg !1141
}

define internal fastcc void @Inspect_210_87e3beb8acf04ad7c628d1277903abccefdd55a1b1c2d9bb874f9dfb0929e23(ptr %f2, ptr %inspector, ptr %0) !dbg !1143 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 32 to ptr), ptr %const_str_store, align 8, !dbg !1144
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1144
  store i64 0, ptr %const_str_store.repack2, align 8, !dbg !1144
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1144
  store i64 -9151314442816847872, ptr %const_str_store.repack3, align 8, !dbg !1144
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f2, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1144
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1144
  call fastcc void @Inspect_213_e55e154fb3c0423726cb71a0afdbc369aa2a0593b155c1e187f99dad748(ptr nonnull %result_value, ptr %inspector, ptr nonnull %result_value1), !dbg !1144
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !1144
  ret void, !dbg !1144
}

define internal fastcc void @String_parseStr_5c7fc6e8da44f4e01dcb7769e2bfcfae9456e0177c2ecd342c33edc3d01a4d(ptr %parser, ptr %input, ptr %0) !dbg !1146 {
entry:
  %result_value1 = alloca { [9 x i64], i8 }, align 8, !dbg !1147
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1147
  %call = tail call fastcc %list.RocList @String_strToRaw_ef4fd8e61cea3e28e02cea992acb5b69ff53641f7df759d72efd1ca2d6d2741(ptr %input), !dbg !1147
  call fastcc void @String_parseUtf8_7bad6ad1229fb7163196be598bc661e94e665de0e38b68d86c71f7a7299f6828(ptr %parser, %list.RocList %call, ptr nonnull %result_value), !dbg !1147
  call fastcc void @"#Attr_#dec_12"(%list.RocList %call), !dbg !1147
  call fastcc void @Result_mapErr_c5b690bc22238d3ac9e996befafbf2c431a107de306ea8b8318875c9fcba16(ptr nonnull %result_value, {} zeroinitializer, ptr nonnull %result_value1), !dbg !1147
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value1, i64 80, i1 false), !dbg !1147
  ret void, !dbg !1147
}

define internal fastcc void @"#UserApp_main_bc91ecf66cd9fcce2ace448deb6a9624e95e6179551ecbb08a5ce98a6e69a2"(ptr %0) !dbg !1149 {
entry:
  %result_value = alloca { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, align 8
  call fastcc void @Five_dayFive_2556ec2f505cf782dddbd25f753352aee08d91b5408c3986338c6065cf71ed3(ptr nonnull %result_value), !dbg !1150
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %result_value, i64 88, i1 false), !dbg !1150
  ret void, !dbg !1150
}

define internal fastcc void @"#Derived_custom4_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e"(ptr %fmt4, ptr %"#arg_closure", ptr %0) !dbg !1152 {
entry:
  %result_value23 = alloca %str.RocStr, align 8, !dbg !1153
  %tmp_output_for_jmp22 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %result_value21 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %const_str_store20 = alloca %str.RocStr, align 8, !dbg !1153
  %tmp_output_for_jmp19 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %result_value18 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %const_str_store17 = alloca %str.RocStr, align 8, !dbg !1153
  %tmp_output_for_jmp16 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %result_value15 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %const_str_store14 = alloca %str.RocStr, align 8, !dbg !1153
  %tmp_output_for_jmp13 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %result_value12 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %result_value9 = alloca %str.RocStr, align 8, !dbg !1153
  %const_str_store8 = alloca %str.RocStr, align 8, !dbg !1153
  %load_element7 = alloca %str.RocStr, align 8, !dbg !1153
  %tmp_output_for_jmp4 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %result_value3 = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %const_str_store2 = alloca %str.RocStr, align 8, !dbg !1153
  %tmp_output_for_jmp = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1153
  %joinpoint_arg_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1153
  %load_element = alloca { [3 x i64], i8 }, align 8, !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element, ptr noundef nonnull align 8 dereferenceable(32) %"#arg_closure", i64 32, i1 false), !dbg !1153
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %load_element, i64 0, i32 1, !dbg !1153
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1153
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
    i8 2, label %branch2
    i8 3, label %branch3
    i8 4, label %branch4
  ], !dbg !1153

default:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_36"(ptr nonnull %load_element), !dbg !1153
  store ptr inttoptr (i64 8391700773291780436 to ptr), ptr %const_str_store20, align 8, !dbg !1153
  %const_str_store20.repack34 = getelementptr inbounds %str.RocStr, ptr %const_str_store20, i64 0, i32 1, !dbg !1153
  store i64 0, ptr %const_str_store20.repack34, align 8, !dbg !1153
  %const_str_store20.repack35 = getelementptr inbounds %str.RocStr, ptr %const_str_store20, i64 0, i32 2, !dbg !1153
  store i64 -8646911284551352320, ptr %const_str_store20.repack35, align 8, !dbg !1153
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store20, %list.RocList zeroinitializer, ptr nonnull %result_value21), !dbg !1153
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1153
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store20), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp22, ptr noundef nonnull align 8 dereferenceable(56) %result_value21, i64 56, i1 false), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp22, i64 56, i1 false), !dbg !1153
  br label %joinpointcont, !dbg !1153

joinpointcont:                                    ; preds = %default, %branch4, %branch3, %branch2, %branch1, %branch0
  call fastcc void @Inspect_apply_9431905c91573f4ccc36b1a74d97f28a25ea16aef421e92a078dd6264383d(ptr nonnull %joinpoint_arg_alloca, ptr %fmt4, ptr nonnull %result_value23), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value23, i64 24, i1 false), !dbg !1153
  ret void, !dbg !1153

branch0:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_36"(ptr nonnull %load_element), !dbg !1153
  store ptr inttoptr (i64 8103508940177043017 to ptr), ptr %const_str_store, align 8, !dbg !1153
  %const_str_store.repack32 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1153
  store i64 6579572, ptr %const_str_store.repack32, align 8, !dbg !1153
  %const_str_store.repack33 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1153
  store i64 -8430738502437568512, ptr %const_str_store.repack33, align 8, !dbg !1153
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store, %list.RocList zeroinitializer, ptr nonnull %result_value), !dbg !1153
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1153
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, i64 56, i1 false), !dbg !1153
  br label %joinpointcont, !dbg !1153

branch1:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_36"(ptr nonnull %load_element), !dbg !1153
  store ptr inttoptr (i64 7236850772014821198 to ptr), ptr %const_str_store2, align 8, !dbg !1153
  %const_str_store2.repack30 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 1, !dbg !1153
  store i64 0, ptr %const_str_store2.repack30, align 8, !dbg !1153
  %const_str_store2.repack31 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 2, !dbg !1153
  store i64 -8646911284551352320, ptr %const_str_store2.repack31, align 8, !dbg !1153
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store2, %list.RocList zeroinitializer, ptr nonnull %result_value3), !dbg !1153
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store2), !dbg !1153
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, ptr noundef nonnull align 8 dereferenceable(56) %result_value3, i64 56, i1 false), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, i64 56, i1 false), !dbg !1153
  br label %joinpointcont, !dbg !1153

branch2:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element7, ptr noundef nonnull align 8 dereferenceable(24) %load_element, i64 24, i1 false), !dbg !1153
  store ptr inttoptr (i64 491327616079 to ptr), ptr %const_str_store8, align 8, !dbg !1153
  %const_str_store8.repack28 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 1, !dbg !1153
  store i64 0, ptr %const_str_store8.repack28, align 8, !dbg !1153
  %const_str_store8.repack29 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 2, !dbg !1153
  store i64 -8863084066665136128, ptr %const_str_store8.repack29, align 8, !dbg !1153
  call fastcc void @Inspect_dbgStr_aa3b634bf5a3cbfd69384c2274596f2bf4c68e9d7ee9e56807d20bdff71992f(ptr nonnull %load_element7, ptr nonnull %result_value9), !dbg !1153
  %call_builtin = call ptr @roc_builtins.utils.allocate_with_refcount(i64 24, i32 8, i1 true), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %call_builtin, ptr noundef nonnull align 8 dereferenceable(24) %result_value9, i64 24, i1 false), !dbg !1153
  %insert_record_field = insertvalue %list.RocList zeroinitializer, ptr %call_builtin, 0, !dbg !1153
  %insert_record_field10 = insertvalue %list.RocList %insert_record_field, i64 1, 1, !dbg !1153
  %insert_record_field11 = insertvalue %list.RocList %insert_record_field10, i64 1, 2, !dbg !1153
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store8, %list.RocList %insert_record_field11, ptr nonnull %result_value12), !dbg !1153
  call fastcc void @"#Attr_#dec_38"(%list.RocList %insert_record_field11), !dbg !1153
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store8), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, ptr noundef nonnull align 8 dereferenceable(56) %result_value12, i64 56, i1 false), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, i64 56, i1 false), !dbg !1153
  br label %joinpointcont, !dbg !1153

branch3:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_36"(ptr nonnull %load_element), !dbg !1153
  store ptr inttoptr (i64 7882791824596956495 to ptr), ptr %const_str_store14, align 8, !dbg !1153
  %const_str_store14.repack26 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 1, !dbg !1153
  store i64 7959151, ptr %const_str_store14.repack26, align 8, !dbg !1153
  %const_str_store14.repack27 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 2, !dbg !1153
  store i64 -8430738502437568512, ptr %const_str_store14.repack27, align 8, !dbg !1153
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store14, %list.RocList zeroinitializer, ptr nonnull %result_value15), !dbg !1153
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store14), !dbg !1153
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, ptr noundef nonnull align 8 dereferenceable(56) %result_value15, i64 56, i1 false), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, i64 56, i1 false), !dbg !1153
  br label %joinpointcont, !dbg !1153

branch4:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_36"(ptr nonnull %load_element), !dbg !1153
  store ptr inttoptr (i64 7598543892949132624 to ptr), ptr %const_str_store17, align 8, !dbg !1153
  %const_str_store17.repack24 = getelementptr inbounds %str.RocStr, ptr %const_str_store17, i64 0, i32 1, !dbg !1153
  store i64 7234304299306872431, ptr %const_str_store17.repack24, align 8, !dbg !1153
  %const_str_store17.repack25 = getelementptr inbounds %str.RocStr, ptr %const_str_store17, i64 0, i32 2, !dbg !1153
  store i64 -8070450532247928832, ptr %const_str_store17.repack25, align 8, !dbg !1153
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store17, %list.RocList zeroinitializer, ptr nonnull %result_value18), !dbg !1153
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1153
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store17), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp19, ptr noundef nonnull align 8 dereferenceable(56) %result_value18, i64 56, i1 false), !dbg !1153
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp19, i64 56, i1 false), !dbg !1153
  br label %joinpointcont, !dbg !1153
}

define internal fastcc void @Parser_77_2ad8658f1e86eeda3a02dcb74391d83ec763ff151af71fc3ac46cbea2b9ce({ %list.RocList, i64 } %"420", {} %valParser, ptr %0) !dbg !1155 {
entry:
  %result_value1 = alloca { [6 x i64], i8 }, align 8, !dbg !1156
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1156
  %struct_field_access_record_0 = extractvalue { %list.RocList, i64 } %"420", 0, !dbg !1156
  %struct_field_access_record_1 = extractvalue { %list.RocList, i64 } %"420", 1, !dbg !1156
  call fastcc void @Parser_parsePartial_125e5211332baa7aedbb2fd7f239977452738b3664d4eef2cbd7b5781537c7({} %valParser, %list.RocList %struct_field_access_record_0, ptr nonnull %result_value), !dbg !1156
  call fastcc void @Result_map_63a62446a3a2e66c16f975a152d1e79ba218462d3f6c0b693f02436a685aa8(ptr nonnull %result_value, i64 %struct_field_access_record_1, ptr nonnull %result_value1), !dbg !1156
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value1, i64 56, i1 false), !dbg !1156
  ret void, !dbg !1156
}

define internal fastcc void @Parser_buildPrimitiveParser_99e1652938de23842119ccffd84e8c6782547ce14bbfd1caa21f273de3289(ptr %fun, ptr %0) !dbg !1158 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %fun, i64 80, i1 false), !dbg !1159
  ret void, !dbg !1159
}

define internal fastcc %list.RocList @List_reserve_1a20a86e49e98265a07f2e3520fd72f1d5cc4a4259e669f8b2acf756122080(%list.RocList %"#arg1", i64 %"#arg2") !dbg !1161 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1162
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1162
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1162
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !1162
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !1162
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1162
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !1162
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1162
  call void @llvm.experimental.noalias.scope.decl(metadata !1164), !dbg !1162
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !1162
  call void @llvm.lifetime.start.p0(i64 24, ptr %0), !dbg !1162
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !1162
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1162
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !1162
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1162, !noalias !1164
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1162
  %.sroa.2.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !1162, !noalias !1164
  %isneg.i.i = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !1162
  %2 = call i64 @llvm.smax.i64(i64 %.sroa.2.0.copyload.i, i64 0), !dbg !1162
  %3 = select i1 %isneg.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1162
  %4 = or i64 %3, %2, !dbg !1162
  %5 = call i64 @llvm.uadd.sat.i64(i64 %.sroa.1.0.copyload.i, i64 %"#arg2"), !dbg !1162
  %6 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !1162
  %7 = icmp ne i64 %4, 0, !dbg !1162
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %6, !dbg !1162
  br i1 %brmerge.i.i.i, label %.critedge.i.i.i, label %list.RocList.isUnique.exit.i, !dbg !1162

.critedge.i.i.i:                                  ; preds = %entry
  %8 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !1162
  %.sroa.012.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !1162, !noalias !1164
  %9 = ptrtoint ptr %.sroa.012.0.copyload.i to i64, !dbg !1162
  %10 = shl i64 %.sroa.2.0.copyload.i, 1, !dbg !1162
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !1162
  %12 = inttoptr i64 %11 to ptr, !dbg !1162
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !1162
  %14 = load i64, ptr %13, align 8, !dbg !1162, !noalias !1164
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !1162
  br label %list.RocList.isUnique.exit.i, !dbg !1162

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i.i.i, %entry
  %common.ret.op.i.i.i = phi i1 [ %15, %.critedge.i.i.i ], [ true, %entry ], !dbg !1162
  %16 = icmp uge i64 %4, %5, !dbg !1162
  %or.cond.i = select i1 %common.ret.op.i.i.i, i1 %16, i1 false, !dbg !1162
  br i1 %or.cond.i, label %17, label %.critedge2.i, !dbg !1162

17:                                               ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !1162
  br label %roc_builtins.list.reserve.exit, !dbg !1162

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !1162, !noalias !1164
  call void @llvm.experimental.noalias.scope.decl(metadata !1167), !dbg !1162
  %18 = load ptr, ptr %1, align 8, !dbg !1162, !noalias !1170
  %.not.i.i = icmp eq ptr %18, null, !dbg !1162
  br i1 %.not.i.i, label %32, label %19, !dbg !1162

19:                                               ; preds = %.critedge2.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1162
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !1162, !noalias !1170
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !1162
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !1162, !noalias !1170
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1162
  %20 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !1162
  %21 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !1162
  %22 = or i64 %21, %20, !dbg !1162
  %23 = icmp ne i64 %22, 0, !dbg !1162
  %brmerge.i.i.i.i = select i1 %23, i1 true, i1 %isneg.i.i.i.i.i, !dbg !1162
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !1162

list.RocList.isUnique.exit.i.i:                   ; preds = %19
  %24 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1162
  %25 = ptrtoint ptr %18 to i64, !dbg !1162
  %26 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1162
  %27 = select i1 %24, i64 %26, i64 %25, !dbg !1162
  %28 = inttoptr i64 %27 to ptr, !dbg !1162
  %29 = getelementptr inbounds i64, ptr %28, i64 -1, !dbg !1162
  %30 = load i64, ptr %29, align 8, !dbg !1162, !noalias !1170
  %31 = icmp ne i64 %30, -9223372036854775808, !dbg !1162
  %brmerge.i.i = select i1 %31, i1 true, i1 %24, !dbg !1162
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !1162

32:                                               ; preds = %.critedge2.i
  %33 = icmp eq i64 %5, 0, !dbg !1162
  br i1 %33, label %list.RocList.allocate.exit.i.i, label %34, !dbg !1162

34:                                               ; preds = %32
  %35 = call i64 @llvm.umax.i64(i64 8, i64 %5), !dbg !1162
  %36 = mul nuw i64 %35, 8, !dbg !1162
  %37 = add nuw i64 %36, 8, !dbg !1162
  %38 = call ptr @roc_alloc(i64 %37, i32 8), !dbg !1162, !noalias !1171
  %39 = getelementptr inbounds i8, ptr %38, i64 8, !dbg !1162
  %40 = getelementptr inbounds i8, ptr %39, i64 -8, !dbg !1162
  store i64 -9223372036854775808, ptr %40, align 8, !dbg !1162, !noalias !1171
  br label %list.RocList.allocate.exit.i.i, !dbg !1162

list.RocList.allocate.exit.i.i:                   ; preds = %34, %32
  %.sroa.418.0.i.i = phi i64 [ %35, %34 ], [ 0, %32 ], !dbg !1162
  %.sroa.016.0.i.i = phi ptr [ %39, %34 ], [ null, %32 ], !dbg !1162
  store ptr %.sroa.016.0.i.i, ptr %0, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1162
  store i64 %5, ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1162
  store i64 %.sroa.418.0.i.i, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  br label %list.RocList.reallocate.exit.i, !dbg !1162

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i, %19
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i.i, %5, !dbg !1162
  br i1 %.not7.i.i, label %65, label %62, !dbg !1162

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %41 = icmp eq i64 %5, 0, !dbg !1162
  br i1 %41, label %list.RocList.allocate.exit.i.i.i, label %42, !dbg !1162

42:                                               ; preds = %.critedge.i.i
  %43 = call i64 @llvm.umax.i64(i64 8, i64 %5), !dbg !1162
  %44 = mul nuw i64 %43, 8, !dbg !1162
  %45 = add nuw i64 %44, 8, !dbg !1162
  %46 = call ptr @roc_alloc(i64 %45, i32 8), !dbg !1162, !noalias !1174
  %47 = getelementptr inbounds i8, ptr %46, i64 8, !dbg !1162
  %48 = getelementptr inbounds i8, ptr %47, i64 -8, !dbg !1162
  store i64 -9223372036854775808, ptr %48, align 8, !dbg !1162, !noalias !1174
  br label %list.RocList.allocate.exit.i.i.i, !dbg !1162

49:                                               ; preds = %list.RocList.allocate.exit.i.i.i
  %50 = load i64, ptr %29, align 8, !dbg !1162, !noalias !1179
  %.not.i.i.i.i = icmp eq i64 %50, 0, !dbg !1162
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %51, !dbg !1162

51:                                               ; preds = %49
  %52 = add i64 %50, -1, !dbg !1162
  store i64 %52, ptr %29, align 8, !dbg !1162, !noalias !1179
  %53 = icmp eq i64 %50, -9223372036854775808, !dbg !1162
  br i1 %53, label %54, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1162

54:                                               ; preds = %51
  call void @roc_dealloc(ptr nonnull align 1 %29, i32 8), !dbg !1162, !noalias !1179
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !1162

list.RocList.allocate.exit.i.i.i:                 ; preds = %42, %.critedge.i.i
  %.sroa.0.0.i.i.i = phi ptr [ %47, %42 ], [ null, %.critedge.i.i ], !dbg !1162
  %.sroa.5.0.i.i.i = phi i64 [ %43, %42 ], [ 0, %.critedge.i.i ], !dbg !1162
  %55 = mul nuw i64 %.sroa.2.0.copyload.i.i, 8, !dbg !1162
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %.sroa.0.0.i.i.i, ptr nonnull align 1 %18, i64 %55, i1 false), !dbg !1162, !noalias !1179
  %56 = getelementptr inbounds i8, ptr %.sroa.0.0.i.i.i, i64 %55, !dbg !1162
  %57 = sub i64 %5, %.sroa.2.0.copyload.i.i, !dbg !1162
  %58 = mul i64 %57, 8, !dbg !1162
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %56, i8 0, i64 %58, i1 false), !dbg !1162, !noalias !1179
  %59 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !1162
  %60 = icmp ne i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1162
  %61 = icmp ne i64 %27, 0, !dbg !1162
  %or.cond.i.i.i.i = select i1 %60, i1 %61, i1 false, !dbg !1162
  br i1 %or.cond.i.i.i.i, label %49, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1162

list.RocList.reallocateFresh.exit.i.i:            ; preds = %54, %51, %49, %list.RocList.allocate.exit.i.i.i
  store ptr %.sroa.0.0.i.i.i, ptr %0, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1162
  store i64 %5, ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1162
  store i64 %.sroa.5.0.i.i.i, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  br label %list.RocList.reallocate.exit.i, !dbg !1162

62:                                               ; preds = %.thread.i.i
  store ptr %18, ptr %0, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %63 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1162
  store i64 %5, ptr %63, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %64 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1162
  store i64 %.sroa.3.0.copyload.i.i, ptr %64, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  br label %list.RocList.reallocate.exit.i, !dbg !1162

65:                                               ; preds = %.thread.i.i
  %66 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1162
  br i1 %66, label %78, label %79, !dbg !1162

.split1.i.i:                                      ; preds = %72, %.split.i.i
  %phi.call.i.i = phi ptr [ %77, %72 ], [ %18, %.split.i.i ], !dbg !1162
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %67 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1162
  store i64 %5, ptr %67, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  %68 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1162
  store i64 %69, ptr %68, align 8, !dbg !1162, !alias.scope !1167, !noalias !1164
  br label %list.RocList.reallocate.exit.i, !dbg !1162

.split.i.i:                                       ; preds = %87, %85, %81, %78
  %.0.i.i = phi i64 [ %82, %81 ], [ %86, %85 ], [ %90, %87 ], [ 8, %78 ], !dbg !1162
  %69 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %5), !dbg !1162
  %70 = mul nuw i64 %.sroa.3.0.copyload.i.i, 8, !dbg !1162
  %71 = mul nuw i64 %69, 8, !dbg !1162
  %.not.i9.i.i = icmp ult i64 %70, %71, !dbg !1162
  br i1 %.not.i9.i.i, label %72, label %.split1.i.i, !dbg !1162

72:                                               ; preds = %.split.i.i
  %73 = add nuw i64 %71, 8, !dbg !1162
  %74 = add nuw i64 %70, 8, !dbg !1162
  %75 = getelementptr inbounds i8, ptr %18, i64 -8, !dbg !1162
  %76 = call ptr @roc_realloc(ptr nonnull align 1 %75, i64 %73, i64 %74, i32 8), !dbg !1162, !noalias !1170
  %77 = getelementptr inbounds i8, ptr %76, i64 8, !dbg !1162
  br label %.split1.i.i, !dbg !1162

78:                                               ; preds = %65
  br label %.split.i.i, !dbg !1162

79:                                               ; preds = %65
  %80 = icmp ult i64 %.sroa.3.0.copyload.i.i, 512, !dbg !1162
  br i1 %80, label %81, label %83, !dbg !1162

81:                                               ; preds = %79
  %82 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1162
  br label %.split.i.i, !dbg !1162

83:                                               ; preds = %79
  %84 = icmp ugt i64 %.sroa.3.0.copyload.i.i, 16384, !dbg !1162
  br i1 %84, label %85, label %87, !dbg !1162

85:                                               ; preds = %83
  %86 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1162
  br label %.split.i.i, !dbg !1162

87:                                               ; preds = %83
  %88 = mul nuw i64 %.sroa.3.0.copyload.i.i, 3, !dbg !1162
  %89 = add nuw i64 %88, 1, !dbg !1162
  %90 = lshr i64 %89, 1, !dbg !1162
  br label %.split.i.i, !dbg !1162

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %62, %list.RocList.reallocateFresh.exit.i.i, %list.RocList.allocate.exit.i.i
  %.sroa.03.0.copyload.i = load ptr, ptr %0, align 8, !dbg !1162, !noalias !1164
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1162
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !1162, !noalias !1164
  store ptr %.sroa.03.0.copyload.i, ptr %list_alloca, align 8, !dbg !1162, !alias.scope !1164
  %.sroa.25.0..sroa_idx6.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1162
  store i64 %.sroa.1.0.copyload.i, ptr %.sroa.25.0..sroa_idx6.i, align 8, !dbg !1162, !alias.scope !1164
  %.sroa.3.0..sroa_idx8.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1162
  store i64 %.sroa.3.0.copyload.i, ptr %.sroa.3.0..sroa_idx8.i, align 8, !dbg !1162, !alias.scope !1164
  br label %roc_builtins.list.reserve.exit, !dbg !1162

roc_builtins.list.reserve.exit:                   ; preds = %17, %list.RocList.reallocate.exit.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1162
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !1162
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !1162
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1162
  %91 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1162
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1162
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !1162
  %92 = insertvalue %list.RocList %91, i64 %load_list.unpack7, 1, !dbg !1162
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1162
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1162
  %load_list10 = insertvalue %list.RocList %92, i64 %load_list.unpack9, 2, !dbg !1162
  ret %list.RocList %load_list10, !dbg !1162
}

define internal fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %"#arg1", i64 %"#arg2") !dbg !1180 {
entry:
  %add_int_wrap = add i64 %"#arg1", %"#arg2", !dbg !1181
  ret i64 %add_int_wrap, !dbg !1181
}

define internal fastcc %list.RocList @List_walkHelp_99494e9e9babe4dcb72b4144dc54d31ba956a4ee34496553143a5e7cb7dc78c4(%list.RocList %"223", %list.RocList %"224", ptr %"225", i64 %"226", i64 %"227") !dbg !1183 {
entry:
  %tmp_output_for_jmp7 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %joinpoint_arg_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  tail call fastcc void @"#Attr_#inc_4"(%list.RocList %"223", i64 1), !dbg !1184
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(64) %"225", i64 64, i1 false), !dbg !1184
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, i64 64, i1 false), !dbg !1184
  br label %joinpointcont, !dbg !1184

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi %list.RocList [ %"224", %entry ], [ %call5, %then_block ], !dbg !1184
  %joinpointarg2 = phi i64 [ %"226", %entry ], [ %call6, %then_block ], !dbg !1184
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"227"), !dbg !1184
  br i1 %call, label %then_block, label %else_block, !dbg !1184

then_block:                                       ; preds = %joinpointcont
  %call4 = call fastcc %list.RocList @List_getUnsafe_5d84da6abaf677d342986d45e3605cfd5bd1528ee5196616226adfb513950(%list.RocList %"223", i64 %joinpointarg2), !dbg !1184
  call fastcc void @"#Attr_#inc_1"(%list.RocList %call4, i64 1), !dbg !1184
  call fastcc void @"#Attr_#inc_25"(ptr nonnull %joinpoint_arg_alloca, i64 1), !dbg !1184
  %call5 = call fastcc %list.RocList @List_283_e26b07323a88152db96f57cffd313b88dda6eb16db54bca99d36e02da3083(%list.RocList %joinpointarg1, %list.RocList %call4, ptr nonnull %joinpoint_arg_alloca), !dbg !1184
  %call6 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !1184
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp7, ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, i64 64, i1 false), !dbg !1184
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp7, i64 64, i1 false), !dbg !1184
  br label %joinpointcont, !dbg !1184

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_4"(%list.RocList %"223"), !dbg !1184
  call fastcc void @"#Attr_#dec_25"(ptr nonnull %joinpoint_arg_alloca), !dbg !1184
  ret %list.RocList %joinpointarg1, !dbg !1184
}

define internal fastcc void @Dict_find_c2d7201047722d5a148179c401bb3be69049c213c67ac89fa2daff2ad24745(ptr %"734", i64 %key, ptr %0) !dbg !1186 {
entry:
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1187
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1187
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1187
  %struct_field.unpack = load ptr, ptr %"734", align 8, !dbg !1187
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1187
  %struct_field.elt8 = getelementptr inbounds %list.RocList, ptr %"734", i64 0, i32 1, !dbg !1187
  %struct_field.unpack9 = load i64, ptr %struct_field.elt8, align 8, !dbg !1187
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack9, 1, !dbg !1187
  %struct_field.elt10 = getelementptr inbounds %list.RocList, ptr %"734", i64 0, i32 2, !dbg !1187
  %struct_field.unpack11 = load i64, ptr %struct_field.elt10, align 8, !dbg !1187
  %struct_field12 = insertvalue %list.RocList %2, i64 %struct_field.unpack11, 2, !dbg !1187
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 1, !dbg !1187
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1187
  %3 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !1187
  %struct_field1.elt13 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 1, i32 1, !dbg !1187
  %struct_field1.unpack14 = load i64, ptr %struct_field1.elt13, align 8, !dbg !1187
  %4 = insertvalue %list.RocList %3, i64 %struct_field1.unpack14, 1, !dbg !1187
  %struct_field1.elt15 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 1, i32 2, !dbg !1187
  %struct_field1.unpack16 = load i64, ptr %struct_field1.elt15, align 8, !dbg !1187
  %struct_field117 = insertvalue %list.RocList %4, i64 %struct_field1.unpack16, 2, !dbg !1187
  %struct_field_access_record_4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"734", i64 0, i32 4, !dbg !1187
  %struct_field2 = load i8, ptr %struct_field_access_record_4, align 1, !dbg !1187
  %call = tail call fastcc i64 @Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c(i64 %key), !dbg !1187
  %call3 = tail call fastcc i32 @Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68(i64 %call), !dbg !1187
  %call4 = tail call fastcc i64 @Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0(i64 %call, i8 %struct_field2), !dbg !1187
  %call5 = tail call fastcc i1 @List_isEmpty_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79(%list.RocList %struct_field117), !dbg !1187
  %call6 = tail call fastcc i1 @Bool_not_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3(i1 %call5), !dbg !1187
  br i1 %call6, label %then_block, label %else_block, !dbg !1187

then_block:                                       ; preds = %entry
  call fastcc void @Dict_findFirstUnroll_c8ee203993b19f9eeb79e6d9b9cb5c211fecc131b917baefe682bdc7d1dc7e(%list.RocList %struct_field12, i64 %call4, i32 %call3, %list.RocList %struct_field117, i64 %key, ptr nonnull %result_value), !dbg !1187
  call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field117), !dbg !1187
  call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field12), !dbg !1187
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1187
  ret void, !dbg !1187

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field117), !dbg !1187
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field12), !dbg !1187
  store i1 false, ptr %tag_alloca, align 8, !dbg !1187
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1187
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !1187
  store i64 %call4, ptr %struct_alloca, align 8, !dbg !1187
  %struct_field_gep7 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1187
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep7, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1187
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1187
  ret void, !dbg !1187
}

define internal fastcc %list.RocList @List_sublist_13f5c26ce0b5e6eebef533619a72113f96d1ebc7728f2a7c4631d56ba55ad7c(%list.RocList %list, { i64, i64 } %config) !dbg !1189 {
entry:
  %struct_field_access_record_1 = extractvalue { i64, i64 } %config, 1, !dbg !1190
  %struct_field_access_record_0 = extractvalue { i64, i64 } %config, 0, !dbg !1190
  %call = tail call fastcc %list.RocList @List_sublistLowlevel_edd459f1588e2edc4160caf3fec49aefc7d7fec1545146fd82c6ba52b293834(%list.RocList %list, i64 %struct_field_access_record_1, i64 %struct_field_access_record_0), !dbg !1190
  ret %list.RocList %call, !dbg !1190
}

define internal fastcc void @Result_map_5cbbff1635f59ae21a02af6cfe0157283a05fb77d9b6ef4377a9133a78ffbe5(ptr %result, ptr %transform, ptr %0) !dbg !1192 {
entry:
  %tag_alloca6 = alloca { [6 x i64], i8 }, align 8, !dbg !1193
  %load_element5 = alloca %str.RocStr, align 8, !dbg !1193
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1193
  %struct_alloca = alloca { { %list.RocList, %str.RocStr } }, align 8, !dbg !1193
  %result_value = alloca { %list.RocList, %str.RocStr }, align 8, !dbg !1193
  %load_element = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1193
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1193
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1193
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1193
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1193

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result, i64 48, i1 false), !dbg !1193
  call fastcc void @Parser_82_32ac2f866d693a9e245dc0cc93bb33a0eabe86458e24b9768b741d954033ef(ptr nonnull %load_element, ptr %transform, ptr nonnull %result_value), !dbg !1193
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1193
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1193
  %tag_id_ptr2 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1193
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !1193
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1193
  ret void, !dbg !1193

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_13"(ptr %transform), !dbg !1193
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !1193
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element5, align 8, !dbg !1193
  %load_tag_to_put_in_struct.elt9 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 1, !dbg !1193
  %load_tag_to_put_in_struct.unpack10 = load i64, ptr %load_tag_to_put_in_struct.elt9, align 8, !dbg !1193
  %load_tag_to_put_in_struct.elt11 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 2, !dbg !1193
  %load_tag_to_put_in_struct.unpack12 = load i64, ptr %load_tag_to_put_in_struct.elt11, align 8, !dbg !1193
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca6, align 8, !dbg !1193
  %tag_alloca6.repack14 = getelementptr inbounds %str.RocStr, ptr %tag_alloca6, i64 0, i32 1, !dbg !1193
  store i64 %load_tag_to_put_in_struct.unpack10, ptr %tag_alloca6.repack14, align 8, !dbg !1193
  %tag_alloca6.repack16 = getelementptr inbounds %str.RocStr, ptr %tag_alloca6, i64 0, i32 2, !dbg !1193
  store i64 %load_tag_to_put_in_struct.unpack12, ptr %tag_alloca6.repack16, align 8, !dbg !1193
  %tag_id_ptr8 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca6, i64 0, i32 1, !dbg !1193
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !1193
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca6, i64 56, i1 false), !dbg !1193
  ret void, !dbg !1193
}

define internal fastcc void @Parser_parse_3ef0be3dc434ba1162e39580a72ad0387348f7e2ac5c485921af9f85a731eea(ptr %parser, %list.RocList %input, {} %isParsingCompleted, ptr %0) !dbg !1195 {
entry:
  %tag_alloca25 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca20 = alloca { [3 x i64], i8 }, align 8
  %load_element17 = alloca %str.RocStr, align 8
  %tag_alloca12 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca8 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca = alloca { [4 x i64], i8 }, align 8
  %load_element = alloca { %list.RocList, %list.RocList }, align 8
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_parsePartial_42e294ef63ce8b6bacde71bdf2e18942982fab75ecb0b0597cb0c363350ba4b(ptr %parser, %list.RocList %input, ptr nonnull %result_value), !dbg !1196
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1196
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1196
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1196
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1196

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1196
  %struct_field.unpack = load ptr, ptr %load_element, align 8, !dbg !1196
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1196
  %struct_field.elt37 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 1, !dbg !1196
  %struct_field.unpack38 = load i64, ptr %struct_field.elt37, align 8, !dbg !1196
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack38, 1, !dbg !1196
  %struct_field.elt39 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 2, !dbg !1196
  %struct_field.unpack40 = load i64, ptr %struct_field.elt39, align 8, !dbg !1196
  %struct_field41 = insertvalue %list.RocList %2, i64 %struct_field.unpack40, 2, !dbg !1196
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, !dbg !1196
  %struct_field2.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1196
  %struct_field2.elt42 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, i32 1, !dbg !1196
  %struct_field2.unpack43 = load i64, ptr %struct_field2.elt42, align 8, !dbg !1196
  %struct_field2.elt44 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, i32 2, !dbg !1196
  %struct_field2.unpack45 = load i64, ptr %struct_field2.elt44, align 8, !dbg !1196
  %call = call fastcc i1 @String_59_bc413139b8bf596011dc864f2452fae94852749d6225b8d53dfd835ba68b7b(%list.RocList %struct_field41), !dbg !1196
  br i1 %call, label %then_block4, label %else_block5, !dbg !1196

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element17, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1196
  %load_tag_to_put_in_struct18.unpack = load ptr, ptr %load_element17, align 8, !dbg !1196
  %load_tag_to_put_in_struct18.elt28 = getelementptr inbounds %str.RocStr, ptr %load_element17, i64 0, i32 1, !dbg !1196
  %load_tag_to_put_in_struct18.unpack29 = load i64, ptr %load_tag_to_put_in_struct18.elt28, align 8, !dbg !1196
  %load_tag_to_put_in_struct18.elt30 = getelementptr inbounds %str.RocStr, ptr %load_element17, i64 0, i32 2, !dbg !1196
  %load_tag_to_put_in_struct18.unpack31 = load i64, ptr %load_tag_to_put_in_struct18.elt30, align 8, !dbg !1196
  store ptr %load_tag_to_put_in_struct18.unpack, ptr %tag_alloca20, align 8, !dbg !1196
  %tag_alloca20.repack33 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 1, !dbg !1196
  store i64 %load_tag_to_put_in_struct18.unpack29, ptr %tag_alloca20.repack33, align 8, !dbg !1196
  %tag_alloca20.repack35 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 2, !dbg !1196
  store i64 %load_tag_to_put_in_struct18.unpack31, ptr %tag_alloca20.repack35, align 8, !dbg !1196
  %tag_id_ptr22 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca20, i64 0, i32 1, !dbg !1196
  store i8 0, ptr %tag_id_ptr22, align 8, !dbg !1196
  %load_tag_to_put_in_struct23 = load { [3 x i64], i8 }, ptr %tag_alloca20, align 8, !dbg !1196
  store { [3 x i64], i8 } %load_tag_to_put_in_struct23, ptr %tag_alloca25, align 8, !dbg !1196
  %tag_id_ptr27 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca25, i64 0, i32 1, !dbg !1196
  store i8 0, ptr %tag_id_ptr27, align 8, !dbg !1196
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca25, i64 40, i1 false), !dbg !1196
  ret void, !dbg !1196

then_block4:                                      ; preds = %then_block
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field41), !dbg !1196
  store ptr %struct_field2.unpack, ptr %tag_alloca, align 8, !dbg !1196
  %tag_alloca.repack51 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1196
  store i64 %struct_field2.unpack43, ptr %tag_alloca.repack51, align 8, !dbg !1196
  %tag_alloca.repack53 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1196
  store i64 %struct_field2.unpack45, ptr %tag_alloca.repack53, align 8, !dbg !1196
  %tag_id_ptr6 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1196
  store i8 1, ptr %tag_id_ptr6, align 8, !dbg !1196
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1196
  ret void, !dbg !1196

else_block5:                                      ; preds = %then_block
  %3 = insertvalue %list.RocList poison, ptr %struct_field2.unpack, 0, !dbg !1196
  %4 = insertvalue %list.RocList %3, i64 %struct_field2.unpack43, 1, !dbg !1196
  %struct_field246 = insertvalue %list.RocList %4, i64 %struct_field2.unpack45, 2, !dbg !1196
  call fastcc void @"#Attr_#dec_4"(%list.RocList %struct_field246), !dbg !1196
  store ptr %struct_field.unpack, ptr %tag_alloca8, align 8, !dbg !1196
  %tag_alloca8.repack47 = getelementptr inbounds %list.RocList, ptr %tag_alloca8, i64 0, i32 1, !dbg !1196
  store i64 %struct_field.unpack38, ptr %tag_alloca8.repack47, align 8, !dbg !1196
  %tag_alloca8.repack49 = getelementptr inbounds %list.RocList, ptr %tag_alloca8, i64 0, i32 2, !dbg !1196
  store i64 %struct_field.unpack40, ptr %tag_alloca8.repack49, align 8, !dbg !1196
  %tag_id_ptr10 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !1196
  store i8 1, ptr %tag_id_ptr10, align 8, !dbg !1196
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %tag_alloca8, align 8, !dbg !1196
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca12, align 8, !dbg !1196
  %tag_id_ptr14 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca12, i64 0, i32 1, !dbg !1196
  store i8 0, ptr %tag_id_ptr14, align 8, !dbg !1196
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca12, i64 40, i1 false), !dbg !1196
  ret void, !dbg !1196
}

define internal fastcc void @PlatformTasks_task_closure_stderrLine_f0e2e1c8f8e8fdb997672cfd09071a69f19e35d6893c96be1ae254f383bdf({} %"127", ptr %closure_arg_stderrLine_0, ptr %0) !dbg !1198 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @roc_fx_stderrLine_fastcc_wrapper(ptr %closure_arg_stderrLine_0, ptr nonnull %result_value), !dbg !1199
  call fastcc void @"#Attr_#dec_13"(ptr %closure_arg_stderrLine_0), !dbg !1199
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !1199
  ret void, !dbg !1199
}

define internal fastcc %list.RocList @List_283_e26b07323a88152db96f57cffd313b88dda6eb16db54bca99d36e02da3083(%list.RocList %state, %list.RocList %elem, ptr %mapper) !dbg !1201 {
entry:
  %call = tail call fastcc %list.RocList @Five_85_4fb36d6b5bafed91b1af2ed219ed16e953dd85fb4918fd484493843c0df9dca(%list.RocList %elem, ptr %mapper), !dbg !1202
  %call1 = tail call fastcc %list.RocList @List_appendUnsafe_4f1fdebc72623b7987dfbf57d7b81537b885c9e4ce317a63dbf262856adf(%list.RocList %state, %list.RocList %call), !dbg !1202
  ret %list.RocList %call1, !dbg !1202
}

define internal fastcc void @Parser_82_647dd07ee8f7ddf03c325cf4d299a6b9816607efd5ade591788ff35124cdd(ptr %"425", i64 %funVal, ptr %0) !dbg !1204 {
entry:
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1205
  %struct_field.unpack = load ptr, ptr %"425", align 8, !dbg !1205
  %struct_field.elt3 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 1, !dbg !1205
  %struct_field.unpack4 = load i64, ptr %struct_field.elt3, align 8, !dbg !1205
  %struct_field.elt5 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 2, !dbg !1205
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !1205
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, !dbg !1205
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1205
  %1 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !1205
  %struct_field1.elt8 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, i32 1, !dbg !1205
  %struct_field1.unpack9 = load i64, ptr %struct_field1.elt8, align 8, !dbg !1205
  %2 = insertvalue %list.RocList %1, i64 %struct_field1.unpack9, 1, !dbg !1205
  %struct_field1.elt10 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, i32 2, !dbg !1205
  %struct_field1.unpack11 = load i64, ptr %struct_field1.elt10, align 8, !dbg !1205
  %struct_field112 = insertvalue %list.RocList %2, i64 %struct_field1.unpack11, 2, !dbg !1205
  %call = tail call fastcc %list.RocList @Parser_158_32a8df25d88ba7cee29904e38845254ec55404ac0bea8418e34e0df65c895(%list.RocList %struct_field112, i64 %funVal), !dbg !1205
  store ptr %struct_field.unpack, ptr %struct_alloca, align 8, !dbg !1205
  %struct_alloca.repack13 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1205
  store i64 %struct_field.unpack4, ptr %struct_alloca.repack13, align 8, !dbg !1205
  %struct_alloca.repack15 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1205
  store i64 %struct_field.unpack6, ptr %struct_alloca.repack15, align 8, !dbg !1205
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !1205
  %call.elt = extractvalue %list.RocList %call, 0, !dbg !1205
  store ptr %call.elt, ptr %struct_field_gep2, align 8, !dbg !1205
  %struct_field_gep2.repack17 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1205
  %call.elt18 = extractvalue %list.RocList %call, 1, !dbg !1205
  store i64 %call.elt18, ptr %struct_field_gep2.repack17, align 8, !dbg !1205
  %struct_field_gep2.repack19 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1205
  %call.elt20 = extractvalue %list.RocList %call, 2, !dbg !1205
  store i64 %call.elt20, ptr %struct_field_gep2.repack19, align 8, !dbg !1205
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1205
  ret void, !dbg !1205
}

define internal fastcc i32 @Dict_decrementDist_268182e6bf48c34ea8893d1d91dfdfbbcae7ca2eb5c9a5136f7f2958cb888df(i32 %distAndFingerprint) !dbg !1207 {
entry:
  %call = tail call fastcc i32 @Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d(), !dbg !1208
  %call1 = tail call fastcc i32 @Num_subWrap_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f(i32 %distAndFingerprint, i32 %call), !dbg !1208
  ret i32 %call1, !dbg !1208
}

define internal fastcc i32 @Dict_incrementDistN_544c19588062ed4289757939f8edf854589b8a37c6e1b564139c3298a34d6(i32 %distAndFingerprint, i32 %n) !dbg !1210 {
entry:
  %call = tail call fastcc i32 @Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d(), !dbg !1211
  %call1 = tail call fastcc i32 @Num_mulWrap_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31(i32 %n, i32 %call), !dbg !1211
  %call2 = tail call fastcc i32 @Num_addWrap_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b(i32 %distAndFingerprint, i32 %call1), !dbg !1211
  ret i32 %call2, !dbg !1211
}

define internal fastcc i1 @List_isEmpty_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613(%list.RocList %list) !dbg !1213 {
entry:
  %call = tail call fastcc i64 @List_len_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50(%list.RocList %list), !dbg !1214
  %call1 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %call, i64 0), !dbg !1214
  ret i1 %call1, !dbg !1214
}

define internal fastcc void @List_walkHelp_935229af12e1c6ee752a73f7b73add5a7c7a22cfba9e577e778e240ed627a(%list.RocList %"235", ptr %"236", {} %"237", i64 %"238", i64 %"239", ptr %0) !dbg !1216 {
entry:
  %tmp_output_for_jmp6 = alloca %str.RocStr, align 8
  %result_value4 = alloca %str.RocStr, align 8
  %result_value = alloca { [4 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#inc_39"(%list.RocList %"235", i64 1), !dbg !1217
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(24) %"236", i64 24, i1 false), !dbg !1217
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, i64 24, i1 false), !dbg !1217
  br label %joinpointcont, !dbg !1217

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg2 = phi i64 [ %"238", %entry ], [ %call5, %then_block ], !dbg !1217
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"239"), !dbg !1217
  br i1 %call, label %then_block, label %else_block, !dbg !1217

then_block:                                       ; preds = %joinpointcont
  call fastcc void @List_getUnsafe_172247c57cf29182b738e1647bff697cbe655ff06cf0aee2ca31b6b397327385(%list.RocList %"235", i64 %joinpointarg2, ptr nonnull %result_value), !dbg !1217
  call fastcc void @"#Attr_#inc_40"(ptr nonnull %result_value, i64 1), !dbg !1217
  call fastcc void @Inspect_210_87e3beb8acf04ad7c628d1277903abccefdd55a1b1c2d9bb874f9dfb0929e23(ptr nonnull %joinpoint_arg_alloca, ptr nonnull %result_value, ptr nonnull %result_value4), !dbg !1217
  %call5 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !1217
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !1217
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, i64 24, i1 false), !dbg !1217
  br label %joinpointcont, !dbg !1217

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_39"(%list.RocList %"235"), !dbg !1217
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, i64 24, i1 false), !dbg !1217
  ret void, !dbg !1217
}

define internal fastcc void @Parser_57_81b6d1d3d209194aa735675712bd730b1987c61790f68995aee106436e9(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !1219 {
entry:
  %tag_alloca41 = alloca { [7 x i64], i8 }, align 8, !dbg !1220
  %result_value40 = alloca %str.RocStr, align 8, !dbg !1220
  %result_value39 = alloca %str.RocStr, align 8, !dbg !1220
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1220
  %load_element38 = alloca %str.RocStr, align 8, !dbg !1220
  %tag_alloca33 = alloca { [7 x i64], i8 }, align 8, !dbg !1220
  %struct_alloca31 = alloca { { %list.RocList, { [3 x i64], i8 } } }, align 8, !dbg !1220
  %struct_alloca28 = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1220
  %struct_field27 = alloca { [3 x i64], i8 }, align 8, !dbg !1220
  %load_element23 = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1220
  %result_value14 = alloca { [7 x i64], i8 }, align 8, !dbg !1220
  %load_element13 = alloca %str.RocStr, align 8, !dbg !1220
  %tag_alloca = alloca { [7 x i64], i8 }, align 8, !dbg !1220
  %struct_alloca8 = alloca { { %list.RocList, { [3 x i64], i8 } } }, align 8, !dbg !1220
  %struct_alloca = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1220
  %struct_field6 = alloca { [3 x i64], i8 }, align 8, !dbg !1220
  %load_element = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1220
  %result_value = alloca { [7 x i64], i8 }, align 8, !dbg !1220
  %struct_field1 = alloca { { %str.RocStr, %list.RocList }, {} }, align 8, !dbg !1220
  %struct_field = alloca { [3 x i64], i8 }, align 8, !dbg !1220
  %struct_field_access_record_1 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_1, i64 32, i1 false), !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field1, ptr noundef nonnull align 8 dereferenceable(48) %"#arg_closure", i64 48, i1 false), !dbg !1220
  call fastcc void @Parser_parsePartial_9d8f5875d4fc797f2c81c2bf03f92412bb92373cb8a8acc686be54cd51658a7(ptr nonnull %struct_field1, %list.RocList %input, ptr nonnull %result_value), !dbg !1220
  %tag_id_ptr = getelementptr inbounds { [7 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1220
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1220
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1220
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1220

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_21"(ptr nonnull %struct_field), !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %load_element, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1220
  %struct_field4.unpack = load ptr, ptr %load_element, align 8, !dbg !1220
  %struct_field4.elt64 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 1, !dbg !1220
  %struct_field4.unpack65 = load i64, ptr %struct_field4.elt64, align 8, !dbg !1220
  %struct_field4.elt66 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 2, !dbg !1220
  %struct_field4.unpack67 = load i64, ptr %struct_field4.elt66, align 8, !dbg !1220
  %struct_field_access_record_15 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %load_element, i64 0, i32 1, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field6, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_15, i64 32, i1 false), !dbg !1220
  store ptr %struct_field4.unpack, ptr %struct_alloca, align 8, !dbg !1220
  %struct_alloca.repack69 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1220
  store i64 %struct_field4.unpack65, ptr %struct_alloca.repack69, align 8, !dbg !1220
  %struct_alloca.repack71 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1220
  store i64 %struct_field4.unpack67, ptr %struct_alloca.repack71, align 8, !dbg !1220
  %struct_field_gep7 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep7, ptr noundef nonnull align 8 dereferenceable(32) %struct_field6, i64 32, i1 false), !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca8, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, i64 56, i1 false), !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca8, i64 56, i1 false), !dbg !1220
  %tag_id_ptr10 = getelementptr inbounds { [7 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1220
  store i8 1, ptr %tag_id_ptr10, align 8, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca, i64 64, i1 false), !dbg !1220
  ret void, !dbg !1220

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element13, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1220
  call fastcc void @Parser_parsePartial_7caba61bebab67ae1a3d5e6f4932f5086371aaa834774ba7fe45103dc45036(ptr nonnull %struct_field, %list.RocList %input, ptr nonnull %result_value14), !dbg !1220
  %tag_id_ptr15 = getelementptr inbounds { [7 x i64], i8 }, ptr %result_value14, i64 0, i32 1, !dbg !1220
  %load_tag_id16 = load i8, ptr %tag_id_ptr15, align 8, !dbg !1220
  %eq_u817 = icmp eq i8 %load_tag_id16, 1, !dbg !1220
  br i1 %eq_u817, label %then_block19, label %else_block20, !dbg !1220

then_block19:                                     ; preds = %else_block
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element13), !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %load_element23, ptr noundef nonnull align 8 dereferenceable(56) %result_value14, i64 56, i1 false), !dbg !1220
  %struct_field25.unpack = load ptr, ptr %load_element23, align 8, !dbg !1220
  %struct_field25.elt55 = getelementptr inbounds %list.RocList, ptr %load_element23, i64 0, i32 1, !dbg !1220
  %struct_field25.unpack56 = load i64, ptr %struct_field25.elt55, align 8, !dbg !1220
  %struct_field25.elt57 = getelementptr inbounds %list.RocList, ptr %load_element23, i64 0, i32 2, !dbg !1220
  %struct_field25.unpack58 = load i64, ptr %struct_field25.elt57, align 8, !dbg !1220
  %struct_field_access_record_126 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %load_element23, i64 0, i32 1, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field27, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_126, i64 32, i1 false), !dbg !1220
  store ptr %struct_field25.unpack, ptr %struct_alloca28, align 8, !dbg !1220
  %struct_alloca28.repack60 = getelementptr inbounds %list.RocList, ptr %struct_alloca28, i64 0, i32 1, !dbg !1220
  store i64 %struct_field25.unpack56, ptr %struct_alloca28.repack60, align 8, !dbg !1220
  %struct_alloca28.repack62 = getelementptr inbounds %list.RocList, ptr %struct_alloca28, i64 0, i32 2, !dbg !1220
  store i64 %struct_field25.unpack58, ptr %struct_alloca28.repack62, align 8, !dbg !1220
  %struct_field_gep30 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %struct_alloca28, i64 0, i32 1, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep30, ptr noundef nonnull align 8 dereferenceable(32) %struct_field27, i64 32, i1 false), !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca31, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca28, i64 56, i1 false), !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca33, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca31, i64 56, i1 false), !dbg !1220
  %tag_id_ptr35 = getelementptr inbounds { [7 x i64], i8 }, ptr %tag_alloca33, i64 0, i32 1, !dbg !1220
  store i8 1, ptr %tag_id_ptr35, align 8, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca33, i64 64, i1 false), !dbg !1220
  ret void, !dbg !1220

else_block20:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element38, ptr noundef nonnull align 8 dereferenceable(24) %result_value14, i64 24, i1 false), !dbg !1220
  store ptr inttoptr (i64 544370464 to ptr), ptr %const_str_store, align 8, !dbg !1220
  %const_str_store.repack44 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1220
  store i64 0, ptr %const_str_store.repack44, align 8, !dbg !1220
  %const_str_store.repack45 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1220
  store i64 -8935141660703064064, ptr %const_str_store.repack45, align 8, !dbg !1220
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %const_str_store, ptr nonnull %load_element38, ptr nonnull %result_value39), !dbg !1220
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element38), !dbg !1220
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %load_element13, ptr nonnull %result_value39, ptr nonnull %result_value40), !dbg !1220
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value39), !dbg !1220
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %result_value40, align 8, !dbg !1220
  %load_tag_to_put_in_struct.elt46 = getelementptr inbounds %str.RocStr, ptr %result_value40, i64 0, i32 1, !dbg !1220
  %load_tag_to_put_in_struct.unpack47 = load i64, ptr %load_tag_to_put_in_struct.elt46, align 8, !dbg !1220
  %load_tag_to_put_in_struct.elt48 = getelementptr inbounds %str.RocStr, ptr %result_value40, i64 0, i32 2, !dbg !1220
  %load_tag_to_put_in_struct.unpack49 = load i64, ptr %load_tag_to_put_in_struct.elt48, align 8, !dbg !1220
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca41, align 8, !dbg !1220
  %tag_alloca41.repack51 = getelementptr inbounds %str.RocStr, ptr %tag_alloca41, i64 0, i32 1, !dbg !1220
  store i64 %load_tag_to_put_in_struct.unpack47, ptr %tag_alloca41.repack51, align 8, !dbg !1220
  %tag_alloca41.repack53 = getelementptr inbounds %str.RocStr, ptr %tag_alloca41, i64 0, i32 2, !dbg !1220
  store i64 %load_tag_to_put_in_struct.unpack49, ptr %tag_alloca41.repack53, align 8, !dbg !1220
  %tag_id_ptr43 = getelementptr inbounds { [7 x i64], i8 }, ptr %tag_alloca41, i64 0, i32 1, !dbg !1220
  store i8 0, ptr %tag_id_ptr43, align 8, !dbg !1220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca41, i64 64, i1 false), !dbg !1220
  ret void, !dbg !1220
}

define internal fastcc void @Parser_52_b951f2385a7b569e8c6dff449b41837e7280adc46ecebfd577414d2d585d0(%list.RocList %input, {} %val, ptr %0) !dbg !1222 {
entry:
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1223
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !1223
  %input.elt = extractvalue %list.RocList %input, 0, !dbg !1223
  store ptr %input.elt, ptr %tag_alloca, align 8, !dbg !1223
  %tag_alloca.repack5 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1223
  %input.elt6 = extractvalue %list.RocList %input, 1, !dbg !1223
  store i64 %input.elt6, ptr %tag_alloca.repack5, align 8, !dbg !1223
  %tag_alloca.repack7 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1223
  %input.elt8 = extractvalue %list.RocList %input, 2, !dbg !1223
  store i64 %input.elt8, ptr %tag_alloca.repack7, align 8, !dbg !1223
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1223
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1223
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1223
  ret void, !dbg !1223
}

define internal fastcc void @Dict_get_6fe3723198a75889cb8af57c5c09ddd2b39fa52c21bf2b932afda892bd9e585(ptr %dict, i64 %key, ptr %0) !dbg !1225 {
entry:
  %result_value1 = alloca { [3 x i64], i8 }, align 8
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8
  call fastcc void @Dict_find_c2d7201047722d5a148179c401bb3be69049c213c67ac89fa2daff2ad24745(ptr %dict, i64 %key, ptr nonnull %result_value), !dbg !1226
  call fastcc void @Dict_213_5d5899d97eec8f628ea2a69ef616fa6c36bb808ec07e672cff8f94c1b6c031da(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !1226
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value1, i64 32, i1 false), !dbg !1226
  ret void, !dbg !1226
}

define internal fastcc void @Inspect_apply_40fe0ba3064c6cb636e3954b551733ab4335a5a776bbbf988c5d31fb20b470(ptr %"303", ptr %fmt, ptr %0) !dbg !1228 {
entry:
  %result_value5 = alloca %str.RocStr, align 8, !dbg !1229
  %result_value4 = alloca %str.RocStr, align 8, !dbg !1229
  %result_value3 = alloca %str.RocStr, align 8, !dbg !1229
  %result_value2 = alloca %str.RocStr, align 8, !dbg !1229
  %result_value1 = alloca %str.RocStr, align 8, !dbg !1229
  %result_value = alloca %str.RocStr, align 8, !dbg !1229
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !1229
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1229
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
    i8 2, label %branch2
    i8 3, label %branch3
    i8 4, label %branch4
  ], !dbg !1229

default:                                          ; preds = %entry
  call fastcc void @Inspect_272_e97c7c92d435d433f8aa8ddd4ddc6c9d8c45c10adae536897eecfd72f2389(ptr %fmt, ptr %"303", ptr nonnull %result_value5), !dbg !1229
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value5, i64 24, i1 false), !dbg !1229
  ret void, !dbg !1229

branch0:                                          ; preds = %entry
  call fastcc void @"#Derived_custom4_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e"(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !1229
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1229
  ret void, !dbg !1229

branch1:                                          ; preds = %entry
  call fastcc void @"#Derived_custom5_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8"(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !1229
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !1229
  ret void, !dbg !1229

branch2:                                          ; preds = %entry
  call fastcc void @"#Derived_custom6_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd"(ptr %fmt, ptr %"303", ptr nonnull %result_value2), !dbg !1229
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value2, i64 24, i1 false), !dbg !1229
  ret void, !dbg !1229

branch3:                                          ; preds = %entry
  call fastcc void @Inspect_250_157bd1cfbdd899eaf8ca5ae4444e5a394fecb36bc61dda74dd795d3df0ac853f(ptr %fmt, ptr %"303", ptr nonnull %result_value3), !dbg !1229
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value3, i64 24, i1 false), !dbg !1229
  ret void, !dbg !1229

branch4:                                          ; preds = %entry
  tail call fastcc void @"#Attr_#dec_40"(ptr %"303"), !dbg !1229
  call fastcc void @Inspect_252_f56abf6a50719c6e8161e4ae34e1a1a63cddb05e916253c8457a373372d6bb(ptr %fmt, ptr nonnull %result_value4), !dbg !1229
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !1229
  ret void, !dbg !1229
}

define internal fastcc %list.RocList @List_walk_f79740875a4d32b5abcf43deaad586f61fe4062a6785757475b34d82a82(%list.RocList %list, %list.RocList %init, ptr %func) !dbg !1231 {
entry:
  %call = tail call fastcc i64 @List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6(%list.RocList %list), !dbg !1232
  %call1 = tail call fastcc %list.RocList @List_walkHelp_99494e9e9babe4dcb72b4144dc54d31ba956a4ee34496553143a5e7cb7dc78c4(%list.RocList %list, %list.RocList %init, ptr %func, i64 0, i64 %call), !dbg !1232
  ret %list.RocList %call1, !dbg !1232
}

define internal fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %"#arg1") !dbg !1234 {
entry:
  %inc_cast = zext i32 %"#arg1" to i64, !dbg !1235
  ret i64 %inc_cast, !dbg !1235
}

define internal fastcc i32 @Dict_fingerprintMask_bac59821c43c0b53dd3438580b2599a5bf16c219b40a9d5e9a6e6a5390() !dbg !1237 {
entry:
  %call = tail call fastcc i32 @Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d(), !dbg !1238
  %call1 = tail call fastcc i32 @Num_subWrap_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f(i32 %call, i32 1), !dbg !1238
  ret i32 %call1, !dbg !1238
}

define internal fastcc %list.RocList @List_getUnsafe_5d84da6abaf677d342986d45e3605cfd5bd1528ee5196616226adfb513950(%list.RocList %"#arg1", i64 %"#arg2") !dbg !1240 {
entry:
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !1241
  %list_get_element = getelementptr inbounds %list.RocList, ptr %read_list_ptr, i64 %"#arg2", !dbg !1241
  %list_get_load_element.unpack = load ptr, ptr %list_get_element, align 8, !dbg !1241
  %0 = insertvalue %list.RocList poison, ptr %list_get_load_element.unpack, 0, !dbg !1241
  %list_get_load_element.elt1 = getelementptr inbounds %list.RocList, ptr %read_list_ptr, i64 %"#arg2", i32 1, !dbg !1241
  %list_get_load_element.unpack2 = load i64, ptr %list_get_load_element.elt1, align 8, !dbg !1241
  %1 = insertvalue %list.RocList %0, i64 %list_get_load_element.unpack2, 1, !dbg !1241
  %list_get_load_element.elt3 = getelementptr inbounds %list.RocList, ptr %read_list_ptr, i64 %"#arg2", i32 2, !dbg !1241
  %list_get_load_element.unpack4 = load i64, ptr %list_get_load_element.elt3, align 8, !dbg !1241
  %list_get_load_element5 = insertvalue %list.RocList %1, i64 %list_get_load_element.unpack4, 2, !dbg !1241
  ret %list.RocList %list_get_load_element5, !dbg !1241
}

define internal fastcc i1 @Bool_structuralEq_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4(%list.RocList %"#arg1", %list.RocList %"#arg2") !dbg !1243 {
entry:
  %list_eq = tail call fastcc i1 @"#Attr_#list_eq_1"(%list.RocList %"#arg1", %list.RocList %"#arg2"), !dbg !1244
  ret i1 %list_eq, !dbg !1244
}

define internal fastcc i64 @Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c(i64 %key) !dbg !1246 {
entry:
  %tag_alloca = alloca { [1 x i64], i8 }, align 8
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1247
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !1247
  %call = call fastcc { i64, i64 } @Dict_createLowLevelHasher_44109459d64fcdac3ea0c7115c1a33caa6de3332a46a1f0819b84a1d3a6c9(ptr nonnull %tag_alloca), !dbg !1247
  %call1 = call fastcc { i64, i64 } @Dict_addU64_684393a95528f29ba49a721c9e7bd2dbf82e1a92e5b742ec5b556b18be7657({ i64, i64 } %call, i64 %key), !dbg !1247
  %call2 = call fastcc i64 @Dict_complete_4a2d194da1241ef3ca5a8139a734b29ae4efb20126643584c91fe6ded8e2c5a({ i64, i64 } %call1), !dbg !1247
  ret i64 %call2, !dbg !1247
}

define internal fastcc void @Inspect_apply_82d12b6b12b8099eecd17c66fbb6ef41a8137f8c1ef74478e7bee978be8f9(ptr %"303", ptr %fmt, ptr %0) !dbg !1249 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !1250
  %result_value = alloca %str.RocStr, align 8, !dbg !1250
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !1250
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1250
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
  ], !dbg !1250

default:                                          ; preds = %entry
  call fastcc void @Inspect_275_8ead792afbb7295a7a6f746f03a37944bab1f8fd38fb733c7a6d5776a8f(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !1250
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !1250
  ret void, !dbg !1250

branch0:                                          ; preds = %entry
  call fastcc void @"#Derived_custom7_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6"(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !1250
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1250
  ret void, !dbg !1250
}

define internal fastcc void @Parser_apply_bc1c80155c9262df33a08c68877930d3cc5995efe62149618580d2587468467({} %funParser, ptr %valParser, ptr %0) !dbg !1252 {
entry:
  %result_value = alloca { { %str.RocStr, %list.RocList }, {} }, align 8
  %struct_alloca = alloca { { %str.RocStr, %list.RocList }, {} }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(48) %valParser, i64 48, i1 false), !dbg !1253
  call fastcc void @Parser_buildPrimitiveParser_d5647456e607ff6cf08729c7b3b8975d79d2a5c98181aa9d451a45bd6a8da(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !1253
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1253
  ret void, !dbg !1253
}

define internal fastcc i64 @List_len_46df57811ab9544a1f9313aab57b6ce51825f299caf5a1ffe2569412f3ed972(%list.RocList %"#arg1") !dbg !1255 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !1256
  ret i64 %list_len, !dbg !1256
}

define internal fastcc i64 @Dict_calcNumBuckets_1529b61b29181b37e427cd639d65060a33ef72662c4981e67e9c292331a(i8 %shifts) !dbg !1258 {
entry:
  %call = tail call fastcc i8 @Num_subWrap_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41(i8 64, i8 %shifts), !dbg !1259
  %call1 = tail call fastcc i64 @Num_shiftLeftBy_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(i64 1, i8 %call), !dbg !1259
  %call2 = tail call fastcc i64 @Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1(), !dbg !1259
  %call3 = tail call fastcc i64 @Num_min_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b(i64 %call1, i64 %call2), !dbg !1259
  ret i64 %call3, !dbg !1259
}

define internal fastcc void @Five_makeRules_7bc7b3ab839bcc84a286756163f821081944e9d993409f8654fbccc51f341d(%list.RocList %rules, ptr %0) !dbg !1261 {
entry:
  %result_value1 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  call fastcc void @Dict_empty_8523cacf79b3ae26b5b5ddfebda64fc7e54c53c82e133fab2e0abee3a1046({} zeroinitializer, ptr nonnull %result_value), !dbg !1262
  call fastcc void @List_walk_8445464738218c426e3b841f28ede2879d4391e6c33df6a616e872e199e47e(%list.RocList %rules, ptr nonnull %result_value, {} zeroinitializer, ptr nonnull %result_value1), !dbg !1262
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value1, i64 64, i1 false), !dbg !1262
  ret void, !dbg !1262
}

define internal fastcc %list.RocList @List_keepIf_55d628abedfcc0e78784ef0cac7a0c47c774ce17d4fb8ba44f37721d7f3d98(%list.RocList %list, ptr %predicate) !dbg !1264 {
entry:
  %call = tail call fastcc i64 @List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6(%list.RocList %list), !dbg !1265
  %call1 = tail call fastcc %list.RocList @List_keepIfHelp_a1fdfd7ca485c5e9436ed61186fef7b9b914edaf84deff48d9823fcadcd6ac(%list.RocList %list, ptr %predicate, i64 0, i64 0, i64 %call), !dbg !1265
  ret %list.RocList %call1, !dbg !1265
}

define internal fastcc void @Parser_parsePartial_9d8f5875d4fc797f2c81c2bf03f92412bb92373cb8a8acc686be54cd51658a7(ptr %"246", %list.RocList %input, ptr %0) !dbg !1267 {
entry:
  %result_value = alloca { [7 x i64], i8 }, align 8
  call fastcc void @Parser_combined_f446d5af246aa5183eb4a09cd57fa3ea76a8dcb6485754c231e81a751e2d1b(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !1268
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !1268
  ret void, !dbg !1268
}

define internal fastcc i32 @_8_647daa5d9488126c5d148e68e474c6f899fa96593a9e1c942a9cdd7773170({} %"20", ptr %"#arg_closure") !dbg !1270 {
entry:
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !1271
  %call = tail call fastcc i32 @Task_err_16c9acb11420bb4864958cb65deec56be7d76275852725d2b6cfa6b292a31ee8(i32 %load_element), !dbg !1271
  ret i32 %call, !dbg !1271
}

define internal fastcc %list.RocList @List_sublist_c76509a58fbafc47f4d5fc1992204e92c831be8ebe1587d7baf160babfe2ad(%list.RocList %list, { i64, i64 } %config) !dbg !1273 {
entry:
  %struct_field_access_record_1 = extractvalue { i64, i64 } %config, 1, !dbg !1274
  %struct_field_access_record_0 = extractvalue { i64, i64 } %config, 0, !dbg !1274
  %call = tail call fastcc %list.RocList @List_sublistLowlevel_d5c9642a64db206d88ab43bd2b9527b05aca746579abd7472d977da8e33ac(%list.RocList %list, i64 %struct_field_access_record_1, i64 %struct_field_access_record_0), !dbg !1274
  ret %list.RocList %call, !dbg !1274
}

define internal fastcc void @List_iterate_ade2dc9e385e74c61c8d36210907131d7823a7fe8d06c7bd978c1f46a9d3830(%list.RocList %list, i64 %init, i64 %func, ptr %0) !dbg !1276 {
entry:
  %result_value = alloca { [1 x i64], i8 }, align 8, !dbg !1277
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !1277
  call fastcc void @List_iterHelp_50e8e06555163661d37576e08a187bc1a82c34c685bbe84f89594e81f9565960(%list.RocList %list, i64 %init, i64 %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !1277
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %result_value, i64 16, i1 false), !dbg !1277
  ret void, !dbg !1277
}

define internal fastcc %list.RocList @String_strToRaw_ef4fd8e61cea3e28e02cea992acb5b69ff53641f7df759d72efd1ca2d6d2741(ptr %str) !dbg !1279 {
entry:
  %call = tail call fastcc %list.RocList @Str_toUtf8_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63(ptr %str), !dbg !1280
  ret %list.RocList %call, !dbg !1280
}

define internal fastcc void @Inspect_dbgI32_8235e4d87e64a6f1c0dba97cda99445de848b0ab53d798c9d7a57517bdbf(i32 %num, ptr %0) !dbg !1282 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1283
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1283
  store i32 %num, ptr %tag_alloca, align 8, !dbg !1283
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1283
  store i8 5, ptr %tag_id_ptr, align 8, !dbg !1283
  call fastcc void @Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !1283
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1283
  ret void, !dbg !1283
}

define internal fastcc void @Result_try_35d6cb78c74f84df82ab12c37bc71bbe5193f93e9d36506abc7c9c8ca124d1ab(ptr %result, {} %transform, ptr %0) !dbg !1285 {
entry:
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1286
  %load_element4 = alloca %str.RocStr, align 8, !dbg !1286
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1286
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1286
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1286
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1286
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1286

then_block:                                       ; preds = %entry
  %load_element.unpack.unpack = load ptr, ptr %result, align 8, !dbg !1286
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack.unpack, 0, !dbg !1286
  %load_element.unpack.elt18 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !1286
  %load_element.unpack.unpack19 = load i64, ptr %load_element.unpack.elt18, align 8, !dbg !1286
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack.unpack19, 1, !dbg !1286
  %load_element.unpack.elt20 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !1286
  %load_element.unpack.unpack21 = load i64, ptr %load_element.unpack.elt20, align 8, !dbg !1286
  %load_element.unpack22 = insertvalue %list.RocList %2, i64 %load_element.unpack.unpack21, 2, !dbg !1286
  %3 = insertvalue { %list.RocList, {} } poison, %list.RocList %load_element.unpack22, 0, !dbg !1286
  %load_element17 = insertvalue { %list.RocList, {} } %3, {} poison, 1, !dbg !1286
  call fastcc void @Parser_77_f56f6119e9554182ffe75b2428322517743b970c74fbeadd77e7ab7e459b8a({ %list.RocList, {} } %load_element17, {} %transform, ptr nonnull %result_value), !dbg !1286
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1286
  ret void, !dbg !1286

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !1286
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element4, align 8, !dbg !1286
  %load_tag_to_put_in_struct.elt6 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 1, !dbg !1286
  %load_tag_to_put_in_struct.unpack7 = load i64, ptr %load_tag_to_put_in_struct.elt6, align 8, !dbg !1286
  %load_tag_to_put_in_struct.elt8 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 2, !dbg !1286
  %load_tag_to_put_in_struct.unpack9 = load i64, ptr %load_tag_to_put_in_struct.elt8, align 8, !dbg !1286
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1286
  %tag_alloca.repack11 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1286
  store i64 %load_tag_to_put_in_struct.unpack7, ptr %tag_alloca.repack11, align 8, !dbg !1286
  %tag_alloca.repack13 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1286
  store i64 %load_tag_to_put_in_struct.unpack9, ptr %tag_alloca.repack13, align 8, !dbg !1286
  %tag_id_ptr5 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1286
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !1286
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1286
  ret void, !dbg !1286
}

define internal fastcc void @List_getUnsafe_e19be4977dae6e316e964ccb3f3519dc19317486f4e86b58a231a1854931186(%list.RocList %"#arg1", i64 %"#arg2", ptr %0) !dbg !1288 {
entry:
  %list_get_load_element = alloca { [1 x i64], i8 }, align 8, !dbg !1289
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !1289
  %list_get_element = getelementptr inbounds { [1 x i64], i8 }, ptr %read_list_ptr, i64 %"#arg2", !dbg !1289
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %list_get_load_element, ptr noundef nonnull align 8 dereferenceable(16) %list_get_element, i64 16, i1 false), !dbg !1289
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %list_get_load_element, i64 16, i1 false), !dbg !1289
  ret void, !dbg !1289
}

define internal fastcc %list.RocList @Parser_158_32a8df25d88ba7cee29904e38845254ec55404ac0bea8418e34e0df65c895(%list.RocList %vals, i64 %val) !dbg !1291 {
entry:
  %call = tail call fastcc %list.RocList @List_prepend_2e45b2d470bcdecd31941dc520a178647d478d5729df14ff06c26a7bd3b4(%list.RocList %vals, i64 %val), !dbg !1292
  ret %list.RocList %call, !dbg !1292
}

define internal fastcc i64 @Num_mul_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e(i64 %"#arg1", i64 %"#arg2") !dbg !1294 {
entry:
  %call = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %"#arg1", i64 %"#arg2"), !dbg !1295
  %has_overflowed = extractvalue { i64, i1 } %call, 1, !dbg !1295
  br i1 %has_overflowed, label %throw_block, label %then_block, !dbg !1295

then_block:                                       ; preds = %entry
  %operation_result = extractvalue { i64, i1 } %call, 0, !dbg !1295
  ret i64 %operation_result, !dbg !1295

throw_block:                                      ; preds = %entry
  tail call fastcc void @throw_on_overflow(), !dbg !1295
  unreachable, !dbg !1295
}

define internal fastcc { {}, { { {}, {} }, {} } } @String_digits_2a63cbb21df3c6cd024fa55fccbaa353df4baab244ba379952ed628e5b4ade() !dbg !1297 {
entry:
  %call = tail call fastcc {} @String_digit_ea64383f9353ea705abcbe8856570182bf8ab8cc1a137e1ba1e4283a0b5aa(), !dbg !1298
  %call1 = tail call fastcc { { {}, {} }, {} } @Parser_oneOrMore_5ca234e842be91ca6ef02d32dee0b437d32a6589a2ee9ddf1e882abd5d30({} %call), !dbg !1298
  %call2 = tail call fastcc { {}, { { {}, {} }, {} } } @Parser_map_ab1494ad8c1013c31dbcfc142b2c6b29fe5fc5864797b5f243fa67a225278d84({ { {}, {} }, {} } %call1, {} zeroinitializer), !dbg !1298
  ret { {}, { { {}, {} }, {} } } %call2, !dbg !1298
}

define internal fastcc i1 @Num_isGt_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc(i64 %"#arg1", i64 %"#arg2") !dbg !1300 {
entry:
  %gt_uint = icmp ugt i64 %"#arg1", %"#arg2", !dbg !1301
  ret i1 %gt_uint, !dbg !1301
}

define internal fastcc void @String_114_febb34167fa9ce104d58e46e5b86963cb8a0a2c228269d557c77fae899439d4(%list.RocList %input, ptr %0) !dbg !1303 {
entry:
  %list_alloca362 = alloca %list.RocList, align 8
  %tag_alloca26 = alloca { [4 x i64], i8 }, align 8, !dbg !1304
  %tag_alloca20 = alloca { [4 x i64], i8 }, align 8, !dbg !1304
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1304
  %list_alloca3 = alloca %list.RocList, align 8, !dbg !1304
  %list_alloca = alloca %list.RocList, align 8, !dbg !1304
  %list_len = extractvalue %list.RocList %input, 1, !dbg !1304
  %gte_uint.not = icmp eq i64 %list_len, 0, !dbg !1304
  br i1 %gte_uint.not, label %else_block, label %then_block, !dbg !1304

then_block:                                       ; preds = %entry
  %list_len1 = extractvalue %list.RocList %input, 1, !dbg !1304
  %call = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %list_len1, i64 1), !dbg !1304
  %has_overflowed = extractvalue { i64, i1 } %call, 1, !dbg !1304
  br i1 %has_overflowed, label %throw_block, label %then_block2, !dbg !1304

else_block:                                       ; preds = %entry
  %list_len15 = extractvalue %list.RocList %input, 1, !dbg !1304
  tail call fastcc void @"#Attr_#dec_12"(%list.RocList %input), !dbg !1304
  %eq_u64 = icmp eq i64 %list_len15, 0, !dbg !1304
  br i1 %eq_u64, label %then_block17, label %else_block18, !dbg !1304

then_block2:                                      ; preds = %then_block
  %operation_result = extractvalue { i64, i1 } %call, 0, !dbg !1304
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !1304
  %input.elt = extractvalue %list.RocList %input, 0, !dbg !1304
  store ptr %input.elt, ptr %list_alloca3, align 8, !dbg !1304
  %list_alloca3.repack47 = getelementptr inbounds %list.RocList, ptr %list_alloca3, i64 0, i32 1, !dbg !1304
  %input.elt48 = extractvalue %list.RocList %input, 1, !dbg !1304
  store i64 %input.elt48, ptr %list_alloca3.repack47, align 8, !dbg !1304
  %list_alloca3.repack49 = getelementptr inbounds %list.RocList, ptr %list_alloca3, i64 0, i32 2, !dbg !1304
  %input.elt50 = extractvalue %list.RocList %input, 2, !dbg !1304
  store i64 %input.elt50, ptr %list_alloca3.repack49, align 8, !dbg !1304
  call void @llvm.experimental.noalias.scope.decl(metadata !1306), !dbg !1304
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca362), !dbg !1304
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca362, ptr align 1 %list_alloca3, i64 24, i1 false), !dbg !1304
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca362, i64 8, !dbg !1304
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1304, !noalias !1306
  %1 = icmp eq i64 %.sroa.1.0.copyload.i, 0, !dbg !1304
  %2 = icmp eq i64 %operation_result, 0, !dbg !1304
  %3 = select i1 %1, i1 true, i1 %2, !dbg !1304
  %4 = icmp ule i64 %.sroa.1.0.copyload.i, 1, !dbg !1304
  %or.cond.i = select i1 %3, i1 true, i1 %4, !dbg !1304
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca362, align 8, !dbg !1304, !noalias !1306
  br i1 %or.cond.i, label %.critedge.i, label %17, !dbg !1304

.critedge.i:                                      ; preds = %then_block2
  %sunkaddr.i = getelementptr inbounds i8, ptr %list_alloca362, i64 16, !dbg !1304
  %.sroa.3.0.copyload57.i = load i64, ptr %sunkaddr.i, align 8, !dbg !1304, !noalias !1306
  %isneg.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1304
  %5 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload57.i, i64 0), !dbg !1304
  %6 = select i1 %isneg.i.i.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1304
  %7 = or i64 %6, %5, !dbg !1304
  %8 = icmp ne i64 %7, 0, !dbg !1304
  %brmerge.i.i.i = select i1 %8, i1 true, i1 %isneg.i.i.i.i, !dbg !1304
  br i1 %brmerge.i.i.i, label %list.RocList.isUnique.exit.i, label %list.RocList.isUnique.exit.thread.i, !dbg !1304

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i
  %9 = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1304
  %10 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1304
  %11 = shl i64 %.sroa.3.0.copyload57.i, 1, !dbg !1304
  %12 = select i1 %9, i64 %11, i64 %10, !dbg !1304
  %13 = inttoptr i64 %12 to ptr, !dbg !1304
  %14 = getelementptr inbounds i64, ptr %13, i64 -1, !dbg !1304
  %15 = load i64, ptr %14, align 8, !dbg !1304, !noalias !1306
  %16 = icmp eq i64 %15, -9223372036854775808, !dbg !1304
  br i1 %16, label %list.RocList.isUnique.exit.thread.i, label %.critedge.i.i, !dbg !1304

17:                                               ; preds = %then_block2
  %.not28.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !1304
  br i1 %.not28.i, label %29, label %23, !dbg !1304

common.ret.i:                                     ; preds = %list.RocList.setAllocationElementCount.exit.i, %list.RocList.isUnique.exit.thread.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca362), !dbg !1304
  br label %roc_builtins.list.sublist.exit, !dbg !1304

list.RocList.isUnique.exit.thread.i:              ; preds = %list.RocList.isUnique.exit.i, %.critedge.i
  %.not29.i = icmp ne ptr %.sroa.0.0.copyload.i, null, !dbg !1304
  %18 = icmp ne i64 %.sroa.1.0.copyload.i, 0, !dbg !1304
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !1304, !alias.scope !1306
  %.sroa.28.0..sroa_idx9.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1304
  store i64 0, ptr %.sroa.28.0..sroa_idx9.i, align 8, !dbg !1304, !alias.scope !1306
  %.sroa.3.0..sroa_idx11.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1304
  store i64 %.sroa.3.0.copyload57.i, ptr %.sroa.3.0..sroa_idx11.i, align 8, !dbg !1304, !alias.scope !1306
  br label %common.ret.i, !dbg !1304

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i
  %19 = icmp eq i64 %.sroa.3.0.copyload57.i, 0, !dbg !1304
  %20 = icmp eq i64 %12, 0, !dbg !1304
  %or.cond.i.i.not92.i = select i1 %19, i1 true, i1 %20, !dbg !1304
  %.not.i.i.i = icmp eq i64 %15, 0, !dbg !1304
  %or.cond89.i = select i1 %or.cond.i.i.not92.i, i1 true, i1 %.not.i.i.i, !dbg !1304
  br i1 %or.cond89.i, label %list.RocList.decref.exit.i, label %21, !dbg !1304

21:                                               ; preds = %.critedge.i.i
  %22 = add nsw i64 %15, -1, !dbg !1304
  %sunkaddr101.i = inttoptr i64 %12 to ptr, !dbg !1304
  %sunkaddr102.i = getelementptr inbounds i8, ptr %sunkaddr101.i, i64 -8, !dbg !1304
  store i64 %22, ptr %sunkaddr102.i, align 8, !dbg !1304, !noalias !1306
  br label %list.RocList.decref.exit.i, !dbg !1304

list.RocList.decref.exit.i:                       ; preds = %21, %.critedge.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1304, !alias.scope !1306
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca362), !dbg !1304
  br label %roc_builtins.list.sublist.exit, !dbg !1304

23:                                               ; preds = %17
  %24 = sub nuw i64 %.sroa.1.0.copyload.i, 1, !dbg !1304
  %25 = call i64 @llvm.umin.i64(i64 %operation_result, i64 %24), !dbg !1304
  %sunkaddr103.i = getelementptr inbounds i8, ptr %list_alloca362, i64 16, !dbg !1304
  %.sroa.363.0.copyload.i = load i64, ptr %sunkaddr103.i, align 8, !dbg !1304, !noalias !1306
  %.pre.i = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1304
  %isneg.i.i.i49.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1304
  %26 = select i1 %isneg.i.i.i49.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1304
  %27 = or i64 %26, %.pre.i, !dbg !1304
  %28 = icmp ne i64 %27, 0, !dbg !1304
  %brmerge.i.i50.i = select i1 %28, i1 true, i1 %isneg.i.i.i49.i, !dbg !1304
  br i1 %brmerge.i.i50.i, label %list.RocList.isUnique.exit54.i, label %list.RocList.isUnique.exit54.thread.i, !dbg !1304

29:                                               ; preds = %17
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1304, !alias.scope !1306
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca362), !dbg !1304
  br label %roc_builtins.list.sublist.exit, !dbg !1304

list.RocList.isUnique.exit54.i:                   ; preds = %23
  %30 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1304
  %31 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1304
  %32 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !1304
  %33 = select i1 %30, i64 %32, i64 %31, !dbg !1304
  %34 = inttoptr i64 %33 to ptr, !dbg !1304
  %35 = getelementptr inbounds i64, ptr %34, i64 -1, !dbg !1304
  %36 = load i64, ptr %35, align 8, !dbg !1304, !noalias !1306
  %37 = icmp ne i64 %36, -9223372036854775808, !dbg !1304
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !1304

list.RocList.setAllocationElementCount.exit.i:    ; preds = %list.RocList.isUnique.exit54.thread.i, %list.RocList.isUnique.exit54.i
  %38 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1304
  %39 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1304
  %40 = lshr i64 %39, 1, !dbg !1304
  %41 = or i64 %40, -9223372036854775808, !dbg !1304
  %42 = select i1 %38, i64 0, i64 %41, !dbg !1304
  %43 = call i64 @llvm.smin.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1304
  %44 = or i64 %43, %42, !dbg !1304
  %45 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 1, !dbg !1304
  store ptr %45, ptr %list_alloca, align 8, !dbg !1304, !alias.scope !1306
  %46 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1304
  store i64 %25, ptr %46, align 8, !dbg !1304, !alias.scope !1306
  %47 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1304
  store i64 %44, ptr %47, align 8, !dbg !1304, !alias.scope !1306
  br label %common.ret.i, !dbg !1304

list.RocList.isUnique.exit54.thread.i:            ; preds = %23
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !1304

roc_builtins.list.sublist.exit:                   ; preds = %29, %list.RocList.decref.exit.i, %common.ret.i
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1304
  %48 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1304
  %load_list.elt51 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1304
  %load_list.unpack52 = load i64, ptr %load_list.elt51, align 8, !dbg !1304
  %49 = insertvalue %list.RocList %48, i64 %load_list.unpack52, 1, !dbg !1304
  %load_list.elt53 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1304
  %load_list.unpack54 = load i64, ptr %load_list.elt53, align 8, !dbg !1304
  %load_list55 = insertvalue %list.RocList %49, i64 %load_list.unpack54, 2, !dbg !1304
  %read_list_ptr = extractvalue %list.RocList %input, 0, !dbg !1304
  %list_get_load_element = load i8, ptr %read_list_ptr, align 1, !dbg !1304
  tail call fastcc void @"#Attr_#dec_12"(%list.RocList %input), !dbg !1304
  %call5 = tail call fastcc i1 @Num_isGte_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63(i8 %list_get_load_element, i8 48), !dbg !1304
  %call6 = tail call fastcc i1 @Num_isLte_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a(i8 %list_get_load_element, i8 57), !dbg !1304
  %call7 = tail call fastcc i1 @Bool_and_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21(i1 %call5, i1 %call6), !dbg !1304
  br label %joinpointcont4, !dbg !1304

joinpointcont4:                                   ; preds = %roc_builtins.list.sublist.exit
  br i1 %call7, label %then_block9, label %else_block10, !dbg !1304

throw_block:                                      ; preds = %then_block
  tail call fastcc void @throw_on_overflow(), !dbg !1304
  unreachable, !dbg !1304

then_block9:                                      ; preds = %joinpointcont4
  %call11 = tail call fastcc i8 @Num_sub_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2(i8 %list_get_load_element, i8 48), !dbg !1304
  %call12 = tail call fastcc i64 @Num_toU64_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e(i8 %call11), !dbg !1304
  store ptr %load_list.unpack, ptr %tag_alloca, align 8, !dbg !1304
  %tag_alloca.repack58 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1304
  store i64 %load_list.unpack52, ptr %tag_alloca.repack58, align 8, !dbg !1304
  %tag_alloca.repack60 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1304
  store i64 %load_list.unpack54, ptr %tag_alloca.repack60, align 8, !dbg !1304
  %tag_alloca.repack56 = getelementptr inbounds { %list.RocList, i64 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1304
  store i64 %call12, ptr %tag_alloca.repack56, align 8, !dbg !1304
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1304
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1304
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1304
  ret void, !dbg !1304

else_block10:                                     ; preds = %joinpointcont4
  tail call fastcc void @"#Attr_#dec_12"(%list.RocList %load_list55), !dbg !1304
  br label %joinpointcont, !dbg !1304

then_block17:                                     ; preds = %else_block
  store ptr getelementptr inbounds ([54 x i8], ptr @_str_literal_5104587640597849084, i64 0, i64 8), ptr %tag_alloca20, align 8, !dbg !1304
  %tag_alloca20.repack45 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 1, !dbg !1304
  store i64 46, ptr %tag_alloca20.repack45, align 8, !dbg !1304
  %tag_alloca20.repack46 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 2, !dbg !1304
  store i64 46, ptr %tag_alloca20.repack46, align 8, !dbg !1304
  %tag_id_ptr22 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca20, i64 0, i32 1, !dbg !1304
  store i8 0, ptr %tag_id_ptr22, align 8, !dbg !1304
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca20, i64 40, i1 false), !dbg !1304
  ret void, !dbg !1304

else_block18:                                     ; preds = %else_block
  br label %joinpointcont, !dbg !1304

joinpointcont:                                    ; preds = %else_block18, %else_block10
  store ptr inttoptr (i64 7594230473181917006 to ptr), ptr %tag_alloca26, align 8, !dbg !1304
  %tag_alloca26.repack36 = getelementptr inbounds %str.RocStr, ptr %tag_alloca26, i64 0, i32 1, !dbg !1304
  store i64 7629159, ptr %tag_alloca26.repack36, align 8, !dbg !1304
  %tag_alloca26.repack37 = getelementptr inbounds %str.RocStr, ptr %tag_alloca26, i64 0, i32 2, !dbg !1304
  store i64 -8430738502437568512, ptr %tag_alloca26.repack37, align 8, !dbg !1304
  %tag_id_ptr28 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca26, i64 0, i32 1, !dbg !1304
  store i8 0, ptr %tag_id_ptr28, align 8, !dbg !1304
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca26, i64 40, i1 false), !dbg !1304
  ret void, !dbg !1304
}

define internal fastcc { %str.RocStr, {} } @Task_mapErr_6458453d595fdc9e5a87eea15f24738f1c7d3413915ef8aee1930d85e5631ee(ptr %"99", {} %transform) !dbg !1309 {
entry:
  tail call fastcc void @"#Attr_#inc_13"(ptr %"99", i64 1), !dbg !1310
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %"99", align 8, !dbg !1310
  %0 = insertvalue %str.RocStr poison, ptr %load_tag_to_put_in_struct.unpack, 0, !dbg !1310
  %load_tag_to_put_in_struct.elt2 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 1, !dbg !1310
  %load_tag_to_put_in_struct.unpack3 = load i64, ptr %load_tag_to_put_in_struct.elt2, align 8, !dbg !1310
  %1 = insertvalue %str.RocStr %0, i64 %load_tag_to_put_in_struct.unpack3, 1, !dbg !1310
  %load_tag_to_put_in_struct.elt4 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 2, !dbg !1310
  %load_tag_to_put_in_struct.unpack5 = load i64, ptr %load_tag_to_put_in_struct.elt4, align 8, !dbg !1310
  %load_tag_to_put_in_struct6 = insertvalue %str.RocStr %1, i64 %load_tag_to_put_in_struct.unpack5, 2, !dbg !1310
  %insert_record_field = insertvalue { %str.RocStr, {} } zeroinitializer, %str.RocStr %load_tag_to_put_in_struct6, 0, !dbg !1310
  %insert_record_field1 = insertvalue { %str.RocStr, {} } %insert_record_field, {} %transform, 1, !dbg !1310
  ret { %str.RocStr, {} } %insert_record_field1, !dbg !1310
}

define internal fastcc i64 @Dict_pseudoSeed_94cb138d818e9947d7d69ef307378727ff7855e4de6723d27fc54d8e228050({} %"#arg1") !dbg !1312 {
entry:
  %call_builtin = tail call i64 @roc_builtins.utils.dict_pseudo_seed(), !dbg !1313
  ret i64 %call_builtin, !dbg !1313
}

define internal fastcc { {}, { {}, { { {}, {} }, {} } } } @Parser_keep_c160733124d992a626d26d4ef3869f84d5218633965988131e9ae4b8e5624({} %funParser, { {}, { { {}, {} }, {} } } %valParser) !dbg !1315 {
entry:
  %insert_record_field = insertvalue { {}, { {}, { { {}, {} }, {} } } } zeroinitializer, {} %funParser, 0, !dbg !1316
  %insert_record_field1 = insertvalue { {}, { {}, { { {}, {} }, {} } } } %insert_record_field, { {}, { { {}, {} }, {} } } %valParser, 1, !dbg !1316
  %call = tail call fastcc { {}, { {}, { { {}, {} }, {} } } } @Parser_buildPrimitiveParser_dff42d2171b1fc085e9563c701a7ea21ae09129e8d47f3804e7a53b5323f({ {}, { {}, { { {}, {} }, {} } } } %insert_record_field1), !dbg !1316
  ret { {}, { {}, { { {}, {} }, {} } } } %call, !dbg !1316
}

define internal fastcc void @Dict_empty_8523cacf79b3ae26b5b5ddfebda64fc7e54c53c82e133fab2e0abee3a1046({} %"731", ptr %0) !dbg !1318 {
entry:
  %struct_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !1319
  %call = tail call fastcc float @Dict_defaultMaxLoadFactor_3c34ade886ecb9c29fd02363474d39cd94178ea81fd90fb2871dcdcb2a3aad(), !dbg !1319
  %call1 = tail call fastcc i8 @Dict_initialShifts_dfab3e7e4dcf97947ada0f8abcfc248e78de1f269ac4599a46f8db36f6ed6aa(), !dbg !1319
  store ptr null, ptr %struct_alloca, align 8, !dbg !1319
  %struct_alloca.repack6 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1319
  store i64 0, ptr %struct_alloca.repack6, align 8, !dbg !1319
  %struct_alloca.repack7 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1319
  store i64 0, ptr %struct_alloca.repack7, align 8, !dbg !1319
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, !dbg !1319
  store ptr null, ptr %struct_field_gep2, align 8, !dbg !1319
  %struct_field_gep2.repack8 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1319
  store i64 0, ptr %struct_field_gep2.repack8, align 8, !dbg !1319
  %struct_field_gep2.repack9 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1319
  store i64 0, ptr %struct_field_gep2.repack9, align 8, !dbg !1319
  %struct_field_gep3 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 2, !dbg !1319
  store i64 0, ptr %struct_field_gep3, align 8, !dbg !1319
  %struct_field_gep4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 3, !dbg !1319
  store float %call, ptr %struct_field_gep4, align 8, !dbg !1319
  %struct_field_gep5 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 4, !dbg !1319
  store i8 %call1, ptr %struct_field_gep5, align 4, !dbg !1319
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca, i64 64, i1 false), !dbg !1319
  ret void, !dbg !1319
}

define internal fastcc void @Parser_200_16aa7910c0f01a62f7254586694f3caa8b91b5d9c4ac395d8e845efa238a384(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !1321 {
entry:
  %tag_alloca34 = alloca { [4 x i64], i8 }, align 8, !dbg !1322
  %struct_field30 = alloca { [3 x i64], i8 }, align 8, !dbg !1322
  %load_element26 = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1322
  %tag_alloca21 = alloca { [4 x i64], i8 }, align 8, !dbg !1322
  %load_element18 = alloca %str.RocStr, align 8, !dbg !1322
  %result_value9 = alloca { [7 x i64], i8 }, align 8, !dbg !1322
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1322
  %load_element = alloca %str.RocStr, align 8, !dbg !1322
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1322
  %struct_field1 = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !1322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_field1, ptr noundef nonnull align 8 dereferenceable(80) %"#arg_closure", i64 80, i1 false), !dbg !1322
  call fastcc void @Parser_parsePartial_bc8c4fbb4471f82ba588d9366a6cc73c095ec9bae4fb1a31564e5462ba6746({ {}, { { {}, {} }, {} } } poison, %list.RocList %input, ptr nonnull %result_value), !dbg !1322
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1322
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1322
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !1322
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1322

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_18"(ptr nonnull %struct_field1), !dbg !1322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1322
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !1322
  %load_tag_to_put_in_struct.elt74 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !1322
  %load_tag_to_put_in_struct.unpack75 = load i64, ptr %load_tag_to_put_in_struct.elt74, align 8, !dbg !1322
  %load_tag_to_put_in_struct.elt76 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !1322
  %load_tag_to_put_in_struct.unpack77 = load i64, ptr %load_tag_to_put_in_struct.elt76, align 8, !dbg !1322
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1322
  %tag_alloca.repack79 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1322
  store i64 %load_tag_to_put_in_struct.unpack75, ptr %tag_alloca.repack79, align 8, !dbg !1322
  %tag_alloca.repack81 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1322
  store i64 %load_tag_to_put_in_struct.unpack77, ptr %tag_alloca.repack81, align 8, !dbg !1322
  %tag_id_ptr3 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1322
  store i8 0, ptr %tag_id_ptr3, align 8, !dbg !1322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1322
  ret void, !dbg !1322

else_block:                                       ; preds = %entry
  %load_element6.unpack.unpack = load ptr, ptr %result_value, align 8, !dbg !1322
  %1 = insertvalue %list.RocList poison, ptr %load_element6.unpack.unpack, 0, !dbg !1322
  %load_element6.unpack.elt49 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !1322
  %load_element6.unpack.unpack50 = load i64, ptr %load_element6.unpack.elt49, align 8, !dbg !1322
  %2 = insertvalue %list.RocList %1, i64 %load_element6.unpack.unpack50, 1, !dbg !1322
  %load_element6.unpack.elt51 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !1322
  %load_element6.unpack.unpack52 = load i64, ptr %load_element6.unpack.elt51, align 8, !dbg !1322
  %load_element6.unpack53 = insertvalue %list.RocList %2, i64 %load_element6.unpack.unpack52, 2, !dbg !1322
  %load_element6.elt46 = getelementptr inbounds { %list.RocList, i64 }, ptr %result_value, i64 0, i32 1, !dbg !1322
  %load_element6.unpack47 = load i64, ptr %load_element6.elt46, align 8, !dbg !1322
  call fastcc void @Parser_parsePartial_551311f4cd4b771fb26caae5c14c6c179adea28ad16fbb2d47e334e0dd18b(ptr nonnull %struct_field1, %list.RocList %load_element6.unpack53, ptr nonnull %result_value9), !dbg !1322
  call fastcc void @"#Attr_#dec_12"(%list.RocList %load_element6.unpack53), !dbg !1322
  %tag_id_ptr10 = getelementptr inbounds { [7 x i64], i8 }, ptr %result_value9, i64 0, i32 1, !dbg !1322
  %load_tag_id11 = load i8, ptr %tag_id_ptr10, align 8, !dbg !1322
  %eq_u812 = icmp eq i8 %load_tag_id11, 0, !dbg !1322
  br i1 %eq_u812, label %then_block14, label %else_block15, !dbg !1322

then_block14:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element18, ptr noundef nonnull align 8 dereferenceable(24) %result_value9, i64 24, i1 false), !dbg !1322
  %load_tag_to_put_in_struct19.unpack = load ptr, ptr %load_element18, align 8, !dbg !1322
  %load_tag_to_put_in_struct19.elt65 = getelementptr inbounds %str.RocStr, ptr %load_element18, i64 0, i32 1, !dbg !1322
  %load_tag_to_put_in_struct19.unpack66 = load i64, ptr %load_tag_to_put_in_struct19.elt65, align 8, !dbg !1322
  %load_tag_to_put_in_struct19.elt67 = getelementptr inbounds %str.RocStr, ptr %load_element18, i64 0, i32 2, !dbg !1322
  %load_tag_to_put_in_struct19.unpack68 = load i64, ptr %load_tag_to_put_in_struct19.elt67, align 8, !dbg !1322
  store ptr %load_tag_to_put_in_struct19.unpack, ptr %tag_alloca21, align 8, !dbg !1322
  %tag_alloca21.repack70 = getelementptr inbounds %str.RocStr, ptr %tag_alloca21, i64 0, i32 1, !dbg !1322
  store i64 %load_tag_to_put_in_struct19.unpack66, ptr %tag_alloca21.repack70, align 8, !dbg !1322
  %tag_alloca21.repack72 = getelementptr inbounds %str.RocStr, ptr %tag_alloca21, i64 0, i32 2, !dbg !1322
  store i64 %load_tag_to_put_in_struct19.unpack68, ptr %tag_alloca21.repack72, align 8, !dbg !1322
  %tag_id_ptr23 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca21, i64 0, i32 1, !dbg !1322
  store i8 0, ptr %tag_id_ptr23, align 8, !dbg !1322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca21, i64 40, i1 false), !dbg !1322
  ret void, !dbg !1322

else_block15:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %load_element26, ptr noundef nonnull align 8 dereferenceable(56) %result_value9, i64 56, i1 false), !dbg !1322
  %struct_field28.unpack = load ptr, ptr %load_element26, align 8, !dbg !1322
  %struct_field28.elt54 = getelementptr inbounds %list.RocList, ptr %load_element26, i64 0, i32 1, !dbg !1322
  %struct_field28.unpack55 = load i64, ptr %struct_field28.elt54, align 8, !dbg !1322
  %struct_field28.elt56 = getelementptr inbounds %list.RocList, ptr %load_element26, i64 0, i32 2, !dbg !1322
  %struct_field28.unpack57 = load i64, ptr %struct_field28.elt56, align 8, !dbg !1322
  %struct_field_access_record_129 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %load_element26, i64 0, i32 1, !dbg !1322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field30, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_129, i64 32, i1 false), !dbg !1322
  call fastcc void @"#Attr_#dec_21"(ptr nonnull %struct_field30), !dbg !1322
  store ptr %struct_field28.unpack, ptr %tag_alloca34, align 8, !dbg !1322
  %tag_alloca34.repack61 = getelementptr inbounds %list.RocList, ptr %tag_alloca34, i64 0, i32 1, !dbg !1322
  store i64 %struct_field28.unpack55, ptr %tag_alloca34.repack61, align 8, !dbg !1322
  %tag_alloca34.repack63 = getelementptr inbounds %list.RocList, ptr %tag_alloca34, i64 0, i32 2, !dbg !1322
  store i64 %struct_field28.unpack57, ptr %tag_alloca34.repack63, align 8, !dbg !1322
  %tag_alloca34.repack59 = getelementptr inbounds { %list.RocList, i64 }, ptr %tag_alloca34, i64 0, i32 1, !dbg !1322
  store i64 %load_element6.unpack47, ptr %tag_alloca34.repack59, align 8, !dbg !1322
  %tag_id_ptr36 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca34, i64 0, i32 1, !dbg !1322
  store i8 1, ptr %tag_id_ptr36, align 8, !dbg !1322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca34, i64 40, i1 false), !dbg !1322
  ret void, !dbg !1322
}

define internal fastcc void @Task_await_73264be0c742695741a5c2b1831aa195174bfbb9f7ad1331fccea2114b78c3b(ptr %"102", {} %transform, ptr %0) !dbg !1324 {
entry:
  %struct_alloca = alloca { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(88) %"102", i64 88, i1 false), !dbg !1325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %struct_alloca, i64 88, i1 false), !dbg !1325
  ret void, !dbg !1325
}

define internal fastcc void @Inspect_custom_5c8e2eddb65717d2b7a69c4d944bbaab3db37fe30ea4d8f6e4bc9d32cef(ptr %fn, ptr %0) !dbg !1327 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %fn, i64 56, i1 false), !dbg !1328
  ret void, !dbg !1328
}

define internal fastcc void @Result_withDefault_0ecd2fa884bf65d7bc12fe6d21fb068cfa330b949298476bb016904fd3f(ptr %result, ptr %default, ptr %0) !dbg !1330 {
entry:
  %load_element = alloca %str.RocStr, align 8, !dbg !1331
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1331
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1331
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1331
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1331

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_13"(ptr %default), !dbg !1331
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !1331
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %load_element, i64 24, i1 false), !dbg !1331
  ret void, !dbg !1331

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_42"(ptr %result), !dbg !1331
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %default, i64 24, i1 false), !dbg !1331
  ret void, !dbg !1331
}

define internal fastcc void @"#Derived_custom7_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6"(ptr %fmt7, ptr %"#arg_closure", ptr %0) !dbg !1333 {
entry:
  %result_value17 = alloca %str.RocStr, align 8, !dbg !1334
  %tmp_output_for_jmp16 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %result_value15 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %const_str_store14 = alloca %str.RocStr, align 8, !dbg !1334
  %tmp_output_for_jmp13 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %result_value12 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %const_str_store11 = alloca %str.RocStr, align 8, !dbg !1334
  %tmp_output_for_jmp10 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %result_value9 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %const_str_store8 = alloca %str.RocStr, align 8, !dbg !1334
  %tmp_output_for_jmp7 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %result_value6 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %const_str_store5 = alloca %str.RocStr, align 8, !dbg !1334
  %tmp_output_for_jmp4 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %result_value3 = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %const_str_store2 = alloca %str.RocStr, align 8, !dbg !1334
  %tmp_output_for_jmp = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1334
  %joinpoint_arg_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1334
  %load_element = load i8, ptr %"#arg_closure", align 1, !dbg !1334
  switch i8 %load_element, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
    i8 2, label %branch2
    i8 3, label %branch3
    i8 4, label %branch4
  ], !dbg !1334

default:                                          ; preds = %entry
  store ptr inttoptr (i64 8386658464824651349 to ptr), ptr %const_str_store14, align 8, !dbg !1334
  %const_str_store14.repack28 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 1, !dbg !1334
  store i64 6009578045537870949, ptr %const_str_store14.repack28, align 8, !dbg !1334
  %const_str_store14.repack29 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 2, !dbg !1334
  store i64 -7537509075534909083, ptr %const_str_store14.repack29, align 8, !dbg !1334
  call fastcc void @Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5(ptr nonnull %const_str_store14, %list.RocList zeroinitializer, ptr nonnull %result_value15), !dbg !1334
  call fastcc void @"#Attr_#dec_26"(%list.RocList zeroinitializer), !dbg !1334
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store14), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, ptr noundef nonnull align 8 dereferenceable(56) %result_value15, i64 56, i1 false), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, i64 56, i1 false), !dbg !1334
  br label %joinpointcont, !dbg !1334

joinpointcont:                                    ; preds = %default, %branch4, %branch3, %branch2, %branch1, %branch0
  call fastcc void @Inspect_apply_e224e0133f78589cea6db23e453acfbc569bda9b797a294835a2e3ce7b79f9b9(ptr nonnull %joinpoint_arg_alloca, ptr %fmt7, ptr nonnull %result_value17), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value17, i64 24, i1 false), !dbg !1334
  ret void, !dbg !1334

branch0:                                          ; preds = %entry
  store ptr inttoptr (i64 7956012745254793027 to ptr), ptr %const_str_store, align 8, !dbg !1334
  %const_str_store.repack26 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1334
  store i64 7454127314166568052, ptr %const_str_store.repack26, align 8, !dbg !1334
  %const_str_store.repack27 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1334
  store i64 -7998392938210000795, ptr %const_str_store.repack27, align 8, !dbg !1334
  call fastcc void @Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5(ptr nonnull %const_str_store, %list.RocList zeroinitializer, ptr nonnull %result_value), !dbg !1334
  call fastcc void @"#Attr_#dec_26"(%list.RocList zeroinitializer), !dbg !1334
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, i64 56, i1 false), !dbg !1334
  br label %joinpointcont, !dbg !1334

branch1:                                          ; preds = %entry
  store ptr inttoptr (i64 6013261409509666373 to ptr), ptr %const_str_store2, align 8, !dbg !1334
  %const_str_store2.repack24 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 1, !dbg !1334
  store i64 7310575192008454773, ptr %const_str_store2.repack24, align 8, !dbg !1334
  %const_str_store2.repack25 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 2, !dbg !1334
  store i64 -7782220154377838264, ptr %const_str_store2.repack25, align 8, !dbg !1334
  call fastcc void @Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5(ptr nonnull %const_str_store2, %list.RocList zeroinitializer, ptr nonnull %result_value3), !dbg !1334
  call fastcc void @"#Attr_#dec_26"(%list.RocList zeroinitializer), !dbg !1334
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store2), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, ptr noundef nonnull align 8 dereferenceable(56) %result_value3, i64 56, i1 false), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, i64 56, i1 false), !dbg !1334
  br label %joinpointcont, !dbg !1334

branch2:                                          ; preds = %entry
  store ptr inttoptr (i64 7234316346693023813 to ptr), ptr %const_str_store5, align 8, !dbg !1334
  %const_str_store5.repack22 = getelementptr inbounds %str.RocStr, ptr %const_str_store5, i64 0, i32 1, !dbg !1334
  store i64 7022640593158172483, ptr %const_str_store5.repack22, align 8, !dbg !1334
  %const_str_store5.repack23 = getelementptr inbounds %str.RocStr, ptr %const_str_store5, i64 0, i32 2, !dbg !1334
  store i64 -7782220154243421836, ptr %const_str_store5.repack23, align 8, !dbg !1334
  call fastcc void @Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5(ptr nonnull %const_str_store5, %list.RocList zeroinitializer, ptr nonnull %result_value6), !dbg !1334
  call fastcc void @"#Attr_#dec_26"(%list.RocList zeroinitializer), !dbg !1334
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store5), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp7, ptr noundef nonnull align 8 dereferenceable(56) %result_value6, i64 56, i1 false), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp7, i64 56, i1 false), !dbg !1334
  br label %joinpointcont, !dbg !1334

branch3:                                          ; preds = %entry
  store ptr inttoptr (i64 6009043717031620169 to ptr), ptr %const_str_store8, align 8, !dbg !1334
  %const_str_store8.repack20 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 1, !dbg !1334
  store i64 7310601421457613172, ptr %const_str_store8.repack20, align 8, !dbg !1334
  %const_str_store8.repack21 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 2, !dbg !1334
  store i64 -8070450532247928832, ptr %const_str_store8.repack21, align 8, !dbg !1334
  call fastcc void @Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5(ptr nonnull %const_str_store8, %list.RocList zeroinitializer, ptr nonnull %result_value9), !dbg !1334
  call fastcc void @"#Attr_#dec_26"(%list.RocList zeroinitializer), !dbg !1334
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store8), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp10, ptr noundef nonnull align 8 dereferenceable(56) %result_value9, i64 56, i1 false), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp10, i64 56, i1 false), !dbg !1334
  br label %joinpointcont, !dbg !1334

branch4:                                          ; preds = %entry
  store ptr inttoptr (i64 7453016944911152719 to ptr), ptr %const_str_store11, align 8, !dbg !1334
  %const_str_store11.repack18 = getelementptr inbounds %str.RocStr, ptr %const_str_store11, i64 0, i32 1, !dbg !1334
  store i64 7453010313431182917, ptr %const_str_store11.repack18, align 8, !dbg !1334
  %const_str_store11.repack19 = getelementptr inbounds %str.RocStr, ptr %const_str_store11, i64 0, i32 2, !dbg !1334
  store i64 -8070450532247928832, ptr %const_str_store11.repack19, align 8, !dbg !1334
  call fastcc void @Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5(ptr nonnull %const_str_store11, %list.RocList zeroinitializer, ptr nonnull %result_value12), !dbg !1334
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store11), !dbg !1334
  call fastcc void @"#Attr_#dec_26"(%list.RocList zeroinitializer), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, ptr noundef nonnull align 8 dereferenceable(56) %result_value12, i64 56, i1 false), !dbg !1334
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, i64 56, i1 false), !dbg !1334
  br label %joinpointcont, !dbg !1334
}

define internal fastcc void @Parser_const_4f901c8de2c7478653c08d6369f36717479192cadbcae45a78d1967e047e87(ptr %val, ptr %0) !dbg !1336 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Parser_buildPrimitiveParser_669ffb146edc1a83983bf84461cb12a7beb79c3bdd627d16a2afb10ae7410(ptr %val, ptr nonnull %result_value), !dbg !1337
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !1337
  ret void, !dbg !1337
}

define internal fastcc void @Task_46_521c32b4d5a5f51c42df45f129765f7c9b82531da49c872d42a31b733f24({} %"120", ptr %"#arg_closure", ptr %0) !dbg !1339 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !1340
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !1340
  %load_element7 = alloca { [8 x i64], i8 }, align 8, !dbg !1340
  %result_value4 = alloca { [9 x i64], i8 }, align 8, !dbg !1340
  %result_value3 = alloca { { %str.RocStr, {} }, { %list.RocList, %list.RocList } }, align 8, !dbg !1340
  %load_element = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1340
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !1340
  %struct_field1 = alloca { [9 x i64], i8 }, align 8, !dbg !1340
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_field1, ptr noundef nonnull align 8 dereferenceable(80) %"#arg_closure", i64 80, i1 false), !dbg !1340
  call fastcc void @Task_73_53bccde9921d34a99bc57d7dbbe86edccdf5689af36c43cac5c891312df738a({} zeroinitializer, ptr nonnull %struct_field1, ptr nonnull %result_value), !dbg !1340
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1340
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1340
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1340
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1340

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1340
  call fastcc void @Five_16_f497d0762dffbea4d1bbd57f0dda06887ccfab58e6563ae6e7cbca963711e9c(ptr nonnull %load_element, ptr nonnull %result_value3), !dbg !1340
  call fastcc void @Task_46_8772af6a619429ec17c278ae96358a9a7790e4d8ec89ec82b96d22a7593d8f34({} zeroinitializer, ptr nonnull %result_value3, ptr nonnull %result_value4), !dbg !1340
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value4, i64 80, i1 false), !dbg !1340
  ret void, !dbg !1340

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element7, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !1340
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %load_element7, i64 72, i1 false), !dbg !1340
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !1340
  %tag_id_ptr8 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1340
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !1340
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !1340
  ret void, !dbg !1340
}

define internal fastcc void @Task_38_227c616c7b4b56636b2b27697746d083f4afe93588be2831ba53eb420fc2fb9({} %"139", ptr %"#arg_closure", ptr %0) !dbg !1342 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !1343
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !1343
  store i32 %load_element, ptr %tag_alloca, align 8, !dbg !1343
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1343
  store i8 0, ptr %tag_id_ptr, align 4, !dbg !1343
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !1343
  store i64 %1, ptr %0, align 4, !dbg !1343
  ret void, !dbg !1343
}

define internal fastcc void @List_splitFirst_dce3401669119d7f5da9e070669694c78f88efb14a471223494f7d677db1e7d(%list.RocList %list, i64 %delimiter, ptr %0) !dbg !1345 {
entry:
  %tag_alloca14 = alloca { [6 x i64], i8 }, align 8
  %tag_alloca = alloca { [6 x i64], i8 }, align 8
  %struct_alloca11 = alloca { { %list.RocList, %list.RocList } }, align 8
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8
  %result_value = alloca { [1 x i64], i8 }, align 8
  call fastcc void @List_findFirstIndex_7988d89080438f51df37e0664fee86ae858164dcb95eaeb555d2849513259182(%list.RocList %list, i64 %delimiter, ptr nonnull %result_value), !dbg !1346
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1346
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1346
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1346
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1346

then_block:                                       ; preds = %entry
  %load_element = load i64, ptr %result_value, align 8, !dbg !1346
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %load_element, 0, !dbg !1346
  %insert_record_field2 = insertvalue { i64, i64 } %insert_record_field, i64 0, 1, !dbg !1346
  call fastcc void @"#Attr_#inc_1"(%list.RocList %list, i64 1), !dbg !1346
  %call = call fastcc %list.RocList @List_sublist_13f5c26ce0b5e6eebef533619a72113f96d1ebc7728f2a7c4631d56ba55ad7c(%list.RocList %list, { i64, i64 } %insert_record_field2), !dbg !1346
  %call3 = call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !1346
  %call4 = call fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %call3, i64 %load_element), !dbg !1346
  %call5 = call fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %call4, i64 1), !dbg !1346
  %call6 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %load_element, i64 1), !dbg !1346
  %insert_record_field7 = insertvalue { i64, i64 } zeroinitializer, i64 %call5, 0, !dbg !1346
  %insert_record_field8 = insertvalue { i64, i64 } %insert_record_field7, i64 %call6, 1, !dbg !1346
  %call9 = call fastcc %list.RocList @List_sublist_13f5c26ce0b5e6eebef533619a72113f96d1ebc7728f2a7c4631d56ba55ad7c(%list.RocList %list, { i64, i64 } %insert_record_field8), !dbg !1346
  %call9.elt = extractvalue %list.RocList %call9, 0, !dbg !1346
  store ptr %call9.elt, ptr %struct_alloca, align 8, !dbg !1346
  %struct_alloca.repack17 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1346
  %call9.elt18 = extractvalue %list.RocList %call9, 1, !dbg !1346
  store i64 %call9.elt18, ptr %struct_alloca.repack17, align 8, !dbg !1346
  %struct_alloca.repack19 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1346
  %call9.elt20 = extractvalue %list.RocList %call9, 2, !dbg !1346
  store i64 %call9.elt20, ptr %struct_alloca.repack19, align 8, !dbg !1346
  %struct_field_gep10 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !1346
  %call.elt = extractvalue %list.RocList %call, 0, !dbg !1346
  store ptr %call.elt, ptr %struct_field_gep10, align 8, !dbg !1346
  %struct_field_gep10.repack21 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1346
  %call.elt22 = extractvalue %list.RocList %call, 1, !dbg !1346
  store i64 %call.elt22, ptr %struct_field_gep10.repack21, align 8, !dbg !1346
  %struct_field_gep10.repack23 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1346
  %call.elt24 = extractvalue %list.RocList %call, 2, !dbg !1346
  store i64 %call.elt24, ptr %struct_field_gep10.repack23, align 8, !dbg !1346
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca11, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1346
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca11, i64 48, i1 false), !dbg !1346
  %tag_id_ptr13 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1346
  store i8 1, ptr %tag_id_ptr13, align 8, !dbg !1346
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1346
  ret void, !dbg !1346

else_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_1"(%list.RocList %list), !dbg !1346
  store i1 true, ptr %tag_alloca14, align 8, !dbg !1346
  %tag_id_ptr16 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca14, i64 0, i32 1, !dbg !1346
  store i8 0, ptr %tag_id_ptr16, align 8, !dbg !1346
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca14, i64 56, i1 false), !dbg !1346
  ret void, !dbg !1346
}

define internal fastcc i64 @Num_addSaturated_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94(i64 %"#arg1", i64 %"#arg2") !dbg !1348 {
entry:
  %call = tail call i64 @llvm.uadd.sat.i64(i64 %"#arg1", i64 %"#arg2"), !dbg !1349
  ret i64 %call, !dbg !1349
}

define internal fastcc {} @Parser_const_1375e2db4435b2138a3415b7c96936836b72ffb02dfbb07976d45f5890e0({} %val) !dbg !1351 {
entry:
  %call = tail call fastcc {} @Parser_buildPrimitiveParser_7f281174bb95be75e15cd13756faa969e71990e919b9dd9056d6ea49f9599bbe({} %val), !dbg !1352
  ret {} %call, !dbg !1352
}

define internal fastcc void @Task_42_6dea868fd882515ee4d6ec4867e8156d13a76c6d7fd19e7a46b6aa84371f7b({} %"106", ptr %"#arg_closure", ptr %0) !dbg !1354 {
entry:
  %result_value5 = alloca { [1 x i32], i8 }, align 8, !dbg !1355
  %result_value4 = alloca { [1 x i32], i8 }, align 8, !dbg !1355
  %result_value3 = alloca { [1 x i32], i8 }, align 8, !dbg !1355
  %result_value2 = alloca { [5 x i64], i8 }, align 8, !dbg !1355
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !1355
  %struct_field1 = alloca { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, align 8, !dbg !1355
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %struct_field1, ptr noundef nonnull align 8 dereferenceable(88) %"#arg_closure", i64 88, i1 false), !dbg !1355
  call fastcc void @Task_46_80e4236cec7ce53ad94a63f0cd85be177651d368effb21dd2f6c26944faf0({} zeroinitializer, ptr nonnull %struct_field1, ptr nonnull %result_value), !dbg !1355
  call fastcc void @_3_67f5fd6e89d2bff324c0d4f26998729c6826aeb676619137bf1c3dcaad1bed3(ptr nonnull %result_value, ptr nonnull %result_value2), !dbg !1355
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %result_value2, i64 0, i32 1, !dbg !1355
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1355
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
  ], !dbg !1355

default:                                          ; preds = %entry
  call fastcc void @Task_46_3ecfee88222f69a72a6908d3fd6c08b72fa6d1fbfec3512e9af22d6637fde({} zeroinitializer, ptr nonnull %result_value2, ptr nonnull %result_value5), !dbg !1355
  %1 = load i64, ptr %result_value5, align 8, !dbg !1355
  store i64 %1, ptr %0, align 4, !dbg !1355
  ret void, !dbg !1355

branch0:                                          ; preds = %entry
  call fastcc void @Task_35_9294948111f131652687dcc3f2dde9cc67fb309853fbd814ad8f8f3c89b321({} zeroinitializer, ptr nonnull %result_value2, ptr nonnull %result_value3), !dbg !1355
  %2 = load i64, ptr %result_value3, align 8, !dbg !1355
  store i64 %2, ptr %0, align 4, !dbg !1355
  ret void, !dbg !1355

branch1:                                          ; preds = %entry
  call fastcc void @Task_38_227c616c7b4b56636b2b27697746d083f4afe93588be2831ba53eb420fc2fb9({} zeroinitializer, ptr nonnull %result_value2, ptr nonnull %result_value4), !dbg !1355
  %3 = load i64, ptr %result_value4, align 8, !dbg !1355
  store i64 %3, ptr %0, align 4, !dbg !1355
  ret void, !dbg !1355
}

define internal fastcc void @Parser_52_3b148fd2a5a7120f39a95f212875e0e0a46b2eb1a77c5d23b9391c4799c48(%list.RocList %input, {} %val, ptr %0) !dbg !1357 {
entry:
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1358
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !1358
  %input.elt = extractvalue %list.RocList %input, 0, !dbg !1358
  store ptr %input.elt, ptr %tag_alloca, align 8, !dbg !1358
  %tag_alloca.repack5 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1358
  %input.elt6 = extractvalue %list.RocList %input, 1, !dbg !1358
  store i64 %input.elt6, ptr %tag_alloca.repack5, align 8, !dbg !1358
  %tag_alloca.repack7 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1358
  %input.elt8 = extractvalue %list.RocList %input, 2, !dbg !1358
  store i64 %input.elt8, ptr %tag_alloca.repack7, align 8, !dbg !1358
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1358
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1358
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1358
  ret void, !dbg !1358
}

define internal fastcc void @Five_middle_e315ee9facfd97a46e7bd14b98541116d245ecd6155168d2c1c9c02d3f201e(%list.RocList %ls, ptr %0) !dbg !1360 {
entry:
  %result_value = alloca { [1 x i64], i8 }, align 8, !dbg !1361
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %ls), !dbg !1361
  %call1 = tail call fastcc i64 @Num_sub_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(i64 %call, i64 1), !dbg !1361
  %call2 = tail call fastcc i64 @Num_divTrunc_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2(i64 %call1, i64 2), !dbg !1361
  call fastcc void @List_get_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753(%list.RocList %ls, i64 %call2, ptr nonnull %result_value), !dbg !1361
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %result_value, i64 16, i1 false), !dbg !1361
  ret void, !dbg !1361
}

define internal fastcc i64 @Num_divTruncUnchecked_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f(i64 %"#arg1", i64 %"#arg2") !dbg !1363 {
entry:
  %div_uint = udiv i64 %"#arg1", %"#arg2", !dbg !1364
  ret i64 %div_uint, !dbg !1364
}

define internal fastcc i8 @Num_sub_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2(i8 %"#arg1", i8 %"#arg2") !dbg !1366 {
entry:
  %call = tail call { i8, i1 } @llvm.usub.with.overflow.i8(i8 %"#arg1", i8 %"#arg2"), !dbg !1367
  %has_overflowed = extractvalue { i8, i1 } %call, 1, !dbg !1367
  br i1 %has_overflowed, label %throw_block, label %then_block, !dbg !1367

then_block:                                       ; preds = %entry
  %operation_result = extractvalue { i8, i1 } %call, 0, !dbg !1367
  ret i8 %operation_result, !dbg !1367

throw_block:                                      ; preds = %entry
  tail call fastcc void @throw_on_overflow(), !dbg !1367
  unreachable, !dbg !1367
}

define internal fastcc void @PlatformTasks_stderrLine_b13e441aa31a6e35575dd307f7cad1257deaa945c51f2cbe43d4fa91f764bf(ptr %closure_arg_stderrLine_0, ptr %0) !dbg !1369 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %closure_arg_stderrLine_0, i64 24, i1 false), !dbg !1370
  ret void, !dbg !1370
}

define internal fastcc { { {}, {} }, {} } @Parser_apply_ecbd7b762d55e44bf495618cea878b55259220bc8edf3022f9d67817349224a({ {}, {} } %funParser, {} %valParser) !dbg !1372 {
entry:
  %insert_record_field = insertvalue { { {}, {} }, {} } zeroinitializer, { {}, {} } %funParser, 0, !dbg !1373
  %insert_record_field1 = insertvalue { { {}, {} }, {} } %insert_record_field, {} %valParser, 1, !dbg !1373
  %call = tail call fastcc { { {}, {} }, {} } @Parser_buildPrimitiveParser_dd6ee582294ef21ddfbf34ee1f32fb2fbc1e46a8978ff17f23e47debd1261({ { {}, {} }, {} } %insert_record_field1), !dbg !1373
  ret { { {}, {} }, {} } %call, !dbg !1373
}

define internal fastcc void @Parser_153_b3bc15972825cd45bef5e6289e422a8811ed4523ed803e14f34e79eb07fe3cd(%list.RocList %input, {} %parser, ptr %0) !dbg !1375 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_manyImpl_945e5a76091d624c441899cd3a90b894cb4cd17889bc19575617f1f8d43bf({} %parser, %list.RocList zeroinitializer, %list.RocList %input, ptr nonnull %result_value), !dbg !1376
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1376
  ret void, !dbg !1376
}

define internal fastcc %list.RocList @List_takeFirst_b29e3b7af499d7231de5e31772f94a674636903232cb1b301cf274977992d8b(%list.RocList %list, i64 %outputLength) !dbg !1378 {
entry:
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %outputLength, 0, !dbg !1379
  %insert_record_field1 = insertvalue { i64, i64 } %insert_record_field, i64 0, 1, !dbg !1379
  %call = tail call fastcc %list.RocList @List_sublist_8e9956175ff8e3582c4b770a3b3c2388266676d8eb052d494e1a127bd7a9ad2(%list.RocList %list, { i64, i64 } %insert_record_field1), !dbg !1379
  ret %list.RocList %call, !dbg !1379
}

define internal fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %"#arg1", i64 %"#arg2") !dbg !1381 {
entry:
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !1382
  %list_get_element = getelementptr inbounds { i32, i32 }, ptr %read_list_ptr, i64 %"#arg2", !dbg !1382
  %list_get_load_element.unpack = load i32, ptr %list_get_element, align 4, !dbg !1382
  %0 = insertvalue { i32, i32 } poison, i32 %list_get_load_element.unpack, 0, !dbg !1382
  %list_get_load_element.elt1 = getelementptr inbounds { i32, i32 }, ptr %read_list_ptr, i64 %"#arg2", i32 1, !dbg !1382
  %list_get_load_element.unpack2 = load i32, ptr %list_get_load_element.elt1, align 4, !dbg !1382
  %list_get_load_element3 = insertvalue { i32, i32 } %0, i32 %list_get_load_element.unpack2, 1, !dbg !1382
  ret { i32, i32 } %list_get_load_element3, !dbg !1382
}

define internal fastcc %list.RocList @List_walkHelp_8e7a40fb7cb2175e9c8b7aee60f44cef84959b742d3a14c483b6e3b14f05c2f(%list.RocList %"262", %list.RocList %"263", {} %"264", i64 %"265", i64 %"266") !dbg !1384 {
entry:
  tail call fastcc void @"#Attr_#inc_4"(%list.RocList %"262", i64 1), !dbg !1385
  br label %joinpointcont, !dbg !1385

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi %list.RocList [ %"263", %entry ], [ %call6, %then_block ], !dbg !1385
  %joinpointarg3 = phi i64 [ %"265", %entry ], [ %call7, %then_block ], !dbg !1385
  %call = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg3, i64 %"266"), !dbg !1385
  br i1 %call, label %then_block, label %else_block, !dbg !1385

then_block:                                       ; preds = %joinpointcont
  %call5 = tail call fastcc %list.RocList @List_getUnsafe_5d84da6abaf677d342986d45e3605cfd5bd1528ee5196616226adfb513950(%list.RocList %"262", i64 %joinpointarg3), !dbg !1385
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %call5, i64 1), !dbg !1385
  %call6 = tail call fastcc %list.RocList @List_walker_a4f1bd72ba9ffa9bc6b14a41321324cb50df1636d7bfebf57c16d684c9fbc2(%list.RocList %joinpointarg1, %list.RocList %call5, {} %"264"), !dbg !1385
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %call5), !dbg !1385
  %call7 = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg3, i64 1), !dbg !1385
  br label %joinpointcont, !dbg !1385

else_block:                                       ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_4"(%list.RocList %"262"), !dbg !1385
  ret %list.RocList %joinpointarg1, !dbg !1385
}

define internal fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"#arg1") !dbg !1387 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !1388
  ret i64 %list_len, !dbg !1388
}

define internal fastcc void @Result_try_78e95374ca5c3ffeb4c3c6d1fee15f4627b4cb8e78c83389fa66fa17b11860(ptr %result, {} %transform, ptr %0) !dbg !1390 {
entry:
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1391
  %load_element4 = alloca %str.RocStr, align 8, !dbg !1391
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1391
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1391
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1391
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1391
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1391

then_block:                                       ; preds = %entry
  %load_element.unpack.unpack = load ptr, ptr %result, align 8, !dbg !1391
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack.unpack, 0, !dbg !1391
  %load_element.unpack.elt18 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !1391
  %load_element.unpack.unpack19 = load i64, ptr %load_element.unpack.elt18, align 8, !dbg !1391
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack.unpack19, 1, !dbg !1391
  %load_element.unpack.elt20 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !1391
  %load_element.unpack.unpack21 = load i64, ptr %load_element.unpack.elt20, align 8, !dbg !1391
  %load_element.unpack22 = insertvalue %list.RocList %2, i64 %load_element.unpack.unpack21, 2, !dbg !1391
  %3 = insertvalue { %list.RocList, i64 } poison, %list.RocList %load_element.unpack22, 0, !dbg !1391
  %load_element.elt15 = getelementptr inbounds { %list.RocList, i64 }, ptr %result, i64 0, i32 1, !dbg !1391
  %load_element.unpack16 = load i64, ptr %load_element.elt15, align 8, !dbg !1391
  %load_element17 = insertvalue { %list.RocList, i64 } %3, i64 %load_element.unpack16, 1, !dbg !1391
  call fastcc void @Parser_77_2ad8658f1e86eeda3a02dcb74391d83ec763ff151af71fc3ac46cbea2b9ce({ %list.RocList, i64 } %load_element17, {} %transform, ptr nonnull %result_value), !dbg !1391
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1391
  ret void, !dbg !1391

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !1391
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element4, align 8, !dbg !1391
  %load_tag_to_put_in_struct.elt6 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 1, !dbg !1391
  %load_tag_to_put_in_struct.unpack7 = load i64, ptr %load_tag_to_put_in_struct.elt6, align 8, !dbg !1391
  %load_tag_to_put_in_struct.elt8 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 2, !dbg !1391
  %load_tag_to_put_in_struct.unpack9 = load i64, ptr %load_tag_to_put_in_struct.elt8, align 8, !dbg !1391
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1391
  %tag_alloca.repack11 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1391
  store i64 %load_tag_to_put_in_struct.unpack7, ptr %tag_alloca.repack11, align 8, !dbg !1391
  %tag_alloca.repack13 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1391
  store i64 %load_tag_to_put_in_struct.unpack9, ptr %tag_alloca.repack13, align 8, !dbg !1391
  %tag_id_ptr5 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1391
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !1391
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1391
  ret void, !dbg !1391
}

define internal fastcc %list.RocList @Str_toUtf8_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63(ptr %"#arg1") !dbg !1393 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  call void @roc_builtins.str.to_utf8(ptr noalias nocapture nonnull sret(%list.RocList) %list_alloca, ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1"), !dbg !1394
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1394
  %0 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1394
  %load_list.elt1 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1394
  %load_list.unpack2 = load i64, ptr %load_list.elt1, align 8, !dbg !1394
  %1 = insertvalue %list.RocList %0, i64 %load_list.unpack2, 1, !dbg !1394
  %load_list.elt3 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1394
  %load_list.unpack4 = load i64, ptr %load_list.elt3, align 8, !dbg !1394
  %load_list5 = insertvalue %list.RocList %1, i64 %load_list.unpack4, 2, !dbg !1394
  ret %list.RocList %load_list5, !dbg !1394
}

define internal fastcc void @Inspect_272_e97c7c92d435d433f8aa8ddd4ddc6c9d8c45c10adae536897eecfd72f2389(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !1396 {
entry:
  %result_value2 = alloca %str.RocStr, align 8, !dbg !1397
  %result_value = alloca %str.RocStr, align 8, !dbg !1397
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !1397
  call fastcc void @Num_toStr_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece(i32 %load_element, ptr nonnull %result_value), !dbg !1397
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %result_value, ptr nonnull %result_value2), !dbg !1397
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value), !dbg !1397
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value2, i64 24, i1 false), !dbg !1397
  ret void, !dbg !1397
}

define internal fastcc void @Five_30_f81ede8f61994c117716f563c136128125c8b7d9af8ae3ed880dbb29f2c2a98(%list.RocList %rules, ptr %after, ptr %0) !dbg !1399 {
entry:
  %result_value9 = alloca { [9 x i64], i8 }, align 8, !dbg !1400
  %result_value8 = alloca { [9 x i64], i8 }, align 8, !dbg !1400
  %result_value7 = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8, !dbg !1400
  %result_value6 = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8, !dbg !1400
  %result_value5 = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !1400
  %const_str_store4 = alloca %str.RocStr, align 8, !dbg !1400
  %result_value3 = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !1400
  %result_value2 = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !1400
  %result_value1 = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !1400
  %result_value = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !1400
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1400
  %call = tail call fastcc { {}, { { {}, {} }, {} } } @String_digits_2a63cbb21df3c6cd024fa55fccbaa353df4baab244ba379952ed628e5b4ade(), !dbg !1400
  store ptr inttoptr (i64 44 to ptr), ptr %const_str_store, align 8, !dbg !1400
  %const_str_store.repack10 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1400
  store i64 0, ptr %const_str_store.repack10, align 8, !dbg !1400
  %const_str_store.repack11 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1400
  store i64 -9151314442816847872, ptr %const_str_store.repack11, align 8, !dbg !1400
  call fastcc void @String_string_dd534565178f1d68b111fdc2e326a0805311eecf8c9a1da323c0af98ffe3(ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1400
  call fastcc void @Parser_maybe_91f55f0f74d3a50ce67a647641ecddc4a3ba89ef5bfad20773d8a6834984b(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !1400
  call fastcc void @Parser_skip_6c68987bd3d4f8949cad39c27377db22ab8bd15fe9e342f64964ed294c77({ {}, { { {}, {} }, {} } } %call, ptr nonnull %result_value1, ptr nonnull %result_value2), !dbg !1400
  call fastcc void @Parser_many_4c8db17447f5ee4913514dace945a8e11b844b4a7884df53b6c87efb365543a(ptr nonnull %result_value2, ptr nonnull %result_value3), !dbg !1400
  store ptr inttoptr (i64 10 to ptr), ptr %const_str_store4, align 8, !dbg !1400
  %const_str_store4.repack12 = getelementptr inbounds %str.RocStr, ptr %const_str_store4, i64 0, i32 1, !dbg !1400
  store i64 0, ptr %const_str_store4.repack12, align 8, !dbg !1400
  %const_str_store4.repack13 = getelementptr inbounds %str.RocStr, ptr %const_str_store4, i64 0, i32 2, !dbg !1400
  store i64 -9151314442816847872, ptr %const_str_store4.repack13, align 8, !dbg !1400
  call fastcc void @String_string_dd534565178f1d68b111fdc2e326a0805311eecf8c9a1da323c0af98ffe3(ptr nonnull %const_str_store4, ptr nonnull %result_value5), !dbg !1400
  call fastcc void @Parser_skip_138ea5ad6c7ff33732a5a5a68f02ff094d89c5919c0c657b74d18468aec6eb(ptr nonnull %result_value3, ptr nonnull %result_value5, ptr nonnull %result_value6), !dbg !1400
  call fastcc void @Parser_many_6a4f46ee87733c8ba3849fbe22c6c5fd6183935ace5f43ae75a260d6d9(ptr nonnull %result_value6, ptr nonnull %result_value7), !dbg !1400
  call fastcc void @Five_32_6bbcde7d41792fbe845f8bf74275dc12b5fcae37f4d24f0ea64b1f14c552a(ptr nonnull %result_value7, ptr %after, ptr nonnull %result_value8), !dbg !1400
  call fastcc void @Result_try_a7deb1b6384ce9571721cd1522e1e931203f492c94f2dbf8138817d3824a(ptr nonnull %result_value8, %list.RocList %rules, ptr nonnull %result_value9), !dbg !1400
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value9, i64 80, i1 false), !dbg !1400
  ret void, !dbg !1400
}

define internal fastcc void @Parser_parse_f450475ab465e8d5720f97d44d03608c846dd5a98c93419a9069c6dc52fa0(ptr %parser, %list.RocList %input, {} %isParsingCompleted, ptr %0) !dbg !1402 {
entry:
  %tag_alloca25 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca20 = alloca { [3 x i64], i8 }, align 8
  %load_element17 = alloca %str.RocStr, align 8
  %tag_alloca12 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca8 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca = alloca { [4 x i64], i8 }, align 8
  %load_element = alloca { %list.RocList, %list.RocList }, align 8
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_parsePartial_4b2fc33c1d582e1b56b6dd2bdcc2a1fe41a8941cb28841b07ac32da2bed91e69(ptr %parser, %list.RocList %input, ptr nonnull %result_value), !dbg !1403
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1403
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1403
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1403
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1403

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1403
  %struct_field.unpack = load ptr, ptr %load_element, align 8, !dbg !1403
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1403
  %struct_field.elt37 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 1, !dbg !1403
  %struct_field.unpack38 = load i64, ptr %struct_field.elt37, align 8, !dbg !1403
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack38, 1, !dbg !1403
  %struct_field.elt39 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 2, !dbg !1403
  %struct_field.unpack40 = load i64, ptr %struct_field.elt39, align 8, !dbg !1403
  %struct_field41 = insertvalue %list.RocList %2, i64 %struct_field.unpack40, 2, !dbg !1403
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, !dbg !1403
  %struct_field2.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1403
  %struct_field2.elt42 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, i32 1, !dbg !1403
  %struct_field2.unpack43 = load i64, ptr %struct_field2.elt42, align 8, !dbg !1403
  %struct_field2.elt44 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, i32 2, !dbg !1403
  %struct_field2.unpack45 = load i64, ptr %struct_field2.elt44, align 8, !dbg !1403
  %call = call fastcc i1 @String_59_bc413139b8bf596011dc864f2452fae94852749d6225b8d53dfd835ba68b7b(%list.RocList %struct_field41), !dbg !1403
  br i1 %call, label %then_block4, label %else_block5, !dbg !1403

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element17, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1403
  %load_tag_to_put_in_struct18.unpack = load ptr, ptr %load_element17, align 8, !dbg !1403
  %load_tag_to_put_in_struct18.elt28 = getelementptr inbounds %str.RocStr, ptr %load_element17, i64 0, i32 1, !dbg !1403
  %load_tag_to_put_in_struct18.unpack29 = load i64, ptr %load_tag_to_put_in_struct18.elt28, align 8, !dbg !1403
  %load_tag_to_put_in_struct18.elt30 = getelementptr inbounds %str.RocStr, ptr %load_element17, i64 0, i32 2, !dbg !1403
  %load_tag_to_put_in_struct18.unpack31 = load i64, ptr %load_tag_to_put_in_struct18.elt30, align 8, !dbg !1403
  store ptr %load_tag_to_put_in_struct18.unpack, ptr %tag_alloca20, align 8, !dbg !1403
  %tag_alloca20.repack33 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 1, !dbg !1403
  store i64 %load_tag_to_put_in_struct18.unpack29, ptr %tag_alloca20.repack33, align 8, !dbg !1403
  %tag_alloca20.repack35 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 2, !dbg !1403
  store i64 %load_tag_to_put_in_struct18.unpack31, ptr %tag_alloca20.repack35, align 8, !dbg !1403
  %tag_id_ptr22 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca20, i64 0, i32 1, !dbg !1403
  store i8 0, ptr %tag_id_ptr22, align 8, !dbg !1403
  %load_tag_to_put_in_struct23 = load { [3 x i64], i8 }, ptr %tag_alloca20, align 8, !dbg !1403
  store { [3 x i64], i8 } %load_tag_to_put_in_struct23, ptr %tag_alloca25, align 8, !dbg !1403
  %tag_id_ptr27 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca25, i64 0, i32 1, !dbg !1403
  store i8 0, ptr %tag_id_ptr27, align 8, !dbg !1403
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca25, i64 40, i1 false), !dbg !1403
  ret void, !dbg !1403

then_block4:                                      ; preds = %then_block
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field41), !dbg !1403
  store ptr %struct_field2.unpack, ptr %tag_alloca, align 8, !dbg !1403
  %tag_alloca.repack51 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1403
  store i64 %struct_field2.unpack43, ptr %tag_alloca.repack51, align 8, !dbg !1403
  %tag_alloca.repack53 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1403
  store i64 %struct_field2.unpack45, ptr %tag_alloca.repack53, align 8, !dbg !1403
  %tag_id_ptr6 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1403
  store i8 1, ptr %tag_id_ptr6, align 8, !dbg !1403
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1403
  ret void, !dbg !1403

else_block5:                                      ; preds = %then_block
  %3 = insertvalue %list.RocList poison, ptr %struct_field2.unpack, 0, !dbg !1403
  %4 = insertvalue %list.RocList %3, i64 %struct_field2.unpack43, 1, !dbg !1403
  %struct_field246 = insertvalue %list.RocList %4, i64 %struct_field2.unpack45, 2, !dbg !1403
  call fastcc void @"#Attr_#dec_2"(%list.RocList %struct_field246), !dbg !1403
  store ptr %struct_field.unpack, ptr %tag_alloca8, align 8, !dbg !1403
  %tag_alloca8.repack47 = getelementptr inbounds %list.RocList, ptr %tag_alloca8, i64 0, i32 1, !dbg !1403
  store i64 %struct_field.unpack38, ptr %tag_alloca8.repack47, align 8, !dbg !1403
  %tag_alloca8.repack49 = getelementptr inbounds %list.RocList, ptr %tag_alloca8, i64 0, i32 2, !dbg !1403
  store i64 %struct_field.unpack40, ptr %tag_alloca8.repack49, align 8, !dbg !1403
  %tag_id_ptr10 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !1403
  store i8 1, ptr %tag_id_ptr10, align 8, !dbg !1403
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %tag_alloca8, align 8, !dbg !1403
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca12, align 8, !dbg !1403
  %tag_id_ptr14 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca12, i64 0, i32 1, !dbg !1403
  store i8 0, ptr %tag_id_ptr14, align 8, !dbg !1403
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca12, i64 40, i1 false), !dbg !1403
  ret void, !dbg !1403
}

define internal fastcc void @Five_38_a1f1c2407512f3220f6212b7b75e099c971d128b656c18ded971afd225c34c(ptr %dict, { i64, i64 } %"161", ptr %0) !dbg !1405 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !1406
  %struct_field_access_record_0 = extractvalue { i64, i64 } %"161", 0, !dbg !1406
  %struct_field_access_record_1 = extractvalue { i64, i64 } %"161", 1, !dbg !1406
  call fastcc void @Dict_update_e7d224cfcafcc878740e4416f7931bf725f9fd3378f8c73d6a4dc1d8c8883f(ptr %dict, i64 %struct_field_access_record_0, i64 %struct_field_access_record_1, ptr nonnull %result_value), !dbg !1406
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !1406
  ret void, !dbg !1406
}

define internal fastcc void @String_parseUtf8_6c4184d9de7bfc8cf488ca98f4fc9c30e82530ee2451f209df4c26db25e7(ptr %parser, %list.RocList %input, ptr %0) !dbg !1408 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Parser_parse_3ef0be3dc434ba1162e39580a72ad0387348f7e2ac5c485921af9f85a731eea(ptr %parser, %list.RocList %input, {} zeroinitializer, ptr nonnull %result_value), !dbg !1409
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1409
  ret void, !dbg !1409
}

define internal fastcc i64 @List_len_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2(%list.RocList %"#arg1") !dbg !1411 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !1412
  ret i64 %list_len, !dbg !1412
}

define internal fastcc i64 @List_walkHelp_10259c295470b0dd303c429b36412fb6f21861ad97f73a2722c7516d147991f(%list.RocList %"271", i64 %"272", {} %"273", i64 %"274", i64 %"275") !dbg !1414 {
entry:
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"271", i64 1), !dbg !1415
  br label %joinpointcont, !dbg !1415

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi i64 [ %"272", %entry ], [ %call6, %then_block ], !dbg !1415
  %joinpointarg3 = phi i64 [ %"274", %entry ], [ %call7, %then_block ], !dbg !1415
  %call = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg3, i64 %"275"), !dbg !1415
  br i1 %call, label %then_block, label %else_block, !dbg !1415

then_block:                                       ; preds = %joinpointcont
  %call5 = tail call fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %"271", i64 %joinpointarg3), !dbg !1415
  %call6 = tail call fastcc i64 @Num_add_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47(i64 %joinpointarg1, i64 %call5), !dbg !1415
  %call7 = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg3, i64 1), !dbg !1415
  br label %joinpointcont, !dbg !1415

else_block:                                       ; preds = %joinpointcont
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %"271"), !dbg !1415
  ret i64 %joinpointarg1, !dbg !1415
}

define internal fastcc void @Parser_maybe_91f55f0f74d3a50ce67a647641ecddc4a3ba89ef5bfad20773d8a6834984b(ptr %parser, ptr %0) !dbg !1417 {
entry:
  %result_value2 = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8
  %result_value1 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca = alloca { [3 x i64], i8 }, align 8
  %result_value = alloca { { %str.RocStr, %list.RocList }, {} }, align 8
  call fastcc void @Parser_map_bd96ec4285a11c9820bb4ba3a247771dd91732da48f91e3fbd0d2acf571b2(ptr %parser, {} zeroinitializer, ptr nonnull %result_value), !dbg !1418
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1418
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !1418
  call fastcc void @Parser_const_4f901c8de2c7478653c08d6369f36717479192cadbcae45a78d1967e047e87(ptr nonnull %tag_alloca, ptr nonnull %result_value1), !dbg !1418
  call fastcc void @Parser_alt_a45290bef5734ad62afcaea912ebb28a88fcce6265e83e5ce118554fa9b23df6(ptr nonnull %result_value, ptr nonnull %result_value1, ptr nonnull %result_value2), !dbg !1418
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value2, i64 80, i1 false), !dbg !1418
  ret void, !dbg !1418
}

define internal fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint) !dbg !1420 {
entry:
  %call = tail call fastcc i32 @Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d(), !dbg !1421
  %call1 = tail call fastcc i32 @Num_addWrap_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b(i32 %distAndFingerprint, i32 %call), !dbg !1421
  ret i32 %call1, !dbg !1421
}

define internal fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %maxBuckets) !dbg !1423 {
entry:
  %call = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %bucketIndex, i64 1), !dbg !1424
  %call1 = tail call fastcc i1 @Bool_isNotEq_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34(i64 %call, i64 %maxBuckets), !dbg !1424
  br i1 %call1, label %then_block, label %else_block, !dbg !1424

then_block:                                       ; preds = %entry
  %call2 = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %bucketIndex, i64 1), !dbg !1424
  ret i64 %call2, !dbg !1424

else_block:                                       ; preds = %entry
  ret i64 0, !dbg !1424
}

define internal fastcc void @Num_toStr_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(i64 %"#arg1", ptr %0) !dbg !1426 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call void @roc_builtins.str.from_int.u64(ptr noalias nocapture nonnull sret(%str.RocStr) %str_alloca, i64 %"#arg1"), !dbg !1427
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %str_alloca, i64 24, i1 false), !dbg !1427
  ret void, !dbg !1427
}

define internal fastcc i64 @List_sum_1e4d2f1e6b4984301a1489b71481ade3a818d1fae80b8f87ea525c7bff923(%list.RocList %list) !dbg !1429 {
entry:
  %call = tail call fastcc i64 @List_walk_bad96aa871ccf5b068b2a1da7544fd3d07a932588efb92244e692b8beda99ce(%list.RocList %list, i64 0, {} zeroinitializer), !dbg !1430
  ret i64 %call, !dbg !1430
}

define internal fastcc void @Result_map_cd37899bb8a8d9e6a1967d5d098545d4623f55f4fb33fb81a429834acd2bca2(ptr %result, {} %transform, ptr %0) !dbg !1432 {
entry:
  %tag_alloca7 = alloca { [4 x i64], i8 }, align 8, !dbg !1433
  %load_element5 = alloca %str.RocStr, align 8, !dbg !1433
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1433
  %load_element = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1433
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1433
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1433
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1433
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1433

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result, i64 48, i1 false), !dbg !1433
  %call = call fastcc { %list.RocList, i64 } @Parser_82_9ebff67372e75a135a7dfe8147a63ffdbbe59a6628109c2ab0d254c0a48b94(ptr nonnull %load_element, {} %transform), !dbg !1433
  %call.elt = extractvalue { %list.RocList, i64 } %call, 0, !dbg !1433
  %call.elt.elt = extractvalue %list.RocList %call.elt, 0, !dbg !1433
  store ptr %call.elt.elt, ptr %tag_alloca, align 8, !dbg !1433
  %tag_alloca.repack21 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1433
  %call.elt.elt22 = extractvalue %list.RocList %call.elt, 1, !dbg !1433
  store i64 %call.elt.elt22, ptr %tag_alloca.repack21, align 8, !dbg !1433
  %tag_alloca.repack23 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1433
  %call.elt.elt24 = extractvalue %list.RocList %call.elt, 2, !dbg !1433
  store i64 %call.elt.elt24, ptr %tag_alloca.repack23, align 8, !dbg !1433
  %tag_alloca.repack19 = getelementptr inbounds { %list.RocList, i64 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1433
  %call.elt20 = extractvalue { %list.RocList, i64 } %call, 1, !dbg !1433
  store i64 %call.elt20, ptr %tag_alloca.repack19, align 8, !dbg !1433
  %tag_id_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1433
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !1433
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1433
  ret void, !dbg !1433

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !1433
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element5, align 8, !dbg !1433
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 1, !dbg !1433
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !1433
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 2, !dbg !1433
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !1433
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca7, align 8, !dbg !1433
  %tag_alloca7.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca7, i64 0, i32 1, !dbg !1433
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca7.repack15, align 8, !dbg !1433
  %tag_alloca7.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca7, i64 0, i32 2, !dbg !1433
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca7.repack17, align 8, !dbg !1433
  %tag_id_ptr9 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca7, i64 0, i32 1, !dbg !1433
  store i8 0, ptr %tag_id_ptr9, align 8, !dbg !1433
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca7, i64 40, i1 false), !dbg !1433
  ret void, !dbg !1433
}

define internal fastcc i8 @Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6(i64 %a, i64 %b, ptr %rulesDict) !dbg !1435 {
entry:
  %call = tail call fastcc i8 @Five_sorter_147f9a29f721bc6a47c431ffbf897368d53af6834eae9416f984da7fc2dd89(i64 %a, i64 %b, ptr %rulesDict), !dbg !1436
  ret i8 %call, !dbg !1436
}

define internal fastcc i64 @Dict_wymix_7daab025296eba78663b2c113b559f88e566e449ca8ec1339c43daed88577936(i64 %a, i64 %b) !dbg !1438 {
entry:
  %call = tail call fastcc { i64, i64 } @Dict_wymum_7f1997f7fb10ed4c657c136e5122e9272dd2d211216c39a3c7723555eefc6(i64 %a, i64 %b), !dbg !1439
  %struct_field_access_record_0 = extractvalue { i64, i64 } %call, 0, !dbg !1439
  %struct_field_access_record_1 = extractvalue { i64, i64 } %call, 1, !dbg !1439
  %call1 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %struct_field_access_record_0, i64 %struct_field_access_record_1), !dbg !1439
  ret i64 %call1, !dbg !1439
}

define internal fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %"#arg1", i64 %"#arg2") !dbg !1441 {
entry:
  %sub_int = sub i64 %"#arg1", %"#arg2", !dbg !1442
  ret i64 %sub_int, !dbg !1442
}

define internal fastcc void @Parser_52_7768ccf3aac525a48d7ee5a83d5cf6f5cad326c64a1cd15978c51c27333f5(%list.RocList %input, ptr %val, ptr %0) !dbg !1444 {
entry:
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1445
  %struct_alloca2 = alloca { { %list.RocList, %str.RocStr } }, align 8, !dbg !1445
  %struct_alloca = alloca { %list.RocList, %str.RocStr }, align 8, !dbg !1445
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !1445
  tail call fastcc void @"#Attr_#inc_13"(ptr %val, i64 1), !dbg !1445
  %input.elt = extractvalue %list.RocList %input, 0, !dbg !1445
  store ptr %input.elt, ptr %struct_alloca, align 8, !dbg !1445
  %struct_alloca.repack4 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1445
  %input.elt5 = extractvalue %list.RocList %input, 1, !dbg !1445
  store i64 %input.elt5, ptr %struct_alloca.repack4, align 8, !dbg !1445
  %struct_alloca.repack6 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1445
  %input.elt7 = extractvalue %list.RocList %input, 2, !dbg !1445
  store i64 %input.elt7, ptr %struct_alloca.repack6, align 8, !dbg !1445
  %struct_field_gep1 = getelementptr inbounds { %list.RocList, %str.RocStr }, ptr %struct_alloca, i64 0, i32 1, !dbg !1445
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(24) %val, i64 24, i1 false), !dbg !1445
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1445
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca2, i64 48, i1 false), !dbg !1445
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1445
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1445
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1445
  ret void, !dbg !1445
}

define internal fastcc void @Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250(ptr %fn, ptr %0) !dbg !1447 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %fn, i64 40, i1 false), !dbg !1448
  ret void, !dbg !1448
}

define internal fastcc void @InternalPath_26_25d58849757a586446e327bd270f25c98f41c5eaaa541b53178bdcd7d21bb9(ptr %"47", ptr %0) !dbg !1450 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %"47", i64 32, i1 false), !dbg !1451
  ret void, !dbg !1451
}

define internal fastcc void @List_replaceUnsafe_46849c3b86f45f4f9e25198bc9b2ae6bcae76ebfbd692c6f18d9d9111cb9233c(%list.RocList %"#arg1", i64 %"#arg2", { i64, %list.RocList } %"#arg3", ptr %0) !dbg !1453 {
entry:
  %1 = alloca %list.RocList, align 8
  %2 = alloca %list.RocList, align 8
  %list_alloca137 = alloca %list.RocList, align 8
  %use_replace_result_record = alloca { %list.RocList, { i64, %list.RocList } }, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca { i64, %list.RocList }, align 8
  %output_element_as_opaque = alloca { i64, %list.RocList }, align 8
  %"#arg3.elt" = extractvalue { i64, %list.RocList } %"#arg3", 0, !dbg !1454
  store i64 %"#arg3.elt", ptr %element_to_pass_as_opaque, align 8, !dbg !1454
  %element_to_pass_as_opaque.repack2 = getelementptr inbounds { i64, %list.RocList }, ptr %element_to_pass_as_opaque, i64 0, i32 1, !dbg !1454
  %"#arg3.elt3" = extractvalue { i64, %list.RocList } %"#arg3", 1, !dbg !1454
  %"#arg3.elt3.elt" = extractvalue %list.RocList %"#arg3.elt3", 0, !dbg !1454
  store ptr %"#arg3.elt3.elt", ptr %element_to_pass_as_opaque.repack2, align 8, !dbg !1454
  %element_to_pass_as_opaque.repack2.repack4 = getelementptr inbounds { i64, %list.RocList }, ptr %element_to_pass_as_opaque, i64 0, i32 1, i32 1, !dbg !1454
  %"#arg3.elt3.elt5" = extractvalue %list.RocList %"#arg3.elt3", 1, !dbg !1454
  store i64 %"#arg3.elt3.elt5", ptr %element_to_pass_as_opaque.repack2.repack4, align 8, !dbg !1454
  %element_to_pass_as_opaque.repack2.repack6 = getelementptr inbounds { i64, %list.RocList }, ptr %element_to_pass_as_opaque, i64 0, i32 1, i32 2, !dbg !1454
  %"#arg3.elt3.elt7" = extractvalue %list.RocList %"#arg3.elt3", 2, !dbg !1454
  store i64 %"#arg3.elt3.elt7", ptr %element_to_pass_as_opaque.repack2.repack6, align 8, !dbg !1454
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1454
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1454
  %list_alloca1.repack8 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1454
  %"#arg1.elt9" = extractvalue %list.RocList %"#arg1", 1, !dbg !1454
  store i64 %"#arg1.elt9", ptr %list_alloca1.repack8, align 8, !dbg !1454
  %list_alloca1.repack10 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1454
  %"#arg1.elt11" = extractvalue %list.RocList %"#arg1", 2, !dbg !1454
  store i64 %"#arg1.elt11", ptr %list_alloca1.repack10, align 8, !dbg !1454
  call void @llvm.experimental.noalias.scope.decl(metadata !1456), !dbg !1454
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca137), !dbg !1454
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !1454
  call void @llvm.lifetime.start.p0(i64 24, ptr %2), !dbg !1454
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca137, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1454
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca137, i64 24, i1 false), !dbg !1454, !noalias !1456
  call void @llvm.experimental.noalias.scope.decl(metadata !1459), !dbg !1454
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1454
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !1454, !noalias !1462
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %2, i64 16, !dbg !1454
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !1454, !noalias !1462
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1454
  %3 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !1454
  %4 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !1454
  %5 = or i64 %4, %3, !dbg !1454
  %6 = icmp ne i64 %5, 0, !dbg !1454
  %brmerge.i.i.i.i = select i1 %6, i1 true, i1 %isneg.i.i.i.i.i, !dbg !1454
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !1454

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %7 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1454
  %.sroa.0.0.copyload.i.i = load ptr, ptr %2, align 8, !dbg !1454, !noalias !1462
  %8 = ptrtoint ptr %.sroa.0.0.copyload.i.i to i64, !dbg !1454
  %9 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1454
  %10 = select i1 %7, i64 %9, i64 %8, !dbg !1454
  %11 = inttoptr i64 %10 to ptr, !dbg !1454
  %12 = getelementptr inbounds i64, ptr %11, i64 -1, !dbg !1454
  %13 = load i64, ptr %12, align 8, !dbg !1454, !noalias !1462
  %14 = icmp eq i64 %13, -9223372036854775808, !dbg !1454
  br i1 %14, label %list.RocList.isUnique.exit.thread.i.i, label %15, !dbg !1454

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false), !dbg !1454, !noalias !1456
  br label %roc_builtins.list.replace.exit, !dbg !1454

15:                                               ; preds = %list.RocList.isUnique.exit.i.i
  %16 = icmp eq i64 %.sroa.2.0.copyload.i.i, 0, !dbg !1454
  br i1 %16, label %.critedge.i.i.i, label %21, !dbg !1454

.critedge.i.i.i:                                  ; preds = %15
  %17 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1454
  %18 = icmp eq i64 %10, 0, !dbg !1454
  %or.cond.i.i.not69.i.i = select i1 %17, i1 true, i1 %18, !dbg !1454
  %.not.i.i.i.i = icmp eq i64 %13, 0, !dbg !1454
  %or.cond.i.i = select i1 %or.cond.i.i.not69.i.i, i1 true, i1 %.not.i.i.i.i, !dbg !1454
  br i1 %or.cond.i.i, label %list.RocList.decref.exit.i.i, label %19, !dbg !1454

19:                                               ; preds = %.critedge.i.i.i
  %20 = add nsw i64 %13, -1, !dbg !1454
  %sunkaddr.i.i = inttoptr i64 %10 to ptr, !dbg !1454
  %sunkaddr73.i.i = getelementptr inbounds i8, ptr %sunkaddr.i.i, i64 -8, !dbg !1454
  store i64 %20, ptr %sunkaddr73.i.i, align 8, !dbg !1454, !noalias !1462
  br label %list.RocList.decref.exit.i.i, !dbg !1454

list.RocList.decref.exit.i.i:                     ; preds = %19, %.critedge.i.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, i8 0, i64 24, i1 false), !dbg !1454, !alias.scope !1459, !noalias !1456
  br label %roc_builtins.list.replace.exit, !dbg !1454

21:                                               ; preds = %15
  %22 = call i64 @llvm.umax.i64(i64 2, i64 %.sroa.2.0.copyload.i.i), !dbg !1454
  %23 = mul nuw i64 %22, 32, !dbg !1454
  %24 = add nuw i64 %23, 16, !dbg !1454
  %25 = call ptr @roc_alloc(i64 %24, i32 8), !dbg !1454, !noalias !1463
  %26 = getelementptr inbounds i8, ptr %25, i64 16, !dbg !1454
  %27 = getelementptr inbounds i8, ptr %26, i64 -8, !dbg !1454
  store i64 -9223372036854775808, ptr %27, align 8, !dbg !1454, !noalias !1463
  %sunkaddr74.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1454
  %.sroa.1.0.copyload.pre.i.i = load i64, ptr %sunkaddr74.i.i, align 8, !dbg !1454, !noalias !1462
  %.pre.i.i = load ptr, ptr %2, align 8, !dbg !1454, !noalias !1462
  %28 = mul nuw i64 %.sroa.1.0.copyload.pre.i.i, 32, !dbg !1454
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %26, ptr align 1 %.pre.i.i, i64 %28, i1 false), !dbg !1454, !noalias !1462
  %sunkaddr75.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1454
  %.sroa.16.0.copyload63.i.i = load i64, ptr %sunkaddr75.i.i, align 8, !dbg !1454, !noalias !1462
  %.not.i.i = icmp eq i64 %.sroa.16.0.copyload63.i.i, 0, !dbg !1454
  br i1 %.not.i.i, label %.loopexit.i.i, label %.lr.ph.preheader.i.i, !dbg !1454

.lr.ph.preheader.i.i:                             ; preds = %21
  br label %.lr.ph.i.i, !dbg !1454

.critedge.i19.i.i:                                ; preds = %.lr.ph.i40.i.i, %list.RocList.getAllocationElementCount.exit.i37.i.i, %list.RocList.isUnique.exit.thread.i33.i.i, %list.RocList.isUnique.exit.i29.i.i
  %29 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !1454
  %30 = shl i64 %.sroa.453.0.copyload.i.i, 1, !dbg !1454
  %isneg.i.i17.i.i = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1454
  %31 = select i1 %isneg.i.i17.i.i, i64 %30, i64 %29, !dbg !1454
  %32 = icmp ne i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1454
  %33 = icmp ne i64 %31, 0, !dbg !1454
  %or.cond.i.i18.i.i = select i1 %32, i1 %33, i1 false, !dbg !1454
  br i1 %or.cond.i.i18.i.i, label %34, label %list.RocList.decref.exit41.i.i, !dbg !1454

34:                                               ; preds = %.critedge.i19.i.i
  %35 = inttoptr i64 %31 to ptr, !dbg !1454
  %36 = getelementptr inbounds i64, ptr %35, i64 -1, !dbg !1454
  %37 = load i64, ptr %36, align 8, !dbg !1454, !noalias !1462
  %.not.i.i20.i.i = icmp eq i64 %37, 0, !dbg !1454
  br i1 %.not.i.i20.i.i, label %list.RocList.decref.exit41.i.i, label %38, !dbg !1454

38:                                               ; preds = %34
  %39 = add i64 %37, -1, !dbg !1454
  store i64 %39, ptr %36, align 8, !dbg !1454, !noalias !1462
  %40 = icmp eq i64 %37, -9223372036854775808, !dbg !1454
  br i1 %40, label %41, label %list.RocList.decref.exit41.i.i, !dbg !1454

41:                                               ; preds = %38
  %42 = getelementptr inbounds i8, ptr %36, i64 -8, !dbg !1454
  call void @roc_dealloc(ptr nonnull align 1 %42, i32 8), !dbg !1454, !noalias !1462
  br label %list.RocList.decref.exit41.i.i, !dbg !1454

.loopexit.i.i:                                    ; preds = %.lr.ph.i.i, %21
  %.sroa.352.0.copyload.i.i = phi i64 [ 0, %21 ], [ %.sroa.16.0.copyload.i.i, %.lr.ph.i.i ], !dbg !1454
  %.sroa.051.0.copyload.i.i = load ptr, ptr %2, align 8, !dbg !1454, !noalias !1462
  %sunkaddr77.i.i = getelementptr inbounds i8, ptr %2, i64 16, !dbg !1454
  %.sroa.453.0.copyload.i.i = load i64, ptr %sunkaddr77.i.i, align 8, !dbg !1454, !noalias !1462
  %isneg.i.i.i.i27.i.i = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1454
  %43 = call i64 @llvm.smax.i64(i64 %.sroa.453.0.copyload.i.i, i64 0), !dbg !1454
  %44 = select i1 %isneg.i.i.i.i27.i.i, i64 %.sroa.352.0.copyload.i.i, i64 0, !dbg !1454
  %45 = or i64 %44, %43, !dbg !1454
  %46 = icmp ne i64 %45, 0, !dbg !1454
  %brmerge.i.i.i28.i.i = select i1 %46, i1 true, i1 %isneg.i.i.i.i27.i.i, !dbg !1454
  %47 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !1454
  %48 = shl i64 %.sroa.453.0.copyload.i.i, 1, !dbg !1454
  br i1 %brmerge.i.i.i28.i.i, label %list.RocList.isUnique.exit.i29.i.i, label %list.RocList.isUnique.exit.thread.i33.i.i, !dbg !1454

list.RocList.isUnique.exit.i29.i.i:               ; preds = %.loopexit.i.i
  %49 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !1454
  %50 = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1454
  %51 = select i1 %50, i64 %48, i64 %49, !dbg !1454
  %52 = inttoptr i64 %51 to ptr, !dbg !1454
  %53 = getelementptr inbounds i64, ptr %52, i64 -1, !dbg !1454
  %54 = load i64, ptr %53, align 8, !dbg !1454, !noalias !1462
  %55 = icmp eq i64 %54, -9223372036854775808, !dbg !1454
  br i1 %55, label %list.RocList.isUnique.exit.thread.i33.i.i, label %.critedge.i19.i.i, !dbg !1454

list.RocList.isUnique.exit.thread.i33.i.i:        ; preds = %list.RocList.isUnique.exit.i29.i.i, %.loopexit.i.i
  %.pre-phi22.i30.i.i = phi ptr [ %52, %list.RocList.isUnique.exit.i29.i.i ], [ %.sroa.051.0.copyload.i.i, %.loopexit.i.i ], !dbg !1454
  %.pre-phi20.i31.i.i = phi i64 [ %51, %list.RocList.isUnique.exit.i29.i.i ], [ %47, %.loopexit.i.i ], !dbg !1454
  %.not.i32.i.i = icmp eq i64 %.pre-phi20.i31.i.i, 0, !dbg !1454
  br i1 %.not.i32.i.i, label %.critedge.i19.i.i, label %56, !dbg !1454

56:                                               ; preds = %list.RocList.isUnique.exit.thread.i33.i.i
  %57 = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1454
  br i1 %57, label %58, label %list.RocList.getAllocationElementCount.exit.i37.i.i, !dbg !1454

58:                                               ; preds = %56
  %59 = inttoptr i64 %48 to ptr, !dbg !1454
  %60 = getelementptr inbounds i64, ptr %59, i64 -2, !dbg !1454
  %common.ret.op.in.i.sroa.speculate.load.10.i34.i.i = load i64, ptr %60, align 8, !dbg !1454, !noalias !1462
  br label %list.RocList.getAllocationElementCount.exit.i37.i.i, !dbg !1454

list.RocList.getAllocationElementCount.exit.i37.i.i: ; preds = %58, %56
  %common.ret.op.in.i.sroa.speculated.i35.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i34.i.i, %58 ], [ %.sroa.352.0.copyload.i.i, %56 ], !dbg !1454
  %.not16.i36.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i35.i.i, 0, !dbg !1454
  br i1 %.not16.i36.i.i, label %.critedge.i19.i.i, label %.lr.ph.i40.preheader.i.i, !dbg !1454

.lr.ph.i40.preheader.i.i:                         ; preds = %list.RocList.getAllocationElementCount.exit.i37.i.i
  br label %.lr.ph.i40.i.i, !dbg !1454

.lr.ph.i40.i.i:                                   ; preds = %.lr.ph.i40.i.i, %.lr.ph.i40.preheader.i.i
  %lsr.iv70.i.i = phi ptr [ %.pre-phi22.i30.i.i, %.lr.ph.i40.preheader.i.i ], [ %uglygep.i.i, %.lr.ph.i40.i.i ], !dbg !1454
  %lsr.iv.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i35.i.i, %.lr.ph.i40.preheader.i.i ], [ %lsr.iv.next.i.i, %.lr.ph.i40.i.i ], !dbg !1454
  %load_opaque.i = load { i64, %list.RocList }, ptr %lsr.iv70.i.i, align 8, !dbg !1466, !noalias !1462
  call fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %load_opaque.i) #18, !dbg !1466, !noalias !1462
  %lsr.iv.next.i.i = add i64 %lsr.iv.i.i, -1, !dbg !1454
  %uglygep.i.i = getelementptr i8, ptr %lsr.iv70.i.i, i64 32, !dbg !1454
  %exitcond.not.i39.i.i = icmp eq i64 %lsr.iv.next.i.i, 0, !dbg !1454
  br i1 %exitcond.not.i39.i.i, label %.critedge.i19.i.i, label %.lr.ph.i40.i.i, !dbg !1454

list.RocList.decref.exit41.i.i:                   ; preds = %41, %38, %34, %.critedge.i19.i.i
  store ptr %26, ptr %1, align 8, !dbg !1454, !alias.scope !1459, !noalias !1456
  %.sroa.450.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1454
  store i64 %.sroa.2.0.copyload.i.i, ptr %.sroa.450.0..sroa_idx.i.i, align 8, !dbg !1454, !alias.scope !1459, !noalias !1456
  %.sroa.5.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !1454
  store i64 %22, ptr %.sroa.5.0..sroa_idx.i.i, align 8, !dbg !1454, !alias.scope !1459, !noalias !1456
  br label %roc_builtins.list.replace.exit, !dbg !1454

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.preheader.i.i
  %lsr.iv71.i.i = phi ptr [ %26, %.lr.ph.preheader.i.i ], [ %uglygep72.i.i, %.lr.ph.i.i ], !dbg !1454
  %.064.i.i = phi i64 [ %61, %.lr.ph.i.i ], [ 0, %.lr.ph.preheader.i.i ], !dbg !1454
  %load_opaque.i38 = load { i64, %list.RocList }, ptr %lsr.iv71.i.i, align 8, !dbg !1468, !noalias !1462
  call fastcc void @"#Attr_#inc_8"({ i64, %list.RocList } %load_opaque.i38, i64 1) #18, !dbg !1468, !noalias !1462
  %61 = add nuw i64 %.064.i.i, 1, !dbg !1454
  %sunkaddr78.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1454
  %.sroa.16.0.copyload.i.i = load i64, ptr %sunkaddr78.i.i, align 8, !dbg !1454, !noalias !1462
  %uglygep72.i.i = getelementptr i8, ptr %lsr.iv71.i.i, i64 32, !dbg !1454
  %62 = icmp ult i64 %61, %.sroa.16.0.copyload.i.i, !dbg !1454
  br i1 %62, label %.lr.ph.i.i, label %.loopexit.i.i, !dbg !1454

roc_builtins.list.replace.exit:                   ; preds = %list.RocList.isUnique.exit.thread.i.i, %list.RocList.decref.exit.i.i, %list.RocList.decref.exit41.i.i
  %63 = load ptr, ptr %1, align 8, !dbg !1454, !noalias !1456, !nonnull !577
  %64 = mul nuw i64 32, %"#arg2", !dbg !1454
  %65 = getelementptr inbounds i8, ptr %63, i64 %64, !dbg !1454
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %output_element_as_opaque, ptr align 8 %65, i64 ptrtoint (ptr getelementptr ({ i64, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !1472, !noalias !1456
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr ({ i64, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !1476, !noalias !1456
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !dbg !1454
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca137), !dbg !1454
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !1454
  call void @llvm.lifetime.end.p0(i64 24, ptr %2), !dbg !1454
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1454
  %load_list.elt12 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1454
  %load_list.unpack13 = load i64, ptr %load_list.elt12, align 8, !dbg !1454
  %load_list.elt14 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1454
  %load_list.unpack15 = load i64, ptr %load_list.elt14, align 8, !dbg !1454
  %load_element.unpack = load i64, ptr %output_element_as_opaque, align 8, !dbg !1454
  %load_element.elt17 = getelementptr inbounds { i64, %list.RocList }, ptr %output_element_as_opaque, i64 0, i32 1, !dbg !1454
  %load_element.unpack18.unpack = load ptr, ptr %load_element.elt17, align 8, !dbg !1454
  %load_element.unpack18.elt20 = getelementptr inbounds { i64, %list.RocList }, ptr %output_element_as_opaque, i64 0, i32 1, i32 1, !dbg !1454
  %load_element.unpack18.unpack21 = load i64, ptr %load_element.unpack18.elt20, align 8, !dbg !1454
  %load_element.unpack18.elt22 = getelementptr inbounds { i64, %list.RocList }, ptr %output_element_as_opaque, i64 0, i32 1, i32 2, !dbg !1454
  %load_element.unpack18.unpack23 = load i64, ptr %load_element.unpack18.elt22, align 8, !dbg !1454
  store ptr %load_list.unpack, ptr %use_replace_result_record, align 8, !dbg !1454
  %use_replace_result_record.repack27 = getelementptr inbounds %list.RocList, ptr %use_replace_result_record, i64 0, i32 1, !dbg !1454
  store i64 %load_list.unpack13, ptr %use_replace_result_record.repack27, align 8, !dbg !1454
  %use_replace_result_record.repack29 = getelementptr inbounds %list.RocList, ptr %use_replace_result_record, i64 0, i32 2, !dbg !1454
  store i64 %load_list.unpack15, ptr %use_replace_result_record.repack29, align 8, !dbg !1454
  %use_replace_result_record.repack25 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %use_replace_result_record, i64 0, i32 1, !dbg !1454
  store i64 %load_element.unpack, ptr %use_replace_result_record.repack25, align 8, !dbg !1454
  %use_replace_result_record.repack25.repack31 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %use_replace_result_record, i64 0, i32 1, i32 1, !dbg !1454
  store ptr %load_element.unpack18.unpack, ptr %use_replace_result_record.repack25.repack31, align 8, !dbg !1454
  %use_replace_result_record.repack25.repack31.repack33 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %use_replace_result_record, i64 0, i32 1, i32 1, i32 1, !dbg !1454
  store i64 %load_element.unpack18.unpack21, ptr %use_replace_result_record.repack25.repack31.repack33, align 8, !dbg !1454
  %use_replace_result_record.repack25.repack31.repack35 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %use_replace_result_record, i64 0, i32 1, i32 1, i32 2, !dbg !1454
  store i64 %load_element.unpack18.unpack23, ptr %use_replace_result_record.repack25.repack31.repack35, align 8, !dbg !1454
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %use_replace_result_record, i64 56, i1 false), !dbg !1454
  ret void, !dbg !1454
}

define internal fastcc {} @Parser_buildPrimitiveParser_c5af93aace764e1d51d7949776965fec1e25545875812c183e47de135bc13ad3({} %fun) !dbg !1478 {
entry:
  ret {} %fun, !dbg !1479
}

define internal fastcc i1 @List_517_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83(i64 %elem, i64 %delimiter) !dbg !1481 {
entry:
  %call = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %elem, i64 %delimiter), !dbg !1482
  ret i1 %call, !dbg !1482
}

define internal fastcc void @List_iterate_c84245e9d5a8bbcea28f19811f38b2e7a05f277c949080724954fddcea11aca3(%list.RocList %list, {} %init, ptr %func, ptr %0) !dbg !1484 {
entry:
  %result_value = alloca { [0 x i8], i8 }, align 8, !dbg !1485
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !1485
  call fastcc void @List_iterHelp_405afdd54e1519581be52a8c8268ff856d1e183e22d746e36b8e1e892557df7(%list.RocList %list, {} %init, ptr %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !1485
  %1 = load i8, ptr %result_value, align 8, !dbg !1485
  store i8 %1, ptr %0, align 1, !dbg !1485
  ret void, !dbg !1485
}

define internal fastcc void @Parser_153_bd9bed80b6a3af5da42dd8318d3afdafa7dfe83cc9b87136c829aee729798a93(%list.RocList %input, ptr %parser, ptr %0) !dbg !1487 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_manyImpl_b33a35188f4996a49ae9457b7b56b76f0e032371dbd4bd99b86def972ef40(ptr %parser, %list.RocList zeroinitializer, %list.RocList %input, ptr nonnull %result_value), !dbg !1488
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1488
  ret void, !dbg !1488
}

define internal fastcc void @List_iterHelp_28b81340646419744ffe2153acaa8e39d3c2d10c2a51eb5702318112c7c5(%list.RocList %"285", {} %"286", %list.RocList %"287", i64 %"288", i64 %"289", ptr %0) !dbg !1490 {
entry:
  %tag_alloca16 = alloca { [0 x i8], i8 }, align 8, !dbg !1491
  %tag_alloca = alloca { [0 x i8], i8 }, align 8, !dbg !1491
  %result_value = alloca { [0 x i8], i8 }, align 8, !dbg !1491
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"287", i64 1), !dbg !1491
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"285", i64 1), !dbg !1491
  br label %joinpointcont, !dbg !1491

joinpointcont:                                    ; preds = %then_block7, %entry
  %joinpointarg3 = phi i64 [ %"288", %entry ], [ %call10, %then_block7 ], !dbg !1491
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg3, i64 %"289"), !dbg !1491
  br i1 %call, label %then_block, label %else_block, !dbg !1491

then_block:                                       ; preds = %joinpointcont
  %call5 = call fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %"285", i64 %joinpointarg3), !dbg !1491
  call fastcc void @List_looper_48ef2ef1548ac84926096e9c2bcc73d52a4ed3ed12a64c12eda477d53f3({} %"286", i64 %call5, %list.RocList %"287", ptr nonnull %result_value), !dbg !1491
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1491
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1491
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1491
  br i1 %eq_u8, label %then_block7, label %else_block8, !dbg !1491

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"285"), !dbg !1491
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"287"), !dbg !1491
  %tag_id_ptr18 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca16, i64 0, i32 1, !dbg !1491
  store i8 1, ptr %tag_id_ptr18, align 8, !dbg !1491
  %1 = load i8, ptr %tag_alloca16, align 8, !dbg !1491
  store i8 %1, ptr %0, align 1, !dbg !1491
  ret void, !dbg !1491

then_block7:                                      ; preds = %then_block
  %call10 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg3, i64 1), !dbg !1491
  br label %joinpointcont, !dbg !1491

else_block8:                                      ; preds = %then_block
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"285"), !dbg !1491
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"287"), !dbg !1491
  %tag_id_ptr14 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1491
  store i8 0, ptr %tag_id_ptr14, align 8, !dbg !1491
  %2 = load i8, ptr %tag_alloca, align 8, !dbg !1491
  store i8 %2, ptr %0, align 1, !dbg !1491
  ret void, !dbg !1491
}

define internal fastcc void @List_replace_6c6ac529604932be9f613389ac656fb39037eb79cbe1d537d9bdd99c2563108d(%list.RocList %list, i64 %index, { i64, %list.RocList } %newValue, ptr %0) !dbg !1493 {
entry:
  %struct_alloca = alloca { %list.RocList, { i64, %list.RocList } }, align 8, !dbg !1494
  %result_value = alloca { %list.RocList, { i64, %list.RocList } }, align 8, !dbg !1494
  %call = tail call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %list), !dbg !1494
  %call1 = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %index, i64 %call), !dbg !1494
  br i1 %call1, label %then_block, label %else_block, !dbg !1494

then_block:                                       ; preds = %entry
  call fastcc void @List_replaceUnsafe_46849c3b86f45f4f9e25198bc9b2ae6bcae76ebfbd692c6f18d9d9111cb9233c(%list.RocList %list, i64 %index, { i64, %list.RocList } %newValue, ptr nonnull %result_value), !dbg !1494
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1494
  ret void, !dbg !1494

else_block:                                       ; preds = %entry
  %list.elt = extractvalue %list.RocList %list, 0, !dbg !1494
  store ptr %list.elt, ptr %struct_alloca, align 8, !dbg !1494
  %struct_alloca.repack3 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1494
  %list.elt4 = extractvalue %list.RocList %list, 1, !dbg !1494
  store i64 %list.elt4, ptr %struct_alloca.repack3, align 8, !dbg !1494
  %struct_alloca.repack5 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1494
  %list.elt6 = extractvalue %list.RocList %list, 2, !dbg !1494
  store i64 %list.elt6, ptr %struct_alloca.repack5, align 8, !dbg !1494
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1494
  %newValue.elt = extractvalue { i64, %list.RocList } %newValue, 0, !dbg !1494
  store i64 %newValue.elt, ptr %struct_field_gep2, align 8, !dbg !1494
  %struct_field_gep2.repack7 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1494
  %newValue.elt8 = extractvalue { i64, %list.RocList } %newValue, 1, !dbg !1494
  %newValue.elt8.elt = extractvalue %list.RocList %newValue.elt8, 0, !dbg !1494
  store ptr %newValue.elt8.elt, ptr %struct_field_gep2.repack7, align 8, !dbg !1494
  %struct_field_gep2.repack7.repack9 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %struct_alloca, i64 0, i32 1, i32 1, i32 1, !dbg !1494
  %newValue.elt8.elt10 = extractvalue %list.RocList %newValue.elt8, 1, !dbg !1494
  store i64 %newValue.elt8.elt10, ptr %struct_field_gep2.repack7.repack9, align 8, !dbg !1494
  %struct_field_gep2.repack7.repack11 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %struct_alloca, i64 0, i32 1, i32 1, i32 2, !dbg !1494
  %newValue.elt8.elt12 = extractvalue %list.RocList %newValue.elt8, 2, !dbg !1494
  store i64 %newValue.elt8.elt12, ptr %struct_field_gep2.repack7.repack11, align 8, !dbg !1494
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, i64 56, i1 false), !dbg !1494
  ret void, !dbg !1494
}

define internal fastcc void @Str_firstMatch_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00(ptr %haystack, ptr %needle, ptr %0) !dbg !1496 {
entry:
  %result_value = alloca { [1 x i64], i8 }, align 8, !dbg !1497
  %call = tail call fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %haystack), !dbg !1497
  %call1 = tail call fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %needle), !dbg !1497
  %call2 = tail call fastcc i64 @Num_subSaturated_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd(i64 %call, i64 %call1), !dbg !1497
  call fastcc void @Str_firstMatchHelp_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0(ptr %haystack, ptr %needle, i64 0, i64 %call2, ptr nonnull %result_value), !dbg !1497
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %result_value, i64 16, i1 false), !dbg !1497
  ret void, !dbg !1497
}

define internal fastcc { {}, { { {}, {} }, {} } } @Parser_apply_f0b2dd2ef4827f9ec2d49f375ba7c16ec7ebf163abea129818bfb85fe1b9cde({} %funParser, { { {}, {} }, {} } %valParser) !dbg !1499 {
entry:
  %insert_record_field = insertvalue { {}, { { {}, {} }, {} } } zeroinitializer, {} %funParser, 0, !dbg !1500
  %insert_record_field1 = insertvalue { {}, { { {}, {} }, {} } } %insert_record_field, { { {}, {} }, {} } %valParser, 1, !dbg !1500
  %call = tail call fastcc { {}, { { {}, {} }, {} } } @Parser_buildPrimitiveParser_5555960d2574665268663bcbbd6b17975c35e711af9b8ea918dead31b5e3b({ {}, { { {}, {} }, {} } } %insert_record_field1), !dbg !1500
  ret { {}, { { {}, {} }, {} } } %call, !dbg !1500
}

define internal fastcc void @Task_53_ba11fd7bfef4db24218e934bc7c8a92abf43883548efce0129eb6de6acb7c1({} %"154", { { %str.RocStr, {} }, { [1 x i32], i8 } } %"#arg_closure", ptr %0) !dbg !1502 {
entry:
  %result_value10 = alloca { [1 x i32], i8 }, align 8, !dbg !1503
  %load_element5 = alloca { [3 x i64], i8 }, align 8, !dbg !1503
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !1503
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1503
  %struct_field = alloca { [1 x i32], i8 }, align 8, !dbg !1503
  %struct_field_access_record_1 = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"#arg_closure", 1, !dbg !1503
  store { [1 x i32], i8 } %struct_field_access_record_1, ptr %struct_field, align 8, !dbg !1503
  %struct_field_access_record_0 = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"#arg_closure", 0, !dbg !1503
  call fastcc void @Task_67_2e277b1ed53576d63d29fbc0f3c07e22aa5da56b069c997539f375a9e9c91c({} zeroinitializer, { %str.RocStr, {} } %struct_field_access_record_0, ptr nonnull %result_value), !dbg !1503
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1503
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1503
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1503
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1503

then_block:                                       ; preds = %entry
  %tag_id_ptr2 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1503
  store i8 1, ptr %tag_id_ptr2, align 4, !dbg !1503
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !1503
  store i64 %1, ptr %0, align 4, !dbg !1503
  ret void, !dbg !1503

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element5, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !1503
  %tag_id_ptr6 = getelementptr inbounds { [1 x i32], i8 }, ptr %struct_field, i64 0, i32 1, !dbg !1503
  %load_tag_id7 = load i8, ptr %tag_id_ptr6, align 4, !dbg !1503
  switch i8 %load_tag_id7, label %default [
    i8 0, label %branch0
  ], !dbg !1503

default:                                          ; preds = %else_block
  %call9 = call fastcc i32 @_10_30fe2aeefb9e6a6c9b187470d1a66a216dd31d2ce213c14343daed4ac570(ptr nonnull %load_element5), !dbg !1503
  br label %joinpointcont, !dbg !1503

joinpointcont:                                    ; preds = %default, %branch0
  %joinpointarg = phi i32 [ %call, %branch0 ], [ %call9, %default ], !dbg !1503
  call fastcc void @Task_38_de9272725995dfe27820e1ab4317eddb95d1f4a0c9c3bf59609e9c2d44531d9({} zeroinitializer, i32 %joinpointarg, ptr nonnull %result_value10), !dbg !1503
  %2 = load i64, ptr %result_value10, align 8, !dbg !1503
  store i64 %2, ptr %0, align 4, !dbg !1503
  ret void, !dbg !1503

branch0:                                          ; preds = %else_block
  %call = call fastcc i32 @_7_ed66f261fc50a6eaee12f77aeb9aedefd9894b0b5b2ba1297f2d6ae1a3a6187(ptr nonnull %load_element5, ptr nonnull %struct_field), !dbg !1503
  br label %joinpointcont, !dbg !1503
}

define internal fastcc i1 @List_all_12a8ad799c7b34402483623f9b421f07775e1054bb6bfcf2ae122184609a(%list.RocList %list, %list.RocList %predicate) !dbg !1505 {
entry:
  %result_value = alloca { [0 x i8], i8 }, align 8
  call fastcc void @List_iterate_21b5c7d5305aa5ff4df495f05c9e59c37d76367eacec9dd321a0e78143dfc4a3(%list.RocList %list, {} zeroinitializer, %list.RocList %predicate, ptr nonnull %result_value), !dbg !1506
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1506
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1506
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1506
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1506

then_block:                                       ; preds = %entry
  %call = call fastcc i1 @Bool_true_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb(), !dbg !1506
  ret i1 %call, !dbg !1506

else_block:                                       ; preds = %entry
  %call1 = call fastcc i1 @Bool_false_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671(), !dbg !1506
  ret i1 %call1, !dbg !1506
}

define internal fastcc void @Result_try_3c58d86b4437e7512e2b91aaabac14e86a30d0bfd8a27923c73b19fd673fff(ptr %result, %list.RocList %transform, ptr %0) !dbg !1508 {
entry:
  %tag_alloca = alloca { [1 x i8], i8 }, align 8, !dbg !1509
  %result_value = alloca { [1 x i8], i8 }, align 8, !dbg !1509
  %load_element = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1509
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1509
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1509
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1509
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1509

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result, i64 48, i1 false), !dbg !1509
  call fastcc void @Five_53_b9ee46417ee03e3b7a521bca8ecd1f011217aed1144f9af6d34990efa857(ptr nonnull %load_element, %list.RocList %transform, ptr nonnull %result_value), !dbg !1509
  %1 = load i16, ptr %result_value, align 8, !dbg !1509
  store i16 %1, ptr %0, align 1, !dbg !1509
  ret void, !dbg !1509

else_block:                                       ; preds = %entry
  %load_element4 = load i1, ptr %result, align 1, !dbg !1509
  store i1 %load_element4, ptr %tag_alloca, align 8, !dbg !1509
  %tag_id_ptr5 = getelementptr inbounds { [1 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1509
  store i8 0, ptr %tag_id_ptr5, align 1, !dbg !1509
  %2 = load i16, ptr %tag_alloca, align 8, !dbg !1509
  store i16 %2, ptr %0, align 1, !dbg !1509
  ret void, !dbg !1509
}

define internal fastcc i1 @List_isEmpty_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0(%list.RocList %list) !dbg !1511 {
entry:
  %call = tail call fastcc i64 @List_len_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4(%list.RocList %list), !dbg !1512
  %call1 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %call, i64 0), !dbg !1512
  ret i1 %call1, !dbg !1512
}

define internal fastcc { i64, i64 } @Five_26_101bd9114cb72f29d6b22ed6cabba79bcc71b9b9038a04a56e8c4a52082be(i64 %y, i64 %x) !dbg !1514 {
entry:
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %x, 0, !dbg !1515
  %insert_record_field1 = insertvalue { i64, i64 } %insert_record_field, i64 %y, 1, !dbg !1515
  ret { i64, i64 } %insert_record_field1, !dbg !1515
}

define internal fastcc void @Result_mapErr_c5b690bc22238d3ac9e996befafbf2c431a107de306ea8b8318875c9fcba16(ptr %result, {} %transform, ptr %0) !dbg !1517 {
entry:
  %tag_alloca6 = alloca { [9 x i64], i8 }, align 8, !dbg !1518
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !1518
  %result_value = alloca { [8 x i64], i8 }, align 8, !dbg !1518
  %load_element5 = alloca { [3 x i64], i8 }, align 8, !dbg !1518
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !1518
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1518
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1518
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1518
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1518

then_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %result, align 8, !dbg !1518
  %load_element.elt9 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !1518
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !1518
  %load_element.elt11 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !1518
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !1518
  store ptr %load_element.unpack, ptr %tag_alloca, align 8, !dbg !1518
  %tag_alloca.repack14 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1518
  store i64 %load_element.unpack10, ptr %tag_alloca.repack14, align 8, !dbg !1518
  %tag_alloca.repack16 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1518
  store i64 %load_element.unpack12, ptr %tag_alloca.repack16, align 8, !dbg !1518
  %tag_id_ptr2 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1518
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !1518
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !1518
  ret void, !dbg !1518

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element5, ptr noundef nonnull align 8 dereferenceable(32) %result, i64 32, i1 false), !dbg !1518
  call fastcc void @String_44_26d17240b95ed431e64caf285536baf5e96b5875cbd172e5d417c1ae92a275(ptr nonnull %load_element5, ptr nonnull %result_value), !dbg !1518
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !1518
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca6, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !1518
  %tag_id_ptr8 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca6, i64 0, i32 1, !dbg !1518
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !1518
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca6, i64 80, i1 false), !dbg !1518
  ret void, !dbg !1518
}

define internal fastcc void @List_walk_99c9f773566b1d5d689233ef7949cf16c8797c970a4668678361d8c89d24f20(%list.RocList %list, ptr %init, {} %func, ptr %0) !dbg !1520 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !1521
  %call = tail call fastcc i64 @List_len_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50(%list.RocList %list), !dbg !1521
  call fastcc void @List_walkHelp_935229af12e1c6ee752a73f7b73add5a7c7a22cfba9e577e778e240ed627a(%list.RocList %list, ptr %init, {} %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !1521
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1521
  ret void, !dbg !1521
}

define internal fastcc void @Dict_findFirstUnroll_f2e0cf21cda4e3c878e1ab216b192b2e2825d82c3b48a3a8bb6d7de6e7e20e(%list.RocList %buckets, i64 %bucketIndex, i32 %distAndFingerprint, %list.RocList %data, i64 %key, ptr %0) !dbg !1523 {
entry:
  %result_value17 = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1524
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1524
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1524
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1524
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %buckets, i64 %bucketIndex), !dbg !1524
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !1524
  %call1 = tail call fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %distAndFingerprint, i32 %struct_field_access_record_1), !dbg !1524
  br i1 %call1, label %then_block, label %else_block, !dbg !1524

then_block:                                       ; preds = %entry
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !1524
  %call2 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_0), !dbg !1524
  %call3 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %data, i64 %call2), !dbg !1524
  %struct_field_access_record_04 = extractvalue { i64, %list.RocList } %call3, 0, !dbg !1524
  %call6 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field_access_record_04, i64 %key), !dbg !1524
  br i1 %call6, label %then_block8, label %else_block9, !dbg !1524

else_block:                                       ; preds = %entry
  %call14 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1524
  %call15 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call14), !dbg !1524
  %call16 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1524
  call fastcc void @Dict_findSecondUnroll_8f804d847f17ce19e983ee3d457d4c97a1c72145f357931dcbff3cd6dbfe4c0(%list.RocList %buckets, i64 %call15, i32 %call16, %list.RocList %data, i64 %key, ptr nonnull %result_value17), !dbg !1524
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value17, i64 40, i1 false), !dbg !1524
  ret void, !dbg !1524

then_block8:                                      ; preds = %then_block
  %struct_field_access_record_15 = extractvalue { i64, %list.RocList } %call3, 1, !dbg !1524
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field_access_record_15, i64 1), !dbg !1524
  %struct_field_access_record_15.elt = extractvalue %list.RocList %struct_field_access_record_15, 0, !dbg !1524
  store ptr %struct_field_access_record_15.elt, ptr %tag_alloca, align 8, !dbg !1524
  %tag_alloca.repack18 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1524
  %struct_field_access_record_15.elt19 = extractvalue %list.RocList %struct_field_access_record_15, 1, !dbg !1524
  store i64 %struct_field_access_record_15.elt19, ptr %tag_alloca.repack18, align 8, !dbg !1524
  %tag_alloca.repack20 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1524
  %struct_field_access_record_15.elt21 = extractvalue %list.RocList %struct_field_access_record_15, 2, !dbg !1524
  store i64 %struct_field_access_record_15.elt21, ptr %tag_alloca.repack20, align 8, !dbg !1524
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1524
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1524
  store i64 %bucketIndex, ptr %struct_alloca, align 8, !dbg !1524
  %struct_field_gep10 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1524
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep10, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1524
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1524
  ret void, !dbg !1524

else_block9:                                      ; preds = %then_block
  %call11 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1524
  %call12 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call11), !dbg !1524
  %call13 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1524
  call fastcc void @Dict_findSecondUnroll_8f804d847f17ce19e983ee3d457d4c97a1c72145f357931dcbff3cd6dbfe4c0(%list.RocList %buckets, i64 %call12, i32 %call13, %list.RocList %data, i64 %key, ptr nonnull %result_value), !dbg !1524
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1524
  ret void, !dbg !1524
}

define internal fastcc void @Parser_parsePartial_179b946120c9a08baf2d1f2247148c3fa11c6290279fe069ff1ca32539941(ptr %"246", %list.RocList %input, ptr %0) !dbg !1526 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Parser_200_ae34dcb56c8c3134c426993589829c91bf4dcc21e6be643466888bcbe12(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !1527
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1527
  ret void, !dbg !1527
}

define internal fastcc void @Inspect_208_47ed43a06597f89afbe2c90ac4640f89c2157f577d6fd03fdc26e32f321dc2(ptr %f1, %list.RocList %fields, ptr %0) !dbg !1529 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @List_walk_99c9f773566b1d5d689233ef7949cf16c8797c970a4668678361d8c89d24f20(%list.RocList %fields, ptr %f1, {} zeroinitializer, ptr nonnull %result_value), !dbg !1530
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1530
  ret void, !dbg !1530
}

define internal fastcc void @Parser_buildPrimitiveParser_87aadac9e37ed967241d19aabb44c6dc9504f6f6259d63573422f627ad38f(ptr %fun, ptr %0) !dbg !1532 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %fun, i64 48, i1 false), !dbg !1533
  ret void, !dbg !1533
}

define internal fastcc void @Task_67_2e277b1ed53576d63d29fbc0f3c07e22aa5da56b069c997539f375a9e9c91c({} %"171", { %str.RocStr, {} } %"#arg_closure", ptr %0) !dbg !1535 {
entry:
  %tag_alloca8 = alloca { [4 x i64], i8 }, align 8, !dbg !1536
  %result_value6 = alloca { [3 x i64], i8 }, align 8, !dbg !1536
  %load_element5 = alloca %str.RocStr, align 8, !dbg !1536
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1536
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !1536
  %struct_field = alloca %str.RocStr, align 8, !dbg !1536
  %struct_field_access_record_0 = extractvalue { %str.RocStr, {} } %"#arg_closure", 0, !dbg !1536
  %struct_field_access_record_0.elt = extractvalue %str.RocStr %struct_field_access_record_0, 0, !dbg !1536
  store ptr %struct_field_access_record_0.elt, ptr %struct_field, align 8, !dbg !1536
  %struct_field.repack11 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 1, !dbg !1536
  %struct_field_access_record_0.elt12 = extractvalue %str.RocStr %struct_field_access_record_0, 1, !dbg !1536
  store i64 %struct_field_access_record_0.elt12, ptr %struct_field.repack11, align 8, !dbg !1536
  %struct_field.repack13 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 2, !dbg !1536
  %struct_field_access_record_0.elt14 = extractvalue %str.RocStr %struct_field_access_record_0, 2, !dbg !1536
  store i64 %struct_field_access_record_0.elt14, ptr %struct_field.repack13, align 8, !dbg !1536
  call fastcc void @PlatformTasks_task_closure_stderrLine_f0e2e1c8f8e8fdb997672cfd09071a69f19e35d6893c96be1ae254f383bdf({} zeroinitializer, ptr nonnull %struct_field, ptr nonnull %result_value), !dbg !1536
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1536
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1536
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1536
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1536

then_block:                                       ; preds = %entry
  %tag_id_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1536
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !1536
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1536
  ret void, !dbg !1536

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1536
  call fastcc void @Stderr_handleErr_871e40679fd9b63791667ec6fd3e055441f4e3fe3a86a59d7afec3c654a26f4(ptr nonnull %load_element5, ptr nonnull %result_value6), !dbg !1536
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element5), !dbg !1536
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %result_value6, align 8, !dbg !1536
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca8, align 8, !dbg !1536
  %tag_id_ptr10 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !1536
  store i8 0, ptr %tag_id_ptr10, align 8, !dbg !1536
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca8, i64 40, i1 false), !dbg !1536
  ret void, !dbg !1536
}

define internal fastcc void @Parser_buildPrimitiveParser_61f44a74e94cb8c1c2db3f3f383cd9d354fdf57d11ea12f95c51b322f5e43395(ptr %fun, ptr %0) !dbg !1538 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %fun, i64 128, i1 false), !dbg !1539
  ret void, !dbg !1539
}

define internal fastcc void @Parser_manyImpl_c028e8ebec9626f9ffbdf64d76d758431ce5c5566ceefcd869c6b9c72e5a1d(ptr %"298", %list.RocList %"299", %list.RocList %"300", ptr %0) !dbg !1541 {
entry:
  %tmp_output_for_jmp8 = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8
  %load_element = alloca { %list.RocList, { i64, i64 } }, align 8
  %tag_alloca = alloca { [6 x i64], i8 }, align 8
  %struct_alloca3 = alloca { { %list.RocList, %list.RocList } }, align 8
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8
  %result_value = alloca { [5 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8
  %joinpoint_arg_alloca = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %"300", i64 1), !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(128) %"298", i64 128, i1 false), !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp, i64 128, i1 false), !dbg !1542
  br label %joinpointcont, !dbg !1542

joinpointcont:                                    ; preds = %else_block, %entry
  %joinpointarg = phi %list.RocList [ %"299", %entry ], [ %call, %else_block ], !dbg !1542
  %joinpointarg1 = phi %list.RocList [ %"300", %entry ], [ %struct_field13, %else_block ], !dbg !1542
  call fastcc void @"#Attr_#inc_43"(ptr nonnull %joinpoint_arg_alloca, i64 1), !dbg !1542
  call fastcc void @Parser_parsePartial_9a3b59329aee34273e2c05ecea1c75b744fff87dc1d841e1bced5ff5b9764(ptr nonnull %joinpoint_arg_alloca, %list.RocList %joinpointarg1, ptr nonnull %result_value), !dbg !1542
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1542
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1542
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !1542
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1542

then_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_46"(ptr nonnull %result_value), !dbg !1542
  call fastcc void @"#Attr_#dec_43"(ptr nonnull %joinpoint_arg_alloca), !dbg !1542
  %joinpointarg1.elt = extractvalue %list.RocList %joinpointarg1, 0, !dbg !1542
  store ptr %joinpointarg1.elt, ptr %struct_alloca, align 8, !dbg !1542
  %struct_alloca.repack17 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1542
  %joinpointarg1.elt18 = extractvalue %list.RocList %joinpointarg1, 1, !dbg !1542
  store i64 %joinpointarg1.elt18, ptr %struct_alloca.repack17, align 8, !dbg !1542
  %struct_alloca.repack19 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1542
  %joinpointarg1.elt20 = extractvalue %list.RocList %joinpointarg1, 2, !dbg !1542
  store i64 %joinpointarg1.elt20, ptr %struct_alloca.repack19, align 8, !dbg !1542
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !1542
  %joinpointarg.elt = extractvalue %list.RocList %joinpointarg, 0, !dbg !1542
  store ptr %joinpointarg.elt, ptr %struct_field_gep2, align 8, !dbg !1542
  %struct_field_gep2.repack21 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1542
  %joinpointarg.elt22 = extractvalue %list.RocList %joinpointarg, 1, !dbg !1542
  store i64 %joinpointarg.elt22, ptr %struct_field_gep2.repack21, align 8, !dbg !1542
  %struct_field_gep2.repack23 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1542
  %joinpointarg.elt24 = extractvalue %list.RocList %joinpointarg, 2, !dbg !1542
  store i64 %joinpointarg.elt24, ptr %struct_field_gep2.repack23, align 8, !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca3, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca3, i64 48, i1 false), !dbg !1542
  %tag_id_ptr5 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1542
  store i8 1, ptr %tag_id_ptr5, align 8, !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1542
  ret void, !dbg !1542

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_12"(%list.RocList %joinpointarg1), !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %load_element, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1542
  %struct_field.unpack = load ptr, ptr %load_element, align 8, !dbg !1542
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1542
  %struct_field.elt9 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 1, !dbg !1542
  %struct_field.unpack10 = load i64, ptr %struct_field.elt9, align 8, !dbg !1542
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack10, 1, !dbg !1542
  %struct_field.elt11 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 2, !dbg !1542
  %struct_field.unpack12 = load i64, ptr %struct_field.elt11, align 8, !dbg !1542
  %struct_field13 = insertvalue %list.RocList %2, i64 %struct_field.unpack12, 2, !dbg !1542
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %load_element, i64 0, i32 1, !dbg !1542
  %struct_field7.unpack = load i64, ptr %struct_field_access_record_1, align 8, !dbg !1542
  %3 = insertvalue { i64, i64 } poison, i64 %struct_field7.unpack, 0, !dbg !1542
  %struct_field7.elt14 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %load_element, i64 0, i32 1, i32 1, !dbg !1542
  %struct_field7.unpack15 = load i64, ptr %struct_field7.elt14, align 8, !dbg !1542
  %struct_field716 = insertvalue { i64, i64 } %3, i64 %struct_field7.unpack15, 1, !dbg !1542
  %call = call fastcc %list.RocList @List_append_c6e34737223a4b123e4ef4b086ad92b3ead64b519536ae28b552b4718b7124e(%list.RocList %joinpointarg, { i64, i64 } %struct_field716), !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp8, ptr noundef nonnull align 8 dereferenceable(128) %joinpoint_arg_alloca, i64 128, i1 false), !dbg !1542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp8, i64 128, i1 false), !dbg !1542
  br label %joinpointcont, !dbg !1542
}

define internal fastcc void @Five_34_2937f1927d9516ec2e3625505ecd4d60f2cee887835d44646ab3e3d01375af(%list.RocList %updates, %list.RocList %rules, ptr %0) !dbg !1544 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !1545
  %struct_alloca2 = alloca { { %list.RocList, %list.RocList } }, align 8, !dbg !1545
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1545
  tail call fastcc void @"#Attr_#inc_4"(%list.RocList %updates, i64 1), !dbg !1545
  tail call fastcc void @"#Attr_#inc_2"(%list.RocList %rules, i64 1), !dbg !1545
  %rules.elt = extractvalue %list.RocList %rules, 0, !dbg !1545
  store ptr %rules.elt, ptr %struct_alloca, align 8, !dbg !1545
  %struct_alloca.repack4 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1545
  %rules.elt5 = extractvalue %list.RocList %rules, 1, !dbg !1545
  store i64 %rules.elt5, ptr %struct_alloca.repack4, align 8, !dbg !1545
  %struct_alloca.repack6 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1545
  %rules.elt7 = extractvalue %list.RocList %rules, 2, !dbg !1545
  store i64 %rules.elt7, ptr %struct_alloca.repack6, align 8, !dbg !1545
  %struct_field_gep1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !1545
  %updates.elt = extractvalue %list.RocList %updates, 0, !dbg !1545
  store ptr %updates.elt, ptr %struct_field_gep1, align 8, !dbg !1545
  %struct_field_gep1.repack8 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1545
  %updates.elt9 = extractvalue %list.RocList %updates, 1, !dbg !1545
  store i64 %updates.elt9, ptr %struct_field_gep1.repack8, align 8, !dbg !1545
  %struct_field_gep1.repack10 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1545
  %updates.elt11 = extractvalue %list.RocList %updates, 2, !dbg !1545
  store i64 %updates.elt11, ptr %struct_field_gep1.repack10, align 8, !dbg !1545
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1545
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca2, i64 48, i1 false), !dbg !1545
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1545
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1545
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !1545
  ret void, !dbg !1545
}

define internal fastcc { %list.RocList, { i32, i32 } } @List_replace_d0954aeb42c3a999750fa5b4068c6679ed2537c3257fc7e6c4e91bdc4133ae0(%list.RocList %list, i64 %index, { i32, i32 } %newValue) !dbg !1547 {
entry:
  %call = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %list), !dbg !1548
  %call1 = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %index, i64 %call), !dbg !1548
  br i1 %call1, label %then_block, label %else_block, !dbg !1548

then_block:                                       ; preds = %entry
  %call2 = tail call fastcc { %list.RocList, { i32, i32 } } @List_replaceUnsafe_1bb73f6fafaa3656a8bf5796e2e6e6bdbd058375237d0b9be5834c8c9f54(%list.RocList %list, i64 %index, { i32, i32 } %newValue), !dbg !1548
  ret { %list.RocList, { i32, i32 } } %call2, !dbg !1548

else_block:                                       ; preds = %entry
  %insert_record_field = insertvalue { %list.RocList, { i32, i32 } } zeroinitializer, %list.RocList %list, 0, !dbg !1548
  %insert_record_field3 = insertvalue { %list.RocList, { i32, i32 } } %insert_record_field, { i32, i32 } %newValue, 1, !dbg !1548
  ret { %list.RocList, { i32, i32 } } %insert_record_field3, !dbg !1548
}

define internal fastcc i1 @Bool_isNotEq_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6(i32 %a, i32 %b) !dbg !1550 {
entry:
  %call = tail call fastcc i1 @Bool_structuralNotEq_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591(i32 %a, i32 %b), !dbg !1551
  ret i1 %call, !dbg !1551
}

define internal fastcc i1 @Bool_and_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21(i1 %"#arg1", i1 %"#arg2") !dbg !1553 {
entry:
  %bool_and = and i1 %"#arg1", %"#arg2", !dbg !1554
  ret i1 %bool_and, !dbg !1554
}

define internal fastcc void @Parser_77_8d2b92da50932d49e15c5c73b8d0a1d1e229d8198f6f22de7efaf7622e27d({ %list.RocList, {} } %"420", { { {}, {} }, {} } %valParser, ptr %0) !dbg !1556 {
entry:
  %result_value1 = alloca { [4 x i64], i8 }, align 8, !dbg !1557
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1557
  %struct_field_access_record_0 = extractvalue { %list.RocList, {} } %"420", 0, !dbg !1557
  %struct_field_access_record_1 = extractvalue { %list.RocList, {} } %"420", 1, !dbg !1557
  call fastcc void @Parser_parsePartial_3590754411a17cd0c570f24ca5606122af7e3eddb51d1a982a156e9521f4577({ { {}, {} }, {} } %valParser, %list.RocList %struct_field_access_record_0, ptr nonnull %result_value), !dbg !1557
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field_access_record_0), !dbg !1557
  call fastcc void @Result_map_cd37899bb8a8d9e6a1967d5d098545d4623f55f4fb33fb81a429834acd2bca2(ptr nonnull %result_value, {} %struct_field_access_record_1, ptr nonnull %result_value1), !dbg !1557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value1, i64 40, i1 false), !dbg !1557
  ret void, !dbg !1557
}

define internal fastcc i1 @Num_isLte_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df(i64 %"#arg1", i64 %"#arg2") !dbg !1559 {
entry:
  %lte_uint = icmp ule i64 %"#arg1", %"#arg2", !dbg !1560
  ret i1 %lte_uint, !dbg !1560
}

define internal fastcc i1 @String_59_bc413139b8bf596011dc864f2452fae94852749d6225b8d53dfd835ba68b7b(%list.RocList %leftover) !dbg !1562 {
entry:
  %call = tail call fastcc i64 @List_len_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7(%list.RocList %leftover), !dbg !1563
  %call1 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %call, i64 0), !dbg !1563
  ret i1 %call1, !dbg !1563
}

define internal fastcc void @Dict_findFirstUnroll_c8ee203993b19f9eeb79e6d9b9cb5c211fecc131b917baefe682bdc7d1dc7e(%list.RocList %buckets, i64 %bucketIndex, i32 %distAndFingerprint, %list.RocList %data, i64 %key, ptr %0) !dbg !1565 {
entry:
  %result_value17 = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1566
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1566
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1566
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1566
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %buckets, i64 %bucketIndex), !dbg !1566
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !1566
  %call1 = tail call fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %distAndFingerprint, i32 %struct_field_access_record_1), !dbg !1566
  br i1 %call1, label %then_block, label %else_block, !dbg !1566

then_block:                                       ; preds = %entry
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !1566
  %call2 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_0), !dbg !1566
  %call3 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %data, i64 %call2), !dbg !1566
  %struct_field_access_record_04 = extractvalue { i64, %list.RocList } %call3, 0, !dbg !1566
  %call6 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field_access_record_04, i64 %key), !dbg !1566
  br i1 %call6, label %then_block8, label %else_block9, !dbg !1566

else_block:                                       ; preds = %entry
  %call14 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1566
  %call15 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call14), !dbg !1566
  %call16 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1566
  call fastcc void @Dict_findSecondUnroll_d52f8c3ecf2e209e81e04dd415745749206b773d86c4d1b2bb2d3d8e8890c(%list.RocList %buckets, i64 %call15, i32 %call16, %list.RocList %data, i64 %key, ptr nonnull %result_value17), !dbg !1566
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value17, i64 40, i1 false), !dbg !1566
  ret void, !dbg !1566

then_block8:                                      ; preds = %then_block
  %struct_field_access_record_15 = extractvalue { i64, %list.RocList } %call3, 1, !dbg !1566
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field_access_record_15, i64 1), !dbg !1566
  %struct_field_access_record_15.elt = extractvalue %list.RocList %struct_field_access_record_15, 0, !dbg !1566
  store ptr %struct_field_access_record_15.elt, ptr %tag_alloca, align 8, !dbg !1566
  %tag_alloca.repack18 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1566
  %struct_field_access_record_15.elt19 = extractvalue %list.RocList %struct_field_access_record_15, 1, !dbg !1566
  store i64 %struct_field_access_record_15.elt19, ptr %tag_alloca.repack18, align 8, !dbg !1566
  %tag_alloca.repack20 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1566
  %struct_field_access_record_15.elt21 = extractvalue %list.RocList %struct_field_access_record_15, 2, !dbg !1566
  store i64 %struct_field_access_record_15.elt21, ptr %tag_alloca.repack20, align 8, !dbg !1566
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1566
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1566
  store i64 %bucketIndex, ptr %struct_alloca, align 8, !dbg !1566
  %struct_field_gep10 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1566
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep10, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1566
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1566
  ret void, !dbg !1566

else_block9:                                      ; preds = %then_block
  %call11 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1566
  %call12 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call11), !dbg !1566
  %call13 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1566
  call fastcc void @Dict_findSecondUnroll_d52f8c3ecf2e209e81e04dd415745749206b773d86c4d1b2bb2d3d8e8890c(%list.RocList %buckets, i64 %call12, i32 %call13, %list.RocList %data, i64 %key, ptr nonnull %result_value), !dbg !1566
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1566
  ret void, !dbg !1566
}

define internal fastcc void @Parser_200_15f1e1a1eceb31827fd881ac76f3839662c753cefa5c5c671aa298d8c0b43f90(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !1568 {
entry:
  %tag_alloca36 = alloca { [5 x i64], i8 }, align 8, !dbg !1569
  %struct_alloca34 = alloca { { %list.RocList, { i64, i64 } } }, align 8, !dbg !1569
  %struct_alloca = alloca { %list.RocList, { i64, i64 } }, align 8, !dbg !1569
  %struct_field32 = alloca { [3 x i64], i8 }, align 8, !dbg !1569
  %load_element28 = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1569
  %tag_alloca23 = alloca { [5 x i64], i8 }, align 8, !dbg !1569
  %load_element20 = alloca %str.RocStr, align 8, !dbg !1569
  %result_value11 = alloca { [7 x i64], i8 }, align 8, !dbg !1569
  %load_element6 = alloca { %list.RocList, { i64, i64 } }, align 8, !dbg !1569
  %tag_alloca = alloca { [5 x i64], i8 }, align 8, !dbg !1569
  %load_element = alloca %str.RocStr, align 8, !dbg !1569
  %result_value = alloca { [5 x i64], i8 }, align 8, !dbg !1569
  %struct_field1 = alloca { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !1569
  %struct_field = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !1569
  %struct_field_access_record_1 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_field, ptr noundef nonnull align 8 dereferenceable(80) %struct_field_access_record_1, i64 80, i1 false), !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field1, ptr noundef nonnull align 8 dereferenceable(48) %"#arg_closure", i64 48, i1 false), !dbg !1569
  call fastcc void @Parser_parsePartial_958eceff2afa82341097489757d62cb36e8ffccfc62ad546b1a925d35c25(ptr nonnull %struct_field1, %list.RocList %input, ptr nonnull %result_value), !dbg !1569
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1569
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1569
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !1569
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1569

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_18"(ptr nonnull %struct_field), !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1569
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !1569
  %load_tag_to_put_in_struct.elt67 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !1569
  %load_tag_to_put_in_struct.unpack68 = load i64, ptr %load_tag_to_put_in_struct.elt67, align 8, !dbg !1569
  %load_tag_to_put_in_struct.elt69 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !1569
  %load_tag_to_put_in_struct.unpack70 = load i64, ptr %load_tag_to_put_in_struct.elt69, align 8, !dbg !1569
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1569
  %tag_alloca.repack72 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1569
  store i64 %load_tag_to_put_in_struct.unpack68, ptr %tag_alloca.repack72, align 8, !dbg !1569
  %tag_alloca.repack74 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1569
  store i64 %load_tag_to_put_in_struct.unpack70, ptr %tag_alloca.repack74, align 8, !dbg !1569
  %tag_id_ptr3 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1569
  store i8 0, ptr %tag_id_ptr3, align 8, !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !1569
  ret void, !dbg !1569

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %load_element6, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1569
  %struct_field8.unpack = load ptr, ptr %load_element6, align 8, !dbg !1569
  %1 = insertvalue %list.RocList poison, ptr %struct_field8.unpack, 0, !dbg !1569
  %struct_field8.elt39 = getelementptr inbounds %list.RocList, ptr %load_element6, i64 0, i32 1, !dbg !1569
  %struct_field8.unpack40 = load i64, ptr %struct_field8.elt39, align 8, !dbg !1569
  %2 = insertvalue %list.RocList %1, i64 %struct_field8.unpack40, 1, !dbg !1569
  %struct_field8.elt41 = getelementptr inbounds %list.RocList, ptr %load_element6, i64 0, i32 2, !dbg !1569
  %struct_field8.unpack42 = load i64, ptr %struct_field8.elt41, align 8, !dbg !1569
  %struct_field843 = insertvalue %list.RocList %2, i64 %struct_field8.unpack42, 2, !dbg !1569
  %struct_field_access_record_19 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %load_element6, i64 0, i32 1, !dbg !1569
  %struct_field10.unpack = load i64, ptr %struct_field_access_record_19, align 8, !dbg !1569
  %struct_field10.elt44 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %load_element6, i64 0, i32 1, i32 1, !dbg !1569
  %struct_field10.unpack45 = load i64, ptr %struct_field10.elt44, align 8, !dbg !1569
  call fastcc void @Parser_parsePartial_551311f4cd4b771fb26caae5c14c6c179adea28ad16fbb2d47e334e0dd18b(ptr nonnull %struct_field, %list.RocList %struct_field843, ptr nonnull %result_value11), !dbg !1569
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field843), !dbg !1569
  %tag_id_ptr12 = getelementptr inbounds { [7 x i64], i8 }, ptr %result_value11, i64 0, i32 1, !dbg !1569
  %load_tag_id13 = load i8, ptr %tag_id_ptr12, align 8, !dbg !1569
  %eq_u814 = icmp eq i8 %load_tag_id13, 0, !dbg !1569
  br i1 %eq_u814, label %then_block16, label %else_block17, !dbg !1569

then_block16:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element20, ptr noundef nonnull align 8 dereferenceable(24) %result_value11, i64 24, i1 false), !dbg !1569
  %load_tag_to_put_in_struct21.unpack = load ptr, ptr %load_element20, align 8, !dbg !1569
  %load_tag_to_put_in_struct21.elt58 = getelementptr inbounds %str.RocStr, ptr %load_element20, i64 0, i32 1, !dbg !1569
  %load_tag_to_put_in_struct21.unpack59 = load i64, ptr %load_tag_to_put_in_struct21.elt58, align 8, !dbg !1569
  %load_tag_to_put_in_struct21.elt60 = getelementptr inbounds %str.RocStr, ptr %load_element20, i64 0, i32 2, !dbg !1569
  %load_tag_to_put_in_struct21.unpack61 = load i64, ptr %load_tag_to_put_in_struct21.elt60, align 8, !dbg !1569
  store ptr %load_tag_to_put_in_struct21.unpack, ptr %tag_alloca23, align 8, !dbg !1569
  %tag_alloca23.repack63 = getelementptr inbounds %str.RocStr, ptr %tag_alloca23, i64 0, i32 1, !dbg !1569
  store i64 %load_tag_to_put_in_struct21.unpack59, ptr %tag_alloca23.repack63, align 8, !dbg !1569
  %tag_alloca23.repack65 = getelementptr inbounds %str.RocStr, ptr %tag_alloca23, i64 0, i32 2, !dbg !1569
  store i64 %load_tag_to_put_in_struct21.unpack61, ptr %tag_alloca23.repack65, align 8, !dbg !1569
  %tag_id_ptr25 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca23, i64 0, i32 1, !dbg !1569
  store i8 0, ptr %tag_id_ptr25, align 8, !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca23, i64 48, i1 false), !dbg !1569
  ret void, !dbg !1569

else_block17:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %load_element28, ptr noundef nonnull align 8 dereferenceable(56) %result_value11, i64 56, i1 false), !dbg !1569
  %struct_field30.unpack = load ptr, ptr %load_element28, align 8, !dbg !1569
  %struct_field30.elt47 = getelementptr inbounds %list.RocList, ptr %load_element28, i64 0, i32 1, !dbg !1569
  %struct_field30.unpack48 = load i64, ptr %struct_field30.elt47, align 8, !dbg !1569
  %struct_field30.elt49 = getelementptr inbounds %list.RocList, ptr %load_element28, i64 0, i32 2, !dbg !1569
  %struct_field30.unpack50 = load i64, ptr %struct_field30.elt49, align 8, !dbg !1569
  %struct_field_access_record_131 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %load_element28, i64 0, i32 1, !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field32, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_131, i64 32, i1 false), !dbg !1569
  call fastcc void @"#Attr_#dec_21"(ptr nonnull %struct_field32), !dbg !1569
  store ptr %struct_field30.unpack, ptr %struct_alloca, align 8, !dbg !1569
  %struct_alloca.repack52 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1569
  store i64 %struct_field30.unpack48, ptr %struct_alloca.repack52, align 8, !dbg !1569
  %struct_alloca.repack54 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1569
  store i64 %struct_field30.unpack50, ptr %struct_alloca.repack54, align 8, !dbg !1569
  %struct_field_gep33 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1569
  store i64 %struct_field10.unpack, ptr %struct_field_gep33, align 8, !dbg !1569
  %struct_field_gep33.repack56 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1569
  store i64 %struct_field10.unpack45, ptr %struct_field_gep33.repack56, align 8, !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca34, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca36, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca34, i64 40, i1 false), !dbg !1569
  %tag_id_ptr38 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca36, i64 0, i32 1, !dbg !1569
  store i8 1, ptr %tag_id_ptr38, align 8, !dbg !1569
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca36, i64 48, i1 false), !dbg !1569
  ret void, !dbg !1569
}

define internal fastcc void @Task_46_d4e04963c1a9b3df23c4774ff3fe4377b225218f1fb354bb6496ef3b441cfd31({} %"120", ptr %"#arg_closure", ptr %0) !dbg !1571 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !1572
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !1572
  %load_element7 = alloca { [8 x i64], i8 }, align 8, !dbg !1572
  %result_value4 = alloca { [9 x i64], i8 }, align 8, !dbg !1572
  %result_value3 = alloca { [9 x i64], i8 }, align 8, !dbg !1572
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !1572
  %struct_field1 = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1572
  %struct_field = alloca { [3 x i64], i8 }, align 8, !dbg !1572
  %struct_field_access_record_1 = getelementptr inbounds { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_1, i64 32, i1 false), !dbg !1572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %struct_field1, ptr noundef nonnull align 8 dereferenceable(56) %"#arg_closure", i64 56, i1 false), !dbg !1572
  call fastcc void @Task_67_ca9484d16885615abec85a8bbeed1aba2dde9d4a1e48c95ddbf53ade4ab565({} zeroinitializer, ptr nonnull %struct_field1, ptr nonnull %result_value), !dbg !1572
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1572
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1572
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1572
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1572

then_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %result_value, align 8, !dbg !1572
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !1572
  %load_element.elt9 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !1572
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !1572
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack10, 1, !dbg !1572
  %load_element.elt11 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !1572
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !1572
  %load_element13 = insertvalue %list.RocList %2, i64 %load_element.unpack12, 2, !dbg !1572
  call fastcc void @Path_103_66a17817c8b9c59b3b1c6efd270ac6151355288efa72859b072ffcfc36e80d2(%list.RocList %load_element13, ptr nonnull %struct_field, ptr nonnull %result_value3), !dbg !1572
  call fastcc void @Task_73_be4396db39a6441d11b625a7a53631db3ec9114c882a8283cb22efe73f3af1({} zeroinitializer, ptr nonnull %result_value3, ptr nonnull %result_value4), !dbg !1572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value4, i64 80, i1 false), !dbg !1572
  ret void, !dbg !1572

else_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_11"(ptr nonnull %struct_field), !dbg !1572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element7, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !1572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %load_element7, i64 72, i1 false), !dbg !1572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !1572
  %tag_id_ptr8 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1572
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !1572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !1572
  ret void, !dbg !1572
}

define internal fastcc %list.RocList @List_sublistLowlevel_dc6b1b42abfea2844b7c4985e150c54b77c535b47ead6acd59d6a08b80d2(%list.RocList %"#arg1", i64 %"#arg2", i64 %"#arg3") !dbg !1574 {
entry:
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1575
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1575
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1575
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !1575
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !1575
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1575
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !1575
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1575
  call void @llvm.experimental.noalias.scope.decl(metadata !1577), !dbg !1575
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !1575
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1575
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !1575
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1575, !noalias !1577
  %0 = icmp eq i64 %.sroa.1.0.copyload.i, 0, !dbg !1575
  %1 = icmp eq i64 %"#arg3", 0, !dbg !1575
  %2 = select i1 %0, i1 true, i1 %1, !dbg !1575
  %3 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !1575
  %or.cond.i = select i1 %2, i1 true, i1 %3, !dbg !1575
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !1575, !noalias !1577
  br i1 %or.cond.i, label %.critedge.i, label %16, !dbg !1575

.critedge.i:                                      ; preds = %entry
  %sunkaddr.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1575
  %.sroa.3.0.copyload57.i = load i64, ptr %sunkaddr.i, align 8, !dbg !1575, !noalias !1577
  %isneg.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1575
  %4 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload57.i, i64 0), !dbg !1575
  %5 = select i1 %isneg.i.i.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1575
  %6 = or i64 %5, %4, !dbg !1575
  %7 = icmp ne i64 %6, 0, !dbg !1575
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %isneg.i.i.i.i, !dbg !1575
  br i1 %brmerge.i.i.i, label %list.RocList.isUnique.exit.i, label %list.RocList.isUnique.exit.thread.i, !dbg !1575

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i
  %8 = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1575
  %9 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1575
  %10 = shl i64 %.sroa.3.0.copyload57.i, 1, !dbg !1575
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !1575
  %12 = inttoptr i64 %11 to ptr, !dbg !1575
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !1575
  %14 = load i64, ptr %13, align 8, !dbg !1575, !noalias !1577
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !1575
  br i1 %15, label %list.RocList.isUnique.exit.thread.i, label %.critedge.i.i, !dbg !1575

16:                                               ; preds = %entry
  %.not28.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !1575
  br i1 %.not28.i, label %26, label %22, !dbg !1575

common.ret.i:                                     ; preds = %list.RocList.setAllocationElementCount.exit.i, %.loopexit82.i, %.loopexit.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1575
  br label %roc_builtins.list.sublist.exit, !dbg !1575

list.RocList.isUnique.exit.thread.i:              ; preds = %list.RocList.isUnique.exit.i, %.critedge.i
  %.not29.i = icmp ne ptr %.sroa.0.0.copyload.i, null, !dbg !1575
  %17 = icmp ne i64 %.sroa.1.0.copyload.i, 0, !dbg !1575
  %or.cond86.i = select i1 %.not29.i, i1 %17, i1 false, !dbg !1575
  br i1 %or.cond86.i, label %.lr.ph85.preheader.i, label %.loopexit.i, !dbg !1575

.lr.ph85.preheader.i:                             ; preds = %list.RocList.isUnique.exit.thread.i
  br label %.lr.ph85.i, !dbg !1575

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i
  %18 = icmp eq i64 %.sroa.3.0.copyload57.i, 0, !dbg !1575
  %19 = icmp eq i64 %11, 0, !dbg !1575
  %or.cond.i.i.not92.i = select i1 %18, i1 true, i1 %19, !dbg !1575
  %.not.i.i.i = icmp eq i64 %14, 0, !dbg !1575
  %or.cond89.i = select i1 %or.cond.i.i.not92.i, i1 true, i1 %.not.i.i.i, !dbg !1575
  br i1 %or.cond89.i, label %list.RocList.decref.exit.i, label %20, !dbg !1575

20:                                               ; preds = %.critedge.i.i
  %21 = add nsw i64 %14, -1, !dbg !1575
  %sunkaddr101.i = inttoptr i64 %11 to ptr, !dbg !1575
  %sunkaddr102.i = getelementptr inbounds i8, ptr %sunkaddr101.i, i64 -8, !dbg !1575
  store i64 %21, ptr %sunkaddr102.i, align 8, !dbg !1575, !noalias !1577
  br label %list.RocList.decref.exit.i, !dbg !1575

list.RocList.decref.exit.i:                       ; preds = %20, %.critedge.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1575, !alias.scope !1577
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1575
  br label %roc_builtins.list.sublist.exit, !dbg !1575

.loopexit.i:                                      ; preds = %.lr.ph85.i, %list.RocList.isUnique.exit.thread.i
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !1575, !alias.scope !1577
  %.sroa.28.0..sroa_idx9.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1575
  store i64 0, ptr %.sroa.28.0..sroa_idx9.i, align 8, !dbg !1575, !alias.scope !1577
  %.sroa.3.0..sroa_idx11.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1575
  store i64 %.sroa.3.0.copyload57.i, ptr %.sroa.3.0..sroa_idx11.i, align 8, !dbg !1575, !alias.scope !1577
  br label %common.ret.i, !dbg !1575

.lr.ph85.i:                                       ; preds = %.lr.ph85.i, %.lr.ph85.preheader.i
  %lsr.iv93.i = phi ptr [ %.sroa.0.0.copyload.i, %.lr.ph85.preheader.i ], [ %uglygep.i, %.lr.ph85.i ], !dbg !1575
  %lsr.iv.i = phi i64 [ %.sroa.1.0.copyload.i, %.lr.ph85.preheader.i ], [ %lsr.iv.next.i, %.lr.ph85.i ], !dbg !1575
  %load_opaque.i12 = load %list.RocList, ptr %lsr.iv93.i, align 8, !dbg !1580, !noalias !1577
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_opaque.i12) #18, !dbg !1580, !noalias !1577
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !1575
  %uglygep.i = getelementptr i8, ptr %lsr.iv93.i, i64 24, !dbg !1575
  %exitcond87.not.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !1575
  br i1 %exitcond87.not.i, label %.loopexit.i, label %.lr.ph85.i, !dbg !1575

22:                                               ; preds = %16
  %23 = sub nuw i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !1575
  %24 = call i64 @llvm.umin.i64(i64 %"#arg3", i64 %23), !dbg !1575
  %25 = icmp eq i64 %"#arg2", 0, !dbg !1575
  %sunkaddr103.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1575
  %.sroa.363.0.copyload.i = load i64, ptr %sunkaddr103.i, align 8, !dbg !1575, !noalias !1577
  br i1 %25, label %27, label %..critedge2_crit_edge.i, !dbg !1575

..critedge2_crit_edge.i:                          ; preds = %22
  %.pre.i = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1575
  br label %.critedge2.i, !dbg !1575

26:                                               ; preds = %16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1575, !alias.scope !1577
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1575
  br label %roc_builtins.list.sublist.exit, !dbg !1575

27:                                               ; preds = %22
  %isneg.i.i.i39.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1575
  %28 = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1575
  %29 = select i1 %isneg.i.i.i39.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1575
  %30 = or i64 %29, %28, !dbg !1575
  %31 = icmp ne i64 %30, 0, !dbg !1575
  %brmerge.i.i40.i = select i1 %31, i1 true, i1 %isneg.i.i.i39.i, !dbg !1575
  br i1 %brmerge.i.i40.i, label %list.RocList.isUnique.exit44.i, label %list.RocList.isUnique.exit44.thread.i, !dbg !1575

list.RocList.isUnique.exit44.i:                   ; preds = %27
  %32 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1575
  %33 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1575
  %34 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !1575
  %35 = select i1 %32, i64 %34, i64 %33, !dbg !1575
  %36 = inttoptr i64 %35 to ptr, !dbg !1575
  %37 = getelementptr inbounds i64, ptr %36, i64 -1, !dbg !1575
  %38 = load i64, ptr %37, align 8, !dbg !1575, !noalias !1577
  %39 = icmp eq i64 %38, -9223372036854775808, !dbg !1575
  br i1 %39, label %list.RocList.isUnique.exit44.thread.i, label %.critedge2.i, !dbg !1575

list.RocList.isUnique.exit44.thread.i:            ; preds = %list.RocList.isUnique.exit44.i, %27
  %.not.not.i = icmp ugt i64 %23, %"#arg3", !dbg !1575
  br i1 %.not.not.i, label %.lr.ph.preheader.i, label %.loopexit82.i, !dbg !1575

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit44.i, %..critedge2_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %..critedge2_crit_edge.i ], [ %28, %list.RocList.isUnique.exit44.i ], !dbg !1575
  %isneg.i.i.i49.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1575
  %40 = select i1 %isneg.i.i.i49.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1575
  %41 = or i64 %40, %.pre-phi.i, !dbg !1575
  %42 = icmp ne i64 %41, 0, !dbg !1575
  %brmerge.i.i50.i = select i1 %42, i1 true, i1 %isneg.i.i.i49.i, !dbg !1575
  br i1 %brmerge.i.i50.i, label %list.RocList.isUnique.exit54.i, label %list.RocList.isUnique.exit54.thread.i, !dbg !1575

list.RocList.isUnique.exit54.i:                   ; preds = %.critedge2.i
  %43 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1575
  %44 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1575
  %45 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !1575
  %46 = select i1 %43, i64 %45, i64 %44, !dbg !1575
  %47 = inttoptr i64 %46 to ptr, !dbg !1575
  %48 = getelementptr inbounds i64, ptr %47, i64 -1, !dbg !1575
  %49 = load i64, ptr %48, align 8, !dbg !1575, !noalias !1577
  %50 = icmp ne i64 %49, -9223372036854775808, !dbg !1575
  %brmerge78.i = select i1 %50, i1 true, i1 %43, !dbg !1575
  br i1 %brmerge78.i, label %list.RocList.setAllocationElementCount.exit.i, label %66, !dbg !1575

.loopexit82.i:                                    ; preds = %.lr.ph.i, %list.RocList.isUnique.exit44.thread.i
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !1575, !alias.scope !1577
  %.sroa.218.0..sroa_idx19.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1575
  store i64 %24, ptr %.sroa.218.0..sroa_idx19.i, align 8, !dbg !1575, !alias.scope !1577
  %.sroa.321.0..sroa_idx22.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1575
  store i64 %.sroa.363.0.copyload.i, ptr %.sroa.321.0..sroa_idx22.i, align 8, !dbg !1575, !alias.scope !1577
  br label %common.ret.i, !dbg !1575

.lr.ph.preheader.i:                               ; preds = %list.RocList.isUnique.exit44.thread.i
  %51 = sub i64 %23, %24, !dbg !1575
  %umax.i = call i64 @llvm.umax.i64(i64 %51, i64 1), !dbg !1575
  %52 = sub i64 0, %umax.i, !dbg !1575
  %53 = mul i64 24, %24, !dbg !1575
  %uglygep96.i = getelementptr i8, ptr %.sroa.0.0.copyload.i, i64 %53, !dbg !1575
  br label %.lr.ph.i, !dbg !1575

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.preheader.i
  %lsr.iv97.i = phi ptr [ %uglygep96.i, %.lr.ph.preheader.i ], [ %uglygep98.i, %.lr.ph.i ], !dbg !1575
  %lsr.iv94.i = phi i64 [ %52, %.lr.ph.preheader.i ], [ %math.i, %.lr.ph.i ], !dbg !1575
  %load_opaque.i = load %list.RocList, ptr %lsr.iv97.i, align 8, !dbg !1584, !noalias !1577
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_opaque.i) #18, !dbg !1584, !noalias !1577
  %54 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv94.i, i64 1), !dbg !1575
  %math.i = extractvalue { i64, i1 } %54, 0, !dbg !1575
  %ov.i = extractvalue { i64, i1 } %54, 1, !dbg !1575
  %uglygep98.i = getelementptr i8, ptr %lsr.iv97.i, i64 24, !dbg !1575
  br i1 %ov.i, label %.loopexit82.i, label %.lr.ph.i, !dbg !1575

list.RocList.setAllocationElementCount.exit.i:    ; preds = %66, %list.RocList.isUnique.exit54.i
  %55 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1575
  %56 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1575
  %57 = lshr i64 %56, 1, !dbg !1575
  %58 = or i64 %57, -9223372036854775808, !dbg !1575
  %59 = select i1 %55, i64 0, i64 %58, !dbg !1575
  %60 = call i64 @llvm.smin.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1575
  %61 = or i64 %60, %59, !dbg !1575
  %62 = mul nuw i64 %"#arg2", 24, !dbg !1575
  %63 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 %62, !dbg !1575
  store ptr %63, ptr %list_alloca, align 8, !dbg !1575, !alias.scope !1577
  %64 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1575
  store i64 %24, ptr %64, align 8, !dbg !1575, !alias.scope !1577
  %65 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1575
  store i64 %61, ptr %65, align 8, !dbg !1575, !alias.scope !1577
  br label %common.ret.i, !dbg !1575

list.RocList.isUnique.exit54.thread.i:            ; preds = %.critedge2.i
  br label %66, !dbg !1575

66:                                               ; preds = %list.RocList.isUnique.exit54.thread.i, %list.RocList.isUnique.exit54.i
  %67 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !1575
  store i64 %.sroa.1.0.copyload.i, ptr %67, align 8, !dbg !1575, !noalias !1577
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !1575

roc_builtins.list.sublist.exit:                   ; preds = %26, %list.RocList.decref.exit.i, %common.ret.i
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1575
  %68 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1575
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1575
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !1575
  %69 = insertvalue %list.RocList %68, i64 %load_list.unpack7, 1, !dbg !1575
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1575
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1575
  %load_list10 = insertvalue %list.RocList %69, i64 %load_list.unpack9, 2, !dbg !1575
  ret %list.RocList %load_list10, !dbg !1575
}

define internal fastcc void @Five_14_4c338574d6e8ce6a38c44e9aa2440d050fc925f9a5e674c38f9b97d8b1bf50(ptr %cont, ptr %0) !dbg !1586 {
entry:
  %result_value2 = alloca { { [9 x i64], i8 }, {} }, align 8
  %result_value1 = alloca { [9 x i64], i8 }, align 8
  %result_value = alloca { [9 x i64], i8 }, align 8
  call fastcc void @Five_parse_948cbc893ad2e9e9db3382c9118cbc164b0518b3fcc801f46e0358a7a4c131a(ptr %cont, ptr nonnull %result_value), !dbg !1587
  call fastcc void @Task_fromResult_868bb1275a5c595ca8461c95365254c643bddedbb5663df25366d7589be778(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !1587
  call fastcc void @Task_await_5811d8c78876d2654ea5124a7aef4f18d7249acbce87624ecf9abe42c809f(ptr nonnull %result_value1, {} zeroinitializer, ptr nonnull %result_value2), !dbg !1587
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value2, i64 80, i1 false), !dbg !1587
  ret void, !dbg !1587
}

define internal fastcc void @Dict_increaseSize_6510a4d2b643dbf56ded4867b8cf49fe92c910e8961840e3a156bc971ee31a(ptr %"727", ptr %0) !dbg !1589 {
entry:
  %result_value18 = alloca %str.RocStr, align 8, !dbg !1590
  %result_value17 = alloca %str.RocStr, align 8, !dbg !1590
  %const_str_store16 = alloca %str.RocStr, align 8, !dbg !1590
  %result_value = alloca %str.RocStr, align 8, !dbg !1590
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1590
  %struct_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !1590
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"727", i64 0, i32 1, !dbg !1590
  %struct_field.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1590
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1590
  %struct_field.elt19 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"727", i64 0, i32 1, i32 1, !dbg !1590
  %struct_field.unpack20 = load i64, ptr %struct_field.elt19, align 8, !dbg !1590
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack20, 1, !dbg !1590
  %struct_field.elt21 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"727", i64 0, i32 1, i32 2, !dbg !1590
  %struct_field.unpack22 = load i64, ptr %struct_field.elt21, align 8, !dbg !1590
  %struct_field23 = insertvalue %list.RocList %2, i64 %struct_field.unpack22, 2, !dbg !1590
  %struct_field_access_record_2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"727", i64 0, i32 2, !dbg !1590
  %struct_field1 = load i64, ptr %struct_field_access_record_2, align 8, !dbg !1590
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"727", i64 0, i32 3, !dbg !1590
  %struct_field2 = load float, ptr %struct_field_access_record_3, align 4, !dbg !1590
  %struct_field_access_record_4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"727", i64 0, i32 4, !dbg !1590
  %struct_field3 = load i8, ptr %struct_field_access_record_4, align 1, !dbg !1590
  %struct_field4.unpack = load ptr, ptr %"727", align 8, !dbg !1590
  %3 = insertvalue %list.RocList poison, ptr %struct_field4.unpack, 0, !dbg !1590
  %struct_field4.elt24 = getelementptr inbounds %list.RocList, ptr %"727", i64 0, i32 1, !dbg !1590
  %struct_field4.unpack25 = load i64, ptr %struct_field4.elt24, align 8, !dbg !1590
  %4 = insertvalue %list.RocList %3, i64 %struct_field4.unpack25, 1, !dbg !1590
  %struct_field4.elt26 = getelementptr inbounds %list.RocList, ptr %"727", i64 0, i32 2, !dbg !1590
  %struct_field4.unpack27 = load i64, ptr %struct_field4.elt26, align 8, !dbg !1590
  %struct_field428 = insertvalue %list.RocList %4, i64 %struct_field4.unpack27, 2, !dbg !1590
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field428), !dbg !1590
  %call = tail call fastcc i64 @Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1(), !dbg !1590
  %call5 = tail call fastcc i1 @Bool_isNotEq_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34(i64 %struct_field1, i64 %call), !dbg !1590
  br i1 %call5, label %then_block, label %else_block, !dbg !1590

then_block:                                       ; preds = %entry
  %call6 = tail call fastcc i8 @Num_subWrap_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41(i8 %struct_field3, i8 1), !dbg !1590
  %call7 = tail call fastcc { %list.RocList, i64 } @Dict_allocBucketsFromShift_cd87b8ad69bc5b0a62f3f19932d2d2ba97fc6f54781f6533ef735e0b0235064(i8 %call6, float %struct_field2), !dbg !1590
  %struct_field_access_record_08 = extractvalue { %list.RocList, i64 } %call7, 0, !dbg !1590
  %struct_field_access_record_19 = extractvalue { %list.RocList, i64 } %call7, 1, !dbg !1590
  %call10 = tail call fastcc %list.RocList @Dict_fillBucketsFromData_a0d5c44a91521ccbe6cbe0ca2338db7878e8dda81a27912b861f86434c26c052(%list.RocList %struct_field_access_record_08, %list.RocList %struct_field23, i8 %call6), !dbg !1590
  %call10.elt = extractvalue %list.RocList %call10, 0, !dbg !1590
  store ptr %call10.elt, ptr %struct_alloca, align 8, !dbg !1590
  %struct_alloca.repack33 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1590
  %call10.elt34 = extractvalue %list.RocList %call10, 1, !dbg !1590
  store i64 %call10.elt34, ptr %struct_alloca.repack33, align 8, !dbg !1590
  %struct_alloca.repack35 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1590
  %call10.elt36 = extractvalue %list.RocList %call10, 2, !dbg !1590
  store i64 %call10.elt36, ptr %struct_alloca.repack35, align 8, !dbg !1590
  %struct_field_gep11 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, !dbg !1590
  store ptr %struct_field.unpack, ptr %struct_field_gep11, align 8, !dbg !1590
  %struct_field_gep11.repack37 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1590
  store i64 %struct_field.unpack20, ptr %struct_field_gep11.repack37, align 8, !dbg !1590
  %struct_field_gep11.repack39 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1590
  store i64 %struct_field.unpack22, ptr %struct_field_gep11.repack39, align 8, !dbg !1590
  %struct_field_gep12 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 2, !dbg !1590
  store i64 %struct_field_access_record_19, ptr %struct_field_gep12, align 8, !dbg !1590
  %struct_field_gep13 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 3, !dbg !1590
  store float %struct_field2, ptr %struct_field_gep13, align 8, !dbg !1590
  %struct_field_gep14 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 4, !dbg !1590
  store i8 %call6, ptr %struct_field_gep14, align 4, !dbg !1590
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca, i64 64, i1 false), !dbg !1590
  ret void, !dbg !1590

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field23), !dbg !1590
  store ptr inttoptr (i64 8388350269555173700 to ptr), ptr %const_str_store, align 8, !dbg !1590
  %const_str_store.repack29 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1590
  store i64 8007528133620755488, ptr %const_str_store.repack29, align 8, !dbg !1590
  %const_str_store.repack30 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1590
  store i64 -7926335344172064666, ptr %const_str_store.repack30, align 8, !dbg !1590
  %call15 = tail call fastcc i64 @Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1(), !dbg !1590
  call fastcc void @Num_toStr_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(i64 %call15, ptr nonnull %result_value), !dbg !1590
  store ptr getelementptr inbounds ([39 x i8], ptr @_str_literal_17866228036559237274, i64 0, i64 8), ptr %const_str_store16, align 8, !dbg !1590
  %const_str_store16.repack31 = getelementptr inbounds %str.RocStr, ptr %const_str_store16, i64 0, i32 1, !dbg !1590
  store i64 31, ptr %const_str_store16.repack31, align 8, !dbg !1590
  %const_str_store16.repack32 = getelementptr inbounds %str.RocStr, ptr %const_str_store16, i64 0, i32 2, !dbg !1590
  store i64 31, ptr %const_str_store16.repack32, align 8, !dbg !1590
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %result_value, ptr nonnull %const_str_store16, ptr nonnull %result_value17), !dbg !1590
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store16), !dbg !1590
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %const_str_store, ptr nonnull %result_value17, ptr nonnull %result_value18), !dbg !1590
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value17), !dbg !1590
  call void @roc_panic(ptr %result_value18, i32 1), !dbg !1590
  unreachable, !dbg !1590
}

define internal fastcc i64 @Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0(i64 %hash, i8 %shifts) !dbg !1592 {
entry:
  %call = tail call fastcc i64 @Num_shiftRightZfBy_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0(i64 %hash, i8 %shifts), !dbg !1593
  ret i64 %call, !dbg !1593
}

define internal fastcc {} @Parser_buildPrimitiveParser_3bdf755040d6ba4ff792958d1ba62a59c551c1b5d19e2604f6bb5215158({} %fun) !dbg !1595 {
entry:
  ret {} %fun, !dbg !1596
}

define internal fastcc void @String_90_2425fdec333e9c3446982981ac5215ad67fc78748e2a2c31633ab84a88eeb6b(%list.RocList %input, %list.RocList %expectedString, ptr %0) !dbg !1598 {
entry:
  %tag_alloca16 = alloca { [6 x i64], i8 }, align 8, !dbg !1599
  %result_value15 = alloca %str.RocStr, align 8, !dbg !1599
  %result_value14 = alloca %str.RocStr, align 8, !dbg !1599
  %result_value13 = alloca %str.RocStr, align 8, !dbg !1599
  %result_value12 = alloca %str.RocStr, align 8, !dbg !1599
  %result_value11 = alloca %str.RocStr, align 8, !dbg !1599
  %const_str_store10 = alloca %str.RocStr, align 8, !dbg !1599
  %const_str_store9 = alloca %str.RocStr, align 8, !dbg !1599
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1599
  %result_value8 = alloca %str.RocStr, align 8, !dbg !1599
  %result_value7 = alloca %str.RocStr, align 8, !dbg !1599
  %result_value6 = alloca %str.RocStr, align 8, !dbg !1599
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1599
  %struct_alloca4 = alloca { { %list.RocList, %list.RocList } }, align 8, !dbg !1599
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1599
  %result_value = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1599
  %call = tail call fastcc i64 @List_len_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7(%list.RocList %expectedString), !dbg !1599
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !1599
  call fastcc void @List_splitAt_7544714fcb8fdf9ddf55315cce78cf57de5a2d6621b01a7739ff24d9f60ac(%list.RocList %input, i64 %call, ptr nonnull %result_value), !dbg !1599
  %struct_field.unpack = load ptr, ptr %result_value, align 8, !dbg !1599
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1599
  %struct_field.elt19 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !1599
  %struct_field.unpack20 = load i64, ptr %struct_field.elt19, align 8, !dbg !1599
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack20, 1, !dbg !1599
  %struct_field.elt21 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !1599
  %struct_field.unpack22 = load i64, ptr %struct_field.elt21, align 8, !dbg !1599
  %struct_field23 = insertvalue %list.RocList %2, i64 %struct_field.unpack22, 2, !dbg !1599
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %result_value, i64 0, i32 1, !dbg !1599
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1599
  %struct_field1.elt24 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %result_value, i64 0, i32 1, i32 1, !dbg !1599
  %struct_field1.unpack25 = load i64, ptr %struct_field1.elt24, align 8, !dbg !1599
  %struct_field1.elt26 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %result_value, i64 0, i32 1, i32 2, !dbg !1599
  %struct_field1.unpack27 = load i64, ptr %struct_field1.elt26, align 8, !dbg !1599
  %call2 = call fastcc i1 @Bool_structuralEq_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4(%list.RocList %struct_field23, %list.RocList %expectedString), !dbg !1599
  br i1 %call2, label %then_block, label %else_block, !dbg !1599

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_12"(%list.RocList %input), !dbg !1599
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field23), !dbg !1599
  store ptr %struct_field1.unpack, ptr %struct_alloca, align 8, !dbg !1599
  %struct_alloca.repack44 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1599
  store i64 %struct_field1.unpack25, ptr %struct_alloca.repack44, align 8, !dbg !1599
  %struct_alloca.repack46 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1599
  store i64 %struct_field1.unpack27, ptr %struct_alloca.repack46, align 8, !dbg !1599
  %struct_field_gep3 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !1599
  %expectedString.elt = extractvalue %list.RocList %expectedString, 0, !dbg !1599
  store ptr %expectedString.elt, ptr %struct_field_gep3, align 8, !dbg !1599
  %struct_field_gep3.repack48 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1599
  %expectedString.elt49 = extractvalue %list.RocList %expectedString, 1, !dbg !1599
  store i64 %expectedString.elt49, ptr %struct_field_gep3.repack48, align 8, !dbg !1599
  %struct_field_gep3.repack50 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1599
  %expectedString.elt51 = extractvalue %list.RocList %expectedString, 2, !dbg !1599
  store i64 %expectedString.elt51, ptr %struct_field_gep3.repack50, align 8, !dbg !1599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca4, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca4, i64 48, i1 false), !dbg !1599
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1599
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1599
  ret void, !dbg !1599

else_block:                                       ; preds = %entry
  %3 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !1599
  %4 = insertvalue %list.RocList %3, i64 %struct_field1.unpack25, 1, !dbg !1599
  %struct_field128 = insertvalue %list.RocList %4, i64 %struct_field1.unpack27, 2, !dbg !1599
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field128), !dbg !1599
  call fastcc void @String_strFromUtf8_46cc5767571b90625b30018eaab612bec9afa9e9b65ec58408e442cd305a(%list.RocList %expectedString, ptr nonnull %result_value6), !dbg !1599
  call fastcc void @String_strFromUtf8_46cc5767571b90625b30018eaab612bec9afa9e9b65ec58408e442cd305a(%list.RocList %struct_field23, ptr nonnull %result_value7), !dbg !1599
  call fastcc void @String_strFromUtf8_46cc5767571b90625b30018eaab612bec9afa9e9b65ec58408e442cd305a(%list.RocList %input, ptr nonnull %result_value8), !dbg !1599
  store ptr inttoptr (i64 7234316346693023845 to ptr), ptr %const_str_store, align 8, !dbg !1599
  %const_str_store.repack29 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1599
  store i64 2334956330985747232, ptr %const_str_store.repack29, align 8, !dbg !1599
  %const_str_store.repack30 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1599
  store i64 -7998392938210000800, ptr %const_str_store.repack30, align 8, !dbg !1599
  store ptr inttoptr (i64 8027139070392148064 to ptr), ptr %const_str_store9, align 8, !dbg !1599
  %const_str_store9.repack31 = getelementptr inbounds %str.RocStr, ptr %const_str_store9, i64 0, i32 1, !dbg !1599
  store i64 412860313205, ptr %const_str_store9.repack31, align 8, !dbg !1599
  %const_str_store9.repack32 = getelementptr inbounds %str.RocStr, ptr %const_str_store9, i64 0, i32 2, !dbg !1599
  store i64 -8286623314361712640, ptr %const_str_store9.repack32, align 8, !dbg !1599
  store ptr inttoptr (i64 7308332192173272672 to ptr), ptr %const_str_store10, align 8, !dbg !1599
  %const_str_store10.repack33 = getelementptr inbounds %str.RocStr, ptr %const_str_store10, i64 0, i32 1, !dbg !1599
  store i64 7453010313196433952, ptr %const_str_store10.repack33, align 8, !dbg !1599
  %const_str_store10.repack34 = getelementptr inbounds %str.RocStr, ptr %const_str_store10, i64 0, i32 2, !dbg !1599
  store i64 -7926335344172064710, ptr %const_str_store10.repack34, align 8, !dbg !1599
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %const_str_store10, ptr nonnull %result_value8, ptr nonnull %result_value11), !dbg !1599
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value8), !dbg !1599
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %result_value7, ptr nonnull %result_value11, ptr nonnull %result_value12), !dbg !1599
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value11), !dbg !1599
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %const_str_store9, ptr nonnull %result_value12, ptr nonnull %result_value13), !dbg !1599
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value12), !dbg !1599
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %result_value6, ptr nonnull %result_value13, ptr nonnull %result_value14), !dbg !1599
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value13), !dbg !1599
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr nonnull %const_str_store, ptr nonnull %result_value14, ptr nonnull %result_value15), !dbg !1599
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value14), !dbg !1599
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %result_value15, align 8, !dbg !1599
  %load_tag_to_put_in_struct.elt35 = getelementptr inbounds %str.RocStr, ptr %result_value15, i64 0, i32 1, !dbg !1599
  %load_tag_to_put_in_struct.unpack36 = load i64, ptr %load_tag_to_put_in_struct.elt35, align 8, !dbg !1599
  %load_tag_to_put_in_struct.elt37 = getelementptr inbounds %str.RocStr, ptr %result_value15, i64 0, i32 2, !dbg !1599
  %load_tag_to_put_in_struct.unpack38 = load i64, ptr %load_tag_to_put_in_struct.elt37, align 8, !dbg !1599
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca16, align 8, !dbg !1599
  %tag_alloca16.repack40 = getelementptr inbounds %str.RocStr, ptr %tag_alloca16, i64 0, i32 1, !dbg !1599
  store i64 %load_tag_to_put_in_struct.unpack36, ptr %tag_alloca16.repack40, align 8, !dbg !1599
  %tag_alloca16.repack42 = getelementptr inbounds %str.RocStr, ptr %tag_alloca16, i64 0, i32 2, !dbg !1599
  store i64 %load_tag_to_put_in_struct.unpack38, ptr %tag_alloca16.repack42, align 8, !dbg !1599
  %tag_id_ptr18 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca16, i64 0, i32 1, !dbg !1599
  store i8 0, ptr %tag_id_ptr18, align 8, !dbg !1599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca16, i64 56, i1 false), !dbg !1599
  ret void, !dbg !1599
}

define internal fastcc i32 @Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d() !dbg !1601 {
entry:
  %call = tail call fastcc i32 @Num_shiftLeftBy_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5(i32 1, i8 8), !dbg !1602
  ret i32 %call, !dbg !1602
}

define internal fastcc %list.RocList @List_keepIfHelp_5eb6a2599d3097c754d93922b84522fd22c626afbfca9a48d724fa1945e3ca9(%list.RocList %"311", ptr %"312", i64 %"313", i64 %"314", i64 %"315") !dbg !1604 {
entry:
  %tmp_output_for_jmp14 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp12 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %joinpoint_arg_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(64) %"312", i64 64, i1 false), !dbg !1605
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, i64 64, i1 false), !dbg !1605
  br label %joinpointcont, !dbg !1605

joinpointcont:                                    ; preds = %else_block8, %then_block7, %entry
  %joinpointarg = phi %list.RocList [ %"311", %entry ], [ %call9, %then_block7 ], [ %joinpointarg, %else_block8 ], !dbg !1605
  %joinpointarg1 = phi i64 [ %"313", %entry ], [ %call10, %then_block7 ], [ %joinpointarg1, %else_block8 ], !dbg !1605
  %joinpointarg2 = phi i64 [ %"314", %entry ], [ %call11, %then_block7 ], [ %call13, %else_block8 ], !dbg !1605
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"315"), !dbg !1605
  br i1 %call, label %then_block, label %else_block, !dbg !1605

then_block:                                       ; preds = %joinpointcont
  %call4 = call fastcc %list.RocList @List_getUnsafe_5d84da6abaf677d342986d45e3605cfd5bd1528ee5196616226adfb513950(%list.RocList %joinpointarg, i64 %joinpointarg2), !dbg !1605
  call fastcc void @"#Attr_#inc_1"(%list.RocList %call4, i64 1), !dbg !1605
  call fastcc void @"#Attr_#inc_25"(ptr nonnull %joinpoint_arg_alloca, i64 1), !dbg !1605
  %call5 = call fastcc i1 @Five_68_fb88268d1bcc68db321efdaf1d83e34d3ebeddaf65266665b5d581ee1c75c(%list.RocList %call4, ptr nonnull %joinpoint_arg_alloca), !dbg !1605
  call fastcc void @"#Attr_#dec_1"(%list.RocList %call4), !dbg !1605
  br i1 %call5, label %then_block7, label %else_block8, !dbg !1605

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_25"(ptr nonnull %joinpoint_arg_alloca), !dbg !1605
  %call15 = call fastcc %list.RocList @List_takeFirst_b29e3b7af499d7231de5e31772f94a674636903232cb1b301cf274977992d8b(%list.RocList %joinpointarg, i64 %joinpointarg1), !dbg !1605
  ret %list.RocList %call15, !dbg !1605

then_block7:                                      ; preds = %then_block
  %call9 = call fastcc %list.RocList @List_swap_c1becff895d98252d67f432f42e71e6c36db1525fb1c2935030e1f76862(%list.RocList %joinpointarg, i64 %joinpointarg1, i64 %joinpointarg2), !dbg !1605
  %call10 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg1, i64 1), !dbg !1605
  %call11 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !1605
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp12, ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, i64 64, i1 false), !dbg !1605
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp12, i64 64, i1 false), !dbg !1605
  br label %joinpointcont, !dbg !1605

else_block8:                                      ; preds = %then_block
  %call13 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !1605
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp14, ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, i64 64, i1 false), !dbg !1605
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp14, i64 64, i1 false), !dbg !1605
  br label %joinpointcont, !dbg !1605
}

define internal fastcc void @Task_mapErr_dac1828a559851ccf54a9d617bdd3b2b62cfa65d7d16b1259bc78fc7c2e1(%list.RocList %"99", ptr %transform, ptr %0) !dbg !1607 {
entry:
  %struct_alloca = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1608
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %"99", i64 1), !dbg !1608
  %"99.elt" = extractvalue %list.RocList %"99", 0, !dbg !1608
  store ptr %"99.elt", ptr %struct_alloca, align 8, !dbg !1608
  %struct_alloca.repack2 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1608
  %"99.elt3" = extractvalue %list.RocList %"99", 1, !dbg !1608
  store i64 %"99.elt3", ptr %struct_alloca.repack2, align 8, !dbg !1608
  %struct_alloca.repack4 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1608
  %"99.elt5" = extractvalue %list.RocList %"99", 2, !dbg !1608
  store i64 %"99.elt5", ptr %struct_alloca.repack4, align 8, !dbg !1608
  %struct_field_gep1 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1608
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(32) %transform, i64 32, i1 false), !dbg !1608
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, i64 56, i1 false), !dbg !1608
  ret void, !dbg !1608
}

define internal fastcc float @Num_toF32_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8(i64 %"#arg1") !dbg !1610 {
entry:
  %unsigned_int_to_float = uitofp i64 %"#arg1" to float, !dbg !1611
  ret float %unsigned_int_to_float, !dbg !1611
}

define internal fastcc void @Inspect_252_f56abf6a50719c6e8161e4ae34e1a1a63cddb05e916253c8457a373372d6bb(ptr %f0, ptr %0) !dbg !1613 {
entry:
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 4496128932825820988 to ptr), ptr %const_str_store, align 8, !dbg !1614
  %const_str_store.repack1 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1614
  store i64 0, ptr %const_str_store.repack1, align 8, !dbg !1614
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1614
  store i64 -8646911284551352320, ptr %const_str_store.repack2, align 8, !dbg !1614
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1614
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1614
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1614
  ret void, !dbg !1614
}

define internal fastcc void @Inspect_204_8e6f801bf53c86630ef8be4d8c3ee15f80c78c69d3ce8031062a6e529ee(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !1616 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !1617
  %load_element = alloca %str.RocStr, align 8, !dbg !1617
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !1617
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %load_element, ptr nonnull %result_value), !dbg !1617
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element), !dbg !1617
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1617
  ret void, !dbg !1617
}

define internal fastcc i8 @Num_subWrap_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41(i8 %"#arg1", i8 %"#arg2") !dbg !1619 {
entry:
  %sub_int = sub i8 %"#arg1", %"#arg2", !dbg !1620
  ret i8 %sub_int, !dbg !1620
}

define internal fastcc void @Inspect_custom_a571631963e6f373060368cd9665a453dbfac813965b321bf9bb77263202ca(ptr %fn, ptr %0) !dbg !1622 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %fn, i64 56, i1 false), !dbg !1623
  ret void, !dbg !1623
}

define internal fastcc void @List_iterHelp_50e8e06555163661d37576e08a187bc1a82c34c685bbe84f89594e81f9565960(%list.RocList %"318", i64 %"319", i64 %"320", i64 %"321", i64 %"322", ptr %0) !dbg !1625 {
entry:
  %tag_alloca16 = alloca { [1 x i64], i8 }, align 8, !dbg !1626
  %tag_alloca = alloca { [1 x i64], i8 }, align 8, !dbg !1626
  %result_value = alloca { [1 x i64], i8 }, align 8, !dbg !1626
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"318", i64 1), !dbg !1626
  br label %joinpointcont, !dbg !1626

joinpointcont:                                    ; preds = %then_block7, %entry
  %joinpointarg1 = phi i64 [ %"319", %entry ], [ %load_element, %then_block7 ], !dbg !1626
  %joinpointarg3 = phi i64 [ %"321", %entry ], [ %call10, %then_block7 ], !dbg !1626
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg3, i64 %"322"), !dbg !1626
  br i1 %call, label %then_block, label %else_block, !dbg !1626

then_block:                                       ; preds = %joinpointcont
  %call5 = call fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %"318", i64 %joinpointarg3), !dbg !1626
  call fastcc void @List_454_b6812cd4831336785c4d2d6d371d74081a04d666ecb415ede62b278451858a9(i64 %joinpointarg1, i64 %call5, i64 %"320", ptr nonnull %result_value), !dbg !1626
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1626
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1626
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1626
  br i1 %eq_u8, label %then_block7, label %else_block8, !dbg !1626

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"318"), !dbg !1626
  store i64 %joinpointarg1, ptr %tag_alloca16, align 8, !dbg !1626
  %tag_id_ptr18 = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca16, i64 0, i32 1, !dbg !1626
  store i8 1, ptr %tag_id_ptr18, align 8, !dbg !1626
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca16, i64 16, i1 false), !dbg !1626
  ret void, !dbg !1626

then_block7:                                      ; preds = %then_block
  %load_element = load i64, ptr %result_value, align 8, !dbg !1626
  %call10 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg3, i64 1), !dbg !1626
  br label %joinpointcont, !dbg !1626

else_block8:                                      ; preds = %then_block
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"318"), !dbg !1626
  %load_element13 = load i64, ptr %result_value, align 8, !dbg !1626
  store i64 %load_element13, ptr %tag_alloca, align 8, !dbg !1626
  %tag_id_ptr14 = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1626
  store i8 0, ptr %tag_id_ptr14, align 8, !dbg !1626
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca, i64 16, i1 false), !dbg !1626
  ret void, !dbg !1626
}

define internal fastcc %list.RocList @List_takeFirst_ca98df76e744faeef21fb76918295997c9c1b552a2e623d6fc162a11de8fae(%list.RocList %list, i64 %outputLength) !dbg !1628 {
entry:
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %outputLength, 0, !dbg !1629
  %insert_record_field1 = insertvalue { i64, i64 } %insert_record_field, i64 0, 1, !dbg !1629
  %call = tail call fastcc %list.RocList @List_sublist_c76509a58fbafc47f4d5fc1992204e92c831be8ebe1587d7baf160babfe2ad(%list.RocList %list, { i64, i64 } %insert_record_field1), !dbg !1629
  ret %list.RocList %call, !dbg !1629
}

define internal fastcc void @Inspect_dbgStr_aa3b634bf5a3cbfd69384c2274596f2bf4c68e9d7ee9e56807d20bdff71992f(ptr %s, ptr %0) !dbg !1631 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_custom_28ed99b2257723c7de6da01790114bb6931256ffd9c1aaf369f05be7f782db(ptr %s, ptr nonnull %result_value), !dbg !1632
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1632
  ret void, !dbg !1632
}

define internal fastcc void @Parser_82_24a1e4da4e2112b3a86dbba86af39ac2de6bd14c57df8e79f6961180ee8f2fa(ptr %"425", {} %funVal, ptr %0) !dbg !1634 {
entry:
  %struct_alloca = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !1635
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !1635
  %struct_field1 = alloca %str.RocStr, align 8, !dbg !1635
  %struct_field.unpack = load ptr, ptr %"425", align 8, !dbg !1635
  %struct_field.elt3 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 1, !dbg !1635
  %struct_field.unpack4 = load i64, ptr %struct_field.elt3, align 8, !dbg !1635
  %struct_field.elt5 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 2, !dbg !1635
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !1635
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %str.RocStr }, ptr %"425", i64 0, i32 1, !dbg !1635
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field1, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_1, i64 24, i1 false), !dbg !1635
  call fastcc void @Parser_138_537cd3f54288d2bcb311fb535ea90133e4e5695168c82ab6bd91c34dce467ee(ptr nonnull %struct_field1, ptr nonnull %result_value), !dbg !1635
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %struct_field1), !dbg !1635
  store ptr %struct_field.unpack, ptr %struct_alloca, align 8, !dbg !1635
  %struct_alloca.repack8 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1635
  store i64 %struct_field.unpack4, ptr %struct_alloca.repack8, align 8, !dbg !1635
  %struct_alloca.repack10 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1635
  store i64 %struct_field.unpack6, ptr %struct_alloca.repack10, align 8, !dbg !1635
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1635
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep2, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !1635
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, i64 56, i1 false), !dbg !1635
  ret void, !dbg !1635
}

define internal fastcc void @String_parseUtf8_7bad6ad1229fb7163196be598bc661e94e665de0e38b68d86c71f7a7299f6828(ptr %parser, %list.RocList %input, ptr %0) !dbg !1637 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Parser_parse_f450475ab465e8d5720f97d44d03608c846dd5a98c93419a9069c6dc52fa0(ptr %parser, %list.RocList %input, {} zeroinitializer, ptr nonnull %result_value), !dbg !1638
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1638
  ret void, !dbg !1638
}

define internal fastcc void @Parser_combined_eee0cf2f77617b662da3ebd6ef24ced5db7e94b18f3abe7c751a51966a72a081(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !1640 {
entry:
  %result_value2 = alloca { [6 x i64], i8 }, align 8, !dbg !1641
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1641
  %struct_field1 = alloca %str.RocStr, align 8, !dbg !1641
  %struct_field_access_record_1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1641
  %struct_field.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1641
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1641
  %struct_field.elt3 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !1641
  %struct_field.unpack4 = load i64, ptr %struct_field.elt3, align 8, !dbg !1641
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack4, 1, !dbg !1641
  %struct_field.elt5 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !1641
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !1641
  %struct_field7 = insertvalue %list.RocList %2, i64 %struct_field.unpack6, 2, !dbg !1641
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field1, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !1641
  call fastcc void @Parser_parsePartial_aef91e3dd391f968eda86d59248397ec1f818975eed3ca18c01e0fd70e61a24(ptr nonnull %struct_field1, %list.RocList %input, ptr nonnull %result_value), !dbg !1641
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %struct_field1), !dbg !1641
  call fastcc void @Result_try_1841486258dadc6565ddb7a1717e1e68e57abb67c121aeb72cb4d456026a9(ptr nonnull %result_value, %list.RocList %struct_field7, ptr nonnull %result_value2), !dbg !1641
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value2, i64 56, i1 false), !dbg !1641
  ret void, !dbg !1641
}

define internal fastcc { %list.RocList, i64 } @Dict_allocBucketsFromShift_cd87b8ad69bc5b0a62f3f19932d2d2ba97fc6f54781f6533ef735e0b0235064(i8 %shifts, float %maxLoadFactor) !dbg !1643 {
entry:
  %call = tail call fastcc i64 @Dict_calcNumBuckets_1529b61b29181b37e427cd639d65060a33ef72662c4981e67e9c292331a(i8 %shifts), !dbg !1644
  %call1 = tail call fastcc i64 @Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1(), !dbg !1644
  %call2 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %call, i64 %call1), !dbg !1644
  br i1 %call2, label %then_block, label %else_block, !dbg !1644

then_block:                                       ; preds = %entry
  %call3 = tail call fastcc { i32, i32 } @Dict_emptyBucket_229c75d6969a8a8a593eb2c44e915f34577963371a1cc7e544a8418a694a1e2(), !dbg !1644
  %call4 = tail call fastcc i64 @Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1(), !dbg !1644
  %call5 = tail call fastcc %list.RocList @List_repeat_dba168b77b24c6e793bab73fde9e33d53bc4c848cefe7b7fe931876bedf73d({ i32, i32 } %call3, i64 %call4), !dbg !1644
  %call6 = tail call fastcc i64 @Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1(), !dbg !1644
  %insert_record_field = insertvalue { %list.RocList, i64 } zeroinitializer, %list.RocList %call5, 0, !dbg !1644
  %insert_record_field7 = insertvalue { %list.RocList, i64 } %insert_record_field, i64 %call6, 1, !dbg !1644
  ret { %list.RocList, i64 } %insert_record_field7, !dbg !1644

else_block:                                       ; preds = %entry
  %call8 = tail call fastcc float @Num_toF32_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8(i64 %call), !dbg !1644
  %call9 = tail call fastcc float @Num_mul_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b(float %call8, float %maxLoadFactor), !dbg !1644
  %call10 = tail call fastcc i64 @Num_floor_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772(float %call9), !dbg !1644
  %call11 = tail call fastcc { i32, i32 } @Dict_emptyBucket_229c75d6969a8a8a593eb2c44e915f34577963371a1cc7e544a8418a694a1e2(), !dbg !1644
  %call12 = tail call fastcc %list.RocList @List_repeat_dba168b77b24c6e793bab73fde9e33d53bc4c848cefe7b7fe931876bedf73d({ i32, i32 } %call11, i64 %call), !dbg !1644
  %insert_record_field13 = insertvalue { %list.RocList, i64 } zeroinitializer, %list.RocList %call12, 0, !dbg !1644
  %insert_record_field14 = insertvalue { %list.RocList, i64 } %insert_record_field13, i64 %call10, 1, !dbg !1644
  ret { %list.RocList, i64 } %insert_record_field14, !dbg !1644
}

define internal fastcc void @Parser_alt_a45290bef5734ad62afcaea912ebb28a88fcce6265e83e5ce118554fa9b23df6(ptr %first, ptr %second, ptr %0) !dbg !1646 {
entry:
  %result_value = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8
  %struct_alloca = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(48) %first, i64 48, i1 false), !dbg !1647
  %struct_field_gep1 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1647
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(32) %second, i64 32, i1 false), !dbg !1647
  call fastcc void @Parser_buildPrimitiveParser_f358c4a3de19e7c0fa39cb3c4512dac774156297de23d2195f2c8666513f74f5(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !1647
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !1647
  ret void, !dbg !1647
}

define internal fastcc void @Parser_200_42f82f3ac78246c9b6ea3a77755de6567cf083ed525e468a4eb63ca0e388(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !1649 {
entry:
  %tag_alloca36 = alloca { [6 x i64], i8 }, align 8, !dbg !1650
  %struct_alloca34 = alloca { { %list.RocList, %list.RocList } }, align 8, !dbg !1650
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1650
  %struct_field32 = alloca %str.RocStr, align 8, !dbg !1650
  %load_element28 = alloca { %list.RocList, %str.RocStr }, align 8, !dbg !1650
  %tag_alloca23 = alloca { [6 x i64], i8 }, align 8, !dbg !1650
  %load_element20 = alloca %str.RocStr, align 8, !dbg !1650
  %result_value11 = alloca { [6 x i64], i8 }, align 8, !dbg !1650
  %load_element6 = alloca { %list.RocList, %list.RocList }, align 8, !dbg !1650
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1650
  %load_element = alloca %str.RocStr, align 8, !dbg !1650
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1650
  %struct_field1 = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !1650
  %struct_field = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !1650
  %struct_field_access_record_1 = getelementptr inbounds { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field, ptr noundef nonnull align 8 dereferenceable(48) %struct_field_access_record_1, i64 48, i1 false), !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_field1, ptr noundef nonnull align 8 dereferenceable(80) %"#arg_closure", i64 80, i1 false), !dbg !1650
  call fastcc void @Parser_parsePartial_e91c801814dfc76e29f4b9c8a4ab972655104646e410533bc7e1e4608cc95e(ptr nonnull %struct_field1, %list.RocList %input, ptr nonnull %result_value), !dbg !1650
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1650
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1650
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !1650
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1650

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_20"(ptr nonnull %struct_field), !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1650
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !1650
  %load_tag_to_put_in_struct.elt71 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !1650
  %load_tag_to_put_in_struct.unpack72 = load i64, ptr %load_tag_to_put_in_struct.elt71, align 8, !dbg !1650
  %load_tag_to_put_in_struct.elt73 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !1650
  %load_tag_to_put_in_struct.unpack74 = load i64, ptr %load_tag_to_put_in_struct.elt73, align 8, !dbg !1650
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1650
  %tag_alloca.repack76 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1650
  store i64 %load_tag_to_put_in_struct.unpack72, ptr %tag_alloca.repack76, align 8, !dbg !1650
  %tag_alloca.repack78 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1650
  store i64 %load_tag_to_put_in_struct.unpack74, ptr %tag_alloca.repack78, align 8, !dbg !1650
  %tag_id_ptr3 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1650
  store i8 0, ptr %tag_id_ptr3, align 8, !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !1650
  ret void, !dbg !1650

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element6, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1650
  %struct_field8.unpack = load ptr, ptr %load_element6, align 8, !dbg !1650
  %1 = insertvalue %list.RocList poison, ptr %struct_field8.unpack, 0, !dbg !1650
  %struct_field8.elt39 = getelementptr inbounds %list.RocList, ptr %load_element6, i64 0, i32 1, !dbg !1650
  %struct_field8.unpack40 = load i64, ptr %struct_field8.elt39, align 8, !dbg !1650
  %2 = insertvalue %list.RocList %1, i64 %struct_field8.unpack40, 1, !dbg !1650
  %struct_field8.elt41 = getelementptr inbounds %list.RocList, ptr %load_element6, i64 0, i32 2, !dbg !1650
  %struct_field8.unpack42 = load i64, ptr %struct_field8.elt41, align 8, !dbg !1650
  %struct_field843 = insertvalue %list.RocList %2, i64 %struct_field8.unpack42, 2, !dbg !1650
  %struct_field_access_record_19 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element6, i64 0, i32 1, !dbg !1650
  %struct_field10.unpack = load ptr, ptr %struct_field_access_record_19, align 8, !dbg !1650
  %struct_field10.elt44 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element6, i64 0, i32 1, i32 1, !dbg !1650
  %struct_field10.unpack45 = load i64, ptr %struct_field10.elt44, align 8, !dbg !1650
  %struct_field10.elt46 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element6, i64 0, i32 1, i32 2, !dbg !1650
  %struct_field10.unpack47 = load i64, ptr %struct_field10.elt46, align 8, !dbg !1650
  call fastcc void @Parser_parsePartial_cf8c9d89186a212409f843ad81dcb732cefe119aa65a9f5b319577583b6a15(ptr nonnull %struct_field, %list.RocList %struct_field843, ptr nonnull %result_value11), !dbg !1650
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field843), !dbg !1650
  %tag_id_ptr12 = getelementptr inbounds { [6 x i64], i8 }, ptr %result_value11, i64 0, i32 1, !dbg !1650
  %load_tag_id13 = load i8, ptr %tag_id_ptr12, align 8, !dbg !1650
  %eq_u814 = icmp eq i8 %load_tag_id13, 0, !dbg !1650
  br i1 %eq_u814, label %then_block16, label %else_block17, !dbg !1650

then_block16:                                     ; preds = %else_block
  %3 = insertvalue %list.RocList poison, ptr %struct_field10.unpack, 0, !dbg !1650
  %4 = insertvalue %list.RocList %3, i64 %struct_field10.unpack45, 1, !dbg !1650
  %struct_field1048 = insertvalue %list.RocList %4, i64 %struct_field10.unpack47, 2, !dbg !1650
  call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field1048), !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element20, ptr noundef nonnull align 8 dereferenceable(24) %result_value11, i64 24, i1 false), !dbg !1650
  %load_tag_to_put_in_struct21.unpack = load ptr, ptr %load_element20, align 8, !dbg !1650
  %load_tag_to_put_in_struct21.elt62 = getelementptr inbounds %str.RocStr, ptr %load_element20, i64 0, i32 1, !dbg !1650
  %load_tag_to_put_in_struct21.unpack63 = load i64, ptr %load_tag_to_put_in_struct21.elt62, align 8, !dbg !1650
  %load_tag_to_put_in_struct21.elt64 = getelementptr inbounds %str.RocStr, ptr %load_element20, i64 0, i32 2, !dbg !1650
  %load_tag_to_put_in_struct21.unpack65 = load i64, ptr %load_tag_to_put_in_struct21.elt64, align 8, !dbg !1650
  store ptr %load_tag_to_put_in_struct21.unpack, ptr %tag_alloca23, align 8, !dbg !1650
  %tag_alloca23.repack67 = getelementptr inbounds %str.RocStr, ptr %tag_alloca23, i64 0, i32 1, !dbg !1650
  store i64 %load_tag_to_put_in_struct21.unpack63, ptr %tag_alloca23.repack67, align 8, !dbg !1650
  %tag_alloca23.repack69 = getelementptr inbounds %str.RocStr, ptr %tag_alloca23, i64 0, i32 2, !dbg !1650
  store i64 %load_tag_to_put_in_struct21.unpack65, ptr %tag_alloca23.repack69, align 8, !dbg !1650
  %tag_id_ptr25 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca23, i64 0, i32 1, !dbg !1650
  store i8 0, ptr %tag_id_ptr25, align 8, !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca23, i64 56, i1 false), !dbg !1650
  ret void, !dbg !1650

else_block17:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element28, ptr noundef nonnull align 8 dereferenceable(48) %result_value11, i64 48, i1 false), !dbg !1650
  %struct_field30.unpack = load ptr, ptr %load_element28, align 8, !dbg !1650
  %struct_field30.elt49 = getelementptr inbounds %list.RocList, ptr %load_element28, i64 0, i32 1, !dbg !1650
  %struct_field30.unpack50 = load i64, ptr %struct_field30.elt49, align 8, !dbg !1650
  %struct_field30.elt51 = getelementptr inbounds %list.RocList, ptr %load_element28, i64 0, i32 2, !dbg !1650
  %struct_field30.unpack52 = load i64, ptr %struct_field30.elt51, align 8, !dbg !1650
  %struct_field_access_record_131 = getelementptr inbounds { %list.RocList, %str.RocStr }, ptr %load_element28, i64 0, i32 1, !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field32, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_131, i64 24, i1 false), !dbg !1650
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %struct_field32), !dbg !1650
  store ptr %struct_field30.unpack, ptr %struct_alloca, align 8, !dbg !1650
  %struct_alloca.repack54 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1650
  store i64 %struct_field30.unpack50, ptr %struct_alloca.repack54, align 8, !dbg !1650
  %struct_alloca.repack56 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1650
  store i64 %struct_field30.unpack52, ptr %struct_alloca.repack56, align 8, !dbg !1650
  %struct_field_gep33 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !1650
  store ptr %struct_field10.unpack, ptr %struct_field_gep33, align 8, !dbg !1650
  %struct_field_gep33.repack58 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1650
  store i64 %struct_field10.unpack45, ptr %struct_field_gep33.repack58, align 8, !dbg !1650
  %struct_field_gep33.repack60 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !1650
  store i64 %struct_field10.unpack47, ptr %struct_field_gep33.repack60, align 8, !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca34, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca36, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca34, i64 48, i1 false), !dbg !1650
  %tag_id_ptr38 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca36, i64 0, i32 1, !dbg !1650
  store i8 1, ptr %tag_id_ptr38, align 8, !dbg !1650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca36, i64 56, i1 false), !dbg !1650
  ret void, !dbg !1650
}

define internal fastcc %list.RocList @List_reserve_7f755070a828d5b0991fd43175b6036d1cb7ecf871d1b823a8797b553d92bc(%list.RocList %"#arg1", i64 %"#arg2") !dbg !1652 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1653
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1653
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1653
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !1653
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !1653
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1653
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !1653
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1653
  call void @llvm.experimental.noalias.scope.decl(metadata !1655), !dbg !1653
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !1653
  call void @llvm.lifetime.start.p0(i64 24, ptr %0), !dbg !1653
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !1653
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1653
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !1653
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1653, !noalias !1655
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1653
  %.sroa.2.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !1653, !noalias !1655
  %isneg.i.i = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !1653
  %2 = call i64 @llvm.smax.i64(i64 %.sroa.2.0.copyload.i, i64 0), !dbg !1653
  %3 = select i1 %isneg.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1653
  %4 = or i64 %3, %2, !dbg !1653
  %5 = call i64 @llvm.uadd.sat.i64(i64 %.sroa.1.0.copyload.i, i64 %"#arg2"), !dbg !1653
  %6 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !1653
  %7 = icmp ne i64 %4, 0, !dbg !1653
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %6, !dbg !1653
  br i1 %brmerge.i.i.i, label %.critedge.i.i.i, label %list.RocList.isUnique.exit.i, !dbg !1653

.critedge.i.i.i:                                  ; preds = %entry
  %8 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !1653
  %.sroa.012.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !1653, !noalias !1655
  %9 = ptrtoint ptr %.sroa.012.0.copyload.i to i64, !dbg !1653
  %10 = shl i64 %.sroa.2.0.copyload.i, 1, !dbg !1653
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !1653
  %12 = inttoptr i64 %11 to ptr, !dbg !1653
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !1653
  %14 = load i64, ptr %13, align 8, !dbg !1653, !noalias !1655
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !1653
  br label %list.RocList.isUnique.exit.i, !dbg !1653

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i.i.i, %entry
  %common.ret.op.i.i.i = phi i1 [ %15, %.critedge.i.i.i ], [ true, %entry ], !dbg !1653
  %16 = icmp uge i64 %4, %5, !dbg !1653
  %or.cond.i = select i1 %common.ret.op.i.i.i, i1 %16, i1 false, !dbg !1653
  br i1 %or.cond.i, label %17, label %.critedge2.i, !dbg !1653

17:                                               ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !1653
  br label %roc_builtins.list.reserve.exit, !dbg !1653

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !1653, !noalias !1655
  call void @llvm.experimental.noalias.scope.decl(metadata !1658), !dbg !1653
  %18 = load ptr, ptr %1, align 8, !dbg !1653, !noalias !1661
  %.not.i.i = icmp eq ptr %18, null, !dbg !1653
  br i1 %.not.i.i, label %32, label %19, !dbg !1653

19:                                               ; preds = %.critedge2.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1653
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !1653, !noalias !1661
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !1653
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !1653, !noalias !1661
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1653
  %20 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !1653
  %21 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !1653
  %22 = or i64 %21, %20, !dbg !1653
  %23 = icmp ne i64 %22, 0, !dbg !1653
  %brmerge.i.i.i.i = select i1 %23, i1 true, i1 %isneg.i.i.i.i.i, !dbg !1653
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !1653

list.RocList.isUnique.exit.i.i:                   ; preds = %19
  %24 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1653
  %25 = ptrtoint ptr %18 to i64, !dbg !1653
  %26 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1653
  %27 = select i1 %24, i64 %26, i64 %25, !dbg !1653
  %28 = inttoptr i64 %27 to ptr, !dbg !1653
  %29 = getelementptr inbounds i64, ptr %28, i64 -1, !dbg !1653
  %30 = load i64, ptr %29, align 8, !dbg !1653, !noalias !1661
  %31 = icmp ne i64 %30, -9223372036854775808, !dbg !1653
  %brmerge.i.i = select i1 %31, i1 true, i1 %24, !dbg !1653
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !1653

32:                                               ; preds = %.critedge2.i
  %33 = icmp eq i64 %5, 0, !dbg !1653
  br i1 %33, label %list.RocList.allocate.exit.i.i, label %34, !dbg !1653

34:                                               ; preds = %32
  %35 = call i64 @llvm.umax.i64(i64 2, i64 %5), !dbg !1653
  %36 = mul nuw i64 %35, 32, !dbg !1653
  %37 = add nuw i64 %36, 16, !dbg !1653
  %38 = call ptr @roc_alloc(i64 %37, i32 8), !dbg !1653, !noalias !1662
  %39 = getelementptr inbounds i8, ptr %38, i64 16, !dbg !1653
  %40 = getelementptr inbounds i8, ptr %39, i64 -8, !dbg !1653
  store i64 -9223372036854775808, ptr %40, align 8, !dbg !1653, !noalias !1662
  br label %list.RocList.allocate.exit.i.i, !dbg !1653

list.RocList.allocate.exit.i.i:                   ; preds = %34, %32
  %.sroa.418.0.i.i = phi i64 [ %35, %34 ], [ 0, %32 ], !dbg !1653
  %.sroa.016.0.i.i = phi ptr [ %39, %34 ], [ null, %32 ], !dbg !1653
  store ptr %.sroa.016.0.i.i, ptr %0, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1653
  store i64 %5, ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1653
  store i64 %.sroa.418.0.i.i, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  br label %list.RocList.reallocate.exit.i, !dbg !1653

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i, %19
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i.i, %5, !dbg !1653
  br i1 %.not7.i.i, label %66, label %63, !dbg !1653

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %41 = icmp eq i64 %5, 0, !dbg !1653
  br i1 %41, label %list.RocList.allocate.exit.i.i.i, label %42, !dbg !1653

42:                                               ; preds = %.critedge.i.i
  %43 = call i64 @llvm.umax.i64(i64 2, i64 %5), !dbg !1653
  %44 = mul nuw i64 %43, 32, !dbg !1653
  %45 = add nuw i64 %44, 16, !dbg !1653
  %46 = call ptr @roc_alloc(i64 %45, i32 8), !dbg !1653, !noalias !1665
  %47 = getelementptr inbounds i8, ptr %46, i64 16, !dbg !1653
  %48 = getelementptr inbounds i8, ptr %47, i64 -8, !dbg !1653
  store i64 -9223372036854775808, ptr %48, align 8, !dbg !1653, !noalias !1665
  br label %list.RocList.allocate.exit.i.i.i, !dbg !1653

.loopexit.i.i.i:                                  ; preds = %.lr.ph.i.i.i, %list.RocList.allocate.exit.i.i.i
  %49 = icmp ne i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1653
  %50 = icmp ne i64 %27, 0, !dbg !1653
  %or.cond.i.i.i.i = select i1 %49, i1 %50, i1 false, !dbg !1653
  br i1 %or.cond.i.i.i.i, label %51, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1653

51:                                               ; preds = %.loopexit.i.i.i
  %52 = load i64, ptr %29, align 8, !dbg !1653, !noalias !1670
  %.not.i.i.i.i = icmp eq i64 %52, 0, !dbg !1653
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %53, !dbg !1653

53:                                               ; preds = %51
  %54 = add i64 %52, -1, !dbg !1653
  store i64 %54, ptr %29, align 8, !dbg !1653, !noalias !1670
  %55 = icmp eq i64 %52, -9223372036854775808, !dbg !1653
  br i1 %55, label %56, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1653

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, ptr %29, i64 -8, !dbg !1653
  call void @roc_dealloc(ptr nonnull align 1 %57, i32 8), !dbg !1653, !noalias !1670
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !1653

list.RocList.allocate.exit.i.i.i:                 ; preds = %42, %.critedge.i.i
  %.sroa.0.0.i.i.i = phi ptr [ %47, %42 ], [ null, %.critedge.i.i ], !dbg !1653
  %.sroa.5.0.i.i.i = phi i64 [ %43, %42 ], [ 0, %.critedge.i.i ], !dbg !1653
  %58 = mul nuw i64 %.sroa.2.0.copyload.i.i, 32, !dbg !1653
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %.sroa.0.0.i.i.i, ptr nonnull align 1 %18, i64 %58, i1 false), !dbg !1653, !noalias !1670
  %59 = getelementptr inbounds i8, ptr %.sroa.0.0.i.i.i, i64 %58, !dbg !1653
  %60 = sub i64 %5, %.sroa.2.0.copyload.i.i, !dbg !1653
  %61 = mul i64 %60, 32, !dbg !1653
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %59, i8 0, i64 %61, i1 false), !dbg !1653, !noalias !1670
  %62 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !1653
  br i1 %62, label %.lr.ph.i.preheader.i.i, label %.loopexit.i.i.i, !dbg !1653

.lr.ph.i.preheader.i.i:                           ; preds = %list.RocList.allocate.exit.i.i.i
  br label %.lr.ph.i.i.i, !dbg !1653

.lr.ph.i.i.i:                                     ; preds = %.lr.ph.i.i.i, %.lr.ph.i.preheader.i.i
  %lsr.iv21.i.i = phi ptr [ %.sroa.0.0.i.i.i, %.lr.ph.i.preheader.i.i ], [ %uglygep.i.i, %.lr.ph.i.i.i ], !dbg !1653
  %lsr.iv.i.i = phi i64 [ %.sroa.2.0.copyload.i.i, %.lr.ph.i.preheader.i.i ], [ %lsr.iv.next.i.i, %.lr.ph.i.i.i ], !dbg !1653
  %load_opaque.i = load { i64, %list.RocList }, ptr %lsr.iv21.i.i, align 8, !dbg !1671, !noalias !1670
  call fastcc void @"#Attr_#inc_8"({ i64, %list.RocList } %load_opaque.i, i64 1) #18, !dbg !1671, !noalias !1670
  %lsr.iv.next.i.i = add i64 %lsr.iv.i.i, -1, !dbg !1653
  %uglygep.i.i = getelementptr i8, ptr %lsr.iv21.i.i, i64 32, !dbg !1653
  %exitcond.not.i.i.i = icmp eq i64 %lsr.iv.next.i.i, 0, !dbg !1653
  br i1 %exitcond.not.i.i.i, label %.loopexit.i.i.i, label %.lr.ph.i.i.i, !dbg !1653

list.RocList.reallocateFresh.exit.i.i:            ; preds = %56, %53, %51, %.loopexit.i.i.i
  store ptr %.sroa.0.0.i.i.i, ptr %0, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1653
  store i64 %5, ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1653
  store i64 %.sroa.5.0.i.i.i, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  br label %list.RocList.reallocate.exit.i, !dbg !1653

63:                                               ; preds = %.thread.i.i
  store ptr %18, ptr %0, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %64 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1653
  store i64 %5, ptr %64, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %65 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1653
  store i64 %.sroa.3.0.copyload.i.i, ptr %65, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  br label %list.RocList.reallocate.exit.i, !dbg !1653

66:                                               ; preds = %.thread.i.i
  %67 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1653
  br i1 %67, label %79, label %80, !dbg !1653

.split1.i.i:                                      ; preds = %73, %.split.i.i
  %phi.call.i.i = phi ptr [ %78, %73 ], [ %18, %.split.i.i ], !dbg !1653
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %68 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1653
  store i64 %5, ptr %68, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  %69 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1653
  store i64 %70, ptr %69, align 8, !dbg !1653, !alias.scope !1658, !noalias !1655
  br label %list.RocList.reallocate.exit.i, !dbg !1653

.split.i.i:                                       ; preds = %88, %86, %82, %79
  %.0.i.i = phi i64 [ %83, %82 ], [ %87, %86 ], [ %91, %88 ], [ 2, %79 ], !dbg !1653
  %70 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %5), !dbg !1653
  %71 = mul nuw i64 %.sroa.3.0.copyload.i.i, 32, !dbg !1653
  %72 = mul nuw i64 %70, 32, !dbg !1653
  %.not.i9.i.i = icmp ult i64 %71, %72, !dbg !1653
  br i1 %.not.i9.i.i, label %73, label %.split1.i.i, !dbg !1653

73:                                               ; preds = %.split.i.i
  %74 = add nuw i64 %72, 16, !dbg !1653
  %75 = add nuw i64 %71, 16, !dbg !1653
  %76 = getelementptr inbounds i8, ptr %18, i64 -16, !dbg !1653
  %77 = call ptr @roc_realloc(ptr nonnull align 1 %76, i64 %74, i64 %75, i32 8), !dbg !1653, !noalias !1661
  %78 = getelementptr inbounds i8, ptr %77, i64 16, !dbg !1653
  br label %.split1.i.i, !dbg !1653

79:                                               ; preds = %66
  br label %.split.i.i, !dbg !1653

80:                                               ; preds = %66
  %81 = icmp ult i64 %.sroa.3.0.copyload.i.i, 128, !dbg !1653
  br i1 %81, label %82, label %84, !dbg !1653

82:                                               ; preds = %80
  %83 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1653
  br label %.split.i.i, !dbg !1653

84:                                               ; preds = %80
  %85 = icmp ugt i64 %.sroa.3.0.copyload.i.i, 4096, !dbg !1653
  br i1 %85, label %86, label %88, !dbg !1653

86:                                               ; preds = %84
  %87 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1653
  br label %.split.i.i, !dbg !1653

88:                                               ; preds = %84
  %89 = mul nuw i64 %.sroa.3.0.copyload.i.i, 3, !dbg !1653
  %90 = add nuw i64 %89, 1, !dbg !1653
  %91 = lshr i64 %90, 1, !dbg !1653
  br label %.split.i.i, !dbg !1653

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %63, %list.RocList.reallocateFresh.exit.i.i, %list.RocList.allocate.exit.i.i
  %.sroa.03.0.copyload.i = load ptr, ptr %0, align 8, !dbg !1653, !noalias !1655
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1653
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !1653, !noalias !1655
  store ptr %.sroa.03.0.copyload.i, ptr %list_alloca, align 8, !dbg !1653, !alias.scope !1655
  %.sroa.25.0..sroa_idx6.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1653
  store i64 %.sroa.1.0.copyload.i, ptr %.sroa.25.0..sroa_idx6.i, align 8, !dbg !1653, !alias.scope !1655
  %.sroa.3.0..sroa_idx8.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1653
  store i64 %.sroa.3.0.copyload.i, ptr %.sroa.3.0..sroa_idx8.i, align 8, !dbg !1653, !alias.scope !1655
  br label %roc_builtins.list.reserve.exit, !dbg !1653

roc_builtins.list.reserve.exit:                   ; preds = %17, %list.RocList.reallocate.exit.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1653
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !1653
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !1653
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1653
  %92 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1653
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1653
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !1653
  %93 = insertvalue %list.RocList %92, i64 %load_list.unpack7, 1, !dbg !1653
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1653
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1653
  %load_list10 = insertvalue %list.RocList %93, i64 %load_list.unpack9, 2, !dbg !1653
  ret %list.RocList %load_list10, !dbg !1653
}

define internal fastcc void @Num_toStr_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece(i32 %"#arg1", ptr %0) !dbg !1673 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call void @roc_builtins.str.from_int.i32(ptr noalias nocapture nonnull sret(%str.RocStr) %str_alloca, i32 %"#arg1"), !dbg !1674
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %str_alloca, i64 24, i1 false), !dbg !1674
  ret void, !dbg !1674
}

define internal fastcc void @Parser_parsePartial_125e5211332baa7aedbb2fd7f239977452738b3664d4eef2cbd7b5781537c7({} %"246", %list.RocList %input, ptr %0) !dbg !1676 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_153_b3bc15972825cd45bef5e6289e422a8811ed4523ed803e14f34e79eb07fe3cd(%list.RocList %input, {} %"246", ptr nonnull %result_value), !dbg !1677
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1677
  ret void, !dbg !1677
}

define internal fastcc void @Parser_parsePartial_a09fbdbd33f5ac2bc44e2b877ec9604906cdb3d39aa817d9e3dc5075f2eda({} %"246", %list.RocList %input, ptr %0) !dbg !1679 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @String_114_febb34167fa9ce104d58e46e5b86963cb8a0a2c228269d557c77fae899439d4(%list.RocList %input, ptr nonnull %result_value), !dbg !1680
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1680
  ret void, !dbg !1680
}

define internal fastcc {} @String_digit_ea64383f9353ea705abcbe8856570182bf8ab8cc1a137e1ba1e4283a0b5aa() !dbg !1682 {
entry:
  %call = tail call fastcc {} @Parser_buildPrimitiveParser_d5b8bdabf937f1b324ab1a7fd2db2d1d7cbe728df69545a5a26587658d3e({} zeroinitializer), !dbg !1683
  ret {} %call, !dbg !1683
}

define internal fastcc i64 @Num_min_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b(i64 %a, i64 %b) !dbg !1685 {
entry:
  %call = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %a, i64 %b), !dbg !1686
  br i1 %call, label %then_block, label %else_block, !dbg !1686

then_block:                                       ; preds = %entry
  ret i64 %a, !dbg !1686

else_block:                                       ; preds = %entry
  ret i64 %b, !dbg !1686
}

define internal fastcc i64 @List_len_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140(%list.RocList %"#arg1") !dbg !1688 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !1689
  ret i64 %list_len, !dbg !1689
}

define internal fastcc void @"#Derived_custom3_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3"(ptr %fmt3, ptr %tag2, ptr %0) !dbg !1691 {
entry:
  %result_value83 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp82 = alloca { [6 x i64], i8 }, align 8
  %result_value81 = alloca { [6 x i64], i8 }, align 8
  %result_value75 = alloca { [4 x i64], i8 }, align 8
  %const_str_store74 = alloca %str.RocStr, align 8
  %load_element73 = alloca { [3 x i64], i8 }, align 8
  %tmp_output_for_jmp70 = alloca { [6 x i64], i8 }, align 8
  %result_value69 = alloca { [6 x i64], i8 }, align 8
  %result_value63 = alloca { [4 x i64], i8 }, align 8
  %const_str_store62 = alloca %str.RocStr, align 8
  %load_element61 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp58 = alloca { [6 x i64], i8 }, align 8
  %result_value57 = alloca { [6 x i64], i8 }, align 8
  %result_value51 = alloca { [4 x i64], i8 }, align 8
  %const_str_store50 = alloca %str.RocStr, align 8
  %load_element49 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp46 = alloca { [6 x i64], i8 }, align 8
  %result_value45 = alloca { [6 x i64], i8 }, align 8
  %const_str_store44 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp43 = alloca { [6 x i64], i8 }, align 8
  %result_value42 = alloca { [6 x i64], i8 }, align 8
  %result_value35 = alloca { [4 x i64], i8 }, align 8
  %result_value34 = alloca { [4 x i64], i8 }, align 8
  %const_str_store33 = alloca %str.RocStr, align 8
  %load_element29 = alloca { [3 x i64], i8 }, align 8
  %tmp_output_for_jmp26 = alloca { [6 x i64], i8 }, align 8
  %result_value25 = alloca { [6 x i64], i8 }, align 8
  %result_value18 = alloca { [4 x i64], i8 }, align 8
  %result_value17 = alloca { [4 x i64], i8 }, align 8
  %const_str_store16 = alloca %str.RocStr, align 8
  %load_element15 = alloca { [3 x i64], i8 }, align 8
  %load_element12 = alloca { [3 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca { [6 x i64], i8 }, align 8
  %result_value9 = alloca { [6 x i64], i8 }, align 8
  %result_value5 = alloca { [4 x i64], i8 }, align 8
  %result_value = alloca { [4 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %load_element = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca { [6 x i64], i8 }, align 8
  %tag_id_ptr = getelementptr inbounds { [8 x i64], i8 }, ptr %tag2, i64 0, i32 1, !dbg !1692
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1692
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
    i8 2, label %branch2
    i8 3, label %branch3
    i8 4, label %branch4
    i8 5, label %branch5
  ], !dbg !1692

default:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element73, ptr noundef nonnull align 8 dereferenceable(32) %tag2, i64 32, i1 false), !dbg !1692
  store ptr inttoptr (i64 8234115541445669971 to ptr), ptr %const_str_store74, align 8, !dbg !1692
  %const_str_store74.repack96 = getelementptr inbounds %str.RocStr, ptr %const_str_store74, i64 0, i32 1, !dbg !1692
  store i64 114, ptr %const_str_store74.repack96, align 8, !dbg !1692
  %const_str_store74.repack97 = getelementptr inbounds %str.RocStr, ptr %const_str_store74, i64 0, i32 2, !dbg !1692
  store i64 -8574853690513424384, ptr %const_str_store74.repack97, align 8, !dbg !1692
  call fastcc void @"#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d"(ptr nonnull %load_element73, ptr nonnull %result_value75), !dbg !1692
  %call_builtin76 = call ptr @roc_builtins.utils.allocate_with_refcount(i64 40, i32 8, i1 true), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin76, ptr noundef nonnull align 8 dereferenceable(40) %result_value75, i64 40, i1 false), !dbg !1692
  %insert_record_field78 = insertvalue %list.RocList zeroinitializer, ptr %call_builtin76, 0, !dbg !1692
  %insert_record_field79 = insertvalue %list.RocList %insert_record_field78, i64 1, 1, !dbg !1692
  %insert_record_field80 = insertvalue %list.RocList %insert_record_field79, i64 1, 2, !dbg !1692
  call fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr nonnull %const_str_store74, %list.RocList %insert_record_field80, ptr nonnull %result_value81), !dbg !1692
  call fastcc void @"#Attr_#dec_39"(%list.RocList %insert_record_field80), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store74), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp82, ptr noundef nonnull align 8 dereferenceable(56) %result_value81, i64 56, i1 false), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp82, i64 56, i1 false), !dbg !1692
  br label %joinpointcont, !dbg !1692

joinpointcont:                                    ; preds = %default, %branch5, %branch4, %branch3, %branch2, %branch1, %branch0
  call fastcc void @Inspect_apply_9aea80b84c2f1cf95fb346d143d7e8d50c7bf2b25952d5f8f5db3c06a669b1a(ptr nonnull %joinpoint_arg_alloca, ptr %fmt3, ptr nonnull %result_value83), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value83, i64 24, i1 false), !dbg !1692
  ret void, !dbg !1692

branch0:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %tag2, i64 24, i1 false), !dbg !1692
  %get_opaque_data_ptr3 = getelementptr inbounds { %str.RocStr, i32 }, ptr %tag2, i64 0, i32 1, !dbg !1692
  %load_element4 = load i32, ptr %get_opaque_data_ptr3, align 4, !dbg !1692
  store ptr inttoptr (i64 1953069125 to ptr), ptr %const_str_store, align 8, !dbg !1692
  %const_str_store.repack94 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1692
  store i64 0, ptr %const_str_store.repack94, align 8, !dbg !1692
  %const_str_store.repack95 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1692
  store i64 -8935141660703064064, ptr %const_str_store.repack95, align 8, !dbg !1692
  call fastcc void @Inspect_dbgI32_8235e4d87e64a6f1c0dba97cda99445de848b0ab53d798c9d7a57517bdbf(i32 %load_element4, ptr nonnull %result_value), !dbg !1692
  call fastcc void @Inspect_dbgStr_2fa65620f1c8398249204c364eff9d936f25b95f1952125d69a57fdd75bbe7(ptr nonnull %load_element, ptr nonnull %result_value5), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element), !dbg !1692
  %call_builtin = call ptr @roc_builtins.utils.allocate_with_refcount(i64 80, i32 8, i1 true), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1692
  %index6 = getelementptr inbounds { [4 x i64], i8 }, ptr %call_builtin, i64 1, !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %index6, ptr noundef nonnull align 8 dereferenceable(40) %result_value5, i64 40, i1 false), !dbg !1692
  %insert_record_field = insertvalue %list.RocList zeroinitializer, ptr %call_builtin, 0, !dbg !1692
  %insert_record_field7 = insertvalue %list.RocList %insert_record_field, i64 2, 1, !dbg !1692
  %insert_record_field8 = insertvalue %list.RocList %insert_record_field7, i64 2, 2, !dbg !1692
  call fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr nonnull %const_str_store, %list.RocList %insert_record_field8, ptr nonnull %result_value9), !dbg !1692
  call fastcc void @"#Attr_#dec_39"(%list.RocList %insert_record_field8), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(56) %result_value9, i64 56, i1 false), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, i64 56, i1 false), !dbg !1692
  br label %joinpointcont, !dbg !1692

branch1:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element12, ptr noundef nonnull align 8 dereferenceable(32) %tag2, i64 32, i1 false), !dbg !1692
  %get_opaque_data_ptr14 = getelementptr inbounds { { [3 x i64], i8 }, { [3 x i64], i8 } }, ptr %tag2, i64 0, i32 1, !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element15, ptr noundef nonnull align 8 dereferenceable(32) %get_opaque_data_ptr14, i64 32, i1 false), !dbg !1692
  store ptr inttoptr (i64 7233173881097054534 to ptr), ptr %const_str_store16, align 8, !dbg !1692
  %const_str_store16.repack92 = getelementptr inbounds %str.RocStr, ptr %const_str_store16, i64 0, i32 1, !dbg !1692
  store i64 7500357, ptr %const_str_store16.repack92, align 8, !dbg !1692
  %const_str_store16.repack93 = getelementptr inbounds %str.RocStr, ptr %const_str_store16, i64 0, i32 2, !dbg !1692
  store i64 -8430738502437568512, ptr %const_str_store16.repack93, align 8, !dbg !1692
  call fastcc void @Inspect_dbgOpaque_8c1617b15deb6ada44e946aaf6d7a26f7b79d7376d5dbac46f3b7284463ec6c(ptr nonnull %load_element12, ptr nonnull %result_value17), !dbg !1692
  call fastcc void @"#Derived_toInspector_[Interrupted 0,NotFound 0,Other 1,OutOfMemory 0,PermissionDenied 0,TimedOut 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b"(ptr nonnull %load_element15, ptr nonnull %result_value18), !dbg !1692
  %call_builtin19 = call ptr @roc_builtins.utils.allocate_with_refcount(i64 80, i32 8, i1 true), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin19, ptr noundef nonnull align 8 dereferenceable(40) %result_value17, i64 40, i1 false), !dbg !1692
  %index21 = getelementptr inbounds { [4 x i64], i8 }, ptr %call_builtin19, i64 1, !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %index21, ptr noundef nonnull align 8 dereferenceable(40) %result_value18, i64 40, i1 false), !dbg !1692
  %insert_record_field22 = insertvalue %list.RocList zeroinitializer, ptr %call_builtin19, 0, !dbg !1692
  %insert_record_field23 = insertvalue %list.RocList %insert_record_field22, i64 2, 1, !dbg !1692
  %insert_record_field24 = insertvalue %list.RocList %insert_record_field23, i64 2, 2, !dbg !1692
  call fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr nonnull %const_str_store16, %list.RocList %insert_record_field24, ptr nonnull %result_value25), !dbg !1692
  call fastcc void @"#Attr_#dec_39"(%list.RocList %insert_record_field24), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store16), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp26, ptr noundef nonnull align 8 dereferenceable(56) %result_value25, i64 56, i1 false), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp26, i64 56, i1 false), !dbg !1692
  br label %joinpointcont, !dbg !1692

branch2:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element29, ptr noundef nonnull align 8 dereferenceable(32) %tag2, i64 32, i1 false), !dbg !1692
  %get_opaque_data_ptr31 = getelementptr inbounds { { [3 x i64], i8 }, { i64, i8 } }, ptr %tag2, i64 0, i32 1, !dbg !1692
  %load_element32 = load { i64, i8 }, ptr %get_opaque_data_ptr31, align 8, !dbg !1692
  store ptr inttoptr (i64 7233173881097054534 to ptr), ptr %const_str_store33, align 8, !dbg !1692
  %const_str_store33.repack90 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 1, !dbg !1692
  store i64 32213788969563221, ptr %const_str_store33.repack90, align 8, !dbg !1692
  %const_str_store33.repack91 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 2, !dbg !1692
  store i64 -8142508126285856768, ptr %const_str_store33.repack91, align 8, !dbg !1692
  call fastcc void @Inspect_dbgOpaque_8c1617b15deb6ada44e946aaf6d7a26f7b79d7376d5dbac46f3b7284463ec6c(ptr nonnull %load_element29, ptr nonnull %result_value34), !dbg !1692
  call fastcc void @"#Derived_toInspector_[BadUtf8 2]_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11"({ i64, i8 } %load_element32, ptr nonnull %result_value35), !dbg !1692
  %call_builtin36 = call ptr @roc_builtins.utils.allocate_with_refcount(i64 80, i32 8, i1 true), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin36, ptr noundef nonnull align 8 dereferenceable(40) %result_value34, i64 40, i1 false), !dbg !1692
  %index38 = getelementptr inbounds { [4 x i64], i8 }, ptr %call_builtin36, i64 1, !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %index38, ptr noundef nonnull align 8 dereferenceable(40) %result_value35, i64 40, i1 false), !dbg !1692
  %insert_record_field39 = insertvalue %list.RocList zeroinitializer, ptr %call_builtin36, 0, !dbg !1692
  %insert_record_field40 = insertvalue %list.RocList %insert_record_field39, i64 2, 1, !dbg !1692
  %insert_record_field41 = insertvalue %list.RocList %insert_record_field40, i64 2, 2, !dbg !1692
  call fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr nonnull %const_str_store33, %list.RocList %insert_record_field41, ptr nonnull %result_value42), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store33), !dbg !1692
  call fastcc void @"#Attr_#dec_39"(%list.RocList %insert_record_field41), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp43, ptr noundef nonnull align 8 dereferenceable(56) %result_value42, i64 56, i1 false), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp43, i64 56, i1 false), !dbg !1692
  br label %joinpointcont, !dbg !1692

branch3:                                          ; preds = %entry
  tail call fastcc void @"#Attr_#dec_35"(ptr %tag2), !dbg !1692
  store ptr inttoptr (i64 7236850772014821198 to ptr), ptr %const_str_store44, align 8, !dbg !1692
  %const_str_store44.repack88 = getelementptr inbounds %str.RocStr, ptr %const_str_store44, i64 0, i32 1, !dbg !1692
  store i64 0, ptr %const_str_store44.repack88, align 8, !dbg !1692
  %const_str_store44.repack89 = getelementptr inbounds %str.RocStr, ptr %const_str_store44, i64 0, i32 2, !dbg !1692
  store i64 -8646911284551352320, ptr %const_str_store44.repack89, align 8, !dbg !1692
  call fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr nonnull %const_str_store44, %list.RocList zeroinitializer, ptr nonnull %result_value45), !dbg !1692
  call fastcc void @"#Attr_#dec_39"(%list.RocList zeroinitializer), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store44), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp46, ptr noundef nonnull align 8 dereferenceable(56) %result_value45, i64 56, i1 false), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp46, i64 56, i1 false), !dbg !1692
  br label %joinpointcont, !dbg !1692

branch4:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element49, ptr noundef nonnull align 8 dereferenceable(24) %tag2, i64 24, i1 false), !dbg !1692
  store ptr inttoptr (i64 5073144904443650384 to ptr), ptr %const_str_store50, align 8, !dbg !1692
  %const_str_store50.repack86 = getelementptr inbounds %str.RocStr, ptr %const_str_store50, i64 0, i32 1, !dbg !1692
  store i64 111542270716257, ptr %const_str_store50.repack86, align 8, !dbg !1692
  %const_str_store50.repack87 = getelementptr inbounds %str.RocStr, ptr %const_str_store50, i64 0, i32 2, !dbg !1692
  store i64 -8214565720323784704, ptr %const_str_store50.repack87, align 8, !dbg !1692
  call fastcc void @Inspect_dbgStr_2fa65620f1c8398249204c364eff9d936f25b95f1952125d69a57fdd75bbe7(ptr nonnull %load_element49, ptr nonnull %result_value51), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element49), !dbg !1692
  %call_builtin52 = call ptr @roc_builtins.utils.allocate_with_refcount(i64 40, i32 8, i1 true), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin52, ptr noundef nonnull align 8 dereferenceable(40) %result_value51, i64 40, i1 false), !dbg !1692
  %insert_record_field54 = insertvalue %list.RocList zeroinitializer, ptr %call_builtin52, 0, !dbg !1692
  %insert_record_field55 = insertvalue %list.RocList %insert_record_field54, i64 1, 1, !dbg !1692
  %insert_record_field56 = insertvalue %list.RocList %insert_record_field55, i64 1, 2, !dbg !1692
  call fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr nonnull %const_str_store50, %list.RocList %insert_record_field56, ptr nonnull %result_value57), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store50), !dbg !1692
  call fastcc void @"#Attr_#dec_39"(%list.RocList %insert_record_field56), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp58, ptr noundef nonnull align 8 dereferenceable(56) %result_value57, i64 56, i1 false), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp58, i64 56, i1 false), !dbg !1692
  br label %joinpointcont, !dbg !1692

branch5:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element61, ptr noundef nonnull align 8 dereferenceable(24) %tag2, i64 24, i1 false), !dbg !1692
  store ptr inttoptr (i64 5289317686557434192 to ptr), ptr %const_str_store62, align 8, !dbg !1692
  %const_str_store62.repack84 = getelementptr inbounds %str.RocStr, ptr %const_str_store62, i64 0, i32 1, !dbg !1692
  store i64 8387229111175570286, ptr %const_str_store62.repack84, align 8, !dbg !1692
  %const_str_store62.repack85 = getelementptr inbounds %str.RocStr, ptr %const_str_store62, i64 0, i32 2, !dbg !1692
  store i64 -7998392938210000795, ptr %const_str_store62.repack85, align 8, !dbg !1692
  call fastcc void @Inspect_dbgStr_2fa65620f1c8398249204c364eff9d936f25b95f1952125d69a57fdd75bbe7(ptr nonnull %load_element61, ptr nonnull %result_value63), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element61), !dbg !1692
  %call_builtin64 = call ptr @roc_builtins.utils.allocate_with_refcount(i64 40, i32 8, i1 true), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin64, ptr noundef nonnull align 8 dereferenceable(40) %result_value63, i64 40, i1 false), !dbg !1692
  %insert_record_field66 = insertvalue %list.RocList zeroinitializer, ptr %call_builtin64, 0, !dbg !1692
  %insert_record_field67 = insertvalue %list.RocList %insert_record_field66, i64 1, 1, !dbg !1692
  %insert_record_field68 = insertvalue %list.RocList %insert_record_field67, i64 1, 2, !dbg !1692
  call fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr nonnull %const_str_store62, %list.RocList %insert_record_field68, ptr nonnull %result_value69), !dbg !1692
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store62), !dbg !1692
  call fastcc void @"#Attr_#dec_39"(%list.RocList %insert_record_field68), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp70, ptr noundef nonnull align 8 dereferenceable(56) %result_value69, i64 56, i1 false), !dbg !1692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp70, i64 56, i1 false), !dbg !1692
  br label %joinpointcont, !dbg !1692
}

define internal fastcc %list.RocList @List_sublistLowlevel_edd459f1588e2edc4160caf3fec49aefc7d7fec1545146fd82c6ba52b293834(%list.RocList %"#arg1", i64 %"#arg2", i64 %"#arg3") !dbg !1694 {
entry:
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1695
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1695
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1695
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !1695
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !1695
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1695
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !1695
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1695
  call void @llvm.experimental.noalias.scope.decl(metadata !1697), !dbg !1695
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !1695
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1695
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !1695
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1695, !noalias !1697
  %0 = icmp eq i64 %.sroa.1.0.copyload.i, 0, !dbg !1695
  %1 = icmp eq i64 %"#arg3", 0, !dbg !1695
  %2 = select i1 %0, i1 true, i1 %1, !dbg !1695
  %3 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !1695
  %or.cond.i = select i1 %2, i1 true, i1 %3, !dbg !1695
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !1695, !noalias !1697
  br i1 %or.cond.i, label %.critedge.i, label %16, !dbg !1695

.critedge.i:                                      ; preds = %entry
  %sunkaddr.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1695
  %.sroa.3.0.copyload57.i = load i64, ptr %sunkaddr.i, align 8, !dbg !1695, !noalias !1697
  %isneg.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1695
  %4 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload57.i, i64 0), !dbg !1695
  %5 = select i1 %isneg.i.i.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1695
  %6 = or i64 %5, %4, !dbg !1695
  %7 = icmp ne i64 %6, 0, !dbg !1695
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %isneg.i.i.i.i, !dbg !1695
  br i1 %brmerge.i.i.i, label %list.RocList.isUnique.exit.i, label %list.RocList.isUnique.exit.thread.i, !dbg !1695

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i
  %8 = icmp slt i64 %.sroa.3.0.copyload57.i, 0, !dbg !1695
  %9 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1695
  %10 = shl i64 %.sroa.3.0.copyload57.i, 1, !dbg !1695
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !1695
  %12 = inttoptr i64 %11 to ptr, !dbg !1695
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !1695
  %14 = load i64, ptr %13, align 8, !dbg !1695, !noalias !1697
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !1695
  br i1 %15, label %list.RocList.isUnique.exit.thread.i, label %.critedge.i.i, !dbg !1695

16:                                               ; preds = %entry
  %.not28.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !1695
  br i1 %.not28.i, label %26, label %22, !dbg !1695

common.ret.i:                                     ; preds = %list.RocList.setAllocationElementCount.exit.i, %list.RocList.isUnique.exit44.thread.i, %list.RocList.isUnique.exit.thread.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1695
  br label %roc_builtins.list.sublist.exit, !dbg !1695

list.RocList.isUnique.exit.thread.i:              ; preds = %list.RocList.isUnique.exit.i, %.critedge.i
  %.not29.i = icmp ne ptr %.sroa.0.0.copyload.i, null, !dbg !1695
  %17 = icmp ne i64 %.sroa.1.0.copyload.i, 0, !dbg !1695
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !1695, !alias.scope !1697
  %.sroa.28.0..sroa_idx9.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1695
  store i64 0, ptr %.sroa.28.0..sroa_idx9.i, align 8, !dbg !1695, !alias.scope !1697
  %.sroa.3.0..sroa_idx11.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1695
  store i64 %.sroa.3.0.copyload57.i, ptr %.sroa.3.0..sroa_idx11.i, align 8, !dbg !1695, !alias.scope !1697
  br label %common.ret.i, !dbg !1695

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i
  %18 = icmp eq i64 %.sroa.3.0.copyload57.i, 0, !dbg !1695
  %19 = icmp eq i64 %11, 0, !dbg !1695
  %or.cond.i.i.not92.i = select i1 %18, i1 true, i1 %19, !dbg !1695
  %.not.i.i.i = icmp eq i64 %14, 0, !dbg !1695
  %or.cond89.i = select i1 %or.cond.i.i.not92.i, i1 true, i1 %.not.i.i.i, !dbg !1695
  br i1 %or.cond89.i, label %list.RocList.decref.exit.i, label %20, !dbg !1695

20:                                               ; preds = %.critedge.i.i
  %21 = add nsw i64 %14, -1, !dbg !1695
  %sunkaddr101.i = inttoptr i64 %11 to ptr, !dbg !1695
  %sunkaddr102.i = getelementptr inbounds i8, ptr %sunkaddr101.i, i64 -8, !dbg !1695
  store i64 %21, ptr %sunkaddr102.i, align 8, !dbg !1695, !noalias !1697
  br label %list.RocList.decref.exit.i, !dbg !1695

list.RocList.decref.exit.i:                       ; preds = %20, %.critedge.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1695, !alias.scope !1697
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1695
  br label %roc_builtins.list.sublist.exit, !dbg !1695

22:                                               ; preds = %16
  %23 = sub nuw i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !1695
  %24 = call i64 @llvm.umin.i64(i64 %"#arg3", i64 %23), !dbg !1695
  %25 = icmp eq i64 %"#arg2", 0, !dbg !1695
  %sunkaddr103.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1695
  %.sroa.363.0.copyload.i = load i64, ptr %sunkaddr103.i, align 8, !dbg !1695, !noalias !1697
  br i1 %25, label %27, label %..critedge2_crit_edge.i, !dbg !1695

..critedge2_crit_edge.i:                          ; preds = %22
  %.pre.i = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1695
  br label %.critedge2.i, !dbg !1695

26:                                               ; preds = %16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, i8 0, i64 24, i1 false), !dbg !1695, !alias.scope !1697
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1695
  br label %roc_builtins.list.sublist.exit, !dbg !1695

27:                                               ; preds = %22
  %isneg.i.i.i39.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1695
  %28 = call i64 @llvm.smax.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1695
  %29 = select i1 %isneg.i.i.i39.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1695
  %30 = or i64 %29, %28, !dbg !1695
  %31 = icmp ne i64 %30, 0, !dbg !1695
  %brmerge.i.i40.i = select i1 %31, i1 true, i1 %isneg.i.i.i39.i, !dbg !1695
  br i1 %brmerge.i.i40.i, label %list.RocList.isUnique.exit44.i, label %list.RocList.isUnique.exit44.thread.i, !dbg !1695

list.RocList.isUnique.exit44.i:                   ; preds = %27
  %32 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1695
  %33 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1695
  %34 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !1695
  %35 = select i1 %32, i64 %34, i64 %33, !dbg !1695
  %36 = inttoptr i64 %35 to ptr, !dbg !1695
  %37 = getelementptr inbounds i64, ptr %36, i64 -1, !dbg !1695
  %38 = load i64, ptr %37, align 8, !dbg !1695, !noalias !1697
  %39 = icmp eq i64 %38, -9223372036854775808, !dbg !1695
  br i1 %39, label %list.RocList.isUnique.exit44.thread.i, label %.critedge2.i, !dbg !1695

list.RocList.isUnique.exit44.thread.i:            ; preds = %list.RocList.isUnique.exit44.i, %27
  %.not.not.i = icmp ugt i64 %23, %"#arg3", !dbg !1695
  store ptr %.sroa.0.0.copyload.i, ptr %list_alloca, align 8, !dbg !1695, !alias.scope !1697
  %.sroa.218.0..sroa_idx19.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1695
  store i64 %24, ptr %.sroa.218.0..sroa_idx19.i, align 8, !dbg !1695, !alias.scope !1697
  %.sroa.321.0..sroa_idx22.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1695
  store i64 %.sroa.363.0.copyload.i, ptr %.sroa.321.0..sroa_idx22.i, align 8, !dbg !1695, !alias.scope !1697
  br label %common.ret.i, !dbg !1695

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit44.i, %..critedge2_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %..critedge2_crit_edge.i ], [ %28, %list.RocList.isUnique.exit44.i ], !dbg !1695
  %isneg.i.i.i49.i = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1695
  %40 = select i1 %isneg.i.i.i49.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1695
  %41 = or i64 %40, %.pre-phi.i, !dbg !1695
  %42 = icmp ne i64 %41, 0, !dbg !1695
  %brmerge.i.i50.i = select i1 %42, i1 true, i1 %isneg.i.i.i49.i, !dbg !1695
  br i1 %brmerge.i.i50.i, label %list.RocList.isUnique.exit54.i, label %list.RocList.isUnique.exit54.thread.i, !dbg !1695

list.RocList.isUnique.exit54.i:                   ; preds = %.critedge2.i
  %43 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1695
  %44 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1695
  %45 = shl i64 %.sroa.363.0.copyload.i, 1, !dbg !1695
  %46 = select i1 %43, i64 %45, i64 %44, !dbg !1695
  %47 = inttoptr i64 %46 to ptr, !dbg !1695
  %48 = getelementptr inbounds i64, ptr %47, i64 -1, !dbg !1695
  %49 = load i64, ptr %48, align 8, !dbg !1695, !noalias !1697
  %50 = icmp ne i64 %49, -9223372036854775808, !dbg !1695
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !1695

list.RocList.setAllocationElementCount.exit.i:    ; preds = %list.RocList.isUnique.exit54.thread.i, %list.RocList.isUnique.exit54.i
  %51 = icmp slt i64 %.sroa.363.0.copyload.i, 0, !dbg !1695
  %52 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !1695
  %53 = lshr i64 %52, 1, !dbg !1695
  %54 = or i64 %53, -9223372036854775808, !dbg !1695
  %55 = select i1 %51, i64 0, i64 %54, !dbg !1695
  %56 = call i64 @llvm.smin.i64(i64 %.sroa.363.0.copyload.i, i64 0), !dbg !1695
  %57 = or i64 %56, %55, !dbg !1695
  %58 = mul nuw i64 %"#arg2", 8, !dbg !1695
  %59 = getelementptr inbounds i8, ptr %.sroa.0.0.copyload.i, i64 %58, !dbg !1695
  store ptr %59, ptr %list_alloca, align 8, !dbg !1695, !alias.scope !1697
  %60 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1695
  store i64 %24, ptr %60, align 8, !dbg !1695, !alias.scope !1697
  %61 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1695
  store i64 %57, ptr %61, align 8, !dbg !1695, !alias.scope !1697
  br label %common.ret.i, !dbg !1695

list.RocList.isUnique.exit54.thread.i:            ; preds = %.critedge2.i
  br label %list.RocList.setAllocationElementCount.exit.i, !dbg !1695

roc_builtins.list.sublist.exit:                   ; preds = %26, %list.RocList.decref.exit.i, %common.ret.i
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1695
  %62 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1695
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1695
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !1695
  %63 = insertvalue %list.RocList %62, i64 %load_list.unpack7, 1, !dbg !1695
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1695
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1695
  %load_list10 = insertvalue %list.RocList %63, i64 %load_list.unpack9, 2, !dbg !1695
  ret %list.RocList %load_list10, !dbg !1695
}

define internal fastcc %list.RocList @Five_85_4fb36d6b5bafed91b1af2ed219ed16e953dd85fb4918fd484493843c0df9dca(%list.RocList %update, ptr %rulesDict) !dbg !1700 {
entry:
  %call = tail call fastcc %list.RocList @List_sortWith_49cb6ad1f356dc514791c661f63f6841479dc80eaa158e38e2871686552(%list.RocList %update, ptr %rulesDict), !dbg !1701
  ret %list.RocList %call, !dbg !1701
}

define internal fastcc void @"#Derived_toInspector_[CodepointTooLarge 0,EncodesSurrogateHalf 0,ExpectedContinuation 0,InvalidStartByte 0,OverlongEncoding 0,UnexpectedEndOfSequence 0]_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2"(i8 %tag6, ptr %0) !dbg !1703 {
entry:
  %result_value = alloca { [1 x i64], i8 }, align 8, !dbg !1704
  %tag_alloca = alloca { [1 x i64], i8 }, align 8, !dbg !1704
  store i8 %tag6, ptr %tag_alloca, align 8, !dbg !1704
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1704
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !1704
  call fastcc void @Inspect_custom_b1578731274e6ff96daec13b4ab0dd54752d378ad5e32dad77e43ac706ee6(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !1704
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %result_value, i64 16, i1 false), !dbg !1704
  ret void, !dbg !1704
}

define internal fastcc void @Inspect_210_8ea7496e29805228ef349bc4b276e9615dfd3c8f9efc993f6ae85ec2210a763(ptr %f2, ptr %inspector, ptr %0) !dbg !1706 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 32 to ptr), ptr %const_str_store, align 8, !dbg !1707
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1707
  store i64 0, ptr %const_str_store.repack2, align 8, !dbg !1707
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1707
  store i64 -9151314442816847872, ptr %const_str_store.repack3, align 8, !dbg !1707
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f2, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1707
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1707
  call fastcc void @Inspect_213_dcb273fb5185f78cd65b7adda9732f8bba62aec766939b09e25f2a158a74543(ptr nonnull %result_value, ptr %inspector, ptr nonnull %result_value1), !dbg !1707
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value), !dbg !1707
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !1707
  ret void, !dbg !1707
}

define internal fastcc i1 @List_all_19a01698b1f1f64ca782bce3c6b70dbfe2947aebabe3f6b126ebdf6166ecc31(%list.RocList %list, ptr %predicate) !dbg !1709 {
entry:
  %result_value = alloca { [0 x i8], i8 }, align 8
  call fastcc void @List_iterate_c84245e9d5a8bbcea28f19811f38b2e7a05f277c949080724954fddcea11aca3(%list.RocList %list, {} zeroinitializer, ptr %predicate, ptr nonnull %result_value), !dbg !1710
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1710
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1710
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1710
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1710

then_block:                                       ; preds = %entry
  %call = call fastcc i1 @Bool_true_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb(), !dbg !1710
  ret i1 %call, !dbg !1710

else_block:                                       ; preds = %entry
  %call1 = call fastcc i1 @Bool_false_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671(), !dbg !1710
  ret i1 %call1, !dbg !1710
}

define internal fastcc i64 @Num_shiftRightZfBy_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0(i64 %"#arg1", i8 %"#arg2") !dbg !1712 {
entry:
  %cast_for_shift1 = zext i8 %"#arg2" to i64, !dbg !1713
  %int_shift_right_zf = lshr i64 %"#arg1", %cast_for_shift1, !dbg !1713
  ret i64 %int_shift_right_zf, !dbg !1713
}

define internal fastcc %list.RocList @List_swap_dbefccae6de790f8e3497ad3c6c1c58a12a744edb0d65ec1ec4ade8b1151a59b(%list.RocList %"#arg1", i64 %"#arg2", i64 %"#arg3") !dbg !1715 {
entry:
  %0 = alloca [64 x i8], align 1
  %1 = alloca %list.RocList, align 8
  %2 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1716
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1716
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1716
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !1716
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !1716
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1716
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !1716
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1716
  call void @llvm.experimental.noalias.scope.decl(metadata !1718), !dbg !1716
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !1716
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !1716
  call void @llvm.lifetime.start.p0(i64 24, ptr %2), !dbg !1716
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1716
  %3 = icmp eq i64 %"#arg2", %"#arg3", !dbg !1716
  br i1 %3, label %roc_builtins.list.swap.exit, label %4, !dbg !1716

4:                                                ; preds = %entry
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !1716
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1716, !noalias !1718
  %5 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !1716
  %6 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg3", !dbg !1716
  %7 = select i1 %5, i1 true, i1 %6, !dbg !1716
  br i1 %7, label %roc_builtins.list.swap.exit, label %8, !dbg !1716

8:                                                ; preds = %4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !1716, !noalias !1718
  call void @llvm.experimental.noalias.scope.decl(metadata !1721), !dbg !1716
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1716
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !1716, !noalias !1724
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %2, i64 16, !dbg !1716
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !1716, !noalias !1724
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1716
  %9 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !1716
  %10 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !1716
  %11 = or i64 %10, %9, !dbg !1716
  %12 = icmp ne i64 %11, 0, !dbg !1716
  %brmerge.i.i.i.i = select i1 %12, i1 true, i1 %isneg.i.i.i.i.i, !dbg !1716
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !1716

list.RocList.isUnique.exit.i.i:                   ; preds = %8
  %13 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1716
  %.sroa.0.0.copyload.i.i = load ptr, ptr %2, align 8, !dbg !1716, !noalias !1724
  %14 = ptrtoint ptr %.sroa.0.0.copyload.i.i to i64, !dbg !1716
  %15 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !1716
  %16 = select i1 %13, i64 %15, i64 %14, !dbg !1716
  %17 = inttoptr i64 %16 to ptr, !dbg !1716
  %18 = getelementptr inbounds i64, ptr %17, i64 -1, !dbg !1716
  %19 = load i64, ptr %18, align 8, !dbg !1716, !noalias !1724
  %20 = icmp eq i64 %19, -9223372036854775808, !dbg !1716
  br i1 %20, label %list.RocList.isUnique.exit.thread.i.i, label %21, !dbg !1716

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false), !dbg !1716, !noalias !1718
  br label %list.RocList.makeUnique.exit.i, !dbg !1716

21:                                               ; preds = %list.RocList.isUnique.exit.i.i
  %22 = icmp eq i64 %.sroa.2.0.copyload.i.i, 0, !dbg !1716
  br i1 %22, label %.critedge.i.i.i, label %27, !dbg !1716

.critedge.i.i.i:                                  ; preds = %21
  %23 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !1716
  %24 = icmp eq i64 %16, 0, !dbg !1716
  %or.cond.i.i.not69.i.i = select i1 %23, i1 true, i1 %24, !dbg !1716
  %.not.i.i.i.i = icmp eq i64 %19, 0, !dbg !1716
  %or.cond.i.i = select i1 %or.cond.i.i.not69.i.i, i1 true, i1 %.not.i.i.i.i, !dbg !1716
  br i1 %or.cond.i.i, label %list.RocList.decref.exit.i.i, label %25, !dbg !1716

25:                                               ; preds = %.critedge.i.i.i
  %26 = add nsw i64 %19, -1, !dbg !1716
  %sunkaddr.i.i = inttoptr i64 %16 to ptr, !dbg !1716
  %sunkaddr73.i.i = getelementptr inbounds i8, ptr %sunkaddr.i.i, i64 -8, !dbg !1716
  store i64 %26, ptr %sunkaddr73.i.i, align 8, !dbg !1716, !noalias !1724
  br label %list.RocList.decref.exit.i.i, !dbg !1716

list.RocList.decref.exit.i.i:                     ; preds = %25, %.critedge.i.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, i8 0, i64 24, i1 false), !dbg !1716, !alias.scope !1721, !noalias !1718
  br label %list.RocList.makeUnique.exit.i, !dbg !1716

27:                                               ; preds = %21
  %28 = call i64 @llvm.umax.i64(i64 2, i64 %.sroa.2.0.copyload.i.i), !dbg !1716
  %29 = mul nuw i64 %28, 32, !dbg !1716
  %30 = add nuw i64 %29, 16, !dbg !1716
  %31 = call ptr @roc_alloc(i64 %30, i32 8), !dbg !1716, !noalias !1725
  %32 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !1716
  %33 = getelementptr inbounds i8, ptr %32, i64 -8, !dbg !1716
  store i64 -9223372036854775808, ptr %33, align 8, !dbg !1716, !noalias !1725
  %sunkaddr74.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1716
  %.sroa.1.0.copyload.pre.i.i = load i64, ptr %sunkaddr74.i.i, align 8, !dbg !1716, !noalias !1724
  %.pre.i.i = load ptr, ptr %2, align 8, !dbg !1716, !noalias !1724
  %34 = mul nuw i64 %.sroa.1.0.copyload.pre.i.i, 32, !dbg !1716
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %32, ptr align 1 %.pre.i.i, i64 %34, i1 false), !dbg !1716, !noalias !1724
  %sunkaddr75.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1716
  %.sroa.16.0.copyload63.i.i = load i64, ptr %sunkaddr75.i.i, align 8, !dbg !1716, !noalias !1724
  %.not.i.i = icmp eq i64 %.sroa.16.0.copyload63.i.i, 0, !dbg !1716
  br i1 %.not.i.i, label %.loopexit.i.i, label %.lr.ph.preheader.i.i, !dbg !1716

.lr.ph.preheader.i.i:                             ; preds = %27
  br label %.lr.ph.i.i, !dbg !1716

.critedge.i19.i.i:                                ; preds = %.lr.ph.i40.i.i, %list.RocList.getAllocationElementCount.exit.i37.i.i, %list.RocList.isUnique.exit.thread.i33.i.i, %list.RocList.isUnique.exit.i29.i.i
  %35 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !1716
  %36 = shl i64 %.sroa.453.0.copyload.i.i, 1, !dbg !1716
  %isneg.i.i17.i.i = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1716
  %37 = select i1 %isneg.i.i17.i.i, i64 %36, i64 %35, !dbg !1716
  %38 = icmp ne i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1716
  %39 = icmp ne i64 %37, 0, !dbg !1716
  %or.cond.i.i18.i.i = select i1 %38, i1 %39, i1 false, !dbg !1716
  br i1 %or.cond.i.i18.i.i, label %40, label %list.RocList.decref.exit41.i.i, !dbg !1716

40:                                               ; preds = %.critedge.i19.i.i
  %41 = inttoptr i64 %37 to ptr, !dbg !1716
  %42 = getelementptr inbounds i64, ptr %41, i64 -1, !dbg !1716
  %43 = load i64, ptr %42, align 8, !dbg !1716, !noalias !1724
  %.not.i.i20.i.i = icmp eq i64 %43, 0, !dbg !1716
  br i1 %.not.i.i20.i.i, label %list.RocList.decref.exit41.i.i, label %44, !dbg !1716

44:                                               ; preds = %40
  %45 = add i64 %43, -1, !dbg !1716
  store i64 %45, ptr %42, align 8, !dbg !1716, !noalias !1724
  %46 = icmp eq i64 %43, -9223372036854775808, !dbg !1716
  br i1 %46, label %47, label %list.RocList.decref.exit41.i.i, !dbg !1716

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, ptr %42, i64 -8, !dbg !1716
  call void @roc_dealloc(ptr nonnull align 1 %48, i32 8), !dbg !1716, !noalias !1724
  br label %list.RocList.decref.exit41.i.i, !dbg !1716

.loopexit.i.i:                                    ; preds = %.lr.ph.i.i, %27
  %.sroa.352.0.copyload.i.i = phi i64 [ 0, %27 ], [ %.sroa.16.0.copyload.i.i, %.lr.ph.i.i ], !dbg !1716
  %.sroa.051.0.copyload.i.i = load ptr, ptr %2, align 8, !dbg !1716, !noalias !1724
  %sunkaddr77.i.i = getelementptr inbounds i8, ptr %2, i64 16, !dbg !1716
  %.sroa.453.0.copyload.i.i = load i64, ptr %sunkaddr77.i.i, align 8, !dbg !1716, !noalias !1724
  %isneg.i.i.i.i27.i.i = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1716
  %49 = call i64 @llvm.smax.i64(i64 %.sroa.453.0.copyload.i.i, i64 0), !dbg !1716
  %50 = select i1 %isneg.i.i.i.i27.i.i, i64 %.sroa.352.0.copyload.i.i, i64 0, !dbg !1716
  %51 = or i64 %50, %49, !dbg !1716
  %52 = icmp ne i64 %51, 0, !dbg !1716
  %brmerge.i.i.i28.i.i = select i1 %52, i1 true, i1 %isneg.i.i.i.i27.i.i, !dbg !1716
  %53 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !1716
  %54 = shl i64 %.sroa.453.0.copyload.i.i, 1, !dbg !1716
  br i1 %brmerge.i.i.i28.i.i, label %list.RocList.isUnique.exit.i29.i.i, label %list.RocList.isUnique.exit.thread.i33.i.i, !dbg !1716

list.RocList.isUnique.exit.i29.i.i:               ; preds = %.loopexit.i.i
  %55 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !1716
  %56 = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1716
  %57 = select i1 %56, i64 %54, i64 %55, !dbg !1716
  %58 = inttoptr i64 %57 to ptr, !dbg !1716
  %59 = getelementptr inbounds i64, ptr %58, i64 -1, !dbg !1716
  %60 = load i64, ptr %59, align 8, !dbg !1716, !noalias !1724
  %61 = icmp eq i64 %60, -9223372036854775808, !dbg !1716
  br i1 %61, label %list.RocList.isUnique.exit.thread.i33.i.i, label %.critedge.i19.i.i, !dbg !1716

list.RocList.isUnique.exit.thread.i33.i.i:        ; preds = %list.RocList.isUnique.exit.i29.i.i, %.loopexit.i.i
  %.pre-phi22.i30.i.i = phi ptr [ %58, %list.RocList.isUnique.exit.i29.i.i ], [ %.sroa.051.0.copyload.i.i, %.loopexit.i.i ], !dbg !1716
  %.pre-phi20.i31.i.i = phi i64 [ %57, %list.RocList.isUnique.exit.i29.i.i ], [ %53, %.loopexit.i.i ], !dbg !1716
  %.not.i32.i.i = icmp eq i64 %.pre-phi20.i31.i.i, 0, !dbg !1716
  br i1 %.not.i32.i.i, label %.critedge.i19.i.i, label %62, !dbg !1716

62:                                               ; preds = %list.RocList.isUnique.exit.thread.i33.i.i
  %63 = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !1716
  br i1 %63, label %64, label %list.RocList.getAllocationElementCount.exit.i37.i.i, !dbg !1716

64:                                               ; preds = %62
  %65 = inttoptr i64 %54 to ptr, !dbg !1716
  %66 = getelementptr inbounds i64, ptr %65, i64 -2, !dbg !1716
  %common.ret.op.in.i.sroa.speculate.load.10.i34.i.i = load i64, ptr %66, align 8, !dbg !1716, !noalias !1724
  br label %list.RocList.getAllocationElementCount.exit.i37.i.i, !dbg !1716

list.RocList.getAllocationElementCount.exit.i37.i.i: ; preds = %64, %62
  %common.ret.op.in.i.sroa.speculated.i35.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i34.i.i, %64 ], [ %.sroa.352.0.copyload.i.i, %62 ], !dbg !1716
  %.not16.i36.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i35.i.i, 0, !dbg !1716
  br i1 %.not16.i36.i.i, label %.critedge.i19.i.i, label %.lr.ph.i40.preheader.i.i, !dbg !1716

.lr.ph.i40.preheader.i.i:                         ; preds = %list.RocList.getAllocationElementCount.exit.i37.i.i
  br label %.lr.ph.i40.i.i, !dbg !1716

.lr.ph.i40.i.i:                                   ; preds = %.lr.ph.i40.i.i, %.lr.ph.i40.preheader.i.i
  %lsr.iv70.i.i = phi ptr [ %.pre-phi22.i30.i.i, %.lr.ph.i40.preheader.i.i ], [ %uglygep.i.i, %.lr.ph.i40.i.i ], !dbg !1716
  %lsr.iv.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i35.i.i, %.lr.ph.i40.preheader.i.i ], [ %lsr.iv.next.i.i, %.lr.ph.i40.i.i ], !dbg !1716
  %load_opaque.i = load { i64, %list.RocList }, ptr %lsr.iv70.i.i, align 8, !dbg !1728, !noalias !1724
  call fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %load_opaque.i) #18, !dbg !1728, !noalias !1724
  %lsr.iv.next.i.i = add i64 %lsr.iv.i.i, -1, !dbg !1716
  %uglygep.i.i = getelementptr i8, ptr %lsr.iv70.i.i, i64 32, !dbg !1716
  %exitcond.not.i39.i.i = icmp eq i64 %lsr.iv.next.i.i, 0, !dbg !1716
  br i1 %exitcond.not.i39.i.i, label %.critedge.i19.i.i, label %.lr.ph.i40.i.i, !dbg !1716

list.RocList.decref.exit41.i.i:                   ; preds = %47, %44, %40, %.critedge.i19.i.i
  store ptr %32, ptr %1, align 8, !dbg !1716, !alias.scope !1721, !noalias !1718
  %.sroa.450.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1716
  store i64 %.sroa.2.0.copyload.i.i, ptr %.sroa.450.0..sroa_idx.i.i, align 8, !dbg !1716, !alias.scope !1721, !noalias !1718
  %.sroa.5.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !1716
  store i64 %28, ptr %.sroa.5.0..sroa_idx.i.i, align 8, !dbg !1716, !alias.scope !1721, !noalias !1718
  br label %list.RocList.makeUnique.exit.i, !dbg !1716

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.preheader.i.i
  %lsr.iv71.i.i = phi ptr [ %32, %.lr.ph.preheader.i.i ], [ %uglygep72.i.i, %.lr.ph.i.i ], !dbg !1716
  %.064.i.i = phi i64 [ %67, %.lr.ph.i.i ], [ 0, %.lr.ph.preheader.i.i ], !dbg !1716
  %load_opaque.i12 = load { i64, %list.RocList }, ptr %lsr.iv71.i.i, align 8, !dbg !1730, !noalias !1724
  call fastcc void @"#Attr_#inc_8"({ i64, %list.RocList } %load_opaque.i12, i64 1) #18, !dbg !1730, !noalias !1724
  %67 = add nuw i64 %.064.i.i, 1, !dbg !1716
  %sunkaddr78.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !1716
  %.sroa.16.0.copyload.i.i = load i64, ptr %sunkaddr78.i.i, align 8, !dbg !1716, !noalias !1724
  %uglygep72.i.i = getelementptr i8, ptr %lsr.iv71.i.i, i64 32, !dbg !1716
  %68 = icmp ult i64 %67, %.sroa.16.0.copyload.i.i, !dbg !1716
  br i1 %68, label %.lr.ph.i.i, label %.loopexit.i.i, !dbg !1716

list.RocList.makeUnique.exit.i:                   ; preds = %list.RocList.decref.exit41.i.i, %list.RocList.decref.exit.i.i, %list.RocList.isUnique.exit.thread.i.i
  %69 = load ptr, ptr %1, align 8, !dbg !1716, !noalias !1718
  %70 = mul nuw i64 %"#arg2", 32, !dbg !1716
  %71 = getelementptr i8, ptr %69, i64 %70, !dbg !1716
  %72 = mul nuw i64 %"#arg3", 32, !dbg !1716
  %73 = getelementptr inbounds i8, ptr %69, i64 %72, !dbg !1716
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %0), !dbg !1716, !noalias !1718
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %71, i64 ptrtoint (ptr getelementptr ({ i64, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !1732, !noalias !1718
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %71, ptr align 8 %73, i64 ptrtoint (ptr getelementptr ({ i64, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !1734, !noalias !1718
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %73, ptr align 8 %0, i64 ptrtoint (ptr getelementptr ({ i64, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !1736, !noalias !1718
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %0), !dbg !1716, !noalias !1718
  br label %roc_builtins.list.swap.exit, !dbg !1716

roc_builtins.list.swap.exit:                      ; preds = %entry, %4, %list.RocList.makeUnique.exit.i
  %.sink.i = phi ptr [ %1, %list.RocList.makeUnique.exit.i ], [ %list_alloca111, %entry ], [ %list_alloca111, %4 ], !dbg !1716
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %.sink.i, i64 24, i1 false), !dbg !1716
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1716
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !1716
  call void @llvm.lifetime.end.p0(i64 24, ptr %2), !dbg !1716
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1716
  %74 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1716
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1716
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !1716
  %75 = insertvalue %list.RocList %74, i64 %load_list.unpack7, 1, !dbg !1716
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1716
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1716
  %load_list10 = insertvalue %list.RocList %75, i64 %load_list.unpack9, 2, !dbg !1716
  ret %list.RocList %load_list10, !dbg !1716
}

define internal fastcc void @Inspect_250_864dab640f4e5815dcc2e864a26afb3cfd96d7f7e7654fb58cfd09f8eb263(ptr %f0, ptr %s, ptr %0) !dbg !1738 {
entry:
  %result_value3 = alloca %str.RocStr, align 8
  %const_str_store2 = alloca %str.RocStr, align 8
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store, align 8, !dbg !1739
  %const_str_store.repack4 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1739
  store i64 0, ptr %const_str_store.repack4, align 8, !dbg !1739
  %const_str_store.repack5 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1739
  store i64 -9151314442816847872, ptr %const_str_store.repack5, align 8, !dbg !1739
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1739
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1739
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value, ptr %s, ptr nonnull %result_value1), !dbg !1739
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store2, align 8, !dbg !1739
  %const_str_store2.repack6 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 1, !dbg !1739
  store i64 0, ptr %const_str_store2.repack6, align 8, !dbg !1739
  %const_str_store2.repack7 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 2, !dbg !1739
  store i64 -9151314442816847872, ptr %const_str_store2.repack7, align 8, !dbg !1739
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value1, ptr nonnull %const_str_store2, ptr nonnull %result_value3), !dbg !1739
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store2), !dbg !1739
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value3, i64 24, i1 false), !dbg !1739
  ret void, !dbg !1739
}

define internal fastcc void @Inspect_dbgStr_2fa65620f1c8398249204c364eff9d936f25b95f1952125d69a57fdd75bbe7(ptr %s, ptr %0) !dbg !1741 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1742
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1742
  tail call fastcc void @"#Attr_#inc_13"(ptr %s, i64 1), !dbg !1742
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %s, align 8, !dbg !1742
  %load_tag_to_put_in_struct.elt1 = getelementptr inbounds %str.RocStr, ptr %s, i64 0, i32 1, !dbg !1742
  %load_tag_to_put_in_struct.unpack2 = load i64, ptr %load_tag_to_put_in_struct.elt1, align 8, !dbg !1742
  %load_tag_to_put_in_struct.elt3 = getelementptr inbounds %str.RocStr, ptr %s, i64 0, i32 2, !dbg !1742
  %load_tag_to_put_in_struct.unpack4 = load i64, ptr %load_tag_to_put_in_struct.elt3, align 8, !dbg !1742
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1742
  %tag_alloca.repack6 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1742
  store i64 %load_tag_to_put_in_struct.unpack2, ptr %tag_alloca.repack6, align 8, !dbg !1742
  %tag_alloca.repack8 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1742
  store i64 %load_tag_to_put_in_struct.unpack4, ptr %tag_alloca.repack8, align 8, !dbg !1742
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1742
  store i8 3, ptr %tag_id_ptr, align 8, !dbg !1742
  call fastcc void @Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !1742
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1742
  ret void, !dbg !1742
}

define internal fastcc %list.RocList @List_dropLast_ab6bf482529beb271842e34a3922217532b2f57565d72aea510e9edbdcef6(%list.RocList %list, i64 %n) !dbg !1744 {
entry:
  %call = tail call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %list), !dbg !1745
  %call1 = tail call fastcc i64 @Num_subSaturated_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd(i64 %call, i64 %n), !dbg !1745
  %call2 = tail call fastcc %list.RocList @List_takeFirst_ca98df76e744faeef21fb76918295997c9c1b552a2e623d6fc162a11de8fae(%list.RocList %list, i64 %call1), !dbg !1745
  ret %list.RocList %call2, !dbg !1745
}

define internal fastcc void @Str_firstMatchHelp_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0(ptr %"333", ptr %"334", i64 %"335", i64 %"336", ptr %0) !dbg !1747 {
entry:
  %tag_alloca11 = alloca { [1 x i64], i8 }, align 8
  %tmp_output_for_jmp10 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp9 = alloca %str.RocStr, align 8
  %tag_alloca = alloca { [1 x i64], i8 }, align 8
  %tmp_output_for_jmp3 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca1 = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#inc_13"(ptr %"333", i64 1), !dbg !1748
  tail call fastcc void @"#Attr_#inc_13"(ptr %"334", i64 1), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(24) %"333", i64 24, i1 false), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp3, ptr noundef nonnull align 8 dereferenceable(24) %"334", i64 24, i1 false), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, i64 24, i1 false), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca1, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp3, i64 24, i1 false), !dbg !1748
  br label %joinpointcont, !dbg !1748

joinpointcont:                                    ; preds = %else_block7, %entry
  %joinpointarg = phi i64 [ %"335", %entry ], [ %call8, %else_block7 ], !dbg !1748
  %call = call fastcc i1 @Num_isLte_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df(i64 %joinpointarg, i64 %"336"), !dbg !1748
  br i1 %call, label %then_block, label %else_block, !dbg !1748

then_block:                                       ; preds = %joinpointcont
  %call4 = call fastcc i1 @Str_matchesAt_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c(ptr nonnull %joinpoint_arg_alloca, i64 %joinpointarg, ptr nonnull %joinpoint_arg_alloca1), !dbg !1748
  br i1 %call4, label %then_block6, label %else_block7, !dbg !1748

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %joinpoint_arg_alloca1), !dbg !1748
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %joinpoint_arg_alloca), !dbg !1748
  %tag_id_ptr13 = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca11, i64 0, i32 1, !dbg !1748
  store i8 0, ptr %tag_id_ptr13, align 8, !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca11, i64 16, i1 false), !dbg !1748
  ret void, !dbg !1748

then_block6:                                      ; preds = %then_block
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %joinpoint_arg_alloca1), !dbg !1748
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %joinpoint_arg_alloca), !dbg !1748
  store i64 %joinpointarg, ptr %tag_alloca, align 8, !dbg !1748
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1748
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca, i64 16, i1 false), !dbg !1748
  ret void, !dbg !1748

else_block7:                                      ; preds = %then_block
  %call8 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg, i64 1), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp9, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, i64 24, i1 false), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp10, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca1, i64 24, i1 false), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp9, i64 24, i1 false), !dbg !1748
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca1, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp10, i64 24, i1 false), !dbg !1748
  br label %joinpointcont, !dbg !1748
}

define internal fastcc void @"#Derived_custom5_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8"(ptr %fmt5, ptr %"#arg_closure", ptr %0) !dbg !1750 {
entry:
  %result_value7 = alloca %str.RocStr, align 8, !dbg !1751
  %tmp_output_for_jmp = alloca { [6 x i64], i8 }, align 8, !dbg !1751
  %result_value6 = alloca { [6 x i64], i8 }, align 8, !dbg !1751
  %result_value2 = alloca { [1 x i64], i8 }, align 8, !dbg !1751
  %result_value = alloca { [1 x i64], i8 }, align 8, !dbg !1751
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1751
  %joinpoint_arg_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1751
  %load_element = load { i64, i8 }, ptr %"#arg_closure", align 8, !dbg !1751
  %struct_field_access_record_0 = extractvalue { i64, i8 } %load_element, 0, !dbg !1751
  %struct_field_access_record_1 = extractvalue { i64, i8 } %load_element, 1, !dbg !1751
  store ptr inttoptr (i64 15875248530678082 to ptr), ptr %const_str_store, align 8, !dbg !1751
  %const_str_store.repack8 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1751
  store i64 0, ptr %const_str_store.repack8, align 8, !dbg !1751
  %const_str_store.repack9 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1751
  store i64 -8718968878589280256, ptr %const_str_store.repack9, align 8, !dbg !1751
  call fastcc void @"#Derived_toInspector_[CodepointTooLarge 0,EncodesSurrogateHalf 0,ExpectedContinuation 0,InvalidStartByte 0,OverlongEncoding 0,UnexpectedEndOfSequence 0]_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2"(i8 %struct_field_access_record_1, ptr nonnull %result_value), !dbg !1751
  call fastcc void @Inspect_dbgU64_4c76596ba8468090c17ec41cffb26165180de983edd4ec9ae381e395d43ed6(i64 %struct_field_access_record_0, ptr nonnull %result_value2), !dbg !1751
  %call_builtin = call ptr @roc_builtins.utils.allocate_with_refcount(i64 32, i32 8, i1 false), !dbg !1751
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %call_builtin, ptr noundef nonnull align 8 dereferenceable(16) %result_value, i64 16, i1 false), !dbg !1751
  %index3 = getelementptr inbounds { [1 x i64], i8 }, ptr %call_builtin, i64 1, !dbg !1751
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %index3, ptr noundef nonnull align 8 dereferenceable(16) %result_value2, i64 16, i1 false), !dbg !1751
  %insert_record_field = insertvalue %list.RocList zeroinitializer, ptr %call_builtin, 0, !dbg !1751
  %insert_record_field4 = insertvalue %list.RocList %insert_record_field, i64 2, 1, !dbg !1751
  %insert_record_field5 = insertvalue %list.RocList %insert_record_field4, i64 2, 2, !dbg !1751
  call fastcc void @Inspect_dbgTag_e24838de671ca0a02270b7ec8883c848cc12fc1f1889e55bd5162493a6968118(ptr nonnull %const_str_store, %list.RocList %insert_record_field5, ptr nonnull %result_value6), !dbg !1751
  call fastcc void @"#Attr_#dec_32"(%list.RocList %insert_record_field5), !dbg !1751
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1751
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(56) %result_value6, i64 56, i1 false), !dbg !1751
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, i64 56, i1 false), !dbg !1751
  br label %joinpointcont, !dbg !1751

joinpointcont:                                    ; preds = %entry
  call fastcc void @Inspect_apply_b7f585fd6f82cd9d725cedb302bc1875b5e7bb83a5ac59033a7d4152c1447(ptr nonnull %joinpoint_arg_alloca, ptr %fmt5, ptr nonnull %result_value7), !dbg !1751
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value7, i64 24, i1 false), !dbg !1751
  ret void, !dbg !1751
}

define internal fastcc i64 @Dict_wyp1_8c3d9f23c28a38707993803f2903e4f1928ddeb88bfccf06508a8b5141715f() !dbg !1753 {
entry:
  ret i64 -1800455987208640293, !dbg !1754
}

define internal fastcc { i64, i64 } @Dict_combineState_5d26e7953422ce84aac56171b489e0deedf33db4e08b81dcad67e7427bff49({ i64, i64 } %"716", { i64, i64, i64, i64 } %"717") !dbg !1756 {
entry:
  %struct_field_access_record_0 = extractvalue { i64, i64, i64, i64 } %"717", 0, !dbg !1757
  %struct_field_access_record_1 = extractvalue { i64, i64, i64, i64 } %"717", 1, !dbg !1757
  %struct_field_access_record_2 = extractvalue { i64, i64, i64, i64 } %"717", 2, !dbg !1757
  %struct_field_access_record_3 = extractvalue { i64, i64, i64, i64 } %"717", 3, !dbg !1757
  %struct_field_access_record_01 = extractvalue { i64, i64 } %"716", 0, !dbg !1757
  %struct_field_access_record_12 = extractvalue { i64, i64 } %"716", 1, !dbg !1757
  %call = tail call fastcc i64 @Dict_wyp1_8c3d9f23c28a38707993803f2903e4f1928ddeb88bfccf06508a8b5141715f(), !dbg !1757
  %call3 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %struct_field_access_record_0, i64 %call), !dbg !1757
  %call4 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %struct_field_access_record_1, i64 %struct_field_access_record_3), !dbg !1757
  %call5 = tail call fastcc { i64, i64 } @Dict_wymum_7f1997f7fb10ed4c657c136e5122e9272dd2d211216c39a3c7723555eefc6(i64 %call3, i64 %call4), !dbg !1757
  %struct_field_access_record_06 = extractvalue { i64, i64 } %call5, 0, !dbg !1757
  %call7 = tail call fastcc i64 @Dict_wyp0_431d23493ce857ef909e5d189b015e7f4c0aa8086605349b0c3dca4fa76a087(), !dbg !1757
  %call8 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %struct_field_access_record_06, i64 %call7), !dbg !1757
  %call9 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %call8, i64 %struct_field_access_record_2), !dbg !1757
  %struct_field_access_record_110 = extractvalue { i64, i64 } %call5, 1, !dbg !1757
  %call11 = tail call fastcc i64 @Dict_wyp1_8c3d9f23c28a38707993803f2903e4f1928ddeb88bfccf06508a8b5141715f(), !dbg !1757
  %call12 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %struct_field_access_record_110, i64 %call11), !dbg !1757
  %call13 = tail call fastcc i64 @Dict_wymix_7daab025296eba78663b2c113b559f88e566e449ca8ec1339c43daed88577936(i64 %call9, i64 %call12), !dbg !1757
  %call14 = tail call fastcc i64 @Dict_wymix_7daab025296eba78663b2c113b559f88e566e449ca8ec1339c43daed88577936(i64 %struct_field_access_record_12, i64 %call13), !dbg !1757
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %struct_field_access_record_01, 0, !dbg !1757
  %insert_record_field15 = insertvalue { i64, i64 } %insert_record_field, i64 %call14, 1, !dbg !1757
  ret { i64, i64 } %insert_record_field15, !dbg !1757
}

define internal fastcc i64 @Five_partTwo_f1966770f487423b2224f997555d39f4a11ba5fe171e103a4b5b1ab4f2c70(ptr %"90") !dbg !1759 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !1760
  %struct_field.unpack = load ptr, ptr %"90", align 8, !dbg !1760
  %0 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1760
  %struct_field.elt5 = getelementptr inbounds %list.RocList, ptr %"90", i64 0, i32 1, !dbg !1760
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !1760
  %1 = insertvalue %list.RocList %0, i64 %struct_field.unpack6, 1, !dbg !1760
  %struct_field.elt7 = getelementptr inbounds %list.RocList, ptr %"90", i64 0, i32 2, !dbg !1760
  %struct_field.unpack8 = load i64, ptr %struct_field.elt7, align 8, !dbg !1760
  %struct_field9 = insertvalue %list.RocList %1, i64 %struct_field.unpack8, 2, !dbg !1760
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"90", i64 0, i32 1, !dbg !1760
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1760
  %2 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !1760
  %struct_field1.elt10 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"90", i64 0, i32 1, i32 1, !dbg !1760
  %struct_field1.unpack11 = load i64, ptr %struct_field1.elt10, align 8, !dbg !1760
  %3 = insertvalue %list.RocList %2, i64 %struct_field1.unpack11, 1, !dbg !1760
  %struct_field1.elt12 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"90", i64 0, i32 1, i32 2, !dbg !1760
  %struct_field1.unpack13 = load i64, ptr %struct_field1.elt12, align 8, !dbg !1760
  %struct_field114 = insertvalue %list.RocList %3, i64 %struct_field1.unpack13, 2, !dbg !1760
  call fastcc void @Five_makeRules_7bc7b3ab839bcc84a286756163f821081944e9d993409f8654fbccc51f341d(%list.RocList %struct_field9, ptr nonnull %result_value), !dbg !1760
  call fastcc void @"#Attr_#dec_2"(%list.RocList %struct_field9), !dbg !1760
  call fastcc void @"#Attr_#inc_25"(ptr nonnull %result_value, i64 1), !dbg !1760
  %call = call fastcc %list.RocList @List_keepIf_55d628abedfcc0e78784ef0cac7a0c47c774ce17d4fb8ba44f37721d7f3d98(%list.RocList %struct_field114, ptr nonnull %result_value), !dbg !1760
  %call2 = call fastcc %list.RocList @List_map_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894(%list.RocList %call, ptr nonnull %result_value), !dbg !1760
  call fastcc void @"#Attr_#dec_4"(%list.RocList %call), !dbg !1760
  %call3 = call fastcc %list.RocList @List_keepOks_9cc9ac536c41c72f38d2273c43b034822641cbb47ea8853416c10d132561319(%list.RocList %call2, {} zeroinitializer), !dbg !1760
  call fastcc void @"#Attr_#dec_4"(%list.RocList %call2), !dbg !1760
  %call4 = call fastcc i64 @List_sum_1e4d2f1e6b4984301a1489b71481ade3a818d1fae80b8f87ea525c7bff923(%list.RocList %call3), !dbg !1760
  call fastcc void @"#Attr_#dec_1"(%list.RocList %call3), !dbg !1760
  ret i64 %call4, !dbg !1760
}

define internal fastcc void @Task_err_8574b403032b1e41c889178b52ddfe37f79513c5637fbb5bea234401648d296(i32 %a, ptr %0) !dbg !1762 {
entry:
  %tag_alloca = alloca { [5 x i64], i8 }, align 8, !dbg !1763
  store i32 %a, ptr %tag_alloca, align 8, !dbg !1763
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1763
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1763
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !1763
  ret void, !dbg !1763
}

define internal fastcc %list.RocList @List_walk_9d55cb5018ba494bcf5765953355c83e4ade148e5c95b280aacd826c59bea86(%list.RocList %list, %list.RocList %init, {} %func) !dbg !1765 {
entry:
  %call = tail call fastcc i64 @List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6(%list.RocList %list), !dbg !1766
  %call1 = tail call fastcc %list.RocList @List_walkHelp_8e7a40fb7cb2175e9c8b7aee60f44cef84959b742d3a14c483b6e3b14f05c2f(%list.RocList %list, %list.RocList %init, {} %func, i64 0, i64 %call), !dbg !1766
  ret %list.RocList %call1, !dbg !1766
}

define internal fastcc i1 @Str_isEmpty_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d(ptr %"#arg1") !dbg !1768 {
entry:
  %call_builtin = tail call i64 @roc_builtins.str.number_of_bytes(ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1"), !dbg !1769
  %str_len_is_zero = icmp eq i64 %call_builtin, 0, !dbg !1769
  ret i1 %str_len_is_zero, !dbg !1769
}

define internal fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr %"#arg1", ptr %"#arg2", ptr %0) !dbg !1771 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call void @roc_builtins.str.concat(ptr noalias nocapture nonnull sret(%str.RocStr) %str_alloca, ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1", ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg2"), !dbg !1772
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %str_alloca, i64 24, i1 false), !dbg !1772
  ret void, !dbg !1772
}

define internal fastcc %list.RocList @List_keepIfHelp_a1fdfd7ca485c5e9436ed61186fef7b9b914edaf84deff48d9823fcadcd6ac(%list.RocList %"339", ptr %"340", i64 %"341", i64 %"342", i64 %"343") !dbg !1774 {
entry:
  %tmp_output_for_jmp14 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp12 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %joinpoint_arg_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(64) %"340", i64 64, i1 false), !dbg !1775
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, i64 64, i1 false), !dbg !1775
  br label %joinpointcont, !dbg !1775

joinpointcont:                                    ; preds = %else_block8, %then_block7, %entry
  %joinpointarg = phi %list.RocList [ %"339", %entry ], [ %call9, %then_block7 ], [ %joinpointarg, %else_block8 ], !dbg !1775
  %joinpointarg1 = phi i64 [ %"341", %entry ], [ %call10, %then_block7 ], [ %joinpointarg1, %else_block8 ], !dbg !1775
  %joinpointarg2 = phi i64 [ %"342", %entry ], [ %call11, %then_block7 ], [ %call13, %else_block8 ], !dbg !1775
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"343"), !dbg !1775
  br i1 %call, label %then_block, label %else_block, !dbg !1775

then_block:                                       ; preds = %joinpointcont
  %call4 = call fastcc %list.RocList @List_getUnsafe_5d84da6abaf677d342986d45e3605cfd5bd1528ee5196616226adfb513950(%list.RocList %joinpointarg, i64 %joinpointarg2), !dbg !1775
  call fastcc void @"#Attr_#inc_1"(%list.RocList %call4, i64 1), !dbg !1775
  call fastcc void @"#Attr_#inc_25"(ptr nonnull %joinpoint_arg_alloca, i64 1), !dbg !1775
  %call5 = call fastcc i1 @Five_83_e95211bde2283defe545e72d738137b8d7082e1cb419ffde6603c1dfde96f(%list.RocList %call4, ptr nonnull %joinpoint_arg_alloca), !dbg !1775
  call fastcc void @"#Attr_#dec_1"(%list.RocList %call4), !dbg !1775
  br i1 %call5, label %then_block7, label %else_block8, !dbg !1775

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_25"(ptr nonnull %joinpoint_arg_alloca), !dbg !1775
  %call15 = call fastcc %list.RocList @List_takeFirst_b29e3b7af499d7231de5e31772f94a674636903232cb1b301cf274977992d8b(%list.RocList %joinpointarg, i64 %joinpointarg1), !dbg !1775
  ret %list.RocList %call15, !dbg !1775

then_block7:                                      ; preds = %then_block
  %call9 = call fastcc %list.RocList @List_swap_c1becff895d98252d67f432f42e71e6c36db1525fb1c2935030e1f76862(%list.RocList %joinpointarg, i64 %joinpointarg1, i64 %joinpointarg2), !dbg !1775
  %call10 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg1, i64 1), !dbg !1775
  %call11 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !1775
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp12, ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, i64 64, i1 false), !dbg !1775
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp12, i64 64, i1 false), !dbg !1775
  br label %joinpointcont, !dbg !1775

else_block8:                                      ; preds = %then_block
  %call13 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !1775
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp14, ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, i64 64, i1 false), !dbg !1775
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp14, i64 64, i1 false), !dbg !1775
  br label %joinpointcont, !dbg !1775
}

define internal fastcc void @Parser_skip_6c68987bd3d4f8949cad39c27377db22ab8bd15fe9e342f64964ed294c77({ {}, { { {}, {} }, {} } } %funParser, ptr %skipParser, ptr %0) !dbg !1777 {
entry:
  %result_value = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8
  %struct_alloca = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(80) %skipParser, i64 80, i1 false), !dbg !1778
  call fastcc void @Parser_buildPrimitiveParser_99e1652938de23842119ccffd84e8c6782547ce14bbfd1caa21f273de3289(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !1778
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !1778
  ret void, !dbg !1778
}

define internal fastcc i64 @Dict_initSeed_a9e685cc72fe3166dd93f93a27166ec5656562cf1d6d3e19f41a6cc3489(i64 %seed) !dbg !1780 {
entry:
  %call = tail call fastcc i64 @Dict_wyp0_431d23493ce857ef909e5d189b015e7f4c0aa8086605349b0c3dca4fa76a087(), !dbg !1781
  %call1 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %seed, i64 %call), !dbg !1781
  %call2 = tail call fastcc i64 @Dict_wyp1_8c3d9f23c28a38707993803f2903e4f1928ddeb88bfccf06508a8b5141715f(), !dbg !1781
  %call3 = tail call fastcc i64 @Dict_wymix_7daab025296eba78663b2c113b559f88e566e449ca8ec1339c43daed88577936(i64 %call1, i64 %call2), !dbg !1781
  %call4 = tail call fastcc i64 @Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(i64 %call3, i64 %seed), !dbg !1781
  ret i64 %call4, !dbg !1781
}

define internal fastcc i64 @Dict_complete_4a2d194da1241ef3ca5a8139a734b29ae4efb20126643584c91fe6ded8e2c5a({ i64, i64 } %"735") !dbg !1783 {
entry:
  %struct_field_access_record_1 = extractvalue { i64, i64 } %"735", 1, !dbg !1784
  ret i64 %struct_field_access_record_1, !dbg !1784
}

define internal fastcc void @Parser_77_9afb3cbae942a0bc28e2e4ef30242a1463d71fcd8053b9cf54a2f5c3147c1({ %list.RocList, {} } %"420", ptr %valParser, ptr %0) !dbg !1786 {
entry:
  %result_value1 = alloca { [7 x i64], i8 }, align 8, !dbg !1787
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1787
  %struct_field_access_record_0 = extractvalue { %list.RocList, {} } %"420", 0, !dbg !1787
  %struct_field_access_record_1 = extractvalue { %list.RocList, {} } %"420", 1, !dbg !1787
  call fastcc void @Parser_parsePartial_cf8c9d89186a212409f843ad81dcb732cefe119aa65a9f5b319577583b6a15(ptr %valParser, %list.RocList %struct_field_access_record_0, ptr nonnull %result_value), !dbg !1787
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field_access_record_0), !dbg !1787
  call fastcc void @Result_map_c3db9144e9e8a2aeb45a4287ca39a6b36f034de3f4c779c625aa44629cf92b4(ptr nonnull %result_value, {} %struct_field_access_record_1, ptr nonnull %result_value1), !dbg !1787
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value1, i64 64, i1 false), !dbg !1787
  ret void, !dbg !1787
}

define internal fastcc %list.RocList @Dict_fillBucketsFromData_a0d5c44a91521ccbe6cbe0ca2338db7878e8dda81a27912b861f86434c26c052(%list.RocList %buckets0, %list.RocList %data, i8 %shifts) !dbg !1789 {
entry:
  %call = tail call fastcc %list.RocList @List_walkWithIndex_260dec8de9897e99a5126b882cbb9d2ee2f32cd2b94c727fdd1aa87e467d(%list.RocList %data, %list.RocList %buckets0, i8 %shifts), !dbg !1790
  ret %list.RocList %call, !dbg !1790
}

define internal fastcc void @Parser_buildPrimitiveParser_193448c4838cde466118b8f870b86decbde9b220f58c4baeed5bcaad0689f58(ptr %fun, ptr %0) !dbg !1792 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %fun, i64 128, i1 false), !dbg !1793
  ret void, !dbg !1793
}

define internal fastcc void @"#Derived_custom6_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd"(ptr %fmt6, ptr %"#arg_closure", ptr %0) !dbg !1795 {
entry:
  %result_value26 = alloca %str.RocStr, align 8, !dbg !1796
  %tmp_output_for_jmp25 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value24 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %const_str_store23 = alloca %str.RocStr, align 8, !dbg !1796
  %tmp_output_for_jmp22 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value21 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %const_str_store20 = alloca %str.RocStr, align 8, !dbg !1796
  %tmp_output_for_jmp19 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value18 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %const_str_store17 = alloca %str.RocStr, align 8, !dbg !1796
  %tmp_output_for_jmp16 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value15 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %const_str_store14 = alloca %str.RocStr, align 8, !dbg !1796
  %tmp_output_for_jmp13 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value12 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value9 = alloca %str.RocStr, align 8, !dbg !1796
  %const_str_store8 = alloca %str.RocStr, align 8, !dbg !1796
  %load_element7 = alloca %str.RocStr, align 8, !dbg !1796
  %tmp_output_for_jmp4 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value3 = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %const_str_store2 = alloca %str.RocStr, align 8, !dbg !1796
  %tmp_output_for_jmp = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %const_str_store = alloca %str.RocStr, align 8, !dbg !1796
  %joinpoint_arg_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !1796
  %load_element = alloca { [3 x i64], i8 }, align 8, !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element, ptr noundef nonnull align 8 dereferenceable(32) %"#arg_closure", i64 32, i1 false), !dbg !1796
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %load_element, i64 0, i32 1, !dbg !1796
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1796
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
    i8 2, label %branch2
    i8 3, label %branch3
    i8 4, label %branch4
    i8 5, label %branch5
  ], !dbg !1796

default:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_37"(ptr nonnull %load_element), !dbg !1796
  store ptr inttoptr (i64 8243094084762825303 to ptr), ptr %const_str_store23, align 8, !dbg !1796
  %const_str_store23.repack39 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 1, !dbg !1796
  store i64 111, ptr %const_str_store23.repack39, align 8, !dbg !1796
  %const_str_store23.repack40 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 2, !dbg !1796
  store i64 -8574853690513424384, ptr %const_str_store23.repack40, align 8, !dbg !1796
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store23, %list.RocList zeroinitializer, ptr nonnull %result_value24), !dbg !1796
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store23), !dbg !1796
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp25, ptr noundef nonnull align 8 dereferenceable(56) %result_value24, i64 56, i1 false), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp25, i64 56, i1 false), !dbg !1796
  br label %joinpointcont, !dbg !1796

joinpointcont:                                    ; preds = %default, %branch5, %branch4, %branch3, %branch2, %branch1, %branch0
  call fastcc void @Inspect_apply_9431905c91573f4ccc36b1a74d97f28a25ea16aef421e92a078dd6264383d(ptr nonnull %joinpoint_arg_alloca, ptr %fmt6, ptr nonnull %result_value26), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value26, i64 24, i1 false), !dbg !1796
  ret void, !dbg !1796

branch0:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_37"(ptr nonnull %load_element), !dbg !1796
  store ptr inttoptr (i64 7588686753992503874 to ptr), ptr %const_str_store, align 8, !dbg !1796
  %const_str_store.repack37 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1796
  store i64 25968, ptr %const_str_store.repack37, align 8, !dbg !1796
  %const_str_store.repack38 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1796
  store i64 -8502796096475496448, ptr %const_str_store.repack38, align 8, !dbg !1796
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store, %list.RocList zeroinitializer, ptr nonnull %result_value), !dbg !1796
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1796
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, i64 56, i1 false), !dbg !1796
  br label %joinpointcont, !dbg !1796

branch1:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_37"(ptr nonnull %load_element), !dbg !1796
  store ptr inttoptr (i64 8103508940177043017 to ptr), ptr %const_str_store2, align 8, !dbg !1796
  %const_str_store2.repack35 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 1, !dbg !1796
  store i64 6579572, ptr %const_str_store2.repack35, align 8, !dbg !1796
  %const_str_store2.repack36 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 2, !dbg !1796
  store i64 -8430738502437568512, ptr %const_str_store2.repack36, align 8, !dbg !1796
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store2, %list.RocList zeroinitializer, ptr nonnull %result_value3), !dbg !1796
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1796
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store2), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, ptr noundef nonnull align 8 dereferenceable(56) %result_value3, i64 56, i1 false), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, i64 56, i1 false), !dbg !1796
  br label %joinpointcont, !dbg !1796

branch2:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element7, ptr noundef nonnull align 8 dereferenceable(24) %load_element, i64 24, i1 false), !dbg !1796
  store ptr inttoptr (i64 491327616079 to ptr), ptr %const_str_store8, align 8, !dbg !1796
  %const_str_store8.repack33 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 1, !dbg !1796
  store i64 0, ptr %const_str_store8.repack33, align 8, !dbg !1796
  %const_str_store8.repack34 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 2, !dbg !1796
  store i64 -8863084066665136128, ptr %const_str_store8.repack34, align 8, !dbg !1796
  call fastcc void @Inspect_dbgStr_aa3b634bf5a3cbfd69384c2274596f2bf4c68e9d7ee9e56807d20bdff71992f(ptr nonnull %load_element7, ptr nonnull %result_value9), !dbg !1796
  %call_builtin = call ptr @roc_builtins.utils.allocate_with_refcount(i64 24, i32 8, i1 true), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %call_builtin, ptr noundef nonnull align 8 dereferenceable(24) %result_value9, i64 24, i1 false), !dbg !1796
  %insert_record_field = insertvalue %list.RocList zeroinitializer, ptr %call_builtin, 0, !dbg !1796
  %insert_record_field10 = insertvalue %list.RocList %insert_record_field, i64 1, 1, !dbg !1796
  %insert_record_field11 = insertvalue %list.RocList %insert_record_field10, i64 1, 2, !dbg !1796
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store8, %list.RocList %insert_record_field11, ptr nonnull %result_value12), !dbg !1796
  call fastcc void @"#Attr_#dec_38"(%list.RocList %insert_record_field11), !dbg !1796
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store8), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, ptr noundef nonnull align 8 dereferenceable(56) %result_value12, i64 56, i1 false), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, i64 56, i1 false), !dbg !1796
  br label %joinpointcont, !dbg !1796

branch3:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_37"(ptr nonnull %load_element), !dbg !1796
  store ptr inttoptr (i64 7882791824596956495 to ptr), ptr %const_str_store14, align 8, !dbg !1796
  %const_str_store14.repack31 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 1, !dbg !1796
  store i64 7959151, ptr %const_str_store14.repack31, align 8, !dbg !1796
  %const_str_store14.repack32 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 2, !dbg !1796
  store i64 -8430738502437568512, ptr %const_str_store14.repack32, align 8, !dbg !1796
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store14, %list.RocList zeroinitializer, ptr nonnull %result_value15), !dbg !1796
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1796
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store14), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, ptr noundef nonnull align 8 dereferenceable(56) %result_value15, i64 56, i1 false), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, i64 56, i1 false), !dbg !1796
  br label %joinpointcont, !dbg !1796

branch4:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_37"(ptr nonnull %load_element), !dbg !1796
  store ptr inttoptr (i64 8245933071047814741 to ptr), ptr %const_str_store17, align 8, !dbg !1796
  %const_str_store17.repack29 = getelementptr inbounds %str.RocStr, ptr %const_str_store17, i64 0, i32 1, !dbg !1796
  store i64 6579572, ptr %const_str_store17.repack29, align 8, !dbg !1796
  %const_str_store17.repack30 = getelementptr inbounds %str.RocStr, ptr %const_str_store17, i64 0, i32 2, !dbg !1796
  store i64 -8430738502437568512, ptr %const_str_store17.repack30, align 8, !dbg !1796
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store17, %list.RocList zeroinitializer, ptr nonnull %result_value18), !dbg !1796
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store17), !dbg !1796
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp19, ptr noundef nonnull align 8 dereferenceable(56) %result_value18, i64 56, i1 false), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp19, i64 56, i1 false), !dbg !1796
  br label %joinpointcont, !dbg !1796

branch5:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_37"(ptr nonnull %load_element), !dbg !1796
  store ptr inttoptr (i64 8028865234778550103 to ptr), ptr %const_str_store20, align 8, !dbg !1796
  %const_str_store20.repack27 = getelementptr inbounds %str.RocStr, ptr %const_str_store20, i64 0, i32 1, !dbg !1796
  store i64 27491, ptr %const_str_store20.repack27, align 8, !dbg !1796
  %const_str_store20.repack28 = getelementptr inbounds %str.RocStr, ptr %const_str_store20, i64 0, i32 2, !dbg !1796
  store i64 -8502796096475496448, ptr %const_str_store20.repack28, align 8, !dbg !1796
  call fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr nonnull %const_str_store20, %list.RocList zeroinitializer, ptr nonnull %result_value21), !dbg !1796
  call fastcc void @"#Attr_#dec_38"(%list.RocList zeroinitializer), !dbg !1796
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store20), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp22, ptr noundef nonnull align 8 dereferenceable(56) %result_value21, i64 56, i1 false), !dbg !1796
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp22, i64 56, i1 false), !dbg !1796
  br label %joinpointcont, !dbg !1796
}

define internal fastcc void @Task_73_53bccde9921d34a99bc57d7dbbe86edccdf5689af36c43cac5c891312df738a({} %"220", ptr %res, ptr %0) !dbg !1798 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %res, i64 80, i1 false), !dbg !1799
  ret void, !dbg !1799
}

define internal fastcc i32 @_10_30fe2aeefb9e6a6c9b187470d1a66a216dd31d2ce213c14343daed4ac570(ptr %"40") !dbg !1801 {
entry:
  tail call fastcc void @"#Attr_#dec_37"(ptr %"40"), !dbg !1802
  %call = tail call fastcc i32 @Task_err_16c9acb11420bb4864958cb65deec56be7d76275852725d2b6cfa6b292a31ee8(i32 1), !dbg !1802
  ret i32 %call, !dbg !1802
}

define internal fastcc i8 @Five_sorter_147f9a29f721bc6a47c431ffbf897368d53af6834eae9416f984da7fc2dd89(i64 %a, i64 %b, ptr %rulesDict) !dbg !1804 {
entry:
  %result_value1 = alloca { [3 x i64], i8 }, align 8, !dbg !1805
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !1805
  tail call fastcc void @"#Attr_#inc_25"(ptr %rulesDict, i64 1), !dbg !1805
  call fastcc void @Dict_get_deda9c07093181a3aee6f4559463a94ce2b31f038cb3d5548d0bb2aeba37e1(ptr %rulesDict, i64 %a, ptr nonnull %result_value), !dbg !1805
  %call = call fastcc %list.RocList @Result_withDefault_f411d2d207cb75ff49124b128ee5a4cdec2daf8d1cf0a733c3c7d426729b6b(ptr nonnull %result_value, %list.RocList zeroinitializer), !dbg !1805
  call fastcc void @Dict_get_deda9c07093181a3aee6f4559463a94ce2b31f038cb3d5548d0bb2aeba37e1(ptr %rulesDict, i64 %b, ptr nonnull %result_value1), !dbg !1805
  %call2 = call fastcc %list.RocList @Result_withDefault_f411d2d207cb75ff49124b128ee5a4cdec2daf8d1cf0a733c3c7d426729b6b(ptr nonnull %result_value1, %list.RocList zeroinitializer), !dbg !1805
  %call3 = call fastcc i1 @List_contains_9b7306a2e571f3d11e34b901a57455c3e32e69a2f8fde813ed1c4300e12712(%list.RocList %call, i64 %b), !dbg !1805
  call fastcc void @"#Attr_#dec_1"(%list.RocList %call), !dbg !1805
  br i1 %call3, label %then_block, label %else_block, !dbg !1805

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_1"(%list.RocList %call2), !dbg !1805
  ret i8 2, !dbg !1805

else_block:                                       ; preds = %entry
  %call4 = call fastcc i1 @List_contains_9b7306a2e571f3d11e34b901a57455c3e32e69a2f8fde813ed1c4300e12712(%list.RocList %call2, i64 %a), !dbg !1805
  call fastcc void @"#Attr_#dec_1"(%list.RocList %call2), !dbg !1805
  br i1 %call4, label %then_block6, label %else_block7, !dbg !1805

then_block6:                                      ; preds = %else_block
  ret i8 1, !dbg !1805

else_block7:                                      ; preds = %else_block
  ret i8 0, !dbg !1805
}

define internal fastcc void @Task_35_9294948111f131652687dcc3f2dde9cc67fb309853fbd814ad8f8f3c89b321({} %"115", ptr %"#arg_closure", ptr %0) !dbg !1807 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !1808
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1808
  store i8 1, ptr %tag_id_ptr, align 4, !dbg !1808
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !1808
  store i64 %1, ptr %0, align 4, !dbg !1808
  ret void, !dbg !1808
}

define internal fastcc void @Inspect_apply_1f8e356ac751a27ffa403915e5479fd0a29d71e18585d0226666c6b441ff81(ptr %"303", ptr %fmt, ptr %0) !dbg !1810 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  store ptr getelementptr inbounds ([81 x i8], ptr @_str_literal_14773762520492002118, i64 0, i64 8), ptr %const_str_store, align 8, !dbg !1811
  %const_str_store.repack1 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1811
  store i64 73, ptr %const_str_store.repack1, align 8, !dbg !1811
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1811
  store i64 73, ptr %const_str_store.repack2, align 8, !dbg !1811
  call void @roc_panic(ptr %const_str_store, i32 0), !dbg !1811
  unreachable, !dbg !1811
}

define internal fastcc i64 @List_len_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50(%list.RocList %"#arg1") !dbg !1813 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !1814
  ret i64 %list_len, !dbg !1814
}

define internal fastcc void @Parser_parsePartial_9a3b59329aee34273e2c05ecea1c75b744fff87dc1d841e1bced5ff5b9764(ptr %"246", %list.RocList %input, ptr %0) !dbg !1816 {
entry:
  %result_value = alloca { [5 x i64], i8 }, align 8
  call fastcc void @Parser_200_15f1e1a1eceb31827fd881ac76f3839662c753cefa5c5c671aa298d8c0b43f90(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !1817
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1817
  ret void, !dbg !1817
}

define internal fastcc %list.RocList @List_append_494fd63e81fc5377dff396b856cc43fac283edbeae4d7cfbdd95aadb8479597(%list.RocList %list, { i64, %list.RocList } %element) !dbg !1819 {
entry:
  %call = tail call fastcc %list.RocList @List_reserve_7f755070a828d5b0991fd43175b6036d1cb7ecf871d1b823a8797b553d92bc(%list.RocList %list, i64 1), !dbg !1820
  %call1 = tail call fastcc %list.RocList @List_appendUnsafe_df2d999242c7383735614c1ca7894e355776837c47b5a1272ceceba5a498db(%list.RocList %call, { i64, %list.RocList } %element), !dbg !1820
  ret %list.RocList %call1, !dbg !1820
}

define internal fastcc i1 @Bool_structuralNotEq_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591(i32 %"#arg1", i32 %"#arg2") !dbg !1822 {
entry:
  %neq_u32 = icmp ne i32 %"#arg1", %"#arg2", !dbg !1823
  ret i1 %neq_u32, !dbg !1823
}

define internal fastcc void @Parser_parsePartial_42e294ef63ce8b6bacde71bdf2e18942982fab75ecb0b0597cb0c363350ba4b(ptr %"246", %list.RocList %input, ptr %0) !dbg !1825 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_153_bd9bed80b6a3af5da42dd8318d3afdafa7dfe83cc9b87136c829aee729798a93(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !1826
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1826
  ret void, !dbg !1826
}

define internal fastcc i32 @Num_mulWrap_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31(i32 %"#arg1", i32 %"#arg2") !dbg !1828 {
entry:
  %mul_int = mul i32 %"#arg1", %"#arg2", !dbg !1829
  ret i32 %mul_int, !dbg !1829
}

define internal fastcc void @Parser_combined_9dafd8f0b5a93f0de91f9c0f5e84ec19365c89730e1f530e43e35727a7be6d8(%list.RocList %input, { { {}, {} }, {} } %"#arg_closure", ptr %0) !dbg !1831 {
entry:
  %result_value1 = alloca { [6 x i64], i8 }, align 8, !dbg !1832
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1832
  %struct_field_access_record_1 = extractvalue { { {}, {} }, {} } %"#arg_closure", 1, !dbg !1832
  %struct_field_access_record_0 = extractvalue { { {}, {} }, {} } %"#arg_closure", 0, !dbg !1832
  call fastcc void @Parser_parsePartial_ea9fbd5d6ff2f4de1e2ccda2b8d7e624e862ec6a5191223f8676f8ef2216e31({ {}, {} } %struct_field_access_record_0, %list.RocList %input, ptr nonnull %result_value), !dbg !1832
  call fastcc void @Result_try_78e95374ca5c3ffeb4c3c6d1fee15f4627b4cb8e78c83389fa66fa17b11860(ptr nonnull %result_value, {} %struct_field_access_record_1, ptr nonnull %result_value1), !dbg !1832
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value1, i64 56, i1 false), !dbg !1832
  ret void, !dbg !1832
}

define internal fastcc void @Inspect_204_b96090d699017c67f1c33d23f5f5b60732db46124d7bead69858245e5f4(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !1834 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !1835
  %load_element = alloca %str.RocStr, align 8, !dbg !1835
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !1835
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %load_element, ptr nonnull %result_value), !dbg !1835
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element), !dbg !1835
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1835
  ret void, !dbg !1835
}

define internal fastcc void @Parser_parsePartial_e1cb572af3725742d66b2eb0d3756602f89f9725aa8004c75e9c2262ab(ptr %"246", %list.RocList %input, ptr %0) !dbg !1837 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Parser_200_16aa7910c0f01a62f7254586694f3caa8b91b5d9c4ac395d8e845efa238a384(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !1838
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1838
  ret void, !dbg !1838
}

define internal fastcc void @Dict_findSecondUnroll_8f804d847f17ce19e983ee3d457d4c97a1c72145f357931dcbff3cd6dbfe4c0(%list.RocList %buckets, i64 %bucketIndex, i32 %distAndFingerprint, %list.RocList %data, i64 %key, ptr %0) !dbg !1840 {
entry:
  %result_value17 = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1841
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1841
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1841
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1841
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %buckets, i64 %bucketIndex), !dbg !1841
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !1841
  %call1 = tail call fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %distAndFingerprint, i32 %struct_field_access_record_1), !dbg !1841
  br i1 %call1, label %then_block, label %else_block, !dbg !1841

then_block:                                       ; preds = %entry
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !1841
  %call2 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_0), !dbg !1841
  %call3 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %data, i64 %call2), !dbg !1841
  %struct_field_access_record_04 = extractvalue { i64, %list.RocList } %call3, 0, !dbg !1841
  %call6 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field_access_record_04, i64 %key), !dbg !1841
  br i1 %call6, label %then_block8, label %else_block9, !dbg !1841

else_block:                                       ; preds = %entry
  %call14 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1841
  %call15 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call14), !dbg !1841
  %call16 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1841
  call fastcc void @Dict_findHelper_8256d790c99390129cd6628d4d43bc44f55cfb83af722d8248666b192be24d65(%list.RocList %buckets, i64 %call15, i32 %call16, %list.RocList %data, i64 %key, ptr nonnull %result_value17), !dbg !1841
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value17, i64 40, i1 false), !dbg !1841
  ret void, !dbg !1841

then_block8:                                      ; preds = %then_block
  %struct_field_access_record_15 = extractvalue { i64, %list.RocList } %call3, 1, !dbg !1841
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field_access_record_15, i64 1), !dbg !1841
  %struct_field_access_record_15.elt = extractvalue %list.RocList %struct_field_access_record_15, 0, !dbg !1841
  store ptr %struct_field_access_record_15.elt, ptr %tag_alloca, align 8, !dbg !1841
  %tag_alloca.repack18 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1841
  %struct_field_access_record_15.elt19 = extractvalue %list.RocList %struct_field_access_record_15, 1, !dbg !1841
  store i64 %struct_field_access_record_15.elt19, ptr %tag_alloca.repack18, align 8, !dbg !1841
  %tag_alloca.repack20 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1841
  %struct_field_access_record_15.elt21 = extractvalue %list.RocList %struct_field_access_record_15, 2, !dbg !1841
  store i64 %struct_field_access_record_15.elt21, ptr %tag_alloca.repack20, align 8, !dbg !1841
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1841
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1841
  store i64 %bucketIndex, ptr %struct_alloca, align 8, !dbg !1841
  %struct_field_gep10 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1841
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep10, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1841
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1841
  ret void, !dbg !1841

else_block9:                                      ; preds = %then_block
  %call11 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1841
  %call12 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call11), !dbg !1841
  %call13 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1841
  call fastcc void @Dict_findHelper_8256d790c99390129cd6628d4d43bc44f55cfb83af722d8248666b192be24d65(%list.RocList %buckets, i64 %call12, i32 %call13, %list.RocList %data, i64 %key, ptr nonnull %result_value), !dbg !1841
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1841
  ret void, !dbg !1841
}

define internal fastcc void @Task_await_8c9e32c1aadddd94aae3acfa4e15ddbfa6911ff5a2999e6634aa26edd6a0da({ { %str.RocStr, {} }, { [1 x i32], i8 } } %"102", ptr %transform, ptr %0) !dbg !1843 {
entry:
  %tag_alloca = alloca { [5 x i64], i8 }, align 8
  %struct_alloca = alloca { { { %str.RocStr, {} }, { [1 x i32], i8 } }, { [1 x i32], i8 } }, align 8
  %"102.elt" = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"102", 0, !dbg !1844
  %"102.elt.elt" = extractvalue { %str.RocStr, {} } %"102.elt", 0, !dbg !1844
  %"102.elt.elt.elt" = extractvalue %str.RocStr %"102.elt.elt", 0, !dbg !1844
  store ptr %"102.elt.elt.elt", ptr %struct_alloca, align 8, !dbg !1844
  %struct_alloca.repack6 = getelementptr inbounds %str.RocStr, ptr %struct_alloca, i64 0, i32 1, !dbg !1844
  %"102.elt.elt.elt7" = extractvalue %str.RocStr %"102.elt.elt", 1, !dbg !1844
  store i64 %"102.elt.elt.elt7", ptr %struct_alloca.repack6, align 8, !dbg !1844
  %struct_alloca.repack8 = getelementptr inbounds %str.RocStr, ptr %struct_alloca, i64 0, i32 2, !dbg !1844
  %"102.elt.elt.elt9" = extractvalue %str.RocStr %"102.elt.elt", 2, !dbg !1844
  store i64 %"102.elt.elt.elt9", ptr %struct_alloca.repack8, align 8, !dbg !1844
  %struct_alloca.repack2 = getelementptr inbounds { { %str.RocStr, {} }, { [1 x i32], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1844
  %"102.elt3" = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"102", 1, !dbg !1844
  store { [1 x i32], i8 } %"102.elt3", ptr %struct_alloca.repack2, align 8, !dbg !1844
  %struct_field_gep1 = getelementptr inbounds { { { %str.RocStr, {} }, { [1 x i32], i8 } }, { [1 x i32], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1844
  %1 = load i64, ptr %transform, align 4, !dbg !1844
  store i64 %1, ptr %struct_field_gep1, align 8, !dbg !1844
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1844
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1844
  store i8 2, ptr %tag_id_ptr, align 8, !dbg !1844
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !1844
  ret void, !dbg !1844
}

define internal fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %"#arg1") !dbg !1846 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !1847
  ret i64 %list_len, !dbg !1847
}

define internal fastcc void @"#Derived_toInspector_[BadUtf8 2]_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11"({ i64, i8 } %tag4, ptr %0) !dbg !1849 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1850
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1850
  store { i64, i8 } %tag4, ptr %tag_alloca, align 8, !dbg !1850
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1850
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1850
  call fastcc void @Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !1850
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1850
  ret void, !dbg !1850
}

define internal fastcc %list.RocList @List_sublist_8e9956175ff8e3582c4b770a3b3c2388266676d8eb052d494e1a127bd7a9ad2(%list.RocList %list, { i64, i64 } %config) !dbg !1852 {
entry:
  %struct_field_access_record_1 = extractvalue { i64, i64 } %config, 1, !dbg !1853
  %struct_field_access_record_0 = extractvalue { i64, i64 } %config, 0, !dbg !1853
  %call = tail call fastcc %list.RocList @List_sublistLowlevel_dc6b1b42abfea2844b7c4985e150c54b77c535b47ead6acd59d6a08b80d2(%list.RocList %list, i64 %struct_field_access_record_1, i64 %struct_field_access_record_0), !dbg !1853
  ret %list.RocList %call, !dbg !1853
}

define internal fastcc %list.RocList @List_repeat_dba168b77b24c6e793bab73fde9e33d53bc4c848cefe7b7fe931876bedf73d({ i32, i32 } %value, i64 %count) !dbg !1855 {
entry:
  %call = tail call fastcc %list.RocList @List_withCapacity_4bd18bc73cee8d6c664141b2e49674ebb21216aa20f0f89293181ce7b14e(i64 %count), !dbg !1856
  %call1 = tail call fastcc %list.RocList @List_repeatHelp_4d841bd57979ccceddece07dcf2dbc9edd3191f365637aa1e5efefa18c6c7ca3({ i32, i32 } %value, i64 %count, %list.RocList %call), !dbg !1856
  ret %list.RocList %call1, !dbg !1856
}

define internal fastcc void @Result_try_4ec88c32b1d8d7e41af6fe2c3b1c519c1adff81ec271f8be7bf4ea491e1(ptr %result, ptr %transform, ptr %0) !dbg !1858 {
entry:
  %tag_alloca = alloca { [7 x i64], i8 }, align 8, !dbg !1859
  %load_element4 = alloca %str.RocStr, align 8, !dbg !1859
  %result_value = alloca { [7 x i64], i8 }, align 8, !dbg !1859
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1859
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1859
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1859
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1859

then_block:                                       ; preds = %entry
  %load_element.unpack.unpack = load ptr, ptr %result, align 8, !dbg !1859
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack.unpack, 0, !dbg !1859
  %load_element.unpack.elt18 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !1859
  %load_element.unpack.unpack19 = load i64, ptr %load_element.unpack.elt18, align 8, !dbg !1859
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack.unpack19, 1, !dbg !1859
  %load_element.unpack.elt20 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !1859
  %load_element.unpack.unpack21 = load i64, ptr %load_element.unpack.elt20, align 8, !dbg !1859
  %load_element.unpack22 = insertvalue %list.RocList %2, i64 %load_element.unpack.unpack21, 2, !dbg !1859
  %3 = insertvalue { %list.RocList, {} } poison, %list.RocList %load_element.unpack22, 0, !dbg !1859
  %load_element17 = insertvalue { %list.RocList, {} } %3, {} poison, 1, !dbg !1859
  call fastcc void @Parser_77_9afb3cbae942a0bc28e2e4ef30242a1463d71fcd8053b9cf54a2f5c3147c1({ %list.RocList, {} } %load_element17, ptr %transform, ptr nonnull %result_value), !dbg !1859
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !1859
  ret void, !dbg !1859

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_20"(ptr %transform), !dbg !1859
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !1859
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element4, align 8, !dbg !1859
  %load_tag_to_put_in_struct.elt6 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 1, !dbg !1859
  %load_tag_to_put_in_struct.unpack7 = load i64, ptr %load_tag_to_put_in_struct.elt6, align 8, !dbg !1859
  %load_tag_to_put_in_struct.elt8 = getelementptr inbounds %str.RocStr, ptr %load_element4, i64 0, i32 2, !dbg !1859
  %load_tag_to_put_in_struct.unpack9 = load i64, ptr %load_tag_to_put_in_struct.elt8, align 8, !dbg !1859
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1859
  %tag_alloca.repack11 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1859
  store i64 %load_tag_to_put_in_struct.unpack7, ptr %tag_alloca.repack11, align 8, !dbg !1859
  %tag_alloca.repack13 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1859
  store i64 %load_tag_to_put_in_struct.unpack9, ptr %tag_alloca.repack13, align 8, !dbg !1859
  %tag_id_ptr5 = getelementptr inbounds { [7 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1859
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !1859
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca, i64 64, i1 false), !dbg !1859
  ret void, !dbg !1859
}

define internal fastcc void @Parser_buildPrimitiveParser_a6981e9af82e47105cf68a8eae93c9cf303d36467e93a849f262f17773f5(ptr %fun, ptr %0) !dbg !1861 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %fun, i64 24, i1 false), !dbg !1862
  ret void, !dbg !1862
}

define internal fastcc void @"#Derived_toInspector_[Exit 2,FileReadErr 2,FileReadUtf8Err 2,NotFound 0,ParsingFailure 1,ParsingIncomplete 1,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd"(ptr %tag2, ptr %0) !dbg !1864 {
entry:
  %result_value = alloca { [8 x i64], i8 }, align 8
  call fastcc void @Inspect_custom_97cfd3a355d55fdb677bbf93838fe1592f750aa128169e250722fae532e291f(ptr %tag2, ptr nonnull %result_value), !dbg !1865
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !1865
  ret void, !dbg !1865
}

define internal fastcc void @Inspect_apply_9431905c91573f4ccc36b1a74d97f28a25ea16aef421e92a078dd6264383d(ptr %"303", ptr %fmt, ptr %0) !dbg !1867 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !1868
  %result_value = alloca %str.RocStr, align 8, !dbg !1868
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !1868
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1868
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
  ], !dbg !1868

default:                                          ; preds = %entry
  call fastcc void @Inspect_206_5d11bf8fbc5bb94b04bedc4d418285061b56327f19ab74e865c9339638a2(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !1868
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !1868
  ret void, !dbg !1868

branch0:                                          ; preds = %entry
  call fastcc void @Inspect_204_c774391cda5b454c2aba9a3d06bd7dafbe9f198c258b617d66c4f87d5ceed7d(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !1868
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1868
  ret void, !dbg !1868
}

define internal fastcc i64 @String_125_6cf2364d472c2667e3822ac759c31f3412758843a080229881bcffc5eb6f1d(i64 %sum, i64 %d) !dbg !1870 {
entry:
  %call = tail call fastcc i64 @Num_mul_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e(i64 %sum, i64 10), !dbg !1871
  %call1 = tail call fastcc i64 @Num_add_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47(i64 %call, i64 %d), !dbg !1871
  ret i64 %call1, !dbg !1871
}

define internal fastcc void @Parser_183_6bab55d98f9c2b3f1754a1c25bf8c10f2e62f9dce2d86e90d173ffe64bd23(%list.RocList %input, { {}, { {}, { { {}, {} }, {} } } } %"#arg_closure", ptr %0) !dbg !1873 {
entry:
  %tag_alloca31 = alloca { [4 x i64], i8 }, align 8, !dbg !1874
  %tag_alloca20 = alloca { [4 x i64], i8 }, align 8, !dbg !1874
  %load_element17 = alloca %str.RocStr, align 8, !dbg !1874
  %result_value8 = alloca { [4 x i64], i8 }, align 8, !dbg !1874
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !1874
  %load_element = alloca %str.RocStr, align 8, !dbg !1874
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !1874
  %struct_field_access_record_0 = extractvalue { {}, { {}, { { {}, {} }, {} } } } %"#arg_closure", 0, !dbg !1874
  call fastcc void @Parser_parsePartial_d99c5b857e1e627fe47b03e2843c56aca18cc3e74317b1d10963dd817a09223({} %struct_field_access_record_0, %list.RocList %input, ptr nonnull %result_value), !dbg !1874
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1874
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1874
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !1874
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1874

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1874
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !1874
  %load_tag_to_put_in_struct.elt65 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !1874
  %load_tag_to_put_in_struct.unpack66 = load i64, ptr %load_tag_to_put_in_struct.elt65, align 8, !dbg !1874
  %load_tag_to_put_in_struct.elt67 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !1874
  %load_tag_to_put_in_struct.unpack68 = load i64, ptr %load_tag_to_put_in_struct.elt67, align 8, !dbg !1874
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1874
  %tag_alloca.repack70 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1874
  store i64 %load_tag_to_put_in_struct.unpack66, ptr %tag_alloca.repack70, align 8, !dbg !1874
  %tag_alloca.repack72 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1874
  store i64 %load_tag_to_put_in_struct.unpack68, ptr %tag_alloca.repack72, align 8, !dbg !1874
  %tag_id_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1874
  store i8 0, ptr %tag_id_ptr2, align 8, !dbg !1874
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !1874
  ret void, !dbg !1874

else_block:                                       ; preds = %entry
  %struct_field_access_record_1 = extractvalue { {}, { {}, { { {}, {} }, {} } } } %"#arg_closure", 1, !dbg !1874
  %load_element5.unpack.unpack = load ptr, ptr %result_value, align 8, !dbg !1874
  %1 = insertvalue %list.RocList poison, ptr %load_element5.unpack.unpack, 0, !dbg !1874
  %load_element5.unpack.elt37 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !1874
  %load_element5.unpack.unpack38 = load i64, ptr %load_element5.unpack.elt37, align 8, !dbg !1874
  %2 = insertvalue %list.RocList %1, i64 %load_element5.unpack.unpack38, 1, !dbg !1874
  %load_element5.unpack.elt39 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !1874
  %load_element5.unpack.unpack40 = load i64, ptr %load_element5.unpack.elt39, align 8, !dbg !1874
  %load_element5.unpack41 = insertvalue %list.RocList %2, i64 %load_element5.unpack.unpack40, 2, !dbg !1874
  call fastcc void @Parser_parsePartial_bc8c4fbb4471f82ba588d9366a6cc73c095ec9bae4fb1a31564e5462ba6746({ {}, { { {}, {} }, {} } } %struct_field_access_record_1, %list.RocList %load_element5.unpack41, ptr nonnull %result_value8), !dbg !1874
  call fastcc void @"#Attr_#dec_12"(%list.RocList %load_element5.unpack41), !dbg !1874
  %tag_id_ptr9 = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value8, i64 0, i32 1, !dbg !1874
  %load_tag_id10 = load i8, ptr %tag_id_ptr9, align 8, !dbg !1874
  %eq_u811 = icmp eq i8 %load_tag_id10, 0, !dbg !1874
  br i1 %eq_u811, label %then_block13, label %else_block14, !dbg !1874

then_block13:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element17, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !1874
  %load_tag_to_put_in_struct18.unpack = load ptr, ptr %load_element17, align 8, !dbg !1874
  %load_tag_to_put_in_struct18.elt56 = getelementptr inbounds %str.RocStr, ptr %load_element17, i64 0, i32 1, !dbg !1874
  %load_tag_to_put_in_struct18.unpack57 = load i64, ptr %load_tag_to_put_in_struct18.elt56, align 8, !dbg !1874
  %load_tag_to_put_in_struct18.elt58 = getelementptr inbounds %str.RocStr, ptr %load_element17, i64 0, i32 2, !dbg !1874
  %load_tag_to_put_in_struct18.unpack59 = load i64, ptr %load_tag_to_put_in_struct18.elt58, align 8, !dbg !1874
  store ptr %load_tag_to_put_in_struct18.unpack, ptr %tag_alloca20, align 8, !dbg !1874
  %tag_alloca20.repack61 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 1, !dbg !1874
  store i64 %load_tag_to_put_in_struct18.unpack57, ptr %tag_alloca20.repack61, align 8, !dbg !1874
  %tag_alloca20.repack63 = getelementptr inbounds %str.RocStr, ptr %tag_alloca20, i64 0, i32 2, !dbg !1874
  store i64 %load_tag_to_put_in_struct18.unpack59, ptr %tag_alloca20.repack63, align 8, !dbg !1874
  %tag_id_ptr22 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca20, i64 0, i32 1, !dbg !1874
  store i8 0, ptr %tag_id_ptr22, align 8, !dbg !1874
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca20, i64 40, i1 false), !dbg !1874
  ret void, !dbg !1874

else_block14:                                     ; preds = %else_block
  %load_element25.unpack.unpack = load ptr, ptr %result_value8, align 8, !dbg !1874
  %load_element25.unpack.elt45 = getelementptr inbounds %list.RocList, ptr %result_value8, i64 0, i32 1, !dbg !1874
  %load_element25.unpack.unpack46 = load i64, ptr %load_element25.unpack.elt45, align 8, !dbg !1874
  %load_element25.unpack.elt47 = getelementptr inbounds %list.RocList, ptr %result_value8, i64 0, i32 2, !dbg !1874
  %load_element25.unpack.unpack48 = load i64, ptr %load_element25.unpack.elt47, align 8, !dbg !1874
  %load_element25.elt42 = getelementptr inbounds { %list.RocList, i64 }, ptr %result_value8, i64 0, i32 1, !dbg !1874
  %load_element25.unpack43 = load i64, ptr %load_element25.elt42, align 8, !dbg !1874
  %call = call fastcc i64 @Five_24_a4a483ebb43561411945778d8122531e5e9328de7183b6cc1472f5ba35d5757f(i64 %load_element25.unpack43), !dbg !1874
  store ptr %load_element25.unpack.unpack, ptr %tag_alloca31, align 8, !dbg !1874
  %tag_alloca31.repack52 = getelementptr inbounds %list.RocList, ptr %tag_alloca31, i64 0, i32 1, !dbg !1874
  store i64 %load_element25.unpack.unpack46, ptr %tag_alloca31.repack52, align 8, !dbg !1874
  %tag_alloca31.repack54 = getelementptr inbounds %list.RocList, ptr %tag_alloca31, i64 0, i32 2, !dbg !1874
  store i64 %load_element25.unpack.unpack48, ptr %tag_alloca31.repack54, align 8, !dbg !1874
  %tag_alloca31.repack50 = getelementptr inbounds { %list.RocList, i64 }, ptr %tag_alloca31, i64 0, i32 1, !dbg !1874
  store i64 %call, ptr %tag_alloca31.repack50, align 8, !dbg !1874
  %tag_id_ptr33 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca31, i64 0, i32 1, !dbg !1874
  store i8 1, ptr %tag_id_ptr33, align 8, !dbg !1874
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca31, i64 40, i1 false), !dbg !1874
  ret void, !dbg !1874
}

define internal fastcc i64 @Dict_circularDist_a51293a4c3ce80beb92fd22c82b6b69bd26ee8bc815b483e3cf291f486236c(i64 %start, i64 %end, i64 %size) !dbg !1876 {
entry:
  %call = tail call fastcc i1 @Num_isGt_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc(i64 %start, i64 %end), !dbg !1877
  br i1 %call, label %then_block, label %else_block, !dbg !1877

then_block:                                       ; preds = %entry
  br label %joinpointcont, !dbg !1877

else_block:                                       ; preds = %entry
  br label %joinpointcont, !dbg !1877

joinpointcont:                                    ; preds = %else_block, %then_block
  %joinpointarg = phi i64 [ %size, %then_block ], [ 0, %else_block ], !dbg !1877
  %call1 = tail call fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %end, i64 %start), !dbg !1877
  %call2 = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %call1, i64 %joinpointarg), !dbg !1877
  ret i64 %call2, !dbg !1877
}

define internal fastcc void @Str_splitFirst_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2(ptr %haystack, ptr %needle, ptr %0) !dbg !1879 {
entry:
  %tag_alloca18 = alloca { [9 x i64], i8 }, align 8
  %struct_alloca16 = alloca { { [8 x i64], i8 } }, align 8
  %tag_alloca13 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca = alloca { [9 x i64], i8 }, align 8
  %struct_alloca10 = alloca { { %str.RocStr, %str.RocStr } }, align 8
  %struct_alloca = alloca { %str.RocStr, %str.RocStr }, align 8
  %result_value8 = alloca %str.RocStr, align 8
  %result_value5 = alloca %str.RocStr, align 8
  %result_value = alloca { [1 x i64], i8 }, align 8
  call fastcc void @Str_firstMatch_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00(ptr %haystack, ptr %needle, ptr nonnull %result_value), !dbg !1880
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1880
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1880
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1880
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1880

then_block:                                       ; preds = %entry
  %load_element = load i64, ptr %result_value, align 8, !dbg !1880
  %call = call fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %haystack), !dbg !1880
  %call2 = call fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %needle), !dbg !1880
  %call3 = call fastcc i64 @Num_sub_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(i64 %call, i64 %call2), !dbg !1880
  %call4 = call fastcc i64 @Num_sub_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(i64 %call3, i64 %load_element), !dbg !1880
  call fastcc void @"#Attr_#inc_13"(ptr %haystack, i64 1), !dbg !1880
  call fastcc void @Str_substringUnsafe_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61(ptr %haystack, i64 0, i64 %load_element, ptr nonnull %result_value5), !dbg !1880
  %call6 = call fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %needle), !dbg !1880
  %call7 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %load_element, i64 %call6), !dbg !1880
  call fastcc void @Str_substringUnsafe_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61(ptr %haystack, i64 %call7, i64 %call4, ptr nonnull %result_value8), !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !1880
  %struct_field_gep9 = getelementptr inbounds { %str.RocStr, %str.RocStr }, ptr %struct_alloca, i64 0, i32 1, !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field_gep9, ptr noundef nonnull align 8 dereferenceable(24) %result_value5, i64 24, i1 false), !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca10, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca10, i64 48, i1 false), !dbg !1880
  %tag_id_ptr12 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1880
  store i8 1, ptr %tag_id_ptr12, align 8, !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !1880
  ret void, !dbg !1880

else_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_13"(ptr %haystack), !dbg !1880
  %tag_id_ptr15 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca13, i64 0, i32 1, !dbg !1880
  store i8 3, ptr %tag_id_ptr15, align 8, !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca16, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca13, i64 72, i1 false), !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca18, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca16, i64 72, i1 false), !dbg !1880
  %tag_id_ptr20 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca18, i64 0, i32 1, !dbg !1880
  store i8 0, ptr %tag_id_ptr20, align 8, !dbg !1880
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca18, i64 80, i1 false), !dbg !1880
  ret void, !dbg !1880
}

define internal fastcc i32 @Num_bitwiseAnd_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9(i32 %"#arg1", i32 %"#arg2") !dbg !1882 {
entry:
  %int_bitwise_and = and i32 %"#arg1", %"#arg2", !dbg !1883
  ret i32 %int_bitwise_and, !dbg !1883
}

define internal fastcc void @Parser_map_bd96ec4285a11c9820bb4ba3a247771dd91732da48f91e3fbd0d2acf571b2(ptr %simpleParser, {} %transform, ptr %0) !dbg !1885 {
entry:
  %result_value = alloca { { %str.RocStr, %list.RocList }, {} }, align 8, !dbg !1886
  %call = tail call fastcc {} @Parser_const_887e5dbc5a127aeaabd14b2c267e70aea22136a56417cf32167bf9c4f523df7c({} %transform), !dbg !1886
  call fastcc void @Parser_apply_bc1c80155c9262df33a08c68877930d3cc5995efe62149618580d2587468467({} %call, ptr %simpleParser, ptr nonnull %result_value), !dbg !1886
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !1886
  ret void, !dbg !1886
}

define internal fastcc void @Inspect_custom_b1578731274e6ff96daec13b4ab0dd54752d378ad5e32dad77e43ac706ee6(ptr %fn, ptr %0) !dbg !1888 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %fn, i64 16, i1 false), !dbg !1889
  ret void, !dbg !1889
}

define internal fastcc void @List_iterHelp_a0ad3055de08c7e73da1974f4d9be666ee2daaab6969dd582bb59893cf022b0(%list.RocList %"356", {} %"357", i64 %"358", i64 %"359", i64 %"360", ptr %0) !dbg !1891 {
entry:
  %tag_alloca16 = alloca { [0 x i8], i8 }, align 8, !dbg !1892
  %tag_alloca = alloca { [0 x i8], i8 }, align 8, !dbg !1892
  %result_value = alloca { [0 x i8], i8 }, align 8, !dbg !1892
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"356", i64 1), !dbg !1892
  br label %joinpointcont, !dbg !1892

joinpointcont:                                    ; preds = %then_block7, %entry
  %joinpointarg3 = phi i64 [ %"359", %entry ], [ %call10, %then_block7 ], !dbg !1892
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg3, i64 %"360"), !dbg !1892
  br i1 %call, label %then_block, label %else_block, !dbg !1892

then_block:                                       ; preds = %joinpointcont
  %call5 = call fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %"356", i64 %joinpointarg3), !dbg !1892
  call fastcc void @List_looper_66a53c5bb7482a7975e058b703753a62aee74dcb3ed8c2fbfc227399ea738e({} %"357", i64 %call5, i64 %"358", ptr nonnull %result_value), !dbg !1892
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1892
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1892
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1892
  br i1 %eq_u8, label %then_block7, label %else_block8, !dbg !1892

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"356"), !dbg !1892
  %tag_id_ptr18 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca16, i64 0, i32 1, !dbg !1892
  store i8 1, ptr %tag_id_ptr18, align 8, !dbg !1892
  %1 = load i8, ptr %tag_alloca16, align 8, !dbg !1892
  store i8 %1, ptr %0, align 1, !dbg !1892
  ret void, !dbg !1892

then_block7:                                      ; preds = %then_block
  %call10 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg3, i64 1), !dbg !1892
  br label %joinpointcont, !dbg !1892

else_block8:                                      ; preds = %then_block
  call fastcc void @"#Attr_#dec_1"(%list.RocList %"356"), !dbg !1892
  %tag_id_ptr14 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1892
  store i8 0, ptr %tag_id_ptr14, align 8, !dbg !1892
  %2 = load i8, ptr %tag_alloca, align 8, !dbg !1892
  store i8 %2, ptr %0, align 1, !dbg !1892
  ret void, !dbg !1892
}

define internal fastcc i64 @String_123_4d171470486115e34f5abed227b887e2bccd7f223e7f7547111d26dfad766(%list.RocList %ds) !dbg !1894 {
entry:
  %call = tail call fastcc i64 @List_walk_b7aa9f7d377b2692ada596045493ead6d491b934dc9015fcbdd1a8e01477d(%list.RocList %ds, i64 0, {} zeroinitializer), !dbg !1895
  ret i64 %call, !dbg !1895
}

define internal fastcc %list.RocList @List_appendUnsafe_a1b37f834fad683b855edbbe46b2d4d8d04bfe3fdda176d9a70679e9ca0caf(%list.RocList %"#arg1", { i64, i64 } %"#arg2") !dbg !1897 {
entry:
  %list_alloca113 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca { i64, i64 }, align 8
  %"#arg2.elt" = extractvalue { i64, i64 } %"#arg2", 0, !dbg !1898
  store i64 %"#arg2.elt", ptr %element_to_pass_as_opaque, align 8, !dbg !1898
  %element_to_pass_as_opaque.repack2 = getelementptr inbounds { i64, i64 }, ptr %element_to_pass_as_opaque, i64 0, i32 1, !dbg !1898
  %"#arg2.elt3" = extractvalue { i64, i64 } %"#arg2", 1, !dbg !1898
  store i64 %"#arg2.elt3", ptr %element_to_pass_as_opaque.repack2, align 8, !dbg !1898
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1898
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1898
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1898
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 1, !dbg !1898
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1898
  %list_alloca1.repack6 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1898
  %"#arg1.elt7" = extractvalue %list.RocList %"#arg1", 2, !dbg !1898
  store i64 %"#arg1.elt7", ptr %list_alloca1.repack6, align 8, !dbg !1898
  call void @llvm.experimental.noalias.scope.decl(metadata !1900), !dbg !1898
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca113), !dbg !1898
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca113, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1898
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca113, i64 8, !dbg !1898
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1898, !noalias !1900
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca113, i64 16, !dbg !1898
  %.sroa.01.0.copyload.i = load ptr, ptr %list_alloca113, align 8, !dbg !1898, !noalias !1900
  %.sroa.5.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !1898, !noalias !1900
  %0 = icmp ne ptr %.sroa.01.0.copyload.i, null, !dbg !1898
  br i1 %0, label %1, label %roc_builtins.list.append_unsafe.exit, !dbg !1898

1:                                                ; preds = %entry
  %2 = mul nuw i64 %.sroa.1.0.copyload.i, 16, !dbg !1898
  %3 = getelementptr inbounds i8, ptr %.sroa.01.0.copyload.i, i64 %2, !dbg !1898
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr ({ i64, i64 }, ptr null, i32 1) to i64), i1 false), !dbg !1903, !noalias !1900
  br label %roc_builtins.list.append_unsafe.exit, !dbg !1898

roc_builtins.list.append_unsafe.exit:             ; preds = %entry, %1
  %4 = add nuw i64 %.sroa.1.0.copyload.i, 1, !dbg !1898
  store ptr %.sroa.01.0.copyload.i, ptr %list_alloca, align 8, !dbg !1898, !alias.scope !1900
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1898
  store i64 %4, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !1898, !alias.scope !1900
  %.sroa.5.0..sroa_idx5.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1898
  store i64 %.sroa.5.0.copyload.i, ptr %.sroa.5.0..sroa_idx5.i, align 8, !dbg !1898, !alias.scope !1900
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca113), !dbg !1898
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1898
  %5 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1898
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1898
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1898
  %6 = insertvalue %list.RocList %5, i64 %load_list.unpack9, 1, !dbg !1898
  %load_list.elt10 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1898
  %load_list.unpack11 = load i64, ptr %load_list.elt10, align 8, !dbg !1898
  %load_list12 = insertvalue %list.RocList %6, i64 %load_list.unpack11, 2, !dbg !1898
  ret %list.RocList %load_list12, !dbg !1898
}

define internal fastcc void @Result_try_ac6315adde982c4b62c768a77be738d224267f4f9e6f1a02f3bc60549578c(ptr %result, { i64, %list.RocList } %transform, ptr %0) !dbg !1907 {
entry:
  %tag_alloca = alloca { [1 x i8], i8 }, align 8, !dbg !1908
  %result_value = alloca { [1 x i8], i8 }, align 8, !dbg !1908
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !1908
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1908
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1908
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1908

then_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %result, align 8, !dbg !1908
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !1908
  %load_element.elt6 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !1908
  %load_element.unpack7 = load i64, ptr %load_element.elt6, align 8, !dbg !1908
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack7, 1, !dbg !1908
  %load_element.elt8 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !1908
  %load_element.unpack9 = load i64, ptr %load_element.elt8, align 8, !dbg !1908
  %load_element10 = insertvalue %list.RocList %2, i64 %load_element.unpack9, 2, !dbg !1908
  call fastcc void @Five_51_f8af0b510694e56e78a5bd9dc944cf1d240b66efd5c484e831b9694e85106f(%list.RocList %load_element10, { i64, %list.RocList } %transform, ptr nonnull %result_value), !dbg !1908
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_element10), !dbg !1908
  %3 = load i16, ptr %result_value, align 8, !dbg !1908
  store i16 %3, ptr %0, align 1, !dbg !1908
  ret void, !dbg !1908

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %transform), !dbg !1908
  %load_element4 = load i1, ptr %result, align 1, !dbg !1908
  store i1 %load_element4, ptr %tag_alloca, align 8, !dbg !1908
  %tag_id_ptr5 = getelementptr inbounds { [1 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1908
  store i8 0, ptr %tag_id_ptr5, align 1, !dbg !1908
  %4 = load i16, ptr %tag_alloca, align 8, !dbg !1908
  store i16 %4, ptr %0, align 1, !dbg !1908
  ret void, !dbg !1908
}

define internal fastcc %list.RocList @List_withCapacity_edba1fc0cbfb8bc06ea89d458e5f5137027dfdf6bb865a3fbe3121562(i64 %"#arg1") !dbg !1910 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !1911), !dbg !1914
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %0), !dbg !1914, !noalias !1911
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1), !dbg !1914, !noalias !1911
  %.old.not.i.not.i = icmp eq i64 %"#arg1", 0, !dbg !1914
  br i1 %.old.not.i.not.i, label %roc_builtins.list.with_capacity.exit, label %.critedge2.i.i, !dbg !1914

.critedge2.i.i:                                   ; preds = %entry
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, i8 0, i64 24, i1 false), !dbg !1914, !noalias !1911
  call void @llvm.experimental.noalias.scope.decl(metadata !1916), !dbg !1914
  %2 = load ptr, ptr %1, align 8, !dbg !1914, !noalias !1919
  %.not.i.i = icmp eq ptr %2, null, !dbg !1914
  br i1 %.not.i.i, label %16, label %3, !dbg !1914

3:                                                ; preds = %.critedge2.i.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1914
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !1914, !noalias !1919
  %.sroa.3.0..sroa_idx.i1.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !1914
  %.sroa.3.0.copyload.i2.i = load i64, ptr %.sroa.3.0..sroa_idx.i1.i, align 8, !dbg !1914, !noalias !1919
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1914
  %4 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i2.i, i64 0), !dbg !1914
  %5 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !1914
  %6 = or i64 %5, %4, !dbg !1914
  %7 = icmp ne i64 %6, 0, !dbg !1914
  %brmerge.i.i.i.i = select i1 %7, i1 true, i1 %isneg.i.i.i.i.i, !dbg !1914
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !1914

list.RocList.isUnique.exit.i.i:                   ; preds = %3
  %8 = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1914
  %9 = ptrtoint ptr %2 to i64, !dbg !1914
  %10 = shl i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !1914
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !1914
  %12 = inttoptr i64 %11 to ptr, !dbg !1914
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !1914
  %14 = load i64, ptr %13, align 8, !dbg !1914, !noalias !1919
  %15 = icmp ne i64 %14, -9223372036854775808, !dbg !1914
  %brmerge.i.i = select i1 %15, i1 true, i1 %8, !dbg !1914
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !1914

16:                                               ; preds = %.critedge2.i.i
  %17 = icmp eq i64 %"#arg1", 0, !dbg !1914
  br i1 %17, label %list.RocList.allocate.exit.i.i, label %18, !dbg !1914

18:                                               ; preds = %16
  %19 = call i64 @llvm.umax.i64(i64 8, i64 %"#arg1"), !dbg !1914
  %20 = mul nuw i64 %19, 8, !dbg !1914
  %21 = add nuw i64 %20, 8, !dbg !1914
  %22 = call ptr @roc_alloc(i64 %21, i32 8), !dbg !1914, !noalias !1922
  %23 = getelementptr inbounds i8, ptr %22, i64 8, !dbg !1914
  %24 = getelementptr inbounds i8, ptr %23, i64 -8, !dbg !1914
  store i64 -9223372036854775808, ptr %24, align 8, !dbg !1914, !noalias !1922
  br label %list.RocList.allocate.exit.i.i, !dbg !1914

list.RocList.allocate.exit.i.i:                   ; preds = %18, %16
  %.sroa.418.0.i.i = phi i64 [ %19, %18 ], [ 0, %16 ], !dbg !1914
  %.sroa.016.0.i.i = phi ptr [ %23, %18 ], [ null, %16 ], !dbg !1914
  store ptr %.sroa.016.0.i.i, ptr %0, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1914
  store i64 %"#arg1", ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1914
  store i64 %.sroa.418.0.i.i, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  br label %list.RocList.reallocate.exit.i, !dbg !1914

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i, %3
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i2.i, %"#arg1", !dbg !1914
  br i1 %.not7.i.i, label %49, label %46, !dbg !1914

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %25 = icmp eq i64 %"#arg1", 0, !dbg !1914
  br i1 %25, label %list.RocList.allocate.exit.i.i.i, label %26, !dbg !1914

26:                                               ; preds = %.critedge.i.i
  %27 = call i64 @llvm.umax.i64(i64 8, i64 %"#arg1"), !dbg !1914
  %28 = mul nuw i64 %27, 8, !dbg !1914
  %29 = add nuw i64 %28, 8, !dbg !1914
  %30 = call ptr @roc_alloc(i64 %29, i32 8), !dbg !1914, !noalias !1926
  %31 = getelementptr inbounds i8, ptr %30, i64 8, !dbg !1914
  %32 = getelementptr inbounds i8, ptr %31, i64 -8, !dbg !1914
  store i64 -9223372036854775808, ptr %32, align 8, !dbg !1914, !noalias !1926
  br label %list.RocList.allocate.exit.i.i.i, !dbg !1914

33:                                               ; preds = %list.RocList.allocate.exit.i.i.i
  %34 = load i64, ptr %13, align 8, !dbg !1914, !noalias !1931
  %.not.i.i.i.i = icmp eq i64 %34, 0, !dbg !1914
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %35, !dbg !1914

35:                                               ; preds = %33
  %36 = add i64 %34, -1, !dbg !1914
  store i64 %36, ptr %13, align 8, !dbg !1914, !noalias !1931
  %37 = icmp eq i64 %34, -9223372036854775808, !dbg !1914
  br i1 %37, label %38, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1914

38:                                               ; preds = %35
  call void @roc_dealloc(ptr nonnull align 1 %13, i32 8), !dbg !1914, !noalias !1931
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !1914

list.RocList.allocate.exit.i.i.i:                 ; preds = %26, %.critedge.i.i
  %.sroa.0.0.i.i.i = phi ptr [ %31, %26 ], [ null, %.critedge.i.i ], !dbg !1914
  %.sroa.5.0.i.i.i = phi i64 [ %27, %26 ], [ 0, %.critedge.i.i ], !dbg !1914
  %39 = mul nuw i64 %.sroa.2.0.copyload.i.i, 8, !dbg !1914
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %.sroa.0.0.i.i.i, ptr nonnull align 1 %2, i64 %39, i1 false), !dbg !1914, !noalias !1931
  %40 = getelementptr inbounds i8, ptr %.sroa.0.0.i.i.i, i64 %39, !dbg !1914
  %41 = sub i64 %"#arg1", %.sroa.2.0.copyload.i.i, !dbg !1914
  %42 = mul i64 %41, 8, !dbg !1914
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %40, i8 0, i64 %42, i1 false), !dbg !1914, !noalias !1931
  %43 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !1914
  %44 = icmp ne i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1914
  %45 = icmp ne i64 %11, 0, !dbg !1914
  %or.cond.i.i.i.i = select i1 %44, i1 %45, i1 false, !dbg !1914
  br i1 %or.cond.i.i.i.i, label %33, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1914

list.RocList.reallocateFresh.exit.i.i:            ; preds = %38, %35, %33, %list.RocList.allocate.exit.i.i.i
  store ptr %.sroa.0.0.i.i.i, ptr %0, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1914
  store i64 %"#arg1", ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1914
  store i64 %.sroa.5.0.i.i.i, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  br label %list.RocList.reallocate.exit.i, !dbg !1914

46:                                               ; preds = %.thread.i.i
  store ptr %2, ptr %0, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %47 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1914
  store i64 %"#arg1", ptr %47, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %48 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1914
  store i64 %.sroa.3.0.copyload.i2.i, ptr %48, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  br label %list.RocList.reallocate.exit.i, !dbg !1914

49:                                               ; preds = %.thread.i.i
  %50 = icmp eq i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1914
  br i1 %50, label %62, label %63, !dbg !1914

.split1.i.i:                                      ; preds = %56, %.split.i.i
  %phi.call.i.i = phi ptr [ %61, %56 ], [ %2, %.split.i.i ], !dbg !1914
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %51 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1914
  store i64 %"#arg1", ptr %51, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  %52 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1914
  store i64 %53, ptr %52, align 8, !dbg !1914, !alias.scope !1916, !noalias !1925
  br label %list.RocList.reallocate.exit.i, !dbg !1914

.split.i.i:                                       ; preds = %71, %69, %65, %62
  %.0.i.i = phi i64 [ %66, %65 ], [ %70, %69 ], [ %74, %71 ], [ 8, %62 ], !dbg !1914
  %53 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %"#arg1"), !dbg !1914
  %54 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 8, !dbg !1914
  %55 = mul nuw i64 %53, 8, !dbg !1914
  %.not.i9.i.i = icmp ult i64 %54, %55, !dbg !1914
  br i1 %.not.i9.i.i, label %56, label %.split1.i.i, !dbg !1914

56:                                               ; preds = %.split.i.i
  %57 = add nuw i64 %55, 8, !dbg !1914
  %58 = add nuw i64 %54, 8, !dbg !1914
  %59 = getelementptr inbounds i8, ptr %2, i64 -8, !dbg !1914
  %60 = call ptr @roc_realloc(ptr nonnull align 1 %59, i64 %57, i64 %58, i32 8), !dbg !1914, !noalias !1919
  %61 = getelementptr inbounds i8, ptr %60, i64 8, !dbg !1914
  br label %.split1.i.i, !dbg !1914

62:                                               ; preds = %49
  br label %.split.i.i, !dbg !1914

63:                                               ; preds = %49
  %64 = icmp ult i64 %.sroa.3.0.copyload.i2.i, 512, !dbg !1914
  br i1 %64, label %65, label %67, !dbg !1914

65:                                               ; preds = %63
  %66 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !1914
  br label %.split.i.i, !dbg !1914

67:                                               ; preds = %63
  %68 = icmp ugt i64 %.sroa.3.0.copyload.i2.i, 16384, !dbg !1914
  br i1 %68, label %69, label %71, !dbg !1914

69:                                               ; preds = %67
  %70 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !1914
  br label %.split.i.i, !dbg !1914

71:                                               ; preds = %67
  %72 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 3, !dbg !1914
  %73 = add nuw i64 %72, 1, !dbg !1914
  %74 = lshr i64 %73, 1, !dbg !1914
  br label %.split.i.i, !dbg !1914

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %46, %list.RocList.reallocateFresh.exit.i.i, %list.RocList.allocate.exit.i.i
  %.sroa.03.0.copyload.i.i = load ptr, ptr %0, align 8, !dbg !1914, !noalias !1925
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1914
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !1914, !noalias !1925
  br label %roc_builtins.list.with_capacity.exit, !dbg !1914

roc_builtins.list.with_capacity.exit:             ; preds = %entry, %list.RocList.reallocate.exit.i
  %.sroa.4.0.i = phi i64 [ %.sroa.3.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ 0, %entry ], !dbg !1914
  %.sroa.0.0.i = phi ptr [ %.sroa.03.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ null, %entry ], !dbg !1914
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %0), !dbg !1914, !noalias !1911
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1), !dbg !1914, !noalias !1911
  store ptr %.sroa.0.0.i, ptr %list_alloca, align 8, !dbg !1914, !alias.scope !1911
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1914
  store i64 0, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !1914, !alias.scope !1911
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1914
  store i64 %.sroa.4.0.i, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !1914, !alias.scope !1911
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1914
  %75 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1914
  %load_list.elt1 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1914
  %load_list.unpack2 = load i64, ptr %load_list.elt1, align 8, !dbg !1914
  %76 = insertvalue %list.RocList %75, i64 %load_list.unpack2, 1, !dbg !1914
  %load_list.elt3 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1914
  %load_list.unpack4 = load i64, ptr %load_list.elt3, align 8, !dbg !1914
  %load_list5 = insertvalue %list.RocList %76, i64 %load_list.unpack4, 2, !dbg !1914
  ret %list.RocList %load_list5, !dbg !1914
}

define internal fastcc i64 @Num_shiftLeftBy_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(i64 %"#arg1", i8 %"#arg2") !dbg !1932 {
entry:
  %cast_for_shift1 = zext i8 %"#arg2" to i64, !dbg !1933
  %int_shift_left = shl i64 %"#arg1", %cast_for_shift1, !dbg !1933
  ret i64 %int_shift_left, !dbg !1933
}

define internal fastcc i1 @Five_61_23b674fb7e93c9deea1a988c8dccdf545316dca864beef81f3b16a6841ea4d62(i64 %x, ptr %"#arg_closure") !dbg !1935 {
entry:
  %result_value = alloca { [1 x i8], i8 }, align 8, !dbg !1936
  %struct_field1 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !1936
  %struct_field_access_record_1 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !1936
  %struct_field.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1936
  %0 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1936
  %struct_field.elt3 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !1936
  %struct_field.unpack4 = load i64, ptr %struct_field.elt3, align 8, !dbg !1936
  %1 = insertvalue %list.RocList %0, i64 %struct_field.unpack4, 1, !dbg !1936
  %struct_field.elt5 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !1936
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !1936
  %struct_field7 = insertvalue %list.RocList %1, i64 %struct_field.unpack6, 2, !dbg !1936
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %struct_field1, ptr noundef nonnull align 8 dereferenceable(64) %"#arg_closure", i64 64, i1 false), !dbg !1936
  call fastcc void @Five_checkRule_5ae1d7e830a23d381281749fd7714be9e444b8f3266bc9fb69e39667d5159b(ptr nonnull %struct_field1, i64 %x, %list.RocList %struct_field7, ptr nonnull %result_value), !dbg !1936
  call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field7), !dbg !1936
  %tag_id_ptr = getelementptr inbounds { [1 x i8], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1936
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !1936
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !1936
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1936

then_block:                                       ; preds = %entry
  %load_element = load i1, ptr %result_value, align 8, !dbg !1936
  ret i1 %load_element, !dbg !1936

else_block:                                       ; preds = %entry
  %call = call fastcc i1 @Bool_true_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb(), !dbg !1936
  ret i1 %call, !dbg !1936
}

define internal fastcc void @Parser_153_e3772fdac2658fe707f6fdbe88de56aae9be7164372b6f69cc054cd20261b(%list.RocList %input, ptr %parser, ptr %0) !dbg !1938 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_manyImpl_c028e8ebec9626f9ffbdf64d76d758431ce5c5566ceefcd869c6b9c72e5a1d(ptr %parser, %list.RocList zeroinitializer, %list.RocList %input, ptr nonnull %result_value), !dbg !1939
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !1939
  ret void, !dbg !1939
}

define internal fastcc {} @Parser_buildPrimitiveParser_7f281174bb95be75e15cd13756faa969e71990e919b9dd9056d6ea49f9599bbe({} %fun) !dbg !1941 {
entry:
  ret {} %fun, !dbg !1942
}

define internal fastcc %list.RocList @List_append_c6e34737223a4b123e4ef4b086ad92b3ead64b519536ae28b552b4718b7124e(%list.RocList %list, { i64, i64 } %element) !dbg !1944 {
entry:
  %call = tail call fastcc %list.RocList @List_reserve_1979c8b7ef5f495fcd893830dae286517b20f9eb43379243d33155ade7a91(%list.RocList %list, i64 1), !dbg !1945
  %call1 = tail call fastcc %list.RocList @List_appendUnsafe_a1b37f834fad683b855edbbe46b2d4d8d04bfe3fdda176d9a70679e9ca0caf(%list.RocList %call, { i64, i64 } %element), !dbg !1945
  ret %list.RocList %call1, !dbg !1945
}

define internal fastcc void @Dict_findSecondUnroll_d52f8c3ecf2e209e81e04dd415745749206b773d86c4d1b2bb2d3d8e8890c(%list.RocList %buckets, i64 %bucketIndex, i32 %distAndFingerprint, %list.RocList %data, i64 %key, ptr %0) !dbg !1947 {
entry:
  %result_value17 = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1948
  %result_value = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1948
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !1948
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !1948
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %buckets, i64 %bucketIndex), !dbg !1948
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !1948
  %call1 = tail call fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %distAndFingerprint, i32 %struct_field_access_record_1), !dbg !1948
  br i1 %call1, label %then_block, label %else_block, !dbg !1948

then_block:                                       ; preds = %entry
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !1948
  %call2 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_0), !dbg !1948
  %call3 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %data, i64 %call2), !dbg !1948
  %struct_field_access_record_04 = extractvalue { i64, %list.RocList } %call3, 0, !dbg !1948
  %call6 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field_access_record_04, i64 %key), !dbg !1948
  br i1 %call6, label %then_block8, label %else_block9, !dbg !1948

else_block:                                       ; preds = %entry
  %call14 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1948
  %call15 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call14), !dbg !1948
  %call16 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1948
  call fastcc void @Dict_findHelper_6fdff3e812be393e397a32aeb76ae96155b45793f22c8c7f8b12de3628ba863(%list.RocList %buckets, i64 %call15, i32 %call16, %list.RocList %data, i64 %key, ptr nonnull %result_value17), !dbg !1948
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value17, i64 40, i1 false), !dbg !1948
  ret void, !dbg !1948

then_block8:                                      ; preds = %then_block
  %struct_field_access_record_15 = extractvalue { i64, %list.RocList } %call3, 1, !dbg !1948
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field_access_record_15, i64 1), !dbg !1948
  %struct_field_access_record_15.elt = extractvalue %list.RocList %struct_field_access_record_15, 0, !dbg !1948
  store ptr %struct_field_access_record_15.elt, ptr %tag_alloca, align 8, !dbg !1948
  %tag_alloca.repack18 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !1948
  %struct_field_access_record_15.elt19 = extractvalue %list.RocList %struct_field_access_record_15, 1, !dbg !1948
  store i64 %struct_field_access_record_15.elt19, ptr %tag_alloca.repack18, align 8, !dbg !1948
  %tag_alloca.repack20 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !1948
  %struct_field_access_record_15.elt21 = extractvalue %list.RocList %struct_field_access_record_15, 2, !dbg !1948
  store i64 %struct_field_access_record_15.elt21, ptr %tag_alloca.repack20, align 8, !dbg !1948
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1948
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !1948
  store i64 %bucketIndex, ptr %struct_alloca, align 8, !dbg !1948
  %struct_field_gep10 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1948
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep10, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !1948
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1948
  ret void, !dbg !1948

else_block9:                                      ; preds = %then_block
  %call11 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %buckets), !dbg !1948
  %call12 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %bucketIndex, i64 %call11), !dbg !1948
  %call13 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %distAndFingerprint), !dbg !1948
  call fastcc void @Dict_findHelper_6fdff3e812be393e397a32aeb76ae96155b45793f22c8c7f8b12de3628ba863(%list.RocList %buckets, i64 %call12, i32 %call13, %list.RocList %data, i64 %key, ptr nonnull %result_value), !dbg !1948
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !1948
  ret void, !dbg !1948
}

define internal fastcc i64 @List_walk_bad96aa871ccf5b068b2a1da7544fd3d07a932588efb92244e692b8beda99ce(%list.RocList %list, i64 %init, {} %func) !dbg !1950 {
entry:
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !1951
  %call1 = tail call fastcc i64 @List_walkHelp_10259c295470b0dd303c429b36412fb6f21861ad97f73a2722c7516d147991f(%list.RocList %list, i64 %init, {} %func, i64 0, i64 %call), !dbg !1951
  ret i64 %call1, !dbg !1951
}

define internal fastcc %list.RocList @List_prepend_2e45b2d470bcdecd31941dc520a178647d478d5729df14ff06c26a7bd3b4(%list.RocList %"#arg1", i64 %"#arg2") !dbg !1953 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca i64, align 8
  store i64 %"#arg2", ptr %element_to_pass_as_opaque, align 8, !dbg !1954
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !1954
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !1954
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !1954
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !1954
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !1954
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !1954
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !1954
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !1954
  call void @llvm.experimental.noalias.scope.decl(metadata !1956), !dbg !1954
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !1954
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !1954
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !1954
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !1954, !noalias !1956
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %0), !dbg !1954, !noalias !1956
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1), !dbg !1954, !noalias !1956
  %.sroa.017.0.copyload18.i = load ptr, ptr %list_alloca111, align 8, !dbg !1954, !noalias !1956
  %.sroa.8.0..sroa_idx21.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !1954
  %.sroa.8.0.copyload22.i = load i64, ptr %.sroa.8.0..sroa_idx21.i, align 8, !dbg !1954, !noalias !1956
  %isneg.i.i.i = icmp slt i64 %.sroa.8.0.copyload22.i, 0, !dbg !1954
  %2 = call i64 @llvm.smax.i64(i64 %.sroa.8.0.copyload22.i, i64 0), !dbg !1954
  %3 = select i1 %isneg.i.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !1954
  %4 = or i64 %3, %2, !dbg !1954
  %5 = call i64 @llvm.uadd.sat.i64(i64 %.sroa.1.0.copyload.i, i64 1), !dbg !1954
  %6 = icmp ne i64 %4, 0, !dbg !1954
  %brmerge.i.i.i.i = select i1 %6, i1 true, i1 %isneg.i.i.i, !dbg !1954
  br i1 %brmerge.i.i.i.i, label %.critedge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, !dbg !1954

.critedge.i.i.i.i:                                ; preds = %entry
  %7 = icmp slt i64 %.sroa.8.0.copyload22.i, 0, !dbg !1954
  %8 = ptrtoint ptr %.sroa.017.0.copyload18.i to i64, !dbg !1954
  %9 = shl i64 %.sroa.8.0.copyload22.i, 1, !dbg !1954
  %10 = select i1 %7, i64 %9, i64 %8, !dbg !1954
  %11 = inttoptr i64 %10 to ptr, !dbg !1954
  %12 = getelementptr inbounds i64, ptr %11, i64 -1, !dbg !1954
  %13 = load i64, ptr %12, align 8, !dbg !1954, !noalias !1959
  %14 = icmp eq i64 %13, -9223372036854775808, !dbg !1954
  br label %list.RocList.isUnique.exit.i.i, !dbg !1954

list.RocList.isUnique.exit.i.i:                   ; preds = %.critedge.i.i.i.i, %entry
  %common.ret.op.i.i.i.i = phi i1 [ %14, %.critedge.i.i.i.i ], [ true, %entry ], !dbg !1954
  %15 = icmp uge i64 %4, %5, !dbg !1954
  %or.cond.i.i = select i1 %common.ret.op.i.i.i.i, i1 %15, i1 false, !dbg !1954
  br i1 %or.cond.i.i, label %roc_builtins.list.reserve.exit.i, label %.critedge2.i.i, !dbg !1954

.critedge2.i.i:                                   ; preds = %list.RocList.isUnique.exit.i.i
  store ptr %.sroa.017.0.copyload18.i, ptr %1, align 8, !dbg !1954, !noalias !1959
  %.sroa.6.0..sroa_idx.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1954
  store i64 %.sroa.1.0.copyload.i, ptr %.sroa.6.0..sroa_idx.i, align 8, !dbg !1954, !noalias !1959
  %.sroa.8.0..sroa_idx.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !1954
  store i64 %.sroa.8.0.copyload22.i, ptr %.sroa.8.0..sroa_idx.i, align 8, !dbg !1954, !noalias !1959
  call void @llvm.experimental.noalias.scope.decl(metadata !1962), !dbg !1954
  %16 = load ptr, ptr %1, align 8, !dbg !1954, !noalias !1965
  %.not.i.i = icmp eq ptr %16, null, !dbg !1954
  br i1 %.not.i.i, label %30, label %17, !dbg !1954

17:                                               ; preds = %.critedge2.i.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !1954
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !1954, !noalias !1965
  %.sroa.3.0..sroa_idx.i1.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !1954
  %.sroa.3.0.copyload.i2.i = load i64, ptr %.sroa.3.0..sroa_idx.i1.i, align 8, !dbg !1954, !noalias !1965
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1954
  %18 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i2.i, i64 0), !dbg !1954
  %19 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !1954
  %20 = or i64 %19, %18, !dbg !1954
  %21 = icmp ne i64 %20, 0, !dbg !1954
  %brmerge.i.i.i3.i = select i1 %21, i1 true, i1 %isneg.i.i.i.i.i, !dbg !1954
  br i1 %brmerge.i.i.i3.i, label %list.RocList.isUnique.exit.i4.i, label %.thread.i.i, !dbg !1954

list.RocList.isUnique.exit.i4.i:                  ; preds = %17
  %22 = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1954
  %23 = ptrtoint ptr %16 to i64, !dbg !1954
  %24 = shl i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !1954
  %25 = select i1 %22, i64 %24, i64 %23, !dbg !1954
  %26 = inttoptr i64 %25 to ptr, !dbg !1954
  %27 = getelementptr inbounds i64, ptr %26, i64 -1, !dbg !1954
  %28 = load i64, ptr %27, align 8, !dbg !1954, !noalias !1965
  %29 = icmp ne i64 %28, -9223372036854775808, !dbg !1954
  %brmerge.i.i = select i1 %29, i1 true, i1 %22, !dbg !1954
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !1954

30:                                               ; preds = %.critedge2.i.i
  %31 = call i64 @llvm.umax.i64(i64 8, i64 %5), !dbg !1954
  %32 = mul nuw i64 %31, 8, !dbg !1954
  %33 = add nuw i64 %32, 8, !dbg !1954
  %34 = call ptr @roc_alloc(i64 %33, i32 8), !dbg !1954, !noalias !1966
  %35 = getelementptr inbounds i8, ptr %34, i64 8, !dbg !1954
  %36 = getelementptr inbounds i8, ptr %35, i64 -8, !dbg !1954
  store i64 -9223372036854775808, ptr %36, align 8, !dbg !1954, !noalias !1966
  store ptr %35, ptr %0, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1954
  store i64 %5, ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1954
  store i64 %31, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  br label %list.RocList.reallocate.exit.i, !dbg !1954

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i4.i, %17
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i2.i, %5, !dbg !1954
  br i1 %.not7.i.i, label %59, label %56, !dbg !1954

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i4.i
  %37 = call i64 @llvm.umax.i64(i64 8, i64 %5), !dbg !1954
  %38 = mul nuw i64 %37, 8, !dbg !1954
  %39 = add nuw i64 %38, 8, !dbg !1954
  %40 = call ptr @roc_alloc(i64 %39, i32 8), !dbg !1954, !noalias !1969
  %41 = getelementptr inbounds i8, ptr %40, i64 8, !dbg !1954
  %42 = getelementptr inbounds i8, ptr %41, i64 -8, !dbg !1954
  store i64 -9223372036854775808, ptr %42, align 8, !dbg !1954, !noalias !1969
  %43 = mul nuw i64 %.sroa.2.0.copyload.i.i, 8, !dbg !1954
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %41, ptr nonnull align 1 %16, i64 %43, i1 false), !dbg !1954, !noalias !1974
  %44 = getelementptr inbounds i8, ptr %41, i64 %43, !dbg !1954
  %45 = sub i64 %5, %.sroa.2.0.copyload.i.i, !dbg !1954
  %46 = mul i64 %45, 8, !dbg !1954
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %44, i8 0, i64 %46, i1 false), !dbg !1954, !noalias !1974
  %47 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !1954
  %48 = icmp ne i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1954
  %49 = icmp ne i64 %25, 0, !dbg !1954
  %or.cond.i.i.i.i = select i1 %48, i1 %49, i1 false, !dbg !1954
  br i1 %or.cond.i.i.i.i, label %50, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1954

50:                                               ; preds = %.critedge.i.i
  %51 = load i64, ptr %27, align 8, !dbg !1954, !noalias !1974
  %.not.i.i.i.i = icmp eq i64 %51, 0, !dbg !1954
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %52, !dbg !1954

52:                                               ; preds = %50
  %53 = add i64 %51, -1, !dbg !1954
  store i64 %53, ptr %27, align 8, !dbg !1954, !noalias !1974
  %54 = icmp eq i64 %51, -9223372036854775808, !dbg !1954
  br i1 %54, label %55, label %list.RocList.reallocateFresh.exit.i.i, !dbg !1954

55:                                               ; preds = %52
  call void @roc_dealloc(ptr nonnull align 1 %27, i32 8), !dbg !1954, !noalias !1974
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !1954

list.RocList.reallocateFresh.exit.i.i:            ; preds = %55, %52, %50, %.critedge.i.i
  store ptr %41, ptr %0, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !1954
  store i64 %5, ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1954
  store i64 %37, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  br label %list.RocList.reallocate.exit.i, !dbg !1954

56:                                               ; preds = %.thread.i.i
  store ptr %16, ptr %0, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %57 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1954
  store i64 %5, ptr %57, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %58 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1954
  store i64 %.sroa.3.0.copyload.i2.i, ptr %58, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  br label %list.RocList.reallocate.exit.i, !dbg !1954

59:                                               ; preds = %.thread.i.i
  %60 = icmp eq i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !1954
  br i1 %60, label %72, label %73, !dbg !1954

.split1.i.i:                                      ; preds = %66, %.split.i.i
  %phi.call.i.i = phi ptr [ %71, %66 ], [ %16, %.split.i.i ], !dbg !1954
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %61 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !1954
  store i64 %5, ptr %61, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  %62 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !1954
  store i64 %63, ptr %62, align 8, !dbg !1954, !alias.scope !1962, !noalias !1959
  br label %list.RocList.reallocate.exit.i, !dbg !1954

.split.i.i:                                       ; preds = %81, %79, %75, %72
  %.0.i.i = phi i64 [ %76, %75 ], [ %80, %79 ], [ %84, %81 ], [ 8, %72 ], !dbg !1954
  %63 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %5), !dbg !1954
  %64 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 8, !dbg !1954
  %65 = mul nuw i64 %63, 8, !dbg !1954
  %.not.i9.i.i = icmp ult i64 %64, %65, !dbg !1954
  br i1 %.not.i9.i.i, label %66, label %.split1.i.i, !dbg !1954

66:                                               ; preds = %.split.i.i
  %67 = add nuw i64 %65, 8, !dbg !1954
  %68 = add nuw i64 %64, 8, !dbg !1954
  %69 = getelementptr inbounds i8, ptr %16, i64 -8, !dbg !1954
  %70 = call ptr @roc_realloc(ptr nonnull align 1 %69, i64 %67, i64 %68, i32 8), !dbg !1954, !noalias !1965
  %71 = getelementptr inbounds i8, ptr %70, i64 8, !dbg !1954
  br label %.split1.i.i, !dbg !1954

72:                                               ; preds = %59
  br label %.split.i.i, !dbg !1954

73:                                               ; preds = %59
  %74 = icmp ult i64 %.sroa.3.0.copyload.i2.i, 512, !dbg !1954
  br i1 %74, label %75, label %77, !dbg !1954

75:                                               ; preds = %73
  %76 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !1954
  br label %.split.i.i, !dbg !1954

77:                                               ; preds = %73
  %78 = icmp ugt i64 %.sroa.3.0.copyload.i2.i, 16384, !dbg !1954
  br i1 %78, label %79, label %81, !dbg !1954

79:                                               ; preds = %77
  %80 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !1954
  br label %.split.i.i, !dbg !1954

81:                                               ; preds = %77
  %82 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 3, !dbg !1954
  %83 = add nuw i64 %82, 1, !dbg !1954
  %84 = lshr i64 %83, 1, !dbg !1954
  br label %.split.i.i, !dbg !1954

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %56, %list.RocList.reallocateFresh.exit.i.i, %30
  %.sroa.03.0.copyload.i.i = load ptr, ptr %0, align 8, !dbg !1954, !noalias !1959
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !1954
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !1954, !noalias !1959
  br label %roc_builtins.list.reserve.exit.i, !dbg !1954

roc_builtins.list.reserve.exit.i:                 ; preds = %list.RocList.reallocate.exit.i, %list.RocList.isUnique.exit.i.i
  %.sroa.5.0.i = phi i64 [ %.sroa.3.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ %.sroa.8.0.copyload22.i, %list.RocList.isUnique.exit.i.i ], !dbg !1954
  %.sroa.0.0.i = phi ptr [ %.sroa.03.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ %.sroa.017.0.copyload18.i, %list.RocList.isUnique.exit.i.i ], !dbg !1954
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %0), !dbg !1954, !noalias !1956
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1), !dbg !1954, !noalias !1956
  %.not.i = icmp eq ptr %.sroa.0.0.i, null, !dbg !1954
  br i1 %.not.i, label %roc_builtins.list.prepend.exit, label %85, !dbg !1954

85:                                               ; preds = %roc_builtins.list.reserve.exit.i
  %86 = mul nuw i64 %.sroa.1.0.copyload.i, 8, !dbg !1954
  %.not6.i.i = icmp eq i64 %86, 0, !dbg !1954
  br i1 %.not6.i.i, label %mem.copyBackwards__anon_9817.exit.i, label %iter.check.i, !dbg !1954

iter.check.i:                                     ; preds = %85
  %min.iters.check.i = icmp ult i64 %86, 4, !dbg !1954
  br i1 %min.iters.check.i, label %.lr.ph.i.preheader.i, label %vector.scevcheck.i, !dbg !1954

vector.scevcheck.i:                               ; preds = %iter.check.i
  %87 = add i64 %86, -1, !dbg !1954
  %88 = add i64 %.sroa.1.0.copyload.i, 1, !dbg !1954
  %89 = mul i64 %88, 8, !dbg !1954
  %90 = add i64 %89, -1, !dbg !1954
  %uglygep.i = getelementptr i8, ptr %.sroa.0.0.i, i64 %90, !dbg !1954
  %91 = sub i64 1, %86, !dbg !1954
  %92 = getelementptr i8, ptr %uglygep.i, i64 %91, !dbg !1954
  %93 = icmp ugt ptr %92, %uglygep.i, !dbg !1954
  %uglygep24.i = getelementptr i8, ptr %.sroa.0.0.i, i64 %87, !dbg !1954
  %94 = icmp ugt ptr %.sroa.0.0.i, %uglygep24.i, !dbg !1954
  %95 = or i1 %93, %94, !dbg !1954
  br i1 %95, label %.lr.ph.i.preheader.i, label %vector.main.loop.iter.check.i, !dbg !1954

vector.main.loop.iter.check.i:                    ; preds = %vector.scevcheck.i
  %min.iters.check29.i = icmp ult i64 %86, 16, !dbg !1954
  br i1 %min.iters.check29.i, label %vec.epilog.ph.i, label %vector.ph.i, !dbg !1954

vector.ph.i:                                      ; preds = %vector.main.loop.iter.check.i
  %n.vec.i = and i64 %86, -16, !dbg !1954
  %96 = add i64 %89, -16, !dbg !1954
  %uglygep71.i = getelementptr i8, ptr %.sroa.0.0.i, i64 %96, !dbg !1954
  %97 = add i64 %86, -16, !dbg !1954
  %uglygep75.i = getelementptr i8, ptr %.sroa.0.0.i, i64 %97, !dbg !1954
  %98 = lshr i64 %86, 4, !dbg !1954
  %99 = mul i64 %98, -16, !dbg !1954
  br label %vector.body.i, !dbg !1954

vector.body.i:                                    ; preds = %vector.body.i, %vector.ph.i
  %lsr.iv72.i = phi i64 [ %lsr.iv.next73.i, %vector.body.i ], [ 0, %vector.ph.i ], !dbg !1954
  %uglygep76.i = getelementptr i8, ptr %uglygep75.i, i64 %lsr.iv72.i, !dbg !1954
  %wide.load.i = load <16 x i8>, ptr %uglygep76.i, align 1, !dbg !1954, !noalias !1956
  %uglygep74.i = getelementptr i8, ptr %uglygep71.i, i64 %lsr.iv72.i, !dbg !1954
  store <16 x i8> %wide.load.i, ptr %uglygep74.i, align 1, !dbg !1954, !noalias !1956
  %lsr.iv.next73.i = add i64 %lsr.iv72.i, -16, !dbg !1954
  %100 = icmp eq i64 %99, %lsr.iv.next73.i, !dbg !1954
  br i1 %100, label %middle.block.i, label %vector.body.i, !dbg !1954, !llvm.loop !1975

middle.block.i:                                   ; preds = %vector.body.i
  %cmp.n.i = icmp eq i64 %86, %n.vec.i, !dbg !1954
  br i1 %cmp.n.i, label %mem.copyBackwards__anon_9817.exit.i, label %vec.epilog.iter.check.i, !dbg !1954

vec.epilog.iter.check.i:                          ; preds = %middle.block.i
  %ind.end33.i = and i64 %86, 15, !dbg !1954
  %n.vec.remaining.i = and i64 %86, 12, !dbg !1954
  %min.epilog.iters.check.i = icmp eq i64 %n.vec.remaining.i, 0, !dbg !1954
  br i1 %min.epilog.iters.check.i, label %.lr.ph.i.preheader.i, label %vec.epilog.ph.i, !dbg !1954

vec.epilog.ph.i:                                  ; preds = %vec.epilog.iter.check.i, %vector.main.loop.iter.check.i
  %vec.epilog.resume.val.i = phi i64 [ %n.vec.i, %vec.epilog.iter.check.i ], [ 0, %vector.main.loop.iter.check.i ], !dbg !1954
  %n.vec32.i = and i64 %86, -4, !dbg !1954
  %ind.end.i = and i64 %86, 3, !dbg !1954
  %101 = add i64 %.sroa.1.0.copyload.i, 1, !dbg !1954
  %102 = mul i64 8, %101, !dbg !1954
  %103 = add i64 %102, -4, !dbg !1954
  %uglygep65.i = getelementptr i8, ptr %.sroa.0.0.i, i64 %103, !dbg !1954
  %104 = sub i64 0, %vec.epilog.resume.val.i, !dbg !1954
  %105 = add i64 %86, -4, !dbg !1954
  %uglygep69.i = getelementptr i8, ptr %.sroa.0.0.i, i64 %105, !dbg !1954
  %106 = lshr i64 %86, 2, !dbg !1954
  %107 = mul i64 %106, -4, !dbg !1954
  br label %vec.epilog.vector.body.i, !dbg !1954

vec.epilog.vector.body.i:                         ; preds = %vec.epilog.vector.body.i, %vec.epilog.ph.i
  %lsr.iv66.i = phi i64 [ %lsr.iv.next67.i, %vec.epilog.vector.body.i ], [ %104, %vec.epilog.ph.i ], !dbg !1954
  %uglygep70.i = getelementptr i8, ptr %uglygep69.i, i64 %lsr.iv66.i, !dbg !1954
  %wide.load37.i = load <4 x i8>, ptr %uglygep70.i, align 1, !dbg !1954, !noalias !1956
  %uglygep68.i = getelementptr i8, ptr %uglygep65.i, i64 %lsr.iv66.i, !dbg !1954
  store <4 x i8> %wide.load37.i, ptr %uglygep68.i, align 1, !dbg !1954, !noalias !1956
  %lsr.iv.next67.i = add i64 %lsr.iv66.i, -4, !dbg !1954
  %108 = icmp eq i64 %107, %lsr.iv.next67.i, !dbg !1954
  br i1 %108, label %vec.epilog.middle.block.i, label %vec.epilog.vector.body.i, !dbg !1954, !llvm.loop !1976

vec.epilog.middle.block.i:                        ; preds = %vec.epilog.vector.body.i
  %cmp.n34.i = icmp eq i64 %86, %n.vec32.i, !dbg !1954
  br i1 %cmp.n34.i, label %mem.copyBackwards__anon_9817.exit.i, label %.lr.ph.i.preheader.i, !dbg !1954

.lr.ph.i.preheader.i:                             ; preds = %vec.epilog.middle.block.i, %vec.epilog.iter.check.i, %vector.scevcheck.i, %iter.check.i
  %.07.i.ph.i = phi i64 [ %86, %iter.check.i ], [ %86, %vector.scevcheck.i ], [ %ind.end33.i, %vec.epilog.iter.check.i ], [ %ind.end.i, %vec.epilog.middle.block.i ], !dbg !1954
  %109 = add i64 %.07.i.ph.i, -1, !dbg !1954
  %xtraiter.i = and i64 %.07.i.ph.i, 3, !dbg !1954
  %lcmp.mod.not.i = icmp eq i64 %xtraiter.i, 0, !dbg !1954
  br i1 %lcmp.mod.not.i, label %.lr.ph.i.prol.loopexit.i, label %.lr.ph.i.prol.preheader.i, !dbg !1954

.lr.ph.i.prol.preheader.i:                        ; preds = %.lr.ph.i.preheader.i
  %uglygep61.i = getelementptr i8, ptr %.sroa.0.0.i, i64 -1, !dbg !1954
  %uglygep63.i = getelementptr i8, ptr %uglygep61.i, i64 8, !dbg !1954
  br label %.lr.ph.i.prol.i, !dbg !1954

.lr.ph.i.prol.i:                                  ; preds = %.lr.ph.i.prol.i, %.lr.ph.i.prol.preheader.i
  %lsr.iv.i = phi i64 [ %xtraiter.i, %.lr.ph.i.prol.preheader.i ], [ %lsr.iv.next.i, %.lr.ph.i.prol.i ], !dbg !1954
  %.07.i.prol.i = phi i64 [ %110, %.lr.ph.i.prol.i ], [ %.07.i.ph.i, %.lr.ph.i.prol.preheader.i ], !dbg !1954
  %110 = add i64 %.07.i.prol.i, -1, !dbg !1954
  %uglygep64.i = getelementptr i8, ptr %uglygep63.i, i64 %.07.i.prol.i, !dbg !1954
  %uglygep62.i = getelementptr i8, ptr %uglygep61.i, i64 %.07.i.prol.i, !dbg !1954
  %111 = load i8, ptr %uglygep62.i, align 1, !dbg !1954, !noalias !1956
  store i8 %111, ptr %uglygep64.i, align 1, !dbg !1954, !noalias !1956
  %lsr.iv.next.i = add nsw i64 %lsr.iv.i, -1, !dbg !1954
  %prol.iter.cmp.not.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !1954
  br i1 %prol.iter.cmp.not.i, label %.lr.ph.i.prol.loopexit.i, label %.lr.ph.i.prol.i, !dbg !1954, !llvm.loop !1977

.lr.ph.i.prol.loopexit.i:                         ; preds = %.lr.ph.i.prol.i, %.lr.ph.i.preheader.i
  %.07.i.unr.i = phi i64 [ %.07.i.ph.i, %.lr.ph.i.preheader.i ], [ %110, %.lr.ph.i.prol.i ], !dbg !1954
  %112 = icmp ult i64 %109, 3, !dbg !1954
  br i1 %112, label %mem.copyBackwards__anon_9817.exit.i, label %.lr.ph.i.preheader44.i, !dbg !1954

.lr.ph.i.preheader44.i:                           ; preds = %.lr.ph.i.prol.loopexit.i
  %uglygep45.i = getelementptr i8, ptr %.sroa.0.0.i, i64 -1, !dbg !1954
  %uglygep53.i = getelementptr i8, ptr %uglygep45.i, i64 8, !dbg !1954
  br label %.lr.ph.i.i, !dbg !1954

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.i.preheader44.i
  %.07.i.i = phi i64 [ %116, %.lr.ph.i.i ], [ %.07.i.unr.i, %.lr.ph.i.preheader44.i ], !dbg !1954
  %uglygep60.i = getelementptr i8, ptr %uglygep53.i, i64 %.07.i.i, !dbg !1954
  %uglygep52.i = getelementptr i8, ptr %uglygep45.i, i64 %.07.i.i, !dbg !1954
  %113 = load i8, ptr %uglygep52.i, align 1, !dbg !1954, !noalias !1956
  store i8 %113, ptr %uglygep60.i, align 1, !dbg !1954, !noalias !1956
  %uglygep58.i = getelementptr i8, ptr %uglygep53.i, i64 %.07.i.i, !dbg !1954
  %uglygep59.i = getelementptr i8, ptr %uglygep58.i, i64 -1, !dbg !1954
  %uglygep50.i = getelementptr i8, ptr %uglygep45.i, i64 %.07.i.i, !dbg !1954
  %uglygep51.i = getelementptr i8, ptr %uglygep50.i, i64 -1, !dbg !1954
  %114 = load i8, ptr %uglygep51.i, align 1, !dbg !1954, !noalias !1956
  store i8 %114, ptr %uglygep59.i, align 1, !dbg !1954, !noalias !1956
  %uglygep56.i = getelementptr i8, ptr %uglygep53.i, i64 %.07.i.i, !dbg !1954
  %uglygep57.i = getelementptr i8, ptr %uglygep56.i, i64 -2, !dbg !1954
  %uglygep48.i = getelementptr i8, ptr %uglygep45.i, i64 %.07.i.i, !dbg !1954
  %uglygep49.i = getelementptr i8, ptr %uglygep48.i, i64 -2, !dbg !1954
  %115 = load i8, ptr %uglygep49.i, align 1, !dbg !1954, !noalias !1956
  store i8 %115, ptr %uglygep57.i, align 1, !dbg !1954, !noalias !1956
  %116 = add i64 %.07.i.i, -4, !dbg !1954
  %uglygep54.i = getelementptr i8, ptr %uglygep53.i, i64 %.07.i.i, !dbg !1954
  %uglygep55.i = getelementptr i8, ptr %uglygep54.i, i64 -3, !dbg !1954
  %uglygep46.i = getelementptr i8, ptr %uglygep45.i, i64 %.07.i.i, !dbg !1954
  %uglygep47.i = getelementptr i8, ptr %uglygep46.i, i64 -3, !dbg !1954
  %117 = load i8, ptr %uglygep47.i, align 1, !dbg !1954, !noalias !1956
  store i8 %117, ptr %uglygep55.i, align 1, !dbg !1954, !noalias !1956
  %.not.i.3.i = icmp eq i64 %116, 0, !dbg !1954
  br i1 %.not.i.3.i, label %mem.copyBackwards__anon_9817.exit.i, label %.lr.ph.i.i, !dbg !1954, !llvm.loop !1978

mem.copyBackwards__anon_9817.exit.i:              ; preds = %.lr.ph.i.i, %.lr.ph.i.prol.loopexit.i, %vec.epilog.middle.block.i, %middle.block.i, %85
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %.sroa.0.0.i, ptr align 8 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr (i64, ptr null, i32 1) to i64), i1 false), !dbg !1979, !noalias !1956
  br label %roc_builtins.list.prepend.exit, !dbg !1954

roc_builtins.list.prepend.exit:                   ; preds = %roc_builtins.list.reserve.exit.i, %mem.copyBackwards__anon_9817.exit.i
  %118 = add nuw i64 %.sroa.1.0.copyload.i, 1, !dbg !1954
  store ptr %.sroa.0.0.i, ptr %list_alloca, align 8, !dbg !1954, !alias.scope !1956
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !1954
  store i64 %118, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !1954, !alias.scope !1956
  %.sroa.5.0..sroa_idx5.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !1954
  store i64 %.sroa.5.0.i, ptr %.sroa.5.0..sroa_idx5.i, align 8, !dbg !1954, !alias.scope !1956
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !1954
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !1954
  %119 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !1954
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !1954
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !1954
  %120 = insertvalue %list.RocList %119, i64 %load_list.unpack7, 1, !dbg !1954
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !1954
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !1954
  %load_list10 = insertvalue %list.RocList %120, i64 %load_list.unpack9, 2, !dbg !1954
  ret %list.RocList %load_list10, !dbg !1954
}

define internal fastcc void @Parser_183_70af681fdccad07396627fdeeca8661cb958bb2b9c24b8d15dd47fc87a17(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !1983 {
entry:
  %tag_alloca32 = alloca { [5 x i64], i8 }, align 8, !dbg !1984
  %struct_alloca30 = alloca { { %list.RocList, { i64, i64 } } }, align 8, !dbg !1984
  %struct_alloca = alloca { %list.RocList, { i64, i64 } }, align 8, !dbg !1984
  %tag_alloca21 = alloca { [5 x i64], i8 }, align 8, !dbg !1984
  %load_element18 = alloca %str.RocStr, align 8, !dbg !1984
  %result_value9 = alloca { [4 x i64], i8 }, align 8, !dbg !1984
  %tag_alloca = alloca { [5 x i64], i8 }, align 8, !dbg !1984
  %load_element = alloca %str.RocStr, align 8, !dbg !1984
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !1984
  %struct_field1 = alloca { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, align 8, !dbg !1984
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field1, ptr noundef nonnull align 8 dereferenceable(48) %"#arg_closure", i64 48, i1 false), !dbg !1984
  call fastcc void @Parser_parsePartial_179b946120c9a08baf2d1f2247148c3fa11c6290279fe069ff1ca32539941(ptr nonnull %struct_field1, %list.RocList %input, ptr nonnull %result_value), !dbg !1984
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !1984
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !1984
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !1984
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !1984

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !1984
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !1984
  %load_tag_to_put_in_struct.elt75 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !1984
  %load_tag_to_put_in_struct.unpack76 = load i64, ptr %load_tag_to_put_in_struct.elt75, align 8, !dbg !1984
  %load_tag_to_put_in_struct.elt77 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !1984
  %load_tag_to_put_in_struct.unpack78 = load i64, ptr %load_tag_to_put_in_struct.elt77, align 8, !dbg !1984
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !1984
  %tag_alloca.repack80 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !1984
  store i64 %load_tag_to_put_in_struct.unpack76, ptr %tag_alloca.repack80, align 8, !dbg !1984
  %tag_alloca.repack82 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !1984
  store i64 %load_tag_to_put_in_struct.unpack78, ptr %tag_alloca.repack82, align 8, !dbg !1984
  %tag_id_ptr3 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1984
  store i8 0, ptr %tag_id_ptr3, align 8, !dbg !1984
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !1984
  ret void, !dbg !1984

else_block:                                       ; preds = %entry
  %load_element6.unpack.unpack = load ptr, ptr %result_value, align 8, !dbg !1984
  %1 = insertvalue %list.RocList poison, ptr %load_element6.unpack.unpack, 0, !dbg !1984
  %load_element6.unpack.elt47 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !1984
  %load_element6.unpack.unpack48 = load i64, ptr %load_element6.unpack.elt47, align 8, !dbg !1984
  %2 = insertvalue %list.RocList %1, i64 %load_element6.unpack.unpack48, 1, !dbg !1984
  %load_element6.unpack.elt49 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !1984
  %load_element6.unpack.unpack50 = load i64, ptr %load_element6.unpack.elt49, align 8, !dbg !1984
  %load_element6.unpack51 = insertvalue %list.RocList %2, i64 %load_element6.unpack.unpack50, 2, !dbg !1984
  %load_element6.elt44 = getelementptr inbounds { %list.RocList, i64 }, ptr %result_value, i64 0, i32 1, !dbg !1984
  %load_element6.unpack45 = load i64, ptr %load_element6.elt44, align 8, !dbg !1984
  call fastcc void @Parser_parsePartial_bc8c4fbb4471f82ba588d9366a6cc73c095ec9bae4fb1a31564e5462ba6746({ {}, { { {}, {} }, {} } } poison, %list.RocList %load_element6.unpack51, ptr nonnull %result_value9), !dbg !1984
  call fastcc void @"#Attr_#dec_12"(%list.RocList %load_element6.unpack51), !dbg !1984
  %tag_id_ptr10 = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value9, i64 0, i32 1, !dbg !1984
  %load_tag_id11 = load i8, ptr %tag_id_ptr10, align 8, !dbg !1984
  %eq_u812 = icmp eq i8 %load_tag_id11, 0, !dbg !1984
  br i1 %eq_u812, label %then_block14, label %else_block15, !dbg !1984

then_block14:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element18, ptr noundef nonnull align 8 dereferenceable(24) %result_value9, i64 24, i1 false), !dbg !1984
  %load_tag_to_put_in_struct19.unpack = load ptr, ptr %load_element18, align 8, !dbg !1984
  %load_tag_to_put_in_struct19.elt66 = getelementptr inbounds %str.RocStr, ptr %load_element18, i64 0, i32 1, !dbg !1984
  %load_tag_to_put_in_struct19.unpack67 = load i64, ptr %load_tag_to_put_in_struct19.elt66, align 8, !dbg !1984
  %load_tag_to_put_in_struct19.elt68 = getelementptr inbounds %str.RocStr, ptr %load_element18, i64 0, i32 2, !dbg !1984
  %load_tag_to_put_in_struct19.unpack69 = load i64, ptr %load_tag_to_put_in_struct19.elt68, align 8, !dbg !1984
  store ptr %load_tag_to_put_in_struct19.unpack, ptr %tag_alloca21, align 8, !dbg !1984
  %tag_alloca21.repack71 = getelementptr inbounds %str.RocStr, ptr %tag_alloca21, i64 0, i32 1, !dbg !1984
  store i64 %load_tag_to_put_in_struct19.unpack67, ptr %tag_alloca21.repack71, align 8, !dbg !1984
  %tag_alloca21.repack73 = getelementptr inbounds %str.RocStr, ptr %tag_alloca21, i64 0, i32 2, !dbg !1984
  store i64 %load_tag_to_put_in_struct19.unpack69, ptr %tag_alloca21.repack73, align 8, !dbg !1984
  %tag_id_ptr23 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca21, i64 0, i32 1, !dbg !1984
  store i8 0, ptr %tag_id_ptr23, align 8, !dbg !1984
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca21, i64 48, i1 false), !dbg !1984
  ret void, !dbg !1984

else_block15:                                     ; preds = %else_block
  %load_element26.unpack.unpack = load ptr, ptr %result_value9, align 8, !dbg !1984
  %load_element26.unpack.elt55 = getelementptr inbounds %list.RocList, ptr %result_value9, i64 0, i32 1, !dbg !1984
  %load_element26.unpack.unpack56 = load i64, ptr %load_element26.unpack.elt55, align 8, !dbg !1984
  %load_element26.unpack.elt57 = getelementptr inbounds %list.RocList, ptr %result_value9, i64 0, i32 2, !dbg !1984
  %load_element26.unpack.unpack58 = load i64, ptr %load_element26.unpack.elt57, align 8, !dbg !1984
  %load_element26.elt52 = getelementptr inbounds { %list.RocList, i64 }, ptr %result_value9, i64 0, i32 1, !dbg !1984
  %load_element26.unpack53 = load i64, ptr %load_element26.elt52, align 8, !dbg !1984
  %call = call fastcc { i64, i64 } @Five_26_101bd9114cb72f29d6b22ed6cabba79bcc71b9b9038a04a56e8c4a52082be(i64 %load_element26.unpack53, i64 %load_element6.unpack45), !dbg !1984
  store ptr %load_element26.unpack.unpack, ptr %struct_alloca, align 8, !dbg !1984
  %struct_alloca.repack60 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !1984
  store i64 %load_element26.unpack.unpack56, ptr %struct_alloca.repack60, align 8, !dbg !1984
  %struct_alloca.repack62 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !1984
  store i64 %load_element26.unpack.unpack58, ptr %struct_alloca.repack62, align 8, !dbg !1984
  %struct_field_gep29 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !1984
  %call.elt = extractvalue { i64, i64 } %call, 0, !dbg !1984
  store i64 %call.elt, ptr %struct_field_gep29, align 8, !dbg !1984
  %struct_field_gep29.repack64 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !1984
  %call.elt65 = extractvalue { i64, i64 } %call, 1, !dbg !1984
  store i64 %call.elt65, ptr %struct_field_gep29.repack64, align 8, !dbg !1984
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca30, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !1984
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca32, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca30, i64 40, i1 false), !dbg !1984
  %tag_id_ptr34 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca32, i64 0, i32 1, !dbg !1984
  store i8 1, ptr %tag_id_ptr34, align 8, !dbg !1984
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca32, i64 48, i1 false), !dbg !1984
  ret void, !dbg !1984
}

define internal fastcc void @Five_53_b9ee46417ee03e3b7a521bca8ecd1f011217aed1144f9af6d34990efa857(ptr %"150", %list.RocList %rule, ptr %0) !dbg !1986 {
entry:
  %tag_alloca = alloca { [1 x i8], i8 }, align 8, !dbg !1987
  %struct_field.unpack = load ptr, ptr %"150", align 8, !dbg !1987
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !1987
  %struct_field.elt2 = getelementptr inbounds %list.RocList, ptr %"150", i64 0, i32 1, !dbg !1987
  %struct_field.unpack3 = load i64, ptr %struct_field.elt2, align 8, !dbg !1987
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack3, 1, !dbg !1987
  %struct_field.elt4 = getelementptr inbounds %list.RocList, ptr %"150", i64 0, i32 2, !dbg !1987
  %struct_field.unpack5 = load i64, ptr %struct_field.elt4, align 8, !dbg !1987
  %struct_field6 = insertvalue %list.RocList %2, i64 %struct_field.unpack5, 2, !dbg !1987
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"150", i64 0, i32 1, !dbg !1987
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !1987
  %3 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !1987
  %struct_field1.elt7 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"150", i64 0, i32 1, i32 1, !dbg !1987
  %struct_field1.unpack8 = load i64, ptr %struct_field1.elt7, align 8, !dbg !1987
  %4 = insertvalue %list.RocList %3, i64 %struct_field1.unpack8, 1, !dbg !1987
  %struct_field1.elt9 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"150", i64 0, i32 1, i32 2, !dbg !1987
  %struct_field1.unpack10 = load i64, ptr %struct_field1.elt9, align 8, !dbg !1987
  %struct_field111 = insertvalue %list.RocList %4, i64 %struct_field1.unpack10, 2, !dbg !1987
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field6), !dbg !1987
  %call = tail call fastcc i1 @List_all_12a8ad799c7b34402483623f9b421f07775e1054bb6bfcf2ae122184609a(%list.RocList %struct_field111, %list.RocList %rule), !dbg !1987
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field111), !dbg !1987
  store i1 %call, ptr %tag_alloca, align 8, !dbg !1987
  %tag_id_ptr = getelementptr inbounds { [1 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1987
  store i8 1, ptr %tag_id_ptr, align 1, !dbg !1987
  %5 = load i16, ptr %tag_alloca, align 8, !dbg !1987
  store i16 %5, ptr %0, align 1, !dbg !1987
  ret void, !dbg !1987
}

define internal fastcc void @Task_38_de9272725995dfe27820e1ab4317eddb95d1f4a0c9c3bf59609e9c2d44531d9({} %"139", i32 %a, ptr %0) !dbg !1989 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !1990
  store i32 %a, ptr %tag_alloca, align 8, !dbg !1990
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !1990
  store i8 0, ptr %tag_id_ptr, align 4, !dbg !1990
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !1990
  store i64 %1, ptr %0, align 4, !dbg !1990
  ret void, !dbg !1990
}

define internal fastcc i64 @Num_toU64_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec(i128 %"#arg1") !dbg !1992 {
entry:
  %inc_cast = trunc i128 %"#arg1" to i64, !dbg !1993
  ret i64 %inc_cast, !dbg !1993
}

define internal fastcc i1 @Bool_true_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb() !dbg !1995 {
entry:
  ret i1 true, !dbg !1996
}

define internal fastcc void @Five_parse_948cbc893ad2e9e9db3382c9118cbc164b0518b3fcc801f46e0358a7a4c131a(ptr %cont, ptr %0) !dbg !1998 {
entry:
  %result_value1 = alloca { [9 x i64], i8 }, align 8
  %result_value = alloca { [9 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 2570 to ptr), ptr %const_str_store, align 8, !dbg !1999
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !1999
  store i64 0, ptr %const_str_store.repack2, align 8, !dbg !1999
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !1999
  store i64 -9079256848778919936, ptr %const_str_store.repack3, align 8, !dbg !1999
  call fastcc void @Str_splitFirst_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2(ptr %cont, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !1999
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !1999
  call fastcc void @Result_try_d9e2d7d318b97522751e8d862a897cd552d26040fa25d41678f9ac7b36cd7(ptr nonnull %result_value, {} zeroinitializer, ptr nonnull %result_value1), !dbg !1999
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value1, i64 80, i1 false), !dbg !1999
  ret void, !dbg !1999
}

define internal fastcc i64 @Dict_maxSize_aafde219d9d91ee7a575a5efa6c6154f3d42c85beb7780b41b4510548f4aaf() !dbg !2001 {
entry:
  %call = tail call fastcc i64 @Num_shiftLeftBy_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(i64 1, i8 32), !dbg !2002
  ret i64 %call, !dbg !2002
}

define internal fastcc i64 @Five_24_a4a483ebb43561411945778d8122531e5e9328de7183b6cc1472f5ba35d5757f(i64 %x) !dbg !2004 {
entry:
  ret i64 %x, !dbg !2005
}

define internal fastcc void @Dict_findHelper_8256d790c99390129cd6628d4d43bc44f55cfb83af722d8248666b192be24d65(%list.RocList %"371", i64 %"372", i32 %"373", %list.RocList %"374", i64 %"375", ptr %0) !dbg !2007 {
entry:
  %struct_alloca26 = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !2008
  %tag_alloca23 = alloca { [3 x i64], i8 }, align 8, !dbg !2008
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !2008
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !2008
  tail call fastcc void @"#Attr_#inc_5"(%list.RocList %"371", i64 1), !dbg !2008
  tail call fastcc void @"#Attr_#inc_7"(%list.RocList %"374", i64 1), !dbg !2008
  br label %joinpointcont, !dbg !2008

joinpointcont:                                    ; preds = %else_block22, %else_block13, %entry
  %joinpointarg1 = phi i64 [ %"372", %entry ], [ %call16, %else_block13 ], [ %call30, %else_block22 ], !dbg !2008
  %joinpointarg2 = phi i32 [ %"373", %entry ], [ %call17, %else_block13 ], [ %call31, %else_block22 ], !dbg !2008
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %"371", i64 %joinpointarg1), !dbg !2008
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !2008
  %call5 = tail call fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %joinpointarg2, i32 %struct_field_access_record_1), !dbg !2008
  br i1 %call5, label %then_block, label %else_block, !dbg !2008

then_block:                                       ; preds = %joinpointcont
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !2008
  %call6 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_0), !dbg !2008
  %call7 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %"374", i64 %call6), !dbg !2008
  %struct_field_access_record_08 = extractvalue { i64, %list.RocList } %call7, 0, !dbg !2008
  %call10 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field_access_record_08, i64 %"375"), !dbg !2008
  br i1 %call10, label %then_block12, label %else_block13, !dbg !2008

else_block:                                       ; preds = %joinpointcont
  %struct_field_access_record_118 = extractvalue { i32, i32 } %call, 1, !dbg !2008
  %call19 = tail call fastcc i1 @Num_isGt_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b(i32 %joinpointarg2, i32 %struct_field_access_record_118), !dbg !2008
  br i1 %call19, label %then_block21, label %else_block22, !dbg !2008

then_block12:                                     ; preds = %then_block
  %struct_field_access_record_19 = extractvalue { i64, %list.RocList } %call7, 1, !dbg !2008
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field_access_record_19, i64 1), !dbg !2008
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %"371"), !dbg !2008
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %"374"), !dbg !2008
  %struct_field_access_record_19.elt = extractvalue %list.RocList %struct_field_access_record_19, 0, !dbg !2008
  store ptr %struct_field_access_record_19.elt, ptr %tag_alloca, align 8, !dbg !2008
  %tag_alloca.repack32 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !2008
  %struct_field_access_record_19.elt33 = extractvalue %list.RocList %struct_field_access_record_19, 1, !dbg !2008
  store i64 %struct_field_access_record_19.elt33, ptr %tag_alloca.repack32, align 8, !dbg !2008
  %tag_alloca.repack34 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !2008
  %struct_field_access_record_19.elt35 = extractvalue %list.RocList %struct_field_access_record_19, 2, !dbg !2008
  store i64 %struct_field_access_record_19.elt35, ptr %tag_alloca.repack34, align 8, !dbg !2008
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2008
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2008
  store i64 %joinpointarg1, ptr %struct_alloca, align 8, !dbg !2008
  %struct_field_gep14 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2008
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep14, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !2008
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !2008
  ret void, !dbg !2008

else_block13:                                     ; preds = %then_block
  %call15 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"371"), !dbg !2008
  %call16 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg1, i64 %call15), !dbg !2008
  %call17 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %joinpointarg2), !dbg !2008
  br label %joinpointcont, !dbg !2008

then_block21:                                     ; preds = %else_block
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %"371"), !dbg !2008
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %"374"), !dbg !2008
  %tag_id_ptr25 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca23, i64 0, i32 1, !dbg !2008
  store i8 0, ptr %tag_id_ptr25, align 8, !dbg !2008
  store i64 %joinpointarg1, ptr %struct_alloca26, align 8, !dbg !2008
  %struct_field_gep28 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca26, i64 0, i32 1, !dbg !2008
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep28, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca23, i64 32, i1 false), !dbg !2008
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca26, i64 40, i1 false), !dbg !2008
  ret void, !dbg !2008

else_block22:                                     ; preds = %else_block
  %call29 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"371"), !dbg !2008
  %call30 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg1, i64 %call29), !dbg !2008
  %call31 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %joinpointarg2), !dbg !2008
  br label %joinpointcont, !dbg !2008
}

define internal fastcc { { {}, {} }, {} } @Parser_buildPrimitiveParser_dd6ee582294ef21ddfbf34ee1f32fb2fbc1e46a8978ff17f23e47debd1261({ { {}, {} }, {} } %fun) !dbg !2010 {
entry:
  ret { { {}, {} }, {} } %fun, !dbg !2011
}

define internal fastcc i64 @Dict_findManualUnrolls_e4a1eb19d38152fc193a183edc36566d275fa494bf9c69e26c29c318cc289d0() !dbg !2013 {
entry:
  ret i64 2, !dbg !2014
}

define internal fastcc {} @Parser_buildPrimitiveParser_d5b8bdabf937f1b324ab1a7fd2db2d1d7cbe728df69545a5a26587658d3e({} %fun) !dbg !2016 {
entry:
  ret {} %fun, !dbg !2017
}

define internal fastcc { i64, i64 } @Dict_wymum_7f1997f7fb10ed4c657c136e5122e9272dd2d211216c39a3c7723555eefc6(i64 %a, i64 %b) !dbg !2019 {
entry:
  %call = tail call fastcc i128 @Num_toU128_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(i64 %a), !dbg !2020
  %call1 = tail call fastcc i128 @Num_toU128_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(i64 %b), !dbg !2020
  %call2 = tail call fastcc i128 @Num_mulWrap_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9(i128 %call, i128 %call1), !dbg !2020
  %call3 = tail call fastcc i64 @Num_toU64_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec(i128 %call2), !dbg !2020
  %call4 = tail call fastcc i128 @Num_shiftRightZfBy_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9(i128 %call2, i8 64), !dbg !2020
  %call5 = tail call fastcc i64 @Num_toU64_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec(i128 %call4), !dbg !2020
  %insert_record_field = insertvalue { i64, i64 } zeroinitializer, i64 %call3, 0, !dbg !2020
  %insert_record_field6 = insertvalue { i64, i64 } %insert_record_field, i64 %call5, 1, !dbg !2020
  ret { i64, i64 } %insert_record_field6, !dbg !2020
}

define internal fastcc { {}, {} } @Parser_apply_fe8059764c3d3277792adee58d94327ddbfcdfb8819194d0a9963ace709cac({} %funParser, {} %valParser) !dbg !2022 {
entry:
  %insert_record_field = insertvalue { {}, {} } zeroinitializer, {} %funParser, 0, !dbg !2023
  %insert_record_field1 = insertvalue { {}, {} } %insert_record_field, {} %valParser, 1, !dbg !2023
  %call = tail call fastcc { {}, {} } @Parser_buildPrimitiveParser_bb464f7974473b223db683972315b55bb85ee4c998ccde2011e4f189572a27({ {}, {} } %insert_record_field1), !dbg !2023
  ret { {}, {} } %call, !dbg !2023
}

define internal fastcc { %str.RocStr, {} } @Stderr_line_14fdf5b3fdc309431c2b7140ab94179571c4afec1ebe5d643526dfbc8edb8(ptr %str) !dbg !2025 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @PlatformTasks_stderrLine_b13e441aa31a6e35575dd307f7cad1257deaa945c51f2cbe43d4fa91f764bf(ptr %str, ptr nonnull %result_value), !dbg !2026
  %call = call fastcc { %str.RocStr, {} } @Task_mapErr_6458453d595fdc9e5a87eea15f24738f1c7d3413915ef8aee1930d85e5631ee(ptr nonnull %result_value, {} zeroinitializer), !dbg !2026
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value), !dbg !2026
  ret { %str.RocStr, {} } %call, !dbg !2026
}

define internal fastcc void @Dict_removeBucket_7ceb2e607d153edd175217b82e8ded113c6e4df27e27777d9f9694c716aa427(ptr %"724", i64 %bucketIndex0, ptr %0) !dbg !2028 {
entry:
  %struct_alloca32 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !2029
  %struct_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !2029
  %struct_field.unpack = load ptr, ptr %"724", align 8, !dbg !2029
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !2029
  %struct_field.elt38 = getelementptr inbounds %list.RocList, ptr %"724", i64 0, i32 1, !dbg !2029
  %struct_field.unpack39 = load i64, ptr %struct_field.elt38, align 8, !dbg !2029
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack39, 1, !dbg !2029
  %struct_field.elt40 = getelementptr inbounds %list.RocList, ptr %"724", i64 0, i32 2, !dbg !2029
  %struct_field.unpack41 = load i64, ptr %struct_field.elt40, align 8, !dbg !2029
  %struct_field42 = insertvalue %list.RocList %2, i64 %struct_field.unpack41, 2, !dbg !2029
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"724", i64 0, i32 1, !dbg !2029
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !2029
  %3 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !2029
  %struct_field1.elt43 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"724", i64 0, i32 1, i32 1, !dbg !2029
  %struct_field1.unpack44 = load i64, ptr %struct_field1.elt43, align 8, !dbg !2029
  %4 = insertvalue %list.RocList %3, i64 %struct_field1.unpack44, 1, !dbg !2029
  %struct_field1.elt45 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"724", i64 0, i32 1, i32 2, !dbg !2029
  %struct_field1.unpack46 = load i64, ptr %struct_field1.elt45, align 8, !dbg !2029
  %struct_field147 = insertvalue %list.RocList %4, i64 %struct_field1.unpack46, 2, !dbg !2029
  %struct_field_access_record_2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"724", i64 0, i32 2, !dbg !2029
  %struct_field2 = load i64, ptr %struct_field_access_record_2, align 8, !dbg !2029
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"724", i64 0, i32 3, !dbg !2029
  %struct_field3 = load float, ptr %struct_field_access_record_3, align 4, !dbg !2029
  %struct_field_access_record_4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"724", i64 0, i32 4, !dbg !2029
  %struct_field4 = load i8, ptr %struct_field_access_record_4, align 1, !dbg !2029
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %struct_field42, i64 %bucketIndex0), !dbg !2029
  %struct_field_access_record_05 = extractvalue { i32, i32 } %call, 0, !dbg !2029
  %call6 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_05), !dbg !2029
  %call7 = tail call fastcc { %list.RocList, i64 } @Dict_removeBucketHelper_6e2f5c347617f02c84c4ee1199b6f064c2d91a5297c3fa525844f328c49949(%list.RocList %struct_field42, i64 %bucketIndex0), !dbg !2029
  %struct_field_access_record_08 = extractvalue { %list.RocList, i64 } %call7, 0, !dbg !2029
  %struct_field_access_record_19 = extractvalue { %list.RocList, i64 } %call7, 1, !dbg !2029
  %call10 = tail call fastcc { i32, i32 } @Dict_emptyBucket_229c75d6969a8a8a593eb2c44e915f34577963371a1cc7e544a8418a694a1e2(), !dbg !2029
  %call11 = tail call fastcc %list.RocList @List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1(%list.RocList %struct_field_access_record_08, i64 %struct_field_access_record_19, { i32, i32 } %call10), !dbg !2029
  %call12 = tail call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %struct_field147), !dbg !2029
  %call13 = tail call fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %call12, i64 1), !dbg !2029
  %call14 = tail call fastcc i1 @Bool_isNotEq_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34(i64 %call6, i64 %call13), !dbg !2029
  br i1 %call14, label %then_block, label %else_block, !dbg !2029

then_block:                                       ; preds = %entry
  %call15 = tail call fastcc %list.RocList @List_swap_dbefccae6de790f8e3497ad3c6c1c58a12a744edb0d65ec1ec4ade8b1151a59b(%list.RocList %struct_field147, i64 %call6, i64 %call13), !dbg !2029
  %call16 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %call15, i64 %call6), !dbg !2029
  %struct_field_access_record_017 = extractvalue { i64, %list.RocList } %call16, 0, !dbg !2029
  %call18 = tail call fastcc i64 @Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c(i64 %struct_field_access_record_017), !dbg !2029
  %call19 = tail call fastcc i64 @Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0(i64 %call18, i8 %struct_field4), !dbg !2029
  %call20 = tail call fastcc i32 @Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(i64 %call13), !dbg !2029
  %call21 = tail call fastcc i64 @Dict_scanForIndex_dbbb614026929029a924a622e5a645206e5e1277bd8c25cb7b78527df1a8c(%list.RocList %call11, i64 %call19, i32 %call20), !dbg !2029
  %call22 = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %call11, i64 %call21), !dbg !2029
  %struct_field_access_record_123 = extractvalue { i32, i32 } %call22, 1, !dbg !2029
  %insert_record_field = insertvalue { i32, i32 } zeroinitializer, i32 %struct_field_access_record_05, 0, !dbg !2029
  %insert_record_field24 = insertvalue { i32, i32 } %insert_record_field, i32 %struct_field_access_record_123, 1, !dbg !2029
  %call25 = tail call fastcc %list.RocList @List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1(%list.RocList %call11, i64 %call21, { i32, i32 } %insert_record_field24), !dbg !2029
  %call26 = tail call fastcc %list.RocList @List_dropLast_ab6bf482529beb271842e34a3922217532b2f57565d72aea510e9edbdcef6(%list.RocList %call15, i64 1), !dbg !2029
  %call25.elt = extractvalue %list.RocList %call25, 0, !dbg !2029
  store ptr %call25.elt, ptr %struct_alloca, align 8, !dbg !2029
  %struct_alloca.repack56 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !2029
  %call25.elt57 = extractvalue %list.RocList %call25, 1, !dbg !2029
  store i64 %call25.elt57, ptr %struct_alloca.repack56, align 8, !dbg !2029
  %struct_alloca.repack58 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !2029
  %call25.elt59 = extractvalue %list.RocList %call25, 2, !dbg !2029
  store i64 %call25.elt59, ptr %struct_alloca.repack58, align 8, !dbg !2029
  %struct_field_gep27 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, !dbg !2029
  %call26.elt = extractvalue %list.RocList %call26, 0, !dbg !2029
  store ptr %call26.elt, ptr %struct_field_gep27, align 8, !dbg !2029
  %struct_field_gep27.repack60 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !2029
  %call26.elt61 = extractvalue %list.RocList %call26, 1, !dbg !2029
  store i64 %call26.elt61, ptr %struct_field_gep27.repack60, align 8, !dbg !2029
  %struct_field_gep27.repack62 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !2029
  %call26.elt63 = extractvalue %list.RocList %call26, 2, !dbg !2029
  store i64 %call26.elt63, ptr %struct_field_gep27.repack62, align 8, !dbg !2029
  %struct_field_gep28 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 2, !dbg !2029
  store i64 %struct_field2, ptr %struct_field_gep28, align 8, !dbg !2029
  %struct_field_gep29 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 3, !dbg !2029
  store float %struct_field3, ptr %struct_field_gep29, align 8, !dbg !2029
  %struct_field_gep30 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 4, !dbg !2029
  store i8 %struct_field4, ptr %struct_field_gep30, align 4, !dbg !2029
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca, i64 64, i1 false), !dbg !2029
  ret void, !dbg !2029

else_block:                                       ; preds = %entry
  %call31 = tail call fastcc %list.RocList @List_dropLast_ab6bf482529beb271842e34a3922217532b2f57565d72aea510e9edbdcef6(%list.RocList %struct_field147, i64 1), !dbg !2029
  %call11.elt = extractvalue %list.RocList %call11, 0, !dbg !2029
  store ptr %call11.elt, ptr %struct_alloca32, align 8, !dbg !2029
  %struct_alloca32.repack48 = getelementptr inbounds %list.RocList, ptr %struct_alloca32, i64 0, i32 1, !dbg !2029
  %call11.elt49 = extractvalue %list.RocList %call11, 1, !dbg !2029
  store i64 %call11.elt49, ptr %struct_alloca32.repack48, align 8, !dbg !2029
  %struct_alloca32.repack50 = getelementptr inbounds %list.RocList, ptr %struct_alloca32, i64 0, i32 2, !dbg !2029
  %call11.elt51 = extractvalue %list.RocList %call11, 2, !dbg !2029
  store i64 %call11.elt51, ptr %struct_alloca32.repack50, align 8, !dbg !2029
  %struct_field_gep34 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca32, i64 0, i32 1, !dbg !2029
  %call31.elt = extractvalue %list.RocList %call31, 0, !dbg !2029
  store ptr %call31.elt, ptr %struct_field_gep34, align 8, !dbg !2029
  %struct_field_gep34.repack52 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca32, i64 0, i32 1, i32 1, !dbg !2029
  %call31.elt53 = extractvalue %list.RocList %call31, 1, !dbg !2029
  store i64 %call31.elt53, ptr %struct_field_gep34.repack52, align 8, !dbg !2029
  %struct_field_gep34.repack54 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca32, i64 0, i32 1, i32 2, !dbg !2029
  %call31.elt55 = extractvalue %list.RocList %call31, 2, !dbg !2029
  store i64 %call31.elt55, ptr %struct_field_gep34.repack54, align 8, !dbg !2029
  %struct_field_gep35 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca32, i64 0, i32 2, !dbg !2029
  store i64 %struct_field2, ptr %struct_field_gep35, align 8, !dbg !2029
  %struct_field_gep36 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca32, i64 0, i32 3, !dbg !2029
  store float %struct_field3, ptr %struct_field_gep36, align 8, !dbg !2029
  %struct_field_gep37 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca32, i64 0, i32 4, !dbg !2029
  store i8 %struct_field4, ptr %struct_field_gep37, align 4, !dbg !2029
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca32, i64 64, i1 false), !dbg !2029
  ret void, !dbg !2029
}

define internal fastcc void @Parser_buildPrimitiveParser_f358c4a3de19e7c0fa39cb3c4512dac774156297de23d2195f2c8666513f74f5(ptr %fun, ptr %0) !dbg !2031 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %fun, i64 80, i1 false), !dbg !2032
  ret void, !dbg !2032
}

define internal fastcc %list.RocList @List_repeatHelp_4d841bd57979ccceddece07dcf2dbc9edd3191f365637aa1e5efefa18c6c7ca3({ i32, i32 } %"376", i64 %"377", %list.RocList %"378") !dbg !2034 {
entry:
  br label %joinpointcont, !dbg !2035

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg1 = phi i64 [ %"377", %entry ], [ %call3, %then_block ], !dbg !2035
  %joinpointarg2 = phi %list.RocList [ %"378", %entry ], [ %call4, %then_block ], !dbg !2035
  %call = tail call fastcc i1 @Num_isGt_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc(i64 %joinpointarg1, i64 0), !dbg !2035
  br i1 %call, label %then_block, label %else_block, !dbg !2035

then_block:                                       ; preds = %joinpointcont
  %call3 = tail call fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %joinpointarg1, i64 1), !dbg !2035
  %call4 = tail call fastcc %list.RocList @List_appendUnsafe_ea724491503a37367f3396489f19ddb4ed26c1b122d1bb85553bb555a0a4d(%list.RocList %joinpointarg2, { i32, i32 } %"376"), !dbg !2035
  br label %joinpointcont, !dbg !2035

else_block:                                       ; preds = %joinpointcont
  ret %list.RocList %joinpointarg2, !dbg !2035
}

define internal fastcc i64 @Num_add_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47(i64 %"#arg1", i64 %"#arg2") !dbg !2037 {
entry:
  %call = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %"#arg1", i64 %"#arg2"), !dbg !2038
  %has_overflowed = extractvalue { i64, i1 } %call, 1, !dbg !2038
  br i1 %has_overflowed, label %throw_block, label %then_block, !dbg !2038

then_block:                                       ; preds = %entry
  %operation_result = extractvalue { i64, i1 } %call, 0, !dbg !2038
  ret i64 %operation_result, !dbg !2038

throw_block:                                      ; preds = %entry
  tail call fastcc void @throw_on_overflow(), !dbg !2038
  unreachable, !dbg !2038
}

define internal fastcc void @Task_67_fb7c2192380c0c9e4a26882f3783715efdcc3612b1649776eef2a3de1c92b6({} %"171", { %str.RocStr, {} } %"#arg_closure", ptr %0) !dbg !2040 {
entry:
  %tag_alloca7 = alloca { [9 x i64], i8 }, align 8, !dbg !2041
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !2041
  %result_value6 = alloca { [8 x i64], i8 }, align 8, !dbg !2041
  %load_element5 = alloca %str.RocStr, align 8, !dbg !2041
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !2041
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !2041
  %struct_field = alloca %str.RocStr, align 8, !dbg !2041
  %struct_field_access_record_0 = extractvalue { %str.RocStr, {} } %"#arg_closure", 0, !dbg !2041
  %struct_field_access_record_0.elt = extractvalue %str.RocStr %struct_field_access_record_0, 0, !dbg !2041
  store ptr %struct_field_access_record_0.elt, ptr %struct_field, align 8, !dbg !2041
  %struct_field.repack10 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 1, !dbg !2041
  %struct_field_access_record_0.elt11 = extractvalue %str.RocStr %struct_field_access_record_0, 1, !dbg !2041
  store i64 %struct_field_access_record_0.elt11, ptr %struct_field.repack10, align 8, !dbg !2041
  %struct_field.repack12 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 2, !dbg !2041
  %struct_field_access_record_0.elt13 = extractvalue %str.RocStr %struct_field_access_record_0, 2, !dbg !2041
  store i64 %struct_field_access_record_0.elt13, ptr %struct_field.repack12, align 8, !dbg !2041
  call fastcc void @PlatformTasks_task_closure_stdoutLine_7235554a6ca1ba5277e58026ca9a925c605ca3b7e9655e55441a77bd6b3fbf({} zeroinitializer, ptr nonnull %struct_field, ptr nonnull %result_value), !dbg !2041
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !2041
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !2041
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !2041
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2041

then_block:                                       ; preds = %entry
  %tag_id_ptr2 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2041
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !2041
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !2041
  ret void, !dbg !2041

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2041
  call fastcc void @Stdout_handleErr_7b73be30696c7fe3ed242ca4629f76c2f696011d9271def91eeffdd89e9134d(ptr nonnull %load_element5, ptr nonnull %result_value6), !dbg !2041
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element5), !dbg !2041
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %result_value6, i64 72, i1 false), !dbg !2041
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca7, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !2041
  %tag_id_ptr9 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca7, i64 0, i32 1, !dbg !2041
  store i8 0, ptr %tag_id_ptr9, align 8, !dbg !2041
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca7, i64 80, i1 false), !dbg !2041
  ret void, !dbg !2041
}

define internal fastcc void @List_walkHelp_c162bfc0bd74c841e2898960cc4e5160ab1032997985dd3fe7da33cf844631d(%list.RocList %"381", ptr %"382", {} %"383", i64 %"384", i64 %"385", ptr %0) !dbg !2043 {
entry:
  %tmp_output_for_jmp6 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %joinpoint_arg_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  tail call fastcc void @"#Attr_#inc_2"(%list.RocList %"381", i64 1), !dbg !2044
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(64) %"382", i64 64, i1 false), !dbg !2044
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, i64 64, i1 false), !dbg !2044
  br label %joinpointcont, !dbg !2044

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg2 = phi i64 [ %"384", %entry ], [ %call5, %then_block ], !dbg !2044
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"385"), !dbg !2044
  br i1 %call, label %then_block, label %else_block, !dbg !2044

then_block:                                       ; preds = %joinpointcont
  %call4 = call fastcc { i64, i64 } @List_getUnsafe_f752fd971dee73f4bef39e126f15a0a84437112755ca589db8702463ce739a(%list.RocList %"381", i64 %joinpointarg2), !dbg !2044
  call fastcc void @Five_38_a1f1c2407512f3220f6212b7b75e099c971d128b656c18ded971afd225c34c(ptr nonnull %joinpoint_arg_alloca, { i64, i64 } %call4, ptr nonnull %result_value), !dbg !2044
  %call5 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !2044
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp6, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !2044
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp6, i64 64, i1 false), !dbg !2044
  br label %joinpointcont, !dbg !2044

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_2"(%list.RocList %"381"), !dbg !2044
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, i64 64, i1 false), !dbg !2044
  ret void, !dbg !2044
}

define internal fastcc i32 @Num_subWrap_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f(i32 %"#arg1", i32 %"#arg2") !dbg !2046 {
entry:
  %sub_int = sub i32 %"#arg1", %"#arg2", !dbg !2047
  ret i32 %sub_int, !dbg !2047
}

define internal fastcc i128 @Num_shiftRightZfBy_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9(i128 %"#arg1", i8 %"#arg2") !dbg !2049 {
entry:
  %cast_for_shift1 = zext i8 %"#arg2" to i128, !dbg !2050
  %int_shift_right_zf = lshr i128 %"#arg1", %cast_for_shift1, !dbg !2050
  ret i128 %int_shift_right_zf, !dbg !2050
}

define internal fastcc void @Inspect_apply_5512121a7725d673ec2434eca2a3826afdb8ac0e342375ef02fbd7eef1f863d(ptr %"303", ptr %fmt, ptr %0) !dbg !2052 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_250_864dab640f4e5815dcc2e864a26afb3cfd96d7f7e7654fb58cfd09f8eb263(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !2053
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2053
  ret void, !dbg !2053
}

define internal fastcc void @Parser_buildPrimitiveParser_95d7497c4315cb52c9f61cf3c56d444562a459feea2abf1096ed68d018d867e(ptr %fun, ptr %0) !dbg !2055 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %fun, i64 80, i1 false), !dbg !2056
  ret void, !dbg !2056
}

define internal fastcc i32 @Task_err_16c9acb11420bb4864958cb65deec56be7d76275852725d2b6cfa6b292a31ee8(i32 %a) !dbg !2058 {
entry:
  ret i32 %a, !dbg !2059
}

define internal fastcc void @List_walk_1971ed175c5339d8a493ee2a719f3ca8f50fbcc2a26feaf7b54a27898e3f(%list.RocList %list, ptr %init, {} %func, ptr %0) !dbg !2061 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !2062
  %call = tail call fastcc i64 @List_len_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2(%list.RocList %list), !dbg !2062
  call fastcc void @List_walkHelp_9c59e7328dd8975131b4ecbb517752a19f98ddf8f39456448f3da8e957ece54(%list.RocList %list, ptr %init, {} %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !2062
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2062
  ret void, !dbg !2062
}

define internal fastcc void @_mainForHost_8ea48f352d7289114fe202e56461de528fa632d8a6cda9163cba5554b08a8b(ptr %0) !dbg !2064 {
entry:
  %result_value1 = alloca { { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, align 8
  %result_value = alloca { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, align 8
  call fastcc void @"#UserApp_main_bc91ecf66cd9fcce2ace448deb6a9624e95e6179551ecbb08a5ce98a6e69a2"(ptr nonnull %result_value), !dbg !2065
  call fastcc void @Task_attempt_5a5619cf790931c7192376a30476b7cf4ecf8b21be6e496ea8a90a18fdb354(ptr nonnull %result_value, {} zeroinitializer, ptr nonnull %result_value1), !dbg !2065
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %result_value1, i64 88, i1 false), !dbg !2065
  ret void, !dbg !2065
}

define void @roc__mainForHost_1_exposed_generic(ptr %0) !dbg !2067 {
entry:
  %result_value = alloca { { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, align 8
  call fastcc void @_mainForHost_8ea48f352d7289114fe202e56461de528fa632d8a6cda9163cba5554b08a8b(ptr %result_value), !dbg !2068
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %result_value, i64 ptrtoint (ptr getelementptr ({ { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, ptr null, i32 1) to i64), i1 false), !dbg !2068
  ret void, !dbg !2068
}

define void @roc__mainForHost_1_exposed(ptr sret({ { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }) %0) !dbg !2070 {
entry:
  %result_value = alloca { { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, align 8
  call fastcc void @_mainForHost_8ea48f352d7289114fe202e56461de528fa632d8a6cda9163cba5554b08a8b(ptr %result_value), !dbg !2071
  %load_roc_result = load { { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, ptr %result_value, align 8, !dbg !2071
  store { { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} } %load_roc_result, ptr %0, align 8, !dbg !2071
  ret void, !dbg !2071
}

define i64 @roc__mainForHost_1_exposed_size() !dbg !2073 {
entry:
  ret i64 ptrtoint (ptr getelementptr ({ { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, ptr null, i32 1) to i64), !dbg !2074
}

define internal fastcc void @Parser_153_b48ea28ed2a1db4f94b775904dbb14352478e946b403cf7699dfabdbbc69(%list.RocList %input, ptr %parser, ptr %0) !dbg !2076 {
entry:
  %result_value = alloca { [6 x i64], i8 }, align 8
  call fastcc void @Parser_manyImpl_c3c6c854fc0febf57cc2ebf8e35d07fdbe449e8d69722afe47df74bd87d571(ptr %parser, %list.RocList zeroinitializer, %list.RocList %input, ptr nonnull %result_value), !dbg !2077
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !2077
  ret void, !dbg !2077
}

define internal fastcc void @Parser_parsePartial_d99c5b857e1e627fe47b03e2843c56aca18cc3e74317b1d10963dd817a09223({} %"246", %list.RocList %input, ptr %0) !dbg !2079 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Parser_52_4cce276f448863cf59555de4812c18dd63ac716c8d68faaa3765a8ad5f4d5a34(%list.RocList %input, {} %"246", ptr nonnull %result_value), !dbg !2080
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !2080
  ret void, !dbg !2080
}

define internal fastcc void @Parser_many_4c8db17447f5ee4913514dace945a8e11b844b4a7884df53b6c87efb365543a(ptr %parser, ptr %0) !dbg !2082 {
entry:
  %result_value = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8
  call fastcc void @Parser_buildPrimitiveParser_95d7497c4315cb52c9f61cf3c56d444562a459feea2abf1096ed68d018d867e(ptr %parser, ptr nonnull %result_value), !dbg !2083
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !2083
  ret void, !dbg !2083
}

define internal fastcc void @Inspect_206_74d4d8669aea9ec1d19e8f3c791dcea19b8424ea6a5e4fbb108785fcac76377c(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !2085 {
entry:
  %result_value8 = alloca %str.RocStr, align 8, !dbg !2086
  %const_str_store7 = alloca %str.RocStr, align 8, !dbg !2086
  %result_value6 = alloca %str.RocStr, align 8, !dbg !2086
  %result_value5 = alloca %str.RocStr, align 8, !dbg !2086
  %result_value = alloca %str.RocStr, align 8, !dbg !2086
  %const_str_store = alloca %str.RocStr, align 8, !dbg !2086
  %load_element4 = alloca %str.RocStr, align 8, !dbg !2086
  %get_opaque_data_ptr1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !2086
  %load_element.unpack = load ptr, ptr %get_opaque_data_ptr1, align 8, !dbg !2086
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !2086
  %load_element.elt9 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !2086
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !2086
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack10, 1, !dbg !2086
  %load_element.elt11 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !2086
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !2086
  %load_element13 = insertvalue %list.RocList %2, i64 %load_element.unpack12, 2, !dbg !2086
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !2086
  store ptr inttoptr (i64 40 to ptr), ptr %const_str_store, align 8, !dbg !2086
  %const_str_store.repack14 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2086
  store i64 0, ptr %const_str_store.repack14, align 8, !dbg !2086
  %const_str_store.repack15 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2086
  store i64 -9151314442816847872, ptr %const_str_store.repack15, align 8, !dbg !2086
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !2086
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !2086
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value, ptr nonnull %load_element4, ptr nonnull %result_value5), !dbg !2086
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element4), !dbg !2086
  call fastcc void @Inspect_208_ff221ac7ca39f9755b47cf296610e253e715f06b6f89d9ba74e07999c9221(ptr nonnull %result_value5, %list.RocList %load_element13, ptr nonnull %result_value6), !dbg !2086
  call fastcc void @"#Attr_#dec_26"(%list.RocList %load_element13), !dbg !2086
  store ptr inttoptr (i64 41 to ptr), ptr %const_str_store7, align 8, !dbg !2086
  %const_str_store7.repack16 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 1, !dbg !2086
  store i64 0, ptr %const_str_store7.repack16, align 8, !dbg !2086
  %const_str_store7.repack17 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 2, !dbg !2086
  store i64 -9151314442816847872, ptr %const_str_store7.repack17, align 8, !dbg !2086
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value6, ptr nonnull %const_str_store7, ptr nonnull %result_value8), !dbg !2086
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store7), !dbg !2086
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !2086
  ret void, !dbg !2086
}

define internal fastcc void @Path_fromStr_e45cf9a3784986d64cd036e55da6ecf25b91edcd97641716b0deb67be819c15d(ptr %str, ptr %0) !dbg !2088 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !2089
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !2089
  tail call fastcc void @"#Attr_#inc_13"(ptr %str, i64 1), !dbg !2089
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %str, align 8, !dbg !2089
  %load_tag_to_put_in_struct.elt1 = getelementptr inbounds %str.RocStr, ptr %str, i64 0, i32 1, !dbg !2089
  %load_tag_to_put_in_struct.unpack2 = load i64, ptr %load_tag_to_put_in_struct.elt1, align 8, !dbg !2089
  %load_tag_to_put_in_struct.elt3 = getelementptr inbounds %str.RocStr, ptr %str, i64 0, i32 2, !dbg !2089
  %load_tag_to_put_in_struct.unpack4 = load i64, ptr %load_tag_to_put_in_struct.elt3, align 8, !dbg !2089
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !2089
  %tag_alloca.repack6 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !2089
  store i64 %load_tag_to_put_in_struct.unpack2, ptr %tag_alloca.repack6, align 8, !dbg !2089
  %tag_alloca.repack8 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !2089
  store i64 %load_tag_to_put_in_struct.unpack4, ptr %tag_alloca.repack8, align 8, !dbg !2089
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2089
  store i8 2, ptr %tag_id_ptr, align 8, !dbg !2089
  %call = tail call fastcc {} @InternalPath_wrap_8262eb8f2fda1d3e94add0fe7ca5b36fa0ff90c97589de5669fc657af690ed(), !dbg !2089
  call fastcc void @InternalPath_26_25d58849757a586446e327bd270f25c98f41c5eaaa541b53178bdcd7d21bb9(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !2089
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !2089
  ret void, !dbg !2089
}

define internal fastcc void @Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c(ptr %name, %list.RocList %fields, ptr %0) !dbg !2091 {
entry:
  %result_value5 = alloca { [6 x i64], i8 }, align 8, !dbg !2092
  %tag_alloca2 = alloca { [6 x i64], i8 }, align 8, !dbg !2092
  %struct_alloca = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2092
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !2092
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !2092
  %call = tail call fastcc i1 @List_isEmpty_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181(%list.RocList %fields), !dbg !2092
  br i1 %call, label %then_block, label %else_block, !dbg !2092

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !2092
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %name, align 8, !dbg !2092
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 1, !dbg !2092
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !2092
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 2, !dbg !2092
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !2092
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !2092
  %tag_alloca.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !2092
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca.repack15, align 8, !dbg !2092
  %tag_alloca.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !2092
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca.repack17, align 8, !dbg !2092
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2092
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !2092
  call fastcc void @Inspect_custom_f54bf42ab68abdbc6cec3fcfe3fd2589687a3397b6fa7b5f54277bf93e522663(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !2092
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !2092
  ret void, !dbg !2092

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_38"(%list.RocList %fields, i64 1), !dbg !2092
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !2092
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %name, i64 24, i1 false), !dbg !2092
  %struct_field_gep1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !2092
  %fields.elt = extractvalue %list.RocList %fields, 0, !dbg !2092
  store ptr %fields.elt, ptr %struct_field_gep1, align 8, !dbg !2092
  %struct_field_gep1.repack6 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !2092
  %fields.elt7 = extractvalue %list.RocList %fields, 1, !dbg !2092
  store i64 %fields.elt7, ptr %struct_field_gep1.repack6, align 8, !dbg !2092
  %struct_field_gep1.repack8 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !2092
  %fields.elt9 = extractvalue %list.RocList %fields, 2, !dbg !2092
  store i64 %fields.elt9, ptr %struct_field_gep1.repack8, align 8, !dbg !2092
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !2092
  %tag_id_ptr4 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca2, i64 0, i32 1, !dbg !2092
  store i8 1, ptr %tag_id_ptr4, align 8, !dbg !2092
  call fastcc void @Inspect_custom_f54bf42ab68abdbc6cec3fcfe3fd2589687a3397b6fa7b5f54277bf93e522663(ptr nonnull %tag_alloca2, ptr nonnull %result_value5), !dbg !2092
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value5, i64 56, i1 false), !dbg !2092
  ret void, !dbg !2092
}

define internal fastcc void @Parser_parsePartial_958eceff2afa82341097489757d62cb36e8ffccfc62ad546b1a925d35c25(ptr %"246", %list.RocList %input, ptr %0) !dbg !2094 {
entry:
  %result_value = alloca { [5 x i64], i8 }, align 8
  call fastcc void @Parser_183_70af681fdccad07396627fdeeca8661cb958bb2b9c24b8d15dd47fc87a17(%list.RocList %input, ptr %"246", ptr nonnull %result_value), !dbg !2095
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !2095
  ret void, !dbg !2095
}

define internal fastcc void @Inspect_custom_f54bf42ab68abdbc6cec3fcfe3fd2589687a3397b6fa7b5f54277bf93e522663(ptr %fn, ptr %0) !dbg !2097 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %fn, i64 56, i1 false), !dbg !2098
  ret void, !dbg !2098
}

define internal fastcc %list.RocList @List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1(%list.RocList %list, i64 %index, { i32, i32 } %value) !dbg !2100 {
entry:
  %call = tail call fastcc { %list.RocList, { i32, i32 } } @List_replace_d0954aeb42c3a999750fa5b4068c6679ed2537c3257fc7e6c4e91bdc4133ae0(%list.RocList %list, i64 %index, { i32, i32 } %value), !dbg !2101
  %struct_field_access_record_0 = extractvalue { %list.RocList, { i32, i32 } } %call, 0, !dbg !2101
  ret %list.RocList %struct_field_access_record_0, !dbg !2101
}

define internal fastcc i128 @Num_mulWrap_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9(i128 %"#arg1", i128 %"#arg2") !dbg !2103 {
entry:
  %mul_int = mul i128 %"#arg1", %"#arg2", !dbg !2104
  ret i128 %mul_int, !dbg !2104
}

define internal fastcc %list.RocList @String_utf8_cda5515bdfb774a8a73a1987c442daa5c0626be61cb25c91fd79ef75941318bb(%list.RocList %expectedString) !dbg !2106 {
entry:
  %call = tail call fastcc %list.RocList @Parser_buildPrimitiveParser_df22f5cdce5189b46d93c2ffbbc44a1ef23ee85518e8bbd1038d0adb9c1a782(%list.RocList %expectedString), !dbg !2107
  ret %list.RocList %call, !dbg !2107
}

define internal fastcc void @Task_67_ca9484d16885615abec85a8bbeed1aba2dde9d4a1e48c95ddbf53ade4ab565({} %"171", ptr %"#arg_closure", ptr %0) !dbg !2109 {
entry:
  %tag_alloca8 = alloca { [9 x i64], i8 }, align 8, !dbg !2110
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !2110
  %result_value7 = alloca { [8 x i64], i8 }, align 8, !dbg !2110
  %load_element6 = alloca %str.RocStr, align 8, !dbg !2110
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !2110
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !2110
  %struct_field = alloca { [3 x i64], i8 }, align 8, !dbg !2110
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !2110
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_1, i64 32, i1 false), !dbg !2110
  %struct_field1.unpack = load ptr, ptr %"#arg_closure", align 8, !dbg !2110
  %1 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !2110
  %struct_field1.elt11 = getelementptr inbounds %list.RocList, ptr %"#arg_closure", i64 0, i32 1, !dbg !2110
  %struct_field1.unpack12 = load i64, ptr %struct_field1.elt11, align 8, !dbg !2110
  %2 = insertvalue %list.RocList %1, i64 %struct_field1.unpack12, 1, !dbg !2110
  %struct_field1.elt13 = getelementptr inbounds %list.RocList, ptr %"#arg_closure", i64 0, i32 2, !dbg !2110
  %struct_field1.unpack14 = load i64, ptr %struct_field1.elt13, align 8, !dbg !2110
  %struct_field115 = insertvalue %list.RocList %2, i64 %struct_field1.unpack14, 2, !dbg !2110
  call fastcc void @PlatformTasks_task_closure_fileReadBytes_cb649ec1a6b194d7045c81b285060bfd3e5172d78e4f6bdab3db7dc92110({} zeroinitializer, %list.RocList %struct_field115, ptr nonnull %result_value), !dbg !2110
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !2110
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !2110
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !2110
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2110

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_11"(ptr nonnull %struct_field), !dbg !2110
  %load_element.unpack = load ptr, ptr %result_value, align 8, !dbg !2110
  %load_element.elt16 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !2110
  %load_element.unpack17 = load i64, ptr %load_element.elt16, align 8, !dbg !2110
  %load_element.elt18 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !2110
  %load_element.unpack19 = load i64, ptr %load_element.elt18, align 8, !dbg !2110
  store ptr %load_element.unpack, ptr %tag_alloca, align 8, !dbg !2110
  %tag_alloca.repack21 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !2110
  store i64 %load_element.unpack17, ptr %tag_alloca.repack21, align 8, !dbg !2110
  %tag_alloca.repack23 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !2110
  store i64 %load_element.unpack19, ptr %tag_alloca.repack23, align 8, !dbg !2110
  %tag_id_ptr3 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2110
  store i8 1, ptr %tag_id_ptr3, align 8, !dbg !2110
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !2110
  ret void, !dbg !2110

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element6, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2110
  call fastcc void @Path_100_3653439360ef4d7bdac398b2927d68d6a6f82eb1a2bafbe2edf7ac6227f150(ptr nonnull %load_element6, ptr nonnull %struct_field, ptr nonnull %result_value7), !dbg !2110
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element6), !dbg !2110
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %result_value7, i64 72, i1 false), !dbg !2110
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca8, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !2110
  %tag_id_ptr10 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !2110
  store i8 0, ptr %tag_id_ptr10, align 8, !dbg !2110
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca8, i64 80, i1 false), !dbg !2110
  ret void, !dbg !2110
}

define internal fastcc %list.RocList @List_set_13b85edde3cd334a6265af1614664111ffe13ba3b2be97d0f8e38d9c799cb7(%list.RocList %list, i64 %index, { i64, %list.RocList } %value) !dbg !2112 {
entry:
  %result_value = alloca { %list.RocList, { i64, %list.RocList } }, align 8
  call fastcc void @List_replace_6c6ac529604932be9f613389ac656fb39037eb79cbe1d537d9bdd99c2563108d(%list.RocList %list, i64 %index, { i64, %list.RocList } %value, ptr nonnull %result_value), !dbg !2113
  %struct_field.unpack = load ptr, ptr %result_value, align 8, !dbg !2113
  %0 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !2113
  %struct_field.elt2 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !2113
  %struct_field.unpack3 = load i64, ptr %struct_field.elt2, align 8, !dbg !2113
  %1 = insertvalue %list.RocList %0, i64 %struct_field.unpack3, 1, !dbg !2113
  %struct_field.elt4 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !2113
  %struct_field.unpack5 = load i64, ptr %struct_field.elt4, align 8, !dbg !2113
  %struct_field6 = insertvalue %list.RocList %1, i64 %struct_field.unpack5, 2, !dbg !2113
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %result_value, i64 0, i32 1, !dbg !2113
  %struct_field1.unpack = load i64, ptr %struct_field_access_record_1, align 8, !dbg !2113
  %2 = insertvalue { i64, %list.RocList } poison, i64 %struct_field1.unpack, 0, !dbg !2113
  %struct_field1.elt7 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %result_value, i64 0, i32 1, i32 1, !dbg !2113
  %struct_field1.unpack8.unpack = load ptr, ptr %struct_field1.elt7, align 8, !dbg !2113
  %3 = insertvalue %list.RocList poison, ptr %struct_field1.unpack8.unpack, 0, !dbg !2113
  %struct_field1.unpack8.elt10 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %result_value, i64 0, i32 1, i32 1, i32 1, !dbg !2113
  %struct_field1.unpack8.unpack11 = load i64, ptr %struct_field1.unpack8.elt10, align 8, !dbg !2113
  %4 = insertvalue %list.RocList %3, i64 %struct_field1.unpack8.unpack11, 1, !dbg !2113
  %struct_field1.unpack8.elt12 = getelementptr inbounds { %list.RocList, { i64, %list.RocList } }, ptr %result_value, i64 0, i32 1, i32 1, i32 2, !dbg !2113
  %struct_field1.unpack8.unpack13 = load i64, ptr %struct_field1.unpack8.elt12, align 8, !dbg !2113
  %struct_field1.unpack814 = insertvalue %list.RocList %4, i64 %struct_field1.unpack8.unpack13, 2, !dbg !2113
  %struct_field19 = insertvalue { i64, %list.RocList } %2, %list.RocList %struct_field1.unpack814, 1, !dbg !2113
  call fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %struct_field19), !dbg !2113
  ret %list.RocList %struct_field6, !dbg !2113
}

define internal fastcc void @Five_dayFive_2556ec2f505cf782dddbd25f753352aee08d91b5408c3986338c6065cf71ed3(ptr %0) !dbg !2115 {
entry:
  %result_value1 = alloca { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, align 8
  %result_value = alloca { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 8746382106310174068 to ptr), ptr %const_str_store, align 8, !dbg !2116
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2116
  store i64 8679613395162981983, ptr %const_str_store.repack2, align 8, !dbg !2116
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2116
  store i64 -7998392938210000780, ptr %const_str_store.repack3, align 8, !dbg !2116
  call fastcc void @File_readUtf8_3f94bd83b418c69c7325a332ebd9e6da9f2c825d171f6534e1abd1b299755(ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !2116
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !2116
  call fastcc void @Task_await_73264be0c742695741a5c2b1831aa195174bfbb9f7ad1331fccea2114b78c3b(ptr nonnull %result_value, {} zeroinitializer, ptr nonnull %result_value1), !dbg !2116
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %result_value1, i64 88, i1 false), !dbg !2116
  ret void, !dbg !2116
}

define internal fastcc i64 @Dict_wyp0_431d23493ce857ef909e5d189b015e7f4c0aa8086605349b0c3dca4fa76a087() !dbg !2118 {
entry:
  ret i64 -6884282663029611473, !dbg !2119
}

define internal fastcc { i64, %list.RocList } @List_getUnsafe_48c2caee6f1010356bbec8845a6ee45f2928c63eece16acf25dc3f84dc5f6(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2121 {
entry:
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !2122
  %list_get_element = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", !dbg !2122
  %list_get_load_element.unpack = load i64, ptr %list_get_element, align 8, !dbg !2122
  %0 = insertvalue { i64, %list.RocList } poison, i64 %list_get_load_element.unpack, 0, !dbg !2122
  %list_get_load_element.elt1 = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", i32 1, !dbg !2122
  %list_get_load_element.unpack2.unpack = load ptr, ptr %list_get_load_element.elt1, align 8, !dbg !2122
  %1 = insertvalue %list.RocList poison, ptr %list_get_load_element.unpack2.unpack, 0, !dbg !2122
  %list_get_load_element.unpack2.elt4 = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", i32 1, i32 1, !dbg !2122
  %list_get_load_element.unpack2.unpack5 = load i64, ptr %list_get_load_element.unpack2.elt4, align 8, !dbg !2122
  %2 = insertvalue %list.RocList %1, i64 %list_get_load_element.unpack2.unpack5, 1, !dbg !2122
  %list_get_load_element.unpack2.elt6 = getelementptr inbounds { i64, %list.RocList }, ptr %read_list_ptr, i64 %"#arg2", i32 1, i32 2, !dbg !2122
  %list_get_load_element.unpack2.unpack7 = load i64, ptr %list_get_load_element.unpack2.elt6, align 8, !dbg !2122
  %list_get_load_element.unpack28 = insertvalue %list.RocList %2, i64 %list_get_load_element.unpack2.unpack7, 2, !dbg !2122
  %list_get_load_element3 = insertvalue { i64, %list.RocList } %0, %list.RocList %list_get_load_element.unpack28, 1, !dbg !2122
  ret { i64, %list.RocList } %list_get_load_element3, !dbg !2122
}

define internal fastcc i64 @Num_sub_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(i64 %"#arg1", i64 %"#arg2") !dbg !2124 {
entry:
  %call = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %"#arg1", i64 %"#arg2"), !dbg !2125
  %has_overflowed = extractvalue { i64, i1 } %call, 1, !dbg !2125
  br i1 %has_overflowed, label %throw_block, label %then_block, !dbg !2125

then_block:                                       ; preds = %entry
  %operation_result = extractvalue { i64, i1 } %call, 0, !dbg !2125
  ret i64 %operation_result, !dbg !2125

throw_block:                                      ; preds = %entry
  tail call fastcc void @throw_on_overflow(), !dbg !2125
  unreachable, !dbg !2125
}

define internal fastcc {} @Parser_const_683fc8c1ba6a475a9c83ff66517952bb4de5a8bf7535b7576b5b57adabe56d({} %val) !dbg !2127 {
entry:
  %call = tail call fastcc {} @Parser_buildPrimitiveParser_c5af93aace764e1d51d7949776965fec1e25545875812c183e47de135bc13ad3({} %val), !dbg !2128
  ret {} %call, !dbg !2128
}

define internal fastcc %list.RocList @List_appendUnsafe_ea724491503a37367f3396489f19ddb4ed26c1b122d1bb85553bb555a0a4d(%list.RocList %"#arg1", { i32, i32 } %"#arg2") !dbg !2130 {
entry:
  %list_alloca113 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca { i32, i32 }, align 8
  %"#arg2.elt" = extractvalue { i32, i32 } %"#arg2", 0, !dbg !2131
  store i32 %"#arg2.elt", ptr %element_to_pass_as_opaque, align 8, !dbg !2131
  %element_to_pass_as_opaque.repack2 = getelementptr inbounds { i32, i32 }, ptr %element_to_pass_as_opaque, i64 0, i32 1, !dbg !2131
  %"#arg2.elt3" = extractvalue { i32, i32 } %"#arg2", 1, !dbg !2131
  store i32 %"#arg2.elt3", ptr %element_to_pass_as_opaque.repack2, align 4, !dbg !2131
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !2131
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !2131
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !2131
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 1, !dbg !2131
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !2131
  %list_alloca1.repack6 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !2131
  %"#arg1.elt7" = extractvalue %list.RocList %"#arg1", 2, !dbg !2131
  store i64 %"#arg1.elt7", ptr %list_alloca1.repack6, align 8, !dbg !2131
  call void @llvm.experimental.noalias.scope.decl(metadata !2133), !dbg !2131
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca113), !dbg !2131
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca113, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !2131
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca113, i64 8, !dbg !2131
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !2131, !noalias !2133
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca113, i64 16, !dbg !2131
  %.sroa.01.0.copyload.i = load ptr, ptr %list_alloca113, align 8, !dbg !2131, !noalias !2133
  %.sroa.5.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !2131, !noalias !2133
  %0 = icmp ne ptr %.sroa.01.0.copyload.i, null, !dbg !2131
  br i1 %0, label %1, label %roc_builtins.list.append_unsafe.exit, !dbg !2131

1:                                                ; preds = %entry
  %2 = mul nuw i64 %.sroa.1.0.copyload.i, 8, !dbg !2131
  %3 = getelementptr inbounds i8, ptr %.sroa.01.0.copyload.i, i64 %2, !dbg !2131
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %3, ptr align 4 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr ({ i32, i32 }, ptr null, i32 1) to i64), i1 false), !dbg !2136, !noalias !2133
  br label %roc_builtins.list.append_unsafe.exit, !dbg !2131

roc_builtins.list.append_unsafe.exit:             ; preds = %entry, %1
  %4 = add nuw i64 %.sroa.1.0.copyload.i, 1, !dbg !2131
  store ptr %.sroa.01.0.copyload.i, ptr %list_alloca, align 8, !dbg !2131, !alias.scope !2133
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !2131
  store i64 %4, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !2131, !alias.scope !2133
  %.sroa.5.0..sroa_idx5.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !2131
  store i64 %.sroa.5.0.copyload.i, ptr %.sroa.5.0..sroa_idx5.i, align 8, !dbg !2131, !alias.scope !2133
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca113), !dbg !2131
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !2131
  %5 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !2131
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !2131
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !2131
  %6 = insertvalue %list.RocList %5, i64 %load_list.unpack9, 1, !dbg !2131
  %load_list.elt10 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !2131
  %load_list.unpack11 = load i64, ptr %load_list.elt10, align 8, !dbg !2131
  %load_list12 = insertvalue %list.RocList %6, i64 %load_list.unpack11, 2, !dbg !2131
  ret %list.RocList %load_list12, !dbg !2131
}

define internal fastcc i32 @Num_shiftLeftBy_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5(i32 %"#arg1", i8 %"#arg2") !dbg !2138 {
entry:
  %cast_for_shift1 = zext i8 %"#arg2" to i32, !dbg !2139
  %int_shift_left = shl i32 %"#arg1", %cast_for_shift1, !dbg !2139
  ret i32 %int_shift_left, !dbg !2139
}

define internal fastcc i64 @Dict_len_4bc296458c9e4dfa311cb236c399bfa4fbaacf1f1ce0be5dc9b3fb0e57fbf5(ptr %"737") !dbg !2141 {
entry:
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"737", i64 0, i32 1, !dbg !2142
  %struct_field.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !2142
  %0 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !2142
  %struct_field.elt2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"737", i64 0, i32 1, i32 1, !dbg !2142
  %struct_field.unpack3 = load i64, ptr %struct_field.elt2, align 8, !dbg !2142
  %1 = insertvalue %list.RocList %0, i64 %struct_field.unpack3, 1, !dbg !2142
  %struct_field.elt4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"737", i64 0, i32 1, i32 2, !dbg !2142
  %struct_field.unpack5 = load i64, ptr %struct_field.elt4, align 8, !dbg !2142
  %struct_field6 = insertvalue %list.RocList %1, i64 %struct_field.unpack5, 2, !dbg !2142
  %struct_field1.unpack = load ptr, ptr %"737", align 8, !dbg !2142
  %2 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !2142
  %struct_field1.elt7 = getelementptr inbounds %list.RocList, ptr %"737", i64 0, i32 1, !dbg !2142
  %struct_field1.unpack8 = load i64, ptr %struct_field1.elt7, align 8, !dbg !2142
  %3 = insertvalue %list.RocList %2, i64 %struct_field1.unpack8, 1, !dbg !2142
  %struct_field1.elt9 = getelementptr inbounds %list.RocList, ptr %"737", i64 0, i32 2, !dbg !2142
  %struct_field1.unpack10 = load i64, ptr %struct_field1.elt9, align 8, !dbg !2142
  %struct_field111 = insertvalue %list.RocList %3, i64 %struct_field1.unpack10, 2, !dbg !2142
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field111), !dbg !2142
  %call = tail call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %struct_field6), !dbg !2142
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field6), !dbg !2142
  ret i64 %call, !dbg !2142
}

define internal fastcc void @Five_28_e8771868ae99ea9f746cb8aefe69898fb7e1703aac58e3bf6a66301caf8231b4(ptr %parser, ptr %before, ptr %0) !dbg !2144 {
entry:
  %result_value = alloca { [9 x i64], i8 }, align 8
  call fastcc void @String_parseStr_5c7fc6e8da44f4e01dcb7769e2bfcfae9456e0177c2ecd342c33edc3d01a4d(ptr %parser, ptr %before, ptr nonnull %result_value), !dbg !2145
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !2145
  ret void, !dbg !2145
}

define internal fastcc void @Task_46_8772af6a619429ec17c278ae96358a9a7790e4d8ec89ec82b96d22a7593d8f34({} %"120", ptr %"#arg_closure", ptr %0) !dbg !2147 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !2148
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !2148
  %load_element6 = alloca { [8 x i64], i8 }, align 8, !dbg !2148
  %result_value3 = alloca { [9 x i64], i8 }, align 8, !dbg !2148
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !2148
  %struct_field = alloca { %list.RocList, %list.RocList }, align 8, !dbg !2148
  %struct_field_access_record_1 = getelementptr inbounds { { %str.RocStr, {} }, { %list.RocList, %list.RocList } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !2148
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field, ptr noundef nonnull align 8 dereferenceable(48) %struct_field_access_record_1, i64 48, i1 false), !dbg !2148
  %struct_field1.unpack.unpack = load ptr, ptr %"#arg_closure", align 8, !dbg !2148
  %1 = insertvalue %str.RocStr poison, ptr %struct_field1.unpack.unpack, 0, !dbg !2148
  %struct_field1.unpack.elt11 = getelementptr inbounds %str.RocStr, ptr %"#arg_closure", i64 0, i32 1, !dbg !2148
  %struct_field1.unpack.unpack12 = load i64, ptr %struct_field1.unpack.elt11, align 8, !dbg !2148
  %2 = insertvalue %str.RocStr %1, i64 %struct_field1.unpack.unpack12, 1, !dbg !2148
  %struct_field1.unpack.elt13 = getelementptr inbounds %str.RocStr, ptr %"#arg_closure", i64 0, i32 2, !dbg !2148
  %struct_field1.unpack.unpack14 = load i64, ptr %struct_field1.unpack.elt13, align 8, !dbg !2148
  %struct_field1.unpack15 = insertvalue %str.RocStr %2, i64 %struct_field1.unpack.unpack14, 2, !dbg !2148
  %3 = insertvalue { %str.RocStr, {} } poison, %str.RocStr %struct_field1.unpack15, 0, !dbg !2148
  %struct_field110 = insertvalue { %str.RocStr, {} } %3, {} poison, 1, !dbg !2148
  call fastcc void @Task_67_fb7c2192380c0c9e4a26882f3783715efdcc3612b1649776eef2a3de1c92b6({} zeroinitializer, { %str.RocStr, {} } %struct_field110, ptr nonnull %result_value), !dbg !2148
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !2148
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !2148
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !2148
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2148

then_block:                                       ; preds = %entry
  %call = call fastcc { %str.RocStr, {} } @Five_19_a7df5ce4eebb1c9cfa595893e2cc56c192b318735b2d5a1b414ce045cc55d856({} poison, ptr nonnull %struct_field), !dbg !2148
  call fastcc void @Task_67_fb7c2192380c0c9e4a26882f3783715efdcc3612b1649776eef2a3de1c92b6({} zeroinitializer, { %str.RocStr, {} } %call, ptr nonnull %result_value3), !dbg !2148
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value3, i64 80, i1 false), !dbg !2148
  ret void, !dbg !2148

else_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_29"(ptr nonnull %struct_field), !dbg !2148
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element6, ptr noundef nonnull align 8 dereferenceable(72) %result_value, i64 72, i1 false), !dbg !2148
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %load_element6, i64 72, i1 false), !dbg !2148
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !2148
  %tag_id_ptr7 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2148
  store i8 0, ptr %tag_id_ptr7, align 8, !dbg !2148
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !2148
  ret void, !dbg !2148
}

define internal fastcc void @List_looper_66a53c5bb7482a7975e058b703753a62aee74dcb3ed8c2fbfc227399ea738e({} %"737", i64 %element, i64 %predicate, ptr %0) !dbg !2150 {
entry:
  %tag_alloca1 = alloca { [0 x i8], i8 }, align 8, !dbg !2151
  %tag_alloca = alloca { [0 x i8], i8 }, align 8, !dbg !2151
  %call = tail call fastcc i1 @List_169_1cd410b47325ca54fd4d13db9f372fff17944e80d3dc60ceb6fa212947a(i64 %element, i64 %predicate), !dbg !2151
  br i1 %call, label %then_block, label %else_block, !dbg !2151

then_block:                                       ; preds = %entry
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2151
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !2151
  %1 = load i8, ptr %tag_alloca, align 8, !dbg !2151
  store i8 %1, ptr %0, align 1, !dbg !2151
  ret void, !dbg !2151

else_block:                                       ; preds = %entry
  %tag_id_ptr3 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca1, i64 0, i32 1, !dbg !2151
  store i8 1, ptr %tag_id_ptr3, align 8, !dbg !2151
  %2 = load i8, ptr %tag_alloca1, align 8, !dbg !2151
  store i8 %2, ptr %0, align 1, !dbg !2151
  ret void, !dbg !2151
}

define internal fastcc i1 @Bool_structuralEq_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c(i8 %"#arg1", i8 %"#arg2") !dbg !2153 {
entry:
  %eq_u8 = icmp eq i8 %"#arg1", %"#arg2", !dbg !2154
  ret i1 %eq_u8, !dbg !2154
}

define internal fastcc void @Parser_82_32ac2f866d693a9e245dc0cc93bb33a0eabe86458e24b9768b741d954033ef(ptr %"425", ptr %funVal, ptr %0) !dbg !2156 {
entry:
  %struct_alloca = alloca { %list.RocList, %str.RocStr }, align 8, !dbg !2157
  %result_value = alloca %str.RocStr, align 8, !dbg !2157
  %struct_field.unpack = load ptr, ptr %"425", align 8, !dbg !2157
  %struct_field.elt3 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 1, !dbg !2157
  %struct_field.unpack4 = load i64, ptr %struct_field.elt3, align 8, !dbg !2157
  %struct_field.elt5 = getelementptr inbounds %list.RocList, ptr %"425", i64 0, i32 2, !dbg !2157
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !2157
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, !dbg !2157
  %struct_field1.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !2157
  %1 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !2157
  %struct_field1.elt8 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, i32 1, !dbg !2157
  %struct_field1.unpack9 = load i64, ptr %struct_field1.elt8, align 8, !dbg !2157
  %2 = insertvalue %list.RocList %1, i64 %struct_field1.unpack9, 1, !dbg !2157
  %struct_field1.elt10 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"425", i64 0, i32 1, i32 2, !dbg !2157
  %struct_field1.unpack11 = load i64, ptr %struct_field1.elt10, align 8, !dbg !2157
  %struct_field112 = insertvalue %list.RocList %2, i64 %struct_field1.unpack11, 2, !dbg !2157
  call fastcc void @String_103_2ef58c8e384362850c578bf62383d3f7b2846ac5d771d1c33fa8ac2df674698(%list.RocList %struct_field112, ptr %funVal, ptr nonnull %result_value), !dbg !2157
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field112), !dbg !2157
  store ptr %struct_field.unpack, ptr %struct_alloca, align 8, !dbg !2157
  %struct_alloca.repack13 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !2157
  store i64 %struct_field.unpack4, ptr %struct_alloca.repack13, align 8, !dbg !2157
  %struct_alloca.repack15 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !2157
  store i64 %struct_field.unpack6, ptr %struct_alloca.repack15, align 8, !dbg !2157
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, %str.RocStr }, ptr %struct_alloca, i64 0, i32 1, !dbg !2157
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field_gep2, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2157
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !2157
  ret void, !dbg !2157
}

define internal fastcc void @Stdout_handleErr_7b73be30696c7fe3ed242ca4629f76c2f696011d9271def91eeffdd89e9134d(ptr %err, ptr %0) !dbg !2159 {
entry:
  %tag_alloca86 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca81 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca76 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca71 = alloca { [3 x i64], i8 }, align 8
  %const_str_store66 = alloca %str.RocStr, align 8
  %tag_alloca61 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca56 = alloca { [3 x i64], i8 }, align 8
  %const_str_store51 = alloca %str.RocStr, align 8
  %tag_alloca46 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca41 = alloca { [3 x i64], i8 }, align 8
  %const_str_store36 = alloca %str.RocStr, align 8
  %tag_alloca31 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca26 = alloca { [3 x i64], i8 }, align 8
  %const_str_store21 = alloca %str.RocStr, align 8
  %tag_alloca16 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca11 = alloca { [3 x i64], i8 }, align 8
  %const_str_store6 = alloca %str.RocStr, align 8
  %tag_alloca1 = alloca { [8 x i64], i8 }, align 8
  %tag_alloca = alloca { [3 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store, align 8, !dbg !2160
  %const_str_store.repack89 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2160
  store i64 7308057356866828900, ptr %const_str_store.repack89, align 8, !dbg !2160
  %const_str_store.repack90 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2160
  store i64 -7710162126380642194, ptr %const_str_store.repack90, align 8, !dbg !2160
  %call = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store), !dbg !2160
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !2160
  br label %joinpointcont, !dbg !2160

joinpointcont:                                    ; preds = %entry
  br i1 %call, label %then_block, label %else_block, !dbg !2160

then_block:                                       ; preds = %joinpointcont
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2160
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !2160
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %tag_alloca, align 8, !dbg !2160
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca1, align 8, !dbg !2160
  %tag_id_ptr3 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca1, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr3, align 8, !dbg !2160
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca1, i64 72, i1 false), !dbg !2160
  ret void, !dbg !2160

else_block:                                       ; preds = %joinpointcont
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store6, align 8, !dbg !2160
  %const_str_store6.repack91 = getelementptr inbounds %str.RocStr, ptr %const_str_store6, i64 0, i32 1, !dbg !2160
  store i64 7236287822342797924, ptr %const_str_store6.repack91, align 8, !dbg !2160
  %const_str_store6.repack92 = getelementptr inbounds %str.RocStr, ptr %const_str_store6, i64 0, i32 2, !dbg !2160
  store i64 -7710162100828541886, ptr %const_str_store6.repack92, align 8, !dbg !2160
  %call7 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store6), !dbg !2160
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store6), !dbg !2160
  br label %joinpointcont4, !dbg !2160

joinpointcont4:                                   ; preds = %else_block
  br i1 %call7, label %then_block9, label %else_block10, !dbg !2160

then_block9:                                      ; preds = %joinpointcont4
  %tag_id_ptr13 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca11, i64 0, i32 1, !dbg !2160
  store i8 5, ptr %tag_id_ptr13, align 8, !dbg !2160
  %load_tag_to_put_in_struct14 = load { [3 x i64], i8 }, ptr %tag_alloca11, align 8, !dbg !2160
  store { [3 x i64], i8 } %load_tag_to_put_in_struct14, ptr %tag_alloca16, align 8, !dbg !2160
  %tag_id_ptr18 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca16, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr18, align 8, !dbg !2160
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca16, i64 72, i1 false), !dbg !2160
  ret void, !dbg !2160

else_block10:                                     ; preds = %joinpointcont4
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store21, align 8, !dbg !2160
  %const_str_store21.repack93 = getelementptr inbounds %str.RocStr, ptr %const_str_store21, i64 0, i32 1, !dbg !2160
  store i64 7310584034939779684, ptr %const_str_store21.repack93, align 8, !dbg !2160
  %const_str_store21.repack94 = getelementptr inbounds %str.RocStr, ptr %const_str_store21, i64 0, i32 2, !dbg !2160
  store i64 -7782220154226449062, ptr %const_str_store21.repack94, align 8, !dbg !2160
  %call22 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store21), !dbg !2160
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store21), !dbg !2160
  br label %joinpointcont19, !dbg !2160

joinpointcont19:                                  ; preds = %else_block10
  br i1 %call22, label %then_block24, label %else_block25, !dbg !2160

then_block24:                                     ; preds = %joinpointcont19
  %tag_id_ptr28 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca26, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr28, align 8, !dbg !2160
  %load_tag_to_put_in_struct29 = load { [3 x i64], i8 }, ptr %tag_alloca26, align 8, !dbg !2160
  store { [3 x i64], i8 } %load_tag_to_put_in_struct29, ptr %tag_alloca31, align 8, !dbg !2160
  %tag_id_ptr33 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca31, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr33, align 8, !dbg !2160
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca31, i64 72, i1 false), !dbg !2160
  ret void, !dbg !2160

else_block25:                                     ; preds = %joinpointcont19
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store36, align 8, !dbg !2160
  %const_str_store36.repack95 = getelementptr inbounds %str.RocStr, ptr %const_str_store36, i64 0, i32 1, !dbg !2160
  store i64 8103510022236551780, ptr %const_str_store36.repack95, align 8, !dbg !2160
  %const_str_store36.repack96 = getelementptr inbounds %str.RocStr, ptr %const_str_store36, i64 0, i32 2, !dbg !2160
  store i64 -7637994581112230032, ptr %const_str_store36.repack96, align 8, !dbg !2160
  %call37 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store36), !dbg !2160
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store36), !dbg !2160
  br label %joinpointcont34, !dbg !2160

joinpointcont34:                                  ; preds = %else_block25
  br i1 %call37, label %then_block39, label %else_block40, !dbg !2160

then_block39:                                     ; preds = %joinpointcont34
  %tag_id_ptr43 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca41, i64 0, i32 1, !dbg !2160
  store i8 4, ptr %tag_id_ptr43, align 8, !dbg !2160
  %load_tag_to_put_in_struct44 = load { [3 x i64], i8 }, ptr %tag_alloca41, align 8, !dbg !2160
  store { [3 x i64], i8 } %load_tag_to_put_in_struct44, ptr %tag_alloca46, align 8, !dbg !2160
  %tag_id_ptr48 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca46, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr48, align 8, !dbg !2160
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca46, i64 72, i1 false), !dbg !2160
  ret void, !dbg !2160

else_block40:                                     ; preds = %joinpointcont34
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store51, align 8, !dbg !2160
  %const_str_store51.repack97 = getelementptr inbounds %str.RocStr, ptr %const_str_store51, i64 0, i32 1, !dbg !2160
  store i64 8243122709995338340, ptr %const_str_store51.repack97, align 8, !dbg !2160
  %const_str_store51.repack98 = getelementptr inbounds %str.RocStr, ptr %const_str_store51, i64 0, i32 2, !dbg !2160
  store i64 -7637994581112359566, ptr %const_str_store51.repack98, align 8, !dbg !2160
  %call52 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store51), !dbg !2160
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store51), !dbg !2160
  br label %joinpointcont49, !dbg !2160

joinpointcont49:                                  ; preds = %else_block40
  br i1 %call52, label %then_block54, label %else_block55, !dbg !2160

then_block54:                                     ; preds = %joinpointcont49
  %tag_id_ptr58 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca56, i64 0, i32 1, !dbg !2160
  store i8 1, ptr %tag_id_ptr58, align 8, !dbg !2160
  %load_tag_to_put_in_struct59 = load { [3 x i64], i8 }, ptr %tag_alloca56, align 8, !dbg !2160
  store { [3 x i64], i8 } %load_tag_to_put_in_struct59, ptr %tag_alloca61, align 8, !dbg !2160
  %tag_id_ptr63 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca61, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr63, align 8, !dbg !2160
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca61, i64 72, i1 false), !dbg !2160
  ret void, !dbg !2160

else_block55:                                     ; preds = %joinpointcont49
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store66, align 8, !dbg !2160
  %const_str_store66.repack99 = getelementptr inbounds %str.RocStr, ptr %const_str_store66, i64 0, i32 1, !dbg !2160
  store i64 7372239162218003044, ptr %const_str_store66.repack99, align 8, !dbg !2160
  %const_str_store66.repack100 = getelementptr inbounds %str.RocStr, ptr %const_str_store66, i64 0, i32 2, !dbg !2160
  store i64 -7637971435617688243, ptr %const_str_store66.repack100, align 8, !dbg !2160
  %call67 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store66), !dbg !2160
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store66), !dbg !2160
  br label %joinpointcont64, !dbg !2160

joinpointcont64:                                  ; preds = %else_block55
  br i1 %call67, label %then_block69, label %else_block70, !dbg !2160

then_block69:                                     ; preds = %joinpointcont64
  %tag_id_ptr73 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca71, i64 0, i32 1, !dbg !2160
  store i8 3, ptr %tag_id_ptr73, align 8, !dbg !2160
  %load_tag_to_put_in_struct74 = load { [3 x i64], i8 }, ptr %tag_alloca71, align 8, !dbg !2160
  store { [3 x i64], i8 } %load_tag_to_put_in_struct74, ptr %tag_alloca76, align 8, !dbg !2160
  %tag_id_ptr78 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca76, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr78, align 8, !dbg !2160
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca76, i64 72, i1 false), !dbg !2160
  ret void, !dbg !2160

else_block70:                                     ; preds = %joinpointcont64
  call fastcc void @"#Attr_#inc_13"(ptr %err, i64 1), !dbg !2160
  %load_tag_to_put_in_struct79.unpack = load ptr, ptr %err, align 8, !dbg !2160
  %load_tag_to_put_in_struct79.elt101 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 1, !dbg !2160
  %load_tag_to_put_in_struct79.unpack102 = load i64, ptr %load_tag_to_put_in_struct79.elt101, align 8, !dbg !2160
  %load_tag_to_put_in_struct79.elt103 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 2, !dbg !2160
  %load_tag_to_put_in_struct79.unpack104 = load i64, ptr %load_tag_to_put_in_struct79.elt103, align 8, !dbg !2160
  store ptr %load_tag_to_put_in_struct79.unpack, ptr %tag_alloca81, align 8, !dbg !2160
  %tag_alloca81.repack106 = getelementptr inbounds %str.RocStr, ptr %tag_alloca81, i64 0, i32 1, !dbg !2160
  store i64 %load_tag_to_put_in_struct79.unpack102, ptr %tag_alloca81.repack106, align 8, !dbg !2160
  %tag_alloca81.repack108 = getelementptr inbounds %str.RocStr, ptr %tag_alloca81, i64 0, i32 2, !dbg !2160
  store i64 %load_tag_to_put_in_struct79.unpack104, ptr %tag_alloca81.repack108, align 8, !dbg !2160
  %tag_id_ptr83 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca81, i64 0, i32 1, !dbg !2160
  store i8 2, ptr %tag_id_ptr83, align 8, !dbg !2160
  %load_tag_to_put_in_struct84 = load { [3 x i64], i8 }, ptr %tag_alloca81, align 8, !dbg !2160
  store { [3 x i64], i8 } %load_tag_to_put_in_struct84, ptr %tag_alloca86, align 8, !dbg !2160
  %tag_id_ptr88 = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca86, i64 0, i32 1, !dbg !2160
  store i8 6, ptr %tag_id_ptr88, align 8, !dbg !2160
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca86, i64 72, i1 false), !dbg !2160
  ret void, !dbg !2160
}

define internal fastcc { %str.RocStr, {} } @Task_mapErr_73621a7e9aaab76881ccc8710befe1fe443c7c7e83e6432dae922774dac9356(ptr %"99", {} %transform) !dbg !2162 {
entry:
  tail call fastcc void @"#Attr_#inc_13"(ptr %"99", i64 1), !dbg !2163
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %"99", align 8, !dbg !2163
  %0 = insertvalue %str.RocStr poison, ptr %load_tag_to_put_in_struct.unpack, 0, !dbg !2163
  %load_tag_to_put_in_struct.elt2 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 1, !dbg !2163
  %load_tag_to_put_in_struct.unpack3 = load i64, ptr %load_tag_to_put_in_struct.elt2, align 8, !dbg !2163
  %1 = insertvalue %str.RocStr %0, i64 %load_tag_to_put_in_struct.unpack3, 1, !dbg !2163
  %load_tag_to_put_in_struct.elt4 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 2, !dbg !2163
  %load_tag_to_put_in_struct.unpack5 = load i64, ptr %load_tag_to_put_in_struct.elt4, align 8, !dbg !2163
  %load_tag_to_put_in_struct6 = insertvalue %str.RocStr %1, i64 %load_tag_to_put_in_struct.unpack5, 2, !dbg !2163
  %insert_record_field = insertvalue { %str.RocStr, {} } zeroinitializer, %str.RocStr %load_tag_to_put_in_struct6, 0, !dbg !2163
  %insert_record_field1 = insertvalue { %str.RocStr, {} } %insert_record_field, {} %transform, 1, !dbg !2163
  ret { %str.RocStr, {} } %insert_record_field1, !dbg !2163
}

define internal fastcc i1 @Str_matchesAt_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c(ptr %haystack, i64 %haystackIndex, ptr %needle) !dbg !2165 {
entry:
  %struct_alloca = alloca { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, align 8, !dbg !2166
  %call = tail call fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %haystack), !dbg !2166
  %call1 = tail call fastcc i64 @Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e(ptr %needle), !dbg !2166
  %call2 = tail call fastcc i64 @Num_addSaturated_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94(i64 %haystackIndex, i64 %call1), !dbg !2166
  %call3 = tail call fastcc i64 @Str_min_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8(i64 %call2, i64 %call), !dbg !2166
  tail call fastcc void @"#Attr_#inc_13"(ptr %needle, i64 1), !dbg !2166
  tail call fastcc void @"#Attr_#inc_13"(ptr %haystack, i64 1), !dbg !2166
  store i64 %call3, ptr %struct_alloca, align 8, !dbg !2166
  %struct_field_gep4 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 1, !dbg !2166
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field_gep4, ptr noundef nonnull align 8 dereferenceable(24) %haystack, i64 24, i1 false), !dbg !2166
  %struct_field_gep5 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 2, !dbg !2166
  store i64 %haystackIndex, ptr %struct_field_gep5, align 8, !dbg !2166
  %struct_field_gep6 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 3, !dbg !2166
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field_gep6, ptr noundef nonnull align 8 dereferenceable(24) %needle, i64 24, i1 false), !dbg !2166
  %struct_field_gep7 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 4, !dbg !2166
  store i64 0, ptr %struct_field_gep7, align 8, !dbg !2166
  %struct_field_gep8 = getelementptr inbounds { i64, %str.RocStr, i64, %str.RocStr, i64, i64 }, ptr %struct_alloca, i64 0, i32 5, !dbg !2166
  store i64 %call1, ptr %struct_field_gep8, align 8, !dbg !2166
  %call9 = call fastcc i1 @Str_matchesAtHelp_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061(ptr nonnull %struct_alloca), !dbg !2166
  ret i1 %call9, !dbg !2166
}

define internal fastcc void @Parser_buildPrimitiveParser_4bdcaf358a8d8579de541c9a8519b524d738fe234c73365eb7bb10a67d5b(ptr %fun, ptr %0) !dbg !2168 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %fun, i64 128, i1 false), !dbg !2169
  ret void, !dbg !2169
}

define internal fastcc void @List_454_b6812cd4831336785c4d2d6d371d74081a04d666ecb415ede62b278451858a9(i64 %index, i64 %elem, i64 %matcher, ptr %0) !dbg !2171 {
entry:
  %tag_alloca3 = alloca { [1 x i64], i8 }, align 8, !dbg !2172
  %tag_alloca = alloca { [1 x i64], i8 }, align 8, !dbg !2172
  %call = tail call fastcc i1 @List_517_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83(i64 %elem, i64 %matcher), !dbg !2172
  br i1 %call, label %then_block, label %else_block, !dbg !2172

then_block:                                       ; preds = %entry
  store i64 %index, ptr %tag_alloca, align 8, !dbg !2172
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2172
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !2172
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca, i64 16, i1 false), !dbg !2172
  ret void, !dbg !2172

else_block:                                       ; preds = %entry
  %call1 = tail call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %index, i64 1), !dbg !2172
  store i64 %call1, ptr %tag_alloca3, align 8, !dbg !2172
  %tag_id_ptr5 = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca3, i64 0, i32 1, !dbg !2172
  store i8 1, ptr %tag_id_ptr5, align 8, !dbg !2172
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca3, i64 16, i1 false), !dbg !2172
  ret void, !dbg !2172
}

define internal fastcc i1 @List_contains_9b7306a2e571f3d11e34b901a57455c3e32e69a2f8fde813ed1c4300e12712(%list.RocList %list, i64 %needle) !dbg !2174 {
entry:
  %call = tail call fastcc i1 @List_any_7f39af79a2c681124253a11db0202f701d4c3013db3c1272927c55405b9031(%list.RocList %list, i64 %needle), !dbg !2175
  ret i1 %call, !dbg !2175
}

define internal fastcc void @Parser_many_6a4f46ee87733c8ba3849fbe22c6c5fd6183935ace5f43ae75a260d6d9(ptr %parser, ptr %0) !dbg !2177 {
entry:
  %result_value = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8
  call fastcc void @Parser_buildPrimitiveParser_4bdcaf358a8d8579de541c9a8519b524d738fe234c73365eb7bb10a67d5b(ptr %parser, ptr nonnull %result_value), !dbg !2178
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %result_value, i64 128, i1 false), !dbg !2178
  ret void, !dbg !2178
}

define internal fastcc i64 @Str_min_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8(i64 %x, i64 %y) !dbg !2180 {
entry:
  %call = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %x, i64 %y), !dbg !2181
  br i1 %call, label %then_block, label %else_block, !dbg !2181

then_block:                                       ; preds = %entry
  ret i64 %x, !dbg !2181

else_block:                                       ; preds = %entry
  ret i64 %y, !dbg !2181
}

define internal fastcc void @Parser_combined_f446d5af246aa5183eb4a09cd57fa3ea76a8dcb6485754c231e81a751e2d1b(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !2183 {
entry:
  %result_value2 = alloca { [7 x i64], i8 }, align 8, !dbg !2184
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !2184
  %struct_field1 = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2184
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field1, ptr noundef nonnull align 8 dereferenceable(48) %"#arg_closure", i64 48, i1 false), !dbg !2184
  call fastcc void @Parser_parsePartial_8dff47a94badcb41e78dc31bfd22f3aa67ca62fc986df31893e8e85699c835f7({} poison, %list.RocList %input, ptr nonnull %result_value), !dbg !2184
  call fastcc void @Result_try_4ec88c32b1d8d7e41af6fe2c3b1c519c1adff81ec271f8be7bf4ea491e1(ptr nonnull %result_value, ptr nonnull %struct_field1, ptr nonnull %result_value2), !dbg !2184
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value2, i64 64, i1 false), !dbg !2184
  ret void, !dbg !2184
}

define internal fastcc i32 @Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(i64 %"#arg1") !dbg !2186 {
entry:
  %inc_cast = trunc i64 %"#arg1" to i32, !dbg !2187
  ret i32 %inc_cast, !dbg !2187
}

define internal fastcc void @Parser_manyImpl_b33a35188f4996a49ae9457b7b56b76f0e032371dbd4bd99b86def972ef40(ptr %"401", %list.RocList %"402", %list.RocList %"403", ptr %0) !dbg !2189 {
entry:
  %tmp_output_for_jmp8 = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8
  %load_element = alloca { %list.RocList, %list.RocList }, align 8
  %tag_alloca = alloca { [6 x i64], i8 }, align 8
  %struct_alloca3 = alloca { { %list.RocList, %list.RocList } }, align 8
  %struct_alloca = alloca { %list.RocList, %list.RocList }, align 8
  %result_value = alloca { [6 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8
  %joinpoint_arg_alloca = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %"403", i64 1), !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(128) %"401", i64 128, i1 false), !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp, i64 128, i1 false), !dbg !2190
  br label %joinpointcont, !dbg !2190

joinpointcont:                                    ; preds = %else_block, %entry
  %joinpointarg = phi %list.RocList [ %"402", %entry ], [ %call, %else_block ], !dbg !2190
  %joinpointarg1 = phi %list.RocList [ %"403", %entry ], [ %struct_field13, %else_block ], !dbg !2190
  call fastcc void @"#Attr_#inc_48"(ptr nonnull %joinpoint_arg_alloca, i64 1), !dbg !2190
  call fastcc void @Parser_parsePartial_1832725737c877b4e64b260205e689985bae38cc7369bbb84cf4d425217(ptr nonnull %joinpoint_arg_alloca, %list.RocList %joinpointarg1, ptr nonnull %result_value), !dbg !2190
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !2190
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !2190
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !2190
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2190

then_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_49"(ptr nonnull %result_value), !dbg !2190
  call fastcc void @"#Attr_#dec_48"(ptr nonnull %joinpoint_arg_alloca), !dbg !2190
  %joinpointarg1.elt = extractvalue %list.RocList %joinpointarg1, 0, !dbg !2190
  store ptr %joinpointarg1.elt, ptr %struct_alloca, align 8, !dbg !2190
  %struct_alloca.repack19 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !2190
  %joinpointarg1.elt20 = extractvalue %list.RocList %joinpointarg1, 1, !dbg !2190
  store i64 %joinpointarg1.elt20, ptr %struct_alloca.repack19, align 8, !dbg !2190
  %struct_alloca.repack21 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !2190
  %joinpointarg1.elt22 = extractvalue %list.RocList %joinpointarg1, 2, !dbg !2190
  store i64 %joinpointarg1.elt22, ptr %struct_alloca.repack21, align 8, !dbg !2190
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !2190
  %joinpointarg.elt = extractvalue %list.RocList %joinpointarg, 0, !dbg !2190
  store ptr %joinpointarg.elt, ptr %struct_field_gep2, align 8, !dbg !2190
  %struct_field_gep2.repack23 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !2190
  %joinpointarg.elt24 = extractvalue %list.RocList %joinpointarg, 1, !dbg !2190
  store i64 %joinpointarg.elt24, ptr %struct_field_gep2.repack23, align 8, !dbg !2190
  %struct_field_gep2.repack25 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !2190
  %joinpointarg.elt26 = extractvalue %list.RocList %joinpointarg, 2, !dbg !2190
  store i64 %joinpointarg.elt26, ptr %struct_field_gep2.repack25, align 8, !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca3, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca3, i64 48, i1 false), !dbg !2190
  %tag_id_ptr5 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2190
  store i8 1, ptr %tag_id_ptr5, align 8, !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !2190
  ret void, !dbg !2190

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_12"(%list.RocList %joinpointarg1), !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !2190
  %struct_field.unpack = load ptr, ptr %load_element, align 8, !dbg !2190
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !2190
  %struct_field.elt9 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 1, !dbg !2190
  %struct_field.unpack10 = load i64, ptr %struct_field.elt9, align 8, !dbg !2190
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack10, 1, !dbg !2190
  %struct_field.elt11 = getelementptr inbounds %list.RocList, ptr %load_element, i64 0, i32 2, !dbg !2190
  %struct_field.unpack12 = load i64, ptr %struct_field.elt11, align 8, !dbg !2190
  %struct_field13 = insertvalue %list.RocList %2, i64 %struct_field.unpack12, 2, !dbg !2190
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, !dbg !2190
  %struct_field7.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !2190
  %3 = insertvalue %list.RocList poison, ptr %struct_field7.unpack, 0, !dbg !2190
  %struct_field7.elt14 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, i32 1, !dbg !2190
  %struct_field7.unpack15 = load i64, ptr %struct_field7.elt14, align 8, !dbg !2190
  %4 = insertvalue %list.RocList %3, i64 %struct_field7.unpack15, 1, !dbg !2190
  %struct_field7.elt16 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %load_element, i64 0, i32 1, i32 2, !dbg !2190
  %struct_field7.unpack17 = load i64, ptr %struct_field7.elt16, align 8, !dbg !2190
  %struct_field718 = insertvalue %list.RocList %4, i64 %struct_field7.unpack17, 2, !dbg !2190
  %call = call fastcc %list.RocList @List_append_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9(%list.RocList %joinpointarg, %list.RocList %struct_field718), !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp8, ptr noundef nonnull align 8 dereferenceable(128) %joinpoint_arg_alloca, i64 128, i1 false), !dbg !2190
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(128) %tmp_output_for_jmp8, i64 128, i1 false), !dbg !2190
  br label %joinpointcont, !dbg !2190
}

define internal fastcc void @Dict_insertHelper_b57223634213b1c687e1cf06fef47be7eed4c64d12c154ffb6abc557b2b473(%list.RocList %"404", %list.RocList %"405", i64 %"406", i32 %"407", i64 %"408", %list.RocList %"409", i64 %"410", float %"411", i8 %"412", ptr %0) !dbg !2192 {
entry:
  %struct_alloca42 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !2193
  %struct_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !2193
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %"409", i64 1), !dbg !2193
  br label %joinpointcont, !dbg !2193

joinpointcont:                                    ; preds = %else_block32, %else_block16, %entry
  %joinpointarg2 = phi i64 [ %"406", %entry ], [ %call26, %else_block16 ], [ %call49, %else_block32 ], !dbg !2193
  %joinpointarg3 = phi i32 [ %"407", %entry ], [ %call27, %else_block16 ], [ %call50, %else_block32 ], !dbg !2193
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %"404", i64 %joinpointarg2), !dbg !2193
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !2193
  %call9 = tail call fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %joinpointarg3, i32 %struct_field_access_record_1), !dbg !2193
  br i1 %call9, label %then_block, label %else_block, !dbg !2193

then_block:                                       ; preds = %joinpointcont
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !2193
  %call10 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_0), !dbg !2193
  %call11 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %"405", i64 %call10), !dbg !2193
  %struct_field_access_record_012 = extractvalue { i64, %list.RocList } %call11, 0, !dbg !2193
  %call13 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field_access_record_012, i64 %"408"), !dbg !2193
  br i1 %call13, label %then_block15, label %else_block16, !dbg !2193

else_block:                                       ; preds = %joinpointcont
  %struct_field_access_record_128 = extractvalue { i32, i32 } %call, 1, !dbg !2193
  %call29 = tail call fastcc i1 @Num_isGt_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b(i32 %joinpointarg3, i32 %struct_field_access_record_128), !dbg !2193
  br i1 %call29, label %then_block31, label %else_block32, !dbg !2193

then_block15:                                     ; preds = %then_block
  %struct_field_access_record_017 = extractvalue { i32, i32 } %call, 0, !dbg !2193
  %call18 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_017), !dbg !2193
  %insert_record_field = insertvalue { i64, %list.RocList } zeroinitializer, i64 %"408", 0, !dbg !2193
  %insert_record_field19 = insertvalue { i64, %list.RocList } %insert_record_field, %list.RocList %"409", 1, !dbg !2193
  %call20 = tail call fastcc %list.RocList @List_set_13b85edde3cd334a6265af1614664111ffe13ba3b2be97d0f8e38d9c799cb7(%list.RocList %"405", i64 %call18, { i64, %list.RocList } %insert_record_field19), !dbg !2193
  %"404.elt" = extractvalue %list.RocList %"404", 0, !dbg !2193
  store ptr %"404.elt", ptr %struct_alloca, align 8, !dbg !2193
  %struct_alloca.repack59 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !2193
  %"404.elt60" = extractvalue %list.RocList %"404", 1, !dbg !2193
  store i64 %"404.elt60", ptr %struct_alloca.repack59, align 8, !dbg !2193
  %struct_alloca.repack61 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !2193
  %"404.elt62" = extractvalue %list.RocList %"404", 2, !dbg !2193
  store i64 %"404.elt62", ptr %struct_alloca.repack61, align 8, !dbg !2193
  %struct_field_gep21 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, !dbg !2193
  %call20.elt = extractvalue %list.RocList %call20, 0, !dbg !2193
  store ptr %call20.elt, ptr %struct_field_gep21, align 8, !dbg !2193
  %struct_field_gep21.repack63 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !2193
  %call20.elt64 = extractvalue %list.RocList %call20, 1, !dbg !2193
  store i64 %call20.elt64, ptr %struct_field_gep21.repack63, align 8, !dbg !2193
  %struct_field_gep21.repack65 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !2193
  %call20.elt66 = extractvalue %list.RocList %call20, 2, !dbg !2193
  store i64 %call20.elt66, ptr %struct_field_gep21.repack65, align 8, !dbg !2193
  %struct_field_gep22 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 2, !dbg !2193
  store i64 %"410", ptr %struct_field_gep22, align 8, !dbg !2193
  %struct_field_gep23 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 3, !dbg !2193
  store float %"411", ptr %struct_field_gep23, align 8, !dbg !2193
  %struct_field_gep24 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 4, !dbg !2193
  store i8 %"412", ptr %struct_field_gep24, align 4, !dbg !2193
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca, i64 64, i1 false), !dbg !2193
  ret void, !dbg !2193

else_block16:                                     ; preds = %then_block
  %call25 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"404"), !dbg !2193
  %call26 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg2, i64 %call25), !dbg !2193
  %call27 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %joinpointarg3), !dbg !2193
  br label %joinpointcont, !dbg !2193

then_block31:                                     ; preds = %else_block
  %insert_record_field33 = insertvalue { i64, %list.RocList } zeroinitializer, i64 %"408", 0, !dbg !2193
  %insert_record_field34 = insertvalue { i64, %list.RocList } %insert_record_field33, %list.RocList %"409", 1, !dbg !2193
  %call35 = tail call fastcc %list.RocList @List_append_494fd63e81fc5377dff396b856cc43fac283edbeae4d7cfbdd95aadb8479597(%list.RocList %"405", { i64, %list.RocList } %insert_record_field34), !dbg !2193
  %call36 = tail call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %call35), !dbg !2193
  %call37 = tail call fastcc i64 @Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(i64 %call36, i64 1), !dbg !2193
  %call38 = tail call fastcc i32 @Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(i64 %call37), !dbg !2193
  %insert_record_field39 = insertvalue { i32, i32 } zeroinitializer, i32 %call38, 0, !dbg !2193
  %insert_record_field40 = insertvalue { i32, i32 } %insert_record_field39, i32 %joinpointarg3, 1, !dbg !2193
  %call41 = tail call fastcc %list.RocList @Dict_placeAndShiftUp_4e6df5a280208f8027d8c0e0fd95af1adf299ebd3666b6c48551dc0cb3c3214(%list.RocList %"404", { i32, i32 } %insert_record_field40, i64 %joinpointarg2), !dbg !2193
  %call41.elt = extractvalue %list.RocList %call41, 0, !dbg !2193
  store ptr %call41.elt, ptr %struct_alloca42, align 8, !dbg !2193
  %struct_alloca42.repack51 = getelementptr inbounds %list.RocList, ptr %struct_alloca42, i64 0, i32 1, !dbg !2193
  %call41.elt52 = extractvalue %list.RocList %call41, 1, !dbg !2193
  store i64 %call41.elt52, ptr %struct_alloca42.repack51, align 8, !dbg !2193
  %struct_alloca42.repack53 = getelementptr inbounds %list.RocList, ptr %struct_alloca42, i64 0, i32 2, !dbg !2193
  %call41.elt54 = extractvalue %list.RocList %call41, 2, !dbg !2193
  store i64 %call41.elt54, ptr %struct_alloca42.repack53, align 8, !dbg !2193
  %struct_field_gep44 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca42, i64 0, i32 1, !dbg !2193
  %call35.elt = extractvalue %list.RocList %call35, 0, !dbg !2193
  store ptr %call35.elt, ptr %struct_field_gep44, align 8, !dbg !2193
  %struct_field_gep44.repack55 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca42, i64 0, i32 1, i32 1, !dbg !2193
  %call35.elt56 = extractvalue %list.RocList %call35, 1, !dbg !2193
  store i64 %call35.elt56, ptr %struct_field_gep44.repack55, align 8, !dbg !2193
  %struct_field_gep44.repack57 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca42, i64 0, i32 1, i32 2, !dbg !2193
  %call35.elt58 = extractvalue %list.RocList %call35, 2, !dbg !2193
  store i64 %call35.elt58, ptr %struct_field_gep44.repack57, align 8, !dbg !2193
  %struct_field_gep45 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca42, i64 0, i32 2, !dbg !2193
  store i64 %"410", ptr %struct_field_gep45, align 8, !dbg !2193
  %struct_field_gep46 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca42, i64 0, i32 3, !dbg !2193
  store float %"411", ptr %struct_field_gep46, align 8, !dbg !2193
  %struct_field_gep47 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca42, i64 0, i32 4, !dbg !2193
  store i8 %"412", ptr %struct_field_gep47, align 4, !dbg !2193
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca42, i64 64, i1 false), !dbg !2193
  ret void, !dbg !2193

else_block32:                                     ; preds = %else_block
  %call48 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"404"), !dbg !2193
  %call49 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg2, i64 %call48), !dbg !2193
  %call50 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %joinpointarg3), !dbg !2193
  br label %joinpointcont, !dbg !2193
}

define internal fastcc void @Five_32_6bbcde7d41792fbe845f8bf74275dc12b5fcae37f4d24f0ea64b1f14c552a(ptr %parser, ptr %after, ptr %0) !dbg !2195 {
entry:
  %result_value = alloca { [9 x i64], i8 }, align 8
  call fastcc void @String_parseStr_f266767836e348a7bd51d0397eeb6f3f7b5286423dc3a4dc81961244fff1(ptr %parser, ptr %after, ptr nonnull %result_value), !dbg !2196
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !2196
  ret void, !dbg !2196
}

define internal fastcc void @Str_substringUnsafe_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61(ptr %"#arg1", i64 %"#arg2", i64 %"#arg3", ptr %0) !dbg !2198 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call void @roc_builtins.str.substring_unsafe(ptr noalias nocapture nonnull sret(%str.RocStr) %str_alloca, ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1", i64 %"#arg2", i64 %"#arg3"), !dbg !2199
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %str_alloca, i64 24, i1 false), !dbg !2199
  ret void, !dbg !2199
}

define internal fastcc void @Parser_52_a17e6e9772c93366d74c78ae4861b6e90ec7dc88cf5c811d750abdb7591c0(%list.RocList %input, {} %val, ptr %0) !dbg !2201 {
entry:
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !2202
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !2202
  %input.elt = extractvalue %list.RocList %input, 0, !dbg !2202
  store ptr %input.elt, ptr %tag_alloca, align 8, !dbg !2202
  %tag_alloca.repack5 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !2202
  %input.elt6 = extractvalue %list.RocList %input, 1, !dbg !2202
  store i64 %input.elt6, ptr %tag_alloca.repack5, align 8, !dbg !2202
  %tag_alloca.repack7 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !2202
  %input.elt8 = extractvalue %list.RocList %input, 2, !dbg !2202
  store i64 %input.elt8, ptr %tag_alloca.repack7, align 8, !dbg !2202
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2202
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2202
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !2202
  ret void, !dbg !2202
}

define internal fastcc void @List_looper_61e5a13d423d566ac5e547894554a8bcf8bc44e60405c767b71c7c83a1e2c55({} %"816", i64 %element, ptr %predicate, ptr %0) !dbg !2204 {
entry:
  %tag_alloca1 = alloca { [0 x i8], i8 }, align 8, !dbg !2205
  %tag_alloca = alloca { [0 x i8], i8 }, align 8, !dbg !2205
  %call = tail call fastcc i1 @Five_61_23b674fb7e93c9deea1a988c8dccdf545316dca864beef81f3b16a6841ea4d62(i64 %element, ptr %predicate), !dbg !2205
  br i1 %call, label %then_block, label %else_block, !dbg !2205

then_block:                                       ; preds = %entry
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2205
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2205
  %1 = load i8, ptr %tag_alloca, align 8, !dbg !2205
  store i8 %1, ptr %0, align 1, !dbg !2205
  ret void, !dbg !2205

else_block:                                       ; preds = %entry
  %tag_id_ptr3 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca1, i64 0, i32 1, !dbg !2205
  store i8 0, ptr %tag_id_ptr3, align 8, !dbg !2205
  %2 = load i8, ptr %tag_alloca1, align 8, !dbg !2205
  store i8 %2, ptr %0, align 1, !dbg !2205
  ret void, !dbg !2205
}

define internal fastcc void @Parser_200_ae34dcb56c8c3134c426993589829c91bf4dcc21e6be643466888bcbe12(%list.RocList %input, ptr %"#arg_closure", ptr %0) !dbg !2207 {
entry:
  %tag_alloca34 = alloca { [4 x i64], i8 }, align 8, !dbg !2208
  %struct_field30 = alloca %str.RocStr, align 8, !dbg !2208
  %load_element26 = alloca { %list.RocList, %str.RocStr }, align 8, !dbg !2208
  %tag_alloca21 = alloca { [4 x i64], i8 }, align 8, !dbg !2208
  %load_element18 = alloca %str.RocStr, align 8, !dbg !2208
  %result_value9 = alloca { [6 x i64], i8 }, align 8, !dbg !2208
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !2208
  %load_element = alloca %str.RocStr, align 8, !dbg !2208
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !2208
  %struct_field1 = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2208
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field1, ptr noundef nonnull align 8 dereferenceable(48) %"#arg_closure", i64 48, i1 false), !dbg !2208
  call fastcc void @Parser_parsePartial_2dc969e7cadeba64dcad7acb43be4d64fb361cb6e86a62729ce66872e4fc({ {}, { {}, { { {}, {} }, {} } } } poison, %list.RocList %input, ptr nonnull %result_value), !dbg !2208
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !2208
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !2208
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !2208
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2208

then_block:                                       ; preds = %entry
  call fastcc void @"#Attr_#dec_20"(ptr nonnull %struct_field1), !dbg !2208
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2208
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element, align 8, !dbg !2208
  %load_tag_to_put_in_struct.elt77 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 1, !dbg !2208
  %load_tag_to_put_in_struct.unpack78 = load i64, ptr %load_tag_to_put_in_struct.elt77, align 8, !dbg !2208
  %load_tag_to_put_in_struct.elt79 = getelementptr inbounds %str.RocStr, ptr %load_element, i64 0, i32 2, !dbg !2208
  %load_tag_to_put_in_struct.unpack80 = load i64, ptr %load_tag_to_put_in_struct.elt79, align 8, !dbg !2208
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !2208
  %tag_alloca.repack82 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !2208
  store i64 %load_tag_to_put_in_struct.unpack78, ptr %tag_alloca.repack82, align 8, !dbg !2208
  %tag_alloca.repack84 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !2208
  store i64 %load_tag_to_put_in_struct.unpack80, ptr %tag_alloca.repack84, align 8, !dbg !2208
  %tag_id_ptr3 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2208
  store i8 0, ptr %tag_id_ptr3, align 8, !dbg !2208
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !2208
  ret void, !dbg !2208

else_block:                                       ; preds = %entry
  %load_element6.unpack.unpack = load ptr, ptr %result_value, align 8, !dbg !2208
  %1 = insertvalue %list.RocList poison, ptr %load_element6.unpack.unpack, 0, !dbg !2208
  %load_element6.unpack.elt52 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 1, !dbg !2208
  %load_element6.unpack.unpack53 = load i64, ptr %load_element6.unpack.elt52, align 8, !dbg !2208
  %2 = insertvalue %list.RocList %1, i64 %load_element6.unpack.unpack53, 1, !dbg !2208
  %load_element6.unpack.elt54 = getelementptr inbounds %list.RocList, ptr %result_value, i64 0, i32 2, !dbg !2208
  %load_element6.unpack.unpack55 = load i64, ptr %load_element6.unpack.elt54, align 8, !dbg !2208
  %load_element6.unpack56 = insertvalue %list.RocList %2, i64 %load_element6.unpack.unpack55, 2, !dbg !2208
  %load_element6.elt49 = getelementptr inbounds { %list.RocList, i64 }, ptr %result_value, i64 0, i32 1, !dbg !2208
  %load_element6.unpack50 = load i64, ptr %load_element6.elt49, align 8, !dbg !2208
  call fastcc void @Parser_parsePartial_cf8c9d89186a212409f843ad81dcb732cefe119aa65a9f5b319577583b6a15(ptr nonnull %struct_field1, %list.RocList %load_element6.unpack56, ptr nonnull %result_value9), !dbg !2208
  call fastcc void @"#Attr_#dec_12"(%list.RocList %load_element6.unpack56), !dbg !2208
  %tag_id_ptr10 = getelementptr inbounds { [6 x i64], i8 }, ptr %result_value9, i64 0, i32 1, !dbg !2208
  %load_tag_id11 = load i8, ptr %tag_id_ptr10, align 8, !dbg !2208
  %eq_u812 = icmp eq i8 %load_tag_id11, 0, !dbg !2208
  br i1 %eq_u812, label %then_block14, label %else_block15, !dbg !2208

then_block14:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element18, ptr noundef nonnull align 8 dereferenceable(24) %result_value9, i64 24, i1 false), !dbg !2208
  %load_tag_to_put_in_struct19.unpack = load ptr, ptr %load_element18, align 8, !dbg !2208
  %load_tag_to_put_in_struct19.elt68 = getelementptr inbounds %str.RocStr, ptr %load_element18, i64 0, i32 1, !dbg !2208
  %load_tag_to_put_in_struct19.unpack69 = load i64, ptr %load_tag_to_put_in_struct19.elt68, align 8, !dbg !2208
  %load_tag_to_put_in_struct19.elt70 = getelementptr inbounds %str.RocStr, ptr %load_element18, i64 0, i32 2, !dbg !2208
  %load_tag_to_put_in_struct19.unpack71 = load i64, ptr %load_tag_to_put_in_struct19.elt70, align 8, !dbg !2208
  store ptr %load_tag_to_put_in_struct19.unpack, ptr %tag_alloca21, align 8, !dbg !2208
  %tag_alloca21.repack73 = getelementptr inbounds %str.RocStr, ptr %tag_alloca21, i64 0, i32 1, !dbg !2208
  store i64 %load_tag_to_put_in_struct19.unpack69, ptr %tag_alloca21.repack73, align 8, !dbg !2208
  %tag_alloca21.repack75 = getelementptr inbounds %str.RocStr, ptr %tag_alloca21, i64 0, i32 2, !dbg !2208
  store i64 %load_tag_to_put_in_struct19.unpack71, ptr %tag_alloca21.repack75, align 8, !dbg !2208
  %tag_id_ptr23 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca21, i64 0, i32 1, !dbg !2208
  store i8 0, ptr %tag_id_ptr23, align 8, !dbg !2208
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca21, i64 40, i1 false), !dbg !2208
  ret void, !dbg !2208

else_block15:                                     ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element26, ptr noundef nonnull align 8 dereferenceable(48) %result_value9, i64 48, i1 false), !dbg !2208
  %struct_field28.unpack = load ptr, ptr %load_element26, align 8, !dbg !2208
  %struct_field28.elt57 = getelementptr inbounds %list.RocList, ptr %load_element26, i64 0, i32 1, !dbg !2208
  %struct_field28.unpack58 = load i64, ptr %struct_field28.elt57, align 8, !dbg !2208
  %struct_field28.elt59 = getelementptr inbounds %list.RocList, ptr %load_element26, i64 0, i32 2, !dbg !2208
  %struct_field28.unpack60 = load i64, ptr %struct_field28.elt59, align 8, !dbg !2208
  %struct_field_access_record_129 = getelementptr inbounds { %list.RocList, %str.RocStr }, ptr %load_element26, i64 0, i32 1, !dbg !2208
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field30, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_129, i64 24, i1 false), !dbg !2208
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %struct_field30), !dbg !2208
  store ptr %struct_field28.unpack, ptr %tag_alloca34, align 8, !dbg !2208
  %tag_alloca34.repack64 = getelementptr inbounds %list.RocList, ptr %tag_alloca34, i64 0, i32 1, !dbg !2208
  store i64 %struct_field28.unpack58, ptr %tag_alloca34.repack64, align 8, !dbg !2208
  %tag_alloca34.repack66 = getelementptr inbounds %list.RocList, ptr %tag_alloca34, i64 0, i32 2, !dbg !2208
  store i64 %struct_field28.unpack60, ptr %tag_alloca34.repack66, align 8, !dbg !2208
  %tag_alloca34.repack62 = getelementptr inbounds { %list.RocList, i64 }, ptr %tag_alloca34, i64 0, i32 1, !dbg !2208
  store i64 %load_element6.unpack50, ptr %tag_alloca34.repack62, align 8, !dbg !2208
  %tag_id_ptr36 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca34, i64 0, i32 1, !dbg !2208
  store i8 1, ptr %tag_id_ptr36, align 8, !dbg !2208
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca34, i64 40, i1 false), !dbg !2208
  ret void, !dbg !2208
}

define internal fastcc void @Inspect_toStr_4ece9a43d31aae54b519b59b311d38f02e11acf9efbec0b25f6f665cea59d6(ptr %val, ptr %0) !dbg !2210 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_inspect_a6f9d2e440a05a8ff775b9c79f73de5b7f11f651fe1ab65164a352a63f168(ptr %val, ptr nonnull %result_value), !dbg !2211
  call fastcc void @Inspect_toDbgStr_35ee554d8e8c61e817524983ec42e3202b5bcb4f401f996ce2b30cd744f8a9f(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !2211
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !2211
  ret void, !dbg !2211
}

define internal fastcc %list.RocList @List_keepOks_9cc9ac536c41c72f38d2273c43b034822641cbb47ea8853416c10d132561319(%list.RocList %list, {} %toResult) !dbg !2213 {
entry:
  %call = tail call fastcc i64 @List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6(%list.RocList %list), !dbg !2214
  %call1 = tail call fastcc %list.RocList @List_withCapacity_edba1fc0cbfb8bc06ea89d458e5f5137027dfdf6bb865a3fbe3121562(i64 %call), !dbg !2214
  %call2 = tail call fastcc %list.RocList @List_walk_9d55cb5018ba494bcf5765953355c83e4ade148e5c95b280aacd826c59bea86(%list.RocList %list, %list.RocList %call1, {} %toResult), !dbg !2214
  ret %list.RocList %call2, !dbg !2214
}

define internal fastcc %list.RocList @Result_withDefault_f411d2d207cb75ff49124b128ee5a4cdec2daf8d1cf0a733c3c7d426729b6b(ptr %result, %list.RocList %default) !dbg !2216 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !2217
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2217
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !2217
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2217

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_1"(%list.RocList %default), !dbg !2217
  %load_element.unpack = load ptr, ptr %result, align 8, !dbg !2217
  %0 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !2217
  %load_element.elt2 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !2217
  %load_element.unpack3 = load i64, ptr %load_element.elt2, align 8, !dbg !2217
  %1 = insertvalue %list.RocList %0, i64 %load_element.unpack3, 1, !dbg !2217
  %load_element.elt4 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !2217
  %load_element.unpack5 = load i64, ptr %load_element.elt4, align 8, !dbg !2217
  %load_element6 = insertvalue %list.RocList %1, i64 %load_element.unpack5, 2, !dbg !2217
  ret %list.RocList %load_element6, !dbg !2217

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_10"(ptr %result), !dbg !2217
  ret %list.RocList %default, !dbg !2217
}

define internal fastcc void @Result_try_56ecce6137ef1a8b7fa2d1462a14bcff563458ace807157c68c36b8f837c2(ptr %result, ptr %transform, ptr %0) !dbg !2219 {
entry:
  %tag_alloca = alloca { [9 x i64], i8 }, align 8, !dbg !2220
  %struct_alloca = alloca { { [8 x i64], i8 } }, align 8, !dbg !2220
  %load_element4 = alloca { [8 x i64], i8 }, align 8, !dbg !2220
  %result_value = alloca { [9 x i64], i8 }, align 8, !dbg !2220
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !2220
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2220
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !2220
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2220

then_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %result, align 8, !dbg !2220
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !2220
  %load_element.elt6 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !2220
  %load_element.unpack7 = load i64, ptr %load_element.elt6, align 8, !dbg !2220
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack7, 1, !dbg !2220
  %load_element.elt8 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !2220
  %load_element.unpack9 = load i64, ptr %load_element.elt8, align 8, !dbg !2220
  %load_element10 = insertvalue %list.RocList %2, i64 %load_element.unpack9, 2, !dbg !2220
  call fastcc void @Five_30_f81ede8f61994c117716f563c136128125c8b7d9af8ae3ed880dbb29f2c2a98(%list.RocList %load_element10, ptr %transform, ptr nonnull %result_value), !dbg !2220
  call fastcc void @"#Attr_#dec_2"(%list.RocList %load_element10), !dbg !2220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value, i64 80, i1 false), !dbg !2220
  ret void, !dbg !2220

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_13"(ptr %transform), !dbg !2220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %load_element4, ptr noundef nonnull align 8 dereferenceable(72) %result, i64 72, i1 false), !dbg !2220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(72) %load_element4, i64 72, i1 false), !dbg !2220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !2220
  %tag_id_ptr5 = getelementptr inbounds { [9 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2220
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !2220
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %tag_alloca, i64 80, i1 false), !dbg !2220
  ret void, !dbg !2220
}

define internal fastcc void @Parser_77_f56f6119e9554182ffe75b2428322517743b970c74fbeadd77e7ab7e459b8a({ %list.RocList, {} } %"420", {} %valParser, ptr %0) !dbg !2222 {
entry:
  %result_value1 = alloca { [4 x i64], i8 }, align 8, !dbg !2223
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !2223
  %struct_field_access_record_0 = extractvalue { %list.RocList, {} } %"420", 0, !dbg !2223
  %struct_field_access_record_1 = extractvalue { %list.RocList, {} } %"420", 1, !dbg !2223
  call fastcc void @Parser_parsePartial_a09fbdbd33f5ac2bc44e2b877ec9604906cdb3d39aa817d9e3dc5075f2eda({} %valParser, %list.RocList %struct_field_access_record_0, ptr nonnull %result_value), !dbg !2223
  call fastcc void @Result_map_146823d2bf8fc0c097442048ad932e5338966c8ef5244f2d062b7bbb52d84c7(ptr nonnull %result_value, {} %struct_field_access_record_1, ptr nonnull %result_value1), !dbg !2223
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value1, i64 40, i1 false), !dbg !2223
  ret void, !dbg !2223
}

define internal fastcc void @List_iterate_789661f33c6ea1791479ecf1f52dd93e21b779364a5197d9de3459113903b9c(%list.RocList %list, {} %init, i64 %func, ptr %0) !dbg !2225 {
entry:
  %result_value = alloca { [0 x i8], i8 }, align 8, !dbg !2226
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !2226
  call fastcc void @List_iterHelp_a0ad3055de08c7e73da1974f4d9be666ee2daaab6969dd582bb59893cf022b0(%list.RocList %list, {} %init, i64 %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !2226
  %1 = load i8, ptr %result_value, align 8, !dbg !2226
  store i8 %1, ptr %0, align 1, !dbg !2226
  ret void, !dbg !2226
}

define internal fastcc %list.RocList @List_walkWithIndex_260dec8de9897e99a5126b882cbb9d2ee2f32cd2b94c727fdd1aa87e467d(%list.RocList %list, %list.RocList %init, i8 %func) !dbg !2228 {
entry:
  %call = tail call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %list), !dbg !2229
  %call1 = tail call fastcc %list.RocList @List_walkWithIndexHelp_1b6b9e2f2c8025d6941d1d79426973c1ba899598ef8eecc9bea3f5f3657b4477(%list.RocList %list, %list.RocList %init, i8 %func, i64 0, i64 %call), !dbg !2229
  ret %list.RocList %call1, !dbg !2229
}

define internal fastcc void @Result_map_146823d2bf8fc0c097442048ad932e5338966c8ef5244f2d062b7bbb52d84c7(ptr %result, {} %transform, ptr %0) !dbg !2231 {
entry:
  %tag_alloca7 = alloca { [4 x i64], i8 }, align 8, !dbg !2232
  %load_element5 = alloca %str.RocStr, align 8, !dbg !2232
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !2232
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !2232
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2232
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !2232
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2232

then_block:                                       ; preds = %entry
  %load_element.unpack.unpack = load ptr, ptr %result, align 8, !dbg !2232
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack.unpack, 0, !dbg !2232
  %load_element.unpack.elt22 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 1, !dbg !2232
  %load_element.unpack.unpack23 = load i64, ptr %load_element.unpack.elt22, align 8, !dbg !2232
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack.unpack23, 1, !dbg !2232
  %load_element.unpack.elt24 = getelementptr inbounds %list.RocList, ptr %result, i64 0, i32 2, !dbg !2232
  %load_element.unpack.unpack25 = load i64, ptr %load_element.unpack.elt24, align 8, !dbg !2232
  %load_element.unpack26 = insertvalue %list.RocList %2, i64 %load_element.unpack.unpack25, 2, !dbg !2232
  %3 = insertvalue { %list.RocList, i64 } poison, %list.RocList %load_element.unpack26, 0, !dbg !2232
  %load_element.elt19 = getelementptr inbounds { %list.RocList, i64 }, ptr %result, i64 0, i32 1, !dbg !2232
  %load_element.unpack20 = load i64, ptr %load_element.elt19, align 8, !dbg !2232
  %load_element21 = insertvalue { %list.RocList, i64 } %3, i64 %load_element.unpack20, 1, !dbg !2232
  %call = tail call fastcc { %list.RocList, i64 } @Parser_82_9e244d6892b46ff752addc4350601bba9618a34f4929cc9daa8a3c0abac2c({ %list.RocList, i64 } %load_element21, {} %transform), !dbg !2232
  %call.elt = extractvalue { %list.RocList, i64 } %call, 0, !dbg !2232
  %call.elt.elt = extractvalue %list.RocList %call.elt, 0, !dbg !2232
  store ptr %call.elt.elt, ptr %tag_alloca, align 8, !dbg !2232
  %tag_alloca.repack29 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !2232
  %call.elt.elt30 = extractvalue %list.RocList %call.elt, 1, !dbg !2232
  store i64 %call.elt.elt30, ptr %tag_alloca.repack29, align 8, !dbg !2232
  %tag_alloca.repack31 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !2232
  %call.elt.elt32 = extractvalue %list.RocList %call.elt, 2, !dbg !2232
  store i64 %call.elt.elt32, ptr %tag_alloca.repack31, align 8, !dbg !2232
  %tag_alloca.repack27 = getelementptr inbounds { %list.RocList, i64 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2232
  %call.elt28 = extractvalue { %list.RocList, i64 } %call, 1, !dbg !2232
  store i64 %call.elt28, ptr %tag_alloca.repack27, align 8, !dbg !2232
  %tag_id_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2232
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !2232
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !2232
  ret void, !dbg !2232

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !2232
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element5, align 8, !dbg !2232
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 1, !dbg !2232
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !2232
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 2, !dbg !2232
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !2232
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca7, align 8, !dbg !2232
  %tag_alloca7.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca7, i64 0, i32 1, !dbg !2232
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca7.repack15, align 8, !dbg !2232
  %tag_alloca7.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca7, i64 0, i32 2, !dbg !2232
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca7.repack17, align 8, !dbg !2232
  %tag_id_ptr9 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca7, i64 0, i32 1, !dbg !2232
  store i8 0, ptr %tag_id_ptr9, align 8, !dbg !2232
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca7, i64 40, i1 false), !dbg !2232
  ret void, !dbg !2232
}

define internal fastcc void @Task_73_be4396db39a6441d11b625a7a53631db3ec9114c882a8283cb22efe73f3af1({} %"220", ptr %res, ptr %0) !dbg !2234 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %res, i64 80, i1 false), !dbg !2235
  ret void, !dbg !2235
}

define internal fastcc void @Inspect_dbgOpaque_8c1617b15deb6ada44e946aaf6d7a26f7b79d7376d5dbac46f3b7284463ec6c(ptr %"299", ptr %0) !dbg !2237 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !2238
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !2238
  tail call fastcc void @"#Attr_#dec_11"(ptr %"299"), !dbg !2238
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2238
  store i8 4, ptr %tag_id_ptr, align 8, !dbg !2238
  call fastcc void @Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !2238
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !2238
  ret void, !dbg !2238
}

define internal fastcc { { %str.RocStr, {} }, { [1 x i32], i8 } } @Task_onErr_9f3a262f8e9b981e8332887395f1a5ea4152740aaffa2174fd0379ce27d({ %str.RocStr, {} } %"101", ptr %transform) !dbg !2240 {
entry:
  %load_tag_to_put_in_struct = load { [1 x i32], i8 }, ptr %transform, align 4, !dbg !2241
  %insert_record_field = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } zeroinitializer, { %str.RocStr, {} } %"101", 0, !dbg !2241
  %insert_record_field1 = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %insert_record_field, { [1 x i32], i8 } %load_tag_to_put_in_struct, 1, !dbg !2241
  ret { { %str.RocStr, {} }, { [1 x i32], i8 } } %insert_record_field1, !dbg !2241
}

define internal fastcc i128 @Num_toU128_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(i64 %"#arg1") !dbg !2243 {
entry:
  %inc_cast = zext i64 %"#arg1" to i128, !dbg !2244
  ret i128 %inc_cast, !dbg !2244
}

define internal fastcc void @PlatformTasks_stdoutLine_abd3f25d72523f289bd425f520c9e8c780b1b6123fca48b121ea6d118bfcfeae(ptr %closure_arg_stdoutLine_0, ptr %0) !dbg !2246 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %closure_arg_stdoutLine_0, i64 24, i1 false), !dbg !2247
  ret void, !dbg !2247
}

define internal fastcc void @Task_await_68e2b08bd9d52962419b34161d37629bb39ebdc1099601d1d619dcfa78361({ %str.RocStr, {} } %"102", ptr %transform, ptr %0) !dbg !2249 {
entry:
  %struct_alloca = alloca { { %str.RocStr, {} }, { %list.RocList, %list.RocList } }, align 8
  %"102.elt" = extractvalue { %str.RocStr, {} } %"102", 0, !dbg !2250
  %"102.elt.elt" = extractvalue %str.RocStr %"102.elt", 0, !dbg !2250
  store ptr %"102.elt.elt", ptr %struct_alloca, align 8, !dbg !2250
  %struct_alloca.repack4 = getelementptr inbounds %str.RocStr, ptr %struct_alloca, i64 0, i32 1, !dbg !2250
  %"102.elt.elt5" = extractvalue %str.RocStr %"102.elt", 1, !dbg !2250
  store i64 %"102.elt.elt5", ptr %struct_alloca.repack4, align 8, !dbg !2250
  %struct_alloca.repack6 = getelementptr inbounds %str.RocStr, ptr %struct_alloca, i64 0, i32 2, !dbg !2250
  %"102.elt.elt7" = extractvalue %str.RocStr %"102.elt", 2, !dbg !2250
  store i64 %"102.elt.elt7", ptr %struct_alloca.repack6, align 8, !dbg !2250
  %struct_field_gep1 = getelementptr inbounds { { %str.RocStr, {} }, { %list.RocList, %list.RocList } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2250
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(48) %transform, i64 48, i1 false), !dbg !2250
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %struct_alloca, i64 72, i1 false), !dbg !2250
  ret void, !dbg !2250
}

define internal fastcc void @Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7(ptr %name, %list.RocList %fields, ptr %0) !dbg !2252 {
entry:
  %result_value5 = alloca { [6 x i64], i8 }, align 8, !dbg !2253
  %tag_alloca2 = alloca { [6 x i64], i8 }, align 8, !dbg !2253
  %struct_alloca = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2253
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !2253
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !2253
  %call = tail call fastcc i1 @List_isEmpty_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613(%list.RocList %fields), !dbg !2253
  br i1 %call, label %then_block, label %else_block, !dbg !2253

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !2253
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %name, align 8, !dbg !2253
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 1, !dbg !2253
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !2253
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 2, !dbg !2253
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !2253
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !2253
  %tag_alloca.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !2253
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca.repack15, align 8, !dbg !2253
  %tag_alloca.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !2253
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca.repack17, align 8, !dbg !2253
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2253
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !2253
  call fastcc void @Inspect_custom_5c8e2eddb65717d2b7a69c4d944bbaab3db37fe30ea4d8f6e4bc9d32cef(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !2253
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !2253
  ret void, !dbg !2253

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_39"(%list.RocList %fields, i64 1), !dbg !2253
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !2253
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %name, i64 24, i1 false), !dbg !2253
  %struct_field_gep1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !2253
  %fields.elt = extractvalue %list.RocList %fields, 0, !dbg !2253
  store ptr %fields.elt, ptr %struct_field_gep1, align 8, !dbg !2253
  %struct_field_gep1.repack6 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !2253
  %fields.elt7 = extractvalue %list.RocList %fields, 1, !dbg !2253
  store i64 %fields.elt7, ptr %struct_field_gep1.repack6, align 8, !dbg !2253
  %struct_field_gep1.repack8 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !2253
  %fields.elt9 = extractvalue %list.RocList %fields, 2, !dbg !2253
  store i64 %fields.elt9, ptr %struct_field_gep1.repack8, align 8, !dbg !2253
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !2253
  %tag_id_ptr4 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca2, i64 0, i32 1, !dbg !2253
  store i8 1, ptr %tag_id_ptr4, align 8, !dbg !2253
  call fastcc void @Inspect_custom_5c8e2eddb65717d2b7a69c4d944bbaab3db37fe30ea4d8f6e4bc9d32cef(ptr nonnull %tag_alloca2, ptr nonnull %result_value5), !dbg !2253
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value5, i64 56, i1 false), !dbg !2253
  ret void, !dbg !2253
}

define internal fastcc void @List_walkHelp_9c59e7328dd8975131b4ecbb517752a19f98ddf8f39456448f3da8e957ece54(%list.RocList %"423", ptr %"424", {} %"425", i64 %"426", i64 %"427", ptr %0) !dbg !2255 {
entry:
  %tmp_output_for_jmp6 = alloca %str.RocStr, align 8
  %result_value4 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %tmp_output_for_jmp = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#inc_38"(%list.RocList %"423", i64 1), !dbg !2256
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(24) %"424", i64 24, i1 false), !dbg !2256
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, i64 24, i1 false), !dbg !2256
  br label %joinpointcont, !dbg !2256

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg2 = phi i64 [ %"426", %entry ], [ %call5, %then_block ], !dbg !2256
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"427"), !dbg !2256
  br i1 %call, label %then_block, label %else_block, !dbg !2256

then_block:                                       ; preds = %joinpointcont
  call fastcc void @List_getUnsafe_3efb3241b6f76bcf29426c5d5647f69b665c3ac3b1fc474c237e0eea46afd1(%list.RocList %"423", i64 %joinpointarg2, ptr nonnull %result_value), !dbg !2256
  call fastcc void @"#Attr_#inc_13"(ptr nonnull %result_value, i64 1), !dbg !2256
  call fastcc void @Inspect_210_e93bf924107d8e1718c9a20bb89a13fa86198933bf2155d2785223e43180(ptr nonnull %joinpoint_arg_alloca, ptr nonnull %result_value, ptr nonnull %result_value4), !dbg !2256
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value), !dbg !2256
  %call5 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !2256
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !2256
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, i64 24, i1 false), !dbg !2256
  br label %joinpointcont, !dbg !2256

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_38"(%list.RocList %"423"), !dbg !2256
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, i64 24, i1 false), !dbg !2256
  ret void, !dbg !2256
}

define internal fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %"#arg1", i64 %"#arg2") !dbg !2258 {
entry:
  %lt_uint = icmp ult i64 %"#arg1", %"#arg2", !dbg !2259
  ret i1 %lt_uint, !dbg !2259
}

define internal fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %"300", ptr %added, ptr %0) !dbg !2261 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7(ptr %"300", ptr %added, ptr nonnull %result_value), !dbg !2262
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2262
  ret void, !dbg !2262
}

define internal fastcc void @Inspect_inspect_a6f9d2e440a05a8ff775b9c79f73de5b7f11f651fe1ab65164a352a63f168(ptr %val, ptr %0) !dbg !2264 {
entry:
  %result_value2 = alloca %str.RocStr, align 8
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca { [8 x i64], i8 }, align 8
  call fastcc void @"#Derived_toInspector_[Exit 2,FileReadErr 2,FileReadUtf8Err 2,NotFound 0,ParsingFailure 1,ParsingIncomplete 1,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd"(ptr %val, ptr nonnull %result_value), !dbg !2265
  call fastcc void @Inspect_dbgInit_14a58b912b778d42457329574d6284a94c25ccd4d26148cd2e979b6a93d4ec9({} zeroinitializer, ptr nonnull %result_value1), !dbg !2265
  call fastcc void @"#Derived_custom3_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3"(ptr nonnull %result_value1, ptr nonnull %result_value, ptr nonnull %result_value2), !dbg !2265
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value2, i64 24, i1 false), !dbg !2265
  ret void, !dbg !2265
}

define internal fastcc void @Inspect_206_5d11bf8fbc5bb94b04bedc4d418285061b56327f19ab74e865c9339638a2(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !2267 {
entry:
  %result_value8 = alloca %str.RocStr, align 8, !dbg !2268
  %const_str_store7 = alloca %str.RocStr, align 8, !dbg !2268
  %result_value6 = alloca %str.RocStr, align 8, !dbg !2268
  %result_value5 = alloca %str.RocStr, align 8, !dbg !2268
  %result_value = alloca %str.RocStr, align 8, !dbg !2268
  %const_str_store = alloca %str.RocStr, align 8, !dbg !2268
  %load_element4 = alloca %str.RocStr, align 8, !dbg !2268
  %get_opaque_data_ptr1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !2268
  %load_element.unpack = load ptr, ptr %get_opaque_data_ptr1, align 8, !dbg !2268
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !2268
  %load_element.elt9 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !2268
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !2268
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack10, 1, !dbg !2268
  %load_element.elt11 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !2268
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !2268
  %load_element13 = insertvalue %list.RocList %2, i64 %load_element.unpack12, 2, !dbg !2268
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !2268
  store ptr inttoptr (i64 40 to ptr), ptr %const_str_store, align 8, !dbg !2268
  %const_str_store.repack14 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2268
  store i64 0, ptr %const_str_store.repack14, align 8, !dbg !2268
  %const_str_store.repack15 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2268
  store i64 -9151314442816847872, ptr %const_str_store.repack15, align 8, !dbg !2268
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !2268
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !2268
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value, ptr nonnull %load_element4, ptr nonnull %result_value5), !dbg !2268
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element4), !dbg !2268
  call fastcc void @Inspect_208_c846cca2d7624ab0e322f5c02791833a36ae302c1d525dc8e88abea81952ea4(ptr nonnull %result_value5, %list.RocList %load_element13, ptr nonnull %result_value6), !dbg !2268
  call fastcc void @"#Attr_#dec_38"(%list.RocList %load_element13), !dbg !2268
  store ptr inttoptr (i64 41 to ptr), ptr %const_str_store7, align 8, !dbg !2268
  %const_str_store7.repack16 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 1, !dbg !2268
  store i64 0, ptr %const_str_store7.repack16, align 8, !dbg !2268
  %const_str_store7.repack17 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 2, !dbg !2268
  store i64 -9151314442816847872, ptr %const_str_store7.repack17, align 8, !dbg !2268
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value6, ptr nonnull %const_str_store7, ptr nonnull %result_value8), !dbg !2268
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store7), !dbg !2268
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !2268
  ret void, !dbg !2268
}

define internal fastcc void @Parser_skip_138ea5ad6c7ff33732a5a5a68f02ff094d89c5919c0c657b74d18468aec6eb(ptr %funParser, ptr %skipParser, ptr %0) !dbg !2270 {
entry:
  %result_value = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8
  %struct_alloca = alloca { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(80) %funParser, i64 80, i1 false), !dbg !2271
  %struct_field_gep1 = getelementptr inbounds { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2271
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(48) %skipParser, i64 48, i1 false), !dbg !2271
  call fastcc void @Parser_buildPrimitiveParser_a4a749317cf1faba11ffe043ffbc79292ac223379bd79cf21ddae8d83a3a(ptr nonnull %struct_alloca, ptr nonnull %result_value), !dbg !2271
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %result_value, i64 128, i1 false), !dbg !2271
  ret void, !dbg !2271
}

define internal fastcc %list.RocList @List_sortWith_49cb6ad1f356dc514791c661f63f6841479dc80eaa158e38e2871686552(%list.RocList %"#arg1", ptr %"#arg2") !dbg !2273 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %closure_data_ptr = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %closure_data_ptr, ptr noundef nonnull align 8 dereferenceable(64) %"#arg2", i64 64, i1 false), !dbg !2274
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !2274
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !2274
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !2274
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !2274
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !2274
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !2274
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !2274
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !2274
  call void @llvm.experimental.noalias.scope.decl(metadata !2276), !dbg !2274
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !2274
  call void @llvm.lifetime.start.p0(i64 24, ptr %0), !dbg !2274
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !2274
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !2274
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !2274
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !2274, !noalias !2276
  %2 = icmp ult i64 %.sroa.1.0.copyload.i, 2, !dbg !2274
  br i1 %2, label %3, label %4, !dbg !2274

3:                                                ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !2274
  br label %roc_builtins.list.sort_with.exit, !dbg !2274

4:                                                ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !2274, !noalias !2276
  call void @llvm.experimental.noalias.scope.decl(metadata !2279), !dbg !2274
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2274
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !2274, !noalias !2282
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !2274
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !2274, !noalias !2282
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2274
  %5 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !2274
  %6 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !2274
  %7 = or i64 %6, %5, !dbg !2274
  %8 = icmp ne i64 %7, 0, !dbg !2274
  %brmerge.i.i.i.i = select i1 %8, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2274
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !2274

list.RocList.isUnique.exit.i.i:                   ; preds = %4
  %9 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2274
  %.sroa.0.0.copyload.i.i = load ptr, ptr %1, align 8, !dbg !2274, !noalias !2282
  %10 = ptrtoint ptr %.sroa.0.0.copyload.i.i to i64, !dbg !2274
  %11 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !2274
  %12 = select i1 %9, i64 %11, i64 %10, !dbg !2274
  %13 = inttoptr i64 %12 to ptr, !dbg !2274
  %14 = getelementptr inbounds i64, ptr %13, i64 -1, !dbg !2274
  %15 = load i64, ptr %14, align 8, !dbg !2274, !noalias !2282
  %16 = icmp eq i64 %15, -9223372036854775808, !dbg !2274
  br i1 %16, label %list.RocList.isUnique.exit.thread.i.i, label %17, !dbg !2274

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !dbg !2274, !noalias !2276
  br label %list.RocList.makeUnique.exit.i, !dbg !2274

17:                                               ; preds = %list.RocList.isUnique.exit.i.i
  %18 = icmp eq i64 %.sroa.2.0.copyload.i.i, 0, !dbg !2274
  br i1 %18, label %.critedge.i.i.i, label %23, !dbg !2274

.critedge.i.i.i:                                  ; preds = %17
  %19 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2274
  %20 = icmp eq i64 %12, 0, !dbg !2274
  %or.cond.i.i.not69.i.i = select i1 %19, i1 true, i1 %20, !dbg !2274
  %.not.i.i.i.i = icmp eq i64 %15, 0, !dbg !2274
  %or.cond.i.i = select i1 %or.cond.i.i.not69.i.i, i1 true, i1 %.not.i.i.i.i, !dbg !2274
  br i1 %or.cond.i.i, label %list.RocList.decref.exit.i.i, label %21, !dbg !2274

21:                                               ; preds = %.critedge.i.i.i
  %22 = add nsw i64 %15, -1, !dbg !2274
  %sunkaddr.i.i = inttoptr i64 %12 to ptr, !dbg !2274
  %sunkaddr73.i.i = getelementptr inbounds i8, ptr %sunkaddr.i.i, i64 -8, !dbg !2274
  store i64 %22, ptr %sunkaddr73.i.i, align 8, !dbg !2274, !noalias !2282
  br label %list.RocList.decref.exit.i.i, !dbg !2274

list.RocList.decref.exit.i.i:                     ; preds = %21, %.critedge.i.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false), !dbg !2274, !alias.scope !2279, !noalias !2276
  br label %list.RocList.makeUnique.exit.i, !dbg !2274

23:                                               ; preds = %17
  %24 = call i64 @llvm.umax.i64(i64 8, i64 %.sroa.2.0.copyload.i.i), !dbg !2274
  %25 = mul nuw i64 %24, 8, !dbg !2274
  %26 = add nuw i64 %25, 8, !dbg !2274
  %27 = call ptr @roc_alloc(i64 %26, i32 8), !dbg !2274, !noalias !2283
  %28 = getelementptr inbounds i8, ptr %27, i64 8, !dbg !2274
  %29 = getelementptr inbounds i8, ptr %28, i64 -8, !dbg !2274
  store i64 -9223372036854775808, ptr %29, align 8, !dbg !2274, !noalias !2283
  %sunkaddr74.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2274
  %.sroa.1.0.copyload.pre.i.i = load i64, ptr %sunkaddr74.i.i, align 8, !dbg !2274, !noalias !2282
  %.pre.i.i = load ptr, ptr %1, align 8, !dbg !2274, !noalias !2282
  %30 = mul nuw i64 %.sroa.1.0.copyload.pre.i.i, 8, !dbg !2274
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %28, ptr align 1 %.pre.i.i, i64 %30, i1 false), !dbg !2274, !noalias !2282
  %.sroa.051.0.copyload58.i.i = load ptr, ptr %1, align 8, !dbg !2274, !noalias !2282
  %sunkaddr76.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !2274
  %.sroa.453.0.copyload60.i.i = load i64, ptr %sunkaddr76.i.i, align 8, !dbg !2274, !noalias !2282
  %31 = ptrtoint ptr %.sroa.051.0.copyload58.i.i to i64, !dbg !2274
  %32 = shl i64 %.sroa.453.0.copyload60.i.i, 1, !dbg !2274
  %isneg.i.i17.i.i = icmp slt i64 %.sroa.453.0.copyload60.i.i, 0, !dbg !2274
  %33 = select i1 %isneg.i.i17.i.i, i64 %32, i64 %31, !dbg !2274
  %34 = icmp ne i64 %.sroa.453.0.copyload60.i.i, 0, !dbg !2274
  %35 = icmp ne i64 %33, 0, !dbg !2274
  %or.cond.i.i18.i.i = select i1 %34, i1 %35, i1 false, !dbg !2274
  br i1 %or.cond.i.i18.i.i, label %36, label %list.RocList.decref.exit41.i.i, !dbg !2274

36:                                               ; preds = %23
  %37 = inttoptr i64 %33 to ptr, !dbg !2274
  %38 = getelementptr inbounds i64, ptr %37, i64 -1, !dbg !2274
  %39 = load i64, ptr %38, align 8, !dbg !2274, !noalias !2282
  %.not.i.i20.i.i = icmp eq i64 %39, 0, !dbg !2274
  br i1 %.not.i.i20.i.i, label %list.RocList.decref.exit41.i.i, label %40, !dbg !2274

40:                                               ; preds = %36
  %41 = add i64 %39, -1, !dbg !2274
  store i64 %41, ptr %38, align 8, !dbg !2274, !noalias !2282
  %42 = icmp eq i64 %39, -9223372036854775808, !dbg !2274
  br i1 %42, label %43, label %list.RocList.decref.exit41.i.i, !dbg !2274

43:                                               ; preds = %40
  call void @roc_dealloc(ptr nonnull align 1 %38, i32 8), !dbg !2274, !noalias !2282
  br label %list.RocList.decref.exit41.i.i, !dbg !2274

list.RocList.decref.exit41.i.i:                   ; preds = %43, %40, %36, %23
  store ptr %28, ptr %0, align 8, !dbg !2274, !alias.scope !2279, !noalias !2276
  %.sroa.450.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !2274
  store i64 %.sroa.2.0.copyload.i.i, ptr %.sroa.450.0..sroa_idx.i.i, align 8, !dbg !2274, !alias.scope !2279, !noalias !2276
  %.sroa.5.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !2274
  store i64 %24, ptr %.sroa.5.0..sroa_idx.i.i, align 8, !dbg !2274, !alias.scope !2279, !noalias !2276
  br label %list.RocList.makeUnique.exit.i, !dbg !2274

list.RocList.makeUnique.exit.i:                   ; preds = %list.RocList.decref.exit41.i.i, %list.RocList.decref.exit.i.i, %list.RocList.isUnique.exit.thread.i.i
  %.sroa.01.0.copyload.i = load ptr, ptr %0, align 8, !dbg !2274, !noalias !2276
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !2274
  %44 = load <2 x i64>, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2274, !noalias !2276
  %.not.i = icmp eq ptr %.sroa.01.0.copyload.i, null, !dbg !2274
  br i1 %.not.i, label %45, label %46, !dbg !2274

45:                                               ; preds = %46, %list.RocList.makeUnique.exit.i
  store ptr %.sroa.01.0.copyload.i, ptr %list_alloca, align 8, !dbg !2274, !alias.scope !2276
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !2274
  store <2 x i64> %44, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !2274, !alias.scope !2276
  br label %roc_builtins.list.sort_with.exit, !dbg !2274

46:                                               ; preds = %list.RocList.makeUnique.exit.i
  %47 = extractelement <2 x i64> %44, i64 0, !dbg !2274
  call fastcc void @sort.fluxsort(ptr nonnull align 1 %.sroa.01.0.copyload.i, i64 %47, ptr nonnull readonly align 1 @Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6_compare_wrapper, ptr align 1 %closure_data_ptr, i1 true, ptr nonnull readonly align 1 @"#Attr_#generic_rc_by_ref_11_inc_n", i64 8, i32 8, ptr nonnull readonly align 1 @"#Attr_#generic_copy_by_ref_5"), !dbg !2274, !noalias !2276
  br label %45, !dbg !2274

roc_builtins.list.sort_with.exit:                 ; preds = %3, %45
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !2274
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !2274
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !2274
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !2274
  %48 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !2274
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !2274
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !2274
  %49 = insertvalue %list.RocList %48, i64 %load_list.unpack7, 1, !dbg !2274
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !2274
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !2274
  %load_list10 = insertvalue %list.RocList %49, i64 %load_list.unpack9, 2, !dbg !2274
  call fastcc void @"#Attr_#dec_25"(ptr %"#arg2"), !dbg !2274
  ret %list.RocList %load_list10, !dbg !2274
}

define internal fastcc i64 @Num_subSaturated_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd(i64 %"#arg1", i64 %"#arg2") !dbg !2286 {
entry:
  %call = tail call i64 @llvm.usub.sat.i64(i64 %"#arg1", i64 %"#arg2"), !dbg !2287
  ret i64 %call, !dbg !2287
}

define internal fastcc i1 @Num_isZero_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a(i64 %"#arg1") !dbg !2289 {
entry:
  %eq_u64 = icmp eq i64 %"#arg1", 0, !dbg !2290
  ret i1 %eq_u64, !dbg !2290
}

define internal fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %"#arg1") !dbg !2292 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !2293
  ret i64 %list_len, !dbg !2293
}

define internal fastcc {} @Parser_const_887e5dbc5a127aeaabd14b2c267e70aea22136a56417cf32167bf9c4f523df7c({} %val) !dbg !2295 {
entry:
  %call = tail call fastcc {} @Parser_buildPrimitiveParser_3bdf755040d6ba4ff792958d1ba62a59c551c1b5d19e2604f6bb5215158({} %val), !dbg !2296
  ret {} %call, !dbg !2296
}

define internal fastcc void @List_walk_8445464738218c426e3b841f28ede2879d4391e6c33df6a616e872e199e47e(%list.RocList %list, ptr %init, {} %func, ptr %0) !dbg !2298 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !2299
  %call = tail call fastcc i64 @List_len_46df57811ab9544a1f9313aab57b6ce51825f299caf5a1ffe2569412f3ed972(%list.RocList %list), !dbg !2299
  call fastcc void @List_walkHelp_c162bfc0bd74c841e2898960cc4e5160ab1032997985dd3fe7da33cf844631d(%list.RocList %list, ptr %init, {} %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !2299
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !2299
  ret void, !dbg !2299
}

define internal fastcc void @String_string_dd534565178f1d68b111fdc2e326a0805311eecf8c9a1da323c0af98ffe3(ptr %expectedString, ptr %0) !dbg !2301 {
entry:
  %result_value = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2302
  tail call fastcc void @"#Attr_#inc_13"(ptr %expectedString, i64 1), !dbg !2302
  %call = tail call fastcc %list.RocList @String_strToRaw_ef4fd8e61cea3e28e02cea992acb5b69ff53641f7df759d72efd1ca2d6d2741(ptr %expectedString), !dbg !2302
  %call1 = tail call fastcc %list.RocList @String_utf8_cda5515bdfb774a8a73a1987c442daa5c0626be61cb25c91fd79ef75941318bb(%list.RocList %call), !dbg !2302
  call fastcc void @Parser_map_7044b319d821d554360e6668147629f3b5e31e3a1bed8f16e699f54194dd(%list.RocList %call1, ptr %expectedString, ptr nonnull %result_value), !dbg !2302
  call fastcc void @"#Attr_#dec_12"(%list.RocList %call1), !dbg !2302
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !2302
  ret void, !dbg !2302
}

define internal fastcc i64 @Num_toU64_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e(i8 %"#arg1") !dbg !2304 {
entry:
  %inc_cast = zext i8 %"#arg1" to i64, !dbg !2305
  ret i64 %inc_cast, !dbg !2305
}

define internal fastcc %list.RocList @List_reserve_af58df284beb8fc541e167d520a5c53bd3e05fcd2fb56799b9aee4cfc3ed3f(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2307 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !2308
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !2308
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !2308
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !2308
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !2308
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !2308
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !2308
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !2308
  call void @llvm.experimental.noalias.scope.decl(metadata !2310), !dbg !2308
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !2308
  call void @llvm.lifetime.start.p0(i64 24, ptr %0), !dbg !2308
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !2308
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !2308
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !2308
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !2308, !noalias !2310
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !2308
  %.sroa.2.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !2308, !noalias !2310
  %isneg.i.i = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !2308
  %2 = call i64 @llvm.smax.i64(i64 %.sroa.2.0.copyload.i, i64 0), !dbg !2308
  %3 = select i1 %isneg.i.i, i64 %.sroa.1.0.copyload.i, i64 0, !dbg !2308
  %4 = or i64 %3, %2, !dbg !2308
  %5 = call i64 @llvm.uadd.sat.i64(i64 %.sroa.1.0.copyload.i, i64 %"#arg2"), !dbg !2308
  %6 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !2308
  %7 = icmp ne i64 %4, 0, !dbg !2308
  %brmerge.i.i.i = select i1 %7, i1 true, i1 %6, !dbg !2308
  br i1 %brmerge.i.i.i, label %.critedge.i.i.i, label %list.RocList.isUnique.exit.i, !dbg !2308

.critedge.i.i.i:                                  ; preds = %entry
  %8 = icmp slt i64 %.sroa.2.0.copyload.i, 0, !dbg !2308
  %.sroa.012.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !2308, !noalias !2310
  %9 = ptrtoint ptr %.sroa.012.0.copyload.i to i64, !dbg !2308
  %10 = shl i64 %.sroa.2.0.copyload.i, 1, !dbg !2308
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !2308
  %12 = inttoptr i64 %11 to ptr, !dbg !2308
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !2308
  %14 = load i64, ptr %13, align 8, !dbg !2308, !noalias !2310
  %15 = icmp eq i64 %14, -9223372036854775808, !dbg !2308
  br label %list.RocList.isUnique.exit.i, !dbg !2308

list.RocList.isUnique.exit.i:                     ; preds = %.critedge.i.i.i, %entry
  %common.ret.op.i.i.i = phi i1 [ %15, %.critedge.i.i.i ], [ true, %entry ], !dbg !2308
  %16 = icmp uge i64 %4, %5, !dbg !2308
  %or.cond.i = select i1 %common.ret.op.i.i.i, i1 %16, i1 false, !dbg !2308
  br i1 %or.cond.i, label %17, label %.critedge2.i, !dbg !2308

17:                                               ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !2308
  br label %roc_builtins.list.reserve.exit, !dbg !2308

.critedge2.i:                                     ; preds = %list.RocList.isUnique.exit.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !2308, !noalias !2310
  call void @llvm.experimental.noalias.scope.decl(metadata !2313), !dbg !2308
  %18 = load ptr, ptr %1, align 8, !dbg !2308, !noalias !2316
  %.not.i.i = icmp eq ptr %18, null, !dbg !2308
  br i1 %.not.i.i, label %32, label %19, !dbg !2308

19:                                               ; preds = %.critedge2.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2308
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !2308, !noalias !2316
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !2308
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !2308, !noalias !2316
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2308
  %20 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !2308
  %21 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !2308
  %22 = or i64 %21, %20, !dbg !2308
  %23 = icmp ne i64 %22, 0, !dbg !2308
  %brmerge.i.i.i.i = select i1 %23, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2308
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !2308

list.RocList.isUnique.exit.i.i:                   ; preds = %19
  %24 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2308
  %25 = ptrtoint ptr %18 to i64, !dbg !2308
  %26 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !2308
  %27 = select i1 %24, i64 %26, i64 %25, !dbg !2308
  %28 = inttoptr i64 %27 to ptr, !dbg !2308
  %29 = getelementptr inbounds i64, ptr %28, i64 -1, !dbg !2308
  %30 = load i64, ptr %29, align 8, !dbg !2308, !noalias !2316
  %31 = icmp ne i64 %30, -9223372036854775808, !dbg !2308
  %brmerge.i.i = select i1 %31, i1 true, i1 %24, !dbg !2308
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !2308

32:                                               ; preds = %.critedge2.i
  %33 = icmp eq i64 %5, 0, !dbg !2308
  br i1 %33, label %list.RocList.allocate.exit.i.i, label %34, !dbg !2308

34:                                               ; preds = %32
  %35 = call i64 @llvm.umax.i64(i64 2, i64 %5), !dbg !2308
  %36 = mul nuw i64 %35, 24, !dbg !2308
  %37 = add nuw i64 %36, 16, !dbg !2308
  %38 = call ptr @roc_alloc(i64 %37, i32 8), !dbg !2308, !noalias !2317
  %39 = getelementptr inbounds i8, ptr %38, i64 16, !dbg !2308
  %40 = getelementptr inbounds i8, ptr %39, i64 -8, !dbg !2308
  store i64 -9223372036854775808, ptr %40, align 8, !dbg !2308, !noalias !2317
  br label %list.RocList.allocate.exit.i.i, !dbg !2308

list.RocList.allocate.exit.i.i:                   ; preds = %34, %32
  %.sroa.418.0.i.i = phi i64 [ %35, %34 ], [ 0, %32 ], !dbg !2308
  %.sroa.016.0.i.i = phi ptr [ %39, %34 ], [ null, %32 ], !dbg !2308
  store ptr %.sroa.016.0.i.i, ptr %0, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !2308
  store i64 %5, ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !2308
  store i64 %.sroa.418.0.i.i, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  br label %list.RocList.reallocate.exit.i, !dbg !2308

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i, %19
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i.i, %5, !dbg !2308
  br i1 %.not7.i.i, label %66, label %63, !dbg !2308

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %41 = icmp eq i64 %5, 0, !dbg !2308
  br i1 %41, label %list.RocList.allocate.exit.i.i.i, label %42, !dbg !2308

42:                                               ; preds = %.critedge.i.i
  %43 = call i64 @llvm.umax.i64(i64 2, i64 %5), !dbg !2308
  %44 = mul nuw i64 %43, 24, !dbg !2308
  %45 = add nuw i64 %44, 16, !dbg !2308
  %46 = call ptr @roc_alloc(i64 %45, i32 8), !dbg !2308, !noalias !2320
  %47 = getelementptr inbounds i8, ptr %46, i64 16, !dbg !2308
  %48 = getelementptr inbounds i8, ptr %47, i64 -8, !dbg !2308
  store i64 -9223372036854775808, ptr %48, align 8, !dbg !2308, !noalias !2320
  br label %list.RocList.allocate.exit.i.i.i, !dbg !2308

.loopexit.i.i.i:                                  ; preds = %.lr.ph.i.i.i, %list.RocList.allocate.exit.i.i.i
  %49 = icmp ne i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2308
  %50 = icmp ne i64 %27, 0, !dbg !2308
  %or.cond.i.i.i.i = select i1 %49, i1 %50, i1 false, !dbg !2308
  br i1 %or.cond.i.i.i.i, label %51, label %list.RocList.reallocateFresh.exit.i.i, !dbg !2308

51:                                               ; preds = %.loopexit.i.i.i
  %52 = load i64, ptr %29, align 8, !dbg !2308, !noalias !2325
  %.not.i.i.i.i = icmp eq i64 %52, 0, !dbg !2308
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %53, !dbg !2308

53:                                               ; preds = %51
  %54 = add i64 %52, -1, !dbg !2308
  store i64 %54, ptr %29, align 8, !dbg !2308, !noalias !2325
  %55 = icmp eq i64 %52, -9223372036854775808, !dbg !2308
  br i1 %55, label %56, label %list.RocList.reallocateFresh.exit.i.i, !dbg !2308

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, ptr %29, i64 -8, !dbg !2308
  call void @roc_dealloc(ptr nonnull align 1 %57, i32 8), !dbg !2308, !noalias !2325
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !2308

list.RocList.allocate.exit.i.i.i:                 ; preds = %42, %.critedge.i.i
  %.sroa.0.0.i.i.i = phi ptr [ %47, %42 ], [ null, %.critedge.i.i ], !dbg !2308
  %.sroa.5.0.i.i.i = phi i64 [ %43, %42 ], [ 0, %.critedge.i.i ], !dbg !2308
  %58 = mul nuw i64 %.sroa.2.0.copyload.i.i, 24, !dbg !2308
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %.sroa.0.0.i.i.i, ptr nonnull align 1 %18, i64 %58, i1 false), !dbg !2308, !noalias !2325
  %59 = getelementptr inbounds i8, ptr %.sroa.0.0.i.i.i, i64 %58, !dbg !2308
  %60 = sub i64 %5, %.sroa.2.0.copyload.i.i, !dbg !2308
  %61 = mul i64 %60, 24, !dbg !2308
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %59, i8 0, i64 %61, i1 false), !dbg !2308, !noalias !2325
  %62 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !2308
  br i1 %62, label %.lr.ph.i.preheader.i.i, label %.loopexit.i.i.i, !dbg !2308

.lr.ph.i.preheader.i.i:                           ; preds = %list.RocList.allocate.exit.i.i.i
  br label %.lr.ph.i.i.i, !dbg !2308

.lr.ph.i.i.i:                                     ; preds = %.lr.ph.i.i.i, %.lr.ph.i.preheader.i.i
  %lsr.iv21.i.i = phi ptr [ %.sroa.0.0.i.i.i, %.lr.ph.i.preheader.i.i ], [ %uglygep.i.i, %.lr.ph.i.i.i ], !dbg !2308
  %lsr.iv.i.i = phi i64 [ %.sroa.2.0.copyload.i.i, %.lr.ph.i.preheader.i.i ], [ %lsr.iv.next.i.i, %.lr.ph.i.i.i ], !dbg !2308
  %load_opaque.i = load %list.RocList, ptr %lsr.iv21.i.i, align 8, !dbg !2326, !noalias !2325
  call fastcc void @"#Attr_#inc_1"(%list.RocList %load_opaque.i, i64 1) #18, !dbg !2326, !noalias !2325
  %lsr.iv.next.i.i = add i64 %lsr.iv.i.i, -1, !dbg !2308
  %uglygep.i.i = getelementptr i8, ptr %lsr.iv21.i.i, i64 24, !dbg !2308
  %exitcond.not.i.i.i = icmp eq i64 %lsr.iv.next.i.i, 0, !dbg !2308
  br i1 %exitcond.not.i.i.i, label %.loopexit.i.i.i, label %.lr.ph.i.i.i, !dbg !2308

list.RocList.reallocateFresh.exit.i.i:            ; preds = %56, %53, %51, %.loopexit.i.i.i
  store ptr %.sroa.0.0.i.i.i, ptr %0, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !2308
  store i64 %5, ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !2308
  store i64 %.sroa.5.0.i.i.i, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  br label %list.RocList.reallocate.exit.i, !dbg !2308

63:                                               ; preds = %.thread.i.i
  store ptr %18, ptr %0, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %64 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !2308
  store i64 %5, ptr %64, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %65 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !2308
  store i64 %.sroa.3.0.copyload.i.i, ptr %65, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  br label %list.RocList.reallocate.exit.i, !dbg !2308

66:                                               ; preds = %.thread.i.i
  %67 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2308
  br i1 %67, label %79, label %80, !dbg !2308

.split1.i.i:                                      ; preds = %73, %.split.i.i
  %phi.call.i.i = phi ptr [ %78, %73 ], [ %18, %.split.i.i ], !dbg !2308
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %68 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !2308
  store i64 %5, ptr %68, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  %69 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !2308
  store i64 %70, ptr %69, align 8, !dbg !2308, !alias.scope !2313, !noalias !2310
  br label %list.RocList.reallocate.exit.i, !dbg !2308

.split.i.i:                                       ; preds = %88, %86, %82, %79
  %.0.i.i = phi i64 [ %83, %82 ], [ %87, %86 ], [ %91, %88 ], [ 2, %79 ], !dbg !2308
  %70 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %5), !dbg !2308
  %71 = mul nuw i64 %.sroa.3.0.copyload.i.i, 24, !dbg !2308
  %72 = mul nuw i64 %70, 24, !dbg !2308
  %.not.i9.i.i = icmp ult i64 %71, %72, !dbg !2308
  br i1 %.not.i9.i.i, label %73, label %.split1.i.i, !dbg !2308

73:                                               ; preds = %.split.i.i
  %74 = add nuw i64 %72, 16, !dbg !2308
  %75 = add nuw i64 %71, 16, !dbg !2308
  %76 = getelementptr inbounds i8, ptr %18, i64 -16, !dbg !2308
  %77 = call ptr @roc_realloc(ptr nonnull align 1 %76, i64 %74, i64 %75, i32 8), !dbg !2308, !noalias !2316
  %78 = getelementptr inbounds i8, ptr %77, i64 16, !dbg !2308
  br label %.split1.i.i, !dbg !2308

79:                                               ; preds = %66
  br label %.split.i.i, !dbg !2308

80:                                               ; preds = %66
  %81 = icmp ult i64 %.sroa.3.0.copyload.i.i, 170, !dbg !2308
  br i1 %81, label %82, label %84, !dbg !2308

82:                                               ; preds = %80
  %83 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !2308
  br label %.split.i.i, !dbg !2308

84:                                               ; preds = %80
  %85 = icmp ugt i64 %.sroa.3.0.copyload.i.i, 5461, !dbg !2308
  br i1 %85, label %86, label %88, !dbg !2308

86:                                               ; preds = %84
  %87 = shl nuw i64 %.sroa.3.0.copyload.i.i, 1, !dbg !2308
  br label %.split.i.i, !dbg !2308

88:                                               ; preds = %84
  %89 = mul nuw i64 %.sroa.3.0.copyload.i.i, 3, !dbg !2308
  %90 = add nuw i64 %89, 1, !dbg !2308
  %91 = lshr i64 %90, 1, !dbg !2308
  br label %.split.i.i, !dbg !2308

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %63, %list.RocList.reallocateFresh.exit.i.i, %list.RocList.allocate.exit.i.i
  %.sroa.03.0.copyload.i = load ptr, ptr %0, align 8, !dbg !2308, !noalias !2310
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !2308
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2308, !noalias !2310
  store ptr %.sroa.03.0.copyload.i, ptr %list_alloca, align 8, !dbg !2308, !alias.scope !2310
  %.sroa.25.0..sroa_idx6.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !2308
  store i64 %.sroa.1.0.copyload.i, ptr %.sroa.25.0..sroa_idx6.i, align 8, !dbg !2308, !alias.scope !2310
  %.sroa.3.0..sroa_idx8.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !2308
  store i64 %.sroa.3.0.copyload.i, ptr %.sroa.3.0..sroa_idx8.i, align 8, !dbg !2308, !alias.scope !2310
  br label %roc_builtins.list.reserve.exit, !dbg !2308

roc_builtins.list.reserve.exit:                   ; preds = %17, %list.RocList.reallocate.exit.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !2308
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !2308
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !2308
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !2308
  %92 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !2308
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !2308
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !2308
  %93 = insertvalue %list.RocList %92, i64 %load_list.unpack7, 1, !dbg !2308
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !2308
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !2308
  %load_list10 = insertvalue %list.RocList %93, i64 %load_list.unpack9, 2, !dbg !2308
  ret %list.RocList %load_list10, !dbg !2308
}

define internal fastcc void @Inspect_custom_4f0c3ffeaf2618fe6c22c9b81e4cd03dd527d786a9b7fcb5f645d1f7239bd5(ptr %fn, ptr %0) !dbg !2328 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %fn, i64 56, i1 false), !dbg !2329
  ret void, !dbg !2329
}

define internal fastcc void @Dict_213_5d5899d97eec8f628ea2a69ef616fa6c36bb808ec07e672cff8f94c1b6c031da(ptr %"741", ptr %0) !dbg !2331 {
entry:
  %struct_field = alloca { [3 x i64], i8 }, align 8, !dbg !2332
  %struct_field_access_record_1 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %"741", i64 0, i32 1, !dbg !2332
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field, ptr noundef nonnull align 8 dereferenceable(32) %struct_field_access_record_1, i64 32, i1 false), !dbg !2332
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %struct_field, i64 32, i1 false), !dbg !2332
  ret void, !dbg !2332
}

define internal fastcc %list.RocList @List_withCapacity_4bd18bc73cee8d6c664141b2e49674ebb21216aa20f0f89293181ce7b14e(i64 %"#arg1") !dbg !2334 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  call void @llvm.experimental.noalias.scope.decl(metadata !2335), !dbg !2338
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %0), !dbg !2338, !noalias !2335
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %1), !dbg !2338, !noalias !2335
  %.old.not.i.not.i = icmp eq i64 %"#arg1", 0, !dbg !2338
  br i1 %.old.not.i.not.i, label %roc_builtins.list.with_capacity.exit, label %.critedge2.i.i, !dbg !2338

.critedge2.i.i:                                   ; preds = %entry
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, i8 0, i64 24, i1 false), !dbg !2338, !noalias !2335
  call void @llvm.experimental.noalias.scope.decl(metadata !2340), !dbg !2338
  %2 = load ptr, ptr %1, align 8, !dbg !2338, !noalias !2343
  %.not.i.i = icmp eq ptr %2, null, !dbg !2338
  br i1 %.not.i.i, label %16, label %3, !dbg !2338

3:                                                ; preds = %.critedge2.i.i
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2338
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !2338, !noalias !2343
  %.sroa.3.0..sroa_idx.i1.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !2338
  %.sroa.3.0.copyload.i2.i = load i64, ptr %.sroa.3.0..sroa_idx.i1.i, align 8, !dbg !2338, !noalias !2343
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !2338
  %4 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i2.i, i64 0), !dbg !2338
  %5 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !2338
  %6 = or i64 %5, %4, !dbg !2338
  %7 = icmp ne i64 %6, 0, !dbg !2338
  %brmerge.i.i.i.i = select i1 %7, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2338
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !2338

list.RocList.isUnique.exit.i.i:                   ; preds = %3
  %8 = icmp slt i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !2338
  %9 = ptrtoint ptr %2 to i64, !dbg !2338
  %10 = shl i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !2338
  %11 = select i1 %8, i64 %10, i64 %9, !dbg !2338
  %12 = inttoptr i64 %11 to ptr, !dbg !2338
  %13 = getelementptr inbounds i64, ptr %12, i64 -1, !dbg !2338
  %14 = load i64, ptr %13, align 8, !dbg !2338, !noalias !2343
  %15 = icmp ne i64 %14, -9223372036854775808, !dbg !2338
  %brmerge.i.i = select i1 %15, i1 true, i1 %8, !dbg !2338
  br i1 %brmerge.i.i, label %.critedge.i.i, label %.thread.i.i, !dbg !2338

16:                                               ; preds = %.critedge2.i.i
  %17 = icmp eq i64 %"#arg1", 0, !dbg !2338
  br i1 %17, label %list.RocList.allocate.exit.i.i, label %18, !dbg !2338

18:                                               ; preds = %16
  %19 = call i64 @llvm.umax.i64(i64 8, i64 %"#arg1"), !dbg !2338
  %20 = mul nuw i64 %19, 8, !dbg !2338
  %21 = add nuw i64 %20, 8, !dbg !2338
  %22 = call ptr @roc_alloc(i64 %21, i32 8), !dbg !2338, !noalias !2346
  %23 = getelementptr inbounds i8, ptr %22, i64 8, !dbg !2338
  %24 = getelementptr inbounds i8, ptr %23, i64 -8, !dbg !2338
  store i64 -9223372036854775808, ptr %24, align 8, !dbg !2338, !noalias !2346
  br label %list.RocList.allocate.exit.i.i, !dbg !2338

list.RocList.allocate.exit.i.i:                   ; preds = %18, %16
  %.sroa.418.0.i.i = phi i64 [ %19, %18 ], [ 0, %16 ], !dbg !2338
  %.sroa.016.0.i.i = phi ptr [ %23, %18 ], [ null, %16 ], !dbg !2338
  store ptr %.sroa.016.0.i.i, ptr %0, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %.sroa.317.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !2338
  store i64 %"#arg1", ptr %.sroa.317.0..sroa_idx.i.i, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %.sroa.418.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !2338
  store i64 %.sroa.418.0.i.i, ptr %.sroa.418.0..sroa_idx.i.i, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  br label %list.RocList.reallocate.exit.i, !dbg !2338

.thread.i.i:                                      ; preds = %list.RocList.isUnique.exit.i.i, %3
  %.not7.i.i = icmp ult i64 %.sroa.3.0.copyload.i2.i, %"#arg1", !dbg !2338
  br i1 %.not7.i.i, label %49, label %46, !dbg !2338

.critedge.i.i:                                    ; preds = %list.RocList.isUnique.exit.i.i
  %25 = icmp eq i64 %"#arg1", 0, !dbg !2338
  br i1 %25, label %list.RocList.allocate.exit.i.i.i, label %26, !dbg !2338

26:                                               ; preds = %.critedge.i.i
  %27 = call i64 @llvm.umax.i64(i64 8, i64 %"#arg1"), !dbg !2338
  %28 = mul nuw i64 %27, 8, !dbg !2338
  %29 = add nuw i64 %28, 8, !dbg !2338
  %30 = call ptr @roc_alloc(i64 %29, i32 8), !dbg !2338, !noalias !2350
  %31 = getelementptr inbounds i8, ptr %30, i64 8, !dbg !2338
  %32 = getelementptr inbounds i8, ptr %31, i64 -8, !dbg !2338
  store i64 -9223372036854775808, ptr %32, align 8, !dbg !2338, !noalias !2350
  br label %list.RocList.allocate.exit.i.i.i, !dbg !2338

33:                                               ; preds = %list.RocList.allocate.exit.i.i.i
  %34 = load i64, ptr %13, align 8, !dbg !2338, !noalias !2355
  %.not.i.i.i.i = icmp eq i64 %34, 0, !dbg !2338
  br i1 %.not.i.i.i.i, label %list.RocList.reallocateFresh.exit.i.i, label %35, !dbg !2338

35:                                               ; preds = %33
  %36 = add i64 %34, -1, !dbg !2338
  store i64 %36, ptr %13, align 8, !dbg !2338, !noalias !2355
  %37 = icmp eq i64 %34, -9223372036854775808, !dbg !2338
  br i1 %37, label %38, label %list.RocList.reallocateFresh.exit.i.i, !dbg !2338

38:                                               ; preds = %35
  call void @roc_dealloc(ptr nonnull align 1 %13, i32 8), !dbg !2338, !noalias !2355
  br label %list.RocList.reallocateFresh.exit.i.i, !dbg !2338

list.RocList.allocate.exit.i.i.i:                 ; preds = %26, %.critedge.i.i
  %.sroa.0.0.i.i.i = phi ptr [ %31, %26 ], [ null, %.critedge.i.i ], !dbg !2338
  %.sroa.5.0.i.i.i = phi i64 [ %27, %26 ], [ 0, %.critedge.i.i ], !dbg !2338
  %39 = mul nuw i64 %.sroa.2.0.copyload.i.i, 8, !dbg !2338
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %.sroa.0.0.i.i.i, ptr nonnull align 1 %2, i64 %39, i1 false), !dbg !2338, !noalias !2355
  %40 = getelementptr inbounds i8, ptr %.sroa.0.0.i.i.i, i64 %39, !dbg !2338
  %41 = sub i64 %"#arg1", %.sroa.2.0.copyload.i.i, !dbg !2338
  %42 = mul i64 %41, 8, !dbg !2338
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %40, i8 0, i64 %42, i1 false), !dbg !2338, !noalias !2355
  %43 = icmp ne i64 %.sroa.2.0.copyload.i.i, 0, !dbg !2338
  %44 = icmp ne i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !2338
  %45 = icmp ne i64 %11, 0, !dbg !2338
  %or.cond.i.i.i.i = select i1 %44, i1 %45, i1 false, !dbg !2338
  br i1 %or.cond.i.i.i.i, label %33, label %list.RocList.reallocateFresh.exit.i.i, !dbg !2338

list.RocList.reallocateFresh.exit.i.i:            ; preds = %38, %35, %33, %list.RocList.allocate.exit.i.i.i
  store ptr %.sroa.0.0.i.i.i, ptr %0, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %.sroa.214.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !2338
  store i64 %"#arg1", ptr %.sroa.214.0..sroa_idx.i.i, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %.sroa.315.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !2338
  store i64 %.sroa.5.0.i.i.i, ptr %.sroa.315.0..sroa_idx.i.i, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  br label %list.RocList.reallocate.exit.i, !dbg !2338

46:                                               ; preds = %.thread.i.i
  store ptr %2, ptr %0, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %47 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !2338
  store i64 %"#arg1", ptr %47, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %48 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !2338
  store i64 %.sroa.3.0.copyload.i2.i, ptr %48, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  br label %list.RocList.reallocate.exit.i, !dbg !2338

49:                                               ; preds = %.thread.i.i
  %50 = icmp eq i64 %.sroa.3.0.copyload.i2.i, 0, !dbg !2338
  br i1 %50, label %62, label %63, !dbg !2338

.split1.i.i:                                      ; preds = %56, %.split.i.i
  %phi.call.i.i = phi ptr [ %61, %56 ], [ %2, %.split.i.i ], !dbg !2338
  store ptr %phi.call.i.i, ptr %0, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %51 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 1, !dbg !2338
  store i64 %"#arg1", ptr %51, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  %52 = getelementptr inbounds %list.RocList, ptr %0, i64 0, i32 2, !dbg !2338
  store i64 %53, ptr %52, align 8, !dbg !2338, !alias.scope !2340, !noalias !2349
  br label %list.RocList.reallocate.exit.i, !dbg !2338

.split.i.i:                                       ; preds = %71, %69, %65, %62
  %.0.i.i = phi i64 [ %66, %65 ], [ %70, %69 ], [ %74, %71 ], [ 8, %62 ], !dbg !2338
  %53 = call i64 @llvm.umax.i64(i64 %.0.i.i, i64 %"#arg1"), !dbg !2338
  %54 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 8, !dbg !2338
  %55 = mul nuw i64 %53, 8, !dbg !2338
  %.not.i9.i.i = icmp ult i64 %54, %55, !dbg !2338
  br i1 %.not.i9.i.i, label %56, label %.split1.i.i, !dbg !2338

56:                                               ; preds = %.split.i.i
  %57 = add nuw i64 %55, 8, !dbg !2338
  %58 = add nuw i64 %54, 8, !dbg !2338
  %59 = getelementptr inbounds i8, ptr %2, i64 -8, !dbg !2338
  %60 = call ptr @roc_realloc(ptr nonnull align 1 %59, i64 %57, i64 %58, i32 4), !dbg !2338, !noalias !2343
  %61 = getelementptr inbounds i8, ptr %60, i64 8, !dbg !2338
  br label %.split1.i.i, !dbg !2338

62:                                               ; preds = %49
  br label %.split.i.i, !dbg !2338

63:                                               ; preds = %49
  %64 = icmp ult i64 %.sroa.3.0.copyload.i2.i, 512, !dbg !2338
  br i1 %64, label %65, label %67, !dbg !2338

65:                                               ; preds = %63
  %66 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !2338
  br label %.split.i.i, !dbg !2338

67:                                               ; preds = %63
  %68 = icmp ugt i64 %.sroa.3.0.copyload.i2.i, 16384, !dbg !2338
  br i1 %68, label %69, label %71, !dbg !2338

69:                                               ; preds = %67
  %70 = shl nuw i64 %.sroa.3.0.copyload.i2.i, 1, !dbg !2338
  br label %.split.i.i, !dbg !2338

71:                                               ; preds = %67
  %72 = mul nuw i64 %.sroa.3.0.copyload.i2.i, 3, !dbg !2338
  %73 = add nuw i64 %72, 1, !dbg !2338
  %74 = lshr i64 %73, 1, !dbg !2338
  br label %.split.i.i, !dbg !2338

list.RocList.reallocate.exit.i:                   ; preds = %.split1.i.i, %46, %list.RocList.reallocateFresh.exit.i.i, %list.RocList.allocate.exit.i.i
  %.sroa.03.0.copyload.i.i = load ptr, ptr %0, align 8, !dbg !2338, !noalias !2349
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !2338
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !2338, !noalias !2349
  br label %roc_builtins.list.with_capacity.exit, !dbg !2338

roc_builtins.list.with_capacity.exit:             ; preds = %entry, %list.RocList.reallocate.exit.i
  %.sroa.4.0.i = phi i64 [ %.sroa.3.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ 0, %entry ], !dbg !2338
  %.sroa.0.0.i = phi ptr [ %.sroa.03.0.copyload.i.i, %list.RocList.reallocate.exit.i ], [ null, %entry ], !dbg !2338
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %0), !dbg !2338, !noalias !2335
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %1), !dbg !2338, !noalias !2335
  store ptr %.sroa.0.0.i, ptr %list_alloca, align 8, !dbg !2338, !alias.scope !2335
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !2338
  store i64 0, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2338, !alias.scope !2335
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !2338
  store i64 %.sroa.4.0.i, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2338, !alias.scope !2335
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !2338
  %75 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !2338
  %load_list.elt1 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !2338
  %load_list.unpack2 = load i64, ptr %load_list.elt1, align 8, !dbg !2338
  %76 = insertvalue %list.RocList %75, i64 %load_list.unpack2, 1, !dbg !2338
  %load_list.elt3 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !2338
  %load_list.unpack4 = load i64, ptr %load_list.elt3, align 8, !dbg !2338
  %load_list5 = insertvalue %list.RocList %76, i64 %load_list.unpack4, 2, !dbg !2338
  ret %list.RocList %load_list5, !dbg !2338
}

define internal fastcc i32 @_7_ed66f261fc50a6eaee12f77aeb9aedefd9894b0b5b2ba1297f2d6ae1a3a6187(ptr %"26", ptr %"#arg_closure") !dbg !2356 {
entry:
  tail call fastcc void @"#Attr_#dec_37"(ptr %"26"), !dbg !2357
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !2357
  %call = tail call fastcc i32 @Task_err_16c9acb11420bb4864958cb65deec56be7d76275852725d2b6cfa6b292a31ee8(i32 %load_element), !dbg !2357
  ret i32 %call, !dbg !2357
}

define internal fastcc { %list.RocList, i64 } @Dict_removeBucketHelper_6e2f5c347617f02c84c4ee1199b6f064c2d91a5297c3fa525844f328c49949(%list.RocList %"432", i64 %"433") !dbg !2359 {
entry:
  br label %joinpointcont, !dbg !2360

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg = phi %list.RocList [ %"432", %entry ], [ %call10, %then_block ], !dbg !2360
  %joinpointarg1 = phi i64 [ %"433", %entry ], [ %call2, %then_block ], !dbg !2360
  %call = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %joinpointarg), !dbg !2360
  %call2 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg1, i64 %call), !dbg !2360
  %call3 = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %joinpointarg, i64 %call2), !dbg !2360
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call3, 1, !dbg !2360
  %call4 = tail call fastcc i32 @Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d(), !dbg !2360
  %call5 = tail call fastcc i32 @Num_mulWrap_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31(i32 %call4, i32 2), !dbg !2360
  %call6 = tail call fastcc i1 @Num_isGte_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d(i32 %struct_field_access_record_1, i32 %call5), !dbg !2360
  br i1 %call6, label %then_block, label %else_block, !dbg !2360

then_block:                                       ; preds = %joinpointcont
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call3, 0, !dbg !2360
  %struct_field_access_record_17 = extractvalue { i32, i32 } %call3, 1, !dbg !2360
  %call8 = tail call fastcc i32 @Dict_decrementDist_268182e6bf48c34ea8893d1d91dfdfbbcae7ca2eb5c9a5136f7f2958cb888df(i32 %struct_field_access_record_17), !dbg !2360
  %insert_record_field = insertvalue { i32, i32 } zeroinitializer, i32 %struct_field_access_record_0, 0, !dbg !2360
  %insert_record_field9 = insertvalue { i32, i32 } %insert_record_field, i32 %call8, 1, !dbg !2360
  %call10 = tail call fastcc %list.RocList @List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1(%list.RocList %joinpointarg, i64 %joinpointarg1, { i32, i32 } %insert_record_field9), !dbg !2360
  br label %joinpointcont, !dbg !2360

else_block:                                       ; preds = %joinpointcont
  %insert_record_field11 = insertvalue { %list.RocList, i64 } zeroinitializer, %list.RocList %joinpointarg, 0, !dbg !2360
  %insert_record_field12 = insertvalue { %list.RocList, i64 } %insert_record_field11, i64 %joinpointarg1, 1, !dbg !2360
  ret { %list.RocList, i64 } %insert_record_field12, !dbg !2360
}

define internal fastcc void @Stderr_handleErr_871e40679fd9b63791667ec6fd3e055441f4e3fe3a86a59d7afec3c654a26f4(ptr %err, ptr %0) !dbg !2362 {
entry:
  %tag_alloca51 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca48 = alloca { [3 x i64], i8 }, align 8
  %const_str_store43 = alloca %str.RocStr, align 8
  %tag_alloca38 = alloca { [3 x i64], i8 }, align 8
  %const_str_store33 = alloca %str.RocStr, align 8
  %tag_alloca28 = alloca { [3 x i64], i8 }, align 8
  %const_str_store23 = alloca %str.RocStr, align 8
  %tag_alloca18 = alloca { [3 x i64], i8 }, align 8
  %const_str_store13 = alloca %str.RocStr, align 8
  %tag_alloca8 = alloca { [3 x i64], i8 }, align 8
  %const_str_store3 = alloca %str.RocStr, align 8
  %tag_alloca = alloca { [3 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store, align 8, !dbg !2363
  %const_str_store.repack54 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2363
  store i64 7308057356866828900, ptr %const_str_store.repack54, align 8, !dbg !2363
  %const_str_store.repack55 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2363
  store i64 -7710162126380642194, ptr %const_str_store.repack55, align 8, !dbg !2363
  %call = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store), !dbg !2363
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !2363
  br label %joinpointcont, !dbg !2363

joinpointcont:                                    ; preds = %entry
  br i1 %call, label %then_block, label %else_block, !dbg !2363

then_block:                                       ; preds = %joinpointcont
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2363
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !2363
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !2363
  ret void, !dbg !2363

else_block:                                       ; preds = %joinpointcont
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store3, align 8, !dbg !2363
  %const_str_store3.repack56 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 1, !dbg !2363
  store i64 7236287822342797924, ptr %const_str_store3.repack56, align 8, !dbg !2363
  %const_str_store3.repack57 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 2, !dbg !2363
  store i64 -7710162100828541886, ptr %const_str_store3.repack57, align 8, !dbg !2363
  %call4 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store3), !dbg !2363
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store3), !dbg !2363
  br label %joinpointcont1, !dbg !2363

joinpointcont1:                                   ; preds = %else_block
  br i1 %call4, label %then_block6, label %else_block7, !dbg !2363

then_block6:                                      ; preds = %joinpointcont1
  %tag_id_ptr10 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !2363
  store i8 5, ptr %tag_id_ptr10, align 8, !dbg !2363
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca8, i64 32, i1 false), !dbg !2363
  ret void, !dbg !2363

else_block7:                                      ; preds = %joinpointcont1
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store13, align 8, !dbg !2363
  %const_str_store13.repack58 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 1, !dbg !2363
  store i64 7310584034939779684, ptr %const_str_store13.repack58, align 8, !dbg !2363
  %const_str_store13.repack59 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 2, !dbg !2363
  store i64 -7782220154226449062, ptr %const_str_store13.repack59, align 8, !dbg !2363
  %call14 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store13), !dbg !2363
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store13), !dbg !2363
  br label %joinpointcont11, !dbg !2363

joinpointcont11:                                  ; preds = %else_block7
  br i1 %call14, label %then_block16, label %else_block17, !dbg !2363

then_block16:                                     ; preds = %joinpointcont11
  %tag_id_ptr20 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca18, i64 0, i32 1, !dbg !2363
  store i8 6, ptr %tag_id_ptr20, align 8, !dbg !2363
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca18, i64 32, i1 false), !dbg !2363
  ret void, !dbg !2363

else_block17:                                     ; preds = %joinpointcont11
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store23, align 8, !dbg !2363
  %const_str_store23.repack60 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 1, !dbg !2363
  store i64 8103510022236551780, ptr %const_str_store23.repack60, align 8, !dbg !2363
  %const_str_store23.repack61 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 2, !dbg !2363
  store i64 -7637994581112230032, ptr %const_str_store23.repack61, align 8, !dbg !2363
  %call24 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store23), !dbg !2363
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store23), !dbg !2363
  br label %joinpointcont21, !dbg !2363

joinpointcont21:                                  ; preds = %else_block17
  br i1 %call24, label %then_block26, label %else_block27, !dbg !2363

then_block26:                                     ; preds = %joinpointcont21
  %tag_id_ptr30 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca28, i64 0, i32 1, !dbg !2363
  store i8 4, ptr %tag_id_ptr30, align 8, !dbg !2363
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca28, i64 32, i1 false), !dbg !2363
  ret void, !dbg !2363

else_block27:                                     ; preds = %joinpointcont21
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store33, align 8, !dbg !2363
  %const_str_store33.repack62 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 1, !dbg !2363
  store i64 8243122709995338340, ptr %const_str_store33.repack62, align 8, !dbg !2363
  %const_str_store33.repack63 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 2, !dbg !2363
  store i64 -7637994581112359566, ptr %const_str_store33.repack63, align 8, !dbg !2363
  %call34 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store33), !dbg !2363
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store33), !dbg !2363
  br label %joinpointcont31, !dbg !2363

joinpointcont31:                                  ; preds = %else_block27
  br i1 %call34, label %then_block36, label %else_block37, !dbg !2363

then_block36:                                     ; preds = %joinpointcont31
  %tag_id_ptr40 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca38, i64 0, i32 1, !dbg !2363
  store i8 1, ptr %tag_id_ptr40, align 8, !dbg !2363
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca38, i64 32, i1 false), !dbg !2363
  ret void, !dbg !2363

else_block37:                                     ; preds = %joinpointcont31
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store43, align 8, !dbg !2363
  %const_str_store43.repack64 = getelementptr inbounds %str.RocStr, ptr %const_str_store43, i64 0, i32 1, !dbg !2363
  store i64 7372239162218003044, ptr %const_str_store43.repack64, align 8, !dbg !2363
  %const_str_store43.repack65 = getelementptr inbounds %str.RocStr, ptr %const_str_store43, i64 0, i32 2, !dbg !2363
  store i64 -7637971435617688243, ptr %const_str_store43.repack65, align 8, !dbg !2363
  %call44 = call fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %err, ptr nonnull %const_str_store43), !dbg !2363
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store43), !dbg !2363
  br label %joinpointcont41, !dbg !2363

joinpointcont41:                                  ; preds = %else_block37
  br i1 %call44, label %then_block46, label %else_block47, !dbg !2363

then_block46:                                     ; preds = %joinpointcont41
  %tag_id_ptr50 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca48, i64 0, i32 1, !dbg !2363
  store i8 3, ptr %tag_id_ptr50, align 8, !dbg !2363
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca48, i64 32, i1 false), !dbg !2363
  ret void, !dbg !2363

else_block47:                                     ; preds = %joinpointcont41
  call fastcc void @"#Attr_#inc_13"(ptr %err, i64 1), !dbg !2363
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %err, align 8, !dbg !2363
  %load_tag_to_put_in_struct.elt66 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 1, !dbg !2363
  %load_tag_to_put_in_struct.unpack67 = load i64, ptr %load_tag_to_put_in_struct.elt66, align 8, !dbg !2363
  %load_tag_to_put_in_struct.elt68 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 2, !dbg !2363
  %load_tag_to_put_in_struct.unpack69 = load i64, ptr %load_tag_to_put_in_struct.elt68, align 8, !dbg !2363
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca51, align 8, !dbg !2363
  %tag_alloca51.repack71 = getelementptr inbounds %str.RocStr, ptr %tag_alloca51, i64 0, i32 1, !dbg !2363
  store i64 %load_tag_to_put_in_struct.unpack67, ptr %tag_alloca51.repack71, align 8, !dbg !2363
  %tag_alloca51.repack73 = getelementptr inbounds %str.RocStr, ptr %tag_alloca51, i64 0, i32 2, !dbg !2363
  store i64 %load_tag_to_put_in_struct.unpack69, ptr %tag_alloca51.repack73, align 8, !dbg !2363
  %tag_id_ptr53 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca51, i64 0, i32 1, !dbg !2363
  store i8 2, ptr %tag_id_ptr53, align 8, !dbg !2363
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca51, i64 32, i1 false), !dbg !2363
  ret void, !dbg !2363
}

define internal fastcc void @Inspect_toDbgStr_35ee554d8e8c61e817524983ec42e3202b5bcb4f401f996ce2b30cd744f8a9f(ptr %"302", ptr %0) !dbg !2365 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %"302", i64 24, i1 false), !dbg !2366
  ret void, !dbg !2366
}

define internal fastcc void @Inspect_dbgU64_4c76596ba8468090c17ec41cffb26165180de983edd4ec9ae381e395d43ed6(i64 %num, ptr %0) !dbg !2368 {
entry:
  %result_value = alloca { [1 x i64], i8 }, align 8, !dbg !2369
  %tag_alloca = alloca { [1 x i64], i8 }, align 8, !dbg !2369
  store i64 %num, ptr %tag_alloca, align 8, !dbg !2369
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2369
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2369
  call fastcc void @Inspect_custom_b1578731274e6ff96daec13b4ab0dd54752d378ad5e32dad77e43ac706ee6(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !2369
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %result_value, i64 16, i1 false), !dbg !2369
  ret void, !dbg !2369
}

define internal fastcc %list.RocList @InternalPath_toBytes_a3d7eafdc270189a494a8da67ab2d44f3e57be0339c8d0479ea58f14792c5(ptr %"40") !dbg !2371 {
entry:
  %load_element7 = alloca %str.RocStr, align 8, !dbg !2372
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"40", i64 0, i32 1, !dbg !2372
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2372
  switch i8 %load_tag_id, label %default [
    i8 1, label %branch1
    i8 0, label %branch0
  ], !dbg !2372

default:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element7, ptr noundef nonnull align 8 dereferenceable(24) %"40", i64 24, i1 false), !dbg !2372
  %call = call fastcc %list.RocList @Str_toUtf8_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63(ptr nonnull %load_element7), !dbg !2372
  ret %list.RocList %call, !dbg !2372

branch1:                                          ; preds = %entry
  %load_element.unpack = load ptr, ptr %"40", align 8, !dbg !2372
  %0 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !2372
  %load_element.elt13 = getelementptr inbounds %list.RocList, ptr %"40", i64 0, i32 1, !dbg !2372
  %load_element.unpack14 = load i64, ptr %load_element.elt13, align 8, !dbg !2372
  %1 = insertvalue %list.RocList %0, i64 %load_element.unpack14, 1, !dbg !2372
  %load_element.elt15 = getelementptr inbounds %list.RocList, ptr %"40", i64 0, i32 2, !dbg !2372
  %load_element.unpack16 = load i64, ptr %load_element.elt15, align 8, !dbg !2372
  %load_element17 = insertvalue %list.RocList %1, i64 %load_element.unpack16, 2, !dbg !2372
  ret %list.RocList %load_element17, !dbg !2372

branch0:                                          ; preds = %entry
  %load_element4.unpack = load ptr, ptr %"40", align 8, !dbg !2372
  %2 = insertvalue %list.RocList poison, ptr %load_element4.unpack, 0, !dbg !2372
  %load_element4.elt8 = getelementptr inbounds %list.RocList, ptr %"40", i64 0, i32 1, !dbg !2372
  %load_element4.unpack9 = load i64, ptr %load_element4.elt8, align 8, !dbg !2372
  %3 = insertvalue %list.RocList %2, i64 %load_element4.unpack9, 1, !dbg !2372
  %load_element4.elt10 = getelementptr inbounds %list.RocList, ptr %"40", i64 0, i32 2, !dbg !2372
  %load_element4.unpack11 = load i64, ptr %load_element4.elt10, align 8, !dbg !2372
  %load_element412 = insertvalue %list.RocList %3, i64 %load_element4.unpack11, 2, !dbg !2372
  ret %list.RocList %load_element412, !dbg !2372
}

define internal fastcc void @List_looper_48ef2ef1548ac84926096e9c2bcc73d52a4ed3ed12a64c12eda477d53f3({} %"816", i64 %element, %list.RocList %predicate, ptr %0) !dbg !2374 {
entry:
  %tag_alloca1 = alloca { [0 x i8], i8 }, align 8, !dbg !2375
  %tag_alloca = alloca { [0 x i8], i8 }, align 8, !dbg !2375
  %call = tail call fastcc i1 @Five_56_e08944a08de1317a589af2c16d7f4332d47e2a35e653e802fab1d0d46a31f5(i64 %element, %list.RocList %predicate), !dbg !2375
  br i1 %call, label %then_block, label %else_block, !dbg !2375

then_block:                                       ; preds = %entry
  %tag_id_ptr = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2375
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2375
  %1 = load i8, ptr %tag_alloca, align 8, !dbg !2375
  store i8 %1, ptr %0, align 1, !dbg !2375
  ret void, !dbg !2375

else_block:                                       ; preds = %entry
  %tag_id_ptr3 = getelementptr inbounds { [0 x i8], i8 }, ptr %tag_alloca1, i64 0, i32 1, !dbg !2375
  store i8 0, ptr %tag_id_ptr3, align 8, !dbg !2375
  %2 = load i8, ptr %tag_alloca1, align 8, !dbg !2375
  store i8 %2, ptr %0, align 1, !dbg !2375
  ret void, !dbg !2375
}

define internal fastcc i64 @Parser_156_df31287a46e9ee276abe5d7212b96c65cafa585df9b2e1e4fe38d7cfb6150fa(i64 %val) !dbg !2377 {
entry:
  ret i64 %val, !dbg !2378
}

define internal fastcc void @Dict_insert_aacdfa21c937a3152a4c9abafa557bcab3033c1362c20c33c558b64d99d3e5(ptr %dict, i64 %key, %list.RocList %value, ptr %0) !dbg !2380 {
entry:
  %result_value11 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp3 = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %tmp_output_for_jmp = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  %joinpoint_arg_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  tail call fastcc void @"#Attr_#inc_25"(ptr %dict, i64 2), !dbg !2381
  %call = tail call fastcc i64 @Dict_len_4bc296458c9e4dfa311cb236c399bfa4fbaacf1f1ce0be5dc9b3fb0e57fbf5(ptr %dict), !dbg !2381
  %call1 = tail call fastcc i64 @Dict_capacity_3c159ccc72c9f6c2f9b343f7ee15555614903dc98bb4bf9da1d235172245b(ptr %dict), !dbg !2381
  %call2 = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %call, i64 %call1), !dbg !2381
  br i1 %call2, label %then_block, label %else_block, !dbg !2381

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(64) %dict, i64 64, i1 false), !dbg !2381
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp, i64 64, i1 false), !dbg !2381
  br label %joinpointcont, !dbg !2381

else_block:                                       ; preds = %entry
  call fastcc void @Dict_increaseSize_6510a4d2b643dbf56ded4867b8cf49fe92c910e8961840e3a156bc971ee31a(ptr %dict, ptr nonnull %result_value), !dbg !2381
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp3, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !2381
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(64) %tmp_output_for_jmp3, i64 64, i1 false), !dbg !2381
  br label %joinpointcont, !dbg !2381

joinpointcont:                                    ; preds = %else_block, %then_block
  %struct_field.unpack = load ptr, ptr %joinpoint_arg_alloca, align 8, !dbg !2381
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !2381
  %struct_field.elt12 = getelementptr inbounds %list.RocList, ptr %joinpoint_arg_alloca, i64 0, i32 1, !dbg !2381
  %struct_field.unpack13 = load i64, ptr %struct_field.elt12, align 8, !dbg !2381
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack13, 1, !dbg !2381
  %struct_field.elt14 = getelementptr inbounds %list.RocList, ptr %joinpoint_arg_alloca, i64 0, i32 2, !dbg !2381
  %struct_field.unpack15 = load i64, ptr %struct_field.elt14, align 8, !dbg !2381
  %struct_field16 = insertvalue %list.RocList %2, i64 %struct_field.unpack15, 2, !dbg !2381
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %joinpoint_arg_alloca, i64 0, i32 1, !dbg !2381
  %struct_field4.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !2381
  %3 = insertvalue %list.RocList poison, ptr %struct_field4.unpack, 0, !dbg !2381
  %struct_field4.elt17 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %joinpoint_arg_alloca, i64 0, i32 1, i32 1, !dbg !2381
  %struct_field4.unpack18 = load i64, ptr %struct_field4.elt17, align 8, !dbg !2381
  %4 = insertvalue %list.RocList %3, i64 %struct_field4.unpack18, 1, !dbg !2381
  %struct_field4.elt19 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %joinpoint_arg_alloca, i64 0, i32 1, i32 2, !dbg !2381
  %struct_field4.unpack20 = load i64, ptr %struct_field4.elt19, align 8, !dbg !2381
  %struct_field421 = insertvalue %list.RocList %4, i64 %struct_field4.unpack20, 2, !dbg !2381
  %struct_field_access_record_2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %joinpoint_arg_alloca, i64 0, i32 2, !dbg !2381
  %struct_field5 = load i64, ptr %struct_field_access_record_2, align 8, !dbg !2381
  %struct_field_access_record_3 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %joinpoint_arg_alloca, i64 0, i32 3, !dbg !2381
  %struct_field6 = load float, ptr %struct_field_access_record_3, align 8, !dbg !2381
  %struct_field_access_record_4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %joinpoint_arg_alloca, i64 0, i32 4, !dbg !2381
  %struct_field7 = load i8, ptr %struct_field_access_record_4, align 4, !dbg !2381
  %call8 = call fastcc i64 @Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c(i64 %key), !dbg !2381
  %call9 = call fastcc i32 @Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68(i64 %call8), !dbg !2381
  %call10 = call fastcc i64 @Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0(i64 %call8, i8 %struct_field7), !dbg !2381
  call fastcc void @Dict_insertHelper_b57223634213b1c687e1cf06fef47be7eed4c64d12c154ffb6abc557b2b473(%list.RocList %struct_field16, %list.RocList %struct_field421, i64 %call10, i32 %call9, i64 %key, %list.RocList %value, i64 %struct_field5, float %struct_field6, i8 %struct_field7, ptr nonnull %result_value11), !dbg !2381
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value11, i64 64, i1 false), !dbg !2381
  ret void, !dbg !2381
}

define internal fastcc i1 @Num_isGt_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b(i32 %"#arg1", i32 %"#arg2") !dbg !2383 {
entry:
  %gt_uint = icmp ugt i32 %"#arg1", %"#arg2", !dbg !2384
  ret i1 %gt_uint, !dbg !2384
}

define internal fastcc i64 @Num_floor_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772(float %"#arg1") !dbg !2386 {
entry:
  %call_builtin = tail call i64 @roc_builtins.num.floor_f32.u64(float %"#arg1"), !dbg !2387
  ret i64 %call_builtin, !dbg !2387
}

define internal fastcc void @Inspect_213_8c1982946d7d4cf533b8ffebd7c5ff61adefe5eeb6d572d7069add06e229552(ptr %x, ptr %inspector, ptr %0) !dbg !2389 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_apply_5512121a7725d673ec2434eca2a3826afdb8ac0e342375ef02fbd7eef1f863d(ptr %inspector, ptr %x, ptr nonnull %result_value), !dbg !2390
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2390
  ret void, !dbg !2390
}

define internal fastcc i1 @List_isEmpty_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3(%list.RocList %list) !dbg !2392 {
entry:
  %call = tail call fastcc i64 @List_len_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140(%list.RocList %list), !dbg !2393
  %call1 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %call, i64 0), !dbg !2393
  ret i1 %call1, !dbg !2393
}

define internal fastcc void @Inspect_dbgTag_e24838de671ca0a02270b7ec8883c848cc12fc1f1889e55bd5162493a6968118(ptr %name, %list.RocList %fields, ptr %0) !dbg !2395 {
entry:
  %result_value5 = alloca { [6 x i64], i8 }, align 8, !dbg !2396
  %tag_alloca2 = alloca { [6 x i64], i8 }, align 8, !dbg !2396
  %struct_alloca = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2396
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !2396
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !2396
  %call = tail call fastcc i1 @List_isEmpty_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0(%list.RocList %fields), !dbg !2396
  br i1 %call, label %then_block, label %else_block, !dbg !2396

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !2396
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %name, align 8, !dbg !2396
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 1, !dbg !2396
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !2396
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 2, !dbg !2396
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !2396
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !2396
  %tag_alloca.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !2396
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca.repack15, align 8, !dbg !2396
  %tag_alloca.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !2396
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca.repack17, align 8, !dbg !2396
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2396
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !2396
  call fastcc void @Inspect_custom_4f0c3ffeaf2618fe6c22c9b81e4cd03dd527d786a9b7fcb5f645d1f7239bd5(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !2396
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !2396
  ret void, !dbg !2396

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_32"(%list.RocList %fields, i64 1), !dbg !2396
  tail call fastcc void @"#Attr_#inc_13"(ptr %name, i64 1), !dbg !2396
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %name, i64 24, i1 false), !dbg !2396
  %struct_field_gep1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !2396
  %fields.elt = extractvalue %list.RocList %fields, 0, !dbg !2396
  store ptr %fields.elt, ptr %struct_field_gep1, align 8, !dbg !2396
  %struct_field_gep1.repack6 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !2396
  %fields.elt7 = extractvalue %list.RocList %fields, 1, !dbg !2396
  store i64 %fields.elt7, ptr %struct_field_gep1.repack6, align 8, !dbg !2396
  %struct_field_gep1.repack8 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !2396
  %fields.elt9 = extractvalue %list.RocList %fields, 2, !dbg !2396
  store i64 %fields.elt9, ptr %struct_field_gep1.repack8, align 8, !dbg !2396
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !2396
  %tag_id_ptr4 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca2, i64 0, i32 1, !dbg !2396
  store i8 1, ptr %tag_id_ptr4, align 8, !dbg !2396
  call fastcc void @Inspect_custom_4f0c3ffeaf2618fe6c22c9b81e4cd03dd527d786a9b7fcb5f645d1f7239bd5(ptr nonnull %tag_alloca2, ptr nonnull %result_value5), !dbg !2396
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value5, i64 56, i1 false), !dbg !2396
  ret void, !dbg !2396
}

define internal fastcc void @Path_100_3653439360ef4d7bdac398b2927d68d6a6f82eb1a2bafbe2edf7ac6227f150(ptr %readErr, ptr %path, ptr %0) !dbg !2398 {
entry:
  %tag_alloca = alloca { [8 x i64], i8 }, align 8
  %struct_alloca = alloca { { [3 x i64], i8 }, { [3 x i64], i8 } }, align 8
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @InternalFile_handleReadErr_534e747f8ed667439b7c2bba127be91eb34da68c6374c1c2a62178b3324fb55(ptr %readErr, ptr nonnull %result_value), !dbg !2399
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(32) %path, i64 32, i1 false), !dbg !2399
  %struct_field_gep1 = getelementptr inbounds { { [3 x i64], i8 }, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2399
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !2399
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca, i64 64, i1 false), !dbg !2399
  %tag_id_ptr = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2399
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2399
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, i64 72, i1 false), !dbg !2399
  ret void, !dbg !2399
}

define internal fastcc %list.RocList @List_swap_c1becff895d98252d67f432f42e71e6c36db1525fb1c2935030e1f76862(%list.RocList %"#arg1", i64 %"#arg2", i64 %"#arg3") !dbg !2401 {
entry:
  %0 = alloca [64 x i8], align 1
  %1 = alloca %list.RocList, align 8
  %2 = alloca %list.RocList, align 8
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !2402
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !2402
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !2402
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !2402
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !2402
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !2402
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !2402
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !2402
  call void @llvm.experimental.noalias.scope.decl(metadata !2404), !dbg !2402
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !2402
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !2402
  call void @llvm.lifetime.start.p0(i64 24, ptr %2), !dbg !2402
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !2402
  %3 = icmp eq i64 %"#arg2", %"#arg3", !dbg !2402
  br i1 %3, label %roc_builtins.list.swap.exit, label %4, !dbg !2402

4:                                                ; preds = %entry
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !2402
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !2402, !noalias !2404
  %5 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg2", !dbg !2402
  %6 = icmp ule i64 %.sroa.1.0.copyload.i, %"#arg3", !dbg !2402
  %7 = select i1 %5, i1 true, i1 %6, !dbg !2402
  br i1 %7, label %roc_builtins.list.swap.exit, label %8, !dbg !2402

8:                                                ; preds = %4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %2, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca111, i64 24, i1 false), !dbg !2402, !noalias !2404
  call void @llvm.experimental.noalias.scope.decl(metadata !2407), !dbg !2402
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2402
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !2402, !noalias !2410
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %2, i64 16, !dbg !2402
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !2402, !noalias !2410
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2402
  %9 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !2402
  %10 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !2402
  %11 = or i64 %10, %9, !dbg !2402
  %12 = icmp ne i64 %11, 0, !dbg !2402
  %brmerge.i.i.i.i = select i1 %12, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2402
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !2402

list.RocList.isUnique.exit.i.i:                   ; preds = %8
  %13 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2402
  %.sroa.0.0.copyload.i.i = load ptr, ptr %2, align 8, !dbg !2402, !noalias !2410
  %14 = ptrtoint ptr %.sroa.0.0.copyload.i.i to i64, !dbg !2402
  %15 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !2402
  %16 = select i1 %13, i64 %15, i64 %14, !dbg !2402
  %17 = inttoptr i64 %16 to ptr, !dbg !2402
  %18 = getelementptr inbounds i64, ptr %17, i64 -1, !dbg !2402
  %19 = load i64, ptr %18, align 8, !dbg !2402, !noalias !2410
  %20 = icmp eq i64 %19, -9223372036854775808, !dbg !2402
  br i1 %20, label %list.RocList.isUnique.exit.thread.i.i, label %21, !dbg !2402

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false), !dbg !2402, !noalias !2404
  br label %list.RocList.makeUnique.exit.i, !dbg !2402

21:                                               ; preds = %list.RocList.isUnique.exit.i.i
  %22 = icmp eq i64 %.sroa.2.0.copyload.i.i, 0, !dbg !2402
  br i1 %22, label %.critedge.i.i.i, label %27, !dbg !2402

.critedge.i.i.i:                                  ; preds = %21
  %23 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !2402
  %24 = icmp eq i64 %16, 0, !dbg !2402
  %or.cond.i.i.not69.i.i = select i1 %23, i1 true, i1 %24, !dbg !2402
  %.not.i.i.i.i = icmp eq i64 %19, 0, !dbg !2402
  %or.cond.i.i = select i1 %or.cond.i.i.not69.i.i, i1 true, i1 %.not.i.i.i.i, !dbg !2402
  br i1 %or.cond.i.i, label %list.RocList.decref.exit.i.i, label %25, !dbg !2402

25:                                               ; preds = %.critedge.i.i.i
  %26 = add nsw i64 %19, -1, !dbg !2402
  %sunkaddr.i.i = inttoptr i64 %16 to ptr, !dbg !2402
  %sunkaddr73.i.i = getelementptr inbounds i8, ptr %sunkaddr.i.i, i64 -8, !dbg !2402
  store i64 %26, ptr %sunkaddr73.i.i, align 8, !dbg !2402, !noalias !2410
  br label %list.RocList.decref.exit.i.i, !dbg !2402

list.RocList.decref.exit.i.i:                     ; preds = %25, %.critedge.i.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, i8 0, i64 24, i1 false), !dbg !2402, !alias.scope !2407, !noalias !2404
  br label %list.RocList.makeUnique.exit.i, !dbg !2402

27:                                               ; preds = %21
  %28 = call i64 @llvm.umax.i64(i64 2, i64 %.sroa.2.0.copyload.i.i), !dbg !2402
  %29 = mul nuw i64 %28, 24, !dbg !2402
  %30 = add nuw i64 %29, 16, !dbg !2402
  %31 = call ptr @roc_alloc(i64 %30, i32 8), !dbg !2402, !noalias !2411
  %32 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !2402
  %33 = getelementptr inbounds i8, ptr %32, i64 -8, !dbg !2402
  store i64 -9223372036854775808, ptr %33, align 8, !dbg !2402, !noalias !2411
  %sunkaddr74.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2402
  %.sroa.1.0.copyload.pre.i.i = load i64, ptr %sunkaddr74.i.i, align 8, !dbg !2402, !noalias !2410
  %.pre.i.i = load ptr, ptr %2, align 8, !dbg !2402, !noalias !2410
  %34 = mul nuw i64 %.sroa.1.0.copyload.pre.i.i, 24, !dbg !2402
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %32, ptr align 1 %.pre.i.i, i64 %34, i1 false), !dbg !2402, !noalias !2410
  %sunkaddr75.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2402
  %.sroa.16.0.copyload63.i.i = load i64, ptr %sunkaddr75.i.i, align 8, !dbg !2402, !noalias !2410
  %.not.i.i = icmp eq i64 %.sroa.16.0.copyload63.i.i, 0, !dbg !2402
  br i1 %.not.i.i, label %.loopexit.i.i, label %.lr.ph.preheader.i.i, !dbg !2402

.lr.ph.preheader.i.i:                             ; preds = %27
  br label %.lr.ph.i.i, !dbg !2402

.critedge.i19.i.i:                                ; preds = %.lr.ph.i40.i.i, %list.RocList.getAllocationElementCount.exit.i37.i.i, %list.RocList.isUnique.exit.thread.i33.i.i, %list.RocList.isUnique.exit.i29.i.i
  %35 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !2402
  %36 = shl i64 %.sroa.453.0.copyload.i.i, 1, !dbg !2402
  %isneg.i.i17.i.i = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !2402
  %37 = select i1 %isneg.i.i17.i.i, i64 %36, i64 %35, !dbg !2402
  %38 = icmp ne i64 %.sroa.453.0.copyload.i.i, 0, !dbg !2402
  %39 = icmp ne i64 %37, 0, !dbg !2402
  %or.cond.i.i18.i.i = select i1 %38, i1 %39, i1 false, !dbg !2402
  br i1 %or.cond.i.i18.i.i, label %40, label %list.RocList.decref.exit41.i.i, !dbg !2402

40:                                               ; preds = %.critedge.i19.i.i
  %41 = inttoptr i64 %37 to ptr, !dbg !2402
  %42 = getelementptr inbounds i64, ptr %41, i64 -1, !dbg !2402
  %43 = load i64, ptr %42, align 8, !dbg !2402, !noalias !2410
  %.not.i.i20.i.i = icmp eq i64 %43, 0, !dbg !2402
  br i1 %.not.i.i20.i.i, label %list.RocList.decref.exit41.i.i, label %44, !dbg !2402

44:                                               ; preds = %40
  %45 = add i64 %43, -1, !dbg !2402
  store i64 %45, ptr %42, align 8, !dbg !2402, !noalias !2410
  %46 = icmp eq i64 %43, -9223372036854775808, !dbg !2402
  br i1 %46, label %47, label %list.RocList.decref.exit41.i.i, !dbg !2402

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, ptr %42, i64 -8, !dbg !2402
  call void @roc_dealloc(ptr nonnull align 1 %48, i32 8), !dbg !2402, !noalias !2410
  br label %list.RocList.decref.exit41.i.i, !dbg !2402

.loopexit.i.i:                                    ; preds = %.lr.ph.i.i, %27
  %.sroa.352.0.copyload.i.i = phi i64 [ 0, %27 ], [ %.sroa.16.0.copyload.i.i, %.lr.ph.i.i ], !dbg !2402
  %.sroa.051.0.copyload.i.i = load ptr, ptr %2, align 8, !dbg !2402, !noalias !2410
  %sunkaddr77.i.i = getelementptr inbounds i8, ptr %2, i64 16, !dbg !2402
  %.sroa.453.0.copyload.i.i = load i64, ptr %sunkaddr77.i.i, align 8, !dbg !2402, !noalias !2410
  %isneg.i.i.i.i27.i.i = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !2402
  %49 = call i64 @llvm.smax.i64(i64 %.sroa.453.0.copyload.i.i, i64 0), !dbg !2402
  %50 = select i1 %isneg.i.i.i.i27.i.i, i64 %.sroa.352.0.copyload.i.i, i64 0, !dbg !2402
  %51 = or i64 %50, %49, !dbg !2402
  %52 = icmp ne i64 %51, 0, !dbg !2402
  %brmerge.i.i.i28.i.i = select i1 %52, i1 true, i1 %isneg.i.i.i.i27.i.i, !dbg !2402
  %53 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !2402
  %54 = shl i64 %.sroa.453.0.copyload.i.i, 1, !dbg !2402
  br i1 %brmerge.i.i.i28.i.i, label %list.RocList.isUnique.exit.i29.i.i, label %list.RocList.isUnique.exit.thread.i33.i.i, !dbg !2402

list.RocList.isUnique.exit.i29.i.i:               ; preds = %.loopexit.i.i
  %55 = ptrtoint ptr %.sroa.051.0.copyload.i.i to i64, !dbg !2402
  %56 = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !2402
  %57 = select i1 %56, i64 %54, i64 %55, !dbg !2402
  %58 = inttoptr i64 %57 to ptr, !dbg !2402
  %59 = getelementptr inbounds i64, ptr %58, i64 -1, !dbg !2402
  %60 = load i64, ptr %59, align 8, !dbg !2402, !noalias !2410
  %61 = icmp eq i64 %60, -9223372036854775808, !dbg !2402
  br i1 %61, label %list.RocList.isUnique.exit.thread.i33.i.i, label %.critedge.i19.i.i, !dbg !2402

list.RocList.isUnique.exit.thread.i33.i.i:        ; preds = %list.RocList.isUnique.exit.i29.i.i, %.loopexit.i.i
  %.pre-phi22.i30.i.i = phi ptr [ %58, %list.RocList.isUnique.exit.i29.i.i ], [ %.sroa.051.0.copyload.i.i, %.loopexit.i.i ], !dbg !2402
  %.pre-phi20.i31.i.i = phi i64 [ %57, %list.RocList.isUnique.exit.i29.i.i ], [ %53, %.loopexit.i.i ], !dbg !2402
  %.not.i32.i.i = icmp eq i64 %.pre-phi20.i31.i.i, 0, !dbg !2402
  br i1 %.not.i32.i.i, label %.critedge.i19.i.i, label %62, !dbg !2402

62:                                               ; preds = %list.RocList.isUnique.exit.thread.i33.i.i
  %63 = icmp slt i64 %.sroa.453.0.copyload.i.i, 0, !dbg !2402
  br i1 %63, label %64, label %list.RocList.getAllocationElementCount.exit.i37.i.i, !dbg !2402

64:                                               ; preds = %62
  %65 = inttoptr i64 %54 to ptr, !dbg !2402
  %66 = getelementptr inbounds i64, ptr %65, i64 -2, !dbg !2402
  %common.ret.op.in.i.sroa.speculate.load.10.i34.i.i = load i64, ptr %66, align 8, !dbg !2402, !noalias !2410
  br label %list.RocList.getAllocationElementCount.exit.i37.i.i, !dbg !2402

list.RocList.getAllocationElementCount.exit.i37.i.i: ; preds = %64, %62
  %common.ret.op.in.i.sroa.speculated.i35.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i34.i.i, %64 ], [ %.sroa.352.0.copyload.i.i, %62 ], !dbg !2402
  %.not16.i36.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i35.i.i, 0, !dbg !2402
  br i1 %.not16.i36.i.i, label %.critedge.i19.i.i, label %.lr.ph.i40.preheader.i.i, !dbg !2402

.lr.ph.i40.preheader.i.i:                         ; preds = %list.RocList.getAllocationElementCount.exit.i37.i.i
  br label %.lr.ph.i40.i.i, !dbg !2402

.lr.ph.i40.i.i:                                   ; preds = %.lr.ph.i40.i.i, %.lr.ph.i40.preheader.i.i
  %lsr.iv70.i.i = phi ptr [ %.pre-phi22.i30.i.i, %.lr.ph.i40.preheader.i.i ], [ %uglygep.i.i, %.lr.ph.i40.i.i ], !dbg !2402
  %lsr.iv.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i35.i.i, %.lr.ph.i40.preheader.i.i ], [ %lsr.iv.next.i.i, %.lr.ph.i40.i.i ], !dbg !2402
  %load_opaque.i = load %list.RocList, ptr %lsr.iv70.i.i, align 8, !dbg !2414, !noalias !2410
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_opaque.i) #18, !dbg !2414, !noalias !2410
  %lsr.iv.next.i.i = add i64 %lsr.iv.i.i, -1, !dbg !2402
  %uglygep.i.i = getelementptr i8, ptr %lsr.iv70.i.i, i64 24, !dbg !2402
  %exitcond.not.i39.i.i = icmp eq i64 %lsr.iv.next.i.i, 0, !dbg !2402
  br i1 %exitcond.not.i39.i.i, label %.critedge.i19.i.i, label %.lr.ph.i40.i.i, !dbg !2402

list.RocList.decref.exit41.i.i:                   ; preds = %47, %44, %40, %.critedge.i19.i.i
  store ptr %32, ptr %1, align 8, !dbg !2402, !alias.scope !2407, !noalias !2404
  %.sroa.450.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !2402
  store i64 %.sroa.2.0.copyload.i.i, ptr %.sroa.450.0..sroa_idx.i.i, align 8, !dbg !2402, !alias.scope !2407, !noalias !2404
  %.sroa.5.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !2402
  store i64 %28, ptr %.sroa.5.0..sroa_idx.i.i, align 8, !dbg !2402, !alias.scope !2407, !noalias !2404
  br label %list.RocList.makeUnique.exit.i, !dbg !2402

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.preheader.i.i
  %lsr.iv71.i.i = phi ptr [ %32, %.lr.ph.preheader.i.i ], [ %uglygep72.i.i, %.lr.ph.i.i ], !dbg !2402
  %.064.i.i = phi i64 [ %67, %.lr.ph.i.i ], [ 0, %.lr.ph.preheader.i.i ], !dbg !2402
  %load_opaque.i12 = load %list.RocList, ptr %lsr.iv71.i.i, align 8, !dbg !2416, !noalias !2410
  call fastcc void @"#Attr_#inc_1"(%list.RocList %load_opaque.i12, i64 1) #18, !dbg !2416, !noalias !2410
  %67 = add nuw i64 %.064.i.i, 1, !dbg !2402
  %sunkaddr78.i.i = getelementptr inbounds i8, ptr %2, i64 8, !dbg !2402
  %.sroa.16.0.copyload.i.i = load i64, ptr %sunkaddr78.i.i, align 8, !dbg !2402, !noalias !2410
  %uglygep72.i.i = getelementptr i8, ptr %lsr.iv71.i.i, i64 24, !dbg !2402
  %68 = icmp ult i64 %67, %.sroa.16.0.copyload.i.i, !dbg !2402
  br i1 %68, label %.lr.ph.i.i, label %.loopexit.i.i, !dbg !2402

list.RocList.makeUnique.exit.i:                   ; preds = %list.RocList.decref.exit41.i.i, %list.RocList.decref.exit.i.i, %list.RocList.isUnique.exit.thread.i.i
  %69 = load ptr, ptr %1, align 8, !dbg !2402, !noalias !2404
  %70 = mul nuw i64 %"#arg2", 24, !dbg !2402
  %71 = getelementptr i8, ptr %69, i64 %70, !dbg !2402
  %72 = mul nuw i64 %"#arg3", 24, !dbg !2402
  %73 = getelementptr inbounds i8, ptr %69, i64 %72, !dbg !2402
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %0), !dbg !2402, !noalias !2404
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %71, i64 ptrtoint (ptr getelementptr (%list.RocList, ptr null, i32 1) to i64), i1 false), !dbg !2418, !noalias !2404
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %71, ptr align 8 %73, i64 ptrtoint (ptr getelementptr (%list.RocList, ptr null, i32 1) to i64), i1 false), !dbg !2420, !noalias !2404
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %73, ptr align 8 %0, i64 ptrtoint (ptr getelementptr (%list.RocList, ptr null, i32 1) to i64), i1 false), !dbg !2422, !noalias !2404
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %0), !dbg !2402, !noalias !2404
  br label %roc_builtins.list.swap.exit, !dbg !2402

roc_builtins.list.swap.exit:                      ; preds = %entry, %4, %list.RocList.makeUnique.exit.i
  %.sink.i = phi ptr [ %1, %list.RocList.makeUnique.exit.i ], [ %list_alloca111, %entry ], [ %list_alloca111, %4 ], !dbg !2402
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %.sink.i, i64 24, i1 false), !dbg !2402
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !2402
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !2402
  call void @llvm.lifetime.end.p0(i64 24, ptr %2), !dbg !2402
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !2402
  %74 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !2402
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !2402
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !2402
  %75 = insertvalue %list.RocList %74, i64 %load_list.unpack7, 1, !dbg !2402
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !2402
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !2402
  %load_list10 = insertvalue %list.RocList %75, i64 %load_list.unpack9, 2, !dbg !2402
  ret %list.RocList %load_list10, !dbg !2402
}

define internal fastcc void @Parser_many_984fbdea9d2af8b6e801c4925e5aa45293b7cddc7bbefd72e1d2df61bf9d71(ptr %parser, ptr %0) !dbg !2424 {
entry:
  %result_value = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8
  call fastcc void @Parser_buildPrimitiveParser_61f44a74e94cb8c1c2db3f3f383cd9d354fdf57d11ea12f95c51b322f5e43395(ptr %parser, ptr nonnull %result_value), !dbg !2425
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(128) %0, ptr noundef nonnull align 8 dereferenceable(128) %result_value, i64 128, i1 false), !dbg !2425
  ret void, !dbg !2425
}

define internal fastcc void @Five_21_472151a4cc17d79113920ae20d3d07b69f69f8682198d239fb7241727fdd3e(ptr %"185", ptr %0) !dbg !2427 {
entry:
  %result_value13 = alloca { [9 x i64], i8 }, align 8, !dbg !2428
  %result_value12 = alloca { [9 x i64], i8 }, align 8, !dbg !2428
  %result_value11 = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8, !dbg !2428
  %result_value10 = alloca { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, align 8, !dbg !2428
  %result_value9 = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !2428
  %result_value8 = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2428
  %const_str_store7 = alloca %str.RocStr, align 8, !dbg !2428
  %result_value6 = alloca { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !2428
  %result_value4 = alloca { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, align 8, !dbg !2428
  %result_value = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2428
  %const_str_store = alloca %str.RocStr, align 8, !dbg !2428
  %struct_field1 = alloca %str.RocStr, align 8, !dbg !2428
  %struct_field = alloca %str.RocStr, align 8, !dbg !2428
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field, ptr noundef nonnull align 8 dereferenceable(24) %"185", i64 24, i1 false), !dbg !2428
  %struct_field_access_record_1 = getelementptr inbounds { %str.RocStr, %str.RocStr }, ptr %"185", i64 0, i32 1, !dbg !2428
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field1, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_1, i64 24, i1 false), !dbg !2428
  %call = tail call fastcc {} @Parser_const_683fc8c1ba6a475a9c83ff66517952bb4de5a8bf7535b7576b5b57adabe56d({} zeroinitializer), !dbg !2428
  %call2 = tail call fastcc { {}, { { {}, {} }, {} } } @String_digits_2a63cbb21df3c6cd024fa55fccbaa353df4baab244ba379952ed628e5b4ade(), !dbg !2428
  %call3 = tail call fastcc { {}, { {}, { { {}, {} }, {} } } } @Parser_keep_c160733124d992a626d26d4ef3869f84d5218633965988131e9ae4b8e5624({} %call, { {}, { { {}, {} }, {} } } %call2), !dbg !2428
  store ptr inttoptr (i64 124 to ptr), ptr %const_str_store, align 8, !dbg !2428
  %const_str_store.repack14 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2428
  store i64 0, ptr %const_str_store.repack14, align 8, !dbg !2428
  %const_str_store.repack15 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2428
  store i64 -9151314442816847872, ptr %const_str_store.repack15, align 8, !dbg !2428
  call fastcc void @String_string_dd534565178f1d68b111fdc2e326a0805311eecf8c9a1da323c0af98ffe3(ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !2428
  call fastcc void @Parser_skip_3244389cd0f44ffa4fa4dd64554e447a88f58110161ed060aa55581f6d1890({ {}, { {}, { { {}, {} }, {} } } } %call3, ptr nonnull %result_value, ptr nonnull %result_value4), !dbg !2428
  %call5 = call fastcc { {}, { { {}, {} }, {} } } @String_digits_2a63cbb21df3c6cd024fa55fccbaa353df4baab244ba379952ed628e5b4ade(), !dbg !2428
  call fastcc void @Parser_keep_b2df5633da1ff7f59f2aecac265c8d6773abdbcadcf4a15d34ae9a45fd771125(ptr nonnull %result_value4, { {}, { { {}, {} }, {} } } %call5, ptr nonnull %result_value6), !dbg !2428
  store ptr inttoptr (i64 10 to ptr), ptr %const_str_store7, align 8, !dbg !2428
  %const_str_store7.repack16 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 1, !dbg !2428
  store i64 0, ptr %const_str_store7.repack16, align 8, !dbg !2428
  %const_str_store7.repack17 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 2, !dbg !2428
  store i64 -9151314442816847872, ptr %const_str_store7.repack17, align 8, !dbg !2428
  call fastcc void @String_string_dd534565178f1d68b111fdc2e326a0805311eecf8c9a1da323c0af98ffe3(ptr nonnull %const_str_store7, ptr nonnull %result_value8), !dbg !2428
  call fastcc void @Parser_maybe_91f55f0f74d3a50ce67a647641ecddc4a3ba89ef5bfad20773d8a6834984b(ptr nonnull %result_value8, ptr nonnull %result_value9), !dbg !2428
  call fastcc void @Parser_skip_bb5dc84692b48301ecfaa93785bf72d4debdd1ab8d563ad3ea5d723e989288b(ptr nonnull %result_value6, ptr nonnull %result_value9, ptr nonnull %result_value10), !dbg !2428
  call fastcc void @Parser_many_984fbdea9d2af8b6e801c4925e5aa45293b7cddc7bbefd72e1d2df61bf9d71(ptr nonnull %result_value10, ptr nonnull %result_value11), !dbg !2428
  call fastcc void @Five_28_e8771868ae99ea9f746cb8aefe69898fb7e1703aac58e3bf6a66301caf8231b4(ptr nonnull %result_value11, ptr nonnull %struct_field1, ptr nonnull %result_value12), !dbg !2428
  call fastcc void @Result_try_56ecce6137ef1a8b7fa2d1462a14bcff563458ace807157c68c36b8f837c2(ptr nonnull %result_value12, ptr nonnull %struct_field, ptr nonnull %result_value13), !dbg !2428
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value13, i64 80, i1 false), !dbg !2428
  ret void, !dbg !2428
}

define internal fastcc %list.RocList @List_appendUnsafe_df2d999242c7383735614c1ca7894e355776837c47b5a1272ceceba5a498db(%list.RocList %"#arg1", { i64, %list.RocList } %"#arg2") !dbg !2430 {
entry:
  %list_alloca117 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca { i64, %list.RocList }, align 8
  %"#arg2.elt" = extractvalue { i64, %list.RocList } %"#arg2", 0, !dbg !2431
  store i64 %"#arg2.elt", ptr %element_to_pass_as_opaque, align 8, !dbg !2431
  %element_to_pass_as_opaque.repack2 = getelementptr inbounds { i64, %list.RocList }, ptr %element_to_pass_as_opaque, i64 0, i32 1, !dbg !2431
  %"#arg2.elt3" = extractvalue { i64, %list.RocList } %"#arg2", 1, !dbg !2431
  %"#arg2.elt3.elt" = extractvalue %list.RocList %"#arg2.elt3", 0, !dbg !2431
  store ptr %"#arg2.elt3.elt", ptr %element_to_pass_as_opaque.repack2, align 8, !dbg !2431
  %element_to_pass_as_opaque.repack2.repack4 = getelementptr inbounds { i64, %list.RocList }, ptr %element_to_pass_as_opaque, i64 0, i32 1, i32 1, !dbg !2431
  %"#arg2.elt3.elt5" = extractvalue %list.RocList %"#arg2.elt3", 1, !dbg !2431
  store i64 %"#arg2.elt3.elt5", ptr %element_to_pass_as_opaque.repack2.repack4, align 8, !dbg !2431
  %element_to_pass_as_opaque.repack2.repack6 = getelementptr inbounds { i64, %list.RocList }, ptr %element_to_pass_as_opaque, i64 0, i32 1, i32 2, !dbg !2431
  %"#arg2.elt3.elt7" = extractvalue %list.RocList %"#arg2.elt3", 2, !dbg !2431
  store i64 %"#arg2.elt3.elt7", ptr %element_to_pass_as_opaque.repack2.repack6, align 8, !dbg !2431
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !2431
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !2431
  %list_alloca1.repack8 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !2431
  %"#arg1.elt9" = extractvalue %list.RocList %"#arg1", 1, !dbg !2431
  store i64 %"#arg1.elt9", ptr %list_alloca1.repack8, align 8, !dbg !2431
  %list_alloca1.repack10 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !2431
  %"#arg1.elt11" = extractvalue %list.RocList %"#arg1", 2, !dbg !2431
  store i64 %"#arg1.elt11", ptr %list_alloca1.repack10, align 8, !dbg !2431
  call void @llvm.experimental.noalias.scope.decl(metadata !2433), !dbg !2431
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca117), !dbg !2431
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca117, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !2431
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca117, i64 8, !dbg !2431
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !2431, !noalias !2433
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca117, i64 16, !dbg !2431
  %.sroa.01.0.copyload.i = load ptr, ptr %list_alloca117, align 8, !dbg !2431, !noalias !2433
  %.sroa.5.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !2431, !noalias !2433
  %0 = icmp ne ptr %.sroa.01.0.copyload.i, null, !dbg !2431
  br i1 %0, label %1, label %roc_builtins.list.append_unsafe.exit, !dbg !2431

1:                                                ; preds = %entry
  %2 = mul nuw i64 %.sroa.1.0.copyload.i, 32, !dbg !2431
  %3 = getelementptr inbounds i8, ptr %.sroa.01.0.copyload.i, i64 %2, !dbg !2431
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr ({ i64, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !2436, !noalias !2433
  br label %roc_builtins.list.append_unsafe.exit, !dbg !2431

roc_builtins.list.append_unsafe.exit:             ; preds = %entry, %1
  %4 = add nuw i64 %.sroa.1.0.copyload.i, 1, !dbg !2431
  store ptr %.sroa.01.0.copyload.i, ptr %list_alloca, align 8, !dbg !2431, !alias.scope !2433
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !2431
  store i64 %4, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !2431, !alias.scope !2433
  %.sroa.5.0..sroa_idx5.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !2431
  store i64 %.sroa.5.0.copyload.i, ptr %.sroa.5.0..sroa_idx5.i, align 8, !dbg !2431, !alias.scope !2433
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca117), !dbg !2431
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !2431
  %5 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !2431
  %load_list.elt12 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !2431
  %load_list.unpack13 = load i64, ptr %load_list.elt12, align 8, !dbg !2431
  %6 = insertvalue %list.RocList %5, i64 %load_list.unpack13, 1, !dbg !2431
  %load_list.elt14 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !2431
  %load_list.unpack15 = load i64, ptr %load_list.elt14, align 8, !dbg !2431
  %load_list16 = insertvalue %list.RocList %6, i64 %load_list.unpack15, 2, !dbg !2431
  ret %list.RocList %load_list16, !dbg !2431
}

define internal fastcc void @Five_42_109527f59dc22e69fc7d12a59cfca3745c5b2db3347623de6ba9cc2a77892e1(ptr %res, i64 %r, ptr %0) !dbg !2438 {
entry:
  %tag_alloca7 = alloca { [3 x i64], i8 }, align 8, !dbg !2439
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !2439
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %res, i64 0, i32 1, !dbg !2439
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2439
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !2439
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2439

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_9"(ptr %res), !dbg !2439
  %call_builtin = tail call ptr @roc_builtins.utils.allocate_with_refcount(i64 8, i32 8, i1 false), !dbg !2439
  store i64 %r, ptr %call_builtin, align 8, !dbg !2439
  store ptr %call_builtin, ptr %tag_alloca, align 8, !dbg !2439
  %tag_alloca.repack19 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !2439
  store i64 1, ptr %tag_alloca.repack19, align 8, !dbg !2439
  %tag_alloca.repack21 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !2439
  store i64 1, ptr %tag_alloca.repack21, align 8, !dbg !2439
  %tag_id_ptr4 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2439
  store i8 1, ptr %tag_id_ptr4, align 8, !dbg !2439
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !2439
  ret void, !dbg !2439

else_block:                                       ; preds = %entry
  %load_element.unpack = load ptr, ptr %res, align 8, !dbg !2439
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !2439
  %load_element.elt10 = getelementptr inbounds %list.RocList, ptr %res, i64 0, i32 1, !dbg !2439
  %load_element.unpack11 = load i64, ptr %load_element.elt10, align 8, !dbg !2439
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack11, 1, !dbg !2439
  %load_element.elt12 = getelementptr inbounds %list.RocList, ptr %res, i64 0, i32 2, !dbg !2439
  %load_element.unpack13 = load i64, ptr %load_element.elt12, align 8, !dbg !2439
  %load_element14 = insertvalue %list.RocList %2, i64 %load_element.unpack13, 2, !dbg !2439
  %call = tail call fastcc %list.RocList @List_append_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57(%list.RocList %load_element14, i64 %r), !dbg !2439
  %call.elt = extractvalue %list.RocList %call, 0, !dbg !2439
  store ptr %call.elt, ptr %tag_alloca7, align 8, !dbg !2439
  %tag_alloca7.repack15 = getelementptr inbounds %list.RocList, ptr %tag_alloca7, i64 0, i32 1, !dbg !2439
  %call.elt16 = extractvalue %list.RocList %call, 1, !dbg !2439
  store i64 %call.elt16, ptr %tag_alloca7.repack15, align 8, !dbg !2439
  %tag_alloca7.repack17 = getelementptr inbounds %list.RocList, ptr %tag_alloca7, i64 0, i32 2, !dbg !2439
  %call.elt18 = extractvalue %list.RocList %call, 2, !dbg !2439
  store i64 %call.elt18, ptr %tag_alloca7.repack17, align 8, !dbg !2439
  %tag_id_ptr9 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca7, i64 0, i32 1, !dbg !2439
  store i8 1, ptr %tag_id_ptr9, align 8, !dbg !2439
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca7, i64 32, i1 false), !dbg !2439
  ret void, !dbg !2439
}

define internal fastcc void @Inspect_208_ff221ac7ca39f9755b47cf296610e253e715f06b6f89d9ba74e07999c9221(ptr %f1, %list.RocList %fields, ptr %0) !dbg !2441 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @List_walk_47379a71f6fa75b326383965b5622141f57df12cc22d7140acdf38f0ac8dbc6d(%list.RocList %fields, ptr %f1, {} zeroinitializer, ptr nonnull %result_value), !dbg !2442
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2442
  ret void, !dbg !2442
}

define internal fastcc void @Task_attempt_5a5619cf790931c7192376a30476b7cf4ecf8b21be6e496ea8a90a18fdb354(ptr %"103", {} %transform, ptr %0) !dbg !2444 {
entry:
  %struct_alloca = alloca { { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(88) %"103", i64 88, i1 false), !dbg !2445
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %struct_alloca, i64 88, i1 false), !dbg !2445
  ret void, !dbg !2445
}

define internal fastcc i1 @Num_isGte_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d(i32 %"#arg1", i32 %"#arg2") !dbg !2447 {
entry:
  %gte_uint = icmp uge i32 %"#arg1", %"#arg2", !dbg !2448
  ret i1 %gte_uint, !dbg !2448
}

define internal fastcc void @Parser_combined_fc145ce74b45e32d63c5dc22b87822e84c8353c18391547f0431f2b1c148e(%list.RocList %input, { {}, { { {}, {} }, {} } } %"#arg_closure", ptr %0) !dbg !2450 {
entry:
  %result_value1 = alloca { [4 x i64], i8 }, align 8, !dbg !2451
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !2451
  %struct_field_access_record_1 = extractvalue { {}, { { {}, {} }, {} } } %"#arg_closure", 1, !dbg !2451
  %struct_field_access_record_0 = extractvalue { {}, { { {}, {} }, {} } } %"#arg_closure", 0, !dbg !2451
  call fastcc void @Parser_parsePartial_8ce35b34d71cf4b9b0a07273d98ed25775d2f26838242d0ab84e6f1473c5fd0({} %struct_field_access_record_0, %list.RocList %input, ptr nonnull %result_value), !dbg !2451
  call fastcc void @Result_try_3780de15a3a832596a21b52356ca78cefe1f05b661333fe4053d5b87a27e0(ptr nonnull %result_value, { { {}, {} }, {} } %struct_field_access_record_1, ptr nonnull %result_value1), !dbg !2451
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value1, i64 40, i1 false), !dbg !2451
  ret void, !dbg !2451
}

define internal fastcc void @Path_103_66a17817c8b9c59b3b1c6efd270ac6151355288efa72859b072ffcfc36e80d2(%list.RocList %bytes, ptr %path, ptr %0) !dbg !2453 {
entry:
  %result_value2 = alloca { [9 x i64], i8 }, align 8
  %result_value1 = alloca { [9 x i64], i8 }, align 8
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Str_fromUtf8_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2(%list.RocList %bytes, ptr nonnull %result_value), !dbg !2454
  call fastcc void @Result_mapErr_99ccc6754e07ea7cffe47524633bfb91dd0f5a5f04cc85ed764577b4b3a23(ptr nonnull %result_value, ptr %path, ptr nonnull %result_value1), !dbg !2454
  call fastcc void @Task_fromResult_1f5387d07f264470833b19a1c82f5d84310c7fa8ea615dd78f14115492d268(ptr nonnull %result_value1, ptr nonnull %result_value2), !dbg !2454
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %0, ptr noundef nonnull align 8 dereferenceable(80) %result_value2, i64 80, i1 false), !dbg !2454
  ret void, !dbg !2454
}

define internal fastcc void @Parser_77_2cc36d83ca42ffd4ac2b1eb425d8dda0c5e11f62d41acff849e4e80df8026(ptr %"420", %list.RocList %valParser, ptr %0) !dbg !2456 {
entry:
  %result_value2 = alloca { [6 x i64], i8 }, align 8, !dbg !2457
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !2457
  %struct_field1 = alloca %str.RocStr, align 8, !dbg !2457
  %struct_field.unpack = load ptr, ptr %"420", align 8, !dbg !2457
  %1 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !2457
  %struct_field.elt3 = getelementptr inbounds %list.RocList, ptr %"420", i64 0, i32 1, !dbg !2457
  %struct_field.unpack4 = load i64, ptr %struct_field.elt3, align 8, !dbg !2457
  %2 = insertvalue %list.RocList %1, i64 %struct_field.unpack4, 1, !dbg !2457
  %struct_field.elt5 = getelementptr inbounds %list.RocList, ptr %"420", i64 0, i32 2, !dbg !2457
  %struct_field.unpack6 = load i64, ptr %struct_field.elt5, align 8, !dbg !2457
  %struct_field7 = insertvalue %list.RocList %2, i64 %struct_field.unpack6, 2, !dbg !2457
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %str.RocStr }, ptr %"420", i64 0, i32 1, !dbg !2457
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_field1, ptr noundef nonnull align 8 dereferenceable(24) %struct_field_access_record_1, i64 24, i1 false), !dbg !2457
  call fastcc void @Parser_parsePartial_d598f04f24e92cd3b5f7ebf51a29bf23b1257441b9ab0b0179ec01984a0ce6a(%list.RocList %valParser, %list.RocList %struct_field7, ptr nonnull %result_value), !dbg !2457
  call fastcc void @Result_map_5cbbff1635f59ae21a02af6cfe0157283a05fb77d9b6ef4377a9133a78ffbe5(ptr nonnull %result_value, ptr nonnull %struct_field1, ptr nonnull %result_value2), !dbg !2457
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value2, i64 56, i1 false), !dbg !2457
  ret void, !dbg !2457
}

define internal fastcc void @Task_await_adba20621e2783b1b4e8a9e85923f48be6b39ffdde63c7f316be1a8303363(ptr %"102", ptr %transform, ptr %0) !dbg !2459 {
entry:
  %struct_alloca = alloca { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(56) %"102", i64 56, i1 false), !dbg !2460
  %struct_field_gep1 = getelementptr inbounds { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2460
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(32) %transform, i64 32, i1 false), !dbg !2460
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %struct_alloca, i64 88, i1 false), !dbg !2460
  ret void, !dbg !2460
}

define internal fastcc i32 @Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68(i64 %hash) !dbg !2462 {
entry:
  %call = tail call fastcc i32 @Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(i64 %hash), !dbg !2463
  %call1 = tail call fastcc i32 @Dict_fingerprintMask_bac59821c43c0b53dd3438580b2599a5bf16c219b40a9d5e9a6e6a5390(), !dbg !2463
  %call2 = tail call fastcc i32 @Num_bitwiseAnd_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9(i32 %call, i32 %call1), !dbg !2463
  %call3 = tail call fastcc i32 @Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d(), !dbg !2463
  %call4 = tail call fastcc i32 @Num_bitwiseOr_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b(i32 %call2, i32 %call3), !dbg !2463
  ret i32 %call4, !dbg !2463
}

define internal fastcc void @List_get_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753(%list.RocList %list, i64 %index, ptr %0) !dbg !2465 {
entry:
  %tag_alloca3 = alloca { [1 x i64], i8 }, align 8, !dbg !2466
  %tag_alloca = alloca { [1 x i64], i8 }, align 8, !dbg !2466
  %call = tail call fastcc i64 @List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(%list.RocList %list), !dbg !2466
  %call1 = tail call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %index, i64 %call), !dbg !2466
  br i1 %call1, label %then_block, label %else_block, !dbg !2466

then_block:                                       ; preds = %entry
  %call2 = tail call fastcc i64 @List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92(%list.RocList %list, i64 %index), !dbg !2466
  store i64 %call2, ptr %tag_alloca, align 8, !dbg !2466
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2466
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2466
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca, i64 16, i1 false), !dbg !2466
  ret void, !dbg !2466

else_block:                                       ; preds = %entry
  %tag_id_ptr5 = getelementptr inbounds { [1 x i64], i8 }, ptr %tag_alloca3, i64 0, i32 1, !dbg !2466
  store i8 0, ptr %tag_id_ptr5, align 8, !dbg !2466
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %tag_alloca3, i64 16, i1 false), !dbg !2466
  ret void, !dbg !2466
}

define internal fastcc i32 @Num_addWrap_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b(i32 %"#arg1", i32 %"#arg2") !dbg !2468 {
entry:
  %add_int_wrap = add i32 %"#arg1", %"#arg2", !dbg !2469
  ret i32 %add_int_wrap, !dbg !2469
}

define internal fastcc void @Dict_findHelper_6fdff3e812be393e397a32aeb76ae96155b45793f22c8c7f8b12de3628ba863(%list.RocList %"446", i64 %"447", i32 %"448", %list.RocList %"449", i64 %"450", ptr %0) !dbg !2471 {
entry:
  %struct_alloca26 = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !2472
  %tag_alloca23 = alloca { [3 x i64], i8 }, align 8, !dbg !2472
  %struct_alloca = alloca { i64, { [3 x i64], i8 } }, align 8, !dbg !2472
  %tag_alloca = alloca { [3 x i64], i8 }, align 8, !dbg !2472
  tail call fastcc void @"#Attr_#inc_5"(%list.RocList %"446", i64 1), !dbg !2472
  tail call fastcc void @"#Attr_#inc_7"(%list.RocList %"449", i64 1), !dbg !2472
  br label %joinpointcont, !dbg !2472

joinpointcont:                                    ; preds = %else_block22, %else_block13, %entry
  %joinpointarg1 = phi i64 [ %"447", %entry ], [ %call16, %else_block13 ], [ %call30, %else_block22 ], !dbg !2472
  %joinpointarg2 = phi i32 [ %"448", %entry ], [ %call17, %else_block13 ], [ %call31, %else_block22 ], !dbg !2472
  %call = tail call fastcc { i32, i32 } @Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0(%list.RocList %"446", i64 %joinpointarg1), !dbg !2472
  %struct_field_access_record_1 = extractvalue { i32, i32 } %call, 1, !dbg !2472
  %call5 = tail call fastcc i1 @Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(i32 %joinpointarg2, i32 %struct_field_access_record_1), !dbg !2472
  br i1 %call5, label %then_block, label %else_block, !dbg !2472

then_block:                                       ; preds = %joinpointcont
  %struct_field_access_record_0 = extractvalue { i32, i32 } %call, 0, !dbg !2472
  %call6 = tail call fastcc i64 @Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(i32 %struct_field_access_record_0), !dbg !2472
  %call7 = tail call fastcc { i64, %list.RocList } @Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec(%list.RocList %"449", i64 %call6), !dbg !2472
  %struct_field_access_record_08 = extractvalue { i64, %list.RocList } %call7, 0, !dbg !2472
  %call10 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %struct_field_access_record_08, i64 %"450"), !dbg !2472
  br i1 %call10, label %then_block12, label %else_block13, !dbg !2472

else_block:                                       ; preds = %joinpointcont
  %struct_field_access_record_118 = extractvalue { i32, i32 } %call, 1, !dbg !2472
  %call19 = tail call fastcc i1 @Num_isGt_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b(i32 %joinpointarg2, i32 %struct_field_access_record_118), !dbg !2472
  br i1 %call19, label %then_block21, label %else_block22, !dbg !2472

then_block12:                                     ; preds = %then_block
  %struct_field_access_record_19 = extractvalue { i64, %list.RocList } %call7, 1, !dbg !2472
  tail call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field_access_record_19, i64 1), !dbg !2472
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %"446"), !dbg !2472
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %"449"), !dbg !2472
  %struct_field_access_record_19.elt = extractvalue %list.RocList %struct_field_access_record_19, 0, !dbg !2472
  store ptr %struct_field_access_record_19.elt, ptr %tag_alloca, align 8, !dbg !2472
  %tag_alloca.repack32 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 1, !dbg !2472
  %struct_field_access_record_19.elt33 = extractvalue %list.RocList %struct_field_access_record_19, 1, !dbg !2472
  store i64 %struct_field_access_record_19.elt33, ptr %tag_alloca.repack32, align 8, !dbg !2472
  %tag_alloca.repack34 = getelementptr inbounds %list.RocList, ptr %tag_alloca, i64 0, i32 2, !dbg !2472
  %struct_field_access_record_19.elt35 = extractvalue %list.RocList %struct_field_access_record_19, 2, !dbg !2472
  store i64 %struct_field_access_record_19.elt35, ptr %tag_alloca.repack34, align 8, !dbg !2472
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2472
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2472
  store i64 %joinpointarg1, ptr %struct_alloca, align 8, !dbg !2472
  %struct_field_gep14 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2472
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep14, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !2472
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !2472
  ret void, !dbg !2472

else_block13:                                     ; preds = %then_block
  %call15 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"446"), !dbg !2472
  %call16 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg1, i64 %call15), !dbg !2472
  %call17 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %joinpointarg2), !dbg !2472
  br label %joinpointcont, !dbg !2472

then_block21:                                     ; preds = %else_block
  tail call fastcc void @"#Attr_#dec_5"(%list.RocList %"446"), !dbg !2472
  tail call fastcc void @"#Attr_#dec_7"(%list.RocList %"449"), !dbg !2472
  store i1 false, ptr %tag_alloca23, align 8, !dbg !2472
  %tag_id_ptr25 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca23, i64 0, i32 1, !dbg !2472
  store i8 0, ptr %tag_id_ptr25, align 8, !dbg !2472
  store i64 %joinpointarg1, ptr %struct_alloca26, align 8, !dbg !2472
  %struct_field_gep28 = getelementptr inbounds { i64, { [3 x i64], i8 } }, ptr %struct_alloca26, i64 0, i32 1, !dbg !2472
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep28, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca23, i64 32, i1 false), !dbg !2472
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca26, i64 40, i1 false), !dbg !2472
  ret void, !dbg !2472

else_block22:                                     ; preds = %else_block
  %call29 = tail call fastcc i64 @List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee(%list.RocList %"446"), !dbg !2472
  %call30 = tail call fastcc i64 @Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276(i64 %joinpointarg1, i64 %call29), !dbg !2472
  %call31 = tail call fastcc i32 @Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e(i32 %joinpointarg2), !dbg !2472
  br label %joinpointcont, !dbg !2472
}

define internal fastcc void @Parser_52_52115f631dea3d17c0d7d9ff65a53ef4e675f1908d1049eb3ef64da4d7e5d(%list.RocList %input, ptr %val, ptr %0) !dbg !2474 {
entry:
  %tag_alloca = alloca { [7 x i64], i8 }, align 8, !dbg !2475
  %struct_alloca2 = alloca { { %list.RocList, { [3 x i64], i8 } } }, align 8, !dbg !2475
  %struct_alloca = alloca { %list.RocList, { [3 x i64], i8 } }, align 8, !dbg !2475
  tail call fastcc void @"#Attr_#inc_12"(%list.RocList %input, i64 1), !dbg !2475
  %input.elt = extractvalue %list.RocList %input, 0, !dbg !2475
  store ptr %input.elt, ptr %struct_alloca, align 8, !dbg !2475
  %struct_alloca.repack4 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !2475
  %input.elt5 = extractvalue %list.RocList %input, 1, !dbg !2475
  store i64 %input.elt5, ptr %struct_alloca.repack4, align 8, !dbg !2475
  %struct_alloca.repack6 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !2475
  %input.elt7 = extractvalue %list.RocList %input, 2, !dbg !2475
  store i64 %input.elt7, ptr %struct_alloca.repack6, align 8, !dbg !2475
  %struct_field_gep1 = getelementptr inbounds { %list.RocList, { [3 x i64], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2475
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_field_gep1, ptr noundef nonnull align 8 dereferenceable(32) %val, i64 32, i1 false), !dbg !2475
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca2, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca, i64 56, i1 false), !dbg !2475
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(56) %struct_alloca2, i64 56, i1 false), !dbg !2475
  %tag_id_ptr = getelementptr inbounds { [7 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2475
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !2475
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %tag_alloca, i64 64, i1 false), !dbg !2475
  ret void, !dbg !2475
}

define internal fastcc void @Five_checkRule_5ae1d7e830a23d381281749fd7714be9e444b8f3266bc9fb69e39667d5159b(ptr %rulesDict, i64 %x, %list.RocList %update, ptr %0) !dbg !2477 {
entry:
  %result_value2 = alloca { [1 x i8], i8 }, align 8
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @Dict_get_6fe3723198a75889cb8af57c5c09ddd2b39fa52c21bf2b932afda892bd9e585(ptr %rulesDict, i64 %x, ptr nonnull %result_value), !dbg !2478
  call fastcc void @"#Attr_#inc_1"(%list.RocList %update, i64 1), !dbg !2478
  %insert_record_field = insertvalue { i64, %list.RocList } zeroinitializer, i64 %x, 0, !dbg !2478
  %insert_record_field1 = insertvalue { i64, %list.RocList } %insert_record_field, %list.RocList %update, 1, !dbg !2478
  call fastcc void @Result_try_ac6315adde982c4b62c768a77be738d224267f4f9e6f1a02f3bc60549578c(ptr nonnull %result_value, { i64, %list.RocList } %insert_record_field1, ptr nonnull %result_value2), !dbg !2478
  %1 = load i16, ptr %result_value2, align 8, !dbg !2478
  store i16 %1, ptr %0, align 1, !dbg !2478
  ret void, !dbg !2478
}

define internal fastcc %list.RocList @List_appendUnsafe_3bfae27b50cc70419dec89ef8da341b1287d7bb7b3c4bb2481ba28b17a8ec4(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2480 {
entry:
  %list_alloca111 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %element_to_pass_as_opaque = alloca i64, align 8
  store i64 %"#arg2", ptr %element_to_pass_as_opaque, align 8, !dbg !2481
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !2481
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !2481
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !2481
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !2481
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !2481
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !2481
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !2481
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !2481
  call void @llvm.experimental.noalias.scope.decl(metadata !2483), !dbg !2481
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca111), !dbg !2481
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca111, ptr align 1 %list_alloca1, i64 24, i1 false), !dbg !2481
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 8, !dbg !2481
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !2481, !noalias !2483
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca111, i64 16, !dbg !2481
  %.sroa.01.0.copyload.i = load ptr, ptr %list_alloca111, align 8, !dbg !2481, !noalias !2483
  %.sroa.5.0.copyload.i = load i64, ptr %.sroa.2.0..sroa_idx.i, align 8, !dbg !2481, !noalias !2483
  %0 = icmp ne ptr %.sroa.01.0.copyload.i, null, !dbg !2481
  br i1 %0, label %1, label %roc_builtins.list.append_unsafe.exit, !dbg !2481

1:                                                ; preds = %entry
  %2 = mul nuw i64 %.sroa.1.0.copyload.i, 8, !dbg !2481
  %3 = getelementptr inbounds i8, ptr %.sroa.01.0.copyload.i, i64 %2, !dbg !2481
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %element_to_pass_as_opaque, i64 ptrtoint (ptr getelementptr (i64, ptr null, i32 1) to i64), i1 false), !dbg !2486, !noalias !2483
  br label %roc_builtins.list.append_unsafe.exit, !dbg !2481

roc_builtins.list.append_unsafe.exit:             ; preds = %entry, %1
  %4 = add nuw i64 %.sroa.1.0.copyload.i, 1, !dbg !2481
  store ptr %.sroa.01.0.copyload.i, ptr %list_alloca, align 8, !dbg !2481, !alias.scope !2483
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !2481
  store i64 %4, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !2481, !alias.scope !2483
  %.sroa.5.0..sroa_idx5.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !2481
  store i64 %.sroa.5.0.copyload.i, ptr %.sroa.5.0..sroa_idx5.i, align 8, !dbg !2481, !alias.scope !2483
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca111), !dbg !2481
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !2481
  %5 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !2481
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !2481
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !2481
  %6 = insertvalue %list.RocList %5, i64 %load_list.unpack7, 1, !dbg !2481
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !2481
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !2481
  %load_list10 = insertvalue %list.RocList %6, i64 %load_list.unpack9, 2, !dbg !2481
  ret %list.RocList %load_list10, !dbg !2481
}

define internal fastcc i1 @List_isEmpty_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79(%list.RocList %list) !dbg !2488 {
entry:
  %call = tail call fastcc i64 @List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7(%list.RocList %list), !dbg !2489
  %call1 = tail call fastcc i1 @Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(i64 %call, i64 0), !dbg !2489
  ret i1 %call1, !dbg !2489
}

define internal fastcc i1 @Bool_structuralNotEq_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565(i64 %"#arg1", i64 %"#arg2") !dbg !2491 {
entry:
  %neq_u64 = icmp ne i64 %"#arg1", %"#arg2", !dbg !2492
  ret i1 %neq_u64, !dbg !2492
}

define internal fastcc void @Path_105_7cedde61e03cdc658cc4f3ee93bcb22d43ba6377e16d3385dc1646ec68353({ i64, i8 } %err, ptr %path, ptr %0) !dbg !2494 {
entry:
  %tag_alloca = alloca { [8 x i64], i8 }, align 8
  %struct_alloca = alloca { { [3 x i64], i8 }, { i64, i8 } }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(32) %path, i64 32, i1 false), !dbg !2495
  %struct_field_gep1 = getelementptr inbounds { { [3 x i64], i8 }, { i64, i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !2495
  store { i64, i8 } %err, ptr %struct_field_gep1, align 8, !dbg !2495
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !2495
  %tag_id_ptr = getelementptr inbounds { [8 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2495
  store i8 2, ptr %tag_id_ptr, align 8, !dbg !2495
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(72) %tag_alloca, i64 72, i1 false), !dbg !2495
  ret void, !dbg !2495
}

define internal fastcc i1 @Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f(ptr %"#arg1", ptr %"#arg2") !dbg !2497 {
entry:
  %call_builtin = tail call i1 @roc_builtins.str.equal(ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1", ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg2"), !dbg !2498
  ret i1 %call_builtin, !dbg !2498
}

define internal fastcc void @Parser_map_7044b319d821d554360e6668147629f3b5e31e3a1bed8f16e699f54194dd(%list.RocList %simpleParser, ptr %transform, ptr %0) !dbg !2500 {
entry:
  %result_value1 = alloca { %str.RocStr, %list.RocList }, align 8
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Parser_const_91a1934a75e3d136dfb5a572ece2bc79a479adc3e4cf2fc66855180818a63(ptr %transform, ptr nonnull %result_value), !dbg !2501
  call fastcc void @Parser_apply_c5db299579d3ff988e55ff7ffd6f579e265caed4e0f96283b96ac6f8293293e(ptr nonnull %result_value, %list.RocList %simpleParser, ptr nonnull %result_value1), !dbg !2501
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %result_value), !dbg !2501
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value1, i64 48, i1 false), !dbg !2501
  ret void, !dbg !2501
}

define internal fastcc void @Result_map_63a62446a3a2e66c16f975a152d1e79ba218462d3f6c0b693f02436a685aa8(ptr %result, i64 %transform, ptr %0) !dbg !2503 {
entry:
  %tag_alloca6 = alloca { [6 x i64], i8 }, align 8, !dbg !2504
  %load_element5 = alloca %str.RocStr, align 8, !dbg !2504
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !2504
  %struct_alloca = alloca { { %list.RocList, %list.RocList } }, align 8, !dbg !2504
  %result_value = alloca { %list.RocList, %list.RocList }, align 8, !dbg !2504
  %load_element = alloca { %list.RocList, %list.RocList }, align 8, !dbg !2504
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %result, i64 0, i32 1, !dbg !2504
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2504
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !2504
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !2504

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %load_element, ptr noundef nonnull align 8 dereferenceable(48) %result, i64 48, i1 false), !dbg !2504
  call fastcc void @Parser_82_647dd07ee8f7ddf03c325cf4d299a6b9816607efd5ade591788ff35124cdd(ptr nonnull %load_element, i64 %transform, ptr nonnull %result_value), !dbg !2504
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !2504
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !2504
  %tag_id_ptr2 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !2504
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !2504
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca, i64 56, i1 false), !dbg !2504
  ret void, !dbg !2504

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result, i64 24, i1 false), !dbg !2504
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %load_element5, align 8, !dbg !2504
  %load_tag_to_put_in_struct.elt9 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 1, !dbg !2504
  %load_tag_to_put_in_struct.unpack10 = load i64, ptr %load_tag_to_put_in_struct.elt9, align 8, !dbg !2504
  %load_tag_to_put_in_struct.elt11 = getelementptr inbounds %str.RocStr, ptr %load_element5, i64 0, i32 2, !dbg !2504
  %load_tag_to_put_in_struct.unpack12 = load i64, ptr %load_tag_to_put_in_struct.elt11, align 8, !dbg !2504
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca6, align 8, !dbg !2504
  %tag_alloca6.repack14 = getelementptr inbounds %str.RocStr, ptr %tag_alloca6, i64 0, i32 1, !dbg !2504
  store i64 %load_tag_to_put_in_struct.unpack10, ptr %tag_alloca6.repack14, align 8, !dbg !2504
  %tag_alloca6.repack16 = getelementptr inbounds %str.RocStr, ptr %tag_alloca6, i64 0, i32 2, !dbg !2504
  store i64 %load_tag_to_put_in_struct.unpack12, ptr %tag_alloca6.repack16, align 8, !dbg !2504
  %tag_id_ptr8 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca6, i64 0, i32 1, !dbg !2504
  store i8 0, ptr %tag_id_ptr8, align 8, !dbg !2504
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %tag_alloca6, i64 56, i1 false), !dbg !2504
  ret void, !dbg !2504
}

define internal fastcc void @Inspect_apply_b7f585fd6f82cd9d725cedb302bc1875b5e7bb83a5ac59033a7d4152c1447(ptr %"303", ptr %fmt, ptr %0) !dbg !2506 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !2507
  %result_value = alloca %str.RocStr, align 8, !dbg !2507
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !2507
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2507
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
  ], !dbg !2507

default:                                          ; preds = %entry
  call fastcc void @Inspect_206_505ee8ebb90affa4bd2deabd9435fb89b29e5cff14c44acccc1c3ac721361(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !2507
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !2507
  ret void, !dbg !2507

branch0:                                          ; preds = %entry
  call fastcc void @Inspect_204_8e6f801bf53c86630ef8be4d8c3ee15f80c78c69d3ce8031062a6e529ee(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !2507
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2507
  ret void, !dbg !2507
}

define internal fastcc void @List_walkHelp_583276bf45a8e97f112dfbc4f4d4d2a42a1119a510af9e76a5cba40a368d0(%list.RocList %"455", ptr %"456", {} %"457", i64 %"458", i64 %"459", ptr %0) !dbg !2509 {
entry:
  %tmp_output_for_jmp6 = alloca %str.RocStr, align 8
  %result_value4 = alloca %str.RocStr, align 8
  %result_value = alloca { [1 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#inc_32"(%list.RocList %"455", i64 1), !dbg !2510
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(24) %"456", i64 24, i1 false), !dbg !2510
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, i64 24, i1 false), !dbg !2510
  br label %joinpointcont, !dbg !2510

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg2 = phi i64 [ %"458", %entry ], [ %call5, %then_block ], !dbg !2510
  %call = call fastcc i1 @Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(i64 %joinpointarg2, i64 %"459"), !dbg !2510
  br i1 %call, label %then_block, label %else_block, !dbg !2510

then_block:                                       ; preds = %joinpointcont
  call fastcc void @List_getUnsafe_e19be4977dae6e316e964ccb3f3519dc19317486f4e86b58a231a1854931186(%list.RocList %"455", i64 %joinpointarg2, ptr nonnull %result_value), !dbg !2510
  call fastcc void @Inspect_210_22d059c38186d5cb98646d1e317ec5398bde0f1c120a343e26fd56512b47ba5(ptr nonnull %joinpoint_arg_alloca, ptr nonnull %result_value, ptr nonnull %result_value4), !dbg !2510
  %call5 = call fastcc i64 @Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(i64 %joinpointarg2, i64 1), !dbg !2510
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !2510
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, i64 24, i1 false), !dbg !2510
  br label %joinpointcont, !dbg !2510

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_32"(%list.RocList %"455"), !dbg !2510
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, i64 24, i1 false), !dbg !2510
  ret void, !dbg !2510
}

define internal fastcc { {}, { { {}, {} }, {} } } @Parser_map_ab1494ad8c1013c31dbcfc142b2c6b29fe5fc5864797b5f243fa67a225278d84({ { {}, {} }, {} } %simpleParser, {} %transform) !dbg !2512 {
entry:
  %call = tail call fastcc {} @Parser_const_1375e2db4435b2138a3415b7c96936836b72ffb02dfbb07976d45f5890e0({} %transform), !dbg !2513
  %call1 = tail call fastcc { {}, { { {}, {} }, {} } } @Parser_apply_f0b2dd2ef4827f9ec2d49f375ba7c16ec7ebf163abea129818bfb85fe1b9cde({} %call, { { {}, {} }, {} } %simpleParser), !dbg !2513
  ret { {}, { { {}, {} }, {} } } %call1, !dbg !2513
}

define internal fastcc i64 @Num_divTrunc_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2(i64 %a, i64 %b) !dbg !2515 {
entry:
  %const_str_store = alloca %str.RocStr, align 8, !dbg !2516
  %call = tail call fastcc i1 @Num_isZero_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a(i64 %b), !dbg !2516
  br i1 %call, label %then_block, label %else_block, !dbg !2516

then_block:                                       ; preds = %entry
  store ptr inttoptr (i64 2338042651316874825 to ptr), ptr %const_str_store, align 8, !dbg !2516
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2516
  store i64 7957695010998479204, ptr %const_str_store.repack2, align 8, !dbg !2516
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2516
  store i64 -7638068477433388512, ptr %const_str_store.repack3, align 8, !dbg !2516
  call void @roc_panic(ptr %const_str_store, i32 1), !dbg !2516
  unreachable, !dbg !2516

else_block:                                       ; preds = %entry
  %call1 = tail call fastcc i64 @Num_divTruncUnchecked_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f(i64 %a, i64 %b), !dbg !2516
  ret i64 %call1, !dbg !2516
}

define internal fastcc { {}, { { {}, {} }, {} } } @Parser_buildPrimitiveParser_5555960d2574665268663bcbbd6b17975c35e711af9b8ea918dead31b5e3b({ {}, { { {}, {} }, {} } } %fun) !dbg !2518 {
entry:
  ret { {}, { { {}, {} }, {} } } %fun, !dbg !2519
}

define internal fastcc void @Inspect_apply_9aea80b84c2f1cf95fb346d143d7e8d50c7bf2b25952d5f8f5db3c06a669b1a(ptr %"303", ptr %fmt, ptr %0) !dbg !2521 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !2522
  %result_value = alloca %str.RocStr, align 8, !dbg !2522
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !2522
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2522
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
  ], !dbg !2522

default:                                          ; preds = %entry
  call fastcc void @Inspect_206_4e21185d9b1969bf58bdf4424bdf974b88cf27f21962d745feb944964dbbb33(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !2522
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !2522
  ret void, !dbg !2522

branch0:                                          ; preds = %entry
  call fastcc void @Inspect_204_b96090d699017c67f1c33d23f5f5b60732db46124d7bead69858245e5f4(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !2522
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !2522
  ret void, !dbg !2522
}

define internal fastcc void @Inspect_206_4e21185d9b1969bf58bdf4424bdf974b88cf27f21962d745feb944964dbbb33(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !2524 {
entry:
  %result_value8 = alloca %str.RocStr, align 8, !dbg !2525
  %const_str_store7 = alloca %str.RocStr, align 8, !dbg !2525
  %result_value6 = alloca %str.RocStr, align 8, !dbg !2525
  %result_value5 = alloca %str.RocStr, align 8, !dbg !2525
  %result_value = alloca %str.RocStr, align 8, !dbg !2525
  %const_str_store = alloca %str.RocStr, align 8, !dbg !2525
  %load_element4 = alloca %str.RocStr, align 8, !dbg !2525
  %get_opaque_data_ptr1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !2525
  %load_element.unpack = load ptr, ptr %get_opaque_data_ptr1, align 8, !dbg !2525
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !2525
  %load_element.elt9 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !2525
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !2525
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack10, 1, !dbg !2525
  %load_element.elt11 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !2525
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !2525
  %load_element13 = insertvalue %list.RocList %2, i64 %load_element.unpack12, 2, !dbg !2525
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !2525
  store ptr inttoptr (i64 40 to ptr), ptr %const_str_store, align 8, !dbg !2525
  %const_str_store.repack14 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !2525
  store i64 0, ptr %const_str_store.repack14, align 8, !dbg !2525
  %const_str_store.repack15 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !2525
  store i64 -9151314442816847872, ptr %const_str_store.repack15, align 8, !dbg !2525
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !2525
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store), !dbg !2525
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value, ptr nonnull %load_element4, ptr nonnull %result_value5), !dbg !2525
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %load_element4), !dbg !2525
  call fastcc void @Inspect_208_47ed43a06597f89afbe2c90ac4640f89c2157f577d6fd03fdc26e32f321dc2(ptr nonnull %result_value5, %list.RocList %load_element13, ptr nonnull %result_value6), !dbg !2525
  call fastcc void @"#Attr_#dec_39"(%list.RocList %load_element13), !dbg !2525
  store ptr inttoptr (i64 41 to ptr), ptr %const_str_store7, align 8, !dbg !2525
  %const_str_store7.repack16 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 1, !dbg !2525
  store i64 0, ptr %const_str_store7.repack16, align 8, !dbg !2525
  %const_str_store7.repack17 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 2, !dbg !2525
  store i64 -9151314442816847872, ptr %const_str_store7.repack17, align 8, !dbg !2525
  call fastcc void @Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6(ptr nonnull %result_value6, ptr nonnull %const_str_store7, ptr nonnull %result_value8), !dbg !2525
  call fastcc void @"#Attr_#dec_13"(ptr nonnull %const_str_store7), !dbg !2525
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !2525
  ret void, !dbg !2525
}

define private fastcc void @"#Attr_#inc_1"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2527 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2528
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2528
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2528
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2528
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2528
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2528
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2528
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2528
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2528
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2528
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2528
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !2528
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !2528
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !2528

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !2528
  %5 = add i64 %4, -8, !dbg !2528
  %6 = inttoptr i64 %5 to ptr, !dbg !2528
  %7 = load i64, ptr %6, align 8, !dbg !2528
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !2528
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !2528

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !2528
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !2528
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2528
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !2528
  br label %roc_builtins.list.incref.exit, !dbg !2528

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2528
  ret void, !dbg !2528
}

define private fastcc void @"#Attr_#dec_1"(%list.RocList %"#arg1") !dbg !2530 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2531
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2531
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2531
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2531
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2531
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2531
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2531
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2531
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2531
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2531
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2531
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !2531
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2531
  %2 = icmp ne i64 %0, 0, !dbg !2531
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !2531
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !2531

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !2531
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !2531
  %6 = load i64, ptr %5, align 8, !dbg !2531
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2531
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !2531

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !2531
  store i64 %8, ptr %5, align 8, !dbg !2531
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !2531
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !2531

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !2531
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2531
  br label %roc_builtins.list.decref.exit, !dbg !2531

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2531
  br label %roc_builtins.list.decref.exit, !dbg !2531

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !2531
}

define private fastcc void @"#Attr_#dec_2"(%list.RocList %"#arg1") !dbg !2533 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2534
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2534
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2534
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2534
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2534
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2534
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2534
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2534
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2534
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2534
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2534
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !2534
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2534
  %2 = icmp ne i64 %0, 0, !dbg !2534
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !2534
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !2534

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !2534
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !2534
  %6 = load i64, ptr %5, align 8, !dbg !2534
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2534
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !2534

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !2534
  store i64 %8, ptr %5, align 8, !dbg !2534
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !2534
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !2534

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !2534
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2534
  br label %roc_builtins.list.decref.exit, !dbg !2534

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2534
  br label %roc_builtins.list.decref.exit, !dbg !2534

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !2534
}

define private fastcc void @"#Attr_#dec_3"({ i64, i64 } %"#arg1") !dbg !2536 {
entry:
  ret void, !dbg !2537
}

define private fastcc void @"#Attr_#dec_4"(%list.RocList %"#arg1") !dbg !2539 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2540
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2540
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2540
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2540
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2540
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2540
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2540
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2540
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2540
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2540
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2540
  %2 = or i64 %1, %0, !dbg !2540
  %3 = icmp ne i64 %2, 0, !dbg !2540
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2540
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2540
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2540
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !2540

.critedge.i.i:                                    ; preds = %.lr.ph.i.i, %list.RocList.getAllocationElementCount.exit.i.i, %list.RocList.isUnique.exit.thread.i.i, %list.RocList.isUnique.exit.i.i
  %.pre-phi.i = phi i64 [ %31, %list.RocList.getAllocationElementCount.exit.i.i ], [ %25, %list.RocList.isUnique.exit.thread.i.i ], [ %18, %list.RocList.isUnique.exit.i.i ], [ %32, %.lr.ph.i.i ], !dbg !2540
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2540
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %.pre-phi.i, !dbg !2540
  %7 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2540
  %8 = icmp ne i64 %6, 0, !dbg !2540
  %or.cond.i.i.i = select i1 %7, i1 %8, i1 false, !dbg !2540
  br i1 %or.cond.i.i.i, label %9, label %list.RocList.decref.exit.i, !dbg !2540

9:                                                ; preds = %.critedge.i.i
  %10 = inttoptr i64 %6 to ptr, !dbg !2540
  %11 = getelementptr inbounds i64, ptr %10, i64 -1, !dbg !2540
  %12 = load i64, ptr %11, align 8, !dbg !2540
  %.not.i.i.i = icmp eq i64 %12, 0, !dbg !2540
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %13, !dbg !2540

13:                                               ; preds = %9
  %14 = add i64 %12, -1, !dbg !2540
  store i64 %14, ptr %11, align 8, !dbg !2540
  %15 = icmp eq i64 %12, -9223372036854775808, !dbg !2540
  br i1 %15, label %16, label %list.RocList.decref.exit.i, !dbg !2540

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, ptr %11, i64 -8, !dbg !2540
  call void @roc_dealloc(ptr nonnull align 1 %17, i32 8), !dbg !2540
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2540
  br label %roc_builtins.list.decref.exit, !dbg !2540

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %18 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2540
  %19 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2540
  %20 = select i1 %19, i64 %5, i64 %18, !dbg !2540
  %21 = inttoptr i64 %20 to ptr, !dbg !2540
  %22 = getelementptr inbounds i64, ptr %21, i64 -1, !dbg !2540
  %23 = load i64, ptr %22, align 8, !dbg !2540
  %24 = icmp eq i64 %23, -9223372036854775808, !dbg !2540
  br i1 %24, label %list.RocList.isUnique.exit.thread.i.i, label %.critedge.i.i, !dbg !2540

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  %.pre-phi22.i.i = phi ptr [ %21, %list.RocList.isUnique.exit.i.i ], [ %.sroa.0.0.copyload.i, %entry ], !dbg !2540
  %.pre-phi20.i.i = phi i64 [ %20, %list.RocList.isUnique.exit.i.i ], [ %4, %entry ], !dbg !2540
  %25 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2540
  %.not.i.i = icmp eq i64 %.pre-phi20.i.i, 0, !dbg !2540
  br i1 %.not.i.i, label %.critedge.i.i, label %26, !dbg !2540

26:                                               ; preds = %list.RocList.isUnique.exit.thread.i.i
  %27 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2540
  br i1 %27, label %28, label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2540

28:                                               ; preds = %26
  %29 = inttoptr i64 %5 to ptr, !dbg !2540
  %30 = getelementptr inbounds i64, ptr %29, i64 -2, !dbg !2540
  %common.ret.op.in.i.sroa.speculate.load.10.i.i = load i64, ptr %30, align 8, !dbg !2540
  br label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2540

list.RocList.getAllocationElementCount.exit.i.i:  ; preds = %28, %26
  %common.ret.op.in.i.sroa.speculated.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i.i, %28 ], [ %.sroa.3.0.copyload.i, %26 ], !dbg !2540
  %31 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2540
  %.not16.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i.i, 0, !dbg !2540
  br i1 %.not16.i.i, label %.critedge.i.i, label %.lr.ph.i.preheader.i, !dbg !2540

.lr.ph.i.preheader.i:                             ; preds = %list.RocList.getAllocationElementCount.exit.i.i
  br label %.lr.ph.i.i, !dbg !2540

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.i.preheader.i
  %lsr.iv4.i = phi ptr [ %.pre-phi22.i.i, %.lr.ph.i.preheader.i ], [ %uglygep.i, %.lr.ph.i.i ], !dbg !2540
  %lsr.iv.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i.i, %.lr.ph.i.preheader.i ], [ %lsr.iv.next.i, %.lr.ph.i.i ], !dbg !2540
  %32 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2540
  %load_opaque.i = load %list.RocList, ptr %lsr.iv4.i, align 8, !dbg !2542
  call fastcc void @"#Attr_#dec_1"(%list.RocList %load_opaque.i) #18, !dbg !2542
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !2540
  %uglygep.i = getelementptr i8, ptr %lsr.iv4.i, i64 24, !dbg !2540
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !2540
  br i1 %exitcond.not.i.i, label %.critedge.i.i, label %.lr.ph.i.i, !dbg !2540

list.RocList.decref.exit.i:                       ; preds = %13, %9, %.critedge.i.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2540
  br label %roc_builtins.list.decref.exit, !dbg !2540

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %16
  ret void, !dbg !2540
}

define private fastcc void @"#Attr_#dec_5"(%list.RocList %"#arg1") !dbg !2544 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2545
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2545
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2545
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2545
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2545
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2545
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2545
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2545
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2545
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2545
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2545
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !2545
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2545
  %2 = icmp ne i64 %0, 0, !dbg !2545
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !2545
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !2545

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !2545
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !2545
  %6 = load i64, ptr %5, align 8, !dbg !2545
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2545
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !2545

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !2545
  store i64 %8, ptr %5, align 8, !dbg !2545
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !2545
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !2545

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !2545
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2545
  br label %roc_builtins.list.decref.exit, !dbg !2545

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2545
  br label %roc_builtins.list.decref.exit, !dbg !2545

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !2545
}

define private fastcc void @"#Attr_#dec_6"({ i32, i32 } %"#arg1") !dbg !2547 {
entry:
  ret void, !dbg !2548
}

define private fastcc void @"#Attr_#dec_7"(%list.RocList %"#arg1") !dbg !2550 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2551
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2551
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2551
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2551
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2551
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2551
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2551
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2551
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2551
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2551
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2551
  %2 = or i64 %1, %0, !dbg !2551
  %3 = icmp ne i64 %2, 0, !dbg !2551
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2551
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2551
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2551
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !2551

.critedge.i.i:                                    ; preds = %.lr.ph.i.i, %list.RocList.getAllocationElementCount.exit.i.i, %list.RocList.isUnique.exit.thread.i.i, %list.RocList.isUnique.exit.i.i
  %.pre-phi.i = phi i64 [ %31, %list.RocList.getAllocationElementCount.exit.i.i ], [ %25, %list.RocList.isUnique.exit.thread.i.i ], [ %18, %list.RocList.isUnique.exit.i.i ], [ %32, %.lr.ph.i.i ], !dbg !2551
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2551
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %.pre-phi.i, !dbg !2551
  %7 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2551
  %8 = icmp ne i64 %6, 0, !dbg !2551
  %or.cond.i.i.i = select i1 %7, i1 %8, i1 false, !dbg !2551
  br i1 %or.cond.i.i.i, label %9, label %list.RocList.decref.exit.i, !dbg !2551

9:                                                ; preds = %.critedge.i.i
  %10 = inttoptr i64 %6 to ptr, !dbg !2551
  %11 = getelementptr inbounds i64, ptr %10, i64 -1, !dbg !2551
  %12 = load i64, ptr %11, align 8, !dbg !2551
  %.not.i.i.i = icmp eq i64 %12, 0, !dbg !2551
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %13, !dbg !2551

13:                                               ; preds = %9
  %14 = add i64 %12, -1, !dbg !2551
  store i64 %14, ptr %11, align 8, !dbg !2551
  %15 = icmp eq i64 %12, -9223372036854775808, !dbg !2551
  br i1 %15, label %16, label %list.RocList.decref.exit.i, !dbg !2551

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, ptr %11, i64 -8, !dbg !2551
  call void @roc_dealloc(ptr nonnull align 1 %17, i32 8), !dbg !2551
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2551
  br label %roc_builtins.list.decref.exit, !dbg !2551

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %18 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2551
  %19 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2551
  %20 = select i1 %19, i64 %5, i64 %18, !dbg !2551
  %21 = inttoptr i64 %20 to ptr, !dbg !2551
  %22 = getelementptr inbounds i64, ptr %21, i64 -1, !dbg !2551
  %23 = load i64, ptr %22, align 8, !dbg !2551
  %24 = icmp eq i64 %23, -9223372036854775808, !dbg !2551
  br i1 %24, label %list.RocList.isUnique.exit.thread.i.i, label %.critedge.i.i, !dbg !2551

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  %.pre-phi22.i.i = phi ptr [ %21, %list.RocList.isUnique.exit.i.i ], [ %.sroa.0.0.copyload.i, %entry ], !dbg !2551
  %.pre-phi20.i.i = phi i64 [ %20, %list.RocList.isUnique.exit.i.i ], [ %4, %entry ], !dbg !2551
  %25 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2551
  %.not.i.i = icmp eq i64 %.pre-phi20.i.i, 0, !dbg !2551
  br i1 %.not.i.i, label %.critedge.i.i, label %26, !dbg !2551

26:                                               ; preds = %list.RocList.isUnique.exit.thread.i.i
  %27 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2551
  br i1 %27, label %28, label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2551

28:                                               ; preds = %26
  %29 = inttoptr i64 %5 to ptr, !dbg !2551
  %30 = getelementptr inbounds i64, ptr %29, i64 -2, !dbg !2551
  %common.ret.op.in.i.sroa.speculate.load.10.i.i = load i64, ptr %30, align 8, !dbg !2551
  br label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2551

list.RocList.getAllocationElementCount.exit.i.i:  ; preds = %28, %26
  %common.ret.op.in.i.sroa.speculated.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i.i, %28 ], [ %.sroa.3.0.copyload.i, %26 ], !dbg !2551
  %31 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2551
  %.not16.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i.i, 0, !dbg !2551
  br i1 %.not16.i.i, label %.critedge.i.i, label %.lr.ph.i.preheader.i, !dbg !2551

.lr.ph.i.preheader.i:                             ; preds = %list.RocList.getAllocationElementCount.exit.i.i
  br label %.lr.ph.i.i, !dbg !2551

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.i.preheader.i
  %lsr.iv4.i = phi ptr [ %.pre-phi22.i.i, %.lr.ph.i.preheader.i ], [ %uglygep.i, %.lr.ph.i.i ], !dbg !2551
  %lsr.iv.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i.i, %.lr.ph.i.preheader.i ], [ %lsr.iv.next.i, %.lr.ph.i.i ], !dbg !2551
  %32 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2551
  %load_opaque.i = load { i64, %list.RocList }, ptr %lsr.iv4.i, align 8, !dbg !2553
  call fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %load_opaque.i) #18, !dbg !2553
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !2551
  %uglygep.i = getelementptr i8, ptr %lsr.iv4.i, i64 32, !dbg !2551
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !2551
  br i1 %exitcond.not.i.i, label %.critedge.i.i, label %.lr.ph.i.i, !dbg !2551

list.RocList.decref.exit.i:                       ; preds = %13, %9, %.critedge.i.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2551
  br label %roc_builtins.list.decref.exit, !dbg !2551

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %16
  ret void, !dbg !2551
}

define private fastcc void @"#Attr_#dec_8"({ i64, %list.RocList } %"#arg1") !dbg !2555 {
entry:
  %struct_field_access_record_1 = extractvalue { i64, %list.RocList } %"#arg1", 1, !dbg !2556
  call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field_access_record_1), !dbg !2556
  ret void, !dbg !2556
}

define private fastcc void @"#Attr_#inc_5"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2558 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2559
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2559
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2559
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2559
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2559
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2559
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2559
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2559
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2559
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2559
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2559
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !2559
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !2559
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !2559

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !2559
  %5 = add i64 %4, -8, !dbg !2559
  %6 = inttoptr i64 %5 to ptr, !dbg !2559
  %7 = load i64, ptr %6, align 8, !dbg !2559
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !2559
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !2559

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !2559
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !2559
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2559
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !2559
  br label %roc_builtins.list.incref.exit, !dbg !2559

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2559
  ret void, !dbg !2559
}

define private fastcc void @"#Attr_#inc_7"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2561 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2562
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2562
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2562
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2562
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2562
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2562
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2562
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2562
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2562
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2562
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2562
  %2 = or i64 %1, %0, !dbg !2562
  %3 = icmp ne i64 %2, 0, !dbg !2562
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2562
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !2562

.critedge.i.i:                                    ; preds = %23, %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2562
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2562
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2562
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %4, !dbg !2562
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2562
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %7, !dbg !2562

7:                                                ; preds = %.critedge.i.i
  %8 = and i64 %6, -8, !dbg !2562
  %9 = add i64 %8, -8, !dbg !2562
  %10 = inttoptr i64 %9 to ptr, !dbg !2562
  %11 = load i64, ptr %10, align 8, !dbg !2562
  %.not.i.i.i.i = icmp eq i64 %11, 0, !dbg !2562
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %12, !dbg !2562

12:                                               ; preds = %7
  %13 = add nsw i64 %11, %"#arg2", !dbg !2562
  %sunkaddr.i = inttoptr i64 %8 to ptr, !dbg !2562
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2562
  store i64 %13, ptr %sunkaddr2.i, align 8, !dbg !2562
  br label %roc_builtins.list.incref.exit, !dbg !2562

.thread.i.i:                                      ; preds = %entry
  %.not.old.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2562
  br i1 %.not.old.i.i, label %.critedge.i.i, label %23, !dbg !2562

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %14 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2562
  %15 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2562
  %16 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2562
  %17 = select i1 %14, i64 %16, i64 %15, !dbg !2562
  %18 = inttoptr i64 %17 to ptr, !dbg !2562
  %19 = getelementptr inbounds i64, ptr %18, i64 -1, !dbg !2562
  %20 = load i64, ptr %19, align 8, !dbg !2562
  %21 = icmp ne i64 %20, -9223372036854775808, !dbg !2562
  %.not.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2562
  %22 = select i1 %21, i1 true, i1 %14, !dbg !2562
  %or.cond14.i.i = select i1 %22, i1 true, i1 %.not.i.i, !dbg !2562
  br i1 %or.cond14.i.i, label %.critedge.i.i, label %23, !dbg !2562

23:                                               ; preds = %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %24 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !2562
  store i64 %.sroa.3.0.copyload.i, ptr %24, align 8, !dbg !2562
  br label %.critedge.i.i, !dbg !2562

roc_builtins.list.incref.exit:                    ; preds = %.critedge.i.i, %7, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2562
  ret void, !dbg !2562
}

define private fastcc void @"#Attr_#dec_9"(ptr %"#arg1") !dbg !2564 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2565
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2565
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 1, label %tag_id_modify
  ], !dbg !2565

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2565

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2565
  %modify_tag_field = getelementptr inbounds { %list.RocList }, ptr %field_ptr, i32 0, i32 0, !dbg !2565
  %field_value = load %list.RocList, ptr %modify_tag_field, align 8, !dbg !2565
  call fastcc void @"#Attr_#dec_1"(%list.RocList %field_value), !dbg !2565
  br label %modify_rc_union_merge, !dbg !2565
}

define private fastcc void @"#Attr_#dec_10"(ptr %"#arg1") !dbg !2567 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2568
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2568
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 1, label %tag_id_modify
  ], !dbg !2568

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2568

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2568
  %modify_tag_field = getelementptr inbounds { %list.RocList }, ptr %field_ptr, i32 0, i32 0, !dbg !2568
  %field_value = load %list.RocList, ptr %modify_tag_field, align 8, !dbg !2568
  call fastcc void @"#Attr_#dec_1"(%list.RocList %field_value), !dbg !2568
  br label %modify_rc_union_merge, !dbg !2568
}

define private fastcc void @"#Attr_#dec_11"(ptr %"#arg1") !dbg !2570 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2571
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2571
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
    i8 2, label %tag_id_modify5
  ], !dbg !2571

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify5, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2571

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2571
  %modify_tag_field = getelementptr inbounds { %list.RocList }, ptr %field_ptr, i32 0, i32 0, !dbg !2571
  %field_value = load %list.RocList, ptr %modify_tag_field, align 8, !dbg !2571
  call fastcc void @"#Attr_#dec_12"(%list.RocList %field_value), !dbg !2571
  br label %modify_rc_union_merge, !dbg !2571

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2571
  %modify_tag_field3 = getelementptr inbounds { %list.RocList }, ptr %field_ptr2, i32 0, i32 0, !dbg !2571
  %field_value4 = load %list.RocList, ptr %modify_tag_field3, align 8, !dbg !2571
  call fastcc void @"#Attr_#dec_12"(%list.RocList %field_value4), !dbg !2571
  br label %modify_rc_union_merge, !dbg !2571

tag_id_modify5:                                   ; preds = %entry
  %field_ptr6 = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2571
  %modify_tag_field7 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr6, i32 0, i32 0, !dbg !2571
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field7), !dbg !2571
  br label %modify_rc_union_merge, !dbg !2571
}

define private fastcc void @"#Attr_#dec_12"(%list.RocList %"#arg1") !dbg !2573 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2574
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2574
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2574
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2574
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2574
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2574
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2574
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2574
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2574
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2574
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2574
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !2574
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2574
  %2 = icmp ne i64 %0, 0, !dbg !2574
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !2574
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !2574

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !2574
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !2574
  %6 = load i64, ptr %5, align 8, !dbg !2574
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2574
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !2574

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !2574
  store i64 %8, ptr %5, align 8, !dbg !2574
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !2574
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !2574

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !2574
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2574
  br label %roc_builtins.list.decref.exit, !dbg !2574

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2574
  br label %roc_builtins.list.decref.exit, !dbg !2574

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !2574
}

define private fastcc void @"#Attr_#dec_13"(ptr %"#arg1") !dbg !2576 {
entry:
  %load_str_to_stack = load %str.RocStr, ptr %"#arg1", align 8, !dbg !2577
  %read_str_capacity = extractvalue %str.RocStr %load_str_to_stack, 2, !dbg !2577
  %is_big_str = icmp sgt i64 %read_str_capacity, 0, !dbg !2577
  br i1 %is_big_str, label %modify_rc, label %modify_rc_str_cont, !dbg !2577

modify_rc_str_cont:                               ; preds = %modify_rc, %entry
  ret void, !dbg !2577

modify_rc:                                        ; preds = %entry
  %call_builtin = call ptr @roc_builtins.str.allocation_ptr(ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1"), !dbg !2577
  %get_rc_ptr = getelementptr inbounds i64, ptr %call_builtin, i64 -1, !dbg !2577
  call fastcc void @decrement_refcounted_ptr_8(ptr %get_rc_ptr), !dbg !2577
  br label %modify_rc_str_cont, !dbg !2577
}

define internal fastcc void @decrement_refcounted_ptr_8(ptr %0) !dbg !2579 {
entry:
  %1 = load i64, ptr %0, align 8, !dbg !2580
  %.not.i = icmp eq i64 %1, 0, !dbg !2580
  br i1 %.not.i, label %2, label %3, !dbg !2580

2:                                                ; preds = %3, %entry
  br label %roc_builtins.utils.decref_rc_ptr.exit, !dbg !2580

3:                                                ; preds = %entry
  %4 = add i64 %1, -1, !dbg !2580
  store i64 %4, ptr %0, align 8, !dbg !2580
  %5 = icmp eq i64 %1, -9223372036854775808, !dbg !2580
  br i1 %5, label %6, label %2, !dbg !2580

6:                                                ; preds = %3
  call void @roc_dealloc(ptr nonnull align 1 %0, i32 8), !dbg !2580
  br label %roc_builtins.utils.decref_rc_ptr.exit, !dbg !2580

roc_builtins.utils.decref_rc_ptr.exit:            ; preds = %6, %2
  ret void, !dbg !2580
}

define private fastcc void @"#Attr_#inc_12"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2582 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2583
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2583
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2583
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2583
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2583
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2583
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2583
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2583
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2583
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2583
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2583
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !2583
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !2583
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !2583

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !2583
  %5 = add i64 %4, -8, !dbg !2583
  %6 = inttoptr i64 %5 to ptr, !dbg !2583
  %7 = load i64, ptr %6, align 8, !dbg !2583
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !2583
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !2583

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !2583
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !2583
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2583
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !2583
  br label %roc_builtins.list.incref.exit, !dbg !2583

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2583
  ret void, !dbg !2583
}

define private fastcc void @"#Attr_#inc_11"(ptr %"#arg1", i64 %0) !dbg !2585 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2586
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2586
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
    i8 2, label %tag_id_modify5
  ], !dbg !2586

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify5, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2586

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2586
  %modify_tag_field = getelementptr inbounds { %list.RocList }, ptr %field_ptr, i32 0, i32 0, !dbg !2586
  %field_value = load %list.RocList, ptr %modify_tag_field, align 8, !dbg !2586
  call fastcc void @"#Attr_#inc_12"(%list.RocList %field_value, i64 %0), !dbg !2586
  br label %modify_rc_union_merge, !dbg !2586

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2586
  %modify_tag_field3 = getelementptr inbounds { %list.RocList }, ptr %field_ptr2, i32 0, i32 0, !dbg !2586
  %field_value4 = load %list.RocList, ptr %modify_tag_field3, align 8, !dbg !2586
  call fastcc void @"#Attr_#inc_12"(%list.RocList %field_value4, i64 %0), !dbg !2586
  br label %modify_rc_union_merge, !dbg !2586

tag_id_modify5:                                   ; preds = %entry
  %field_ptr6 = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2586
  %modify_tag_field7 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr6, i32 0, i32 0, !dbg !2586
  call fastcc void @"#Attr_#inc_13"(ptr %modify_tag_field7, i64 %0), !dbg !2586
  br label %modify_rc_union_merge, !dbg !2586
}

define private fastcc void @"#Attr_#inc_13"(ptr %"#arg1", i64 %0) !dbg !2588 {
entry:
  %load_str_to_stack = load %str.RocStr, ptr %"#arg1", align 8, !dbg !2589
  %read_str_capacity = extractvalue %str.RocStr %load_str_to_stack, 2, !dbg !2589
  %is_big_str = icmp sgt i64 %read_str_capacity, 0, !dbg !2589
  br i1 %is_big_str, label %modify_rc, label %modify_rc_str_cont, !dbg !2589

modify_rc_str_cont:                               ; preds = %roc_builtins.utils.incref_rc_ptr.exit, %entry
  ret void, !dbg !2589

modify_rc:                                        ; preds = %entry
  %call_builtin = call ptr @roc_builtins.str.allocation_ptr(ptr nocapture nonnull readonly byval(%str.RocStr) %"#arg1"), !dbg !2589
  %get_rc_ptr = getelementptr inbounds i64, ptr %call_builtin, i64 -1, !dbg !2589
  %1 = load i64, ptr %get_rc_ptr, align 8, !dbg !2589
  %.not.i = icmp eq i64 %1, 0, !dbg !2589
  br i1 %.not.i, label %roc_builtins.utils.incref_rc_ptr.exit, label %2, !dbg !2589

2:                                                ; preds = %modify_rc
  %3 = add nsw i64 %1, %0, !dbg !2589
  store i64 %3, ptr %get_rc_ptr, align 8, !dbg !2589
  br label %roc_builtins.utils.incref_rc_ptr.exit, !dbg !2589

roc_builtins.utils.incref_rc_ptr.exit:            ; preds = %modify_rc, %2
  br label %modify_rc_str_cont, !dbg !2589
}

define private fastcc void @"#Attr_#inc_8"({ i64, %list.RocList } %"#arg1", i64 %0) !dbg !2591 {
entry:
  %struct_field_access_record_1 = extractvalue { i64, %list.RocList } %"#arg1", 1, !dbg !2592
  call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field_access_record_1, i64 %0), !dbg !2592
  ret void, !dbg !2592
}

define private fastcc void @"#Attr_#inc_3"({ i64, i64 } %"#arg1", i64 %0) !dbg !2594 {
entry:
  ret void, !dbg !2595
}

define private fastcc void @"#Attr_#inc_17"(ptr %"#arg1", i64 %0) !dbg !2597 {
entry:
  %struct_field = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !2598
  %struct_field_access_record_0 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2598
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr null, i32 1) to i64), i1 false), !dbg !2598
  call fastcc void @"#Attr_#inc_18"(ptr %struct_field, i64 %0), !dbg !2598
  ret void, !dbg !2598
}

define private fastcc void @"#Attr_#inc_18"(ptr %"#arg1", i64 %0) !dbg !2600 {
entry:
  %struct_field1 = alloca { [3 x i64], i8 }, align 8, !dbg !2601
  %struct_field = alloca { { %str.RocStr, %list.RocList }, {} }, align 8, !dbg !2601
  %struct_field_access_record_0 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr %"#arg1", i32 0, i32 0, !dbg !2601
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { %str.RocStr, %list.RocList }, {} }, ptr null, i32 1) to i64), i1 false), !dbg !2601
  call fastcc void @"#Attr_#inc_19"(ptr %struct_field, i64 %0), !dbg !2601
  %struct_field_access_record_1 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr %"#arg1", i32 0, i32 1, !dbg !2601
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field1, ptr align 8 %struct_field_access_record_1, i64 ptrtoint (ptr getelementptr ({ [3 x i64], i8 }, ptr null, i32 1) to i64), i1 false), !dbg !2601
  call fastcc void @"#Attr_#inc_21"(ptr %struct_field1, i64 %0), !dbg !2601
  ret void, !dbg !2601
}

define private fastcc void @"#Attr_#inc_19"(ptr %"#arg1", i64 %0) !dbg !2603 {
entry:
  %struct_field = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2604
  %struct_field_access_record_0 = getelementptr inbounds { { %str.RocStr, %list.RocList }, {} }, ptr %"#arg1", i32 0, i32 0, !dbg !2604
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ %str.RocStr, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !2604
  call fastcc void @"#Attr_#inc_20"(ptr %struct_field, i64 %0), !dbg !2604
  ret void, !dbg !2604
}

define private fastcc void @"#Attr_#inc_20"(ptr %"#arg1", i64 %0) !dbg !2606 {
entry:
  %struct_field = alloca %str.RocStr, align 8, !dbg !2607
  %struct_field_access_record_0 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg1", i32 0, i32 0, !dbg !2607
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr (%str.RocStr, ptr null, i32 1) to i64), i1 false), !dbg !2607
  call fastcc void @"#Attr_#inc_13"(ptr %struct_field, i64 %0), !dbg !2607
  %struct_field_access_record_1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg1", i32 0, i32 1, !dbg !2607
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2607
  call fastcc void @"#Attr_#inc_12"(%list.RocList %struct_field1, i64 %0), !dbg !2607
  ret void, !dbg !2607
}

define private fastcc void @"#Attr_#inc_21"(ptr %"#arg1", i64 %0) !dbg !2609 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2610
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2610
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 1, label %tag_id_modify
  ], !dbg !2610

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2610

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2610
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2610
  call fastcc void @"#Attr_#inc_13"(ptr %modify_tag_field, i64 %0), !dbg !2610
  br label %modify_rc_union_merge, !dbg !2610
}

define private fastcc void @"#Attr_#dec_22"(ptr %"#arg1") !dbg !2612 {
entry:
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2613
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2613
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
  ], !dbg !2613

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2613

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2613
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2613
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2613
  br label %modify_rc_union_merge, !dbg !2613

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2613
  %modify_tag_field3 = getelementptr inbounds { { %list.RocList, i64 } }, ptr %field_ptr2, i32 0, i32 0, !dbg !2613
  %field_value = load { %list.RocList, i64 }, ptr %modify_tag_field3, align 8, !dbg !2613
  call fastcc void @"#Attr_#dec_23"({ %list.RocList, i64 } %field_value), !dbg !2613
  br label %modify_rc_union_merge, !dbg !2613
}

define private fastcc void @"#Attr_#dec_23"({ %list.RocList, i64 } %"#arg1") !dbg !2615 {
entry:
  %struct_field_access_record_0 = extractvalue { %list.RocList, i64 } %"#arg1", 0, !dbg !2616
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field_access_record_0), !dbg !2616
  ret void, !dbg !2616
}

define private fastcc void @"#Attr_#dec_17"(ptr %"#arg1") !dbg !2618 {
entry:
  %struct_field = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !2619
  %struct_field_access_record_0 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2619
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr null, i32 1) to i64), i1 false), !dbg !2619
  call fastcc void @"#Attr_#dec_18"(ptr %struct_field), !dbg !2619
  ret void, !dbg !2619
}

define private fastcc void @"#Attr_#dec_18"(ptr %"#arg1") !dbg !2621 {
entry:
  %struct_field1 = alloca { [3 x i64], i8 }, align 8, !dbg !2622
  %struct_field = alloca { { %str.RocStr, %list.RocList }, {} }, align 8, !dbg !2622
  %struct_field_access_record_0 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr %"#arg1", i32 0, i32 0, !dbg !2622
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { %str.RocStr, %list.RocList }, {} }, ptr null, i32 1) to i64), i1 false), !dbg !2622
  call fastcc void @"#Attr_#dec_19"(ptr %struct_field), !dbg !2622
  %struct_field_access_record_1 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr %"#arg1", i32 0, i32 1, !dbg !2622
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field1, ptr align 8 %struct_field_access_record_1, i64 ptrtoint (ptr getelementptr ({ [3 x i64], i8 }, ptr null, i32 1) to i64), i1 false), !dbg !2622
  call fastcc void @"#Attr_#dec_21"(ptr %struct_field1), !dbg !2622
  ret void, !dbg !2622
}

define private fastcc void @"#Attr_#dec_19"(ptr %"#arg1") !dbg !2624 {
entry:
  %struct_field = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2625
  %struct_field_access_record_0 = getelementptr inbounds { { %str.RocStr, %list.RocList }, {} }, ptr %"#arg1", i32 0, i32 0, !dbg !2625
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ %str.RocStr, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !2625
  call fastcc void @"#Attr_#dec_20"(ptr %struct_field), !dbg !2625
  ret void, !dbg !2625
}

define private fastcc void @"#Attr_#dec_20"(ptr %"#arg1") !dbg !2627 {
entry:
  %struct_field = alloca %str.RocStr, align 8, !dbg !2628
  %struct_field_access_record_0 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg1", i32 0, i32 0, !dbg !2628
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr (%str.RocStr, ptr null, i32 1) to i64), i1 false), !dbg !2628
  call fastcc void @"#Attr_#dec_13"(ptr %struct_field), !dbg !2628
  %struct_field_access_record_1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg1", i32 0, i32 1, !dbg !2628
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2628
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field1), !dbg !2628
  ret void, !dbg !2628
}

define private fastcc void @"#Attr_#dec_21"(ptr %"#arg1") !dbg !2630 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2631
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2631
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 1, label %tag_id_modify
  ], !dbg !2631

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2631

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2631
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2631
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2631
  br label %modify_rc_union_merge, !dbg !2631
}

define private fastcc void @"#Attr_#inc_24"(ptr %"#arg1", i64 %0) !dbg !2633 {
entry:
  %struct_field = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !2634
  %struct_field_access_record_0 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %"#arg1", i32 0, i32 0, !dbg !2634
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ %list.RocList, %list.RocList, i64, float, i8 }, ptr null, i32 1) to i64), i1 false), !dbg !2634
  call fastcc void @"#Attr_#inc_25"(ptr %struct_field, i64 %0), !dbg !2634
  %struct_field_access_record_1 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %"#arg1", i32 0, i32 1, !dbg !2634
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2634
  call fastcc void @"#Attr_#inc_1"(%list.RocList %struct_field1, i64 %0), !dbg !2634
  ret void, !dbg !2634
}

define private fastcc void @"#Attr_#inc_25"(ptr %"#arg1", i64 %0) !dbg !2636 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2637
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !2637
  call fastcc void @"#Attr_#inc_5"(%list.RocList %struct_field, i64 %0), !dbg !2637
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2637
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2637
  call fastcc void @"#Attr_#inc_7"(%list.RocList %struct_field1, i64 %0), !dbg !2637
  ret void, !dbg !2637
}

define private fastcc void @"#Attr_#dec_24"(ptr %"#arg1") !dbg !2639 {
entry:
  %struct_field = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !2640
  %struct_field_access_record_0 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %"#arg1", i32 0, i32 0, !dbg !2640
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ %list.RocList, %list.RocList, i64, float, i8 }, ptr null, i32 1) to i64), i1 false), !dbg !2640
  call fastcc void @"#Attr_#dec_25"(ptr %struct_field), !dbg !2640
  %struct_field_access_record_1 = getelementptr inbounds { { %list.RocList, %list.RocList, i64, float, i8 }, %list.RocList }, ptr %"#arg1", i32 0, i32 1, !dbg !2640
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2640
  call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field1), !dbg !2640
  ret void, !dbg !2640
}

define private fastcc void @"#Attr_#dec_25"(ptr %"#arg1") !dbg !2642 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2643
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !2643
  call fastcc void @"#Attr_#dec_5"(%list.RocList %struct_field), !dbg !2643
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2643
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2643
  call fastcc void @"#Attr_#dec_7"(%list.RocList %struct_field1), !dbg !2643
  ret void, !dbg !2643
}

define private fastcc void @"#Attr_#inc_6"({ i32, i32 } %"#arg1", i64 %0) !dbg !2645 {
entry:
  ret void, !dbg !2646
}

declare void @roc_fx_stdoutLine(ptr sret({ [3 x i64], i8 }), ptr)

define internal fastcc void @roc_fx_stdoutLine_fastcc_wrapper(ptr %0, ptr %1) {
entry:
  call void @roc_fx_stdoutLine(ptr %1, ptr %0), !dbg !901
  ret void, !dbg !901
}

define private fastcc void @"#Attr_#inc_26"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2648 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2649
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2649
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2649
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2649
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2649
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2649
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2649
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2649
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2649
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2649
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2649
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !2649
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !2649
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !2649

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !2649
  %5 = add i64 %4, -8, !dbg !2649
  %6 = inttoptr i64 %5 to ptr, !dbg !2649
  %7 = load i64, ptr %6, align 8, !dbg !2649
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !2649
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !2649

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !2649
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !2649
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2649
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !2649
  br label %roc_builtins.list.incref.exit, !dbg !2649

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2649
  ret void, !dbg !2649
}

declare void @roc_fx_fileReadBytes(ptr sret({ [3 x i64], i8 }), ptr)

define internal fastcc void @roc_fx_fileReadBytes_fastcc_wrapper(%list.RocList %0, ptr %1) {
entry:
  %param_alloca = alloca %list.RocList, align 8
  store %list.RocList %0, ptr %param_alloca, align 8, !dbg !964
  call void @roc_fx_fileReadBytes(ptr %1, ptr %param_alloca), !dbg !964
  ret void, !dbg !964
}

define private fastcc void @"#Attr_#inc_29"(ptr %"#arg1", i64 %0) !dbg !2651 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"#arg1", i32 0, i32 0, !dbg !2652
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !2652
  call fastcc void @"#Attr_#inc_2"(%list.RocList %struct_field, i64 %0), !dbg !2652
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"#arg1", i32 0, i32 1, !dbg !2652
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2652
  call fastcc void @"#Attr_#inc_4"(%list.RocList %struct_field1, i64 %0), !dbg !2652
  ret void, !dbg !2652
}

define private fastcc void @"#Attr_#inc_2"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2654 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2655
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2655
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2655
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2655
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2655
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2655
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2655
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2655
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2655
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2655
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2655
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !2655
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !2655
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !2655

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !2655
  %5 = add i64 %4, -8, !dbg !2655
  %6 = inttoptr i64 %5 to ptr, !dbg !2655
  %7 = load i64, ptr %6, align 8, !dbg !2655
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !2655
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !2655

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !2655
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !2655
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2655
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !2655
  br label %roc_builtins.list.incref.exit, !dbg !2655

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2655
  ret void, !dbg !2655
}

define private fastcc void @"#Attr_#inc_4"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2657 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2658
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2658
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2658
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2658
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2658
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2658
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2658
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2658
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2658
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2658
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2658
  %2 = or i64 %1, %0, !dbg !2658
  %3 = icmp ne i64 %2, 0, !dbg !2658
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2658
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !2658

.critedge.i.i:                                    ; preds = %23, %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2658
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2658
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2658
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %4, !dbg !2658
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2658
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %7, !dbg !2658

7:                                                ; preds = %.critedge.i.i
  %8 = and i64 %6, -8, !dbg !2658
  %9 = add i64 %8, -8, !dbg !2658
  %10 = inttoptr i64 %9 to ptr, !dbg !2658
  %11 = load i64, ptr %10, align 8, !dbg !2658
  %.not.i.i.i.i = icmp eq i64 %11, 0, !dbg !2658
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %12, !dbg !2658

12:                                               ; preds = %7
  %13 = add nsw i64 %11, %"#arg2", !dbg !2658
  %sunkaddr.i = inttoptr i64 %8 to ptr, !dbg !2658
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2658
  store i64 %13, ptr %sunkaddr2.i, align 8, !dbg !2658
  br label %roc_builtins.list.incref.exit, !dbg !2658

.thread.i.i:                                      ; preds = %entry
  %.not.old.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2658
  br i1 %.not.old.i.i, label %.critedge.i.i, label %23, !dbg !2658

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %14 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2658
  %15 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2658
  %16 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2658
  %17 = select i1 %14, i64 %16, i64 %15, !dbg !2658
  %18 = inttoptr i64 %17 to ptr, !dbg !2658
  %19 = getelementptr inbounds i64, ptr %18, i64 -1, !dbg !2658
  %20 = load i64, ptr %19, align 8, !dbg !2658
  %21 = icmp ne i64 %20, -9223372036854775808, !dbg !2658
  %.not.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2658
  %22 = select i1 %21, i1 true, i1 %14, !dbg !2658
  %or.cond14.i.i = select i1 %22, i1 true, i1 %.not.i.i, !dbg !2658
  br i1 %or.cond14.i.i, label %.critedge.i.i, label %23, !dbg !2658

23:                                               ; preds = %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %24 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !2658
  store i64 %.sroa.3.0.copyload.i, ptr %24, align 8, !dbg !2658
  br label %.critedge.i.i, !dbg !2658

roc_builtins.list.incref.exit:                    ; preds = %.critedge.i.i, %7, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2658
  ret void, !dbg !2658
}

define private fastcc void @"#Attr_#dec_26"(%list.RocList %"#arg1") !dbg !2660 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2661
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2661
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2661
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2661
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2661
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2661
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2661
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2661
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2661
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2661
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2661
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !2661
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2661
  %2 = icmp ne i64 %0, 0, !dbg !2661
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !2661
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !2661

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !2661
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !2661
  %6 = load i64, ptr %5, align 8, !dbg !2661
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2661
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !2661

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !2661
  store i64 %8, ptr %5, align 8, !dbg !2661
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !2661
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !2661

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !2661
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2661
  br label %roc_builtins.list.decref.exit, !dbg !2661

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2661
  br label %roc_builtins.list.decref.exit, !dbg !2661

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !2661
}

define private fastcc void @"#Attr_#dec_32"(%list.RocList %"#arg1") !dbg !2663 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2664
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2664
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2664
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2664
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2664
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2664
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2664
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2664
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2664
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2664
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2664
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !2664
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2664
  %2 = icmp ne i64 %0, 0, !dbg !2664
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !2664
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !2664

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !2664
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !2664
  %6 = load i64, ptr %5, align 8, !dbg !2664
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2664
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !2664

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !2664
  store i64 %8, ptr %5, align 8, !dbg !2664
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !2664
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !2664

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !2664
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2664
  br label %roc_builtins.list.decref.exit, !dbg !2664

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2664
  br label %roc_builtins.list.decref.exit, !dbg !2664

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !2664
}

define private fastcc void @"#Attr_#dec_33"(ptr %"#arg1") !dbg !2666 {
entry:
  %tag_id_ptr = getelementptr inbounds { [1 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2667
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2667
  switch i8 %load_tag_id, label %modify_rc_union_merge [
  ], !dbg !2667

modify_rc_union_merge:                            ; preds = %entry
  ret void, !dbg !2667
}

define private fastcc void @"#Attr_#dec_34"(ptr %"#arg1") !dbg !2669 {
entry:
  %tag_id_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2670
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2670
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
  ], !dbg !2670

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2670

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [9 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2670
  %modify_tag_field = getelementptr inbounds { { [8 x i64], i8 } }, ptr %field_ptr, i32 0, i32 0, !dbg !2670
  call fastcc void @"#Attr_#dec_35"(ptr %modify_tag_field), !dbg !2670
  br label %modify_rc_union_merge, !dbg !2670
}

define private fastcc void @"#Attr_#dec_35"(ptr %"#arg1") !dbg !2672 {
entry:
  %tag_id_ptr = getelementptr inbounds { [8 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2673
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2673
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
    i8 2, label %tag_id_modify5
    i8 4, label %tag_id_modify8
    i8 5, label %tag_id_modify11
    i8 6, label %tag_id_modify14
  ], !dbg !2673

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify14, %tag_id_modify11, %tag_id_modify8, %tag_id_modify5, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2673

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [8 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2673
  %modify_tag_field = getelementptr inbounds { %str.RocStr, i32 }, ptr %field_ptr, i32 0, i32 0, !dbg !2673
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2673
  br label %modify_rc_union_merge, !dbg !2673

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [8 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2673
  %modify_tag_field3 = getelementptr inbounds { { [3 x i64], i8 }, { [3 x i64], i8 } }, ptr %field_ptr2, i32 0, i32 0, !dbg !2673
  call fastcc void @"#Attr_#dec_11"(ptr %modify_tag_field3), !dbg !2673
  %modify_tag_field4 = getelementptr inbounds { { [3 x i64], i8 }, { [3 x i64], i8 } }, ptr %field_ptr2, i32 0, i32 1, !dbg !2673
  call fastcc void @"#Attr_#dec_36"(ptr %modify_tag_field4), !dbg !2673
  br label %modify_rc_union_merge, !dbg !2673

tag_id_modify5:                                   ; preds = %entry
  %field_ptr6 = getelementptr inbounds { [8 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2673
  %modify_tag_field7 = getelementptr inbounds { { [3 x i64], i8 }, { i64, i8 } }, ptr %field_ptr6, i32 0, i32 0, !dbg !2673
  call fastcc void @"#Attr_#dec_11"(ptr %modify_tag_field7), !dbg !2673
  br label %modify_rc_union_merge, !dbg !2673

tag_id_modify8:                                   ; preds = %entry
  %field_ptr9 = getelementptr inbounds { [8 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2673
  %modify_tag_field10 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr9, i32 0, i32 0, !dbg !2673
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field10), !dbg !2673
  br label %modify_rc_union_merge, !dbg !2673

tag_id_modify11:                                  ; preds = %entry
  %field_ptr12 = getelementptr inbounds { [8 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2673
  %modify_tag_field13 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr12, i32 0, i32 0, !dbg !2673
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field13), !dbg !2673
  br label %modify_rc_union_merge, !dbg !2673

tag_id_modify14:                                  ; preds = %entry
  %field_ptr15 = getelementptr inbounds { [8 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2673
  %modify_tag_field16 = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr15, i32 0, i32 0, !dbg !2673
  call fastcc void @"#Attr_#dec_37"(ptr %modify_tag_field16), !dbg !2673
  br label %modify_rc_union_merge, !dbg !2673
}

define private fastcc void @"#Attr_#dec_36"(ptr %"#arg1") !dbg !2675 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2676
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2676
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 2, label %tag_id_modify
  ], !dbg !2676

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2676

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2676
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2676
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2676
  br label %modify_rc_union_merge, !dbg !2676
}

define private fastcc void @"#Attr_#dec_37"(ptr %"#arg1") !dbg !2678 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2679
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2679
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 2, label %tag_id_modify
  ], !dbg !2679

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2679

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2679
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2679
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2679
  br label %modify_rc_union_merge, !dbg !2679
}

define private fastcc void @"#Attr_#dec_38"(%list.RocList %"#arg1") !dbg !2681 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2682
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2682
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2682
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2682
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2682
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2682
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2682
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2682
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2682
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2682
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2682
  %2 = or i64 %1, %0, !dbg !2682
  %3 = icmp ne i64 %2, 0, !dbg !2682
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2682
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2682
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2682
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !2682

.critedge.i.i:                                    ; preds = %.lr.ph.i.i, %list.RocList.getAllocationElementCount.exit.i.i, %list.RocList.isUnique.exit.thread.i.i, %list.RocList.isUnique.exit.i.i
  %.pre-phi.i = phi i64 [ %31, %list.RocList.getAllocationElementCount.exit.i.i ], [ %25, %list.RocList.isUnique.exit.thread.i.i ], [ %18, %list.RocList.isUnique.exit.i.i ], [ %32, %.lr.ph.i.i ], !dbg !2682
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2682
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %.pre-phi.i, !dbg !2682
  %7 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2682
  %8 = icmp ne i64 %6, 0, !dbg !2682
  %or.cond.i.i.i = select i1 %7, i1 %8, i1 false, !dbg !2682
  br i1 %or.cond.i.i.i, label %9, label %list.RocList.decref.exit.i, !dbg !2682

9:                                                ; preds = %.critedge.i.i
  %10 = inttoptr i64 %6 to ptr, !dbg !2682
  %11 = getelementptr inbounds i64, ptr %10, i64 -1, !dbg !2682
  %12 = load i64, ptr %11, align 8, !dbg !2682
  %.not.i.i.i = icmp eq i64 %12, 0, !dbg !2682
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %13, !dbg !2682

13:                                               ; preds = %9
  %14 = add i64 %12, -1, !dbg !2682
  store i64 %14, ptr %11, align 8, !dbg !2682
  %15 = icmp eq i64 %12, -9223372036854775808, !dbg !2682
  br i1 %15, label %16, label %list.RocList.decref.exit.i, !dbg !2682

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, ptr %11, i64 -8, !dbg !2682
  call void @roc_dealloc(ptr nonnull align 1 %17, i32 8), !dbg !2682
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2682
  br label %roc_builtins.list.decref.exit, !dbg !2682

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %18 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2682
  %19 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2682
  %20 = select i1 %19, i64 %5, i64 %18, !dbg !2682
  %21 = inttoptr i64 %20 to ptr, !dbg !2682
  %22 = getelementptr inbounds i64, ptr %21, i64 -1, !dbg !2682
  %23 = load i64, ptr %22, align 8, !dbg !2682
  %24 = icmp eq i64 %23, -9223372036854775808, !dbg !2682
  br i1 %24, label %list.RocList.isUnique.exit.thread.i.i, label %.critedge.i.i, !dbg !2682

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  %.pre-phi22.i.i = phi ptr [ %21, %list.RocList.isUnique.exit.i.i ], [ %.sroa.0.0.copyload.i, %entry ], !dbg !2682
  %.pre-phi20.i.i = phi i64 [ %20, %list.RocList.isUnique.exit.i.i ], [ %4, %entry ], !dbg !2682
  %25 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2682
  %.not.i.i = icmp eq i64 %.pre-phi20.i.i, 0, !dbg !2682
  br i1 %.not.i.i, label %.critedge.i.i, label %26, !dbg !2682

26:                                               ; preds = %list.RocList.isUnique.exit.thread.i.i
  %27 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2682
  br i1 %27, label %28, label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2682

28:                                               ; preds = %26
  %29 = inttoptr i64 %5 to ptr, !dbg !2682
  %30 = getelementptr inbounds i64, ptr %29, i64 -2, !dbg !2682
  %common.ret.op.in.i.sroa.speculate.load.10.i.i = load i64, ptr %30, align 8, !dbg !2682
  br label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2682

list.RocList.getAllocationElementCount.exit.i.i:  ; preds = %28, %26
  %common.ret.op.in.i.sroa.speculated.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i.i, %28 ], [ %.sroa.3.0.copyload.i, %26 ], !dbg !2682
  %31 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2682
  %.not16.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i.i, 0, !dbg !2682
  br i1 %.not16.i.i, label %.critedge.i.i, label %.lr.ph.i.preheader.i, !dbg !2682

.lr.ph.i.preheader.i:                             ; preds = %list.RocList.getAllocationElementCount.exit.i.i
  br label %.lr.ph.i.i, !dbg !2682

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.i.preheader.i
  %lsr.iv4.i = phi ptr [ %.pre-phi22.i.i, %.lr.ph.i.preheader.i ], [ %uglygep.i, %.lr.ph.i.i ], !dbg !2682
  %lsr.iv.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i.i, %.lr.ph.i.preheader.i ], [ %lsr.iv.next.i, %.lr.ph.i.i ], !dbg !2682
  %32 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2682
  call fastcc void @"#Attr_#dec_13"(ptr %lsr.iv4.i) #18, !dbg !2684
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !2682
  %uglygep.i = getelementptr i8, ptr %lsr.iv4.i, i64 24, !dbg !2682
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !2682
  br i1 %exitcond.not.i.i, label %.critedge.i.i, label %.lr.ph.i.i, !dbg !2682

list.RocList.decref.exit.i:                       ; preds = %13, %9, %.critedge.i.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2682
  br label %roc_builtins.list.decref.exit, !dbg !2682

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %16
  ret void, !dbg !2682
}

declare void @roc_fx_stderrLine(ptr sret({ [3 x i64], i8 }), ptr)

define internal fastcc void @roc_fx_stderrLine_fastcc_wrapper(ptr %0, ptr %1) {
entry:
  call void @roc_fx_stderrLine(ptr %1, ptr %0), !dbg !1199
  ret void, !dbg !1199
}

define private fastcc void @"#Attr_#inc_39"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2688 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2689
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2689
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2689
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2689
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2689
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2689
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2689
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2689
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2689
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2689
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2689
  %2 = or i64 %1, %0, !dbg !2689
  %3 = icmp ne i64 %2, 0, !dbg !2689
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2689
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !2689

.critedge.i.i:                                    ; preds = %23, %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2689
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2689
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2689
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %4, !dbg !2689
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2689
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %7, !dbg !2689

7:                                                ; preds = %.critedge.i.i
  %8 = and i64 %6, -8, !dbg !2689
  %9 = add i64 %8, -8, !dbg !2689
  %10 = inttoptr i64 %9 to ptr, !dbg !2689
  %11 = load i64, ptr %10, align 8, !dbg !2689
  %.not.i.i.i.i = icmp eq i64 %11, 0, !dbg !2689
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %12, !dbg !2689

12:                                               ; preds = %7
  %13 = add nsw i64 %11, %"#arg2", !dbg !2689
  %sunkaddr.i = inttoptr i64 %8 to ptr, !dbg !2689
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2689
  store i64 %13, ptr %sunkaddr2.i, align 8, !dbg !2689
  br label %roc_builtins.list.incref.exit, !dbg !2689

.thread.i.i:                                      ; preds = %entry
  %.not.old.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2689
  br i1 %.not.old.i.i, label %.critedge.i.i, label %23, !dbg !2689

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %14 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2689
  %15 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2689
  %16 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2689
  %17 = select i1 %14, i64 %16, i64 %15, !dbg !2689
  %18 = inttoptr i64 %17 to ptr, !dbg !2689
  %19 = getelementptr inbounds i64, ptr %18, i64 -1, !dbg !2689
  %20 = load i64, ptr %19, align 8, !dbg !2689
  %21 = icmp ne i64 %20, -9223372036854775808, !dbg !2689
  %.not.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2689
  %22 = select i1 %21, i1 true, i1 %14, !dbg !2689
  %or.cond14.i.i = select i1 %22, i1 true, i1 %.not.i.i, !dbg !2689
  br i1 %or.cond14.i.i, label %.critedge.i.i, label %23, !dbg !2689

23:                                               ; preds = %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %24 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !2689
  store i64 %.sroa.3.0.copyload.i, ptr %24, align 8, !dbg !2689
  br label %.critedge.i.i, !dbg !2689

roc_builtins.list.incref.exit:                    ; preds = %.critedge.i.i, %7, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2689
  ret void, !dbg !2689
}

define private fastcc void @"#Attr_#inc_40"(ptr %"#arg1", i64 %0) !dbg !2691 {
entry:
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2692
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2692
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 2, label %tag_id_modify1
    i8 3, label %tag_id_modify4
  ], !dbg !2692

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify4, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2692

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2692
  %modify_tag_field = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr, i32 0, i32 0, !dbg !2692
  call fastcc void @"#Attr_#inc_36"(ptr %modify_tag_field, i64 %0), !dbg !2692
  br label %modify_rc_union_merge, !dbg !2692

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2692
  %modify_tag_field3 = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr2, i32 0, i32 0, !dbg !2692
  call fastcc void @"#Attr_#inc_37"(ptr %modify_tag_field3, i64 %0), !dbg !2692
  br label %modify_rc_union_merge, !dbg !2692

tag_id_modify4:                                   ; preds = %entry
  %field_ptr5 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2692
  %modify_tag_field6 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr5, i32 0, i32 0, !dbg !2692
  call fastcc void @"#Attr_#inc_13"(ptr %modify_tag_field6, i64 %0), !dbg !2692
  br label %modify_rc_union_merge, !dbg !2692
}

define private fastcc void @"#Attr_#inc_36"(ptr %"#arg1", i64 %0) !dbg !2694 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2695
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2695
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 2, label %tag_id_modify
  ], !dbg !2695

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2695

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2695
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2695
  call fastcc void @"#Attr_#inc_13"(ptr %modify_tag_field, i64 %0), !dbg !2695
  br label %modify_rc_union_merge, !dbg !2695
}

define private fastcc void @"#Attr_#inc_37"(ptr %"#arg1", i64 %0) !dbg !2697 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2698
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2698
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 2, label %tag_id_modify
  ], !dbg !2698

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2698

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2698
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2698
  call fastcc void @"#Attr_#inc_13"(ptr %modify_tag_field, i64 %0), !dbg !2698
  br label %modify_rc_union_merge, !dbg !2698
}

define private fastcc void @"#Attr_#dec_39"(%list.RocList %"#arg1") !dbg !2700 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2701
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2701
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2701
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2701
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2701
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2701
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2701
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2701
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2701
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2701
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2701
  %2 = or i64 %1, %0, !dbg !2701
  %3 = icmp ne i64 %2, 0, !dbg !2701
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2701
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2701
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2701
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !2701

.critedge.i.i:                                    ; preds = %.lr.ph.i.i, %list.RocList.getAllocationElementCount.exit.i.i, %list.RocList.isUnique.exit.thread.i.i, %list.RocList.isUnique.exit.i.i
  %.pre-phi.i = phi i64 [ %31, %list.RocList.getAllocationElementCount.exit.i.i ], [ %25, %list.RocList.isUnique.exit.thread.i.i ], [ %18, %list.RocList.isUnique.exit.i.i ], [ %32, %.lr.ph.i.i ], !dbg !2701
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2701
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %.pre-phi.i, !dbg !2701
  %7 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !2701
  %8 = icmp ne i64 %6, 0, !dbg !2701
  %or.cond.i.i.i = select i1 %7, i1 %8, i1 false, !dbg !2701
  br i1 %or.cond.i.i.i, label %9, label %list.RocList.decref.exit.i, !dbg !2701

9:                                                ; preds = %.critedge.i.i
  %10 = inttoptr i64 %6 to ptr, !dbg !2701
  %11 = getelementptr inbounds i64, ptr %10, i64 -1, !dbg !2701
  %12 = load i64, ptr %11, align 8, !dbg !2701
  %.not.i.i.i = icmp eq i64 %12, 0, !dbg !2701
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %13, !dbg !2701

13:                                               ; preds = %9
  %14 = add i64 %12, -1, !dbg !2701
  store i64 %14, ptr %11, align 8, !dbg !2701
  %15 = icmp eq i64 %12, -9223372036854775808, !dbg !2701
  br i1 %15, label %16, label %list.RocList.decref.exit.i, !dbg !2701

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, ptr %11, i64 -8, !dbg !2701
  call void @roc_dealloc(ptr nonnull align 1 %17, i32 8), !dbg !2701
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2701
  br label %roc_builtins.list.decref.exit, !dbg !2701

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %18 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2701
  %19 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2701
  %20 = select i1 %19, i64 %5, i64 %18, !dbg !2701
  %21 = inttoptr i64 %20 to ptr, !dbg !2701
  %22 = getelementptr inbounds i64, ptr %21, i64 -1, !dbg !2701
  %23 = load i64, ptr %22, align 8, !dbg !2701
  %24 = icmp eq i64 %23, -9223372036854775808, !dbg !2701
  br i1 %24, label %list.RocList.isUnique.exit.thread.i.i, label %.critedge.i.i, !dbg !2701

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  %.pre-phi22.i.i = phi ptr [ %21, %list.RocList.isUnique.exit.i.i ], [ %.sroa.0.0.copyload.i, %entry ], !dbg !2701
  %.pre-phi20.i.i = phi i64 [ %20, %list.RocList.isUnique.exit.i.i ], [ %4, %entry ], !dbg !2701
  %25 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2701
  %.not.i.i = icmp eq i64 %.pre-phi20.i.i, 0, !dbg !2701
  br i1 %.not.i.i, label %.critedge.i.i, label %26, !dbg !2701

26:                                               ; preds = %list.RocList.isUnique.exit.thread.i.i
  %27 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2701
  br i1 %27, label %28, label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2701

28:                                               ; preds = %26
  %29 = inttoptr i64 %5 to ptr, !dbg !2701
  %30 = getelementptr inbounds i64, ptr %29, i64 -2, !dbg !2701
  %common.ret.op.in.i.sroa.speculate.load.10.i.i = load i64, ptr %30, align 8, !dbg !2701
  br label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !2701

list.RocList.getAllocationElementCount.exit.i.i:  ; preds = %28, %26
  %common.ret.op.in.i.sroa.speculated.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i.i, %28 ], [ %.sroa.3.0.copyload.i, %26 ], !dbg !2701
  %31 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2701
  %.not16.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i.i, 0, !dbg !2701
  br i1 %.not16.i.i, label %.critedge.i.i, label %.lr.ph.i.preheader.i, !dbg !2701

.lr.ph.i.preheader.i:                             ; preds = %list.RocList.getAllocationElementCount.exit.i.i
  br label %.lr.ph.i.i, !dbg !2701

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.i.preheader.i
  %lsr.iv4.i = phi ptr [ %.pre-phi22.i.i, %.lr.ph.i.preheader.i ], [ %uglygep.i, %.lr.ph.i.i ], !dbg !2701
  %lsr.iv.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i.i, %.lr.ph.i.preheader.i ], [ %lsr.iv.next.i, %.lr.ph.i.i ], !dbg !2701
  %32 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2701
  call fastcc void @"#Attr_#dec_40"(ptr %lsr.iv4.i) #18, !dbg !2703
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !2701
  %uglygep.i = getelementptr i8, ptr %lsr.iv4.i, i64 40, !dbg !2701
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !2701
  br i1 %exitcond.not.i.i, label %.critedge.i.i, label %.lr.ph.i.i, !dbg !2701

list.RocList.decref.exit.i:                       ; preds = %13, %9, %.critedge.i.i
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2701
  br label %roc_builtins.list.decref.exit, !dbg !2701

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %16
  ret void, !dbg !2701
}

define private fastcc void @"#Attr_#dec_40"(ptr %"#arg1") !dbg !2707 {
entry:
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2708
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2708
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 2, label %tag_id_modify1
    i8 3, label %tag_id_modify4
  ], !dbg !2708

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify4, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2708

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2708
  %modify_tag_field = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr, i32 0, i32 0, !dbg !2708
  call fastcc void @"#Attr_#dec_36"(ptr %modify_tag_field), !dbg !2708
  br label %modify_rc_union_merge, !dbg !2708

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2708
  %modify_tag_field3 = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr2, i32 0, i32 0, !dbg !2708
  call fastcc void @"#Attr_#dec_37"(ptr %modify_tag_field3), !dbg !2708
  br label %modify_rc_union_merge, !dbg !2708

tag_id_modify4:                                   ; preds = %entry
  %field_ptr5 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2708
  %modify_tag_field6 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr5, i32 0, i32 0, !dbg !2708
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field6), !dbg !2708
  br label %modify_rc_union_merge, !dbg !2708
}

define private fastcc i1 @"#Attr_#list_eq_1"(%list.RocList %"#arg1", %list.RocList %"#arg2") !dbg !2710 {
entry:
  %index = alloca i64, align 8, !dbg !2711
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !2711
  %list_len1 = extractvalue %list.RocList %"#arg2", 1, !dbg !2711
  %bounds_check = icmp eq i64 %list_len, %list_len1, !dbg !2711
  br i1 %bounds_check, label %then, label %return_false, !dbg !2711

return_true:                                      ; preds = %loop
  ret i1 true, !dbg !2711

return_false:                                     ; preds = %body, %entry
  ret i1 false, !dbg !2711

then:                                             ; preds = %entry
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !2711
  %read_list_ptr2 = extractvalue %list.RocList %"#arg2", 0, !dbg !2711
  store i64 0, ptr %index, align 8, !dbg !2711
  br label %loop, !dbg !2711

loop:                                             ; preds = %increment, %then
  %index3 = load i64, ptr %index, align 8, !dbg !2711
  %bounds_check4 = icmp ult i64 %index3, %list_len, !dbg !2711
  br i1 %bounds_check4, label %body, label %return_true, !dbg !2711

body:                                             ; preds = %loop
  %load_index = getelementptr inbounds i8, ptr %read_list_ptr, i64 %index3, !dbg !2711
  %get_elem = load i8, ptr %load_index, align 1, !dbg !2711
  %load_index5 = getelementptr inbounds i8, ptr %read_list_ptr2, i64 %index3, !dbg !2711
  %get_elem6 = load i8, ptr %load_index5, align 1, !dbg !2711
  %eq_u8 = icmp eq i8 %get_elem, %get_elem6, !dbg !2711
  br i1 %eq_u8, label %increment, label %return_false, !dbg !2711

increment:                                        ; preds = %body
  %nextindex = add i64 %index3, 1, !dbg !2711
  store i64 %nextindex, ptr %index, align 8, !dbg !2711
  br label %loop, !dbg !2711
}

; Function Attrs: cold noinline noreturn
define internal fastcc void @throw_on_overflow() #15 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  store %str.RocStr { ptr getelementptr inbounds (i8, ptr @_str_literal_5625337945828202030, i64 8), i64 34, i64 34 }, ptr %const_str_store, align 8, !dbg !1295
  call void @roc_panic(ptr %const_str_store, i32 0), !dbg !1295
  unreachable, !dbg !1295
}

define private fastcc void @"#Attr_#dec_42"(ptr %"#arg1") !dbg !2713 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2714
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2714
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 1, label %tag_id_modify
  ], !dbg !2714

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !2714

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2714
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2714
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2714
  br label %modify_rc_union_merge, !dbg !2714
}

define private fastcc void @"#Attr_#inc_43"(ptr %"#arg1", i64 %0) !dbg !2716 {
entry:
  %struct_field1 = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !2717
  %struct_field = alloca { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !2717
  %struct_field_access_record_0 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2717
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, ptr null, i32 1) to i64), i1 false), !dbg !2717
  call fastcc void @"#Attr_#inc_44"(ptr %struct_field, i64 %0), !dbg !2717
  %struct_field_access_record_1 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, ptr %"#arg1", i32 0, i32 1, !dbg !2717
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field1, ptr align 8 %struct_field_access_record_1, i64 ptrtoint (ptr getelementptr ({ { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr null, i32 1) to i64), i1 false), !dbg !2717
  call fastcc void @"#Attr_#inc_18"(ptr %struct_field1, i64 %0), !dbg !2717
  ret void, !dbg !2717
}

define private fastcc void @"#Attr_#inc_44"(ptr %"#arg1", i64 %0) !dbg !2719 {
entry:
  %struct_field = alloca { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, align 8, !dbg !2720
  %struct_field_access_record_0 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2720
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, ptr null, i32 1) to i64), i1 false), !dbg !2720
  call fastcc void @"#Attr_#inc_45"(ptr %struct_field, i64 %0), !dbg !2720
  ret void, !dbg !2720
}

define private fastcc void @"#Attr_#inc_45"(ptr %"#arg1", i64 %0) !dbg !2722 {
entry:
  %struct_field = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2723
  %struct_field_access_record_0 = getelementptr inbounds { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2723
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ %str.RocStr, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !2723
  call fastcc void @"#Attr_#inc_20"(ptr %struct_field, i64 %0), !dbg !2723
  ret void, !dbg !2723
}

define private fastcc void @"#Attr_#dec_46"(ptr %"#arg1") !dbg !2725 {
entry:
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2726
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2726
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
  ], !dbg !2726

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2726

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2726
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2726
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2726
  br label %modify_rc_union_merge, !dbg !2726

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [5 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2726
  %modify_tag_field3 = getelementptr inbounds { { %list.RocList, { i64, i64 } } }, ptr %field_ptr2, i32 0, i32 0, !dbg !2726
  call fastcc void @"#Attr_#dec_47"(ptr %modify_tag_field3), !dbg !2726
  br label %modify_rc_union_merge, !dbg !2726
}

define private fastcc void @"#Attr_#dec_47"(ptr %"#arg1") !dbg !2728 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, { i64, i64 } }, ptr %"#arg1", i32 0, i32 0, !dbg !2729
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !2729
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field), !dbg !2729
  ret void, !dbg !2729
}

define private fastcc void @"#Attr_#dec_43"(ptr %"#arg1") !dbg !2731 {
entry:
  %struct_field1 = alloca { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, align 8, !dbg !2732
  %struct_field = alloca { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !2732
  %struct_field_access_record_0 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2732
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, ptr null, i32 1) to i64), i1 false), !dbg !2732
  call fastcc void @"#Attr_#dec_44"(ptr %struct_field), !dbg !2732
  %struct_field_access_record_1 = getelementptr inbounds { { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } } }, ptr %"#arg1", i32 0, i32 1, !dbg !2732
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field1, ptr align 8 %struct_field_access_record_1, i64 ptrtoint (ptr getelementptr ({ { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, ptr null, i32 1) to i64), i1 false), !dbg !2732
  call fastcc void @"#Attr_#dec_18"(ptr %struct_field1), !dbg !2732
  ret void, !dbg !2732
}

define private fastcc void @"#Attr_#dec_44"(ptr %"#arg1") !dbg !2734 {
entry:
  %struct_field = alloca { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, align 8, !dbg !2735
  %struct_field_access_record_0 = getelementptr inbounds { { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, { {}, { { {}, {} }, {} } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2735
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, ptr null, i32 1) to i64), i1 false), !dbg !2735
  call fastcc void @"#Attr_#dec_45"(ptr %struct_field), !dbg !2735
  ret void, !dbg !2735
}

define private fastcc void @"#Attr_#dec_45"(ptr %"#arg1") !dbg !2737 {
entry:
  %struct_field = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2738
  %struct_field_access_record_0 = getelementptr inbounds { { %str.RocStr, %list.RocList }, { {}, { {}, { { {}, {} }, {} } } } }, ptr %"#arg1", i32 0, i32 0, !dbg !2738
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ %str.RocStr, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !2738
  call fastcc void @"#Attr_#dec_20"(ptr %struct_field), !dbg !2738
  ret void, !dbg !2738
}

; Function Attrs: alwaysinline
define private void @"#Attr_#generic_copy_by_ref_5"(ptr %"#arg1", ptr %"#arg2") #16 !dbg !1981 {
entry:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %"#arg1", ptr align 8 %"#arg2", i64 ptrtoint (ptr getelementptr (i64, ptr null, i32 1) to i64), i1 false), !dbg !2740
  ret void, !dbg !2740
}

define private fastcc void @"#Attr_#inc_38"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2741 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2742
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2742
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2742
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2742
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2742
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2742
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2742
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2742
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2742
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !2742
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !2742
  %2 = or i64 %1, %0, !dbg !2742
  %3 = icmp ne i64 %2, 0, !dbg !2742
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !2742
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !2742

.critedge.i.i:                                    ; preds = %23, %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2742
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2742
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2742
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %4, !dbg !2742
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !2742
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %7, !dbg !2742

7:                                                ; preds = %.critedge.i.i
  %8 = and i64 %6, -8, !dbg !2742
  %9 = add i64 %8, -8, !dbg !2742
  %10 = inttoptr i64 %9 to ptr, !dbg !2742
  %11 = load i64, ptr %10, align 8, !dbg !2742
  %.not.i.i.i.i = icmp eq i64 %11, 0, !dbg !2742
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %12, !dbg !2742

12:                                               ; preds = %7
  %13 = add nsw i64 %11, %"#arg2", !dbg !2742
  %sunkaddr.i = inttoptr i64 %8 to ptr, !dbg !2742
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2742
  store i64 %13, ptr %sunkaddr2.i, align 8, !dbg !2742
  br label %roc_builtins.list.incref.exit, !dbg !2742

.thread.i.i:                                      ; preds = %entry
  %.not.old.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2742
  br i1 %.not.old.i.i, label %.critedge.i.i, label %23, !dbg !2742

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %14 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2742
  %15 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2742
  %16 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2742
  %17 = select i1 %14, i64 %16, i64 %15, !dbg !2742
  %18 = inttoptr i64 %17 to ptr, !dbg !2742
  %19 = getelementptr inbounds i64, ptr %18, i64 -1, !dbg !2742
  %20 = load i64, ptr %19, align 8, !dbg !2742
  %21 = icmp ne i64 %20, -9223372036854775808, !dbg !2742
  %.not.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !2742
  %22 = select i1 %21, i1 true, i1 %14, !dbg !2742
  %or.cond14.i.i = select i1 %22, i1 true, i1 %.not.i.i, !dbg !2742
  br i1 %or.cond14.i.i, label %.critedge.i.i, label %23, !dbg !2742

23:                                               ; preds = %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %24 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !2742
  store i64 %.sroa.3.0.copyload.i, ptr %24, align 8, !dbg !2742
  br label %.critedge.i.i, !dbg !2742

roc_builtins.list.incref.exit:                    ; preds = %.critedge.i.i, %7, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2742
  ret void, !dbg !2742
}

define private fastcc void @"#Attr_#dec_29"(ptr %"#arg1") !dbg !2744 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"#arg1", i32 0, i32 0, !dbg !2745
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !2745
  call fastcc void @"#Attr_#dec_2"(%list.RocList %struct_field), !dbg !2745
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"#arg1", i32 0, i32 1, !dbg !2745
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2745
  call fastcc void @"#Attr_#dec_4"(%list.RocList %struct_field1), !dbg !2745
  ret void, !dbg !2745
}

define private fastcc void @"#Attr_#inc_48"(ptr %"#arg1", i64 %0) !dbg !2747 {
entry:
  %struct_field1 = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2748
  %struct_field = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !2748
  %struct_field_access_record_0 = getelementptr inbounds { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, ptr %"#arg1", i32 0, i32 0, !dbg !2748
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, ptr null, i32 1) to i64), i1 false), !dbg !2748
  call fastcc void @"#Attr_#inc_17"(ptr %struct_field, i64 %0), !dbg !2748
  %struct_field_access_record_1 = getelementptr inbounds { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, ptr %"#arg1", i32 0, i32 1, !dbg !2748
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field1, ptr align 8 %struct_field_access_record_1, i64 ptrtoint (ptr getelementptr ({ %str.RocStr, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !2748
  call fastcc void @"#Attr_#inc_20"(ptr %struct_field1, i64 %0), !dbg !2748
  ret void, !dbg !2748
}

define private fastcc void @"#Attr_#dec_49"(ptr %"#arg1") !dbg !2750 {
entry:
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !2751
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !2751
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
  ], !dbg !2751

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !2751

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2751
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !2751
  call fastcc void @"#Attr_#dec_13"(ptr %modify_tag_field), !dbg !2751
  br label %modify_rc_union_merge, !dbg !2751

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [6 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !2751
  %modify_tag_field3 = getelementptr inbounds { { %list.RocList, %list.RocList } }, ptr %field_ptr2, i32 0, i32 0, !dbg !2751
  call fastcc void @"#Attr_#dec_50"(ptr %modify_tag_field3), !dbg !2751
  br label %modify_rc_union_merge, !dbg !2751
}

define private fastcc void @"#Attr_#dec_50"(ptr %"#arg1") !dbg !2753 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"#arg1", i32 0, i32 0, !dbg !2754
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !2754
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field), !dbg !2754
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList }, ptr %"#arg1", i32 0, i32 1, !dbg !2754
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !2754
  call fastcc void @"#Attr_#dec_1"(%list.RocList %struct_field1), !dbg !2754
  ret void, !dbg !2754
}

define private fastcc void @"#Attr_#dec_48"(ptr %"#arg1") !dbg !2756 {
entry:
  %struct_field1 = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !2757
  %struct_field = alloca { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, align 8, !dbg !2757
  %struct_field_access_record_0 = getelementptr inbounds { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, ptr %"#arg1", i32 0, i32 0, !dbg !2757
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field, ptr align 8 %struct_field_access_record_0, i64 ptrtoint (ptr getelementptr ({ { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, ptr null, i32 1) to i64), i1 false), !dbg !2757
  call fastcc void @"#Attr_#dec_17"(ptr %struct_field), !dbg !2757
  %struct_field_access_record_1 = getelementptr inbounds { { { { { %str.RocStr, %list.RocList }, {} }, { [3 x i64], i8 } }, { {}, { { {}, {} }, {} } } }, { %str.RocStr, %list.RocList } }, ptr %"#arg1", i32 0, i32 1, !dbg !2757
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %struct_field1, ptr align 8 %struct_field_access_record_1, i64 ptrtoint (ptr getelementptr ({ %str.RocStr, %list.RocList }, ptr null, i32 1) to i64), i1 false), !dbg !2757
  call fastcc void @"#Attr_#dec_20"(ptr %struct_field1), !dbg !2757
  ret void, !dbg !2757
}

; Function Attrs: alwaysinline
define private i8 @Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6_compare_wrapper(ptr %"#arg1", ptr %"#arg2", ptr %"#arg3") #16 !dbg !2759 {
entry:
  %load_opaque = load i64, ptr %"#arg2", align 8, !dbg !2760
  %load_opaque1 = load i64, ptr %"#arg3", align 8, !dbg !2760
  %load_opaque2 = load { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", align 8, !dbg !2760
  %call_user_defined_compare_function = call fastcc i8 @Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6(i64 %load_opaque, i64 %load_opaque1, { %list.RocList, %list.RocList, i64, float, i8 } %load_opaque2), !dbg !2760
  ret i8 %call_user_defined_compare_function, !dbg !2760
}

; Function Attrs: alwaysinline
define private void @"#Attr_#generic_rc_by_ref_11_inc_n"(ptr %"#arg1", i64 %"#arg2") #16 !dbg !2762 {
entry:
  call fastcc void @"#Attr_#inc_25"(ptr %"#arg1", i64 %"#arg2"), !dbg !2763
  ret void, !dbg !2763
}

define private fastcc void @"#Attr_#inc_32"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !2765 {
entry:
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !2766
  call void @llvm.lifetime.start.p0(i64 24, ptr %list_alloca1), !dbg !2766
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %list_alloca1, ptr align 1 %list_alloca, i64 24, i1 false), !dbg !2766
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca1, align 8, !dbg !2766
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !2766
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !2766
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 16, !dbg !2766
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !2766
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !2766
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !2766
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !2766
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !2766
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !2766
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !2766

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !2766
  %5 = add i64 %4, -8, !dbg !2766
  %6 = inttoptr i64 %5 to ptr, !dbg !2766
  %7 = load i64, ptr %6, align 8, !dbg !2766
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !2766
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !2766

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !2766
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !2766
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !2766
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !2766
  br label %roc_builtins.list.incref.exit, !dbg !2766

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  call void @llvm.lifetime.end.p0(i64 24, ptr %list_alloca1), !dbg !2766
  ret void, !dbg !2766
}

define void @roc__mainForHost_0_caller(ptr %0, ptr %1, ptr %2) {
entry:
  %result_value = alloca { [1 x i32], i8 }, align 8, !dbg !2525
  %load_param = load {}, ptr %0, align 1, !dbg !2525
  call fastcc void @_89_b36e71bec3e8f440a488a235b9ca4a36d87cd2aeccf23eb4a588a2afa227d1({} %load_param, ptr %1, ptr %result_value), !dbg !2525
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %2, ptr align 4 %result_value, i64 ptrtoint (ptr getelementptr ({ [1 x i32], i8 }, ptr null, i32 1) to i64), i1 false), !dbg !2525
  ret void, !dbg !2525
}

define i64 @roc__mainForHost_0_result_size() {
entry:
  ret i64 ptrtoint (ptr getelementptr ({ [1 x i32], i8 }, ptr null, i32 1) to i64), !dbg !2525
}

define i64 @roc__mainForHost_0_size() {
entry:
  ret i64 ptrtoint (ptr getelementptr ({ { { { %list.RocList, { [3 x i64], i8 } }, { [3 x i64], i8 } }, {} }, {} }, ptr null, i32 1) to i64), !dbg !2525
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #17

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #1 = { noreturn nounwind uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn memory(none) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #6 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #7 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #8 = { mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #10 = { nofree nosync nounwind memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #11 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #12 = { nofree nosync nounwind uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #13 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "frame-pointer"="none" "target-cpu"="x86-64" "target-features"="-16bit-mode,-32bit-mode,-3dnow,-3dnowa,+64bit,-adx,-aes,-allow-light-256-bit,-amx-bf16,-amx-fp16,-amx-int8,-amx-tile,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512fp16,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-avxifma,-avxneconvert,-avxvnni,-avxvnniint8,-bmi,-bmi2,-branchfusion,-cldemote,-clflushopt,-clwb,-clzero,+cmov,-cmpccxadd,-crc32,-cx16,+cx8,-enqcmd,-ermsb,-f16c,-false-deps-getmant,-false-deps-lzcnt-tzcnt,-false-deps-mulc,-false-deps-mullq,-false-deps-perm,-false-deps-popcnt,-false-deps-range,-fast-11bytenop,-fast-15bytenop,-fast-7bytenop,-fast-bextr,-fast-gather,-fast-hops,-fast-lzcnt,-fast-movbe,-fast-scalar-fsqrt,-fast-scalar-shift-masks,-fast-shld-rotate,-fast-variable-crosslane-shuffle,-fast-variable-perlane-shuffle,-fast-vector-fsqrt,-fast-vector-shift-masks,-fma,-fma4,-fsgsbase,-fsrm,+fxsr,-gfni,-harden-sls-ijmp,-harden-sls-ret,-hreset,-idivl-to-divb,+idivq-to-divl,-invpcid,-kl,-lea-sp,-lea-uses-ag,-lvi-cfi,-lvi-load-hardening,-lwp,-lzcnt,+macrofusion,+mmx,-movbe,-movdir64b,-movdiri,-mwaitx,+nopl,-pad-short-functions,-pclmul,-pconfig,-pku,-popcnt,-prefer-128-bit,-prefer-256-bit,-prefer-mask-registers,-prefetchi,-prefetchwt1,-prfchw,-ptwrite,-raoint,-rdpid,-rdpru,-rdrnd,-rdseed,-retpoline,-retpoline-external-thunk,-retpoline-indirect-branches,-retpoline-indirect-calls,-rtm,-sahf,-sbb-dep-breaking,-serialize,-seses,-sgx,-sha,-shstk,+slow-3ops-lea,+slow-incdec,-slow-lea,-slow-pmaddwd,-slow-pmulld,-slow-shld,-slow-two-mem-ops,-slow-unaligned-mem-16,-slow-unaligned-mem-32,-soft-float,+sse,+sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-sse-unaligned-mem,-ssse3,-tagged-globals,-tbm,-tsxldtrk,-uintr,-use-glm-div-sqrt-costs,-use-slm-arith-costs,-vaes,-vpclmulqdq,+vzeroupper,-waitpkg,-wbnoinvd,-widekl,+x87,-xop,-xsave,-xsavec,-xsaveopt,-xsaves" }
attributes #14 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #15 = { cold noinline noreturn }
attributes #16 = { alwaysinline }
attributes #17 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #18 = { nounwind }
attributes #19 = { noinline }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "my llvm compiler frontend", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!2 = !DIFile(filename: "roc_app", directory: ".")
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"str.RocStr.allocateBig: argument 0"}
!5 = distinct !{!5, !"str.RocStr.allocateBig"}
!6 = distinct !{!6, !7, !"str.RocStr.allocate: argument 0"}
!7 = distinct !{!7, !"str.RocStr.allocate"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15, !16, !17}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !13}
!17 = distinct !{!17, !13}
!18 = !{!16}
!19 = !{!17}
!20 = !{!15}
!21 = !{!16, !17}
!22 = distinct !{!22, !23, !24}
!23 = !{!"llvm.loop.isvectorized", i32 1}
!24 = !{!"llvm.loop.unroll.runtime.disable"}
!25 = distinct !{!25, !23}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30, !31, !32}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !28}
!32 = distinct !{!32, !28}
!33 = !{!31}
!34 = !{!32}
!35 = !{!30}
!36 = !{!31, !32}
!37 = distinct !{!37, !23, !24}
!38 = distinct !{!38, !23}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43, !44, !45}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !41}
!45 = distinct !{!45, !41}
!46 = !{!44}
!47 = !{!45}
!48 = !{!43}
!49 = !{!44, !45}
!50 = distinct !{!50, !23, !24}
!51 = distinct !{!51, !23}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56, !57, !58}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !54}
!58 = distinct !{!58, !54}
!59 = !{!57}
!60 = !{!58}
!61 = !{!56}
!62 = !{!57, !58}
!63 = distinct !{!63, !23, !24}
!64 = distinct !{!64, !23}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69, !70, !71}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !67}
!71 = distinct !{!71, !67}
!72 = !{!70}
!73 = !{!71}
!74 = !{!69}
!75 = !{!70, !71}
!76 = distinct !{!76, !23, !24}
!77 = distinct !{!77, !23}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82, !83, !84}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !80}
!84 = distinct !{!84, !80}
!85 = !{!83}
!86 = !{!84}
!87 = !{!82}
!88 = !{!83, !84}
!89 = distinct !{!89, !23, !24}
!90 = distinct !{!90, !23}
!91 = !{!92}
!92 = distinct !{!92, !93}
!93 = distinct !{!93, !"LVerDomain"}
!94 = !{!95, !96, !97}
!95 = distinct !{!95, !93}
!96 = distinct !{!96, !93}
!97 = distinct !{!97, !93}
!98 = !{!96}
!99 = !{!97}
!100 = !{!95}
!101 = !{!96, !97}
!102 = distinct !{!102, !23, !24}
!103 = distinct !{!103, !23}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108, !109, !110}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !106}
!110 = distinct !{!110, !106}
!111 = !{!109}
!112 = !{!110}
!113 = !{!108}
!114 = !{!109, !110}
!115 = distinct !{!115, !23, !24}
!116 = distinct !{!116, !23}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121, !122, !123}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !119}
!123 = distinct !{!123, !119}
!124 = !{!122}
!125 = !{!123}
!126 = !{!121}
!127 = !{!122, !123}
!128 = distinct !{!128, !23, !24}
!129 = distinct !{!129, !23}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134, !135, !136}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !132}
!136 = distinct !{!136, !132}
!137 = !{!135}
!138 = !{!136}
!139 = !{!134}
!140 = !{!135, !136}
!141 = distinct !{!141, !23, !24}
!142 = distinct !{!142, !23}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147, !148, !149}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !145}
!149 = distinct !{!149, !145}
!150 = !{!148}
!151 = !{!149}
!152 = !{!147}
!153 = !{!148, !149}
!154 = distinct !{!154, !23, !24}
!155 = distinct !{!155, !23}
!156 = !{!157}
!157 = distinct !{!157, !158}
!158 = distinct !{!158, !"LVerDomain"}
!159 = !{!160, !161, !162}
!160 = distinct !{!160, !158}
!161 = distinct !{!161, !158}
!162 = distinct !{!162, !158}
!163 = !{!161}
!164 = !{!162}
!165 = !{!160}
!166 = !{!161, !162}
!167 = distinct !{!167, !23, !24}
!168 = distinct !{!168, !23}
!169 = !{!170}
!170 = distinct !{!170, !171}
!171 = distinct !{!171, !"LVerDomain"}
!172 = !{!173, !174, !175}
!173 = distinct !{!173, !171}
!174 = distinct !{!174, !171}
!175 = distinct !{!175, !171}
!176 = !{!174}
!177 = !{!175}
!178 = !{!173}
!179 = !{!174, !175}
!180 = distinct !{!180, !23, !24}
!181 = distinct !{!181, !23}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186, !187, !188}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !184}
!188 = distinct !{!188, !184}
!189 = !{!187}
!190 = !{!188}
!191 = !{!186}
!192 = !{!187, !188}
!193 = distinct !{!193, !23, !24}
!194 = distinct !{!194, !23}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199, !200, !201}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !197}
!201 = distinct !{!201, !197}
!202 = !{!200}
!203 = !{!201}
!204 = !{!199}
!205 = !{!200, !201}
!206 = distinct !{!206, !23, !24}
!207 = distinct !{!207, !23}
!208 = !{!209}
!209 = distinct !{!209, !210}
!210 = distinct !{!210, !"LVerDomain"}
!211 = !{!212, !213, !214}
!212 = distinct !{!212, !210}
!213 = distinct !{!213, !210}
!214 = distinct !{!214, !210}
!215 = !{!213}
!216 = !{!214}
!217 = !{!212}
!218 = !{!213, !214}
!219 = distinct !{!219, !23, !24}
!220 = distinct !{!220, !23}
!221 = !{!222}
!222 = distinct !{!222, !223}
!223 = distinct !{!223, !"LVerDomain"}
!224 = !{!225, !226, !227}
!225 = distinct !{!225, !223}
!226 = distinct !{!226, !223}
!227 = distinct !{!227, !223}
!228 = !{!226}
!229 = !{!227}
!230 = !{!225}
!231 = !{!226, !227}
!232 = distinct !{!232, !23, !24}
!233 = distinct !{!233, !23}
!234 = !{!235}
!235 = distinct !{!235, !236}
!236 = distinct !{!236, !"LVerDomain"}
!237 = !{!238, !239, !240}
!238 = distinct !{!238, !236}
!239 = distinct !{!239, !236}
!240 = distinct !{!240, !236}
!241 = !{!239}
!242 = !{!240}
!243 = !{!238}
!244 = !{!239, !240}
!245 = distinct !{!245, !23, !24}
!246 = distinct !{!246, !23}
!247 = !{!248}
!248 = distinct !{!248, !249}
!249 = distinct !{!249, !"LVerDomain"}
!250 = !{!251, !252, !253}
!251 = distinct !{!251, !249}
!252 = distinct !{!252, !249}
!253 = distinct !{!253, !249}
!254 = !{!252}
!255 = !{!253}
!256 = !{!251}
!257 = !{!252, !253}
!258 = distinct !{!258, !23, !24}
!259 = distinct !{!259, !23}
!260 = !{!261}
!261 = distinct !{!261, !262}
!262 = distinct !{!262, !"LVerDomain"}
!263 = !{!264, !265, !266}
!264 = distinct !{!264, !262}
!265 = distinct !{!265, !262}
!266 = distinct !{!266, !262}
!267 = !{!265}
!268 = !{!266}
!269 = !{!264}
!270 = !{!265, !266}
!271 = distinct !{!271, !23, !24}
!272 = distinct !{!272, !23}
!273 = !{!274}
!274 = distinct !{!274, !275}
!275 = distinct !{!275, !"LVerDomain"}
!276 = !{!277, !278, !279}
!277 = distinct !{!277, !275}
!278 = distinct !{!278, !275}
!279 = distinct !{!279, !275}
!280 = !{!278}
!281 = !{!279}
!282 = !{!277}
!283 = !{!278, !279}
!284 = distinct !{!284, !23, !24}
!285 = distinct !{!285, !23}
!286 = !{!287}
!287 = distinct !{!287, !288}
!288 = distinct !{!288, !"LVerDomain"}
!289 = !{!290, !291, !292}
!290 = distinct !{!290, !288}
!291 = distinct !{!291, !288}
!292 = distinct !{!292, !288}
!293 = !{!291}
!294 = !{!292}
!295 = !{!290}
!296 = !{!291, !292}
!297 = distinct !{!297, !23, !24}
!298 = distinct !{!298, !23}
!299 = !{!300}
!300 = distinct !{!300, !301}
!301 = distinct !{!301, !"LVerDomain"}
!302 = !{!303, !304, !305}
!303 = distinct !{!303, !301}
!304 = distinct !{!304, !301}
!305 = distinct !{!305, !301}
!306 = !{!304}
!307 = !{!305}
!308 = !{!303}
!309 = !{!304, !305}
!310 = distinct !{!310, !23, !24}
!311 = distinct !{!311, !23}
!312 = !{!313}
!313 = distinct !{!313, !314}
!314 = distinct !{!314, !"LVerDomain"}
!315 = !{!316, !317, !318}
!316 = distinct !{!316, !314}
!317 = distinct !{!317, !314}
!318 = distinct !{!318, !314}
!319 = !{!317}
!320 = !{!318}
!321 = !{!316}
!322 = !{!317, !318}
!323 = distinct !{!323, !23, !24}
!324 = distinct !{!324, !23}
!325 = !{!326}
!326 = distinct !{!326, !327, !"str.RocStr.fromSlice: argument 0"}
!327 = distinct !{!327, !"str.RocStr.fromSlice"}
!328 = !{!329, !331, !333, !326}
!329 = distinct !{!329, !330, !"str.RocStr.allocateBig: argument 0"}
!330 = distinct !{!330, !"str.RocStr.allocateBig"}
!331 = distinct !{!331, !332, !"str.RocStr.allocate: argument 0"}
!332 = distinct !{!332, !"str.RocStr.allocate"}
!333 = distinct !{!333, !334, !"str.RocStr.init: argument 0"}
!334 = distinct !{!334, !"str.RocStr.init"}
!335 = !{!333, !326}
!336 = !{!337}
!337 = distinct !{!337, !338, !"list.RocList.empty: argument 0"}
!338 = distinct !{!338, !"list.RocList.empty"}
!339 = !{!340}
!340 = distinct !{!340, !341, !"str.fromUtf8: argument 0"}
!341 = distinct !{!341, !"str.fromUtf8"}
!342 = !{!343, !340}
!343 = distinct !{!343, !344, !"str.RocStr.fromSubListUnsafe: argument 0"}
!344 = distinct !{!344, !"str.RocStr.fromSubListUnsafe"}
!345 = !{!346, !340}
!346 = distinct !{!346, !347, !"str.errorToProblem: argument 0"}
!347 = distinct !{!347, !"str.errorToProblem"}
!348 = !{!349, !346, !340}
!349 = distinct !{!349, !350, !"str.numberOfNextCodepointBytes: argument 0"}
!350 = distinct !{!350, !"str.numberOfNextCodepointBytes"}
!351 = !{!352}
!352 = distinct !{!352, !353, !"fmt.bufPrint__anon_10527: argument 0"}
!353 = distinct !{!353, !"fmt.bufPrint__anon_10527"}
!354 = !{!355}
!355 = distinct !{!355, !356, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer: argument 0"}
!356 = distinct !{!356, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer"}
!357 = !{!358, !352}
!358 = distinct !{!358, !359, !"fmt.digits2: argument 0"}
!359 = distinct !{!359, !"fmt.digits2"}
!360 = !{!361, !352}
!361 = distinct !{!361, !362, !"fmt.digits2: argument 0"}
!362 = distinct !{!362, !"fmt.digits2"}
!363 = !{!364, !366, !368}
!364 = distinct !{!364, !365, !"str.RocStr.allocateBig: argument 0"}
!365 = distinct !{!365, !"str.RocStr.allocateBig"}
!366 = distinct !{!366, !367, !"str.RocStr.allocate: argument 0"}
!367 = distinct !{!367, !"str.RocStr.allocate"}
!368 = distinct !{!368, !369, !"str.RocStr.init: argument 0"}
!369 = distinct !{!369, !"str.RocStr.init"}
!370 = !{!368}
!371 = !{!372}
!372 = distinct !{!372, !373, !"fmt.bufPrint__anon_11093: argument 0"}
!373 = distinct !{!373, !"fmt.bufPrint__anon_11093"}
!374 = !{!375}
!375 = distinct !{!375, !376, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer: argument 0"}
!376 = distinct !{!376, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer"}
!377 = !{!378, !372}
!378 = distinct !{!378, !379, !"fmt.digits2: argument 0"}
!379 = distinct !{!379, !"fmt.digits2"}
!380 = !{!381, !372}
!381 = distinct !{!381, !382, !"fmt.digits2: argument 0"}
!382 = distinct !{!382, !"fmt.digits2"}
!383 = !{!384, !386, !388}
!384 = distinct !{!384, !385, !"str.RocStr.allocateBig: argument 0"}
!385 = distinct !{!385, !"str.RocStr.allocateBig"}
!386 = distinct !{!386, !387, !"str.RocStr.allocate: argument 0"}
!387 = distinct !{!387, !"str.RocStr.allocate"}
!388 = distinct !{!388, !389, !"str.RocStr.init: argument 0"}
!389 = distinct !{!389, !"str.RocStr.init"}
!390 = !{!388}
!391 = !{i64 0, i64 65}
!392 = distinct !{!392, !23, !24}
!393 = distinct !{!393, !23, !24}
!394 = distinct !{!394, !24, !23}
!395 = distinct !{!395, !23, !24}
!396 = distinct !{!396, !23, !24}
!397 = distinct !{!397, !24, !23}
!398 = !{!399}
!399 = distinct !{!399, !400, !"unicode.utf8Decode2: argument 0"}
!400 = distinct !{!400, !"unicode.utf8Decode2"}
!401 = !{!402}
!402 = distinct !{!402, !403, !"unicode.utf8Decode3: argument 0"}
!403 = distinct !{!403, !"unicode.utf8Decode3"}
!404 = !{!405}
!405 = distinct !{!405, !406, !"unicode.utf8Decode4: argument 0"}
!406 = distinct !{!406, !"unicode.utf8Decode4"}
!407 = !{!408, !410}
!408 = distinct !{!408, !409, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!409 = distinct !{!409, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!410 = distinct !{!410, !411, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!411 = distinct !{!411, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!412 = !{!413, !415}
!413 = distinct !{!413, !414, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!414 = distinct !{!414, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!415 = distinct !{!415, !416, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!416 = distinct !{!416, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!417 = !{!418, !420}
!418 = distinct !{!418, !419, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!419 = distinct !{!419, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!420 = distinct !{!420, !421, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!421 = distinct !{!421, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!422 = !{!423, !425}
!423 = distinct !{!423, !424, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!424 = distinct !{!424, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!425 = distinct !{!425, !426, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!426 = distinct !{!426, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!427 = !{!428, !430}
!428 = distinct !{!428, !429, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!429 = distinct !{!429, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!430 = distinct !{!430, !431, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!431 = distinct !{!431, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!432 = !{!433, !435}
!433 = distinct !{!433, !434, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!434 = distinct !{!434, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!435 = distinct !{!435, !436, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!436 = distinct !{!436, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!437 = !{!438, !440}
!438 = distinct !{!438, !439, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!439 = distinct !{!439, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!440 = distinct !{!440, !441, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!441 = distinct !{!441, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!442 = !{!443, !445}
!443 = distinct !{!443, !444, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!444 = distinct !{!444, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!445 = distinct !{!445, !446, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!446 = distinct !{!446, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!447 = !{!448, !450}
!448 = distinct !{!448, !449, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!449 = distinct !{!449, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!450 = distinct !{!450, !451, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!451 = distinct !{!451, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!452 = !{!453}
!453 = distinct !{!453, !454, !"str.RocStr.allocateBig: argument 0"}
!454 = distinct !{!454, !"str.RocStr.allocateBig"}
!455 = distinct !{!455, !23, !24}
!456 = distinct !{!456, !23, !24}
!457 = distinct !{!457, !9}
!458 = distinct !{!458, !23}
!459 = !{!460}
!460 = distinct !{!460, !461}
!461 = distinct !{!461, !"LVerDomain"}
!462 = !{!463, !464, !465}
!463 = distinct !{!463, !461}
!464 = distinct !{!464, !461}
!465 = distinct !{!465, !461}
!466 = !{!464}
!467 = !{!465}
!468 = !{!463}
!469 = !{!464, !465}
!470 = distinct !{!470, !23, !24}
!471 = distinct !{!471, !23}
!472 = !{!473}
!473 = distinct !{!473, !474}
!474 = distinct !{!474, !"LVerDomain"}
!475 = !{!476, !477, !478}
!476 = distinct !{!476, !474}
!477 = distinct !{!477, !474}
!478 = distinct !{!478, !474}
!479 = !{!477}
!480 = !{!478}
!481 = !{!476}
!482 = !{!477, !478}
!483 = distinct !{!483, !23, !24}
!484 = distinct !{!484, !23}
!485 = !{!486}
!486 = distinct !{!486, !487}
!487 = distinct !{!487, !"LVerDomain"}
!488 = !{!489, !490, !491}
!489 = distinct !{!489, !487}
!490 = distinct !{!490, !487}
!491 = distinct !{!491, !487}
!492 = !{!490}
!493 = !{!491}
!494 = !{!489}
!495 = !{!490, !491}
!496 = distinct !{!496, !23, !24}
!497 = distinct !{!497, !23}
!498 = !{!499}
!499 = distinct !{!499, !500}
!500 = distinct !{!500, !"LVerDomain"}
!501 = !{!502, !503, !504}
!502 = distinct !{!502, !500}
!503 = distinct !{!503, !500}
!504 = distinct !{!504, !500}
!505 = !{!503}
!506 = !{!504}
!507 = !{!502}
!508 = !{!503, !504}
!509 = distinct !{!509, !23, !24}
!510 = distinct !{!510, !23}
!511 = !{!512}
!512 = distinct !{!512, !513}
!513 = distinct !{!513, !"LVerDomain"}
!514 = !{!515, !516, !517}
!515 = distinct !{!515, !513}
!516 = distinct !{!516, !513}
!517 = distinct !{!517, !513}
!518 = !{!516}
!519 = !{!517}
!520 = !{!515}
!521 = !{!516, !517}
!522 = distinct !{!522, !23, !24}
!523 = distinct !{!523, !23}
!524 = !{!525}
!525 = distinct !{!525, !526}
!526 = distinct !{!526, !"LVerDomain"}
!527 = !{!528, !529, !530}
!528 = distinct !{!528, !526}
!529 = distinct !{!529, !526}
!530 = distinct !{!530, !526}
!531 = !{!529}
!532 = !{!530}
!533 = !{!528}
!534 = !{!529, !530}
!535 = distinct !{!535, !23, !24}
!536 = distinct !{!536, !23}
!537 = distinct !{!537, !9}
!538 = distinct !{!538, !9}
!539 = distinct !{!539, !23, !24}
!540 = distinct !{!540, !23, !24}
!541 = distinct !{!541, !9}
!542 = distinct !{!542, !23}
!543 = distinct !{!543, !23, !24}
!544 = distinct !{!544, !23, !24}
!545 = distinct !{!545, !9}
!546 = distinct !{!546, !23}
!547 = distinct !{!547, !23, !24}
!548 = distinct !{!548, !23, !24}
!549 = distinct !{!549, !23}
!550 = distinct !{!550, !23, !24}
!551 = distinct !{!551, !23, !24}
!552 = distinct !{!552, !23}
!553 = distinct !{!553, !23, !24}
!554 = distinct !{!554, !23, !24}
!555 = distinct !{!555, !9}
!556 = distinct !{!556, !23}
!557 = distinct !{!557, !23, !24}
!558 = distinct !{!558, !23, !24}
!559 = distinct !{!559, !9}
!560 = distinct !{!560, !23}
!561 = distinct !{!561, !9}
!562 = distinct !{!562, !9}
!563 = distinct !{!563, !9}
!564 = distinct !{!564, !23, !24}
!565 = distinct !{!565, !23, !24}
!566 = distinct !{!566, !9}
!567 = distinct !{!567, !23}
!568 = distinct !{!568, !23, !24}
!569 = distinct !{!569, !23, !24}
!570 = distinct !{!570, !9}
!571 = distinct !{!571, !23}
!572 = distinct !{!572, !9}
!573 = distinct !DISubprogram(name: "String_103_2ef58c8e384362850c578bf62383d3f7b2846ac5d771d1c33fa8ac2df674698", linkageName: "String_103_2ef58c8e384362850c578bf62383d3f7b2846ac5d771d1c33fa8ac2df674698", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!574 = !DISubroutineType(flags: DIFlagPublic, types: !575)
!575 = !{!576}
!576 = !DIBasicType(name: "type_name", flags: DIFlagPublic)
!577 = !{}
!578 = !DILocation(line: 0, scope: !579)
!579 = distinct !DILexicalBlock(scope: !573, file: !2)
!580 = distinct !DISubprogram(name: "List_walkHelp_7e6da7233f16ea2c61d431e9d8c0a56499bf145a5210fb3d79ec4aba1f55c0a8", linkageName: "List_walkHelp_7e6da7233f16ea2c61d431e9d8c0a56499bf145a5210fb3d79ec4aba1f55c0a8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!581 = !DILocation(line: 0, scope: !582)
!582 = distinct !DILexicalBlock(scope: !580, file: !2)
!583 = distinct !DISubprogram(name: "_11_7741d73f424d83c9a2e8e5b6ce502e9a8d175614dae652f87835b573c0d09", linkageName: "_11_7741d73f424d83c9a2e8e5b6ce502e9a8d175614dae652f87835b573c0d09", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!584 = !DILocation(line: 0, scope: !585)
!585 = distinct !DILexicalBlock(scope: !583, file: !2)
!586 = distinct !DISubprogram(name: "Five_partOne_11c91aefaef6a044fe3437f0cd6133f5618564cb559aa842578acbaca75dd41", linkageName: "Five_partOne_11c91aefaef6a044fe3437f0cd6133f5618564cb559aa842578acbaca75dd41", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!587 = !DILocation(line: 0, scope: !588)
!588 = distinct !DILexicalBlock(scope: !586, file: !2)
!589 = distinct !DISubprogram(name: "Inspect_custom_97cfd3a355d55fdb677bbf93838fe1592f750aa128169e250722fae532e291f", linkageName: "Inspect_custom_97cfd3a355d55fdb677bbf93838fe1592f750aa128169e250722fae532e291f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!590 = !DILocation(line: 0, scope: !591)
!591 = distinct !DILexicalBlock(scope: !589, file: !2)
!592 = distinct !DISubprogram(name: "Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1", linkageName: "Dict_maxBucketCount_4ef81b983bd7cde6bbc497dcbaeffcb1ff38a9d8bb9b208abb417910dc73a6d1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!593 = !DILocation(line: 0, scope: !594)
!594 = distinct !DILexicalBlock(scope: !592, file: !2)
!595 = distinct !DISubprogram(name: "Parser_parsePartial_d598f04f24e92cd3b5f7ebf51a29bf23b1257441b9ab0b0179ec01984a0ce6a", linkageName: "Parser_parsePartial_d598f04f24e92cd3b5f7ebf51a29bf23b1257441b9ab0b0179ec01984a0ce6a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!596 = !DILocation(line: 0, scope: !597)
!597 = distinct !DILexicalBlock(scope: !595, file: !2)
!598 = distinct !DISubprogram(name: "Dict_capacity_3c159ccc72c9f6c2f9b343f7ee15555614903dc98bb4bf9da1d235172245b", linkageName: "Dict_capacity_3c159ccc72c9f6c2f9b343f7ee15555614903dc98bb4bf9da1d235172245b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!599 = !DILocation(line: 0, scope: !600)
!600 = distinct !DILexicalBlock(scope: !598, file: !2)
!601 = distinct !DISubprogram(name: "List_append_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57", linkageName: "List_append_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!602 = !DILocation(line: 0, scope: !603)
!603 = distinct !DILexicalBlock(scope: !601, file: !2)
!604 = distinct !DISubprogram(name: "Dict_placeAndShiftUp_4e6df5a280208f8027d8c0e0fd95af1adf299ebd3666b6c48551dc0cb3c3214", linkageName: "Dict_placeAndShiftUp_4e6df5a280208f8027d8c0e0fd95af1adf299ebd3666b6c48551dc0cb3c3214", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!605 = !DILocation(line: 0, scope: !606)
!606 = distinct !DILexicalBlock(scope: !604, file: !2)
!607 = distinct !DISubprogram(name: "Inspect_208_eccfa5306c669977807196608886f415cf9dc848c9f1d2534fa8e21fb61a", linkageName: "Inspect_208_eccfa5306c669977807196608886f415cf9dc848c9f1d2534fa8e21fb61a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!608 = !DILocation(line: 0, scope: !609)
!609 = distinct !DILexicalBlock(scope: !607, file: !2)
!610 = distinct !DISubprogram(name: "Dict_update_e7d224cfcafcc878740e4416f7931bf725f9fd3378f8c73d6a4dc1d8c8883f", linkageName: "Dict_update_e7d224cfcafcc878740e4416f7931bf725f9fd3378f8c73d6a4dc1d8c8883f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!611 = !DILocation(line: 0, scope: !612)
!612 = distinct !DILexicalBlock(scope: !610, file: !2)
!613 = distinct !DISubprogram(name: "Parser_parsePartial_4b2fc33c1d582e1b56b6dd2bdcc2a1fe41a8941cb28841b07ac32da2bed91e69", linkageName: "Parser_parsePartial_4b2fc33c1d582e1b56b6dd2bdcc2a1fe41a8941cb28841b07ac32da2bed91e69", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!614 = !DILocation(line: 0, scope: !615)
!615 = distinct !DILexicalBlock(scope: !613, file: !2)
!616 = distinct !DISubprogram(name: "List_appendUnsafe_4f1fdebc72623b7987dfbf57d7b81537b885c9e4ce317a63dbf262856adf", linkageName: "List_appendUnsafe_4f1fdebc72623b7987dfbf57d7b81537b885c9e4ce317a63dbf262856adf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!617 = !DILocation(line: 0, scope: !618)
!618 = distinct !DILexicalBlock(scope: !616, file: !2)
!619 = !{!620}
!620 = distinct !{!620, !621, !"roc_builtins.list.append_unsafe: argument 0"}
!621 = distinct !{!621, !"roc_builtins.list.append_unsafe"}
!622 = !DILocation(line: 0, scope: !623, inlinedAt: !625)
!623 = distinct !DILexicalBlock(scope: !624, file: !2)
!624 = distinct !DISubprogram(name: "#Attr_#generic_copy_by_ref_1", linkageName: "#Attr_#generic_copy_by_ref_1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!625 = distinct !DILocation(line: 0, scope: !618)
!626 = distinct !DISubprogram(name: "Result_mapErr_99ccc6754e07ea7cffe47524633bfb91dd0f5a5f04cc85ed764577b4b3a23", linkageName: "Result_mapErr_99ccc6754e07ea7cffe47524633bfb91dd0f5a5f04cc85ed764577b4b3a23", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!627 = !DILocation(line: 0, scope: !628)
!628 = distinct !DILexicalBlock(scope: !626, file: !2)
!629 = distinct !DISubprogram(name: "Inspect_275_8ead792afbb7295a7a6f746f03a37944bab1f8fd38fb733c7a6d5776a8f", linkageName: "Inspect_275_8ead792afbb7295a7a6f746f03a37944bab1f8fd38fb733c7a6d5776a8f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!630 = !DILocation(line: 0, scope: !631)
!631 = distinct !DILexicalBlock(scope: !629, file: !2)
!632 = distinct !DISubprogram(name: "Num_isLte_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a", linkageName: "Num_isLte_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!633 = !DILocation(line: 0, scope: !634)
!634 = distinct !DILexicalBlock(scope: !632, file: !2)
!635 = distinct !DISubprogram(name: "Five_83_e95211bde2283defe545e72d738137b8d7082e1cb419ffde6603c1dfde96f", linkageName: "Five_83_e95211bde2283defe545e72d738137b8d7082e1cb419ffde6603c1dfde96f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!636 = !DILocation(line: 0, scope: !637)
!637 = distinct !DILexicalBlock(scope: !635, file: !2)
!638 = distinct !DISubprogram(name: "Stdout_line_bebbb589a83a432de7026fc8b274e9febb5d3770872da3be54e19711abf48c", linkageName: "Stdout_line_bebbb589a83a432de7026fc8b274e9febb5d3770872da3be54e19711abf48c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!639 = !DILocation(line: 0, scope: !640)
!640 = distinct !DILexicalBlock(scope: !638, file: !2)
!641 = distinct !DISubprogram(name: "String_strFromUtf8_46cc5767571b90625b30018eaab612bec9afa9e9b65ec58408e442cd305a", linkageName: "String_strFromUtf8_46cc5767571b90625b30018eaab612bec9afa9e9b65ec58408e442cd305a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!642 = !DILocation(line: 0, scope: !643)
!643 = distinct !DILexicalBlock(scope: !641, file: !2)
!644 = distinct !DISubprogram(name: "List_walk_4643e4e3b17ad449bf2144b916446512b17f621ba9fb35f1ed2ca53f5cb54e", linkageName: "List_walk_4643e4e3b17ad449bf2144b916446512b17f621ba9fb35f1ed2ca53f5cb54e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!645 = !DILocation(line: 0, scope: !646)
!646 = distinct !DILexicalBlock(scope: !644, file: !2)
!647 = distinct !DISubprogram(name: "List_walk_47379a71f6fa75b326383965b5622141f57df12cc22d7140acdf38f0ac8dbc6d", linkageName: "List_walk_47379a71f6fa75b326383965b5622141f57df12cc22d7140acdf38f0ac8dbc6d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!648 = !DILocation(line: 0, scope: !649)
!649 = distinct !DILexicalBlock(scope: !647, file: !2)
!650 = distinct !DISubprogram(name: "Parser_const_30481fcf7c8adc2224aef215aeafd160ca9331f1e475fdfcc945bd7c07dcc", linkageName: "Parser_const_30481fcf7c8adc2224aef215aeafd160ca9331f1e475fdfcc945bd7c07dcc", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!651 = !DILocation(line: 0, scope: !652)
!652 = distinct !DILexicalBlock(scope: !650, file: !2)
!653 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_bb464f7974473b223db683972315b55bb85ee4c998ccde2011e4f189572a27", linkageName: "Parser_buildPrimitiveParser_bb464f7974473b223db683972315b55bb85ee4c998ccde2011e4f189572a27", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!654 = !DILocation(line: 0, scope: !655)
!655 = distinct !DILexicalBlock(scope: !653, file: !2)
!656 = distinct !DISubprogram(name: "Parser_parsePartial_e91c801814dfc76e29f4b9c8a4ab972655104646e410533bc7e1e4608cc95e", linkageName: "Parser_parsePartial_e91c801814dfc76e29f4b9c8a4ab972655104646e410533bc7e1e4608cc95e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!657 = !DILocation(line: 0, scope: !658)
!658 = distinct !DILexicalBlock(scope: !656, file: !2)
!659 = distinct !DISubprogram(name: "List_getUnsafe_3efb3241b6f76bcf29426c5d5647f69b665c3ac3b1fc474c237e0eea46afd1", linkageName: "List_getUnsafe_3efb3241b6f76bcf29426c5d5647f69b665c3ac3b1fc474c237e0eea46afd1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!660 = !DILocation(line: 0, scope: !661)
!661 = distinct !DILexicalBlock(scope: !659, file: !2)
!662 = distinct !DISubprogram(name: "List_getUnsafe_f752fd971dee73f4bef39e126f15a0a84437112755ca589db8702463ce739a", linkageName: "List_getUnsafe_f752fd971dee73f4bef39e126f15a0a84437112755ca589db8702463ce739a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!663 = !DILocation(line: 0, scope: !664)
!664 = distinct !DILexicalBlock(scope: !662, file: !2)
!665 = distinct !DISubprogram(name: "Inspect_213_1d346aa605d9beef3d3c8b59d397858b899a3c7efdcede8d0efd4953334f936", linkageName: "Inspect_213_1d346aa605d9beef3d3c8b59d397858b899a3c7efdcede8d0efd4953334f936", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!666 = !DILocation(line: 0, scope: !667)
!667 = distinct !DILexicalBlock(scope: !665, file: !2)
!668 = distinct !DISubprogram(name: "Parser_parsePartial_aef91e3dd391f968eda86d59248397ec1f818975eed3ca18c01e0fd70e61a24", linkageName: "Parser_parsePartial_aef91e3dd391f968eda86d59248397ec1f818975eed3ca18c01e0fd70e61a24", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!669 = !DILocation(line: 0, scope: !670)
!670 = distinct !DILexicalBlock(scope: !668, file: !2)
!671 = distinct !DISubprogram(name: "Task_46_80e4236cec7ce53ad94a63f0cd85be177651d368effb21dd2f6c26944faf0", linkageName: "Task_46_80e4236cec7ce53ad94a63f0cd85be177651d368effb21dd2f6c26944faf0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!672 = !DILocation(line: 0, scope: !673)
!673 = distinct !DILexicalBlock(scope: !671, file: !2)
!674 = distinct !DISubprogram(name: "List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6", linkageName: "List_len_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!675 = !DILocation(line: 0, scope: !676)
!676 = distinct !DILexicalBlock(scope: !674, file: !2)
!677 = distinct !DISubprogram(name: "Parser_parsePartial_8ce35b34d71cf4b9b0a07273d98ed25775d2f26838242d0ab84e6f1473c5fd0", linkageName: "Parser_parsePartial_8ce35b34d71cf4b9b0a07273d98ed25775d2f26838242d0ab84e6f1473c5fd0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!678 = !DILocation(line: 0, scope: !679)
!679 = distinct !DILexicalBlock(scope: !677, file: !2)
!680 = distinct !DISubprogram(name: "Path_readUtf8_7d6ab6247b40c168eace692941939f47edb122c3e1c626b68190a91adae921", linkageName: "Path_readUtf8_7d6ab6247b40c168eace692941939f47edb122c3e1c626b68190a91adae921", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!681 = !DILocation(line: 0, scope: !682)
!682 = distinct !DILexicalBlock(scope: !680, file: !2)
!683 = distinct !DISubprogram(name: "Bool_isNotEq_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34", linkageName: "Bool_isNotEq_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!684 = !DILocation(line: 0, scope: !685)
!685 = distinct !DILexicalBlock(scope: !683, file: !2)
!686 = distinct !DISubprogram(name: "List_walkWithIndexHelp_1b6b9e2f2c8025d6941d1d79426973c1ba899598ef8eecc9bea3f5f3657b4477", linkageName: "List_walkWithIndexHelp_1b6b9e2f2c8025d6941d1d79426973c1ba899598ef8eecc9bea3f5f3657b4477", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!687 = !DILocation(line: 0, scope: !688)
!688 = distinct !DILexicalBlock(scope: !686, file: !2)
!689 = distinct !DISubprogram(name: "Five_68_fb88268d1bcc68db321efdaf1d83e34d3ebeddaf65266665b5d581ee1c75c", linkageName: "Five_68_fb88268d1bcc68db321efdaf1d83e34d3ebeddaf65266665b5d581ee1c75c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!690 = !DILocation(line: 0, scope: !691)
!691 = distinct !DILexicalBlock(scope: !689, file: !2)
!692 = distinct !DISubprogram(name: "Five_19_a7df5ce4eebb1c9cfa595893e2cc56c192b318735b2d5a1b414ce045cc55d856", linkageName: "Five_19_a7df5ce4eebb1c9cfa595893e2cc56c192b318735b2d5a1b414ce045cc55d856", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!693 = !DILocation(line: 0, scope: !694)
!694 = distinct !DILexicalBlock(scope: !692, file: !2)
!695 = distinct !DISubprogram(name: "Five_51_f8af0b510694e56e78a5bd9dc944cf1d240b66efd5c484e831b9694e85106f", linkageName: "Five_51_f8af0b510694e56e78a5bd9dc944cf1d240b66efd5c484e831b9694e85106f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!696 = !DILocation(line: 0, scope: !697)
!697 = distinct !DILexicalBlock(scope: !695, file: !2)
!698 = distinct !DISubprogram(name: "List_reserve_1979c8b7ef5f495fcd893830dae286517b20f9eb43379243d33155ade7a91", linkageName: "List_reserve_1979c8b7ef5f495fcd893830dae286517b20f9eb43379243d33155ade7a91", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!699 = !DILocation(line: 0, scope: !700)
!700 = distinct !DILexicalBlock(scope: !698, file: !2)
!701 = !{!702}
!702 = distinct !{!702, !703, !"roc_builtins.list.reserve: argument 0"}
!703 = distinct !{!703, !"roc_builtins.list.reserve"}
!704 = !{!705}
!705 = distinct !{!705, !706, !"list.RocList.reallocate: argument 0"}
!706 = distinct !{!706, !"list.RocList.reallocate"}
!707 = !{!705, !702}
!708 = !{!709, !705, !702}
!709 = distinct !{!709, !710, !"list.RocList.allocate: argument 0"}
!710 = distinct !{!710, !"list.RocList.allocate"}
!711 = !{!712, !714, !705, !702}
!712 = distinct !{!712, !713, !"list.RocList.allocate: argument 0"}
!713 = distinct !{!713, !"list.RocList.allocate"}
!714 = distinct !{!714, !715, !"list.RocList.reallocateFresh: argument 0"}
!715 = distinct !{!715, !"list.RocList.reallocateFresh"}
!716 = !{!714, !705, !702}
!717 = distinct !DISubprogram(name: "Num_isLt_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031", linkageName: "Num_isLt_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!718 = !DILocation(line: 0, scope: !719)
!719 = distinct !DILexicalBlock(scope: !717, file: !2)
!720 = distinct !DISubprogram(name: "Inspect_213_dcb273fb5185f78cd65b7adda9732f8bba62aec766939b09e25f2a158a74543", linkageName: "Inspect_213_dcb273fb5185f78cd65b7adda9732f8bba62aec766939b09e25f2a158a74543", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!721 = !DILocation(line: 0, scope: !722)
!722 = distinct !DILexicalBlock(scope: !720, file: !2)
!723 = distinct !DISubprogram(name: "Parser_52_4cce276f448863cf59555de4812c18dd63ac716c8d68faaa3765a8ad5f4d5a34", linkageName: "Parser_52_4cce276f448863cf59555de4812c18dd63ac716c8d68faaa3765a8ad5f4d5a34", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!724 = !DILocation(line: 0, scope: !725)
!725 = distinct !DILexicalBlock(scope: !723, file: !2)
!726 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_2d69d7fd4e3cdc41145bcb27f8508ce61a7f9bec3eb91af2c8987b4215e4ae4", linkageName: "Parser_buildPrimitiveParser_2d69d7fd4e3cdc41145bcb27f8508ce61a7f9bec3eb91af2c8987b4215e4ae4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!727 = !DILocation(line: 0, scope: !728)
!728 = distinct !DILexicalBlock(scope: !726, file: !2)
!729 = distinct !DISubprogram(name: "Parser_combined_82c94562df431c222d89751799c744c297beafe89403fd288ae1c077a7f1d7", linkageName: "Parser_combined_82c94562df431c222d89751799c744c297beafe89403fd288ae1c077a7f1d7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!730 = !DILocation(line: 0, scope: !731)
!731 = distinct !DILexicalBlock(scope: !729, file: !2)
!732 = distinct !DISubprogram(name: "List_sublistLowlevel_594462766f77f828358545ebdadebc7d564d3daf466672cbde673babcf18c3c2", linkageName: "List_sublistLowlevel_594462766f77f828358545ebdadebc7d564d3daf466672cbde673babcf18c3c2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!733 = !DILocation(line: 0, scope: !734)
!734 = distinct !DILexicalBlock(scope: !732, file: !2)
!735 = !{!736}
!736 = distinct !{!736, !737, !"roc_builtins.list.sublist: argument 0"}
!737 = distinct !{!737, !"roc_builtins.list.sublist"}
!738 = distinct !DISubprogram(name: "Inspect_204_c774391cda5b454c2aba9a3d06bd7dafbe9f198c258b617d66c4f87d5ceed7d", linkageName: "Inspect_204_c774391cda5b454c2aba9a3d06bd7dafbe9f198c258b617d66c4f87d5ceed7d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!739 = !DILocation(line: 0, scope: !740)
!740 = distinct !DILexicalBlock(scope: !738, file: !2)
!741 = distinct !DISubprogram(name: "Inspect_204_f767571aeba669a4bfe91723922777a697d32e65940c336e169c633efb68bb", linkageName: "Inspect_204_f767571aeba669a4bfe91723922777a697d32e65940c336e169c633efb68bb", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!742 = !DILocation(line: 0, scope: !743)
!743 = distinct !DILexicalBlock(scope: !741, file: !2)
!744 = distinct !DISubprogram(name: "List_isEmpty_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181", linkageName: "List_isEmpty_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!745 = !DILocation(line: 0, scope: !746)
!746 = distinct !DILexicalBlock(scope: !744, file: !2)
!747 = distinct !DISubprogram(name: "Parser_parsePartial_bc8c4fbb4471f82ba588d9366a6cc73c095ec9bae4fb1a31564e5462ba6746", linkageName: "Parser_parsePartial_bc8c4fbb4471f82ba588d9366a6cc73c095ec9bae4fb1a31564e5462ba6746", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!748 = !DILocation(line: 0, scope: !749)
!749 = distinct !DILexicalBlock(scope: !747, file: !2)
!750 = distinct !DISubprogram(name: "List_len_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7", linkageName: "List_len_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!751 = !DILocation(line: 0, scope: !752)
!752 = distinct !DILexicalBlock(scope: !750, file: !2)
!753 = distinct !DISubprogram(name: "Str_fromUtf8Lowlevel_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32", linkageName: "Str_fromUtf8Lowlevel_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!754 = !DILocation(line: 0, scope: !755)
!755 = distinct !DILexicalBlock(scope: !753, file: !2)
!756 = distinct !DISubprogram(name: "Dict_emptyBucket_229c75d6969a8a8a593eb2c44e915f34577963371a1cc7e544a8418a694a1e2", linkageName: "Dict_emptyBucket_229c75d6969a8a8a593eb2c44e915f34577963371a1cc7e544a8418a694a1e2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!757 = !DILocation(line: 0, scope: !758)
!758 = distinct !DILexicalBlock(scope: !756, file: !2)
!759 = distinct !DISubprogram(name: "Dict_406_44a259a1c661ce1c71dd8d8d41c4dcf9371428a2eb6ae0adff12f61349c7dc", linkageName: "Dict_406_44a259a1c661ce1c71dd8d8d41c4dcf9371428a2eb6ae0adff12f61349c7dc", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!760 = !DILocation(line: 0, scope: !761)
!761 = distinct !DILexicalBlock(scope: !759, file: !2)
!762 = distinct !DISubprogram(name: "Task_ok_74e539aad6ec9b39b5d11cddb1f5bc7530ae1c63102d2ee576fb29be2b2bf8cf", linkageName: "Task_ok_74e539aad6ec9b39b5d11cddb1f5bc7530ae1c63102d2ee576fb29be2b2bf8cf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!763 = !DILocation(line: 0, scope: !764)
!764 = distinct !DILexicalBlock(scope: !762, file: !2)
!765 = distinct !DISubprogram(name: "List_findFirstIndex_7988d89080438f51df37e0664fee86ae858164dcb95eaeb555d2849513259182", linkageName: "List_findFirstIndex_7988d89080438f51df37e0664fee86ae858164dcb95eaeb555d2849513259182", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!766 = !DILocation(line: 0, scope: !767)
!767 = distinct !DILexicalBlock(scope: !765, file: !2)
!768 = distinct !DISubprogram(name: "Parser_parsePartial_ea9fbd5d6ff2f4de1e2ccda2b8d7e624e862ec6a5191223f8676f8ef2216e31", linkageName: "Parser_parsePartial_ea9fbd5d6ff2f4de1e2ccda2b8d7e624e862ec6a5191223f8676f8ef2216e31", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!769 = !DILocation(line: 0, scope: !770)
!770 = distinct !DILexicalBlock(scope: !768, file: !2)
!771 = distinct !DISubprogram(name: "Dict_createLowLevelHasher_44109459d64fcdac3ea0c7115c1a33caa6de3332a46a1f0819b84a1d3a6c9", linkageName: "Dict_createLowLevelHasher_44109459d64fcdac3ea0c7115c1a33caa6de3332a46a1f0819b84a1d3a6c9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!772 = !DILocation(line: 0, scope: !773)
!773 = distinct !DILexicalBlock(scope: !771, file: !2)
!774 = distinct !DISubprogram(name: "List_keepIf_481f1278f2de6c4b7025bbe3547d9acb112f26631793a1e4c8c76b99b179e0", linkageName: "List_keepIf_481f1278f2de6c4b7025bbe3547d9acb112f26631793a1e4c8c76b99b179e0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!775 = !DILocation(line: 0, scope: !776)
!776 = distinct !DILexicalBlock(scope: !774, file: !2)
!777 = distinct !DISubprogram(name: "Dict_addU64_684393a95528f29ba49a721c9e7bd2dbf82e1a92e5b742ec5b556b18be7657", linkageName: "Dict_addU64_684393a95528f29ba49a721c9e7bd2dbf82e1a92e5b742ec5b556b18be7657", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!778 = !DILocation(line: 0, scope: !779)
!779 = distinct !DILexicalBlock(scope: !777, file: !2)
!780 = distinct !DISubprogram(name: "List_walk_b7aa9f7d377b2692ada596045493ead6d491b934dc9015fcbdd1a8e01477d", linkageName: "List_walk_b7aa9f7d377b2692ada596045493ead6d491b934dc9015fcbdd1a8e01477d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!781 = !DILocation(line: 0, scope: !782)
!782 = distinct !DILexicalBlock(scope: !780, file: !2)
!783 = distinct !DISubprogram(name: "Task_await_5811d8c78876d2654ea5124a7aef4f18d7249acbce87624ecf9abe42c809f", linkageName: "Task_await_5811d8c78876d2654ea5124a7aef4f18d7249acbce87624ecf9abe42c809f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!784 = !DILocation(line: 0, scope: !785)
!785 = distinct !DILexicalBlock(scope: !783, file: !2)
!786 = distinct !DISubprogram(name: "Parser_apply_c5db299579d3ff988e55ff7ffd6f579e265caed4e0f96283b96ac6f8293293e", linkageName: "Parser_apply_c5db299579d3ff988e55ff7ffd6f579e265caed4e0f96283b96ac6f8293293e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!787 = !DILocation(line: 0, scope: !788)
!788 = distinct !DILexicalBlock(scope: !786, file: !2)
!789 = distinct !DISubprogram(name: "_89_b36e71bec3e8f440a488a235b9ca4a36d87cd2aeccf23eb4a588a2afa227d1", linkageName: "_89_b36e71bec3e8f440a488a235b9ca4a36d87cd2aeccf23eb4a588a2afa227d1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!790 = !DILocation(line: 0, scope: !791)
!791 = distinct !DILexicalBlock(scope: !789, file: !2)
!792 = distinct !DISubprogram(name: "Parser_manyImpl_c3c6c854fc0febf57cc2ebf8e35d07fdbe449e8d69722afe47df74bd87d571", linkageName: "Parser_manyImpl_c3c6c854fc0febf57cc2ebf8e35d07fdbe449e8d69722afe47df74bd87d571", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!793 = !DILocation(line: 0, scope: !794)
!794 = distinct !DILexicalBlock(scope: !792, file: !2)
!795 = distinct !DISubprogram(name: "Inspect_apply_e224e0133f78589cea6db23e453acfbc569bda9b797a294835a2e3ce7b79f9b9", linkageName: "Inspect_apply_e224e0133f78589cea6db23e453acfbc569bda9b797a294835a2e3ce7b79f9b9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!796 = !DILocation(line: 0, scope: !797)
!797 = distinct !DILexicalBlock(scope: !795, file: !2)
!798 = distinct !DISubprogram(name: "List_walker_a4f1bd72ba9ffa9bc6b14a41321324cb50df1636d7bfebf57c16d684c9fbc2", linkageName: "List_walker_a4f1bd72ba9ffa9bc6b14a41321324cb50df1636d7bfebf57c16d684c9fbc2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!799 = !DILocation(line: 0, scope: !800)
!800 = distinct !DILexicalBlock(scope: !798, file: !2)
!801 = distinct !DISubprogram(name: "Result_try_d9e2d7d318b97522751e8d862a897cd552d26040fa25d41678f9ac7b36cd7", linkageName: "Result_try_d9e2d7d318b97522751e8d862a897cd552d26040fa25d41678f9ac7b36cd7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!802 = !DILocation(line: 0, scope: !803)
!803 = distinct !DILexicalBlock(scope: !801, file: !2)
!804 = distinct !DISubprogram(name: "Result_try_3780de15a3a832596a21b52356ca78cefe1f05b661333fe4053d5b87a27e0", linkageName: "Result_try_3780de15a3a832596a21b52356ca78cefe1f05b661333fe4053d5b87a27e0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!805 = !DILocation(line: 0, scope: !806)
!806 = distinct !DILexicalBlock(scope: !804, file: !2)
!807 = distinct !DISubprogram(name: "List_append_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9", linkageName: "List_append_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!808 = !DILocation(line: 0, scope: !809)
!809 = distinct !DILexicalBlock(scope: !807, file: !2)
!810 = distinct !DISubprogram(name: "Str_fromUtf8_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2", linkageName: "Str_fromUtf8_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!811 = !DILocation(line: 0, scope: !812)
!812 = distinct !DILexicalBlock(scope: !810, file: !2)
!813 = distinct !DISubprogram(name: "Parser_skip_bb5dc84692b48301ecfaa93785bf72d4debdd1ab8d563ad3ea5d723e989288b", linkageName: "Parser_skip_bb5dc84692b48301ecfaa93785bf72d4debdd1ab8d563ad3ea5d723e989288b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!814 = !DILocation(line: 0, scope: !815)
!815 = distinct !DILexicalBlock(scope: !813, file: !2)
!816 = distinct !DISubprogram(name: "Parser_manyImpl_945e5a76091d624c441899cd3a90b894cb4cd17889bc19575617f1f8d43bf", linkageName: "Parser_manyImpl_945e5a76091d624c441899cd3a90b894cb4cd17889bc19575617f1f8d43bf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!817 = !DILocation(line: 0, scope: !818)
!818 = distinct !DILexicalBlock(scope: !816, file: !2)
!819 = distinct !DISubprogram(name: "Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e", linkageName: "Str_countUtf8Bytes_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!820 = !DILocation(line: 0, scope: !821)
!821 = distinct !DILexicalBlock(scope: !819, file: !2)
!822 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_cfd41a13b9e1de3dfbfaadc1fc5e7473458f62fb6c011bf5f7b89cb42a6fae5", linkageName: "Parser_buildPrimitiveParser_cfd41a13b9e1de3dfbfaadc1fc5e7473458f62fb6c011bf5f7b89cb42a6fae5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!823 = !DILocation(line: 0, scope: !824)
!824 = distinct !DILexicalBlock(scope: !822, file: !2)
!825 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_a4a749317cf1faba11ffe043ffbc79292ac223379bd79cf21ddae8d83a3a", linkageName: "Parser_buildPrimitiveParser_a4a749317cf1faba11ffe043ffbc79292ac223379bd79cf21ddae8d83a3a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!826 = !DILocation(line: 0, scope: !827)
!827 = distinct !DILexicalBlock(scope: !825, file: !2)
!828 = distinct !DISubprogram(name: "Result_map_c3db9144e9e8a2aeb45a4287ca39a6b36f034de3f4c779c625aa44629cf92b4", linkageName: "Result_map_c3db9144e9e8a2aeb45a4287ca39a6b36f034de3f4c779c625aa44629cf92b4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!829 = !DILocation(line: 0, scope: !830)
!830 = distinct !DILexicalBlock(scope: !828, file: !2)
!831 = distinct !DISubprogram(name: "Dict_find_9bb8deca757dc2ac2fb673c9939099338c6d1fb2aae6cee85b52f30d7d2b2d8", linkageName: "Dict_find_9bb8deca757dc2ac2fb673c9939099338c6d1fb2aae6cee85b52f30d7d2b2d8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!832 = !DILocation(line: 0, scope: !833)
!833 = distinct !DILexicalBlock(scope: !831, file: !2)
!834 = distinct !DISubprogram(name: "List_iterHelp_405afdd54e1519581be52a8c8268ff856d1e183e22d746e36b8e1e892557df7", linkageName: "List_iterHelp_405afdd54e1519581be52a8c8268ff856d1e183e22d746e36b8e1e892557df7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!835 = !DILocation(line: 0, scope: !836)
!836 = distinct !DILexicalBlock(scope: !834, file: !2)
!837 = distinct !DISubprogram(name: "List_replaceUnsafe_1bb73f6fafaa3656a8bf5796e2e6e6bdbd058375237d0b9be5834c8c9f54", linkageName: "List_replaceUnsafe_1bb73f6fafaa3656a8bf5796e2e6e6bdbd058375237d0b9be5834c8c9f54", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!838 = !DILocation(line: 0, scope: !839)
!839 = distinct !DILexicalBlock(scope: !837, file: !2)
!840 = !{!841}
!841 = distinct !{!841, !842, !"roc_builtins.list.replace: argument 0"}
!842 = distinct !{!842, !"roc_builtins.list.replace"}
!843 = !{!844}
!844 = distinct !{!844, !845, !"list.RocList.makeUnique: argument 0"}
!845 = distinct !{!845, !"list.RocList.makeUnique"}
!846 = !{!844, !841}
!847 = !{!848, !844, !841}
!848 = distinct !{!848, !849, !"list.RocList.allocate: argument 0"}
!849 = distinct !{!849, !"list.RocList.allocate"}
!850 = !DILocation(line: 0, scope: !851, inlinedAt: !853)
!851 = distinct !DILexicalBlock(scope: !852, file: !2)
!852 = distinct !DISubprogram(name: "#Attr_#generic_copy_by_ref_2", linkageName: "#Attr_#generic_copy_by_ref_2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!853 = distinct !DILocation(line: 0, scope: !839)
!854 = !DILocation(line: 0, scope: !851, inlinedAt: !855)
!855 = distinct !DILocation(line: 0, scope: !839)
!856 = distinct !DISubprogram(name: "List_map_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894", linkageName: "List_map_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!857 = !DILocation(line: 0, scope: !858)
!858 = distinct !DILexicalBlock(scope: !856, file: !2)
!859 = distinct !DISubprogram(name: "Dict_nextWhileLessHelper_8cf693340558d3441d6232b3632a0e7d41f8065e5f4ec1b10ba263a7452d728", linkageName: "Dict_nextWhileLessHelper_8cf693340558d3441d6232b3632a0e7d41f8065e5f4ec1b10ba263a7452d728", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!860 = !DILocation(line: 0, scope: !861)
!861 = distinct !DILexicalBlock(scope: !859, file: !2)
!862 = distinct !DISubprogram(name: "List_withCapacity_131fc9d292b7c25af42a6c6deb3979c2144f1a7423d39eb46aef237b8f774b", linkageName: "List_withCapacity_131fc9d292b7c25af42a6c6deb3979c2144f1a7423d39eb46aef237b8f774b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!863 = !{!864}
!864 = distinct !{!864, !865, !"roc_builtins.list.with_capacity: argument 0"}
!865 = distinct !{!865, !"roc_builtins.list.with_capacity"}
!866 = !DILocation(line: 0, scope: !867)
!867 = distinct !DILexicalBlock(scope: !862, file: !2)
!868 = !{!869}
!869 = distinct !{!869, !870, !"list.RocList.reallocate: argument 0"}
!870 = distinct !{!870, !"list.RocList.reallocate"}
!871 = !{!869, !872, !864}
!872 = distinct !{!872, !873, !"roc_builtins.list.reserve: argument 0"}
!873 = distinct !{!873, !"roc_builtins.list.reserve"}
!874 = !{!875, !869, !872, !864}
!875 = distinct !{!875, !876, !"list.RocList.allocate: argument 0"}
!876 = distinct !{!876, !"list.RocList.allocate"}
!877 = !{!872, !864}
!878 = !{!879, !881, !869, !872, !864}
!879 = distinct !{!879, !880, !"list.RocList.allocate: argument 0"}
!880 = distinct !{!880, !"list.RocList.allocate"}
!881 = distinct !{!881, !882, !"list.RocList.reallocateFresh: argument 0"}
!882 = distinct !{!882, !"list.RocList.reallocateFresh"}
!883 = !{!881, !869, !872, !864}
!884 = !DILocation(line: 0, scope: !885, inlinedAt: !887)
!885 = distinct !DILexicalBlock(scope: !886, file: !2)
!886 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_3_inc", linkageName: "#Attr_#generic_rc_by_ref_3_inc", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!887 = distinct !DILocation(line: 0, scope: !867)
!888 = distinct !DISubprogram(name: "Inspect_210_22d059c38186d5cb98646d1e317ec5398bde0f1c120a343e26fd56512b47ba5", linkageName: "Inspect_210_22d059c38186d5cb98646d1e317ec5398bde0f1c120a343e26fd56512b47ba5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!889 = !DILocation(line: 0, scope: !890)
!890 = distinct !DILexicalBlock(scope: !888, file: !2)
!891 = distinct !DISubprogram(name: "Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec", linkageName: "Dict_listGetUnsafe_bc8306c1040a95f2dac252e82b64a88f9bbe8f51d564ae0c05ee47ab4dc64ec", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!892 = !DILocation(line: 0, scope: !893)
!893 = distinct !DILexicalBlock(scope: !891, file: !2)
!894 = distinct !DISubprogram(name: "String_parseStr_f266767836e348a7bd51d0397eeb6f3f7b5286423dc3a4dc81961244fff1", linkageName: "String_parseStr_f266767836e348a7bd51d0397eeb6f3f7b5286423dc3a4dc81961244fff1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!895 = !DILocation(line: 0, scope: !896)
!896 = distinct !DILexicalBlock(scope: !894, file: !2)
!897 = distinct !DISubprogram(name: "List_iterate_21b5c7d5305aa5ff4df495f05c9e59c37d76367eacec9dd321a0e78143dfc4a3", linkageName: "List_iterate_21b5c7d5305aa5ff4df495f05c9e59c37d76367eacec9dd321a0e78143dfc4a3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!898 = !DILocation(line: 0, scope: !899)
!899 = distinct !DILexicalBlock(scope: !897, file: !2)
!900 = distinct !DISubprogram(name: "PlatformTasks_task_closure_stdoutLine_7235554a6ca1ba5277e58026ca9a925c605ca3b7e9655e55441a77bd6b3fbf", linkageName: "PlatformTasks_task_closure_stdoutLine_7235554a6ca1ba5277e58026ca9a925c605ca3b7e9655e55441a77bd6b3fbf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!901 = !DILocation(line: 0, scope: !902)
!902 = distinct !DILexicalBlock(scope: !900, file: !2)
!903 = distinct !DISubprogram(name: "List_getUnsafe_42f43e247a90ff93dac3c860bb219ee18693539a6e942bad35bcb7297d6e16", linkageName: "List_getUnsafe_42f43e247a90ff93dac3c860bb219ee18693539a6e942bad35bcb7297d6e16", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!904 = !DILocation(line: 0, scope: !905)
!905 = distinct !DILexicalBlock(scope: !903, file: !2)
!906 = distinct !DISubprogram(name: "List_any_7f39af79a2c681124253a11db0202f701d4c3013db3c1272927c55405b9031", linkageName: "List_any_7f39af79a2c681124253a11db0202f701d4c3013db3c1272927c55405b9031", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!907 = !DILocation(line: 0, scope: !908)
!908 = distinct !DILexicalBlock(scope: !906, file: !2)
!909 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_dff42d2171b1fc085e9563c701a7ea21ae09129e8d47f3804e7a53b5323f", linkageName: "Parser_buildPrimitiveParser_dff42d2171b1fc085e9563c701a7ea21ae09129e8d47f3804e7a53b5323f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!910 = !DILocation(line: 0, scope: !911)
!911 = distinct !DILexicalBlock(scope: !909, file: !2)
!912 = distinct !DISubprogram(name: "Parser_parsePartial_3590754411a17cd0c570f24ca5606122af7e3eddb51d1a982a156e9521f4577", linkageName: "Parser_parsePartial_3590754411a17cd0c570f24ca5606122af7e3eddb51d1a982a156e9521f4577", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!913 = !DILocation(line: 0, scope: !914)
!914 = distinct !DILexicalBlock(scope: !912, file: !2)
!915 = distinct !DISubprogram(name: "Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081", linkageName: "Bool_structuralEq_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!916 = !DILocation(line: 0, scope: !917)
!917 = distinct !DILexicalBlock(scope: !915, file: !2)
!918 = distinct !DISubprogram(name: "Inspect_213_e55e154fb3c0423726cb71a0afdbc369aa2a0593b155c1e187f99dad748", linkageName: "Inspect_213_e55e154fb3c0423726cb71a0afdbc369aa2a0593b155c1e187f99dad748", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!919 = !DILocation(line: 0, scope: !920)
!920 = distinct !DILexicalBlock(scope: !918, file: !2)
!921 = distinct !DISubprogram(name: "Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5", linkageName: "Inspect_dbgTag_01d7be6c27fe762beb455571cf4a172ee022478e14ffa23fe6b09a57c2dae5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!922 = !DILocation(line: 0, scope: !923)
!923 = distinct !DILexicalBlock(scope: !921, file: !2)
!924 = distinct !DISubprogram(name: "Dict_nextWhileLess_622c9f939ebee86f480d73fdef56611b8899ab7e93ac9da07aeba3373394a", linkageName: "Dict_nextWhileLess_622c9f939ebee86f480d73fdef56611b8899ab7e93ac9da07aeba3373394a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!925 = !DILocation(line: 0, scope: !926)
!926 = distinct !DILexicalBlock(scope: !924, file: !2)
!927 = distinct !DISubprogram(name: "Str_getUnsafe_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1", linkageName: "Str_getUnsafe_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!928 = !DILocation(line: 0, scope: !929)
!929 = distinct !DILexicalBlock(scope: !927, file: !2)
!930 = distinct !DISubprogram(name: "Num_isGte_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63", linkageName: "Num_isGte_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!931 = !DILocation(line: 0, scope: !932)
!932 = distinct !DILexicalBlock(scope: !930, file: !2)
!933 = distinct !DISubprogram(name: "Inspect_dbgInit_14a58b912b778d42457329574d6284a94c25ccd4d26148cd2e979b6a93d4ec9", linkageName: "Inspect_dbgInit_14a58b912b778d42457329574d6284a94c25ccd4d26148cd2e979b6a93d4ec9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!934 = !DILocation(line: 0, scope: !935)
!935 = distinct !DILexicalBlock(scope: !933, file: !2)
!936 = distinct !DISubprogram(name: "Bool_not_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3", linkageName: "Bool_not_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!937 = !DILocation(line: 0, scope: !938)
!938 = distinct !DILexicalBlock(scope: !936, file: !2)
!939 = distinct !DISubprogram(name: "List_sublist_55aa18fc3c82fe108fcf64fea07364ddba1e8c526b8d27b19692a7748519e1c", linkageName: "List_sublist_55aa18fc3c82fe108fcf64fea07364ddba1e8c526b8d27b19692a7748519e1c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!940 = !DILocation(line: 0, scope: !941)
!941 = distinct !DILexicalBlock(scope: !939, file: !2)
!942 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_6f672ef3f2eac86f2b3fa6aa9eb2b9186335f9791fec7495d3558c46b2dce", linkageName: "Parser_buildPrimitiveParser_6f672ef3f2eac86f2b3fa6aa9eb2b9186335f9791fec7495d3558c46b2dce", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!943 = !DILocation(line: 0, scope: !944)
!944 = distinct !DILexicalBlock(scope: !942, file: !2)
!945 = distinct !DISubprogram(name: "Five_56_e08944a08de1317a589af2c16d7f4332d47e2a35e653e802fab1d0d46a31f5", linkageName: "Five_56_e08944a08de1317a589af2c16d7f4332d47e2a35e653e802fab1d0d46a31f5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!946 = !DILocation(line: 0, scope: !947)
!947 = distinct !DILexicalBlock(scope: !945, file: !2)
!948 = distinct !DISubprogram(name: "String_44_26d17240b95ed431e64caf285536baf5e96b5875cbd172e5d417c1ae92a275", linkageName: "String_44_26d17240b95ed431e64caf285536baf5e96b5875cbd172e5d417c1ae92a275", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!949 = !DILocation(line: 0, scope: !950)
!950 = distinct !DILexicalBlock(scope: !948, file: !2)
!951 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_669ffb146edc1a83983bf84461cb12a7beb79c3bdd627d16a2afb10ae7410", linkageName: "Parser_buildPrimitiveParser_669ffb146edc1a83983bf84461cb12a7beb79c3bdd627d16a2afb10ae7410", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!952 = !DILocation(line: 0, scope: !953)
!953 = distinct !DILexicalBlock(scope: !951, file: !2)
!954 = distinct !DISubprogram(name: "Parser_82_9e244d6892b46ff752addc4350601bba9618a34f4929cc9daa8a3c0abac2c", linkageName: "Parser_82_9e244d6892b46ff752addc4350601bba9618a34f4929cc9daa8a3c0abac2c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!955 = !DILocation(line: 0, scope: !956)
!956 = distinct !DILexicalBlock(scope: !954, file: !2)
!957 = distinct !DISubprogram(name: "Parser_82_9ebff67372e75a135a7dfe8147a63ffdbbe59a6628109c2ab0d254c0a48b94", linkageName: "Parser_82_9ebff67372e75a135a7dfe8147a63ffdbbe59a6628109c2ab0d254c0a48b94", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!958 = !DILocation(line: 0, scope: !959)
!959 = distinct !DILexicalBlock(scope: !957, file: !2)
!960 = distinct !DISubprogram(name: "Num_bitwiseOr_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133", linkageName: "Num_bitwiseOr_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!961 = !DILocation(line: 0, scope: !962)
!962 = distinct !DILexicalBlock(scope: !960, file: !2)
!963 = distinct !DISubprogram(name: "PlatformTasks_task_closure_fileReadBytes_cb649ec1a6b194d7045c81b285060bfd3e5172d78e4f6bdab3db7dc92110", linkageName: "PlatformTasks_task_closure_fileReadBytes_cb649ec1a6b194d7045c81b285060bfd3e5172d78e4f6bdab3db7dc92110", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!964 = !DILocation(line: 0, scope: !965)
!965 = distinct !DILexicalBlock(scope: !963, file: !2)
!966 = distinct !DISubprogram(name: "InternalFile_handleReadErr_534e747f8ed667439b7c2bba127be91eb34da68c6374c1c2a62178b3324fb55", linkageName: "InternalFile_handleReadErr_534e747f8ed667439b7c2bba127be91eb34da68c6374c1c2a62178b3324fb55", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!967 = !DILocation(line: 0, scope: !968)
!968 = distinct !DILexicalBlock(scope: !966, file: !2)
!969 = distinct !DISubprogram(name: "InternalPath_wrap_8262eb8f2fda1d3e94add0fe7ca5b36fa0ff90c97589de5669fc657af690ed", linkageName: "InternalPath_wrap_8262eb8f2fda1d3e94add0fe7ca5b36fa0ff90c97589de5669fc657af690ed", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!970 = !DILocation(line: 0, scope: !971)
!971 = distinct !DILexicalBlock(scope: !969, file: !2)
!972 = distinct !DISubprogram(name: "Parser_parsePartial_551311f4cd4b771fb26caae5c14c6c179adea28ad16fbb2d47e334e0dd18b", linkageName: "Parser_parsePartial_551311f4cd4b771fb26caae5c14c6c179adea28ad16fbb2d47e334e0dd18b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!973 = !DILocation(line: 0, scope: !974)
!974 = distinct !DILexicalBlock(scope: !972, file: !2)
!975 = distinct !DISubprogram(name: "Num_bitwiseOr_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b", linkageName: "Num_bitwiseOr_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!976 = !DILocation(line: 0, scope: !977)
!977 = distinct !DILexicalBlock(scope: !975, file: !2)
!978 = distinct !DISubprogram(name: "Dict_scanForIndex_dbbb614026929029a924a622e5a645206e5e1277bd8c25cb7b78527df1a8c", linkageName: "Dict_scanForIndex_dbbb614026929029a924a622e5a645206e5e1277bd8c25cb7b78527df1a8c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!979 = !DILocation(line: 0, scope: !980)
!980 = distinct !DILexicalBlock(scope: !978, file: !2)
!981 = distinct !DISubprogram(name: "Parser_parsePartial_1832725737c877b4e64b260205e689985bae38cc7369bbb84cf4d425217", linkageName: "Parser_parsePartial_1832725737c877b4e64b260205e689985bae38cc7369bbb84cf4d425217", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!982 = !DILocation(line: 0, scope: !983)
!983 = distinct !DILexicalBlock(scope: !981, file: !2)
!984 = distinct !DISubprogram(name: "Result_mapErr_f2eb2e65858ef9a081c444e7b9b2cef1ed51b5a1e38027833034b9f057aa3131", linkageName: "Result_mapErr_f2eb2e65858ef9a081c444e7b9b2cef1ed51b5a1e38027833034b9f057aa3131", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!985 = !DILocation(line: 0, scope: !986)
!986 = distinct !DILexicalBlock(scope: !984, file: !2)
!987 = distinct !DISubprogram(name: "Inspect_250_157bd1cfbdd899eaf8ca5ae4444e5a394fecb36bc61dda74dd795d3df0ac853f", linkageName: "Inspect_250_157bd1cfbdd899eaf8ca5ae4444e5a394fecb36bc61dda74dd795d3df0ac853f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!988 = !DILocation(line: 0, scope: !989)
!989 = distinct !DILexicalBlock(scope: !987, file: !2)
!990 = distinct !DISubprogram(name: "Five_checkUpdate_7eba3577d569e9be393ebf468d8c576e6850d52df0fe8bf3dca1c1a43aa9b9", linkageName: "Five_checkUpdate_7eba3577d569e9be393ebf468d8c576e6850d52df0fe8bf3dca1c1a43aa9b9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!991 = !DILocation(line: 0, scope: !992)
!992 = distinct !DILexicalBlock(scope: !990, file: !2)
!993 = distinct !DISubprogram(name: "Dict_defaultMaxLoadFactor_3c34ade886ecb9c29fd02363474d39cd94178ea81fd90fb2871dcdcb2a3aad", linkageName: "Dict_defaultMaxLoadFactor_3c34ade886ecb9c29fd02363474d39cd94178ea81fd90fb2871dcdcb2a3aad", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!994 = !DILocation(line: 0, scope: !995)
!995 = distinct !DILexicalBlock(scope: !993, file: !2)
!996 = distinct !DISubprogram(name: "Parser_const_91a1934a75e3d136dfb5a572ece2bc79a479adc3e4cf2fc66855180818a63", linkageName: "Parser_const_91a1934a75e3d136dfb5a572ece2bc79a479adc3e4cf2fc66855180818a63", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!997 = !DILocation(line: 0, scope: !998)
!998 = distinct !DILexicalBlock(scope: !996, file: !2)
!999 = distinct !DISubprogram(name: "Num_bitwiseAnd_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098", linkageName: "Num_bitwiseAnd_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1000 = !DILocation(line: 0, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !999, file: !2)
!1002 = distinct !DISubprogram(name: "Parser_many_29e45a3e94cb49faa0f523d42d14ca41e96e28836031b687849d13e5d59b", linkageName: "Parser_many_29e45a3e94cb49faa0f523d42d14ca41e96e28836031b687849d13e5d59b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1003 = !DILocation(line: 0, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !1002, file: !2)
!1005 = distinct !DISubprogram(name: "Five_16_f497d0762dffbea4d1bbd57f0dda06887ccfab58e6563ae6e7cbca963711e9c", linkageName: "Five_16_f497d0762dffbea4d1bbd57f0dda06887ccfab58e6563ae6e7cbca963711e9c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1006 = !DILocation(line: 0, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !1005, file: !2)
!1008 = distinct !DISubprogram(name: "Str_matchesAtHelp_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061", linkageName: "Str_matchesAtHelp_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1009 = !DILocation(line: 0, scope: !1010)
!1010 = distinct !DILexicalBlock(scope: !1008, file: !2)
!1011 = distinct !DISubprogram(name: "List_len_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4", linkageName: "List_len_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1012 = !DILocation(line: 0, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !1011, file: !2)
!1014 = distinct !DISubprogram(name: "List_walkHelp_8719a5fa4a4d2d7fe17773695c6c6d3ecd8b7cfffd135c8d4ca89f29f876d1f", linkageName: "List_walkHelp_8719a5fa4a4d2d7fe17773695c6c6d3ecd8b7cfffd135c8d4ca89f29f876d1f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1015 = !DILocation(line: 0, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !1014, file: !2)
!1017 = distinct !DISubprogram(name: "Task_fromResult_868bb1275a5c595ca8461c95365254c643bddedbb5663df25366d7589be778", linkageName: "Task_fromResult_868bb1275a5c595ca8461c95365254c643bddedbb5663df25366d7589be778", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1018 = !DILocation(line: 0, scope: !1019)
!1019 = distinct !DILexicalBlock(scope: !1017, file: !2)
!1020 = distinct !DISubprogram(name: "List_169_1cd410b47325ca54fd4d13db9f372fff17944e80d3dc60ceb6fa212947a", linkageName: "List_169_1cd410b47325ca54fd4d13db9f372fff17944e80d3dc60ceb6fa212947a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1021 = !DILocation(line: 0, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !1020, file: !2)
!1023 = distinct !DISubprogram(name: "Result_try_1841486258dadc6565ddb7a1717e1e68e57abb67c121aeb72cb4d456026a9", linkageName: "Result_try_1841486258dadc6565ddb7a1717e1e68e57abb67c121aeb72cb4d456026a9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1024 = !DILocation(line: 0, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1023, file: !2)
!1026 = distinct !DISubprogram(name: "Parser_138_537cd3f54288d2bcb311fb535ea90133e4e5695168c82ab6bd91c34dce467ee", linkageName: "Parser_138_537cd3f54288d2bcb311fb535ea90133e4e5695168c82ab6bd91c34dce467ee", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1027 = !DILocation(line: 0, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !1026, file: !2)
!1029 = distinct !DISubprogram(name: "#Derived_toInspector_[Interrupted 0,NotFound 0,Other 1,OutOfMemory 0,PermissionDenied 0,TimedOut 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b", linkageName: "#Derived_toInspector_[Interrupted 0,NotFound 0,Other 1,OutOfMemory 0,PermissionDenied 0,TimedOut 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1030 = !DILocation(line: 0, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1029, file: !2)
!1032 = distinct !DISubprogram(name: "Dict_213_25b74f83c7a58495f41328cfd440d34145e99ab792ad183fa37b6350e07cbeaf", linkageName: "Dict_213_25b74f83c7a58495f41328cfd440d34145e99ab792ad183fa37b6350e07cbeaf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1033 = !DILocation(line: 0, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1032, file: !2)
!1035 = distinct !DISubprogram(name: "Bool_false_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671", linkageName: "Bool_false_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1036 = !DILocation(line: 0, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1035, file: !2)
!1038 = distinct !DISubprogram(name: "Inspect_210_e93bf924107d8e1718c9a20bb89a13fa86198933bf2155d2785223e43180", linkageName: "Inspect_210_e93bf924107d8e1718c9a20bb89a13fa86198933bf2155d2785223e43180", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1039 = !DILocation(line: 0, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1038, file: !2)
!1041 = distinct !DISubprogram(name: "Num_mul_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b", linkageName: "Num_mul_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1042 = !DILocation(line: 0, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !1041, file: !2)
!1044 = distinct !DISubprogram(name: "Inspect_208_c846cca2d7624ab0e322f5c02791833a36ae302c1d525dc8e88abea81952ea4", linkageName: "Inspect_208_c846cca2d7624ab0e322f5c02791833a36ae302c1d525dc8e88abea81952ea4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1045 = !DILocation(line: 0, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1044, file: !2)
!1047 = distinct !DISubprogram(name: "Parser_parsePartial_b54b77c860741659e5266e2d61860fd36498ad112baf9dfab455e3fe3a84d", linkageName: "Parser_parsePartial_b54b77c860741659e5266e2d61860fd36498ad112baf9dfab455e3fe3a84d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1048 = !DILocation(line: 0, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1047, file: !2)
!1050 = distinct !DISubprogram(name: "List_getUnsafe_172247c57cf29182b738e1647bff697cbe655ff06cf0aee2ca31b6b397327385", linkageName: "List_getUnsafe_172247c57cf29182b738e1647bff697cbe655ff06cf0aee2ca31b6b397327385", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1051 = !DILocation(line: 0, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1050, file: !2)
!1053 = distinct !DISubprogram(name: "Task_fromResult_1f5387d07f264470833b19a1c82f5d84310c7fa8ea615dd78f14115492d268", linkageName: "Task_fromResult_1f5387d07f264470833b19a1c82f5d84310c7fa8ea615dd78f14115492d268", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1054 = !DILocation(line: 0, scope: !1055)
!1055 = distinct !DILexicalBlock(scope: !1053, file: !2)
!1056 = distinct !DISubprogram(name: "Task_46_3ecfee88222f69a72a6908d3fd6c08b72fa6d1fbfec3512e9af22d6637fde", linkageName: "Task_46_3ecfee88222f69a72a6908d3fd6c08b72fa6d1fbfec3512e9af22d6637fde", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1057 = !DILocation(line: 0, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !1056, file: !2)
!1059 = distinct !DISubprogram(name: "Parser_keep_b2df5633da1ff7f59f2aecac265c8d6773abdbcadcf4a15d34ae9a45fd771125", linkageName: "Parser_keep_b2df5633da1ff7f59f2aecac265c8d6773abdbcadcf4a15d34ae9a45fd771125", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1060 = !DILocation(line: 0, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1059, file: !2)
!1062 = distinct !DISubprogram(name: "Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e", linkageName: "Bool_structuralEq_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1063 = !DILocation(line: 0, scope: !1064)
!1064 = distinct !DILexicalBlock(scope: !1062, file: !2)
!1065 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_d5647456e607ff6cf08729c7b3b8975d79d2a5c98181aa9d451a45bd6a8da", linkageName: "Parser_buildPrimitiveParser_d5647456e607ff6cf08729c7b3b8975d79d2a5c98181aa9d451a45bd6a8da", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1066 = !DILocation(line: 0, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !1065, file: !2)
!1068 = distinct !DISubprogram(name: "Inspect_206_505ee8ebb90affa4bd2deabd9435fb89b29e5cff14c44acccc1c3ac721361", linkageName: "Inspect_206_505ee8ebb90affa4bd2deabd9435fb89b29e5cff14c44acccc1c3ac721361", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1069 = !DILocation(line: 0, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1068, file: !2)
!1071 = distinct !DISubprogram(name: "_3_67f5fd6e89d2bff324c0d4f26998729c6826aeb676619137bf1c3dcaad1bed3", linkageName: "_3_67f5fd6e89d2bff324c0d4f26998729c6826aeb676619137bf1c3dcaad1bed3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1072 = !DILocation(line: 0, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1071, file: !2)
!1074 = distinct !DISubprogram(name: "Dict_get_deda9c07093181a3aee6f4559463a94ce2b31f038cb3d5548d0bb2aeba37e1", linkageName: "Dict_get_deda9c07093181a3aee6f4559463a94ce2b31f038cb3d5548d0bb2aeba37e1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1075 = !DILocation(line: 0, scope: !1076)
!1076 = distinct !DILexicalBlock(scope: !1074, file: !2)
!1077 = distinct !DISubprogram(name: "List_sublistLowlevel_d5c9642a64db206d88ab43bd2b9527b05aca746579abd7472d977da8e33ac", linkageName: "List_sublistLowlevel_d5c9642a64db206d88ab43bd2b9527b05aca746579abd7472d977da8e33ac", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1078 = !DILocation(line: 0, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1077, file: !2)
!1080 = !{!1081}
!1081 = distinct !{!1081, !1082, !"roc_builtins.list.sublist: argument 0"}
!1082 = distinct !{!1082, !"roc_builtins.list.sublist"}
!1083 = !DILocation(line: 0, scope: !1084, inlinedAt: !1086)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !2)
!1085 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_5_dec", linkageName: "#Attr_#generic_rc_by_ref_5_dec", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1086 = distinct !DILocation(line: 0, scope: !1079)
!1087 = !DILocation(line: 0, scope: !1084, inlinedAt: !1088)
!1088 = distinct !DILocation(line: 0, scope: !1079)
!1089 = distinct !DISubprogram(name: "File_readUtf8_3f94bd83b418c69c7325a332ebd9e6da9f2c825d171f6534e1abd1b299755", linkageName: "File_readUtf8_3f94bd83b418c69c7325a332ebd9e6da9f2c825d171f6534e1abd1b299755", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1090 = !DILocation(line: 0, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1089, file: !2)
!1092 = distinct !DISubprogram(name: "Parser_oneOrMore_5ca234e842be91ca6ef02d32dee0b437d32a6589a2ee9ddf1e882abd5d30", linkageName: "Parser_oneOrMore_5ca234e842be91ca6ef02d32dee0b437d32a6589a2ee9ddf1e882abd5d30", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1093 = !DILocation(line: 0, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1092, file: !2)
!1095 = distinct !DISubprogram(name: "PlatformTasks_fileReadBytes_cd1c55e7b5398038f31ecfb0f47f579e5ab8039b49d1583d05f52b58fff1491", linkageName: "PlatformTasks_fileReadBytes_cd1c55e7b5398038f31ecfb0f47f579e5ab8039b49d1583d05f52b58fff1491", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1096 = !DILocation(line: 0, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1095, file: !2)
!1098 = distinct !DISubprogram(name: "List_splitAt_7544714fcb8fdf9ddf55315cce78cf57de5a2d6621b01a7739ff24d9f60ac", linkageName: "List_splitAt_7544714fcb8fdf9ddf55315cce78cf57de5a2d6621b01a7739ff24d9f60ac", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1099 = !DILocation(line: 0, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1098, file: !2)
!1101 = distinct !DISubprogram(name: "#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d", linkageName: "#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1102 = !DILocation(line: 0, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1101, file: !2)
!1104 = distinct !DISubprogram(name: "Parser_parsePartial_8dff47a94badcb41e78dc31bfd22f3aa67ca62fc986df31893e8e85699c835f7", linkageName: "Parser_parsePartial_8dff47a94badcb41e78dc31bfd22f3aa67ca62fc986df31893e8e85699c835f7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1105 = !DILocation(line: 0, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1104, file: !2)
!1107 = distinct !DISubprogram(name: "Parser_parsePartial_7caba61bebab67ae1a3d5e6f4932f5086371aaa834774ba7fe45103dc45036", linkageName: "Parser_parsePartial_7caba61bebab67ae1a3d5e6f4932f5086371aaa834774ba7fe45103dc45036", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1108 = !DILocation(line: 0, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1107, file: !2)
!1110 = distinct !DISubprogram(name: "Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3", linkageName: "Num_bitwiseXor_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1111 = !DILocation(line: 0, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1110, file: !2)
!1113 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_df22f5cdce5189b46d93c2ffbbc44a1ef23ee85518e8bbd1038d0adb9c1a782", linkageName: "Parser_buildPrimitiveParser_df22f5cdce5189b46d93c2ffbbc44a1ef23ee85518e8bbd1038d0adb9c1a782", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1114 = !DILocation(line: 0, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1113, file: !2)
!1116 = distinct !DISubprogram(name: "List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92", linkageName: "List_getUnsafe_c773168b5a79ac91672eeb52ab4405228b6e1da8f6c62d3ec2af603fa2ad92", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1117 = !DILocation(line: 0, scope: !1118)
!1118 = distinct !DILexicalBlock(scope: !1116, file: !2)
!1119 = distinct !DISubprogram(name: "Result_try_a7deb1b6384ce9571721cd1522e1e931203f492c94f2dbf8138817d3824a", linkageName: "Result_try_a7deb1b6384ce9571721cd1522e1e931203f492c94f2dbf8138817d3824a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1120 = !DILocation(line: 0, scope: !1121)
!1121 = distinct !DILexicalBlock(scope: !1119, file: !2)
!1122 = distinct !DISubprogram(name: "Parser_parsePartial_cf8c9d89186a212409f843ad81dcb732cefe119aa65a9f5b319577583b6a15", linkageName: "Parser_parsePartial_cf8c9d89186a212409f843ad81dcb732cefe119aa65a9f5b319577583b6a15", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1123 = !DILocation(line: 0, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1122, file: !2)
!1125 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_11f55677694953d434d89b36eb7efc37feb0babdbd56c97251c7dbee733c868", linkageName: "Parser_buildPrimitiveParser_11f55677694953d434d89b36eb7efc37feb0babdbd56c97251c7dbee733c868", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1126 = !DILocation(line: 0, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1125, file: !2)
!1128 = distinct !DISubprogram(name: "Dict_initialShifts_dfab3e7e4dcf97947ada0f8abcfc248e78de1f269ac4599a46f8db36f6ed6aa", linkageName: "Dict_initialShifts_dfab3e7e4dcf97947ada0f8abcfc248e78de1f269ac4599a46f8db36f6ed6aa", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1129 = !DILocation(line: 0, scope: !1130)
!1130 = distinct !DILexicalBlock(scope: !1128, file: !2)
!1131 = distinct !DISubprogram(name: "Inspect_custom_28ed99b2257723c7de6da01790114bb6931256ffd9c1aaf369f05be7f782db", linkageName: "Inspect_custom_28ed99b2257723c7de6da01790114bb6931256ffd9c1aaf369f05be7f782db", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1132 = !DILocation(line: 0, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1131, file: !2)
!1134 = distinct !DISubprogram(name: "Parser_parsePartial_2dc969e7cadeba64dcad7acb43be4d64fb361cb6e86a62729ce66872e4fc", linkageName: "Parser_parsePartial_2dc969e7cadeba64dcad7acb43be4d64fb361cb6e86a62729ce66872e4fc", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1135 = !DILocation(line: 0, scope: !1136)
!1136 = distinct !DILexicalBlock(scope: !1134, file: !2)
!1137 = distinct !DISubprogram(name: "Parser_skip_3244389cd0f44ffa4fa4dd64554e447a88f58110161ed060aa55581f6d1890", linkageName: "Parser_skip_3244389cd0f44ffa4fa4dd64554e447a88f58110161ed060aa55581f6d1890", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1138 = !DILocation(line: 0, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1137, file: !2)
!1140 = distinct !DISubprogram(name: "Num_isGte_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363", linkageName: "Num_isGte_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1141 = !DILocation(line: 0, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1140, file: !2)
!1143 = distinct !DISubprogram(name: "Inspect_210_87e3beb8acf04ad7c628d1277903abccefdd55a1b1c2d9bb874f9dfb0929e23", linkageName: "Inspect_210_87e3beb8acf04ad7c628d1277903abccefdd55a1b1c2d9bb874f9dfb0929e23", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1144 = !DILocation(line: 0, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1143, file: !2)
!1146 = distinct !DISubprogram(name: "String_parseStr_5c7fc6e8da44f4e01dcb7769e2bfcfae9456e0177c2ecd342c33edc3d01a4d", linkageName: "String_parseStr_5c7fc6e8da44f4e01dcb7769e2bfcfae9456e0177c2ecd342c33edc3d01a4d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1147 = !DILocation(line: 0, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1146, file: !2)
!1149 = distinct !DISubprogram(name: "#UserApp_main_bc91ecf66cd9fcce2ace448deb6a9624e95e6179551ecbb08a5ce98a6e69a2", linkageName: "#UserApp_main_bc91ecf66cd9fcce2ace448deb6a9624e95e6179551ecbb08a5ce98a6e69a2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1150 = !DILocation(line: 0, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1149, file: !2)
!1152 = distinct !DISubprogram(name: "#Derived_custom4_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e", linkageName: "#Derived_custom4_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1153 = !DILocation(line: 0, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1152, file: !2)
!1155 = distinct !DISubprogram(name: "Parser_77_2ad8658f1e86eeda3a02dcb74391d83ec763ff151af71fc3ac46cbea2b9ce", linkageName: "Parser_77_2ad8658f1e86eeda3a02dcb74391d83ec763ff151af71fc3ac46cbea2b9ce", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1156 = !DILocation(line: 0, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1155, file: !2)
!1158 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_99e1652938de23842119ccffd84e8c6782547ce14bbfd1caa21f273de3289", linkageName: "Parser_buildPrimitiveParser_99e1652938de23842119ccffd84e8c6782547ce14bbfd1caa21f273de3289", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1159 = !DILocation(line: 0, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1158, file: !2)
!1161 = distinct !DISubprogram(name: "List_reserve_1a20a86e49e98265a07f2e3520fd72f1d5cc4a4259e669f8b2acf756122080", linkageName: "List_reserve_1a20a86e49e98265a07f2e3520fd72f1d5cc4a4259e669f8b2acf756122080", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1162 = !DILocation(line: 0, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1161, file: !2)
!1164 = !{!1165}
!1165 = distinct !{!1165, !1166, !"roc_builtins.list.reserve: argument 0"}
!1166 = distinct !{!1166, !"roc_builtins.list.reserve"}
!1167 = !{!1168}
!1168 = distinct !{!1168, !1169, !"list.RocList.reallocate: argument 0"}
!1169 = distinct !{!1169, !"list.RocList.reallocate"}
!1170 = !{!1168, !1165}
!1171 = !{!1172, !1168, !1165}
!1172 = distinct !{!1172, !1173, !"list.RocList.allocate: argument 0"}
!1173 = distinct !{!1173, !"list.RocList.allocate"}
!1174 = !{!1175, !1177, !1168, !1165}
!1175 = distinct !{!1175, !1176, !"list.RocList.allocate: argument 0"}
!1176 = distinct !{!1176, !"list.RocList.allocate"}
!1177 = distinct !{!1177, !1178, !"list.RocList.reallocateFresh: argument 0"}
!1178 = distinct !{!1178, !"list.RocList.reallocateFresh"}
!1179 = !{!1177, !1168, !1165}
!1180 = distinct !DISubprogram(name: "Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70", linkageName: "Num_addWrap_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1181 = !DILocation(line: 0, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !1180, file: !2)
!1183 = distinct !DISubprogram(name: "List_walkHelp_99494e9e9babe4dcb72b4144dc54d31ba956a4ee34496553143a5e7cb7dc78c4", linkageName: "List_walkHelp_99494e9e9babe4dcb72b4144dc54d31ba956a4ee34496553143a5e7cb7dc78c4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1184 = !DILocation(line: 0, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1183, file: !2)
!1186 = distinct !DISubprogram(name: "Dict_find_c2d7201047722d5a148179c401bb3be69049c213c67ac89fa2daff2ad24745", linkageName: "Dict_find_c2d7201047722d5a148179c401bb3be69049c213c67ac89fa2daff2ad24745", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1187 = !DILocation(line: 0, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1186, file: !2)
!1189 = distinct !DISubprogram(name: "List_sublist_13f5c26ce0b5e6eebef533619a72113f96d1ebc7728f2a7c4631d56ba55ad7c", linkageName: "List_sublist_13f5c26ce0b5e6eebef533619a72113f96d1ebc7728f2a7c4631d56ba55ad7c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1190 = !DILocation(line: 0, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !1189, file: !2)
!1192 = distinct !DISubprogram(name: "Result_map_5cbbff1635f59ae21a02af6cfe0157283a05fb77d9b6ef4377a9133a78ffbe5", linkageName: "Result_map_5cbbff1635f59ae21a02af6cfe0157283a05fb77d9b6ef4377a9133a78ffbe5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1193 = !DILocation(line: 0, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1192, file: !2)
!1195 = distinct !DISubprogram(name: "Parser_parse_3ef0be3dc434ba1162e39580a72ad0387348f7e2ac5c485921af9f85a731eea", linkageName: "Parser_parse_3ef0be3dc434ba1162e39580a72ad0387348f7e2ac5c485921af9f85a731eea", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1196 = !DILocation(line: 0, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1195, file: !2)
!1198 = distinct !DISubprogram(name: "PlatformTasks_task_closure_stderrLine_f0e2e1c8f8e8fdb997672cfd09071a69f19e35d6893c96be1ae254f383bdf", linkageName: "PlatformTasks_task_closure_stderrLine_f0e2e1c8f8e8fdb997672cfd09071a69f19e35d6893c96be1ae254f383bdf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1199 = !DILocation(line: 0, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !1198, file: !2)
!1201 = distinct !DISubprogram(name: "List_283_e26b07323a88152db96f57cffd313b88dda6eb16db54bca99d36e02da3083", linkageName: "List_283_e26b07323a88152db96f57cffd313b88dda6eb16db54bca99d36e02da3083", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1202 = !DILocation(line: 0, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1201, file: !2)
!1204 = distinct !DISubprogram(name: "Parser_82_647dd07ee8f7ddf03c325cf4d299a6b9816607efd5ade591788ff35124cdd", linkageName: "Parser_82_647dd07ee8f7ddf03c325cf4d299a6b9816607efd5ade591788ff35124cdd", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1205 = !DILocation(line: 0, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1204, file: !2)
!1207 = distinct !DISubprogram(name: "Dict_decrementDist_268182e6bf48c34ea8893d1d91dfdfbbcae7ca2eb5c9a5136f7f2958cb888df", linkageName: "Dict_decrementDist_268182e6bf48c34ea8893d1d91dfdfbbcae7ca2eb5c9a5136f7f2958cb888df", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1208 = !DILocation(line: 0, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1207, file: !2)
!1210 = distinct !DISubprogram(name: "Dict_incrementDistN_544c19588062ed4289757939f8edf854589b8a37c6e1b564139c3298a34d6", linkageName: "Dict_incrementDistN_544c19588062ed4289757939f8edf854589b8a37c6e1b564139c3298a34d6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1211 = !DILocation(line: 0, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1210, file: !2)
!1213 = distinct !DISubprogram(name: "List_isEmpty_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613", linkageName: "List_isEmpty_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1214 = !DILocation(line: 0, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1213, file: !2)
!1216 = distinct !DISubprogram(name: "List_walkHelp_935229af12e1c6ee752a73f7b73add5a7c7a22cfba9e577e778e240ed627a", linkageName: "List_walkHelp_935229af12e1c6ee752a73f7b73add5a7c7a22cfba9e577e778e240ed627a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1217 = !DILocation(line: 0, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1216, file: !2)
!1219 = distinct !DISubprogram(name: "Parser_57_81b6d1d3d209194aa735675712bd730b1987c61790f68995aee106436e9", linkageName: "Parser_57_81b6d1d3d209194aa735675712bd730b1987c61790f68995aee106436e9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1220 = !DILocation(line: 0, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1219, file: !2)
!1222 = distinct !DISubprogram(name: "Parser_52_b951f2385a7b569e8c6dff449b41837e7280adc46ecebfd577414d2d585d0", linkageName: "Parser_52_b951f2385a7b569e8c6dff449b41837e7280adc46ecebfd577414d2d585d0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1223 = !DILocation(line: 0, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1222, file: !2)
!1225 = distinct !DISubprogram(name: "Dict_get_6fe3723198a75889cb8af57c5c09ddd2b39fa52c21bf2b932afda892bd9e585", linkageName: "Dict_get_6fe3723198a75889cb8af57c5c09ddd2b39fa52c21bf2b932afda892bd9e585", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1226 = !DILocation(line: 0, scope: !1227)
!1227 = distinct !DILexicalBlock(scope: !1225, file: !2)
!1228 = distinct !DISubprogram(name: "Inspect_apply_40fe0ba3064c6cb636e3954b551733ab4335a5a776bbbf988c5d31fb20b470", linkageName: "Inspect_apply_40fe0ba3064c6cb636e3954b551733ab4335a5a776bbbf988c5d31fb20b470", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1229 = !DILocation(line: 0, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !1228, file: !2)
!1231 = distinct !DISubprogram(name: "List_walk_f79740875a4d32b5abcf43deaad586f61fe4062a6785757475b34d82a82", linkageName: "List_walk_f79740875a4d32b5abcf43deaad586f61fe4062a6785757475b34d82a82", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1232 = !DILocation(line: 0, scope: !1233)
!1233 = distinct !DILexicalBlock(scope: !1231, file: !2)
!1234 = distinct !DISubprogram(name: "Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674", linkageName: "Num_toU64_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1235 = !DILocation(line: 0, scope: !1236)
!1236 = distinct !DILexicalBlock(scope: !1234, file: !2)
!1237 = distinct !DISubprogram(name: "Dict_fingerprintMask_bac59821c43c0b53dd3438580b2599a5bf16c219b40a9d5e9a6e6a5390", linkageName: "Dict_fingerprintMask_bac59821c43c0b53dd3438580b2599a5bf16c219b40a9d5e9a6e6a5390", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1238 = !DILocation(line: 0, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !1237, file: !2)
!1240 = distinct !DISubprogram(name: "List_getUnsafe_5d84da6abaf677d342986d45e3605cfd5bd1528ee5196616226adfb513950", linkageName: "List_getUnsafe_5d84da6abaf677d342986d45e3605cfd5bd1528ee5196616226adfb513950", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1241 = !DILocation(line: 0, scope: !1242)
!1242 = distinct !DILexicalBlock(scope: !1240, file: !2)
!1243 = distinct !DISubprogram(name: "Bool_structuralEq_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4", linkageName: "Bool_structuralEq_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1244 = !DILocation(line: 0, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1243, file: !2)
!1246 = distinct !DISubprogram(name: "Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c", linkageName: "Dict_hashKey_7bb22cd9f7ce9f3ea01a5cc21ef19af74a624ef91d31d1912f9a7744788c55c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1247 = !DILocation(line: 0, scope: !1248)
!1248 = distinct !DILexicalBlock(scope: !1246, file: !2)
!1249 = distinct !DISubprogram(name: "Inspect_apply_82d12b6b12b8099eecd17c66fbb6ef41a8137f8c1ef74478e7bee978be8f9", linkageName: "Inspect_apply_82d12b6b12b8099eecd17c66fbb6ef41a8137f8c1ef74478e7bee978be8f9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1250 = !DILocation(line: 0, scope: !1251)
!1251 = distinct !DILexicalBlock(scope: !1249, file: !2)
!1252 = distinct !DISubprogram(name: "Parser_apply_bc1c80155c9262df33a08c68877930d3cc5995efe62149618580d2587468467", linkageName: "Parser_apply_bc1c80155c9262df33a08c68877930d3cc5995efe62149618580d2587468467", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1253 = !DILocation(line: 0, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1252, file: !2)
!1255 = distinct !DISubprogram(name: "List_len_46df57811ab9544a1f9313aab57b6ce51825f299caf5a1ffe2569412f3ed972", linkageName: "List_len_46df57811ab9544a1f9313aab57b6ce51825f299caf5a1ffe2569412f3ed972", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1256 = !DILocation(line: 0, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1255, file: !2)
!1258 = distinct !DISubprogram(name: "Dict_calcNumBuckets_1529b61b29181b37e427cd639d65060a33ef72662c4981e67e9c292331a", linkageName: "Dict_calcNumBuckets_1529b61b29181b37e427cd639d65060a33ef72662c4981e67e9c292331a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1259 = !DILocation(line: 0, scope: !1260)
!1260 = distinct !DILexicalBlock(scope: !1258, file: !2)
!1261 = distinct !DISubprogram(name: "Five_makeRules_7bc7b3ab839bcc84a286756163f821081944e9d993409f8654fbccc51f341d", linkageName: "Five_makeRules_7bc7b3ab839bcc84a286756163f821081944e9d993409f8654fbccc51f341d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1262 = !DILocation(line: 0, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1261, file: !2)
!1264 = distinct !DISubprogram(name: "List_keepIf_55d628abedfcc0e78784ef0cac7a0c47c774ce17d4fb8ba44f37721d7f3d98", linkageName: "List_keepIf_55d628abedfcc0e78784ef0cac7a0c47c774ce17d4fb8ba44f37721d7f3d98", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1265 = !DILocation(line: 0, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1264, file: !2)
!1267 = distinct !DISubprogram(name: "Parser_parsePartial_9d8f5875d4fc797f2c81c2bf03f92412bb92373cb8a8acc686be54cd51658a7", linkageName: "Parser_parsePartial_9d8f5875d4fc797f2c81c2bf03f92412bb92373cb8a8acc686be54cd51658a7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1268 = !DILocation(line: 0, scope: !1269)
!1269 = distinct !DILexicalBlock(scope: !1267, file: !2)
!1270 = distinct !DISubprogram(name: "_8_647daa5d9488126c5d148e68e474c6f899fa96593a9e1c942a9cdd7773170", linkageName: "_8_647daa5d9488126c5d148e68e474c6f899fa96593a9e1c942a9cdd7773170", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1271 = !DILocation(line: 0, scope: !1272)
!1272 = distinct !DILexicalBlock(scope: !1270, file: !2)
!1273 = distinct !DISubprogram(name: "List_sublist_c76509a58fbafc47f4d5fc1992204e92c831be8ebe1587d7baf160babfe2ad", linkageName: "List_sublist_c76509a58fbafc47f4d5fc1992204e92c831be8ebe1587d7baf160babfe2ad", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1274 = !DILocation(line: 0, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1273, file: !2)
!1276 = distinct !DISubprogram(name: "List_iterate_ade2dc9e385e74c61c8d36210907131d7823a7fe8d06c7bd978c1f46a9d3830", linkageName: "List_iterate_ade2dc9e385e74c61c8d36210907131d7823a7fe8d06c7bd978c1f46a9d3830", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1277 = !DILocation(line: 0, scope: !1278)
!1278 = distinct !DILexicalBlock(scope: !1276, file: !2)
!1279 = distinct !DISubprogram(name: "String_strToRaw_ef4fd8e61cea3e28e02cea992acb5b69ff53641f7df759d72efd1ca2d6d2741", linkageName: "String_strToRaw_ef4fd8e61cea3e28e02cea992acb5b69ff53641f7df759d72efd1ca2d6d2741", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1280 = !DILocation(line: 0, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1279, file: !2)
!1282 = distinct !DISubprogram(name: "Inspect_dbgI32_8235e4d87e64a6f1c0dba97cda99445de848b0ab53d798c9d7a57517bdbf", linkageName: "Inspect_dbgI32_8235e4d87e64a6f1c0dba97cda99445de848b0ab53d798c9d7a57517bdbf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1283 = !DILocation(line: 0, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !1282, file: !2)
!1285 = distinct !DISubprogram(name: "Result_try_35d6cb78c74f84df82ab12c37bc71bbe5193f93e9d36506abc7c9c8ca124d1ab", linkageName: "Result_try_35d6cb78c74f84df82ab12c37bc71bbe5193f93e9d36506abc7c9c8ca124d1ab", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1286 = !DILocation(line: 0, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1285, file: !2)
!1288 = distinct !DISubprogram(name: "List_getUnsafe_e19be4977dae6e316e964ccb3f3519dc19317486f4e86b58a231a1854931186", linkageName: "List_getUnsafe_e19be4977dae6e316e964ccb3f3519dc19317486f4e86b58a231a1854931186", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1289 = !DILocation(line: 0, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1288, file: !2)
!1291 = distinct !DISubprogram(name: "Parser_158_32a8df25d88ba7cee29904e38845254ec55404ac0bea8418e34e0df65c895", linkageName: "Parser_158_32a8df25d88ba7cee29904e38845254ec55404ac0bea8418e34e0df65c895", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1292 = !DILocation(line: 0, scope: !1293)
!1293 = distinct !DILexicalBlock(scope: !1291, file: !2)
!1294 = distinct !DISubprogram(name: "Num_mul_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e", linkageName: "Num_mul_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1295 = !DILocation(line: 0, scope: !1296)
!1296 = distinct !DILexicalBlock(scope: !1294, file: !2)
!1297 = distinct !DISubprogram(name: "String_digits_2a63cbb21df3c6cd024fa55fccbaa353df4baab244ba379952ed628e5b4ade", linkageName: "String_digits_2a63cbb21df3c6cd024fa55fccbaa353df4baab244ba379952ed628e5b4ade", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1298 = !DILocation(line: 0, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1297, file: !2)
!1300 = distinct !DISubprogram(name: "Num_isGt_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc", linkageName: "Num_isGt_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1301 = !DILocation(line: 0, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1300, file: !2)
!1303 = distinct !DISubprogram(name: "String_114_febb34167fa9ce104d58e46e5b86963cb8a0a2c228269d557c77fae899439d4", linkageName: "String_114_febb34167fa9ce104d58e46e5b86963cb8a0a2c228269d557c77fae899439d4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1304 = !DILocation(line: 0, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !1303, file: !2)
!1306 = !{!1307}
!1307 = distinct !{!1307, !1308, !"roc_builtins.list.sublist: argument 0"}
!1308 = distinct !{!1308, !"roc_builtins.list.sublist"}
!1309 = distinct !DISubprogram(name: "Task_mapErr_6458453d595fdc9e5a87eea15f24738f1c7d3413915ef8aee1930d85e5631ee", linkageName: "Task_mapErr_6458453d595fdc9e5a87eea15f24738f1c7d3413915ef8aee1930d85e5631ee", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1310 = !DILocation(line: 0, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1309, file: !2)
!1312 = distinct !DISubprogram(name: "Dict_pseudoSeed_94cb138d818e9947d7d69ef307378727ff7855e4de6723d27fc54d8e228050", linkageName: "Dict_pseudoSeed_94cb138d818e9947d7d69ef307378727ff7855e4de6723d27fc54d8e228050", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1313 = !DILocation(line: 0, scope: !1314)
!1314 = distinct !DILexicalBlock(scope: !1312, file: !2)
!1315 = distinct !DISubprogram(name: "Parser_keep_c160733124d992a626d26d4ef3869f84d5218633965988131e9ae4b8e5624", linkageName: "Parser_keep_c160733124d992a626d26d4ef3869f84d5218633965988131e9ae4b8e5624", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1316 = !DILocation(line: 0, scope: !1317)
!1317 = distinct !DILexicalBlock(scope: !1315, file: !2)
!1318 = distinct !DISubprogram(name: "Dict_empty_8523cacf79b3ae26b5b5ddfebda64fc7e54c53c82e133fab2e0abee3a1046", linkageName: "Dict_empty_8523cacf79b3ae26b5b5ddfebda64fc7e54c53c82e133fab2e0abee3a1046", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1319 = !DILocation(line: 0, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !1318, file: !2)
!1321 = distinct !DISubprogram(name: "Parser_200_16aa7910c0f01a62f7254586694f3caa8b91b5d9c4ac395d8e845efa238a384", linkageName: "Parser_200_16aa7910c0f01a62f7254586694f3caa8b91b5d9c4ac395d8e845efa238a384", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1322 = !DILocation(line: 0, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1321, file: !2)
!1324 = distinct !DISubprogram(name: "Task_await_73264be0c742695741a5c2b1831aa195174bfbb9f7ad1331fccea2114b78c3b", linkageName: "Task_await_73264be0c742695741a5c2b1831aa195174bfbb9f7ad1331fccea2114b78c3b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1325 = !DILocation(line: 0, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1324, file: !2)
!1327 = distinct !DISubprogram(name: "Inspect_custom_5c8e2eddb65717d2b7a69c4d944bbaab3db37fe30ea4d8f6e4bc9d32cef", linkageName: "Inspect_custom_5c8e2eddb65717d2b7a69c4d944bbaab3db37fe30ea4d8f6e4bc9d32cef", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1328 = !DILocation(line: 0, scope: !1329)
!1329 = distinct !DILexicalBlock(scope: !1327, file: !2)
!1330 = distinct !DISubprogram(name: "Result_withDefault_0ecd2fa884bf65d7bc12fe6d21fb068cfa330b949298476bb016904fd3f", linkageName: "Result_withDefault_0ecd2fa884bf65d7bc12fe6d21fb068cfa330b949298476bb016904fd3f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1331 = !DILocation(line: 0, scope: !1332)
!1332 = distinct !DILexicalBlock(scope: !1330, file: !2)
!1333 = distinct !DISubprogram(name: "#Derived_custom7_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6", linkageName: "#Derived_custom7_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1334 = !DILocation(line: 0, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1333, file: !2)
!1336 = distinct !DISubprogram(name: "Parser_const_4f901c8de2c7478653c08d6369f36717479192cadbcae45a78d1967e047e87", linkageName: "Parser_const_4f901c8de2c7478653c08d6369f36717479192cadbcae45a78d1967e047e87", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1337 = !DILocation(line: 0, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1336, file: !2)
!1339 = distinct !DISubprogram(name: "Task_46_521c32b4d5a5f51c42df45f129765f7c9b82531da49c872d42a31b733f24", linkageName: "Task_46_521c32b4d5a5f51c42df45f129765f7c9b82531da49c872d42a31b733f24", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1340 = !DILocation(line: 0, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !1339, file: !2)
!1342 = distinct !DISubprogram(name: "Task_38_227c616c7b4b56636b2b27697746d083f4afe93588be2831ba53eb420fc2fb9", linkageName: "Task_38_227c616c7b4b56636b2b27697746d083f4afe93588be2831ba53eb420fc2fb9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1343 = !DILocation(line: 0, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1342, file: !2)
!1345 = distinct !DISubprogram(name: "List_splitFirst_dce3401669119d7f5da9e070669694c78f88efb14a471223494f7d677db1e7d", linkageName: "List_splitFirst_dce3401669119d7f5da9e070669694c78f88efb14a471223494f7d677db1e7d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1346 = !DILocation(line: 0, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !1345, file: !2)
!1348 = distinct !DISubprogram(name: "Num_addSaturated_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94", linkageName: "Num_addSaturated_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1349 = !DILocation(line: 0, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1348, file: !2)
!1351 = distinct !DISubprogram(name: "Parser_const_1375e2db4435b2138a3415b7c96936836b72ffb02dfbb07976d45f5890e0", linkageName: "Parser_const_1375e2db4435b2138a3415b7c96936836b72ffb02dfbb07976d45f5890e0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1352 = !DILocation(line: 0, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !1351, file: !2)
!1354 = distinct !DISubprogram(name: "Task_42_6dea868fd882515ee4d6ec4867e8156d13a76c6d7fd19e7a46b6aa84371f7b", linkageName: "Task_42_6dea868fd882515ee4d6ec4867e8156d13a76c6d7fd19e7a46b6aa84371f7b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1355 = !DILocation(line: 0, scope: !1356)
!1356 = distinct !DILexicalBlock(scope: !1354, file: !2)
!1357 = distinct !DISubprogram(name: "Parser_52_3b148fd2a5a7120f39a95f212875e0e0a46b2eb1a77c5d23b9391c4799c48", linkageName: "Parser_52_3b148fd2a5a7120f39a95f212875e0e0a46b2eb1a77c5d23b9391c4799c48", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1358 = !DILocation(line: 0, scope: !1359)
!1359 = distinct !DILexicalBlock(scope: !1357, file: !2)
!1360 = distinct !DISubprogram(name: "Five_middle_e315ee9facfd97a46e7bd14b98541116d245ecd6155168d2c1c9c02d3f201e", linkageName: "Five_middle_e315ee9facfd97a46e7bd14b98541116d245ecd6155168d2c1c9c02d3f201e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1361 = !DILocation(line: 0, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1360, file: !2)
!1363 = distinct !DISubprogram(name: "Num_divTruncUnchecked_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f", linkageName: "Num_divTruncUnchecked_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1364 = !DILocation(line: 0, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1363, file: !2)
!1366 = distinct !DISubprogram(name: "Num_sub_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2", linkageName: "Num_sub_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1367 = !DILocation(line: 0, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1366, file: !2)
!1369 = distinct !DISubprogram(name: "PlatformTasks_stderrLine_b13e441aa31a6e35575dd307f7cad1257deaa945c51f2cbe43d4fa91f764bf", linkageName: "PlatformTasks_stderrLine_b13e441aa31a6e35575dd307f7cad1257deaa945c51f2cbe43d4fa91f764bf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1370 = !DILocation(line: 0, scope: !1371)
!1371 = distinct !DILexicalBlock(scope: !1369, file: !2)
!1372 = distinct !DISubprogram(name: "Parser_apply_ecbd7b762d55e44bf495618cea878b55259220bc8edf3022f9d67817349224a", linkageName: "Parser_apply_ecbd7b762d55e44bf495618cea878b55259220bc8edf3022f9d67817349224a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1373 = !DILocation(line: 0, scope: !1374)
!1374 = distinct !DILexicalBlock(scope: !1372, file: !2)
!1375 = distinct !DISubprogram(name: "Parser_153_b3bc15972825cd45bef5e6289e422a8811ed4523ed803e14f34e79eb07fe3cd", linkageName: "Parser_153_b3bc15972825cd45bef5e6289e422a8811ed4523ed803e14f34e79eb07fe3cd", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1376 = !DILocation(line: 0, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1375, file: !2)
!1378 = distinct !DISubprogram(name: "List_takeFirst_b29e3b7af499d7231de5e31772f94a674636903232cb1b301cf274977992d8b", linkageName: "List_takeFirst_b29e3b7af499d7231de5e31772f94a674636903232cb1b301cf274977992d8b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1379 = !DILocation(line: 0, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1378, file: !2)
!1381 = distinct !DISubprogram(name: "Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0", linkageName: "Dict_listGetUnsafe_a472f7aba8f6717343f24da54150b124829637a3f252c7e04811e4754b343d0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1382 = !DILocation(line: 0, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1381, file: !2)
!1384 = distinct !DISubprogram(name: "List_walkHelp_8e7a40fb7cb2175e9c8b7aee60f44cef84959b742d3a14c483b6e3b14f05c2f", linkageName: "List_walkHelp_8e7a40fb7cb2175e9c8b7aee60f44cef84959b742d3a14c483b6e3b14f05c2f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1385 = !DILocation(line: 0, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1384, file: !2)
!1387 = distinct !DISubprogram(name: "List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee", linkageName: "List_len_5250a04b6d2518751b896097c7387fb10ff97b95f3e08a2795e163ade21ee", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1388 = !DILocation(line: 0, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1387, file: !2)
!1390 = distinct !DISubprogram(name: "Result_try_78e95374ca5c3ffeb4c3c6d1fee15f4627b4cb8e78c83389fa66fa17b11860", linkageName: "Result_try_78e95374ca5c3ffeb4c3c6d1fee15f4627b4cb8e78c83389fa66fa17b11860", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1391 = !DILocation(line: 0, scope: !1392)
!1392 = distinct !DILexicalBlock(scope: !1390, file: !2)
!1393 = distinct !DISubprogram(name: "Str_toUtf8_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63", linkageName: "Str_toUtf8_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1394 = !DILocation(line: 0, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1393, file: !2)
!1396 = distinct !DISubprogram(name: "Inspect_272_e97c7c92d435d433f8aa8ddd4ddc6c9d8c45c10adae536897eecfd72f2389", linkageName: "Inspect_272_e97c7c92d435d433f8aa8ddd4ddc6c9d8c45c10adae536897eecfd72f2389", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1397 = !DILocation(line: 0, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1396, file: !2)
!1399 = distinct !DISubprogram(name: "Five_30_f81ede8f61994c117716f563c136128125c8b7d9af8ae3ed880dbb29f2c2a98", linkageName: "Five_30_f81ede8f61994c117716f563c136128125c8b7d9af8ae3ed880dbb29f2c2a98", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1400 = !DILocation(line: 0, scope: !1401)
!1401 = distinct !DILexicalBlock(scope: !1399, file: !2)
!1402 = distinct !DISubprogram(name: "Parser_parse_f450475ab465e8d5720f97d44d03608c846dd5a98c93419a9069c6dc52fa0", linkageName: "Parser_parse_f450475ab465e8d5720f97d44d03608c846dd5a98c93419a9069c6dc52fa0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1403 = !DILocation(line: 0, scope: !1404)
!1404 = distinct !DILexicalBlock(scope: !1402, file: !2)
!1405 = distinct !DISubprogram(name: "Five_38_a1f1c2407512f3220f6212b7b75e099c971d128b656c18ded971afd225c34c", linkageName: "Five_38_a1f1c2407512f3220f6212b7b75e099c971d128b656c18ded971afd225c34c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1406 = !DILocation(line: 0, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1405, file: !2)
!1408 = distinct !DISubprogram(name: "String_parseUtf8_6c4184d9de7bfc8cf488ca98f4fc9c30e82530ee2451f209df4c26db25e7", linkageName: "String_parseUtf8_6c4184d9de7bfc8cf488ca98f4fc9c30e82530ee2451f209df4c26db25e7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1409 = !DILocation(line: 0, scope: !1410)
!1410 = distinct !DILexicalBlock(scope: !1408, file: !2)
!1411 = distinct !DISubprogram(name: "List_len_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2", linkageName: "List_len_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1412 = !DILocation(line: 0, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1411, file: !2)
!1414 = distinct !DISubprogram(name: "List_walkHelp_10259c295470b0dd303c429b36412fb6f21861ad97f73a2722c7516d147991f", linkageName: "List_walkHelp_10259c295470b0dd303c429b36412fb6f21861ad97f73a2722c7516d147991f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1415 = !DILocation(line: 0, scope: !1416)
!1416 = distinct !DILexicalBlock(scope: !1414, file: !2)
!1417 = distinct !DISubprogram(name: "Parser_maybe_91f55f0f74d3a50ce67a647641ecddc4a3ba89ef5bfad20773d8a6834984b", linkageName: "Parser_maybe_91f55f0f74d3a50ce67a647641ecddc4a3ba89ef5bfad20773d8a6834984b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1418 = !DILocation(line: 0, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1417, file: !2)
!1420 = distinct !DISubprogram(name: "Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e", linkageName: "Dict_incrementDist_1414869acb920f6db8ce61389f4b2ab8ee18505e1ddd7ea302888aec917e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1421 = !DILocation(line: 0, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1420, file: !2)
!1423 = distinct !DISubprogram(name: "Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276", linkageName: "Dict_nextBucketIndex_c4a37e6d352bb35242daa87c613d86251be76cf677f327944a4ca87b5e276", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1424 = !DILocation(line: 0, scope: !1425)
!1425 = distinct !DILexicalBlock(scope: !1423, file: !2)
!1426 = distinct !DISubprogram(name: "Num_toStr_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d", linkageName: "Num_toStr_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1427 = !DILocation(line: 0, scope: !1428)
!1428 = distinct !DILexicalBlock(scope: !1426, file: !2)
!1429 = distinct !DISubprogram(name: "List_sum_1e4d2f1e6b4984301a1489b71481ade3a818d1fae80b8f87ea525c7bff923", linkageName: "List_sum_1e4d2f1e6b4984301a1489b71481ade3a818d1fae80b8f87ea525c7bff923", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1430 = !DILocation(line: 0, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1429, file: !2)
!1432 = distinct !DISubprogram(name: "Result_map_cd37899bb8a8d9e6a1967d5d098545d4623f55f4fb33fb81a429834acd2bca2", linkageName: "Result_map_cd37899bb8a8d9e6a1967d5d098545d4623f55f4fb33fb81a429834acd2bca2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1433 = !DILocation(line: 0, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1432, file: !2)
!1435 = distinct !DISubprogram(name: "Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6", linkageName: "Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1436 = !DILocation(line: 0, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1435, file: !2)
!1438 = distinct !DISubprogram(name: "Dict_wymix_7daab025296eba78663b2c113b559f88e566e449ca8ec1339c43daed88577936", linkageName: "Dict_wymix_7daab025296eba78663b2c113b559f88e566e449ca8ec1339c43daed88577936", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1439 = !DILocation(line: 0, scope: !1440)
!1440 = distinct !DILexicalBlock(scope: !1438, file: !2)
!1441 = distinct !DISubprogram(name: "Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846", linkageName: "Num_subWrap_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1442 = !DILocation(line: 0, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1441, file: !2)
!1444 = distinct !DISubprogram(name: "Parser_52_7768ccf3aac525a48d7ee5a83d5cf6f5cad326c64a1cd15978c51c27333f5", linkageName: "Parser_52_7768ccf3aac525a48d7ee5a83d5cf6f5cad326c64a1cd15978c51c27333f5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1445 = !DILocation(line: 0, scope: !1446)
!1446 = distinct !DILexicalBlock(scope: !1444, file: !2)
!1447 = distinct !DISubprogram(name: "Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250", linkageName: "Inspect_custom_8fc4ff14236b6fdd7b8eb2978c76ee25aa5c37e9566a9956f7f047d233feb250", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1448 = !DILocation(line: 0, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1447, file: !2)
!1450 = distinct !DISubprogram(name: "InternalPath_26_25d58849757a586446e327bd270f25c98f41c5eaaa541b53178bdcd7d21bb9", linkageName: "InternalPath_26_25d58849757a586446e327bd270f25c98f41c5eaaa541b53178bdcd7d21bb9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1451 = !DILocation(line: 0, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1450, file: !2)
!1453 = distinct !DISubprogram(name: "List_replaceUnsafe_46849c3b86f45f4f9e25198bc9b2ae6bcae76ebfbd692c6f18d9d9111cb9233c", linkageName: "List_replaceUnsafe_46849c3b86f45f4f9e25198bc9b2ae6bcae76ebfbd692c6f18d9d9111cb9233c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1454 = !DILocation(line: 0, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1453, file: !2)
!1456 = !{!1457}
!1457 = distinct !{!1457, !1458, !"roc_builtins.list.replace: argument 0"}
!1458 = distinct !{!1458, !"roc_builtins.list.replace"}
!1459 = !{!1460}
!1460 = distinct !{!1460, !1461, !"list.RocList.makeUnique: argument 0"}
!1461 = distinct !{!1461, !"list.RocList.makeUnique"}
!1462 = !{!1460, !1457}
!1463 = !{!1464, !1460, !1457}
!1464 = distinct !{!1464, !1465, !"list.RocList.allocate: argument 0"}
!1465 = distinct !{!1465, !"list.RocList.allocate"}
!1466 = !DILocation(line: 0, scope: !1084, inlinedAt: !1467)
!1467 = distinct !DILocation(line: 0, scope: !1455)
!1468 = !DILocation(line: 0, scope: !1469, inlinedAt: !1471)
!1469 = distinct !DILexicalBlock(scope: !1470, file: !2)
!1470 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_5_inc", linkageName: "#Attr_#generic_rc_by_ref_5_inc", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1471 = distinct !DILocation(line: 0, scope: !1455)
!1472 = !DILocation(line: 0, scope: !1473, inlinedAt: !1475)
!1473 = distinct !DILexicalBlock(scope: !1474, file: !2)
!1474 = distinct !DISubprogram(name: "#Attr_#generic_copy_by_ref_3", linkageName: "#Attr_#generic_copy_by_ref_3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1475 = distinct !DILocation(line: 0, scope: !1455)
!1476 = !DILocation(line: 0, scope: !1473, inlinedAt: !1477)
!1477 = distinct !DILocation(line: 0, scope: !1455)
!1478 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_c5af93aace764e1d51d7949776965fec1e25545875812c183e47de135bc13ad3", linkageName: "Parser_buildPrimitiveParser_c5af93aace764e1d51d7949776965fec1e25545875812c183e47de135bc13ad3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1479 = !DILocation(line: 0, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1478, file: !2)
!1481 = distinct !DISubprogram(name: "List_517_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83", linkageName: "List_517_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1482 = !DILocation(line: 0, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1481, file: !2)
!1484 = distinct !DISubprogram(name: "List_iterate_c84245e9d5a8bbcea28f19811f38b2e7a05f277c949080724954fddcea11aca3", linkageName: "List_iterate_c84245e9d5a8bbcea28f19811f38b2e7a05f277c949080724954fddcea11aca3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1485 = !DILocation(line: 0, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1484, file: !2)
!1487 = distinct !DISubprogram(name: "Parser_153_bd9bed80b6a3af5da42dd8318d3afdafa7dfe83cc9b87136c829aee729798a93", linkageName: "Parser_153_bd9bed80b6a3af5da42dd8318d3afdafa7dfe83cc9b87136c829aee729798a93", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1488 = !DILocation(line: 0, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1487, file: !2)
!1490 = distinct !DISubprogram(name: "List_iterHelp_28b81340646419744ffe2153acaa8e39d3c2d10c2a51eb5702318112c7c5", linkageName: "List_iterHelp_28b81340646419744ffe2153acaa8e39d3c2d10c2a51eb5702318112c7c5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1491 = !DILocation(line: 0, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1490, file: !2)
!1493 = distinct !DISubprogram(name: "List_replace_6c6ac529604932be9f613389ac656fb39037eb79cbe1d537d9bdd99c2563108d", linkageName: "List_replace_6c6ac529604932be9f613389ac656fb39037eb79cbe1d537d9bdd99c2563108d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1494 = !DILocation(line: 0, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1493, file: !2)
!1496 = distinct !DISubprogram(name: "Str_firstMatch_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00", linkageName: "Str_firstMatch_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1497 = !DILocation(line: 0, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1496, file: !2)
!1499 = distinct !DISubprogram(name: "Parser_apply_f0b2dd2ef4827f9ec2d49f375ba7c16ec7ebf163abea129818bfb85fe1b9cde", linkageName: "Parser_apply_f0b2dd2ef4827f9ec2d49f375ba7c16ec7ebf163abea129818bfb85fe1b9cde", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1500 = !DILocation(line: 0, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1499, file: !2)
!1502 = distinct !DISubprogram(name: "Task_53_ba11fd7bfef4db24218e934bc7c8a92abf43883548efce0129eb6de6acb7c1", linkageName: "Task_53_ba11fd7bfef4db24218e934bc7c8a92abf43883548efce0129eb6de6acb7c1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1503 = !DILocation(line: 0, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1502, file: !2)
!1505 = distinct !DISubprogram(name: "List_all_12a8ad799c7b34402483623f9b421f07775e1054bb6bfcf2ae122184609a", linkageName: "List_all_12a8ad799c7b34402483623f9b421f07775e1054bb6bfcf2ae122184609a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1506 = !DILocation(line: 0, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1505, file: !2)
!1508 = distinct !DISubprogram(name: "Result_try_3c58d86b4437e7512e2b91aaabac14e86a30d0bfd8a27923c73b19fd673fff", linkageName: "Result_try_3c58d86b4437e7512e2b91aaabac14e86a30d0bfd8a27923c73b19fd673fff", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1509 = !DILocation(line: 0, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1508, file: !2)
!1511 = distinct !DISubprogram(name: "List_isEmpty_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0", linkageName: "List_isEmpty_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1512 = !DILocation(line: 0, scope: !1513)
!1513 = distinct !DILexicalBlock(scope: !1511, file: !2)
!1514 = distinct !DISubprogram(name: "Five_26_101bd9114cb72f29d6b22ed6cabba79bcc71b9b9038a04a56e8c4a52082be", linkageName: "Five_26_101bd9114cb72f29d6b22ed6cabba79bcc71b9b9038a04a56e8c4a52082be", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1515 = !DILocation(line: 0, scope: !1516)
!1516 = distinct !DILexicalBlock(scope: !1514, file: !2)
!1517 = distinct !DISubprogram(name: "Result_mapErr_c5b690bc22238d3ac9e996befafbf2c431a107de306ea8b8318875c9fcba16", linkageName: "Result_mapErr_c5b690bc22238d3ac9e996befafbf2c431a107de306ea8b8318875c9fcba16", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1518 = !DILocation(line: 0, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1517, file: !2)
!1520 = distinct !DISubprogram(name: "List_walk_99c9f773566b1d5d689233ef7949cf16c8797c970a4668678361d8c89d24f20", linkageName: "List_walk_99c9f773566b1d5d689233ef7949cf16c8797c970a4668678361d8c89d24f20", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1521 = !DILocation(line: 0, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1520, file: !2)
!1523 = distinct !DISubprogram(name: "Dict_findFirstUnroll_f2e0cf21cda4e3c878e1ab216b192b2e2825d82c3b48a3a8bb6d7de6e7e20e", linkageName: "Dict_findFirstUnroll_f2e0cf21cda4e3c878e1ab216b192b2e2825d82c3b48a3a8bb6d7de6e7e20e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1524 = !DILocation(line: 0, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1523, file: !2)
!1526 = distinct !DISubprogram(name: "Parser_parsePartial_179b946120c9a08baf2d1f2247148c3fa11c6290279fe069ff1ca32539941", linkageName: "Parser_parsePartial_179b946120c9a08baf2d1f2247148c3fa11c6290279fe069ff1ca32539941", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1527 = !DILocation(line: 0, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1526, file: !2)
!1529 = distinct !DISubprogram(name: "Inspect_208_47ed43a06597f89afbe2c90ac4640f89c2157f577d6fd03fdc26e32f321dc2", linkageName: "Inspect_208_47ed43a06597f89afbe2c90ac4640f89c2157f577d6fd03fdc26e32f321dc2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1530 = !DILocation(line: 0, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1529, file: !2)
!1532 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_87aadac9e37ed967241d19aabb44c6dc9504f6f6259d63573422f627ad38f", linkageName: "Parser_buildPrimitiveParser_87aadac9e37ed967241d19aabb44c6dc9504f6f6259d63573422f627ad38f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1533 = !DILocation(line: 0, scope: !1534)
!1534 = distinct !DILexicalBlock(scope: !1532, file: !2)
!1535 = distinct !DISubprogram(name: "Task_67_2e277b1ed53576d63d29fbc0f3c07e22aa5da56b069c997539f375a9e9c91c", linkageName: "Task_67_2e277b1ed53576d63d29fbc0f3c07e22aa5da56b069c997539f375a9e9c91c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1536 = !DILocation(line: 0, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1535, file: !2)
!1538 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_61f44a74e94cb8c1c2db3f3f383cd9d354fdf57d11ea12f95c51b322f5e43395", linkageName: "Parser_buildPrimitiveParser_61f44a74e94cb8c1c2db3f3f383cd9d354fdf57d11ea12f95c51b322f5e43395", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1539 = !DILocation(line: 0, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1538, file: !2)
!1541 = distinct !DISubprogram(name: "Parser_manyImpl_c028e8ebec9626f9ffbdf64d76d758431ce5c5566ceefcd869c6b9c72e5a1d", linkageName: "Parser_manyImpl_c028e8ebec9626f9ffbdf64d76d758431ce5c5566ceefcd869c6b9c72e5a1d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1542 = !DILocation(line: 0, scope: !1543)
!1543 = distinct !DILexicalBlock(scope: !1541, file: !2)
!1544 = distinct !DISubprogram(name: "Five_34_2937f1927d9516ec2e3625505ecd4d60f2cee887835d44646ab3e3d01375af", linkageName: "Five_34_2937f1927d9516ec2e3625505ecd4d60f2cee887835d44646ab3e3d01375af", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1545 = !DILocation(line: 0, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1544, file: !2)
!1547 = distinct !DISubprogram(name: "List_replace_d0954aeb42c3a999750fa5b4068c6679ed2537c3257fc7e6c4e91bdc4133ae0", linkageName: "List_replace_d0954aeb42c3a999750fa5b4068c6679ed2537c3257fc7e6c4e91bdc4133ae0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1548 = !DILocation(line: 0, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1547, file: !2)
!1550 = distinct !DISubprogram(name: "Bool_isNotEq_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6", linkageName: "Bool_isNotEq_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1551 = !DILocation(line: 0, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1550, file: !2)
!1553 = distinct !DISubprogram(name: "Bool_and_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21", linkageName: "Bool_and_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1554 = !DILocation(line: 0, scope: !1555)
!1555 = distinct !DILexicalBlock(scope: !1553, file: !2)
!1556 = distinct !DISubprogram(name: "Parser_77_8d2b92da50932d49e15c5c73b8d0a1d1e229d8198f6f22de7efaf7622e27d", linkageName: "Parser_77_8d2b92da50932d49e15c5c73b8d0a1d1e229d8198f6f22de7efaf7622e27d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1557 = !DILocation(line: 0, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1556, file: !2)
!1559 = distinct !DISubprogram(name: "Num_isLte_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df", linkageName: "Num_isLte_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1560 = !DILocation(line: 0, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1559, file: !2)
!1562 = distinct !DISubprogram(name: "String_59_bc413139b8bf596011dc864f2452fae94852749d6225b8d53dfd835ba68b7b", linkageName: "String_59_bc413139b8bf596011dc864f2452fae94852749d6225b8d53dfd835ba68b7b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1563 = !DILocation(line: 0, scope: !1564)
!1564 = distinct !DILexicalBlock(scope: !1562, file: !2)
!1565 = distinct !DISubprogram(name: "Dict_findFirstUnroll_c8ee203993b19f9eeb79e6d9b9cb5c211fecc131b917baefe682bdc7d1dc7e", linkageName: "Dict_findFirstUnroll_c8ee203993b19f9eeb79e6d9b9cb5c211fecc131b917baefe682bdc7d1dc7e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1566 = !DILocation(line: 0, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1565, file: !2)
!1568 = distinct !DISubprogram(name: "Parser_200_15f1e1a1eceb31827fd881ac76f3839662c753cefa5c5c671aa298d8c0b43f90", linkageName: "Parser_200_15f1e1a1eceb31827fd881ac76f3839662c753cefa5c5c671aa298d8c0b43f90", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1569 = !DILocation(line: 0, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1568, file: !2)
!1571 = distinct !DISubprogram(name: "Task_46_d4e04963c1a9b3df23c4774ff3fe4377b225218f1fb354bb6496ef3b441cfd31", linkageName: "Task_46_d4e04963c1a9b3df23c4774ff3fe4377b225218f1fb354bb6496ef3b441cfd31", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1572 = !DILocation(line: 0, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1571, file: !2)
!1574 = distinct !DISubprogram(name: "List_sublistLowlevel_dc6b1b42abfea2844b7c4985e150c54b77c535b47ead6acd59d6a08b80d2", linkageName: "List_sublistLowlevel_dc6b1b42abfea2844b7c4985e150c54b77c535b47ead6acd59d6a08b80d2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1575 = !DILocation(line: 0, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1574, file: !2)
!1577 = !{!1578}
!1578 = distinct !{!1578, !1579, !"roc_builtins.list.sublist: argument 0"}
!1579 = distinct !{!1579, !"roc_builtins.list.sublist"}
!1580 = !DILocation(line: 0, scope: !1581, inlinedAt: !1583)
!1581 = distinct !DILexicalBlock(scope: !1582, file: !2)
!1582 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_3_dec", linkageName: "#Attr_#generic_rc_by_ref_3_dec", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1583 = distinct !DILocation(line: 0, scope: !1576)
!1584 = !DILocation(line: 0, scope: !1581, inlinedAt: !1585)
!1585 = distinct !DILocation(line: 0, scope: !1576)
!1586 = distinct !DISubprogram(name: "Five_14_4c338574d6e8ce6a38c44e9aa2440d050fc925f9a5e674c38f9b97d8b1bf50", linkageName: "Five_14_4c338574d6e8ce6a38c44e9aa2440d050fc925f9a5e674c38f9b97d8b1bf50", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1587 = !DILocation(line: 0, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1586, file: !2)
!1589 = distinct !DISubprogram(name: "Dict_increaseSize_6510a4d2b643dbf56ded4867b8cf49fe92c910e8961840e3a156bc971ee31a", linkageName: "Dict_increaseSize_6510a4d2b643dbf56ded4867b8cf49fe92c910e8961840e3a156bc971ee31a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1590 = !DILocation(line: 0, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1589, file: !2)
!1592 = distinct !DISubprogram(name: "Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0", linkageName: "Dict_bucketIndexFromHash_93b8def1d2984c6818ac4bcad643457a66cc713468a3a5225fa94a9b1b4933f0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1593 = !DILocation(line: 0, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1592, file: !2)
!1595 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_3bdf755040d6ba4ff792958d1ba62a59c551c1b5d19e2604f6bb5215158", linkageName: "Parser_buildPrimitiveParser_3bdf755040d6ba4ff792958d1ba62a59c551c1b5d19e2604f6bb5215158", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1596 = !DILocation(line: 0, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1595, file: !2)
!1598 = distinct !DISubprogram(name: "String_90_2425fdec333e9c3446982981ac5215ad67fc78748e2a2c31633ab84a88eeb6b", linkageName: "String_90_2425fdec333e9c3446982981ac5215ad67fc78748e2a2c31633ab84a88eeb6b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1599 = !DILocation(line: 0, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !1598, file: !2)
!1601 = distinct !DISubprogram(name: "Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d", linkageName: "Dict_distInc_3994ebd10847f51a1ba443e4f3b9fb75da3f81a354da59de9bd34aaa2e927d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1602 = !DILocation(line: 0, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1601, file: !2)
!1604 = distinct !DISubprogram(name: "List_keepIfHelp_5eb6a2599d3097c754d93922b84522fd22c626afbfca9a48d724fa1945e3ca9", linkageName: "List_keepIfHelp_5eb6a2599d3097c754d93922b84522fd22c626afbfca9a48d724fa1945e3ca9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1605 = !DILocation(line: 0, scope: !1606)
!1606 = distinct !DILexicalBlock(scope: !1604, file: !2)
!1607 = distinct !DISubprogram(name: "Task_mapErr_dac1828a559851ccf54a9d617bdd3b2b62cfa65d7d16b1259bc78fc7c2e1", linkageName: "Task_mapErr_dac1828a559851ccf54a9d617bdd3b2b62cfa65d7d16b1259bc78fc7c2e1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1608 = !DILocation(line: 0, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1607, file: !2)
!1610 = distinct !DISubprogram(name: "Num_toF32_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8", linkageName: "Num_toF32_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1611 = !DILocation(line: 0, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1610, file: !2)
!1613 = distinct !DISubprogram(name: "Inspect_252_f56abf6a50719c6e8161e4ae34e1a1a63cddb05e916253c8457a373372d6bb", linkageName: "Inspect_252_f56abf6a50719c6e8161e4ae34e1a1a63cddb05e916253c8457a373372d6bb", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1614 = !DILocation(line: 0, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !1613, file: !2)
!1616 = distinct !DISubprogram(name: "Inspect_204_8e6f801bf53c86630ef8be4d8c3ee15f80c78c69d3ce8031062a6e529ee", linkageName: "Inspect_204_8e6f801bf53c86630ef8be4d8c3ee15f80c78c69d3ce8031062a6e529ee", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1617 = !DILocation(line: 0, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1616, file: !2)
!1619 = distinct !DISubprogram(name: "Num_subWrap_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41", linkageName: "Num_subWrap_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1620 = !DILocation(line: 0, scope: !1621)
!1621 = distinct !DILexicalBlock(scope: !1619, file: !2)
!1622 = distinct !DISubprogram(name: "Inspect_custom_a571631963e6f373060368cd9665a453dbfac813965b321bf9bb77263202ca", linkageName: "Inspect_custom_a571631963e6f373060368cd9665a453dbfac813965b321bf9bb77263202ca", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1623 = !DILocation(line: 0, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1622, file: !2)
!1625 = distinct !DISubprogram(name: "List_iterHelp_50e8e06555163661d37576e08a187bc1a82c34c685bbe84f89594e81f9565960", linkageName: "List_iterHelp_50e8e06555163661d37576e08a187bc1a82c34c685bbe84f89594e81f9565960", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1626 = !DILocation(line: 0, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1625, file: !2)
!1628 = distinct !DISubprogram(name: "List_takeFirst_ca98df76e744faeef21fb76918295997c9c1b552a2e623d6fc162a11de8fae", linkageName: "List_takeFirst_ca98df76e744faeef21fb76918295997c9c1b552a2e623d6fc162a11de8fae", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1629 = !DILocation(line: 0, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1628, file: !2)
!1631 = distinct !DISubprogram(name: "Inspect_dbgStr_aa3b634bf5a3cbfd69384c2274596f2bf4c68e9d7ee9e56807d20bdff71992f", linkageName: "Inspect_dbgStr_aa3b634bf5a3cbfd69384c2274596f2bf4c68e9d7ee9e56807d20bdff71992f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1632 = !DILocation(line: 0, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1631, file: !2)
!1634 = distinct !DISubprogram(name: "Parser_82_24a1e4da4e2112b3a86dbba86af39ac2de6bd14c57df8e79f6961180ee8f2fa", linkageName: "Parser_82_24a1e4da4e2112b3a86dbba86af39ac2de6bd14c57df8e79f6961180ee8f2fa", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1635 = !DILocation(line: 0, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1634, file: !2)
!1637 = distinct !DISubprogram(name: "String_parseUtf8_7bad6ad1229fb7163196be598bc661e94e665de0e38b68d86c71f7a7299f6828", linkageName: "String_parseUtf8_7bad6ad1229fb7163196be598bc661e94e665de0e38b68d86c71f7a7299f6828", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1638 = !DILocation(line: 0, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1637, file: !2)
!1640 = distinct !DISubprogram(name: "Parser_combined_eee0cf2f77617b662da3ebd6ef24ced5db7e94b18f3abe7c751a51966a72a081", linkageName: "Parser_combined_eee0cf2f77617b662da3ebd6ef24ced5db7e94b18f3abe7c751a51966a72a081", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1641 = !DILocation(line: 0, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1640, file: !2)
!1643 = distinct !DISubprogram(name: "Dict_allocBucketsFromShift_cd87b8ad69bc5b0a62f3f19932d2d2ba97fc6f54781f6533ef735e0b0235064", linkageName: "Dict_allocBucketsFromShift_cd87b8ad69bc5b0a62f3f19932d2d2ba97fc6f54781f6533ef735e0b0235064", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1644 = !DILocation(line: 0, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !1643, file: !2)
!1646 = distinct !DISubprogram(name: "Parser_alt_a45290bef5734ad62afcaea912ebb28a88fcce6265e83e5ce118554fa9b23df6", linkageName: "Parser_alt_a45290bef5734ad62afcaea912ebb28a88fcce6265e83e5ce118554fa9b23df6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1647 = !DILocation(line: 0, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1646, file: !2)
!1649 = distinct !DISubprogram(name: "Parser_200_42f82f3ac78246c9b6ea3a77755de6567cf083ed525e468a4eb63ca0e388", linkageName: "Parser_200_42f82f3ac78246c9b6ea3a77755de6567cf083ed525e468a4eb63ca0e388", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1650 = !DILocation(line: 0, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1649, file: !2)
!1652 = distinct !DISubprogram(name: "List_reserve_7f755070a828d5b0991fd43175b6036d1cb7ecf871d1b823a8797b553d92bc", linkageName: "List_reserve_7f755070a828d5b0991fd43175b6036d1cb7ecf871d1b823a8797b553d92bc", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1653 = !DILocation(line: 0, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1652, file: !2)
!1655 = !{!1656}
!1656 = distinct !{!1656, !1657, !"roc_builtins.list.reserve: argument 0"}
!1657 = distinct !{!1657, !"roc_builtins.list.reserve"}
!1658 = !{!1659}
!1659 = distinct !{!1659, !1660, !"list.RocList.reallocate: argument 0"}
!1660 = distinct !{!1660, !"list.RocList.reallocate"}
!1661 = !{!1659, !1656}
!1662 = !{!1663, !1659, !1656}
!1663 = distinct !{!1663, !1664, !"list.RocList.allocate: argument 0"}
!1664 = distinct !{!1664, !"list.RocList.allocate"}
!1665 = !{!1666, !1668, !1659, !1656}
!1666 = distinct !{!1666, !1667, !"list.RocList.allocate: argument 0"}
!1667 = distinct !{!1667, !"list.RocList.allocate"}
!1668 = distinct !{!1668, !1669, !"list.RocList.reallocateFresh: argument 0"}
!1669 = distinct !{!1669, !"list.RocList.reallocateFresh"}
!1670 = !{!1668, !1659, !1656}
!1671 = !DILocation(line: 0, scope: !1469, inlinedAt: !1672)
!1672 = distinct !DILocation(line: 0, scope: !1654)
!1673 = distinct !DISubprogram(name: "Num_toStr_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece", linkageName: "Num_toStr_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1674 = !DILocation(line: 0, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1673, file: !2)
!1676 = distinct !DISubprogram(name: "Parser_parsePartial_125e5211332baa7aedbb2fd7f239977452738b3664d4eef2cbd7b5781537c7", linkageName: "Parser_parsePartial_125e5211332baa7aedbb2fd7f239977452738b3664d4eef2cbd7b5781537c7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1677 = !DILocation(line: 0, scope: !1678)
!1678 = distinct !DILexicalBlock(scope: !1676, file: !2)
!1679 = distinct !DISubprogram(name: "Parser_parsePartial_a09fbdbd33f5ac2bc44e2b877ec9604906cdb3d39aa817d9e3dc5075f2eda", linkageName: "Parser_parsePartial_a09fbdbd33f5ac2bc44e2b877ec9604906cdb3d39aa817d9e3dc5075f2eda", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1680 = !DILocation(line: 0, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1679, file: !2)
!1682 = distinct !DISubprogram(name: "String_digit_ea64383f9353ea705abcbe8856570182bf8ab8cc1a137e1ba1e4283a0b5aa", linkageName: "String_digit_ea64383f9353ea705abcbe8856570182bf8ab8cc1a137e1ba1e4283a0b5aa", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1683 = !DILocation(line: 0, scope: !1684)
!1684 = distinct !DILexicalBlock(scope: !1682, file: !2)
!1685 = distinct !DISubprogram(name: "Num_min_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b", linkageName: "Num_min_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1686 = !DILocation(line: 0, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1685, file: !2)
!1688 = distinct !DISubprogram(name: "List_len_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140", linkageName: "List_len_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1689 = !DILocation(line: 0, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1688, file: !2)
!1691 = distinct !DISubprogram(name: "#Derived_custom3_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3", linkageName: "#Derived_custom3_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1692 = !DILocation(line: 0, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1691, file: !2)
!1694 = distinct !DISubprogram(name: "List_sublistLowlevel_edd459f1588e2edc4160caf3fec49aefc7d7fec1545146fd82c6ba52b293834", linkageName: "List_sublistLowlevel_edd459f1588e2edc4160caf3fec49aefc7d7fec1545146fd82c6ba52b293834", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1695 = !DILocation(line: 0, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !1694, file: !2)
!1697 = !{!1698}
!1698 = distinct !{!1698, !1699, !"roc_builtins.list.sublist: argument 0"}
!1699 = distinct !{!1699, !"roc_builtins.list.sublist"}
!1700 = distinct !DISubprogram(name: "Five_85_4fb36d6b5bafed91b1af2ed219ed16e953dd85fb4918fd484493843c0df9dca", linkageName: "Five_85_4fb36d6b5bafed91b1af2ed219ed16e953dd85fb4918fd484493843c0df9dca", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1701 = !DILocation(line: 0, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1700, file: !2)
!1703 = distinct !DISubprogram(name: "#Derived_toInspector_[CodepointTooLarge 0,EncodesSurrogateHalf 0,ExpectedContinuation 0,InvalidStartByte 0,OverlongEncoding 0,UnexpectedEndOfSequence 0]_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2", linkageName: "#Derived_toInspector_[CodepointTooLarge 0,EncodesSurrogateHalf 0,ExpectedContinuation 0,InvalidStartByte 0,OverlongEncoding 0,UnexpectedEndOfSequence 0]_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1704 = !DILocation(line: 0, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1703, file: !2)
!1706 = distinct !DISubprogram(name: "Inspect_210_8ea7496e29805228ef349bc4b276e9615dfd3c8f9efc993f6ae85ec2210a763", linkageName: "Inspect_210_8ea7496e29805228ef349bc4b276e9615dfd3c8f9efc993f6ae85ec2210a763", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1707 = !DILocation(line: 0, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1706, file: !2)
!1709 = distinct !DISubprogram(name: "List_all_19a01698b1f1f64ca782bce3c6b70dbfe2947aebabe3f6b126ebdf6166ecc31", linkageName: "List_all_19a01698b1f1f64ca782bce3c6b70dbfe2947aebabe3f6b126ebdf6166ecc31", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1710 = !DILocation(line: 0, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1709, file: !2)
!1712 = distinct !DISubprogram(name: "Num_shiftRightZfBy_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0", linkageName: "Num_shiftRightZfBy_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1713 = !DILocation(line: 0, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1712, file: !2)
!1715 = distinct !DISubprogram(name: "List_swap_dbefccae6de790f8e3497ad3c6c1c58a12a744edb0d65ec1ec4ade8b1151a59b", linkageName: "List_swap_dbefccae6de790f8e3497ad3c6c1c58a12a744edb0d65ec1ec4ade8b1151a59b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1716 = !DILocation(line: 0, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1715, file: !2)
!1718 = !{!1719}
!1719 = distinct !{!1719, !1720, !"roc_builtins.list.swap: argument 0"}
!1720 = distinct !{!1720, !"roc_builtins.list.swap"}
!1721 = !{!1722}
!1722 = distinct !{!1722, !1723, !"list.RocList.makeUnique: argument 0"}
!1723 = distinct !{!1723, !"list.RocList.makeUnique"}
!1724 = !{!1722, !1719}
!1725 = !{!1726, !1722, !1719}
!1726 = distinct !{!1726, !1727, !"list.RocList.allocate: argument 0"}
!1727 = distinct !{!1727, !"list.RocList.allocate"}
!1728 = !DILocation(line: 0, scope: !1084, inlinedAt: !1729)
!1729 = distinct !DILocation(line: 0, scope: !1717)
!1730 = !DILocation(line: 0, scope: !1469, inlinedAt: !1731)
!1731 = distinct !DILocation(line: 0, scope: !1717)
!1732 = !DILocation(line: 0, scope: !1473, inlinedAt: !1733)
!1733 = distinct !DILocation(line: 0, scope: !1717)
!1734 = !DILocation(line: 0, scope: !1473, inlinedAt: !1735)
!1735 = distinct !DILocation(line: 0, scope: !1717)
!1736 = !DILocation(line: 0, scope: !1473, inlinedAt: !1737)
!1737 = distinct !DILocation(line: 0, scope: !1717)
!1738 = distinct !DISubprogram(name: "Inspect_250_864dab640f4e5815dcc2e864a26afb3cfd96d7f7e7654fb58cfd09f8eb263", linkageName: "Inspect_250_864dab640f4e5815dcc2e864a26afb3cfd96d7f7e7654fb58cfd09f8eb263", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1739 = !DILocation(line: 0, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1738, file: !2)
!1741 = distinct !DISubprogram(name: "Inspect_dbgStr_2fa65620f1c8398249204c364eff9d936f25b95f1952125d69a57fdd75bbe7", linkageName: "Inspect_dbgStr_2fa65620f1c8398249204c364eff9d936f25b95f1952125d69a57fdd75bbe7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1742 = !DILocation(line: 0, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1741, file: !2)
!1744 = distinct !DISubprogram(name: "List_dropLast_ab6bf482529beb271842e34a3922217532b2f57565d72aea510e9edbdcef6", linkageName: "List_dropLast_ab6bf482529beb271842e34a3922217532b2f57565d72aea510e9edbdcef6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1745 = !DILocation(line: 0, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1744, file: !2)
!1747 = distinct !DISubprogram(name: "Str_firstMatchHelp_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0", linkageName: "Str_firstMatchHelp_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1748 = !DILocation(line: 0, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1747, file: !2)
!1750 = distinct !DISubprogram(name: "#Derived_custom5_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8", linkageName: "#Derived_custom5_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1751 = !DILocation(line: 0, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1750, file: !2)
!1753 = distinct !DISubprogram(name: "Dict_wyp1_8c3d9f23c28a38707993803f2903e4f1928ddeb88bfccf06508a8b5141715f", linkageName: "Dict_wyp1_8c3d9f23c28a38707993803f2903e4f1928ddeb88bfccf06508a8b5141715f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1754 = !DILocation(line: 0, scope: !1755)
!1755 = distinct !DILexicalBlock(scope: !1753, file: !2)
!1756 = distinct !DISubprogram(name: "Dict_combineState_5d26e7953422ce84aac56171b489e0deedf33db4e08b81dcad67e7427bff49", linkageName: "Dict_combineState_5d26e7953422ce84aac56171b489e0deedf33db4e08b81dcad67e7427bff49", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1757 = !DILocation(line: 0, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1756, file: !2)
!1759 = distinct !DISubprogram(name: "Five_partTwo_f1966770f487423b2224f997555d39f4a11ba5fe171e103a4b5b1ab4f2c70", linkageName: "Five_partTwo_f1966770f487423b2224f997555d39f4a11ba5fe171e103a4b5b1ab4f2c70", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1760 = !DILocation(line: 0, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1759, file: !2)
!1762 = distinct !DISubprogram(name: "Task_err_8574b403032b1e41c889178b52ddfe37f79513c5637fbb5bea234401648d296", linkageName: "Task_err_8574b403032b1e41c889178b52ddfe37f79513c5637fbb5bea234401648d296", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1763 = !DILocation(line: 0, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1762, file: !2)
!1765 = distinct !DISubprogram(name: "List_walk_9d55cb5018ba494bcf5765953355c83e4ade148e5c95b280aacd826c59bea86", linkageName: "List_walk_9d55cb5018ba494bcf5765953355c83e4ade148e5c95b280aacd826c59bea86", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1766 = !DILocation(line: 0, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1765, file: !2)
!1768 = distinct !DISubprogram(name: "Str_isEmpty_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d", linkageName: "Str_isEmpty_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1769 = !DILocation(line: 0, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1768, file: !2)
!1771 = distinct !DISubprogram(name: "Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7", linkageName: "Str_concat_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1772 = !DILocation(line: 0, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1771, file: !2)
!1774 = distinct !DISubprogram(name: "List_keepIfHelp_a1fdfd7ca485c5e9436ed61186fef7b9b914edaf84deff48d9823fcadcd6ac", linkageName: "List_keepIfHelp_a1fdfd7ca485c5e9436ed61186fef7b9b914edaf84deff48d9823fcadcd6ac", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1775 = !DILocation(line: 0, scope: !1776)
!1776 = distinct !DILexicalBlock(scope: !1774, file: !2)
!1777 = distinct !DISubprogram(name: "Parser_skip_6c68987bd3d4f8949cad39c27377db22ab8bd15fe9e342f64964ed294c77", linkageName: "Parser_skip_6c68987bd3d4f8949cad39c27377db22ab8bd15fe9e342f64964ed294c77", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1778 = !DILocation(line: 0, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1777, file: !2)
!1780 = distinct !DISubprogram(name: "Dict_initSeed_a9e685cc72fe3166dd93f93a27166ec5656562cf1d6d3e19f41a6cc3489", linkageName: "Dict_initSeed_a9e685cc72fe3166dd93f93a27166ec5656562cf1d6d3e19f41a6cc3489", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1781 = !DILocation(line: 0, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1780, file: !2)
!1783 = distinct !DISubprogram(name: "Dict_complete_4a2d194da1241ef3ca5a8139a734b29ae4efb20126643584c91fe6ded8e2c5a", linkageName: "Dict_complete_4a2d194da1241ef3ca5a8139a734b29ae4efb20126643584c91fe6ded8e2c5a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1784 = !DILocation(line: 0, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1783, file: !2)
!1786 = distinct !DISubprogram(name: "Parser_77_9afb3cbae942a0bc28e2e4ef30242a1463d71fcd8053b9cf54a2f5c3147c1", linkageName: "Parser_77_9afb3cbae942a0bc28e2e4ef30242a1463d71fcd8053b9cf54a2f5c3147c1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1787 = !DILocation(line: 0, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1786, file: !2)
!1789 = distinct !DISubprogram(name: "Dict_fillBucketsFromData_a0d5c44a91521ccbe6cbe0ca2338db7878e8dda81a27912b861f86434c26c052", linkageName: "Dict_fillBucketsFromData_a0d5c44a91521ccbe6cbe0ca2338db7878e8dda81a27912b861f86434c26c052", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1790 = !DILocation(line: 0, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1789, file: !2)
!1792 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_193448c4838cde466118b8f870b86decbde9b220f58c4baeed5bcaad0689f58", linkageName: "Parser_buildPrimitiveParser_193448c4838cde466118b8f870b86decbde9b220f58c4baeed5bcaad0689f58", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1793 = !DILocation(line: 0, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1792, file: !2)
!1795 = distinct !DISubprogram(name: "#Derived_custom6_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd", linkageName: "#Derived_custom6_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1796 = !DILocation(line: 0, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1795, file: !2)
!1798 = distinct !DISubprogram(name: "Task_73_53bccde9921d34a99bc57d7dbbe86edccdf5689af36c43cac5c891312df738a", linkageName: "Task_73_53bccde9921d34a99bc57d7dbbe86edccdf5689af36c43cac5c891312df738a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1799 = !DILocation(line: 0, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1798, file: !2)
!1801 = distinct !DISubprogram(name: "_10_30fe2aeefb9e6a6c9b187470d1a66a216dd31d2ce213c14343daed4ac570", linkageName: "_10_30fe2aeefb9e6a6c9b187470d1a66a216dd31d2ce213c14343daed4ac570", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1802 = !DILocation(line: 0, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1801, file: !2)
!1804 = distinct !DISubprogram(name: "Five_sorter_147f9a29f721bc6a47c431ffbf897368d53af6834eae9416f984da7fc2dd89", linkageName: "Five_sorter_147f9a29f721bc6a47c431ffbf897368d53af6834eae9416f984da7fc2dd89", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1805 = !DILocation(line: 0, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1804, file: !2)
!1807 = distinct !DISubprogram(name: "Task_35_9294948111f131652687dcc3f2dde9cc67fb309853fbd814ad8f8f3c89b321", linkageName: "Task_35_9294948111f131652687dcc3f2dde9cc67fb309853fbd814ad8f8f3c89b321", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1808 = !DILocation(line: 0, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1807, file: !2)
!1810 = distinct !DISubprogram(name: "Inspect_apply_1f8e356ac751a27ffa403915e5479fd0a29d71e18585d0226666c6b441ff81", linkageName: "Inspect_apply_1f8e356ac751a27ffa403915e5479fd0a29d71e18585d0226666c6b441ff81", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1811 = !DILocation(line: 0, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1810, file: !2)
!1813 = distinct !DISubprogram(name: "List_len_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50", linkageName: "List_len_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1814 = !DILocation(line: 0, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1813, file: !2)
!1816 = distinct !DISubprogram(name: "Parser_parsePartial_9a3b59329aee34273e2c05ecea1c75b744fff87dc1d841e1bced5ff5b9764", linkageName: "Parser_parsePartial_9a3b59329aee34273e2c05ecea1c75b744fff87dc1d841e1bced5ff5b9764", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1817 = !DILocation(line: 0, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !1816, file: !2)
!1819 = distinct !DISubprogram(name: "List_append_494fd63e81fc5377dff396b856cc43fac283edbeae4d7cfbdd95aadb8479597", linkageName: "List_append_494fd63e81fc5377dff396b856cc43fac283edbeae4d7cfbdd95aadb8479597", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1820 = !DILocation(line: 0, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1819, file: !2)
!1822 = distinct !DISubprogram(name: "Bool_structuralNotEq_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591", linkageName: "Bool_structuralNotEq_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1823 = !DILocation(line: 0, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1822, file: !2)
!1825 = distinct !DISubprogram(name: "Parser_parsePartial_42e294ef63ce8b6bacde71bdf2e18942982fab75ecb0b0597cb0c363350ba4b", linkageName: "Parser_parsePartial_42e294ef63ce8b6bacde71bdf2e18942982fab75ecb0b0597cb0c363350ba4b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1826 = !DILocation(line: 0, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1825, file: !2)
!1828 = distinct !DISubprogram(name: "Num_mulWrap_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31", linkageName: "Num_mulWrap_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1829 = !DILocation(line: 0, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1828, file: !2)
!1831 = distinct !DISubprogram(name: "Parser_combined_9dafd8f0b5a93f0de91f9c0f5e84ec19365c89730e1f530e43e35727a7be6d8", linkageName: "Parser_combined_9dafd8f0b5a93f0de91f9c0f5e84ec19365c89730e1f530e43e35727a7be6d8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1832 = !DILocation(line: 0, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1831, file: !2)
!1834 = distinct !DISubprogram(name: "Inspect_204_b96090d699017c67f1c33d23f5f5b60732db46124d7bead69858245e5f4", linkageName: "Inspect_204_b96090d699017c67f1c33d23f5f5b60732db46124d7bead69858245e5f4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1835 = !DILocation(line: 0, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1834, file: !2)
!1837 = distinct !DISubprogram(name: "Parser_parsePartial_e1cb572af3725742d66b2eb0d3756602f89f9725aa8004c75e9c2262ab", linkageName: "Parser_parsePartial_e1cb572af3725742d66b2eb0d3756602f89f9725aa8004c75e9c2262ab", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1838 = !DILocation(line: 0, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1837, file: !2)
!1840 = distinct !DISubprogram(name: "Dict_findSecondUnroll_8f804d847f17ce19e983ee3d457d4c97a1c72145f357931dcbff3cd6dbfe4c0", linkageName: "Dict_findSecondUnroll_8f804d847f17ce19e983ee3d457d4c97a1c72145f357931dcbff3cd6dbfe4c0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1841 = !DILocation(line: 0, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1840, file: !2)
!1843 = distinct !DISubprogram(name: "Task_await_8c9e32c1aadddd94aae3acfa4e15ddbfa6911ff5a2999e6634aa26edd6a0da", linkageName: "Task_await_8c9e32c1aadddd94aae3acfa4e15ddbfa6911ff5a2999e6634aa26edd6a0da", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1844 = !DILocation(line: 0, scope: !1845)
!1845 = distinct !DILexicalBlock(scope: !1843, file: !2)
!1846 = distinct !DISubprogram(name: "List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018", linkageName: "List_len_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1847 = !DILocation(line: 0, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1846, file: !2)
!1849 = distinct !DISubprogram(name: "#Derived_toInspector_[BadUtf8 2]_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11", linkageName: "#Derived_toInspector_[BadUtf8 2]_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1850 = !DILocation(line: 0, scope: !1851)
!1851 = distinct !DILexicalBlock(scope: !1849, file: !2)
!1852 = distinct !DISubprogram(name: "List_sublist_8e9956175ff8e3582c4b770a3b3c2388266676d8eb052d494e1a127bd7a9ad2", linkageName: "List_sublist_8e9956175ff8e3582c4b770a3b3c2388266676d8eb052d494e1a127bd7a9ad2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1853 = !DILocation(line: 0, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1852, file: !2)
!1855 = distinct !DISubprogram(name: "List_repeat_dba168b77b24c6e793bab73fde9e33d53bc4c848cefe7b7fe931876bedf73d", linkageName: "List_repeat_dba168b77b24c6e793bab73fde9e33d53bc4c848cefe7b7fe931876bedf73d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1856 = !DILocation(line: 0, scope: !1857)
!1857 = distinct !DILexicalBlock(scope: !1855, file: !2)
!1858 = distinct !DISubprogram(name: "Result_try_4ec88c32b1d8d7e41af6fe2c3b1c519c1adff81ec271f8be7bf4ea491e1", linkageName: "Result_try_4ec88c32b1d8d7e41af6fe2c3b1c519c1adff81ec271f8be7bf4ea491e1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1859 = !DILocation(line: 0, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1858, file: !2)
!1861 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_a6981e9af82e47105cf68a8eae93c9cf303d36467e93a849f262f17773f5", linkageName: "Parser_buildPrimitiveParser_a6981e9af82e47105cf68a8eae93c9cf303d36467e93a849f262f17773f5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1862 = !DILocation(line: 0, scope: !1863)
!1863 = distinct !DILexicalBlock(scope: !1861, file: !2)
!1864 = distinct !DISubprogram(name: "#Derived_toInspector_[Exit 2,FileReadErr 2,FileReadUtf8Err 2,NotFound 0,ParsingFailure 1,ParsingIncomplete 1,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd", linkageName: "#Derived_toInspector_[Exit 2,FileReadErr 2,FileReadUtf8Err 2,NotFound 0,ParsingFailure 1,ParsingIncomplete 1,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1865 = !DILocation(line: 0, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1864, file: !2)
!1867 = distinct !DISubprogram(name: "Inspect_apply_9431905c91573f4ccc36b1a74d97f28a25ea16aef421e92a078dd6264383d", linkageName: "Inspect_apply_9431905c91573f4ccc36b1a74d97f28a25ea16aef421e92a078dd6264383d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1868 = !DILocation(line: 0, scope: !1869)
!1869 = distinct !DILexicalBlock(scope: !1867, file: !2)
!1870 = distinct !DISubprogram(name: "String_125_6cf2364d472c2667e3822ac759c31f3412758843a080229881bcffc5eb6f1d", linkageName: "String_125_6cf2364d472c2667e3822ac759c31f3412758843a080229881bcffc5eb6f1d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1871 = !DILocation(line: 0, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1870, file: !2)
!1873 = distinct !DISubprogram(name: "Parser_183_6bab55d98f9c2b3f1754a1c25bf8c10f2e62f9dce2d86e90d173ffe64bd23", linkageName: "Parser_183_6bab55d98f9c2b3f1754a1c25bf8c10f2e62f9dce2d86e90d173ffe64bd23", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1874 = !DILocation(line: 0, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1873, file: !2)
!1876 = distinct !DISubprogram(name: "Dict_circularDist_a51293a4c3ce80beb92fd22c82b6b69bd26ee8bc815b483e3cf291f486236c", linkageName: "Dict_circularDist_a51293a4c3ce80beb92fd22c82b6b69bd26ee8bc815b483e3cf291f486236c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1877 = !DILocation(line: 0, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1876, file: !2)
!1879 = distinct !DISubprogram(name: "Str_splitFirst_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2", linkageName: "Str_splitFirst_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1880 = !DILocation(line: 0, scope: !1881)
!1881 = distinct !DILexicalBlock(scope: !1879, file: !2)
!1882 = distinct !DISubprogram(name: "Num_bitwiseAnd_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9", linkageName: "Num_bitwiseAnd_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1883 = !DILocation(line: 0, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1882, file: !2)
!1885 = distinct !DISubprogram(name: "Parser_map_bd96ec4285a11c9820bb4ba3a247771dd91732da48f91e3fbd0d2acf571b2", linkageName: "Parser_map_bd96ec4285a11c9820bb4ba3a247771dd91732da48f91e3fbd0d2acf571b2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1886 = !DILocation(line: 0, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1885, file: !2)
!1888 = distinct !DISubprogram(name: "Inspect_custom_b1578731274e6ff96daec13b4ab0dd54752d378ad5e32dad77e43ac706ee6", linkageName: "Inspect_custom_b1578731274e6ff96daec13b4ab0dd54752d378ad5e32dad77e43ac706ee6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1889 = !DILocation(line: 0, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1888, file: !2)
!1891 = distinct !DISubprogram(name: "List_iterHelp_a0ad3055de08c7e73da1974f4d9be666ee2daaab6969dd582bb59893cf022b0", linkageName: "List_iterHelp_a0ad3055de08c7e73da1974f4d9be666ee2daaab6969dd582bb59893cf022b0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1892 = !DILocation(line: 0, scope: !1893)
!1893 = distinct !DILexicalBlock(scope: !1891, file: !2)
!1894 = distinct !DISubprogram(name: "String_123_4d171470486115e34f5abed227b887e2bccd7f223e7f7547111d26dfad766", linkageName: "String_123_4d171470486115e34f5abed227b887e2bccd7f223e7f7547111d26dfad766", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1895 = !DILocation(line: 0, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1894, file: !2)
!1897 = distinct !DISubprogram(name: "List_appendUnsafe_a1b37f834fad683b855edbbe46b2d4d8d04bfe3fdda176d9a70679e9ca0caf", linkageName: "List_appendUnsafe_a1b37f834fad683b855edbbe46b2d4d8d04bfe3fdda176d9a70679e9ca0caf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1898 = !DILocation(line: 0, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1897, file: !2)
!1900 = !{!1901}
!1901 = distinct !{!1901, !1902, !"roc_builtins.list.append_unsafe: argument 0"}
!1902 = distinct !{!1902, !"roc_builtins.list.append_unsafe"}
!1903 = !DILocation(line: 0, scope: !1904, inlinedAt: !1906)
!1904 = distinct !DILexicalBlock(scope: !1905, file: !2)
!1905 = distinct !DISubprogram(name: "#Attr_#generic_copy_by_ref_4", linkageName: "#Attr_#generic_copy_by_ref_4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1906 = distinct !DILocation(line: 0, scope: !1899)
!1907 = distinct !DISubprogram(name: "Result_try_ac6315adde982c4b62c768a77be738d224267f4f9e6f1a02f3bc60549578c", linkageName: "Result_try_ac6315adde982c4b62c768a77be738d224267f4f9e6f1a02f3bc60549578c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1908 = !DILocation(line: 0, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1907, file: !2)
!1910 = distinct !DISubprogram(name: "List_withCapacity_edba1fc0cbfb8bc06ea89d458e5f5137027dfdf6bb865a3fbe3121562", linkageName: "List_withCapacity_edba1fc0cbfb8bc06ea89d458e5f5137027dfdf6bb865a3fbe3121562", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1911 = !{!1912}
!1912 = distinct !{!1912, !1913, !"roc_builtins.list.with_capacity: argument 0"}
!1913 = distinct !{!1913, !"roc_builtins.list.with_capacity"}
!1914 = !DILocation(line: 0, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1910, file: !2)
!1916 = !{!1917}
!1917 = distinct !{!1917, !1918, !"list.RocList.reallocate: argument 0"}
!1918 = distinct !{!1918, !"list.RocList.reallocate"}
!1919 = !{!1917, !1920, !1912}
!1920 = distinct !{!1920, !1921, !"roc_builtins.list.reserve: argument 0"}
!1921 = distinct !{!1921, !"roc_builtins.list.reserve"}
!1922 = !{!1923, !1917, !1920, !1912}
!1923 = distinct !{!1923, !1924, !"list.RocList.allocate: argument 0"}
!1924 = distinct !{!1924, !"list.RocList.allocate"}
!1925 = !{!1920, !1912}
!1926 = !{!1927, !1929, !1917, !1920, !1912}
!1927 = distinct !{!1927, !1928, !"list.RocList.allocate: argument 0"}
!1928 = distinct !{!1928, !"list.RocList.allocate"}
!1929 = distinct !{!1929, !1930, !"list.RocList.reallocateFresh: argument 0"}
!1930 = distinct !{!1930, !"list.RocList.reallocateFresh"}
!1931 = !{!1929, !1917, !1920, !1912}
!1932 = distinct !DISubprogram(name: "Num_shiftLeftBy_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811", linkageName: "Num_shiftLeftBy_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1933 = !DILocation(line: 0, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1932, file: !2)
!1935 = distinct !DISubprogram(name: "Five_61_23b674fb7e93c9deea1a988c8dccdf545316dca864beef81f3b16a6841ea4d62", linkageName: "Five_61_23b674fb7e93c9deea1a988c8dccdf545316dca864beef81f3b16a6841ea4d62", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1936 = !DILocation(line: 0, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1935, file: !2)
!1938 = distinct !DISubprogram(name: "Parser_153_e3772fdac2658fe707f6fdbe88de56aae9be7164372b6f69cc054cd20261b", linkageName: "Parser_153_e3772fdac2658fe707f6fdbe88de56aae9be7164372b6f69cc054cd20261b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1939 = !DILocation(line: 0, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1938, file: !2)
!1941 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_7f281174bb95be75e15cd13756faa969e71990e919b9dd9056d6ea49f9599bbe", linkageName: "Parser_buildPrimitiveParser_7f281174bb95be75e15cd13756faa969e71990e919b9dd9056d6ea49f9599bbe", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1942 = !DILocation(line: 0, scope: !1943)
!1943 = distinct !DILexicalBlock(scope: !1941, file: !2)
!1944 = distinct !DISubprogram(name: "List_append_c6e34737223a4b123e4ef4b086ad92b3ead64b519536ae28b552b4718b7124e", linkageName: "List_append_c6e34737223a4b123e4ef4b086ad92b3ead64b519536ae28b552b4718b7124e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1945 = !DILocation(line: 0, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1944, file: !2)
!1947 = distinct !DISubprogram(name: "Dict_findSecondUnroll_d52f8c3ecf2e209e81e04dd415745749206b773d86c4d1b2bb2d3d8e8890c", linkageName: "Dict_findSecondUnroll_d52f8c3ecf2e209e81e04dd415745749206b773d86c4d1b2bb2d3d8e8890c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1948 = !DILocation(line: 0, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1947, file: !2)
!1950 = distinct !DISubprogram(name: "List_walk_bad96aa871ccf5b068b2a1da7544fd3d07a932588efb92244e692b8beda99ce", linkageName: "List_walk_bad96aa871ccf5b068b2a1da7544fd3d07a932588efb92244e692b8beda99ce", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1951 = !DILocation(line: 0, scope: !1952)
!1952 = distinct !DILexicalBlock(scope: !1950, file: !2)
!1953 = distinct !DISubprogram(name: "List_prepend_2e45b2d470bcdecd31941dc520a178647d478d5729df14ff06c26a7bd3b4", linkageName: "List_prepend_2e45b2d470bcdecd31941dc520a178647d478d5729df14ff06c26a7bd3b4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1954 = !DILocation(line: 0, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1953, file: !2)
!1956 = !{!1957}
!1957 = distinct !{!1957, !1958, !"roc_builtins.list.prepend: argument 0"}
!1958 = distinct !{!1958, !"roc_builtins.list.prepend"}
!1959 = !{!1960, !1957}
!1960 = distinct !{!1960, !1961, !"roc_builtins.list.reserve: argument 0"}
!1961 = distinct !{!1961, !"roc_builtins.list.reserve"}
!1962 = !{!1963}
!1963 = distinct !{!1963, !1964, !"list.RocList.reallocate: argument 0"}
!1964 = distinct !{!1964, !"list.RocList.reallocate"}
!1965 = !{!1963, !1960, !1957}
!1966 = !{!1967, !1963, !1960, !1957}
!1967 = distinct !{!1967, !1968, !"list.RocList.allocate: argument 0"}
!1968 = distinct !{!1968, !"list.RocList.allocate"}
!1969 = !{!1970, !1972, !1963, !1960, !1957}
!1970 = distinct !{!1970, !1971, !"list.RocList.allocate: argument 0"}
!1971 = distinct !{!1971, !"list.RocList.allocate"}
!1972 = distinct !{!1972, !1973, !"list.RocList.reallocateFresh: argument 0"}
!1973 = distinct !{!1973, !"list.RocList.reallocateFresh"}
!1974 = !{!1972, !1963, !1960, !1957}
!1975 = distinct !{!1975, !23, !24}
!1976 = distinct !{!1976, !23, !24}
!1977 = distinct !{!1977, !9}
!1978 = distinct !{!1978, !23}
!1979 = !DILocation(line: 0, scope: !1980, inlinedAt: !1982)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !2)
!1981 = distinct !DISubprogram(name: "#Attr_#generic_copy_by_ref_5", linkageName: "#Attr_#generic_copy_by_ref_5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1982 = distinct !DILocation(line: 0, scope: !1955)
!1983 = distinct !DISubprogram(name: "Parser_183_70af681fdccad07396627fdeeca8661cb958bb2b9c24b8d15dd47fc87a17", linkageName: "Parser_183_70af681fdccad07396627fdeeca8661cb958bb2b9c24b8d15dd47fc87a17", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1984 = !DILocation(line: 0, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1983, file: !2)
!1986 = distinct !DISubprogram(name: "Five_53_b9ee46417ee03e3b7a521bca8ecd1f011217aed1144f9af6d34990efa857", linkageName: "Five_53_b9ee46417ee03e3b7a521bca8ecd1f011217aed1144f9af6d34990efa857", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1987 = !DILocation(line: 0, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1986, file: !2)
!1989 = distinct !DISubprogram(name: "Task_38_de9272725995dfe27820e1ab4317eddb95d1f4a0c9c3bf59609e9c2d44531d9", linkageName: "Task_38_de9272725995dfe27820e1ab4317eddb95d1f4a0c9c3bf59609e9c2d44531d9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1990 = !DILocation(line: 0, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1989, file: !2)
!1992 = distinct !DISubprogram(name: "Num_toU64_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec", linkageName: "Num_toU64_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1993 = !DILocation(line: 0, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1992, file: !2)
!1995 = distinct !DISubprogram(name: "Bool_true_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb", linkageName: "Bool_true_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1996 = !DILocation(line: 0, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1995, file: !2)
!1998 = distinct !DISubprogram(name: "Five_parse_948cbc893ad2e9e9db3382c9118cbc164b0518b3fcc801f46e0358a7a4c131a", linkageName: "Five_parse_948cbc893ad2e9e9db3382c9118cbc164b0518b3fcc801f46e0358a7a4c131a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!1999 = !DILocation(line: 0, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1998, file: !2)
!2001 = distinct !DISubprogram(name: "Dict_maxSize_aafde219d9d91ee7a575a5efa6c6154f3d42c85beb7780b41b4510548f4aaf", linkageName: "Dict_maxSize_aafde219d9d91ee7a575a5efa6c6154f3d42c85beb7780b41b4510548f4aaf", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2002 = !DILocation(line: 0, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !2001, file: !2)
!2004 = distinct !DISubprogram(name: "Five_24_a4a483ebb43561411945778d8122531e5e9328de7183b6cc1472f5ba35d5757f", linkageName: "Five_24_a4a483ebb43561411945778d8122531e5e9328de7183b6cc1472f5ba35d5757f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2005 = !DILocation(line: 0, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !2004, file: !2)
!2007 = distinct !DISubprogram(name: "Dict_findHelper_8256d790c99390129cd6628d4d43bc44f55cfb83af722d8248666b192be24d65", linkageName: "Dict_findHelper_8256d790c99390129cd6628d4d43bc44f55cfb83af722d8248666b192be24d65", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2008 = !DILocation(line: 0, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !2007, file: !2)
!2010 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_dd6ee582294ef21ddfbf34ee1f32fb2fbc1e46a8978ff17f23e47debd1261", linkageName: "Parser_buildPrimitiveParser_dd6ee582294ef21ddfbf34ee1f32fb2fbc1e46a8978ff17f23e47debd1261", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2011 = !DILocation(line: 0, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !2010, file: !2)
!2013 = distinct !DISubprogram(name: "Dict_findManualUnrolls_e4a1eb19d38152fc193a183edc36566d275fa494bf9c69e26c29c318cc289d0", linkageName: "Dict_findManualUnrolls_e4a1eb19d38152fc193a183edc36566d275fa494bf9c69e26c29c318cc289d0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2014 = !DILocation(line: 0, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !2013, file: !2)
!2016 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_d5b8bdabf937f1b324ab1a7fd2db2d1d7cbe728df69545a5a26587658d3e", linkageName: "Parser_buildPrimitiveParser_d5b8bdabf937f1b324ab1a7fd2db2d1d7cbe728df69545a5a26587658d3e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2017 = !DILocation(line: 0, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2016, file: !2)
!2019 = distinct !DISubprogram(name: "Dict_wymum_7f1997f7fb10ed4c657c136e5122e9272dd2d211216c39a3c7723555eefc6", linkageName: "Dict_wymum_7f1997f7fb10ed4c657c136e5122e9272dd2d211216c39a3c7723555eefc6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2020 = !DILocation(line: 0, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !2019, file: !2)
!2022 = distinct !DISubprogram(name: "Parser_apply_fe8059764c3d3277792adee58d94327ddbfcdfb8819194d0a9963ace709cac", linkageName: "Parser_apply_fe8059764c3d3277792adee58d94327ddbfcdfb8819194d0a9963ace709cac", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2023 = !DILocation(line: 0, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !2022, file: !2)
!2025 = distinct !DISubprogram(name: "Stderr_line_14fdf5b3fdc309431c2b7140ab94179571c4afec1ebe5d643526dfbc8edb8", linkageName: "Stderr_line_14fdf5b3fdc309431c2b7140ab94179571c4afec1ebe5d643526dfbc8edb8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2026 = !DILocation(line: 0, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2025, file: !2)
!2028 = distinct !DISubprogram(name: "Dict_removeBucket_7ceb2e607d153edd175217b82e8ded113c6e4df27e27777d9f9694c716aa427", linkageName: "Dict_removeBucket_7ceb2e607d153edd175217b82e8ded113c6e4df27e27777d9f9694c716aa427", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2029 = !DILocation(line: 0, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2028, file: !2)
!2031 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_f358c4a3de19e7c0fa39cb3c4512dac774156297de23d2195f2c8666513f74f5", linkageName: "Parser_buildPrimitiveParser_f358c4a3de19e7c0fa39cb3c4512dac774156297de23d2195f2c8666513f74f5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2032 = !DILocation(line: 0, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2031, file: !2)
!2034 = distinct !DISubprogram(name: "List_repeatHelp_4d841bd57979ccceddece07dcf2dbc9edd3191f365637aa1e5efefa18c6c7ca3", linkageName: "List_repeatHelp_4d841bd57979ccceddece07dcf2dbc9edd3191f365637aa1e5efefa18c6c7ca3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2035 = !DILocation(line: 0, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2034, file: !2)
!2037 = distinct !DISubprogram(name: "Num_add_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47", linkageName: "Num_add_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2038 = !DILocation(line: 0, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2037, file: !2)
!2040 = distinct !DISubprogram(name: "Task_67_fb7c2192380c0c9e4a26882f3783715efdcc3612b1649776eef2a3de1c92b6", linkageName: "Task_67_fb7c2192380c0c9e4a26882f3783715efdcc3612b1649776eef2a3de1c92b6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2041 = !DILocation(line: 0, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2040, file: !2)
!2043 = distinct !DISubprogram(name: "List_walkHelp_c162bfc0bd74c841e2898960cc4e5160ab1032997985dd3fe7da33cf844631d", linkageName: "List_walkHelp_c162bfc0bd74c841e2898960cc4e5160ab1032997985dd3fe7da33cf844631d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2044 = !DILocation(line: 0, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !2043, file: !2)
!2046 = distinct !DISubprogram(name: "Num_subWrap_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f", linkageName: "Num_subWrap_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2047 = !DILocation(line: 0, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2046, file: !2)
!2049 = distinct !DISubprogram(name: "Num_shiftRightZfBy_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9", linkageName: "Num_shiftRightZfBy_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2050 = !DILocation(line: 0, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !2049, file: !2)
!2052 = distinct !DISubprogram(name: "Inspect_apply_5512121a7725d673ec2434eca2a3826afdb8ac0e342375ef02fbd7eef1f863d", linkageName: "Inspect_apply_5512121a7725d673ec2434eca2a3826afdb8ac0e342375ef02fbd7eef1f863d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2053 = !DILocation(line: 0, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2052, file: !2)
!2055 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_95d7497c4315cb52c9f61cf3c56d444562a459feea2abf1096ed68d018d867e", linkageName: "Parser_buildPrimitiveParser_95d7497c4315cb52c9f61cf3c56d444562a459feea2abf1096ed68d018d867e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2056 = !DILocation(line: 0, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2055, file: !2)
!2058 = distinct !DISubprogram(name: "Task_err_16c9acb11420bb4864958cb65deec56be7d76275852725d2b6cfa6b292a31ee8", linkageName: "Task_err_16c9acb11420bb4864958cb65deec56be7d76275852725d2b6cfa6b292a31ee8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2059 = !DILocation(line: 0, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2058, file: !2)
!2061 = distinct !DISubprogram(name: "List_walk_1971ed175c5339d8a493ee2a719f3ca8f50fbcc2a26feaf7b54a27898e3f", linkageName: "List_walk_1971ed175c5339d8a493ee2a719f3ca8f50fbcc2a26feaf7b54a27898e3f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2062 = !DILocation(line: 0, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2061, file: !2)
!2064 = distinct !DISubprogram(name: "_mainForHost_8ea48f352d7289114fe202e56461de528fa632d8a6cda9163cba5554b08a8b", linkageName: "_mainForHost_8ea48f352d7289114fe202e56461de528fa632d8a6cda9163cba5554b08a8b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2065 = !DILocation(line: 0, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2064, file: !2)
!2067 = distinct !DISubprogram(name: "roc__mainForHost_1_exposed_generic", linkageName: "roc__mainForHost_1_exposed_generic", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2068 = !DILocation(line: 0, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2067, file: !2)
!2070 = distinct !DISubprogram(name: "roc__mainForHost_1_exposed", linkageName: "roc__mainForHost_1_exposed", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2071 = !DILocation(line: 0, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2070, file: !2)
!2073 = distinct !DISubprogram(name: "roc__mainForHost_1_exposed_size", linkageName: "roc__mainForHost_1_exposed_size", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2074 = !DILocation(line: 0, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !2073, file: !2)
!2076 = distinct !DISubprogram(name: "Parser_153_b48ea28ed2a1db4f94b775904dbb14352478e946b403cf7699dfabdbbc69", linkageName: "Parser_153_b48ea28ed2a1db4f94b775904dbb14352478e946b403cf7699dfabdbbc69", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2077 = !DILocation(line: 0, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2076, file: !2)
!2079 = distinct !DISubprogram(name: "Parser_parsePartial_d99c5b857e1e627fe47b03e2843c56aca18cc3e74317b1d10963dd817a09223", linkageName: "Parser_parsePartial_d99c5b857e1e627fe47b03e2843c56aca18cc3e74317b1d10963dd817a09223", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2080 = !DILocation(line: 0, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2079, file: !2)
!2082 = distinct !DISubprogram(name: "Parser_many_4c8db17447f5ee4913514dace945a8e11b844b4a7884df53b6c87efb365543a", linkageName: "Parser_many_4c8db17447f5ee4913514dace945a8e11b844b4a7884df53b6c87efb365543a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2083 = !DILocation(line: 0, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !2082, file: !2)
!2085 = distinct !DISubprogram(name: "Inspect_206_74d4d8669aea9ec1d19e8f3c791dcea19b8424ea6a5e4fbb108785fcac76377c", linkageName: "Inspect_206_74d4d8669aea9ec1d19e8f3c791dcea19b8424ea6a5e4fbb108785fcac76377c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2086 = !DILocation(line: 0, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !2085, file: !2)
!2088 = distinct !DISubprogram(name: "Path_fromStr_e45cf9a3784986d64cd036e55da6ecf25b91edcd97641716b0deb67be819c15d", linkageName: "Path_fromStr_e45cf9a3784986d64cd036e55da6ecf25b91edcd97641716b0deb67be819c15d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2089 = !DILocation(line: 0, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !2088, file: !2)
!2091 = distinct !DISubprogram(name: "Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c", linkageName: "Inspect_dbgTag_95a6ad2ed3f323d27de6f48ff26648afa76639618feb6d8e85ad195ab55be7c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2092 = !DILocation(line: 0, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2091, file: !2)
!2094 = distinct !DISubprogram(name: "Parser_parsePartial_958eceff2afa82341097489757d62cb36e8ffccfc62ad546b1a925d35c25", linkageName: "Parser_parsePartial_958eceff2afa82341097489757d62cb36e8ffccfc62ad546b1a925d35c25", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2095 = !DILocation(line: 0, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2094, file: !2)
!2097 = distinct !DISubprogram(name: "Inspect_custom_f54bf42ab68abdbc6cec3fcfe3fd2589687a3397b6fa7b5f54277bf93e522663", linkageName: "Inspect_custom_f54bf42ab68abdbc6cec3fcfe3fd2589687a3397b6fa7b5f54277bf93e522663", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2098 = !DILocation(line: 0, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !2097, file: !2)
!2100 = distinct !DISubprogram(name: "List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1", linkageName: "List_set_1fee66ad667b912c4d10ada5f77fb9e8b2dfe9a4124f957b34ae7bc684ecaf1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2101 = !DILocation(line: 0, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2100, file: !2)
!2103 = distinct !DISubprogram(name: "Num_mulWrap_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9", linkageName: "Num_mulWrap_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2104 = !DILocation(line: 0, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2103, file: !2)
!2106 = distinct !DISubprogram(name: "String_utf8_cda5515bdfb774a8a73a1987c442daa5c0626be61cb25c91fd79ef75941318bb", linkageName: "String_utf8_cda5515bdfb774a8a73a1987c442daa5c0626be61cb25c91fd79ef75941318bb", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2107 = !DILocation(line: 0, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2106, file: !2)
!2109 = distinct !DISubprogram(name: "Task_67_ca9484d16885615abec85a8bbeed1aba2dde9d4a1e48c95ddbf53ade4ab565", linkageName: "Task_67_ca9484d16885615abec85a8bbeed1aba2dde9d4a1e48c95ddbf53ade4ab565", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2110 = !DILocation(line: 0, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2109, file: !2)
!2112 = distinct !DISubprogram(name: "List_set_13b85edde3cd334a6265af1614664111ffe13ba3b2be97d0f8e38d9c799cb7", linkageName: "List_set_13b85edde3cd334a6265af1614664111ffe13ba3b2be97d0f8e38d9c799cb7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2113 = !DILocation(line: 0, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2112, file: !2)
!2115 = distinct !DISubprogram(name: "Five_dayFive_2556ec2f505cf782dddbd25f753352aee08d91b5408c3986338c6065cf71ed3", linkageName: "Five_dayFive_2556ec2f505cf782dddbd25f753352aee08d91b5408c3986338c6065cf71ed3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2116 = !DILocation(line: 0, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2115, file: !2)
!2118 = distinct !DISubprogram(name: "Dict_wyp0_431d23493ce857ef909e5d189b015e7f4c0aa8086605349b0c3dca4fa76a087", linkageName: "Dict_wyp0_431d23493ce857ef909e5d189b015e7f4c0aa8086605349b0c3dca4fa76a087", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2119 = !DILocation(line: 0, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2118, file: !2)
!2121 = distinct !DISubprogram(name: "List_getUnsafe_48c2caee6f1010356bbec8845a6ee45f2928c63eece16acf25dc3f84dc5f6", linkageName: "List_getUnsafe_48c2caee6f1010356bbec8845a6ee45f2928c63eece16acf25dc3f84dc5f6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2122 = !DILocation(line: 0, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2121, file: !2)
!2124 = distinct !DISubprogram(name: "Num_sub_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198", linkageName: "Num_sub_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2125 = !DILocation(line: 0, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2124, file: !2)
!2127 = distinct !DISubprogram(name: "Parser_const_683fc8c1ba6a475a9c83ff66517952bb4de5a8bf7535b7576b5b57adabe56d", linkageName: "Parser_const_683fc8c1ba6a475a9c83ff66517952bb4de5a8bf7535b7576b5b57adabe56d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2128 = !DILocation(line: 0, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !2127, file: !2)
!2130 = distinct !DISubprogram(name: "List_appendUnsafe_ea724491503a37367f3396489f19ddb4ed26c1b122d1bb85553bb555a0a4d", linkageName: "List_appendUnsafe_ea724491503a37367f3396489f19ddb4ed26c1b122d1bb85553bb555a0a4d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2131 = !DILocation(line: 0, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2130, file: !2)
!2133 = !{!2134}
!2134 = distinct !{!2134, !2135, !"roc_builtins.list.append_unsafe: argument 0"}
!2135 = distinct !{!2135, !"roc_builtins.list.append_unsafe"}
!2136 = !DILocation(line: 0, scope: !851, inlinedAt: !2137)
!2137 = distinct !DILocation(line: 0, scope: !2132)
!2138 = distinct !DISubprogram(name: "Num_shiftLeftBy_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5", linkageName: "Num_shiftLeftBy_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2139 = !DILocation(line: 0, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2138, file: !2)
!2141 = distinct !DISubprogram(name: "Dict_len_4bc296458c9e4dfa311cb236c399bfa4fbaacf1f1ce0be5dc9b3fb0e57fbf5", linkageName: "Dict_len_4bc296458c9e4dfa311cb236c399bfa4fbaacf1f1ce0be5dc9b3fb0e57fbf5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2142 = !DILocation(line: 0, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2141, file: !2)
!2144 = distinct !DISubprogram(name: "Five_28_e8771868ae99ea9f746cb8aefe69898fb7e1703aac58e3bf6a66301caf8231b4", linkageName: "Five_28_e8771868ae99ea9f746cb8aefe69898fb7e1703aac58e3bf6a66301caf8231b4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2145 = !DILocation(line: 0, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2144, file: !2)
!2147 = distinct !DISubprogram(name: "Task_46_8772af6a619429ec17c278ae96358a9a7790e4d8ec89ec82b96d22a7593d8f34", linkageName: "Task_46_8772af6a619429ec17c278ae96358a9a7790e4d8ec89ec82b96d22a7593d8f34", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2148 = !DILocation(line: 0, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2147, file: !2)
!2150 = distinct !DISubprogram(name: "List_looper_66a53c5bb7482a7975e058b703753a62aee74dcb3ed8c2fbfc227399ea738e", linkageName: "List_looper_66a53c5bb7482a7975e058b703753a62aee74dcb3ed8c2fbfc227399ea738e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2151 = !DILocation(line: 0, scope: !2152)
!2152 = distinct !DILexicalBlock(scope: !2150, file: !2)
!2153 = distinct !DISubprogram(name: "Bool_structuralEq_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c", linkageName: "Bool_structuralEq_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2154 = !DILocation(line: 0, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2153, file: !2)
!2156 = distinct !DISubprogram(name: "Parser_82_32ac2f866d693a9e245dc0cc93bb33a0eabe86458e24b9768b741d954033ef", linkageName: "Parser_82_32ac2f866d693a9e245dc0cc93bb33a0eabe86458e24b9768b741d954033ef", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2157 = !DILocation(line: 0, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2156, file: !2)
!2159 = distinct !DISubprogram(name: "Stdout_handleErr_7b73be30696c7fe3ed242ca4629f76c2f696011d9271def91eeffdd89e9134d", linkageName: "Stdout_handleErr_7b73be30696c7fe3ed242ca4629f76c2f696011d9271def91eeffdd89e9134d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2160 = !DILocation(line: 0, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2159, file: !2)
!2162 = distinct !DISubprogram(name: "Task_mapErr_73621a7e9aaab76881ccc8710befe1fe443c7c7e83e6432dae922774dac9356", linkageName: "Task_mapErr_73621a7e9aaab76881ccc8710befe1fe443c7c7e83e6432dae922774dac9356", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2163 = !DILocation(line: 0, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2162, file: !2)
!2165 = distinct !DISubprogram(name: "Str_matchesAt_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c", linkageName: "Str_matchesAt_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2166 = !DILocation(line: 0, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2165, file: !2)
!2168 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_4bdcaf358a8d8579de541c9a8519b524d738fe234c73365eb7bb10a67d5b", linkageName: "Parser_buildPrimitiveParser_4bdcaf358a8d8579de541c9a8519b524d738fe234c73365eb7bb10a67d5b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2169 = !DILocation(line: 0, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2168, file: !2)
!2171 = distinct !DISubprogram(name: "List_454_b6812cd4831336785c4d2d6d371d74081a04d666ecb415ede62b278451858a9", linkageName: "List_454_b6812cd4831336785c4d2d6d371d74081a04d666ecb415ede62b278451858a9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2172 = !DILocation(line: 0, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2171, file: !2)
!2174 = distinct !DISubprogram(name: "List_contains_9b7306a2e571f3d11e34b901a57455c3e32e69a2f8fde813ed1c4300e12712", linkageName: "List_contains_9b7306a2e571f3d11e34b901a57455c3e32e69a2f8fde813ed1c4300e12712", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2175 = !DILocation(line: 0, scope: !2176)
!2176 = distinct !DILexicalBlock(scope: !2174, file: !2)
!2177 = distinct !DISubprogram(name: "Parser_many_6a4f46ee87733c8ba3849fbe22c6c5fd6183935ace5f43ae75a260d6d9", linkageName: "Parser_many_6a4f46ee87733c8ba3849fbe22c6c5fd6183935ace5f43ae75a260d6d9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2178 = !DILocation(line: 0, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2177, file: !2)
!2180 = distinct !DISubprogram(name: "Str_min_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8", linkageName: "Str_min_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2181 = !DILocation(line: 0, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2180, file: !2)
!2183 = distinct !DISubprogram(name: "Parser_combined_f446d5af246aa5183eb4a09cd57fa3ea76a8dcb6485754c231e81a751e2d1b", linkageName: "Parser_combined_f446d5af246aa5183eb4a09cd57fa3ea76a8dcb6485754c231e81a751e2d1b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2184 = !DILocation(line: 0, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2183, file: !2)
!2186 = distinct !DISubprogram(name: "Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189", linkageName: "Num_toU32_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2187 = !DILocation(line: 0, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2186, file: !2)
!2189 = distinct !DISubprogram(name: "Parser_manyImpl_b33a35188f4996a49ae9457b7b56b76f0e032371dbd4bd99b86def972ef40", linkageName: "Parser_manyImpl_b33a35188f4996a49ae9457b7b56b76f0e032371dbd4bd99b86def972ef40", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2190 = !DILocation(line: 0, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2189, file: !2)
!2192 = distinct !DISubprogram(name: "Dict_insertHelper_b57223634213b1c687e1cf06fef47be7eed4c64d12c154ffb6abc557b2b473", linkageName: "Dict_insertHelper_b57223634213b1c687e1cf06fef47be7eed4c64d12c154ffb6abc557b2b473", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2193 = !DILocation(line: 0, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2192, file: !2)
!2195 = distinct !DISubprogram(name: "Five_32_6bbcde7d41792fbe845f8bf74275dc12b5fcae37f4d24f0ea64b1f14c552a", linkageName: "Five_32_6bbcde7d41792fbe845f8bf74275dc12b5fcae37f4d24f0ea64b1f14c552a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2196 = !DILocation(line: 0, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2195, file: !2)
!2198 = distinct !DISubprogram(name: "Str_substringUnsafe_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61", linkageName: "Str_substringUnsafe_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2199 = !DILocation(line: 0, scope: !2200)
!2200 = distinct !DILexicalBlock(scope: !2198, file: !2)
!2201 = distinct !DISubprogram(name: "Parser_52_a17e6e9772c93366d74c78ae4861b6e90ec7dc88cf5c811d750abdb7591c0", linkageName: "Parser_52_a17e6e9772c93366d74c78ae4861b6e90ec7dc88cf5c811d750abdb7591c0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2202 = !DILocation(line: 0, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2201, file: !2)
!2204 = distinct !DISubprogram(name: "List_looper_61e5a13d423d566ac5e547894554a8bcf8bc44e60405c767b71c7c83a1e2c55", linkageName: "List_looper_61e5a13d423d566ac5e547894554a8bcf8bc44e60405c767b71c7c83a1e2c55", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2205 = !DILocation(line: 0, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2204, file: !2)
!2207 = distinct !DISubprogram(name: "Parser_200_ae34dcb56c8c3134c426993589829c91bf4dcc21e6be643466888bcbe12", linkageName: "Parser_200_ae34dcb56c8c3134c426993589829c91bf4dcc21e6be643466888bcbe12", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2208 = !DILocation(line: 0, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2207, file: !2)
!2210 = distinct !DISubprogram(name: "Inspect_toStr_4ece9a43d31aae54b519b59b311d38f02e11acf9efbec0b25f6f665cea59d6", linkageName: "Inspect_toStr_4ece9a43d31aae54b519b59b311d38f02e11acf9efbec0b25f6f665cea59d6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2211 = !DILocation(line: 0, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2210, file: !2)
!2213 = distinct !DISubprogram(name: "List_keepOks_9cc9ac536c41c72f38d2273c43b034822641cbb47ea8853416c10d132561319", linkageName: "List_keepOks_9cc9ac536c41c72f38d2273c43b034822641cbb47ea8853416c10d132561319", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2214 = !DILocation(line: 0, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2213, file: !2)
!2216 = distinct !DISubprogram(name: "Result_withDefault_f411d2d207cb75ff49124b128ee5a4cdec2daf8d1cf0a733c3c7d426729b6b", linkageName: "Result_withDefault_f411d2d207cb75ff49124b128ee5a4cdec2daf8d1cf0a733c3c7d426729b6b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2217 = !DILocation(line: 0, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2216, file: !2)
!2219 = distinct !DISubprogram(name: "Result_try_56ecce6137ef1a8b7fa2d1462a14bcff563458ace807157c68c36b8f837c2", linkageName: "Result_try_56ecce6137ef1a8b7fa2d1462a14bcff563458ace807157c68c36b8f837c2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2220 = !DILocation(line: 0, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2219, file: !2)
!2222 = distinct !DISubprogram(name: "Parser_77_f56f6119e9554182ffe75b2428322517743b970c74fbeadd77e7ab7e459b8a", linkageName: "Parser_77_f56f6119e9554182ffe75b2428322517743b970c74fbeadd77e7ab7e459b8a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2223 = !DILocation(line: 0, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2222, file: !2)
!2225 = distinct !DISubprogram(name: "List_iterate_789661f33c6ea1791479ecf1f52dd93e21b779364a5197d9de3459113903b9c", linkageName: "List_iterate_789661f33c6ea1791479ecf1f52dd93e21b779364a5197d9de3459113903b9c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2226 = !DILocation(line: 0, scope: !2227)
!2227 = distinct !DILexicalBlock(scope: !2225, file: !2)
!2228 = distinct !DISubprogram(name: "List_walkWithIndex_260dec8de9897e99a5126b882cbb9d2ee2f32cd2b94c727fdd1aa87e467d", linkageName: "List_walkWithIndex_260dec8de9897e99a5126b882cbb9d2ee2f32cd2b94c727fdd1aa87e467d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2229 = !DILocation(line: 0, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2228, file: !2)
!2231 = distinct !DISubprogram(name: "Result_map_146823d2bf8fc0c097442048ad932e5338966c8ef5244f2d062b7bbb52d84c7", linkageName: "Result_map_146823d2bf8fc0c097442048ad932e5338966c8ef5244f2d062b7bbb52d84c7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2232 = !DILocation(line: 0, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2231, file: !2)
!2234 = distinct !DISubprogram(name: "Task_73_be4396db39a6441d11b625a7a53631db3ec9114c882a8283cb22efe73f3af1", linkageName: "Task_73_be4396db39a6441d11b625a7a53631db3ec9114c882a8283cb22efe73f3af1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2235 = !DILocation(line: 0, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2234, file: !2)
!2237 = distinct !DISubprogram(name: "Inspect_dbgOpaque_8c1617b15deb6ada44e946aaf6d7a26f7b79d7376d5dbac46f3b7284463ec6c", linkageName: "Inspect_dbgOpaque_8c1617b15deb6ada44e946aaf6d7a26f7b79d7376d5dbac46f3b7284463ec6c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2238 = !DILocation(line: 0, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2237, file: !2)
!2240 = distinct !DISubprogram(name: "Task_onErr_9f3a262f8e9b981e8332887395f1a5ea4152740aaffa2174fd0379ce27d", linkageName: "Task_onErr_9f3a262f8e9b981e8332887395f1a5ea4152740aaffa2174fd0379ce27d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2241 = !DILocation(line: 0, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2240, file: !2)
!2243 = distinct !DISubprogram(name: "Num_toU128_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e", linkageName: "Num_toU128_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2244 = !DILocation(line: 0, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2243, file: !2)
!2246 = distinct !DISubprogram(name: "PlatformTasks_stdoutLine_abd3f25d72523f289bd425f520c9e8c780b1b6123fca48b121ea6d118bfcfeae", linkageName: "PlatformTasks_stdoutLine_abd3f25d72523f289bd425f520c9e8c780b1b6123fca48b121ea6d118bfcfeae", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2247 = !DILocation(line: 0, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2246, file: !2)
!2249 = distinct !DISubprogram(name: "Task_await_68e2b08bd9d52962419b34161d37629bb39ebdc1099601d1d619dcfa78361", linkageName: "Task_await_68e2b08bd9d52962419b34161d37629bb39ebdc1099601d1d619dcfa78361", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2250 = !DILocation(line: 0, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2249, file: !2)
!2252 = distinct !DISubprogram(name: "Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7", linkageName: "Inspect_dbgTag_4e13f3265e5434ea1dbf922fb265fb53aa58654e296398e69eea1703fc7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2253 = !DILocation(line: 0, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !2252, file: !2)
!2255 = distinct !DISubprogram(name: "List_walkHelp_9c59e7328dd8975131b4ecbb517752a19f98ddf8f39456448f3da8e957ece54", linkageName: "List_walkHelp_9c59e7328dd8975131b4ecbb517752a19f98ddf8f39456448f3da8e957ece54", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2256 = !DILocation(line: 0, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2255, file: !2)
!2258 = distinct !DISubprogram(name: "Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac", linkageName: "Num_isLt_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2259 = !DILocation(line: 0, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2258, file: !2)
!2261 = distinct !DISubprogram(name: "Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6", linkageName: "Inspect_dbgWrite_eb18445a58e91998653bdde9d05b524964b9df7c3e080edee35684cc490e4a6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2262 = !DILocation(line: 0, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2261, file: !2)
!2264 = distinct !DISubprogram(name: "Inspect_inspect_a6f9d2e440a05a8ff775b9c79f73de5b7f11f651fe1ab65164a352a63f168", linkageName: "Inspect_inspect_a6f9d2e440a05a8ff775b9c79f73de5b7f11f651fe1ab65164a352a63f168", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2265 = !DILocation(line: 0, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2264, file: !2)
!2267 = distinct !DISubprogram(name: "Inspect_206_5d11bf8fbc5bb94b04bedc4d418285061b56327f19ab74e865c9339638a2", linkageName: "Inspect_206_5d11bf8fbc5bb94b04bedc4d418285061b56327f19ab74e865c9339638a2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2268 = !DILocation(line: 0, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2267, file: !2)
!2270 = distinct !DISubprogram(name: "Parser_skip_138ea5ad6c7ff33732a5a5a68f02ff094d89c5919c0c657b74d18468aec6eb", linkageName: "Parser_skip_138ea5ad6c7ff33732a5a5a68f02ff094d89c5919c0c657b74d18468aec6eb", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2271 = !DILocation(line: 0, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2270, file: !2)
!2273 = distinct !DISubprogram(name: "List_sortWith_49cb6ad1f356dc514791c661f63f6841479dc80eaa158e38e2871686552", linkageName: "List_sortWith_49cb6ad1f356dc514791c661f63f6841479dc80eaa158e38e2871686552", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2274 = !DILocation(line: 0, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2273, file: !2)
!2276 = !{!2277}
!2277 = distinct !{!2277, !2278, !"roc_builtins.list.sort_with: argument 0"}
!2278 = distinct !{!2278, !"roc_builtins.list.sort_with"}
!2279 = !{!2280}
!2280 = distinct !{!2280, !2281, !"list.RocList.makeUnique: argument 0"}
!2281 = distinct !{!2281, !"list.RocList.makeUnique"}
!2282 = !{!2280, !2277}
!2283 = !{!2284, !2280, !2277}
!2284 = distinct !{!2284, !2285, !"list.RocList.allocate: argument 0"}
!2285 = distinct !{!2285, !"list.RocList.allocate"}
!2286 = distinct !DISubprogram(name: "Num_subSaturated_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd", linkageName: "Num_subSaturated_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2287 = !DILocation(line: 0, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2286, file: !2)
!2289 = distinct !DISubprogram(name: "Num_isZero_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a", linkageName: "Num_isZero_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2290 = !DILocation(line: 0, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2289, file: !2)
!2292 = distinct !DISubprogram(name: "List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7", linkageName: "List_len_618af7379dc962a8e685497132e67d82737289278bf8d7fadc9a49f2d03ce7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2293 = !DILocation(line: 0, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2292, file: !2)
!2295 = distinct !DISubprogram(name: "Parser_const_887e5dbc5a127aeaabd14b2c267e70aea22136a56417cf32167bf9c4f523df7c", linkageName: "Parser_const_887e5dbc5a127aeaabd14b2c267e70aea22136a56417cf32167bf9c4f523df7c", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2296 = !DILocation(line: 0, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2295, file: !2)
!2298 = distinct !DISubprogram(name: "List_walk_8445464738218c426e3b841f28ede2879d4391e6c33df6a616e872e199e47e", linkageName: "List_walk_8445464738218c426e3b841f28ede2879d4391e6c33df6a616e872e199e47e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2299 = !DILocation(line: 0, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2298, file: !2)
!2301 = distinct !DISubprogram(name: "String_string_dd534565178f1d68b111fdc2e326a0805311eecf8c9a1da323c0af98ffe3", linkageName: "String_string_dd534565178f1d68b111fdc2e326a0805311eecf8c9a1da323c0af98ffe3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2302 = !DILocation(line: 0, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2301, file: !2)
!2304 = distinct !DISubprogram(name: "Num_toU64_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e", linkageName: "Num_toU64_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2305 = !DILocation(line: 0, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2304, file: !2)
!2307 = distinct !DISubprogram(name: "List_reserve_af58df284beb8fc541e167d520a5c53bd3e05fcd2fb56799b9aee4cfc3ed3f", linkageName: "List_reserve_af58df284beb8fc541e167d520a5c53bd3e05fcd2fb56799b9aee4cfc3ed3f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2308 = !DILocation(line: 0, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2307, file: !2)
!2310 = !{!2311}
!2311 = distinct !{!2311, !2312, !"roc_builtins.list.reserve: argument 0"}
!2312 = distinct !{!2312, !"roc_builtins.list.reserve"}
!2313 = !{!2314}
!2314 = distinct !{!2314, !2315, !"list.RocList.reallocate: argument 0"}
!2315 = distinct !{!2315, !"list.RocList.reallocate"}
!2316 = !{!2314, !2311}
!2317 = !{!2318, !2314, !2311}
!2318 = distinct !{!2318, !2319, !"list.RocList.allocate: argument 0"}
!2319 = distinct !{!2319, !"list.RocList.allocate"}
!2320 = !{!2321, !2323, !2314, !2311}
!2321 = distinct !{!2321, !2322, !"list.RocList.allocate: argument 0"}
!2322 = distinct !{!2322, !"list.RocList.allocate"}
!2323 = distinct !{!2323, !2324, !"list.RocList.reallocateFresh: argument 0"}
!2324 = distinct !{!2324, !"list.RocList.reallocateFresh"}
!2325 = !{!2323, !2314, !2311}
!2326 = !DILocation(line: 0, scope: !885, inlinedAt: !2327)
!2327 = distinct !DILocation(line: 0, scope: !2309)
!2328 = distinct !DISubprogram(name: "Inspect_custom_4f0c3ffeaf2618fe6c22c9b81e4cd03dd527d786a9b7fcb5f645d1f7239bd5", linkageName: "Inspect_custom_4f0c3ffeaf2618fe6c22c9b81e4cd03dd527d786a9b7fcb5f645d1f7239bd5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2329 = !DILocation(line: 0, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2328, file: !2)
!2331 = distinct !DISubprogram(name: "Dict_213_5d5899d97eec8f628ea2a69ef616fa6c36bb808ec07e672cff8f94c1b6c031da", linkageName: "Dict_213_5d5899d97eec8f628ea2a69ef616fa6c36bb808ec07e672cff8f94c1b6c031da", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2332 = !DILocation(line: 0, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2331, file: !2)
!2334 = distinct !DISubprogram(name: "List_withCapacity_4bd18bc73cee8d6c664141b2e49674ebb21216aa20f0f89293181ce7b14e", linkageName: "List_withCapacity_4bd18bc73cee8d6c664141b2e49674ebb21216aa20f0f89293181ce7b14e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2335 = !{!2336}
!2336 = distinct !{!2336, !2337, !"roc_builtins.list.with_capacity: argument 0"}
!2337 = distinct !{!2337, !"roc_builtins.list.with_capacity"}
!2338 = !DILocation(line: 0, scope: !2339)
!2339 = distinct !DILexicalBlock(scope: !2334, file: !2)
!2340 = !{!2341}
!2341 = distinct !{!2341, !2342, !"list.RocList.reallocate: argument 0"}
!2342 = distinct !{!2342, !"list.RocList.reallocate"}
!2343 = !{!2341, !2344, !2336}
!2344 = distinct !{!2344, !2345, !"roc_builtins.list.reserve: argument 0"}
!2345 = distinct !{!2345, !"roc_builtins.list.reserve"}
!2346 = !{!2347, !2341, !2344, !2336}
!2347 = distinct !{!2347, !2348, !"list.RocList.allocate: argument 0"}
!2348 = distinct !{!2348, !"list.RocList.allocate"}
!2349 = !{!2344, !2336}
!2350 = !{!2351, !2353, !2341, !2344, !2336}
!2351 = distinct !{!2351, !2352, !"list.RocList.allocate: argument 0"}
!2352 = distinct !{!2352, !"list.RocList.allocate"}
!2353 = distinct !{!2353, !2354, !"list.RocList.reallocateFresh: argument 0"}
!2354 = distinct !{!2354, !"list.RocList.reallocateFresh"}
!2355 = !{!2353, !2341, !2344, !2336}
!2356 = distinct !DISubprogram(name: "_7_ed66f261fc50a6eaee12f77aeb9aedefd9894b0b5b2ba1297f2d6ae1a3a6187", linkageName: "_7_ed66f261fc50a6eaee12f77aeb9aedefd9894b0b5b2ba1297f2d6ae1a3a6187", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2357 = !DILocation(line: 0, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2356, file: !2)
!2359 = distinct !DISubprogram(name: "Dict_removeBucketHelper_6e2f5c347617f02c84c4ee1199b6f064c2d91a5297c3fa525844f328c49949", linkageName: "Dict_removeBucketHelper_6e2f5c347617f02c84c4ee1199b6f064c2d91a5297c3fa525844f328c49949", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2360 = !DILocation(line: 0, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2359, file: !2)
!2362 = distinct !DISubprogram(name: "Stderr_handleErr_871e40679fd9b63791667ec6fd3e055441f4e3fe3a86a59d7afec3c654a26f4", linkageName: "Stderr_handleErr_871e40679fd9b63791667ec6fd3e055441f4e3fe3a86a59d7afec3c654a26f4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2363 = !DILocation(line: 0, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2362, file: !2)
!2365 = distinct !DISubprogram(name: "Inspect_toDbgStr_35ee554d8e8c61e817524983ec42e3202b5bcb4f401f996ce2b30cd744f8a9f", linkageName: "Inspect_toDbgStr_35ee554d8e8c61e817524983ec42e3202b5bcb4f401f996ce2b30cd744f8a9f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2366 = !DILocation(line: 0, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2365, file: !2)
!2368 = distinct !DISubprogram(name: "Inspect_dbgU64_4c76596ba8468090c17ec41cffb26165180de983edd4ec9ae381e395d43ed6", linkageName: "Inspect_dbgU64_4c76596ba8468090c17ec41cffb26165180de983edd4ec9ae381e395d43ed6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2369 = !DILocation(line: 0, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2368, file: !2)
!2371 = distinct !DISubprogram(name: "InternalPath_toBytes_a3d7eafdc270189a494a8da67ab2d44f3e57be0339c8d0479ea58f14792c5", linkageName: "InternalPath_toBytes_a3d7eafdc270189a494a8da67ab2d44f3e57be0339c8d0479ea58f14792c5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2372 = !DILocation(line: 0, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2371, file: !2)
!2374 = distinct !DISubprogram(name: "List_looper_48ef2ef1548ac84926096e9c2bcc73d52a4ed3ed12a64c12eda477d53f3", linkageName: "List_looper_48ef2ef1548ac84926096e9c2bcc73d52a4ed3ed12a64c12eda477d53f3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2375 = !DILocation(line: 0, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2374, file: !2)
!2377 = distinct !DISubprogram(name: "Parser_156_df31287a46e9ee276abe5d7212b96c65cafa585df9b2e1e4fe38d7cfb6150fa", linkageName: "Parser_156_df31287a46e9ee276abe5d7212b96c65cafa585df9b2e1e4fe38d7cfb6150fa", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2378 = !DILocation(line: 0, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2377, file: !2)
!2380 = distinct !DISubprogram(name: "Dict_insert_aacdfa21c937a3152a4c9abafa557bcab3033c1362c20c33c558b64d99d3e5", linkageName: "Dict_insert_aacdfa21c937a3152a4c9abafa557bcab3033c1362c20c33c558b64d99d3e5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2381 = !DILocation(line: 0, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2380, file: !2)
!2383 = distinct !DISubprogram(name: "Num_isGt_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b", linkageName: "Num_isGt_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2384 = !DILocation(line: 0, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2383, file: !2)
!2386 = distinct !DISubprogram(name: "Num_floor_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772", linkageName: "Num_floor_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2387 = !DILocation(line: 0, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2386, file: !2)
!2389 = distinct !DISubprogram(name: "Inspect_213_8c1982946d7d4cf533b8ffebd7c5ff61adefe5eeb6d572d7069add06e229552", linkageName: "Inspect_213_8c1982946d7d4cf533b8ffebd7c5ff61adefe5eeb6d572d7069add06e229552", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2390 = !DILocation(line: 0, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2389, file: !2)
!2392 = distinct !DISubprogram(name: "List_isEmpty_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3", linkageName: "List_isEmpty_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2393 = !DILocation(line: 0, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2392, file: !2)
!2395 = distinct !DISubprogram(name: "Inspect_dbgTag_e24838de671ca0a02270b7ec8883c848cc12fc1f1889e55bd5162493a6968118", linkageName: "Inspect_dbgTag_e24838de671ca0a02270b7ec8883c848cc12fc1f1889e55bd5162493a6968118", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2396 = !DILocation(line: 0, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2395, file: !2)
!2398 = distinct !DISubprogram(name: "Path_100_3653439360ef4d7bdac398b2927d68d6a6f82eb1a2bafbe2edf7ac6227f150", linkageName: "Path_100_3653439360ef4d7bdac398b2927d68d6a6f82eb1a2bafbe2edf7ac6227f150", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2399 = !DILocation(line: 0, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2398, file: !2)
!2401 = distinct !DISubprogram(name: "List_swap_c1becff895d98252d67f432f42e71e6c36db1525fb1c2935030e1f76862", linkageName: "List_swap_c1becff895d98252d67f432f42e71e6c36db1525fb1c2935030e1f76862", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2402 = !DILocation(line: 0, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2401, file: !2)
!2404 = !{!2405}
!2405 = distinct !{!2405, !2406, !"roc_builtins.list.swap: argument 0"}
!2406 = distinct !{!2406, !"roc_builtins.list.swap"}
!2407 = !{!2408}
!2408 = distinct !{!2408, !2409, !"list.RocList.makeUnique: argument 0"}
!2409 = distinct !{!2409, !"list.RocList.makeUnique"}
!2410 = !{!2408, !2405}
!2411 = !{!2412, !2408, !2405}
!2412 = distinct !{!2412, !2413, !"list.RocList.allocate: argument 0"}
!2413 = distinct !{!2413, !"list.RocList.allocate"}
!2414 = !DILocation(line: 0, scope: !1581, inlinedAt: !2415)
!2415 = distinct !DILocation(line: 0, scope: !2403)
!2416 = !DILocation(line: 0, scope: !885, inlinedAt: !2417)
!2417 = distinct !DILocation(line: 0, scope: !2403)
!2418 = !DILocation(line: 0, scope: !623, inlinedAt: !2419)
!2419 = distinct !DILocation(line: 0, scope: !2403)
!2420 = !DILocation(line: 0, scope: !623, inlinedAt: !2421)
!2421 = distinct !DILocation(line: 0, scope: !2403)
!2422 = !DILocation(line: 0, scope: !623, inlinedAt: !2423)
!2423 = distinct !DILocation(line: 0, scope: !2403)
!2424 = distinct !DISubprogram(name: "Parser_many_984fbdea9d2af8b6e801c4925e5aa45293b7cddc7bbefd72e1d2df61bf9d71", linkageName: "Parser_many_984fbdea9d2af8b6e801c4925e5aa45293b7cddc7bbefd72e1d2df61bf9d71", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2425 = !DILocation(line: 0, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2424, file: !2)
!2427 = distinct !DISubprogram(name: "Five_21_472151a4cc17d79113920ae20d3d07b69f69f8682198d239fb7241727fdd3e", linkageName: "Five_21_472151a4cc17d79113920ae20d3d07b69f69f8682198d239fb7241727fdd3e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2428 = !DILocation(line: 0, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2427, file: !2)
!2430 = distinct !DISubprogram(name: "List_appendUnsafe_df2d999242c7383735614c1ca7894e355776837c47b5a1272ceceba5a498db", linkageName: "List_appendUnsafe_df2d999242c7383735614c1ca7894e355776837c47b5a1272ceceba5a498db", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2431 = !DILocation(line: 0, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2430, file: !2)
!2433 = !{!2434}
!2434 = distinct !{!2434, !2435, !"roc_builtins.list.append_unsafe: argument 0"}
!2435 = distinct !{!2435, !"roc_builtins.list.append_unsafe"}
!2436 = !DILocation(line: 0, scope: !1473, inlinedAt: !2437)
!2437 = distinct !DILocation(line: 0, scope: !2432)
!2438 = distinct !DISubprogram(name: "Five_42_109527f59dc22e69fc7d12a59cfca3745c5b2db3347623de6ba9cc2a77892e1", linkageName: "Five_42_109527f59dc22e69fc7d12a59cfca3745c5b2db3347623de6ba9cc2a77892e1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2439 = !DILocation(line: 0, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2438, file: !2)
!2441 = distinct !DISubprogram(name: "Inspect_208_ff221ac7ca39f9755b47cf296610e253e715f06b6f89d9ba74e07999c9221", linkageName: "Inspect_208_ff221ac7ca39f9755b47cf296610e253e715f06b6f89d9ba74e07999c9221", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2442 = !DILocation(line: 0, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2441, file: !2)
!2444 = distinct !DISubprogram(name: "Task_attempt_5a5619cf790931c7192376a30476b7cf4ecf8b21be6e496ea8a90a18fdb354", linkageName: "Task_attempt_5a5619cf790931c7192376a30476b7cf4ecf8b21be6e496ea8a90a18fdb354", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2445 = !DILocation(line: 0, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2444, file: !2)
!2447 = distinct !DISubprogram(name: "Num_isGte_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d", linkageName: "Num_isGte_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2448 = !DILocation(line: 0, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2447, file: !2)
!2450 = distinct !DISubprogram(name: "Parser_combined_fc145ce74b45e32d63c5dc22b87822e84c8353c18391547f0431f2b1c148e", linkageName: "Parser_combined_fc145ce74b45e32d63c5dc22b87822e84c8353c18391547f0431f2b1c148e", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2451 = !DILocation(line: 0, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2450, file: !2)
!2453 = distinct !DISubprogram(name: "Path_103_66a17817c8b9c59b3b1c6efd270ac6151355288efa72859b072ffcfc36e80d2", linkageName: "Path_103_66a17817c8b9c59b3b1c6efd270ac6151355288efa72859b072ffcfc36e80d2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2454 = !DILocation(line: 0, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2453, file: !2)
!2456 = distinct !DISubprogram(name: "Parser_77_2cc36d83ca42ffd4ac2b1eb425d8dda0c5e11f62d41acff849e4e80df8026", linkageName: "Parser_77_2cc36d83ca42ffd4ac2b1eb425d8dda0c5e11f62d41acff849e4e80df8026", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2457 = !DILocation(line: 0, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2456, file: !2)
!2459 = distinct !DISubprogram(name: "Task_await_adba20621e2783b1b4e8a9e85923f48be6b39ffdde63c7f316be1a8303363", linkageName: "Task_await_adba20621e2783b1b4e8a9e85923f48be6b39ffdde63c7f316be1a8303363", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2460 = !DILocation(line: 0, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2459, file: !2)
!2462 = distinct !DISubprogram(name: "Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68", linkageName: "Dict_distAndFingerprintFromHash_7761c8128128ceb6e9a61eef6135bff7bcac2ab2ea5a7e1ad63b023aa1a8f68", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2463 = !DILocation(line: 0, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2462, file: !2)
!2465 = distinct !DISubprogram(name: "List_get_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753", linkageName: "List_get_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2466 = !DILocation(line: 0, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2465, file: !2)
!2468 = distinct !DISubprogram(name: "Num_addWrap_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b", linkageName: "Num_addWrap_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2469 = !DILocation(line: 0, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2468, file: !2)
!2471 = distinct !DISubprogram(name: "Dict_findHelper_6fdff3e812be393e397a32aeb76ae96155b45793f22c8c7f8b12de3628ba863", linkageName: "Dict_findHelper_6fdff3e812be393e397a32aeb76ae96155b45793f22c8c7f8b12de3628ba863", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2472 = !DILocation(line: 0, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2471, file: !2)
!2474 = distinct !DISubprogram(name: "Parser_52_52115f631dea3d17c0d7d9ff65a53ef4e675f1908d1049eb3ef64da4d7e5d", linkageName: "Parser_52_52115f631dea3d17c0d7d9ff65a53ef4e675f1908d1049eb3ef64da4d7e5d", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2475 = !DILocation(line: 0, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2474, file: !2)
!2477 = distinct !DISubprogram(name: "Five_checkRule_5ae1d7e830a23d381281749fd7714be9e444b8f3266bc9fb69e39667d5159b", linkageName: "Five_checkRule_5ae1d7e830a23d381281749fd7714be9e444b8f3266bc9fb69e39667d5159b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2478 = !DILocation(line: 0, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2477, file: !2)
!2480 = distinct !DISubprogram(name: "List_appendUnsafe_3bfae27b50cc70419dec89ef8da341b1287d7bb7b3c4bb2481ba28b17a8ec4", linkageName: "List_appendUnsafe_3bfae27b50cc70419dec89ef8da341b1287d7bb7b3c4bb2481ba28b17a8ec4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2481 = !DILocation(line: 0, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2480, file: !2)
!2483 = !{!2484}
!2484 = distinct !{!2484, !2485, !"roc_builtins.list.append_unsafe: argument 0"}
!2485 = distinct !{!2485, !"roc_builtins.list.append_unsafe"}
!2486 = !DILocation(line: 0, scope: !1980, inlinedAt: !2487)
!2487 = distinct !DILocation(line: 0, scope: !2482)
!2488 = distinct !DISubprogram(name: "List_isEmpty_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79", linkageName: "List_isEmpty_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2489 = !DILocation(line: 0, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2488, file: !2)
!2491 = distinct !DISubprogram(name: "Bool_structuralNotEq_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565", linkageName: "Bool_structuralNotEq_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2492 = !DILocation(line: 0, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2491, file: !2)
!2494 = distinct !DISubprogram(name: "Path_105_7cedde61e03cdc658cc4f3ee93bcb22d43ba6377e16d3385dc1646ec68353", linkageName: "Path_105_7cedde61e03cdc658cc4f3ee93bcb22d43ba6377e16d3385dc1646ec68353", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2495 = !DILocation(line: 0, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2494, file: !2)
!2497 = distinct !DISubprogram(name: "Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f", linkageName: "Bool_structuralEq_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2498 = !DILocation(line: 0, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2497, file: !2)
!2500 = distinct !DISubprogram(name: "Parser_map_7044b319d821d554360e6668147629f3b5e31e3a1bed8f16e699f54194dd", linkageName: "Parser_map_7044b319d821d554360e6668147629f3b5e31e3a1bed8f16e699f54194dd", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2501 = !DILocation(line: 0, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2500, file: !2)
!2503 = distinct !DISubprogram(name: "Result_map_63a62446a3a2e66c16f975a152d1e79ba218462d3f6c0b693f02436a685aa8", linkageName: "Result_map_63a62446a3a2e66c16f975a152d1e79ba218462d3f6c0b693f02436a685aa8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2504 = !DILocation(line: 0, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2503, file: !2)
!2506 = distinct !DISubprogram(name: "Inspect_apply_b7f585fd6f82cd9d725cedb302bc1875b5e7bb83a5ac59033a7d4152c1447", linkageName: "Inspect_apply_b7f585fd6f82cd9d725cedb302bc1875b5e7bb83a5ac59033a7d4152c1447", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2507 = !DILocation(line: 0, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2506, file: !2)
!2509 = distinct !DISubprogram(name: "List_walkHelp_583276bf45a8e97f112dfbc4f4d4d2a42a1119a510af9e76a5cba40a368d0", linkageName: "List_walkHelp_583276bf45a8e97f112dfbc4f4d4d2a42a1119a510af9e76a5cba40a368d0", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2510 = !DILocation(line: 0, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2509, file: !2)
!2512 = distinct !DISubprogram(name: "Parser_map_ab1494ad8c1013c31dbcfc142b2c6b29fe5fc5864797b5f243fa67a225278d84", linkageName: "Parser_map_ab1494ad8c1013c31dbcfc142b2c6b29fe5fc5864797b5f243fa67a225278d84", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2513 = !DILocation(line: 0, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2512, file: !2)
!2515 = distinct !DISubprogram(name: "Num_divTrunc_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2", linkageName: "Num_divTrunc_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2516 = !DILocation(line: 0, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2515, file: !2)
!2518 = distinct !DISubprogram(name: "Parser_buildPrimitiveParser_5555960d2574665268663bcbbd6b17975c35e711af9b8ea918dead31b5e3b", linkageName: "Parser_buildPrimitiveParser_5555960d2574665268663bcbbd6b17975c35e711af9b8ea918dead31b5e3b", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2519 = !DILocation(line: 0, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2518, file: !2)
!2521 = distinct !DISubprogram(name: "Inspect_apply_9aea80b84c2f1cf95fb346d143d7e8d50c7bf2b25952d5f8f5db3c06a669b1a", linkageName: "Inspect_apply_9aea80b84c2f1cf95fb346d143d7e8d50c7bf2b25952d5f8f5db3c06a669b1a", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2522 = !DILocation(line: 0, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2521, file: !2)
!2524 = distinct !DISubprogram(name: "Inspect_206_4e21185d9b1969bf58bdf4424bdf974b88cf27f21962d745feb944964dbbb33", linkageName: "Inspect_206_4e21185d9b1969bf58bdf4424bdf974b88cf27f21962d745feb944964dbbb33", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2525 = !DILocation(line: 0, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2524, file: !2)
!2527 = distinct !DISubprogram(name: "#Attr_#inc_1", linkageName: "#Attr_#inc_1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2528 = !DILocation(line: 0, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2527, file: !2)
!2530 = distinct !DISubprogram(name: "#Attr_#dec_1", linkageName: "#Attr_#dec_1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2531 = !DILocation(line: 0, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2530, file: !2)
!2533 = distinct !DISubprogram(name: "#Attr_#dec_2", linkageName: "#Attr_#dec_2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2534 = !DILocation(line: 0, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2533, file: !2)
!2536 = distinct !DISubprogram(name: "#Attr_#dec_3", linkageName: "#Attr_#dec_3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2537 = !DILocation(line: 0, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2536, file: !2)
!2539 = distinct !DISubprogram(name: "#Attr_#dec_4", linkageName: "#Attr_#dec_4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2540 = !DILocation(line: 0, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2539, file: !2)
!2542 = !DILocation(line: 0, scope: !1581, inlinedAt: !2543)
!2543 = distinct !DILocation(line: 0, scope: !2541)
!2544 = distinct !DISubprogram(name: "#Attr_#dec_5", linkageName: "#Attr_#dec_5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2545 = !DILocation(line: 0, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2544, file: !2)
!2547 = distinct !DISubprogram(name: "#Attr_#dec_6", linkageName: "#Attr_#dec_6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2548 = !DILocation(line: 0, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2547, file: !2)
!2550 = distinct !DISubprogram(name: "#Attr_#dec_7", linkageName: "#Attr_#dec_7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2551 = !DILocation(line: 0, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2550, file: !2)
!2553 = !DILocation(line: 0, scope: !1084, inlinedAt: !2554)
!2554 = distinct !DILocation(line: 0, scope: !2552)
!2555 = distinct !DISubprogram(name: "#Attr_#dec_8", linkageName: "#Attr_#dec_8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2556 = !DILocation(line: 0, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2555, file: !2)
!2558 = distinct !DISubprogram(name: "#Attr_#inc_5", linkageName: "#Attr_#inc_5", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2559 = !DILocation(line: 0, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2558, file: !2)
!2561 = distinct !DISubprogram(name: "#Attr_#inc_7", linkageName: "#Attr_#inc_7", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2562 = !DILocation(line: 0, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2561, file: !2)
!2564 = distinct !DISubprogram(name: "#Attr_#dec_9", linkageName: "#Attr_#dec_9", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2565 = !DILocation(line: 0, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2564, file: !2)
!2567 = distinct !DISubprogram(name: "#Attr_#dec_10", linkageName: "#Attr_#dec_10", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2568 = !DILocation(line: 0, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2567, file: !2)
!2570 = distinct !DISubprogram(name: "#Attr_#dec_11", linkageName: "#Attr_#dec_11", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2571 = !DILocation(line: 0, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2570, file: !2)
!2573 = distinct !DISubprogram(name: "#Attr_#dec_12", linkageName: "#Attr_#dec_12", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2574 = !DILocation(line: 0, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2573, file: !2)
!2576 = distinct !DISubprogram(name: "#Attr_#dec_13", linkageName: "#Attr_#dec_13", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2577 = !DILocation(line: 0, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2576, file: !2)
!2579 = distinct !DISubprogram(name: "decrement_refcounted_ptr_8", linkageName: "decrement_refcounted_ptr_8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2580 = !DILocation(line: 0, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2579, file: !2)
!2582 = distinct !DISubprogram(name: "#Attr_#inc_12", linkageName: "#Attr_#inc_12", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2583 = !DILocation(line: 0, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2582, file: !2)
!2585 = distinct !DISubprogram(name: "#Attr_#inc_11", linkageName: "#Attr_#inc_11", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2586 = !DILocation(line: 0, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2585, file: !2)
!2588 = distinct !DISubprogram(name: "#Attr_#inc_13", linkageName: "#Attr_#inc_13", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2589 = !DILocation(line: 0, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2588, file: !2)
!2591 = distinct !DISubprogram(name: "#Attr_#inc_8", linkageName: "#Attr_#inc_8", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2592 = !DILocation(line: 0, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2591, file: !2)
!2594 = distinct !DISubprogram(name: "#Attr_#inc_3", linkageName: "#Attr_#inc_3", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2595 = !DILocation(line: 0, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2594, file: !2)
!2597 = distinct !DISubprogram(name: "#Attr_#inc_17", linkageName: "#Attr_#inc_17", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2598 = !DILocation(line: 0, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2597, file: !2)
!2600 = distinct !DISubprogram(name: "#Attr_#inc_18", linkageName: "#Attr_#inc_18", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2601 = !DILocation(line: 0, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2600, file: !2)
!2603 = distinct !DISubprogram(name: "#Attr_#inc_19", linkageName: "#Attr_#inc_19", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2604 = !DILocation(line: 0, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2603, file: !2)
!2606 = distinct !DISubprogram(name: "#Attr_#inc_20", linkageName: "#Attr_#inc_20", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2607 = !DILocation(line: 0, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2606, file: !2)
!2609 = distinct !DISubprogram(name: "#Attr_#inc_21", linkageName: "#Attr_#inc_21", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2610 = !DILocation(line: 0, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2609, file: !2)
!2612 = distinct !DISubprogram(name: "#Attr_#dec_22", linkageName: "#Attr_#dec_22", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2613 = !DILocation(line: 0, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2612, file: !2)
!2615 = distinct !DISubprogram(name: "#Attr_#dec_23", linkageName: "#Attr_#dec_23", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2616 = !DILocation(line: 0, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2615, file: !2)
!2618 = distinct !DISubprogram(name: "#Attr_#dec_17", linkageName: "#Attr_#dec_17", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2619 = !DILocation(line: 0, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2618, file: !2)
!2621 = distinct !DISubprogram(name: "#Attr_#dec_18", linkageName: "#Attr_#dec_18", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2622 = !DILocation(line: 0, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2621, file: !2)
!2624 = distinct !DISubprogram(name: "#Attr_#dec_19", linkageName: "#Attr_#dec_19", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2625 = !DILocation(line: 0, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2624, file: !2)
!2627 = distinct !DISubprogram(name: "#Attr_#dec_20", linkageName: "#Attr_#dec_20", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2628 = !DILocation(line: 0, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2627, file: !2)
!2630 = distinct !DISubprogram(name: "#Attr_#dec_21", linkageName: "#Attr_#dec_21", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2631 = !DILocation(line: 0, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2630, file: !2)
!2633 = distinct !DISubprogram(name: "#Attr_#inc_24", linkageName: "#Attr_#inc_24", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2634 = !DILocation(line: 0, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2633, file: !2)
!2636 = distinct !DISubprogram(name: "#Attr_#inc_25", linkageName: "#Attr_#inc_25", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2637 = !DILocation(line: 0, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2636, file: !2)
!2639 = distinct !DISubprogram(name: "#Attr_#dec_24", linkageName: "#Attr_#dec_24", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2640 = !DILocation(line: 0, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2639, file: !2)
!2642 = distinct !DISubprogram(name: "#Attr_#dec_25", linkageName: "#Attr_#dec_25", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2643 = !DILocation(line: 0, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2642, file: !2)
!2645 = distinct !DISubprogram(name: "#Attr_#inc_6", linkageName: "#Attr_#inc_6", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2646 = !DILocation(line: 0, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2645, file: !2)
!2648 = distinct !DISubprogram(name: "#Attr_#inc_26", linkageName: "#Attr_#inc_26", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2649 = !DILocation(line: 0, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2648, file: !2)
!2651 = distinct !DISubprogram(name: "#Attr_#inc_29", linkageName: "#Attr_#inc_29", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2652 = !DILocation(line: 0, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2651, file: !2)
!2654 = distinct !DISubprogram(name: "#Attr_#inc_2", linkageName: "#Attr_#inc_2", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2655 = !DILocation(line: 0, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2654, file: !2)
!2657 = distinct !DISubprogram(name: "#Attr_#inc_4", linkageName: "#Attr_#inc_4", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2658 = !DILocation(line: 0, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2657, file: !2)
!2660 = distinct !DISubprogram(name: "#Attr_#dec_26", linkageName: "#Attr_#dec_26", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2661 = !DILocation(line: 0, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2660, file: !2)
!2663 = distinct !DISubprogram(name: "#Attr_#dec_32", linkageName: "#Attr_#dec_32", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2664 = !DILocation(line: 0, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2663, file: !2)
!2666 = distinct !DISubprogram(name: "#Attr_#dec_33", linkageName: "#Attr_#dec_33", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2667 = !DILocation(line: 0, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2666, file: !2)
!2669 = distinct !DISubprogram(name: "#Attr_#dec_34", linkageName: "#Attr_#dec_34", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2670 = !DILocation(line: 0, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2669, file: !2)
!2672 = distinct !DISubprogram(name: "#Attr_#dec_35", linkageName: "#Attr_#dec_35", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2673 = !DILocation(line: 0, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2672, file: !2)
!2675 = distinct !DISubprogram(name: "#Attr_#dec_36", linkageName: "#Attr_#dec_36", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2676 = !DILocation(line: 0, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2675, file: !2)
!2678 = distinct !DISubprogram(name: "#Attr_#dec_37", linkageName: "#Attr_#dec_37", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2679 = !DILocation(line: 0, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2678, file: !2)
!2681 = distinct !DISubprogram(name: "#Attr_#dec_38", linkageName: "#Attr_#dec_38", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2682 = !DILocation(line: 0, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2681, file: !2)
!2684 = !DILocation(line: 0, scope: !2685, inlinedAt: !2687)
!2685 = distinct !DILexicalBlock(scope: !2686, file: !2)
!2686 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_9_dec", linkageName: "#Attr_#generic_rc_by_ref_9_dec", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2687 = distinct !DILocation(line: 0, scope: !2683)
!2688 = distinct !DISubprogram(name: "#Attr_#inc_39", linkageName: "#Attr_#inc_39", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2689 = !DILocation(line: 0, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2688, file: !2)
!2691 = distinct !DISubprogram(name: "#Attr_#inc_40", linkageName: "#Attr_#inc_40", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2692 = !DILocation(line: 0, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2691, file: !2)
!2694 = distinct !DISubprogram(name: "#Attr_#inc_36", linkageName: "#Attr_#inc_36", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2695 = !DILocation(line: 0, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2694, file: !2)
!2697 = distinct !DISubprogram(name: "#Attr_#inc_37", linkageName: "#Attr_#inc_37", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2698 = !DILocation(line: 0, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2697, file: !2)
!2700 = distinct !DISubprogram(name: "#Attr_#dec_39", linkageName: "#Attr_#dec_39", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2701 = !DILocation(line: 0, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2700, file: !2)
!2703 = !DILocation(line: 0, scope: !2704, inlinedAt: !2706)
!2704 = distinct !DILexicalBlock(scope: !2705, file: !2)
!2705 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_10_dec", linkageName: "#Attr_#generic_rc_by_ref_10_dec", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2706 = distinct !DILocation(line: 0, scope: !2702)
!2707 = distinct !DISubprogram(name: "#Attr_#dec_40", linkageName: "#Attr_#dec_40", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2708 = !DILocation(line: 0, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2707, file: !2)
!2710 = distinct !DISubprogram(name: "#Attr_#list_eq_1", linkageName: "#Attr_#list_eq_1", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2711 = !DILocation(line: 0, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2710, file: !2)
!2713 = distinct !DISubprogram(name: "#Attr_#dec_42", linkageName: "#Attr_#dec_42", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2714 = !DILocation(line: 0, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2713, file: !2)
!2716 = distinct !DISubprogram(name: "#Attr_#inc_43", linkageName: "#Attr_#inc_43", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2717 = !DILocation(line: 0, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2716, file: !2)
!2719 = distinct !DISubprogram(name: "#Attr_#inc_44", linkageName: "#Attr_#inc_44", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2720 = !DILocation(line: 0, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2719, file: !2)
!2722 = distinct !DISubprogram(name: "#Attr_#inc_45", linkageName: "#Attr_#inc_45", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2723 = !DILocation(line: 0, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2722, file: !2)
!2725 = distinct !DISubprogram(name: "#Attr_#dec_46", linkageName: "#Attr_#dec_46", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2726 = !DILocation(line: 0, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2725, file: !2)
!2728 = distinct !DISubprogram(name: "#Attr_#dec_47", linkageName: "#Attr_#dec_47", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2729 = !DILocation(line: 0, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2728, file: !2)
!2731 = distinct !DISubprogram(name: "#Attr_#dec_43", linkageName: "#Attr_#dec_43", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2732 = !DILocation(line: 0, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2731, file: !2)
!2734 = distinct !DISubprogram(name: "#Attr_#dec_44", linkageName: "#Attr_#dec_44", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2735 = !DILocation(line: 0, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2734, file: !2)
!2737 = distinct !DISubprogram(name: "#Attr_#dec_45", linkageName: "#Attr_#dec_45", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2738 = !DILocation(line: 0, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !2737, file: !2)
!2740 = !DILocation(line: 0, scope: !1980)
!2741 = distinct !DISubprogram(name: "#Attr_#inc_38", linkageName: "#Attr_#inc_38", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2742 = !DILocation(line: 0, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2741, file: !2)
!2744 = distinct !DISubprogram(name: "#Attr_#dec_29", linkageName: "#Attr_#dec_29", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2745 = !DILocation(line: 0, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2744, file: !2)
!2747 = distinct !DISubprogram(name: "#Attr_#inc_48", linkageName: "#Attr_#inc_48", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2748 = !DILocation(line: 0, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2747, file: !2)
!2750 = distinct !DISubprogram(name: "#Attr_#dec_49", linkageName: "#Attr_#dec_49", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2751 = !DILocation(line: 0, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2750, file: !2)
!2753 = distinct !DISubprogram(name: "#Attr_#dec_50", linkageName: "#Attr_#dec_50", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2754 = !DILocation(line: 0, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2753, file: !2)
!2756 = distinct !DISubprogram(name: "#Attr_#dec_48", linkageName: "#Attr_#dec_48", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2757 = !DILocation(line: 0, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2756, file: !2)
!2759 = distinct !DISubprogram(name: "Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6_compare_wrapper", linkageName: "Five_87_36a87c8e09ffc576a88b6b1f0edd11a1f8c22b8ee7d1720f4f53fef11132a6_compare_wrapper", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2760 = !DILocation(line: 0, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2759, file: !2)
!2762 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_11_inc_n", linkageName: "#Attr_#generic_rc_by_ref_11_inc_n", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2763 = !DILocation(line: 0, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2762, file: !2)
!2765 = distinct !DISubprogram(name: "#Attr_#inc_32", linkageName: "#Attr_#inc_32", scope: !2, file: !2, type: !574, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !577)
!2766 = !DILocation(line: 0, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2765, file: !2)
